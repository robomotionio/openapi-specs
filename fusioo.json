{
  "openapi": "3.0.0",
  "info": {
    "title": "Fusioo",
    "version": "1.0",
    "x-logo": {
      "url": "https://logo.clearbit.com/fusioo.com"
    },
    "description": "An all-in-one workspace that works the way you do.\n\nCreate your custom online database, get rid of numerous spreadsheets and manage anything that is important to your business, in one place. "
  },
  "servers": [
    {
      "url": "https://api.fusioo.com/v3"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "summary": "Ping",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {}
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-ping",
        "description": "Used to verify the authentication credentials users provide when they first use your application. If the response returns a 200 status code, the credentials are valid."
      }
    },
    "/records/apps/{app_id}/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/app_id"
        }
      ],
      "get": {
        "summary": "Record Count",
        "tags": [
          "records"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "count"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "count": 1205
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "count": 1205
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Errors"
          },
          "404": {
            "$ref": "#/components/responses/Errors"
          }
        },
        "operationId": "get-records-apps-app_id-count",
        "description": "\n\nUsed to get the number of records in an App."
      }
    },
    "/records/apps/{app_id}/count/filter": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "records"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "count"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "count": 25
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-records-apps-app_id-count-filter",
        "description": "Used to get the number of records in an App that match a specified filter. For a list of available conditions for filters, click here.",
        "requestBody": {
          "$ref": "#/components/requestBodies/Filter"
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/app_id"
        }
      ]
    },
    "/records/apps/{app_id}": {
      "post": {
        "summary": "Create Record",
        "operationId": "post-records-apps-app_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "i59adb",
                        "title": "Start using the API"
                      }
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "title": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "i59adb",
                        "title": "Start using the API"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new record in a specific Fusioo App. To successfully create the record, the authenticated user must have create access for that App. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "title": "Start using the API",
                    "notes": "Go through the Fusioo API documentation to get familiar with what can be achieved.",
                    "priority": [
                      "High"
                    ],
                    "due_date": "2016-09-30",
                    "responsible": [
                      "Lauren Moss"
                    ],
                    "status": [
                      "In progress"
                    ]
                  }
                },
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 1
                  },
                  "notes": {
                    "type": "string",
                    "minLength": 1
                  },
                  "priority": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "due_date": {
                    "type": "string",
                    "minLength": 1
                  },
                  "responsible": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "status": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "title": "Start using the API",
                    "notes": "Go through the Fusioo API documentation to get familiar with what can be achieved.",
                    "priority": [
                      "High"
                    ],
                    "due_date": "2016-09-30",
                    "responsible": [
                      "Lauren Moss"
                    ],
                    "status": [
                      "In progress"
                    ]
                  }
                }
              }
            }
          },
          "description": "The request body should contain the record to be created in JSON format. For more information on the accepted format for different Field Types, check out the [Field Types](https://www.fusioo.com/guide/api-resources-reference-list#api-field) section. "
        },
        "tags": [
          "records"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/app_id"
        }
      ],
      "get": {
        "summary": "Get Records",
        "operationId": "get-records-apps-app_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "id": "i5d3b0",
                          "title": "Another Task",
                          "notes": "Notes on this important Task.",
                          "priority": [
                            "Critical"
                          ],
                          "due_date": "2016-09-24",
                          "responsible": [
                            "Charlotte Smith"
                          ],
                          "status": [
                            "In progress"
                          ],
                          "created": "2016-09-19T20:09:34",
                          "last_modified": "2016-09-22T22:02:17",
                          "created_by": [
                            "John Doe"
                          ],
                          "last_modified_by": [
                            "John Doe"
                          ]
                        },
                        {
                          "id": "i59adb",
                          "title": "Start using the API",
                          "notes": "Go through the Fusioo API documentation to get familiar with what can be achieved.",
                          "priority": [
                            "High"
                          ],
                          "due_date": "2016-09-30",
                          "responsible": [
                            "Lauren Moss"
                          ],
                          "status": [
                            "In progress"
                          ],
                          "created": "2016-09-23T20:07:12",
                          "last_modified": "2016-09-23T20:07:12",
                          "created_by": [
                            "John Doe"
                          ],
                          "last_modified_by": [
                            "John Doe"
                          ]
                        }
                      ]
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "id": "i5d3b0",
                          "title": "Another Task",
                          "notes": "Notes on this important Task.",
                          "priority": [
                            "Critical"
                          ],
                          "due_date": "2016-09-24",
                          "responsible": [
                            "Charlotte Smith"
                          ],
                          "status": [
                            "In progress"
                          ],
                          "created": "2016-09-19T20:09:34",
                          "last_modified": "2016-09-22T22:02:17",
                          "created_by": [
                            "John Doe"
                          ],
                          "last_modified_by": [
                            "John Doe"
                          ]
                        },
                        {
                          "id": "i59adb",
                          "title": "Start using the API",
                          "notes": "Go through the Fusioo API documentation to get familiar with what can be achieved.",
                          "priority": [
                            "High"
                          ],
                          "due_date": "2016-09-30",
                          "responsible": [
                            "Lauren Moss"
                          ],
                          "status": [
                            "In progress"
                          ],
                          "created": "2016-09-23T20:07:12",
                          "last_modified": "2016-09-23T20:07:12",
                          "created_by": [
                            "John Doe"
                          ],
                          "last_modified_by": [
                            "John Doe"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Used to retrieve all records in a specific App. The Fields and records included in the response object depend on the access settings of the authenticated user. ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort_by",
            "description": "The Field which is used to sort the retrieved records. The value should contain the Field Id. When left empty, the Key Field is used to sort the records."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            },
            "in": "query",
            "name": "order",
            "description": "The sort direction. Accepts asc or desc. Default value: asc."
          },
          {
            "schema": {
              "type": "integer",
              "example": "0"
            },
            "in": "query",
            "name": "offset",
            "description": "By specifying an offset, you retrieve a subset of objects starting with the offset value. The 10th record is at offset 9. Default value: 0."
          },
          {
            "schema": {
              "type": "integer",
              "example": "200",
              "minLength": 0,
              "maxLength": 200
            },
            "in": "query",
            "name": "limit",
            "description": "How many records should be retrieved. Accepts any value between 0 and 200. Default value: 200."
          }
        ],
        "tags": [
          "records"
        ]
      }
    },
    "/records/{record_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/record_id"
        }
      ],
      "get": {
        "summary": "Get Record",
        "tags": [
          "records"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "notes": {
                          "type": "string",
                          "minLength": 1
                        },
                        "priority": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        },
                        "due_date": {
                          "type": "string",
                          "minLength": 1
                        },
                        "responsible": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        },
                        "status": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        },
                        "created": {
                          "type": "string",
                          "minLength": 1
                        },
                        "last_modified": {
                          "type": "string",
                          "minLength": 1
                        },
                        "created_by": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        },
                        "last_modified_by": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "notes",
                        "priority",
                        "due_date",
                        "responsible",
                        "status",
                        "created",
                        "last_modified",
                        "created_by",
                        "last_modified_by"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "i59adb",
                        "title": "Start using the API",
                        "notes": "Go through the Fusioo API documentation to get familiar with what can be achieved.",
                        "priority": [
                          "High"
                        ],
                        "due_date": "2016-09-30",
                        "responsible": [
                          "Lauren Moss"
                        ],
                        "status": [
                          "In progress"
                        ],
                        "created": "2016-09-23T20:07:12",
                        "last_modified": "2016-09-23T20:07:12",
                        "created_by": [
                          "John Doe"
                        ],
                        "last_modified_by": [
                          "John Doe"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "i59adb",
                        "title": "Start using the API",
                        "notes": "Go through the Fusioo API documentation to get familiar with what can be achieved.",
                        "priority": [
                          "High"
                        ],
                        "due_date": "2016-09-30",
                        "responsible": [
                          "Lauren Moss"
                        ],
                        "status": [
                          "In progress"
                        ],
                        "created": "2016-09-23T20:07:12",
                        "last_modified": "2016-09-23T20:07:12",
                        "created_by": [
                          "John Doe"
                        ],
                        "last_modified_by": [
                          "John Doe"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-records-record_id",
        "description": "Used to retrieve the details of a specific record in Fusioo. The Fields included in the response object depend on the access settings of the authenticated user. "
      },
      "put": {
        "summary": "Update record",
        "operationId": "put-records-record_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {}
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "records"
        ],
        "description": "Updates an existing Fusioo record. To successfully update the record, the authenticated user must have update access to the App and the newly updated Fields. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "priority": [
                      "Normal"
                    ],
                    "status": [
                      "Done"
                    ]
                  }
                },
                "properties": {
                  "priority": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "status": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "priority": [
                      "Normal"
                    ],
                    "status": [
                      "Done"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete record",
        "operationId": "delete-records-record_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {}
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "records"
        ],
        "description": "Deletes an existing Fusioo record. To successfully delete the record, the authenticated user must have delete access for the App in which the record is found."
      }
    },
    "/records/apps/{app_id}/filter": {
      "parameters": [
        {
          "$ref": "#/components/parameters/app_id"
        }
      ],
      "post": {
        "summary": "Get Records (filter)",
        "operationId": "post-records-apps-app_id-filter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "id": "i5d3b0",
                          "title": "Another Task",
                          "notes": "Notes on this important Task.",
                          "priority": [
                            "Critical"
                          ],
                          "due_date": "2016-09-24",
                          "responsible": [
                            "Charlotte Smith"
                          ],
                          "status": [
                            "In progress"
                          ],
                          "approved": true,
                          "created": "2016-09-19T20:09:34",
                          "last_modified": "2016-09-22T22:02:17",
                          "created_by": [
                            "John Doe"
                          ],
                          "last_modified_by": [
                            "John Doe"
                          ]
                        },
                        {
                          "id": "i59adb",
                          "title": "Start using the API",
                          "notes": "Go through the Fusioo API documentation to get familiar with what can be achieved.",
                          "priority": [
                            "High"
                          ],
                          "due_date": "2016-09-30",
                          "responsible": [
                            "Lauren Moss"
                          ],
                          "status": [
                            "In progress"
                          ],
                          "approved": true,
                          "created": "2016-09-23T20:07:12",
                          "last_modified": "2016-09-23T20:07:12",
                          "created_by": [
                            "John Doe"
                          ],
                          "last_modified_by": [
                            "John Doe"
                          ]
                        }
                      ]
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "id": "i5d3b0",
                          "title": "Another Task",
                          "notes": "Notes on this important Task.",
                          "priority": [
                            "Critical"
                          ],
                          "due_date": "2016-09-24",
                          "responsible": [
                            "Charlotte Smith"
                          ],
                          "status": [
                            "In progress"
                          ],
                          "approved": true,
                          "created": "2016-09-19T20:09:34",
                          "last_modified": "2016-09-22T22:02:17",
                          "created_by": [
                            "John Doe"
                          ],
                          "last_modified_by": [
                            "John Doe"
                          ]
                        },
                        {
                          "id": "i59adb",
                          "title": "Start using the API",
                          "notes": "Go through the Fusioo API documentation to get familiar with what can be achieved.",
                          "priority": [
                            "High"
                          ],
                          "due_date": "2016-09-30",
                          "responsible": [
                            "Lauren Moss"
                          ],
                          "status": [
                            "In progress"
                          ],
                          "approved": true,
                          "created": "2016-09-23T20:07:12",
                          "last_modified": "2016-09-23T20:07:12",
                          "created_by": [
                            "John Doe"
                          ],
                          "last_modified_by": [
                            "John Doe"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Used to retrieve a set of records in an App, based on the filter conditions added to the request body.\n\nThe Fields and records included in the response object depend on the access settings of the authenticated user.",
        "requestBody": {
          "$ref": "#/components/requestBodies/Filter"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/sort_by"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "tags": [
          "records"
        ]
      }
    },
    "/apps": {
      "get": {
        "summary": "Get Apps",
        "tags": [
          "apps"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "name": "Clients",
                          "id": "i502fb",
                          "single_record_name": "Client",
                          "fields": [
                            {
                              "id": "name",
                              "name": "Name",
                              "type": "text",
                              "is_required": true,
                              "can_update": true,
                              "options": {}
                            },
                            {
                              "id": "website",
                              "name": "Website",
                              "type": "web_url",
                              "is_required": false,
                              "can_update": true,
                              "options": {}
                            },
                            {
                              "id": "contact_info",
                              "name": "Contact info",
                              "type": "text",
                              "is_required": false,
                              "can_update": true,
                              "options": {}
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "single_record_name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "fields": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "name": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "type": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "is_required": {
                                  "type": "boolean"
                                },
                                "can_update": {
                                  "type": "boolean"
                                },
                                "options": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "name": "Clients",
                          "id": "i502fb",
                          "single_record_name": "Client",
                          "fields": [
                            {
                              "id": "name",
                              "name": "Name",
                              "type": "text",
                              "is_required": true,
                              "can_update": true,
                              "options": {}
                            },
                            {
                              "id": "website",
                              "name": "Website",
                              "type": "web_url",
                              "is_required": false,
                              "can_update": true,
                              "options": {}
                            },
                            {
                              "id": "contact_info",
                              "name": "Contact info",
                              "type": "text",
                              "is_required": false,
                              "can_update": true,
                              "options": {}
                            }
                          ]
                        },
                        {
                          "name": "Tasks",
                          "id": "ia4f42",
                          "single_record_name": "Task",
                          "fields": [
                            {
                              "id": "title",
                              "name": "Title",
                              "type": "text",
                              "is_required": true,
                              "can_update": true,
                              "options": {
                                "help_message": "Insert the Task title"
                              }
                            },
                            {
                              "id": "priority",
                              "name": "Priority",
                              "type": "list",
                              "is_required": false,
                              "can_update": true,
                              "options": {
                                "items": [
                                  "Low",
                                  "Normal",
                                  "High",
                                  "Critical"
                                ],
                                "default": "Normal",
                                "allow_multiple": false
                              }
                            },
                            {
                              "id": "due_date",
                              "name": "Due date",
                              "type": "date",
                              "is_required": false,
                              "can_update": true,
                              "options": {}
                            },
                            {
                              "id": "responsible",
                              "name": "Responsible",
                              "type": "user_link",
                              "is_required": false,
                              "can_update": true,
                              "options": {
                                "items": [
                                  "John Doe",
                                  "Sarah May",
                                  "Charlotte Smith",
                                  "Lauren Moss",
                                  "Ellie Brooks"
                                ],
                                "allow_multiple": false,
                                "auto_subscribe": true
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-apps",
        "description": "Retrieves the information of all Apps in the authenticated user's workspace. Apps are retrieved depending on the authenticated user’s Role permissions. "
      }
    },
    "/apps/{app_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/app_id"
        }
      ],
      "get": {
        "summary": "Get App",
        "tags": [
          "apps"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "name": "Tasks",
                        "id": "ia4f42",
                        "single_record_name": "Task",
                        "fields": [
                          {
                            "id": "title",
                            "name": "Title",
                            "type": "text",
                            "is_required": true,
                            "can_update": true,
                            "options": {
                              "help_message": "Insert the Task title"
                            }
                          },
                          {
                            "id": "priority",
                            "name": "Priority",
                            "type": "list",
                            "is_required": false,
                            "can_update": true,
                            "options": {
                              "items": [
                                "Low",
                                "Normal",
                                "High",
                                "Critical"
                              ],
                              "default": "Normal",
                              "allow_multiple": false
                            }
                          },
                          {
                            "id": "due_date",
                            "name": "Due date",
                            "type": "date",
                            "is_required": false,
                            "can_update": true,
                            "options": {}
                          },
                          {
                            "id": "responsible",
                            "name": "Responsible",
                            "type": "user_link",
                            "is_required": false,
                            "can_update": true,
                            "options": {
                              "items": [
                                "John Doe",
                                "Sarah May",
                                "Charlotte Smith",
                                "Lauren Moss",
                                "Ellie Brooks"
                              ],
                              "allow_multiple": false,
                              "auto_subscribe": true
                            }
                          }
                        ]
                      }
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "name": "Tasks",
                        "id": "ia4f42",
                        "single_record_name": "Task",
                        "fields": [
                          {
                            "id": "title",
                            "name": "Title",
                            "type": "text",
                            "is_required": true,
                            "can_update": true,
                            "options": {
                              "help_message": "Insert the Task title"
                            }
                          },
                          {
                            "id": "priority",
                            "name": "Priority",
                            "type": "list",
                            "is_required": false,
                            "can_update": true,
                            "options": {
                              "items": [
                                "Low",
                                "Normal",
                                "High",
                                "Critical"
                              ],
                              "default": "Normal",
                              "allow_multiple": false
                            }
                          },
                          {
                            "id": "due_date",
                            "name": "Due date",
                            "type": "date",
                            "is_required": false,
                            "can_update": true,
                            "options": {}
                          },
                          {
                            "id": "responsible",
                            "name": "Responsible",
                            "type": "user_link",
                            "is_required": false,
                            "can_update": true,
                            "options": {
                              "items": [
                                "John Doe",
                                "Sarah May",
                                "Charlotte Smith",
                                "Lauren Moss",
                                "Ellie Brooks"
                              ],
                              "allow_multiple": false,
                              "auto_subscribe": true
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-apps-app_id"
      }
    },
    "/discussions/records/{record_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/record_id"
        }
      ],
      "post": {
        "summary": "Create discussion",
        "tags": [
          "discussions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "id69f",
                        "content": "Can you look at this <mention uid=\"i7381c\">@Penelope Cruz</mention>?",
                        "comments": [],
                        "files": [
                          "i2b614"
                        ],
                        "created_on": "2019-08-25T14:43:52",
                        "created_by": "Ryan Smith"
                      }
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "id69f",
                        "content": "Can you look at this <mention uid=\"i7381c\">@Penelope Cruz</mention>?",
                        "comments": [],
                        "files": [
                          "i2b614"
                        ],
                        "created_on": "2019-08-25T14:43:52",
                        "created_by": "Ryan Smith"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-discussions-records-record_id",
        "description": "Creates a new discussion in a specific record.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "required": [],
                      "properties": {}
                    }
                  }
                },
                "required": [
                  "content",
                  "files"
                ],
                "x-examples": {
                  "example-1": {
                    "content": "Can you look at this <mention uid=\"i7381c\">@Penelope Cruz</mention>?",
                    "files": [
                      "i2b614"
                    ]
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "content": "Can you look at this <mention uid=\"i7381c\">@Penelope Cruz</mention>?",
                    "files": [
                      "i2b614"
                    ]
                  }
                }
              }
            }
          },
          "description": "- The request body should contain the content of the discussion to be created in JSON format.\n- Files can be added to a discussion by adding the \"files\":[\"fileId\"] to the JSON object.\n\nThe discussions can also contain user mentions. For this, you need to use a specific format - <mention uid=\\\"userId\\\">@username</mention>\n"
        }
      },
      "get": {
        "summary": "Get Discussions",
        "operationId": "get-discussions-records-record_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "id": "i5739",
                          "content": "Discussion content",
                          "comments": [],
                          "files": [],
                          "created_on": "2019-08-27T15:57:33",
                          "created_by": "Matt Smith"
                        },
                        {
                          "id": "id69f",
                          "content": "Another discussion",
                          "comments": [],
                          "files": [],
                          "created_on": "2019-08-25T23:43:52",
                          "created_by": "Penelope Cruz"
                        }
                      ]
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "id": "i5739",
                          "content": "Discussion content",
                          "comments": [],
                          "files": [],
                          "created_on": "2019-08-27T15:57:33",
                          "created_by": "Matt Smith"
                        },
                        {
                          "id": "id69f",
                          "content": "Another discussion",
                          "comments": [],
                          "files": [],
                          "created_on": "2019-08-25T23:43:52",
                          "created_by": "Penelope Cruz"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/sort_by"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "description": "Used to retrieve a list of discussions on a record.",
        "tags": [
          "discussions"
        ]
      }
    },
    "/discussions/{discussion_id}": {
      "get": {
        "summary": "Get Discussion",
        "tags": [
          "discussions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "i59adb",
                        "content": "This is the content of the discussion",
                        "comments": [
                          {
                            "id": "i7543",
                            "content": "This is a comment on this discussion",
                            "files": [],
                            "created_on": "2019-08-27T13:42:51",
                            "created_by": "Chris Mason"
                          },
                          {
                            "id": "i50cb",
                            "content": "This is another comment on this discussion",
                            "files": [],
                            "created_on": "2019-08-27T14:47:54",
                            "created_by": "Penelope Cruz"
                          }
                        ],
                        "files": [],
                        "created_on": "2019-08-25T14:43:52",
                        "created_by": "Chris Mason"
                      }
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "i59adb",
                        "content": "This is the content of the discussion",
                        "comments": [
                          {
                            "id": "i7543",
                            "content": "This is a comment on this discussion",
                            "files": [],
                            "created_on": "2019-08-27T13:42:51",
                            "created_by": "Chris Mason"
                          },
                          {
                            "id": "i50cb",
                            "content": "This is another comment on this discussion",
                            "files": [],
                            "created_on": "2019-08-27T14:47:54",
                            "created_by": "Penelope Cruz"
                          }
                        ],
                        "files": [],
                        "created_on": "2019-08-25T14:43:52",
                        "created_by": "Chris Mason"
                      }
                    }
                  }
                }
              }
            }
          },
          "": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "content": {
                          "type": "string",
                          "minLength": 1
                        },
                        "comments": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "required": [
                              "id",
                              "content",
                              "created_on",
                              "created_by"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1
                              },
                              "content": {
                                "type": "string",
                                "minLength": 1
                              },
                              "files": {
                                "type": "array",
                                "items": {
                                  "required": [],
                                  "properties": {}
                                }
                              },
                              "created_on": {
                                "type": "string",
                                "minLength": 1
                              },
                              "created_by": {
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          }
                        },
                        "files": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        },
                        "created_on": {
                          "type": "string",
                          "minLength": 1
                        },
                        "created_by": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "id",
                        "content",
                        "comments",
                        "files",
                        "created_on",
                        "created_by"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "i59adb",
                        "content": "This is the content of the discussion",
                        "comments": [
                          {
                            "id": "i7543",
                            "content": "This is a comment on this discussion",
                            "files": [],
                            "created_on": "2019-08-27T13:42:51",
                            "created_by": "Chris Mason"
                          },
                          {
                            "id": "i50cb",
                            "content": "This is another comment on this discussion",
                            "files": [],
                            "created_on": "2019-08-27T14:47:54",
                            "created_by": "Penelope Cruz"
                          }
                        ],
                        "files": [],
                        "created_on": "2019-08-25T14:43:52",
                        "created_by": "Chris Mason"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-discussions",
        "description": "Used to retrieve the details of a specific record discussion in Fusioo."
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/discussion_id"
        }
      ],
      "delete": {
        "summary": "Delete Discussion",
        "operationId": "delete-discussions-discussion_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {}
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {}
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Deletes an existing Fusioo discussion. Only the owner of the discussion can delete it.",
        "tags": [
          "discussions"
        ]
      }
    },
    "/comments/discussions/{discussion_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/discussion_id"
        }
      ],
      "post": {
        "summary": "",
        "operationId": "post-comments-discussions-discussion_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "content": {
                          "type": "string",
                          "minLength": 1
                        },
                        "files": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        },
                        "created_on": {
                          "type": "string",
                          "minLength": 1
                        },
                        "created_by": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "id",
                        "content",
                        "files",
                        "created_on",
                        "created_by"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "id69f",
                        "content": "Can you look at this <mention uid=\"i7381c\">@Penelope Cruz</mention>?",
                        "files": [
                          "i2b614"
                        ],
                        "created_on": "2019-08-25T14:45:52",
                        "created_by": "Ryan Smith"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "id69f",
                        "content": "Can you look at this <mention uid=\"i7381c\">@Penelope Cruz</mention>?",
                        "files": [
                          "i2b614"
                        ],
                        "created_on": "2019-08-25T14:45:52",
                        "created_by": "Ryan Smith"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "required": [],
                      "properties": {}
                    }
                  }
                },
                "required": [
                  "content",
                  "files"
                ],
                "x-examples": {
                  "example-1": {
                    "content": "Can you look at this <mention uid=\"i7381c\">@Penelope Cruz</mention>?",
                    "files": [
                      "i2b614"
                    ]
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "content": "Can you look at this <mention uid=\"i7381c\">@Penelope Cruz</mention>?",
                    "files": [
                      "i2b614"
                    ]
                  }
                }
              }
            }
          },
          "description": "- The request body should contain the content of the discussion to be created in JSON format.\n- Files can be added to a discussion by adding the \"files\":[\"fileId\"] to the JSON object.\n\nThe discussions can also contain user mentions. For this, you need to use a specific format - <mention uid=\\\"userId\\\">@username</mention>\n"
        },
        "tags": [
          "discussions"
        ],
        "description": "Creates a new comment in a specific discussion."
      }
    },
    "/users": {
      "get": {
        "summary": "Get Users",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "id": "i547e",
                          "name": "Ryan",
                          "surname": "Smith",
                          "email": "ryan@fusioo.com",
                          "is_lite": false,
                          "is_enabled": true
                        },
                        {
                          "id": "ibe8e",
                          "name": "Penelope",
                          "surname": "Cruz",
                          "email": "penelope@fusioo.com",
                          "is_lite": false,
                          "is_enabled": true
                        }
                      ]
                    }
                  },
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "surname": {
                            "type": "string",
                            "minLength": 1
                          },
                          "email": {
                            "type": "string",
                            "minLength": 1
                          },
                          "is_lite": {
                            "type": "boolean"
                          },
                          "is_enabled": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "surname",
                          "email",
                          "is_lite",
                          "is_enabled"
                        ]
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": [
                        {
                          "id": "i547e",
                          "name": "Ryan",
                          "surname": "Smith",
                          "email": "ryan@fusioo.com",
                          "is_lite": false,
                          "is_enabled": true
                        },
                        {
                          "id": "ibe8e",
                          "name": "Penelope",
                          "surname": "Cruz",
                          "email": "penelope@fusioo.com",
                          "is_lite": false,
                          "is_enabled": true
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-users",
        "description": "Used to retrieve a list of users in your Fusioo account."
      }
    },
    "/users/{user_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/user_id"
        }
      ],
      "get": {
        "summary": "Get User",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "surname": {
                          "type": "string",
                          "minLength": 1
                        },
                        "email": {
                          "type": "string",
                          "minLength": 1
                        },
                        "is_lite": {
                          "type": "boolean"
                        },
                        "is_enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "surname",
                        "email",
                        "is_lite",
                        "is_enabled"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "i59adb",
                        "name": "Ryan",
                        "surname": "Smith",
                        "email": "ryan@fusioo.com",
                        "is_lite": false,
                        "is_enabled": true
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "i59adb",
                        "name": "Ryan",
                        "surname": "Smith",
                        "email": "ryan@fusioo.com",
                        "is_lite": false,
                        "is_enabled": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-users-user_id",
        "description": "Used to retrieve the details of a specific user in Fusioo."
      }
    },
    "/files/{file_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/file_id"
        }
      ],
      "get": {
        "summary": "Get File",
        "tags": [
          "files"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "content_type": {
                          "type": "string",
                          "minLength": 1
                        },
                        "size": {
                          "type": "number"
                        },
                        "created_on": {
                          "type": "string",
                          "minLength": 1
                        },
                        "created_by": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "content_type",
                        "size",
                        "created_on",
                        "created_by"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "ia4f42",
                        "name": "image.png",
                        "content_type": "image/png",
                        "size": 1228,
                        "created_on": "2019-08-01T08:30:35",
                        "created_by": "Ryan Smith"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {
                        "id": "ia4f42",
                        "name": "image.png",
                        "content_type": "image/png",
                        "size": 1228,
                        "created_on": "2019-08-01T08:30:35",
                        "created_by": "Ryan Smith"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-files-file_id",
        "description": "Retrieves the information on a specific File. "
      },
      "delete": {
        "summary": "Delete File",
        "operationId": "delete-files-file_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ],
                  "x-examples": {
                    "example-1": {
                      "code": 10000,
                      "message": "Success",
                      "data": {}
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": 10000,
                      "message": "Success",
                      "data": {}
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Deletes a file found in a record or a temporary file. You can only the temporary files you created yourself. ",
        "tags": [
          "files"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://connect.fusioo.com/oauth/authorize",
            "tokenUrl": "https://connect.fusioo.com/oauth/token",
            "refreshUrl": "https://connect.fusioo.com/oauth/token",
            "scopes": {}
          }
        }
      }
    },
    "parameters": {
      "app_id": {
        "name": "app_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "id5dcd"
        },
        "description": "The id of the Fusioo App in which the new record will be created. The App id can be found by going to the [Developer Information](https://www.fusioo.com/guide/api-resources-reference-list#api-dev-info) section in Fusioo."
      },
      "record_id": {
        "name": "record_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "i59adb"
        },
        "description": "The id of the record which will be retrieved. The record id can be found by going to the [Developer Information](https://www.fusioo.com/guide/api-resources-reference-list#api-dev-info) section in Fusioo. "
      },
      "sort_by": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "sort_by",
        "description": "The Field which is used to sort the retrieved records. The value should contain the Field Id. When left empty, the Key Field is used to sort the records."
      },
      "order": {
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "example": "asc"
        },
        "in": "query",
        "name": "order",
        "description": "The sort direction. Accepts asc or desc. Default value: asc."
      },
      "offset": {
        "schema": {
          "type": "integer",
          "example": "0"
        },
        "in": "query",
        "name": "offset",
        "description": "By specifying an offset, you retrieve a subset of objects starting with the offset value. The 10th record is at offset 9. Default value: 0."
      },
      "limit": {
        "schema": {
          "type": "integer",
          "example": "200",
          "minLength": 0,
          "maxLength": 200
        },
        "in": "query",
        "name": "limit",
        "description": "How many records should be retrieved. Accepts any value between 0 and 200. Default value: 200."
      },
      "discussion_id": {
        "name": "discussion_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "i59adb"
        },
        "description": "The id of a discussion can be retrieved by using the GetDiscussions method. "
      },
      "user_id": {
        "name": "user_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": " The id of a user can be retrieved by using the GetUsers method. "
      },
      "file_id": {
        "name": "file_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "ia4f42"
        },
        "description": "The `id` of the File which will be retrieved. The File id can be found by going to the Developer Information section in Fusioo. "
      }
    },
    "responses": {
      "Errors": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "code": {
                  "type": "number"
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "data": {
                  "type": "object",
                  "properties": {},
                  "required": []
                }
              },
              "required": [
                "code",
                "message",
                "data"
              ],
              "x-examples": {
                "example-1": {
                  "code": 10002,
                  "message": "The requested resource was not found",
                  "data": {}
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "code": 0,
                  "message": "string",
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "examples": {},
    "requestBodies": {
      "Filter": {
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "equal": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Accepts either a string, number, date"
                },
                "not_equal": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Accepts either a string, number, date"
                },
                "contains": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Accepts a string"
                },
                "not_contains": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Accepts a string"
                },
                "contains_any": {
                  "type": "array",
                  "description": "Accepts an array of string",
                  "items": {
                    "type": "string"
                  }
                },
                "contains_all": {
                  "type": "array",
                  "description": "Accepts an array of string",
                  "items": {
                    "type": "string"
                  }
                },
                "from": {
                  "type": [
                    "number",
                    "string"
                  ],
                  "description": "Accepts a number or date"
                },
                "to": {
                  "type": [
                    "number",
                    "string"
                  ],
                  "description": "Accepts a number or date"
                },
                "within_previous": {
                  "type": "number",
                  "description": "Here the condition accepts an integer value (days)."
                },
                "within_next": {
                  "type": "number",
                  "description": "Here the condition accepts an integer value (days)."
                },
                "is_today": {
                  "type": "boolean",
                  "description": "Here the condition accepts either true or null."
                },
                "empty": {
                  "type": "boolean",
                  "description": "Here you can use either null, true or false."
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "equal": "Test record",
                  "not_equal": "2018-10-04",
                  "contains": "test",
                  "not_contains": "test",
                  "contains_any": [
                    "option1",
                    "option2"
                  ],
                  "contains_all": [
                    "option1",
                    "option2"
                  ],
                  "from": 25,
                  "to": 30,
                  "within_previous": 22,
                  "within_next": 15,
                  "is_today": true,
                  "empty": true
                }
              }
            }
          }
        },
        "description": "Some API methods accept a filter in the request body. These are the supported conditions:"
      }
    },
    "schemas": {}
  },
  "tags": [
    {
      "name": "apps"
    },
    {
      "name": "auth"
    },
    {
      "name": "discussions"
    },
    {
      "name": "files"
    },
    {
      "name": "records"
    },
    {
      "name": "users"
    }
  ],
  "security": [
    {
      "OAuth": []
    }
  ],
  "x-logo": {
    "url": "https://logo.clearbit.com/fusioo.com"
  }
}