{
  "openapi": "3.0.1",
  "info": {
    "title": "API Data Store (Groupe IDAIA)",
    "description": "Documentation de l'API Data Store",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/Alertes": {
      "get": {
        "tags": [
          "Alertes"
        ],
        "summary": "Permet d’obtenir la liste des imports et des alertes paramétrés",
        "operationId": "GetImportAlerte",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOImport"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOImport"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOImport"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Alertes"
        ],
        "summary": "permet d’importer son fichier de SIRET (entreprises à surveiller) et de paramétrer la liste des évènements à surveiller et les destinataires de l’alerte (adresses email)",
        "operationId": "AddImportAlerte",
        "parameters": [
          {
            "name": "libelle",
            "in": "query",
            "description": "Libelle de l'import (description du fichier)",
            "schema": {
              "type": "string",
              "description": "Libelle de l'import (description du fichier)",
              "nullable": true
            }
          },
          {
            "name": "evenements",
            "in": "query",
            "description": "La liste des types d'évènements à surveiller pour déclencher l'alerte (optionnelle, peut être déclarée plus tard)",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "description": "La liste des types d'évènements à surveiller pour déclencher l'alerte (optionnelle, peut être déclarée plus tard)",
              "nullable": true
            }
          },
          {
            "name": "emails",
            "in": "query",
            "description": "Le ou les emails sur lesquels les alertes seront envoyées (obligatoire si ajout d'évènements)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Le ou les emails sur lesquels les alertes seront envoyées (obligatoire si ajout d'évènements)",
              "nullable": true
            }
          },
          {
            "name": "typeEnvoi",
            "in": "query",
            "description": "Type d'envoi de l'alerte (1: Email, 2: SFTP)",
            "schema": {
              "type": "integer",
              "description": "Type d'envoi de l'alerte (1: Email, 2: SFTP)",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Le fichier contenant la liste de vos Siret (format csv avec séparateur \";\" ou 1 Siret par ligne)",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTOImport"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOImport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOImport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Alertes/Sent/{idImport}": {
      "get": {
        "tags": [
          "Alertes"
        ],
        "summary": "Permet d’obtenir la liste des alertes/évènements envoyés pour un import sur une plage de dates",
        "operationId": "GetSentAlertes",
        "parameters": [
          {
            "name": "idImport",
            "in": "path",
            "description": "L'id de l'import",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'id de l'import",
              "format": "int32"
            }
          },
          {
            "name": "idAlerte",
            "in": "query",
            "description": "L'id de l'alerte correspondante",
            "schema": {
              "type": "integer",
              "description": "L'id de l'alerte correspondante",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "debut",
            "in": "query",
            "description": "La date de début de la plage au format YYYY-MM-DD",
            "required": true,
            "schema": {
              "type": "string",
              "description": "La date de début de la plage au format YYYY-MM-DD"
            }
          },
          {
            "name": "fin",
            "in": "query",
            "description": "La date de fin de la plage au format YYYY-MM-DD. Si nulle, date du jour",
            "schema": {
              "type": "string",
              "description": "La date de fin de la plage au format YYYY-MM-DD. Si nulle, date du jour",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoHistoAlerte"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoHistoAlerte"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoHistoAlerte"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Alertes/{id_import}": {
      "put": {
        "tags": [
          "Alertes"
        ],
        "summary": "Permet de modifier un import déjà effectué (fichier annule et remplace)",
        "operationId": "UpdateImport",
        "parameters": [
          {
            "name": "id_import",
            "in": "path",
            "description": "L'identifiant de l'import (faire un GET /alerte pour connaitre votre id)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'identifiant de l'import (faire un GET /alerte pour connaitre votre id)",
              "format": "int32"
            }
          },
          {
            "name": "libelle",
            "in": "query",
            "description": "Libelle de l'import (description du fichier) => cela va remplacer l'ancien libellé",
            "schema": {
              "type": "string",
              "description": "Libelle de l'import (description du fichier) => cela va remplacer l'ancien libellé",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Le nouveau fichier contenant la liste de vos Siret (format csv avec séparateur \";\" ou 1 Siret par ligne)",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTOImport"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOImport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOImport"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Alertes"
        ],
        "summary": "Permet de supprimer un import",
        "parameters": [
          {
            "name": "id_import",
            "in": "path",
            "description": "L'identifiant de l'import à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'identifiant de l'import à supprimer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Alertes/{id_import}/Alerte": {
      "put": {
        "tags": [
          "Alertes"
        ],
        "summary": "Permet de définir/ajouter une alerte sur un import existant",
        "operationId": "SetAlerte",
        "parameters": [
          {
            "name": "id_import",
            "in": "path",
            "description": "L'identifiant de l'import (faire un GET /alerte pour connaitre votre id)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'identifiant de l'import (faire un GET /alerte pour connaitre votre id)",
              "format": "int32"
            }
          },
          {
            "name": "emails",
            "in": "query",
            "description": "Le ou les emails sur lesquels les alertes seront envoyées",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Le ou les emails sur lesquels les alertes seront envoyées"
            }
          },
          {
            "name": "typeEnvoi",
            "in": "query",
            "description": "Type d'envoi de l'alerte (1: Email, 2: SFTP)",
            "schema": {
              "type": "integer",
              "description": "Type d'envoi de l'alerte (1: Email, 2: SFTP)",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "description": "La liste des types d'évènements à surveiller pour déclencher l'alerte (séparés par une virgule, ex : 2, 5, 7)",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "La liste des types d'évènements à surveiller pour déclencher l'alerte (séparés par une virgule, ex : 2, 5, 7)"
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "La liste des types d'évènements à surveiller pour déclencher l'alerte (séparés par une virgule, ex : 2, 5, 7)"
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "La liste des types d'évènements à surveiller pour déclencher l'alerte (séparés par une virgule, ex : 2, 5, 7)"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "La liste des types d'évènements à surveiller pour déclencher l'alerte (séparés par une virgule, ex : 2, 5, 7)"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DTOAlerte"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOAlerte"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOAlerte"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Alertes/{id_import}/sirets": {
      "put": {
        "tags": [
          "Alertes"
        ],
        "summary": "Permet d'ajouter un ou plusieurs SIRET dans un import existant",
        "operationId": "AddSiretImport",
        "parameters": [
          {
            "name": "id_import",
            "in": "path",
            "description": "L'identifiant de l'import (faire un GET /alerte pour connaitre votre id)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'identifiant de l'import (faire un GET /alerte pour connaitre votre id)",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Le(s) siret(s) à ajouter à l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Le(s) siret(s) à ajouter à l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")"
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Le(s) siret(s) à ajouter à l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")"
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Le(s) siret(s) à ajouter à l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Le(s) siret(s) à ajouter à l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Alertes"
        ],
        "summary": "Permet de supprimer un ou plusieurs SIRET d'un import existant",
        "operationId": "DeleteSiretImport",
        "parameters": [
          {
            "name": "id_import",
            "in": "path",
            "description": "L'identifiant de l'import (faire un GET /alerte pour connaitre votre id)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'identifiant de l'import (faire un GET /alerte pour connaitre votre id)",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Le(s) siret(s) à supprimer de l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Le(s) siret(s) à supprimer de l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")"
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Le(s) siret(s) à supprimer de l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")"
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Le(s) siret(s) à supprimer de l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Le(s) siret(s) à supprimer de l'import (chaines de caractères séparées par des virgules, ex : \"11111111111111\", \"22222222222222\")"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Alertes/{id_import}/Alerte/{id_alerte}": {
      "delete": {
        "tags": [
          "Alertes"
        ],
        "summary": "Permet de supprimer une alerte d'un import",
        "parameters": [
          {
            "name": "id_import",
            "in": "path",
            "description": "L'identifiant de l'import",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'identifiant de l'import",
              "format": "int32"
            }
          },
          {
            "name": "id_alerte",
            "in": "path",
            "description": "L'identifiant de l'alerte à supprimer",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'identifiant de l'alerte à supprimer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AnnuaireInverse/Unique": {
      "post": {
        "tags": [
          "AnnuaireInverse"
        ],
        "summary": "Permet de rechercher un contact à partir de son numéro de téléphone / Is used to find a contact using their phone number.",
        "description": "Retourne une ou plusieurs réponses contenant un tableau de nom, prénom, adresse.",
        "operationId": "RechercheUnique",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AnnuaireInverseDemande"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnuaireInverseDemande"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnuaireInverseDemande"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AnnuaireInverseDemande"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoAnnuaireInverseResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoAnnuaireInverseResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoAnnuaireInverseResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/byId/{id}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d’obtenir les informations détaillées d’une entreprise à partir de son identifiant récupérées via une API recherche multiple, suggest RS, dirigeant / Is used to get detailed information about a business using their identifier obtained using a multiple search API, suggest RS, director API",
        "description": "l'identifiant utilisé ne doit pas être mémorisé, c'est une clé technique pouvant changer dans le temps (the identifier used must not be memorized, it is a technical key that can change over time)",
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'établissement (Company ID)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Identifiant de l'établissement (Company ID)",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/RechercheMultiple": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet de faire une recherche multiple d’entreprises à partir du SIREN, raison sociale et(ou) adresse / Is used to find multiple businesses using their registration number (SIREN), company name and/or address",
        "description": "Retourne une ou plusieurs réponses (10 résultats par défaut) contenant un tableau identifiant, la raison sociale ainsi que l’adresse trouvée / Returns one or more responses (10 results by default) containing a table identifying, the company name and the address found",
        "operationId": "SearchEntreprises",
        "parameters": [
          {
            "name": "rs",
            "in": "query",
            "description": "Chaine de caractères représentant la raison sociale recherchée",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant la raison sociale recherchée",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "siret",
            "in": "query",
            "description": "Chaine de caractères représentant le SIRET recherché",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant le SIRET recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "voie",
            "in": "query",
            "description": "Chaine de caractères représentant le nom de la voie recherchée",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant le nom de la voie recherchée",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "tel",
            "in": "query",
            "description": "Chaine de caractères représentant le N° de téléphone recherché",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant le N° de téléphone recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "cp",
            "in": "query",
            "description": "Chaine de caractères représentant le code postal recherché",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant le code postal recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "commune",
            "in": "query",
            "description": "Chaine de caractères représentant la commune recherché",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant la commune recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Tableau de chaines de caractères représentant le/les status recherchés, valeurs possibles: \"actif\",\"cesse\",\"demenage\"",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Tableau de chaines de caractères représentant le/les status recherchés, valeurs possibles: \"actif\",\"cesse\",\"demenage\"",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Chaine de caractères représentant le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Chaine de caractères représentant le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "distance",
            "in": "query",
            "description": "Chaine de caractères représentant la distance recherchée",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant la distance recherchée",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Décimal représentant la latitude recherchée",
            "schema": {
              "type": "number",
              "description": "Décimal représentant la latitude recherchée",
              "format": "double",
              "default": 0
            }
          },
          {
            "name": "lon",
            "in": "query",
            "description": "Décimal représentant la longitude recherchée",
            "schema": {
              "type": "number",
              "description": "Décimal représentant la longitude recherchée",
              "format": "double",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEntrepriseLight"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEntrepriseLight"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEntrepriseLight"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/RechercheUnique": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d’obtenir les informations détaillées d’une entreprise à partir d’un SIRET ou raison sociale et(ou) adresse ou téléphone / Is used to get detailed information about a business using an establishment registration number (SIRET) or company name and/or address",
        "description": "Retourne une seule réponse fiable à partir de la raison sociale et de l'adresse fournie en entrée. Une RNVP est effectuée sur l'adresse en entrée pour fiabiliser la réponse restituée / Returns a single reliable response from the company name and the address provided as input. An RNVP is performed on the input address to make the returned response more reliable",
        "operationId": "SearchEntrepriseUnique",
        "parameters": [
          {
            "name": "rs",
            "in": "query",
            "description": "Chaine de caractères représentant la raison sociale recherchée",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant la raison sociale recherchée",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "siret",
            "in": "query",
            "description": "Chaine de caractères représentant le SIRET recherché",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant le SIRET recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "adresse",
            "in": "query",
            "description": "Chaine de caractères représentant l'adresse recherchée",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant l'adresse recherchée",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "tel",
            "in": "query",
            "description": "Chaine de caractères représentant le N° de téléphone recherché",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant le N° de téléphone recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "cp",
            "in": "query",
            "description": "Chaine de caractères représentant le code postal recherché",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant le code postal recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "commune",
            "in": "query",
            "description": "Chaine de caractères représentant la commune recherché",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant la commune recherché",
              "default": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoRechercheUnique"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoRechercheUnique"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoRechercheUnique"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/{siren}/NumTVAIntra": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d'obtenir le Numéro TVA Intracommunotaire d’une entreprise / Is used to get the European VAT number for a business",
        "operationId": "GetNumTVAIntra",
        "parameters": [
          {
            "name": "siren",
            "in": "path",
            "description": "Le SIREN recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN recherché",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success : returns the intra-community VAT number",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/{siren}/Siege": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d’obtenir le SIRET d’une entreprise (siège) à partir du SIREN / Is used to get detailed information about a business (registered office) using the registration number (SIREN)",
        "operationId": "GetSiretSiege",
        "parameters": [
          {
            "name": "siren",
            "in": "path",
            "description": "Le SIREN recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN recherché",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/TraceSiret/{siret}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d’obtenir le nouveau SIRET d’un établissement déménagé grâce à l’ancien SIRET / Is used to get the new establishment registration number (SIRET) after the establishment has moved, using the old establishment registration number (SIRET)",
        "operationId": "GetSiretActif",
        "parameters": [
          {
            "name": "siret",
            "in": "path",
            "description": "Le SIRET recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIRET recherché",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/{siren}/marqueInpi": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d’obtenir la liste des marques (Inpi) d'une entreprise à partir d'un SIREN / Is used to get the list of trademarks and brands for a business (Inpi) using a registration number (SIREN)",
        "operationId": "GetMarquesInpi",
        "parameters": [
          {
            "name": "siren",
            "in": "path",
            "description": "Le SIREN recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN recherché",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoMarqueInpi"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoMarqueInpi"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoMarqueInpi"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/byMarque/{marqueInpi}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d'obtenir les informations détaillées d'une entreprise (siège) à partir du nom d’une de ses marques / Is used to get the detailed information about a business (registered office) using one of its trademarks or brands.",
        "operationId": "GetByMarquesInpi",
        "parameters": [
          {
            "name": "marqueInpi",
            "in": "path",
            "description": "La marque Inpi de l'entreprise recherchée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "La marque Inpi de l'entreprise recherchée",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/bySiret/{siret}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d'obtenir les informations détaillées d'un établissement (quelque soit son statut) / Is used to get the detailed information about an establishment (whatever its status)",
        "operationId": "GetBySiret",
        "parameters": [
          {
            "name": "siret",
            "in": "path",
            "description": "Le SIRET recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIRET recherché",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/byUrl/{url}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d'obtenir les informations détaillées d'une entreprise (siège) à partir d'un de ses sites web / Is used to get the detailed information about a business (registered office) using one of its web sites",
        "operationId": "GetByUrl",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "L'URL du site recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "L'URL du site recherché",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/{siret}/url": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d’obtenir la liste des sites Web d’une entreprise à partir d'un SIRET / Is used to get the list of a business’s Web sites using an establishment registration number (SIRET)",
        "operationId": "GetUrlsBySiret",
        "parameters": [
          {
            "name": "siret",
            "in": "path",
            "description": "Le SIRET de l'entreprise recherchée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIRET de l'entreprise recherchée",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoDomaine"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoDomaine"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoDomaine"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/byDomaine/{domaine}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d'obtenir les informations détaillées d'une entreprise (siège) à partir d'un des domaines de ses sites web / Is used to get detailed information about a business (registered office) using one of its web site domains.",
        "operationId": "GetByDomaine",
        "parameters": [
          {
            "name": "domaine",
            "in": "path",
            "description": "Le nom de domaine recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le nom de domaine recherché",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEntreprise"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Company/{siret}/domaine": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Permet d’obtenir la liste des domaines d’un SIRET / Is used to get the list of domains for an establishment registration number (SIRET).",
        "operationId": "GetDomaineBySiret",
        "parameters": [
          {
            "name": "siret",
            "in": "path",
            "description": "Le numéro SIRET recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le numéro SIRET recherché",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoDistinctDomaine"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoDistinctDomaine"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoDistinctDomaine"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Dirigeant/bySiren": {
      "get": {
        "tags": [
          "Dirigeant"
        ],
        "summary": "Permet de rechercher un ou plusieurs principaux dirigeants à partir d'un numéro SIREN. Il est également possible de rechercher une fonction principale (PDG, DG,...) à partir du code fonction et de limiter le résultat pour obtenir le nombre de dirigeants souhaités en retour / Is used to find one or more directors using a registration number. It is also possible to search for a main function (CEO, GM, etc.) using the function code and to limit the result to the requested number of returned directors.",
        "operationId": "GetDirigeantsBySiren",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le SIREN recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN recherché"
            }
          },
          {
            "name": "codeFonction",
            "in": "query",
            "description": "La liste des codes fonctions visant à limiter le résultat",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "La liste des codes fonctions visant à limiter le résultat",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoDirigeant"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoDirigeant"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoDirigeant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Dirigeant": {
      "get": {
        "tags": [
          "Dirigeant"
        ],
        "summary": "Permet de faire une recherche multiple d’entreprises à partir du nom, prénom, date de naissance d’un dirigeant / Is used to search for multiple businesses using a director’s last name, first name and date of birth",
        "operationId": "SearchDirigeants",
        "parameters": [
          {
            "name": "nom",
            "in": "query",
            "description": "Le nom du dirigeant recherché",
            "schema": {
              "type": "string",
              "description": "Le nom du dirigeant recherché",
              "nullable": true
            }
          },
          {
            "name": "prenom",
            "in": "query",
            "description": "Le prénom du dirigeant recherché",
            "schema": {
              "type": "string",
              "description": "Le prénom du dirigeant recherché",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ddn",
            "in": "query",
            "description": "La date de naissance du dirigeant recherché",
            "schema": {
              "type": "string",
              "description": "La date de naissance du dirigeant recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "siret",
            "in": "query",
            "description": "Le SIRET du dirigeant recherché",
            "schema": {
              "type": "string",
              "description": "Le SIRET du dirigeant recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "codeFonction",
            "in": "query",
            "description": "La liste de codes fonction du dirigeant recherché",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "La liste de codes fonction du dirigeant recherché",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSearchDirigeant"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSearchDirigeant"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSearchDirigeant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/DonneesFinancieres/bilan/light": {
      "get": {
        "tags": [
          "DonneesFinancieres"
        ],
        "summary": "Permet d’obtenir les 20 indicateurs clés financiers pour les 5 derniers bilans / Is used to get the 20 key financial indicators for the last 5 financial statements",
        "operationId": "GetBilanLightBySiren",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le SIREN de l'entreprise concernée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN de l'entreprise concernée"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoBilanLight"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoBilanLight"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoBilanLight"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        },
        "cache": {
          "expire": "86400"
        }
      }
    },
    "/api/v1/DonneesFinancieres/bilan": {
      "get": {
        "tags": [
          "DonneesFinancieres"
        ],
        "summary": "Permet d’obtenir le bilan complet d’une année (Compte social ou simplifié, Consolidé) / Is used to get the complete financial statement for a given year (Corporate or simplified, consolidated accounts)",
        "operationId": "GetBilanComplet",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le SIREN de l'entreprise concernée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN de l'entreprise concernée"
            }
          },
          {
            "name": "annee",
            "in": "query",
            "description": "L'année du bilan souhaité",
            "required": true,
            "schema": {
              "type": "string",
              "description": "L'année du bilan souhaité"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoBilanComplet"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoBilanComplet"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoBilanComplet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/DonneesFinancieres/bilans/sig": {
      "get": {
        "tags": [
          "DonneesFinancieres"
        ],
        "summary": "Permet d’obtenir les Soldes Intermédiaire de Gestion des 2 derniers bilans / Is used to get the Interim management balances for the last 2 financial statements",
        "operationId": "GetBilanSig",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le SIREN de l'entreprise concernée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN de l'entreprise concernée"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoBilanSig"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoBilanSig"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoBilanSig"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/DonneesFinancieres/bilans/dispos": {
      "get": {
        "tags": [
          "DonneesFinancieres"
        ],
        "summary": "Permet de rechercher les années des bilans disponibles pour un SIREN / Is used to find the financial statement years available for a registration number",
        "operationId": "GetBilanDispos",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le SIREN de l'entreprise concernée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN de l'entreprise concernée"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/DonneesFinancieres/ScoresFinanciers": {
      "get": {
        "tags": [
          "DonneesFinancieres"
        ],
        "summary": "Permet d’obtenir 3 scores financiers (Conan et Holder, Collongues, ADFCC et ADFCC2) / Is used to get a default risk score (Conan and Holder, Collongues, ADFCC and ADFCC2)",
        "operationId": "GetScoresFinanciers",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le SIREN de l'entreprise concernée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN de l'entreprise concernée"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoScoreFinancierResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoScoreFinancierResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoScoreFinancierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/DonneesFinancieres/PosteBilan": {
      "get": {
        "tags": [
          "DonneesFinancieres"
        ],
        "summary": "Permet d’obtenir les informations du dernier bilan disponible en fonction d'une liasse fiscale / Is used to get information on the last available financial statement using a tax return.",
        "operationId": "GetPosteBilan",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le SIREN de l'entreprise concernée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN de l'entreprise concernée"
            }
          },
          {
            "name": "codeLiasse",
            "in": "query",
            "description": "Le code liasse concerné (ex: YP pour effectif, FL pour chiffre d'affaires)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le code liasse concerné (ex: YP pour effectif, FL pour chiffre d'affaires)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success : valeur du code liasse",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/DonneesFinancieres/LiasseFiscale": {
      "get": {
        "tags": [
          "DonneesFinancieres"
        ],
        "summary": "Permet d’obtenir certaines valeurs au choix de la liasse fiscale pour une seule année / Is used to get a selection of values from the tax return for a single year",
        "operationId": "GetLiasseFiscale",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le SIREN de l'entreprise concernée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN de l'entreprise concernée"
            }
          },
          {
            "name": "codeLiasse",
            "in": "query",
            "description": "Le code liasse concerné (ex: YP pour effectif, FL pour chiffre d'affaires)",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Le code liasse concerné (ex: YP pour effectif, FL pour chiffre d'affaires)"
            }
          },
          {
            "name": "annee",
            "in": "query",
            "description": "L'année recherchée",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'année recherchée",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoLiasseFiscale"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoLiasseFiscale"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoLiasseFiscale"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/DonneesFinancieres/LiasseMultiple": {
      "get": {
        "tags": [
          "DonneesFinancieres"
        ],
        "summary": "Permet d’obtenir certaines valeurs au choix de la liasse fiscale pour toutes les années disponibles / Is used to get a selection of tax return values for all available years",
        "operationId": "GetLiasseMultiple",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le SIREN de l'entreprise concernée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le SIREN de l'entreprise concernée"
            }
          },
          {
            "name": "codeLiasse",
            "in": "query",
            "description": "Le(s) code(s) liasse(s) concerné(s) (ex: YP pour effectif, FL pour chiffre d'affaires)",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Le(s) code(s) liasse(s) concerné(s) (ex: YP pour effectif, FL pour chiffre d'affaires)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoLiasseFiscale"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoLiasseFiscale"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoLiasseFiscale"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Email/Check": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Permet de vérifier la validité d'un email, de définir s'il s'agit d'un email temporaire. dans le cas où l'email n'est pas valide, il y a une proposition d'email valide / Is used to check the validity of an email address, to define whether it is a temporary email address. If the email address is invalid, a valid email address is proposed",
        "operationId": "CheckEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "L'adresse email à vérifier",
            "required": true,
            "schema": {
              "type": "string",
              "description": "L'adresse email à vérifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEmailTest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEmailTest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEmailTest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Email/Check/Csv": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Permet de vérifier la validité d'un lot d'emails / Is used to check the validity of a batch of email addresses",
        "operationId": "CheckEmailCSV",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEmailTest"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEmailTest"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEmailTest"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/EnrichissementTel/RechercheUnique": {
      "post": {
        "tags": [
          "EnrichissementTel"
        ],
        "summary": "Permet de rechercher le téléphone d'un particulier ou d'une entreprise dans l'annuaire Orange à partir du Nom ou Raison Sociale et de l'adresse fournit en entrée. Une RNVP est effectuée sur l'adresse en entrée pour fiabiliser la réponse restituée. l'API retourne une seule réponse fiable / Is used to find the phone number of a private person of business in the Orange directory using the input Name or Company name and address. A postal address verification is carried out on the input address to make the returned response more reliable. The API returns only one reliable response",
        "operationId": "EnrichissementTelUnique",
        "requestBody": {
          "description": "Les informations concernant la recherche à effectuer",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DtoEnrichissementTelDemande"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DtoEnrichissementTelDemande"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DtoEnrichissementTelDemande"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DtoEnrichissementTelDemande"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEnrichissementTelResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEnrichissementTelResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoEnrichissementTelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/EnrichissementTel/RechercheMultiple": {
      "post": {
        "tags": [
          "EnrichissementTel"
        ],
        "summary": "Permet de rechercher le téléphone d'un particulier ou d'une entreprise dans l'annuaire Orange à partir du Nom ou Raison Sociale et de l'adresse fournit en entrée. Une RNVP est effectuée sur l'adresse en entrée pour fiabiliser la réponse restituée. l'API retourne une ou plusieurs réponses / Is used to find the phone number of a private person of business in the Orange directory using the input Name or Company name and address. A postal address verification is carried out on the input address to make the returned response more reliable. The API returns one or more responses",
        "operationId": "EnrichissementTelMultiple",
        "requestBody": {
          "description": ">Les informations concernant la recherche à effectuer",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DtoEnrichissementTelDemande"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DtoEnrichissementTelDemande"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DtoEnrichissementTelDemande"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DtoEnrichissementTelDemande"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEnrichissementTelResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEnrichissementTelResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEnrichissementTelResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Geocodage/byAddress": {
      "post": {
        "tags": [
          "Geocodage"
        ],
        "summary": "Recherche les coordonnées géographiques (lat, lon), Iris, Ilot à partir d’une adresse postale / Is used to search for geographical coordinates (lat, lon), Iris, Ilot using a postal address",
        "operationId": "GetGeocodageByAddress",
        "requestBody": {
          "description": "L'adresse recherchée",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DtoRequestGeocodeByAddress"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DtoRequestGeocodeByAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DtoRequestGeocodeByAddress"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DtoRequestGeocodeByAddress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoGeocodageFeatures"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoGeocodageFeatures"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoGeocodageFeatures"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Geocodage/bySiret/{siret}": {
      "get": {
        "tags": [
          "Geocodage"
        ],
        "summary": "Recherche les coordonnées géographiques (lat, lon), Iris, Ilot à partir d’un numéro SIRET / Is used to search for geographical coordinates (lat, lon), Iris, Ilot using a business registration number (SIRET)",
        "operationId": "GetGeocodageBySiret",
        "parameters": [
          {
            "name": "siret",
            "in": "path",
            "description": "Le numéro Siret à géocoder",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le numéro Siret à géocoder",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSiretPoint"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSiretPoint"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSiretPoint"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Geocodage/byTel/{tel}": {
      "get": {
        "tags": [
          "Geocodage"
        ],
        "summary": "Recherche les coordonnées géographiques (lat, lon), Iris, Ilot à partir d’un numéro de téléphone / Is used to search for geographical coordinates (lat, lon), Iris, Ilot using a phone number",
        "operationId": "GetGeocodageByTel",
        "parameters": [
          {
            "name": "tel",
            "in": "path",
            "description": "Le numéro de téléphone à géocoder",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le numéro de téléphone à géocoder",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSiretPoint"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSiretPoint"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSiretPoint"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Geocodage/Reverse": {
      "get": {
        "tags": [
          "Geocodage"
        ],
        "summary": "Permet d'obtenir l'adresse postale à partir des coordonnées géographiques indiquées / Is used to get a postal address using the indicated geographical coordinates",
        "operationId": "GetReverseGeocodage",
        "parameters": [
          {
            "name": "longitude",
            "in": "query",
            "description": "La longitude de l'adresse recherchée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "La longitude de l'adresse recherchée"
            }
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "La latitude de l'adresse recherchée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "La latitude de l'adresse recherchée"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Le niveau de précision",
            "schema": {
              "type": "string",
              "description": "Le niveau de précision",
              "default": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoGeocodageFeatures"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoGeocodageFeatures"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoGeocodageFeatures"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Geocodage/Csv": {
      "post": {
        "tags": [
          "Geocodage"
        ],
        "summary": "Permet d'obtenir les coordonnées géographiques d'un lot d'adresses postales contenues dans un fichier CSV / Is used to get the geographical coordinates of a batch of addresses contained in a CSV file",
        "operationId": "GetGeocodageCSV",
        "parameters": [
          {
            "name": "columns",
            "in": "query",
            "description": "Le nom des colonnes du fichier",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Le nom des colonnes du fichier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoReponseCSV"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoReponseCSV"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoReponseCSV"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Geocodage/Reverse/Csv": {
      "post": {
        "tags": [
          "Geocodage"
        ],
        "summary": "Permet d'obtenir les adresses postales d'un lot de coordonnées géographiques contenues dans un fichier CSV / Is used to get the postal addresses of a batch of geographical coordinates contained in a CSV file",
        "operationId": "GetReverseGeocodageCSV",
        "parameters": [
          {
            "name": "columns",
            "in": "query",
            "description": "Le nom des colonnes du fichier",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Le nom des colonnes du fichier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoReponseCSV"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoReponseCSV"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoReponseCSV"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Iban/Check/{iban}": {
      "get": {
        "tags": [
          "Iban"
        ],
        "summary": "permet de vérifier la chaîne de caractères de l’IBAN",
        "operationId": "CheckIban",
        "parameters": [
          {
            "name": "iban",
            "in": "path",
            "description": "L'Iban à vérifier",
            "required": true,
            "schema": {
              "type": "string",
              "description": "L'Iban à vérifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success : true => IBAN OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Individu/IdentityVerification": {
      "get": {
        "tags": [
          "Individu"
        ],
        "summary": "Permet de vérifier les informations d'un individu (Nom/Prénom/Adresse/Date de Naissance/Email/Téléphone fixe/Téléphone Mobile) / Is used to check the information for a private person (Last name/First name/Address/Date of birth/Email/Landline phone number/Cell phone number)",
        "description": "Chaque information fournie nous permet de sélectionner l'individu le plus approchant, ensuite un contrôle est effectué sur chacun des paramètres. Il faut au moins 1 paramètre",
        "operationId": "GetIdentityVerification",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "description": "le prénom recherché, valeurs possibles en retour: match ,no-match ou missing",
            "schema": {
              "type": "string",
              "description": "le prénom recherché, valeurs possibles en retour: match ,no-match ou missing",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "le nom recherché, valeurs possibles en retour: match ,no-match ou missing",
            "schema": {
              "type": "string",
              "description": "le nom recherché, valeurs possibles en retour: match ,no-match ou missing",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "DateOfBirth",
            "in": "query",
            "description": "la date de naissance recherchée, Format: AAAA-MM-JJ, valeurs possibles en retour: match ,no-match ou missing",
            "schema": {
              "type": "string",
              "description": "la date de naissance recherchée, Format: AAAA-MM-JJ, valeurs possibles en retour: match ,no-match ou missing",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "StreetName",
            "in": "query",
            "description": "l'adresse recherchée, valeurs possibles en retour: match ,no-match ou missing, partial (=> valeur en entrée match sur mot directeur de la voie)",
            "schema": {
              "type": "string",
              "description": "l'adresse recherchée, valeurs possibles en retour: match ,no-match ou missing, partial (=> valeur en entrée match sur mot directeur de la voie)",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "description": "le code postal recherché, valeurs possibles en retour: match ,no-match ou missing",
            "schema": {
              "type": "string",
              "description": "le code postal recherché, valeurs possibles en retour: match ,no-match ou missing",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "la commune recherchée, valeurs possibles en retour: match ,no-match, missing , partial (=> valeur en entrée contenue dans la commune  trouvée par analyse de chaine de caractère)",
            "schema": {
              "type": "string",
              "description": "la commune recherchée, valeurs possibles en retour: match ,no-match, missing , partial (=> valeur en entrée contenue dans la commune  trouvée par analyse de chaine de caractère)",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "Telephone",
            "in": "query",
            "description": "le téléphone fixe recherché, valeurs possibles en retour: match ,no-match ou missing",
            "schema": {
              "type": "string",
              "description": "le téléphone fixe recherché, valeurs possibles en retour: match ,no-match ou missing",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "Mobile",
            "in": "query",
            "description": "le téléphone mobile recherché, valeurs possibles en retour: match ,no-match ou missing",
            "schema": {
              "type": "string",
              "description": "le téléphone mobile recherché, valeurs possibles en retour: match ,no-match ou missing",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "EmailAddress",
            "in": "query",
            "description": "l'adresse mail recherchée, valeurs possibles en retour: match ,no-match ou missing",
            "schema": {
              "type": "string",
              "description": "l'adresse mail recherchée, valeurs possibles en retour: match ,no-match ou missing",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "Size",
            "in": "query",
            "description": "le nombre de résultats souhaités (par défaut: 1)",
            "schema": {
              "type": "integer",
              "description": "le nombre de résultats souhaités (par défaut: 1)",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "HouseNumber",
            "in": "query",
            "description": "Chaine de caractères représentant le numéro de voie, valeurs possibles en retour: match ,no-match ou missing",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant le numéro de voie, valeurs possibles en retour: match ,no-match ou missing",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "StreetTypeAndName",
            "in": "query",
            "description": "Chaine de caractères représentant le type et le nom de la voie, valeurs possibles en retour: match ,no-match ou missing, partial (=> valeur en entrée match sur mot directeur de la voie)",
            "schema": {
              "type": "string",
              "description": "Chaine de caractères représentant le type et le nom de la voie, valeurs possibles en retour: match ,no-match ou missing, partial (=> valeur en entrée match sur mot directeur de la voie)",
              "default": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoMatchIdentity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoMatchIdentity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoMatchIdentity"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/IndividuEnrichissement/Search": {
      "get": {
        "tags": [
          "IndividuEnrichissement"
        ],
        "summary": "permet de vérifier si les données en entrée correspondent à un individu (nom+prénom+téléphone ou nom+prénom+email)",
        "description": "Les nom, prénom, email (combinaison: ET) ou les nom, prénom, téléphone (combinaison: ET) doivent être obligatoirement renseignés.  Cela nous permet de sélectionner un individu qui Match à 100% avec cette combinaison de paramètres",
        "operationId": "GetPerfectMatchs",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "description": "le prénom recherché",
            "schema": {
              "type": "string",
              "description": "le prénom recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "le nom recherché",
            "schema": {
              "type": "string",
              "description": "le nom recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "Telephone",
            "in": "query",
            "description": "le téléphone (fixe ou mobile) recherché",
            "schema": {
              "type": "string",
              "description": "le téléphone (fixe ou mobile) recherché",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "EmailAddress",
            "in": "query",
            "description": "l'adresse mail recherchée",
            "schema": {
              "type": "string",
              "description": "l'adresse mail recherchée",
              "default": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success : Identifiant de l'individu",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoIndividuEnrichissement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoIndividuEnrichissement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoIndividuEnrichissement"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API entrepot n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/IndividuEnrichissement/{Id}": {
      "get": {
        "tags": [
          "IndividuEnrichissement"
        ],
        "summary": "permet de récupérer les données d’un individu",
        "description": "Utiliser l'ientifiant précédemment récupéré via la recherche /Search",
        "operationId": "GetIndividuById",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "L'id de l'individu recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "L'id de l'individu recherché",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success : informations détaillés sur l'individu",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoIndividuEnrichissementId"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoIndividuEnrichissementId"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoIndividuEnrichissementId"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API entrepot n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Referentiel/CodesLiasses": {
      "get": {
        "tags": [
          "Referentiel"
        ],
        "summary": "Permet d'obtenir le référentiel des codes liasses",
        "operationId": "GetCodesLiasses",
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoListeCodesLiasses"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoListeCodesLiasses"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoListeCodesLiasses"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Referentiel/FonctionsDirigeant": {
      "get": {
        "tags": [
          "Referentiel"
        ],
        "summary": "Permet d'obtenir le référentiel des fonctions des dirigeants",
        "operationId": "GetFonctionsDirigeant",
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoFonctionDirigeant"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoFonctionDirigeant"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoFonctionDirigeant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Referentiel/EvenementsAlerte": {
      "get": {
        "tags": [
          "Referentiel"
        ],
        "summary": "Obtiens le référentiel des évènements",
        "operationId": "GetReferentielEvenementsAlerte",
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEvenement"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEvenement"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoEvenement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/ReseauxSociaux": {
      "get": {
        "tags": [
          "ReseauxSociaux"
        ],
        "summary": "Permet d'obtenir la liste des réseaux sociaux d'une entreprise (basé sur les réseaux sociaux associés au site web principal du SIREN) / Is used to get the list of social media for a business (based on the social media associated with the main web site for the business registration number)",
        "operationId": "GetReseauxSociaux",
        "parameters": [
          {
            "name": "siren",
            "in": "query",
            "description": "Le lieu recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le lieu recherché"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoReseauxSociaux"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoReseauxSociaux"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoReseauxSociaux"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Rme/{siret}": {
      "get": {
        "tags": [
          "Rme"
        ],
        "summary": "permet d'obtenir les informations détaillées d'un point de vente d'un réseau à partir du SIRET",
        "description": "Si le Siret est une tête de réseau, alors on obtient en plus la liste des marques associées",
        "operationId": "GetRmeBySiret",
        "parameters": [
          {
            "name": "siret",
            "in": "path",
            "description": "Le siret.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le siret.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoRme"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoRme"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoRme"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Rme/{siret}/marques": {
      "get": {
        "tags": [
          "Rme"
        ],
        "summary": "permet d'obtenir la liste des marques enseigne d'un réseau à partir du SIRET de la tête de réseau",
        "operationId": "GetRmeMarques",
        "parameters": [
          {
            "name": "siret",
            "in": "path",
            "description": "Le siret",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le siret",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoMarqueRme"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoMarqueRme"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoMarqueRme"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Rme/marques/{id}/pdvs": {
      "get": {
        "tags": [
          "Rme"
        ],
        "summary": "permet d'obtenir la liste des points de vente d'un réseau à partir d’une marque",
        "operationId": "GetRmePdvs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "L'identifiant de la marque",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "L'identifiant de la marque",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoPdvs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoPdvs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoPdvs"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/RNVP/Normalise": {
      "post": {
        "tags": [
          "RNVP"
        ],
        "summary": "Permet de vérifier, corriger et optimiser chaque adresse au format de La Poste / Is used to check, correct and optimize each address to La Poste format",
        "description": "La RNVP (Restructuration, Normalisation, Validation Postale) est utilisée pour obtenir une adresse à la norme postale en vigueur (38 caractères, norme AFNOR XP Z 10-011 de mai 1997, ou norme 38). Elle s’appuie sur des données de référence (dictionnaires des codes postaux et CEDEX, des voies de France,...) et sur des outils informatiques capables de les mettre en oeuvre.",
        "operationId": "Normalise",
        "requestBody": {
          "description": "L'adresse à normaliser",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RnvpDemande"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RnvpDemande"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RnvpDemande"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RnvpDemande"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NormaliseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NormaliseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NormaliseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Suggest/Rs/{rs}": {
      "get": {
        "tags": [
          "Suggest"
        ],
        "summary": "Permet de bénéficier d’un service autocompletion. Saisie des premiers caractères de la raison sociale de l’entreprise recherchée et affichage des 5 meilleures correspondances (avec l’adresse correspondante) / Is used to have an autocompletion service. Entry of the first characters of the business name being searched for and display of the top 5 matches (with the corresponding addresses)",
        "operationId": "SuggestRsAdresse",
        "parameters": [
          {
            "name": "rs",
            "in": "path",
            "description": "La raison sociale recherchée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "La raison sociale recherchée",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSuggestRs"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSuggestRs"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSuggestRs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Suggest/RsDistinct/{rs}": {
      "get": {
        "tags": [
          "Suggest"
        ],
        "summary": "Permet de bénéficier d’un service autocompletion. Saisie des premiers caractères de la raison sociale de l’entreprise recherchée et affichage des 5 meilleures correspondances / Is used to have an autocompletion service. Entry of the first characters of the business name being searched for and display of the top 5 matches",
        "operationId": "SuggestRsDistinct",
        "parameters": [
          {
            "name": "rs",
            "in": "path",
            "description": "La raison sociale recherchée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "La raison sociale recherchée",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Suggest/Adresse": {
      "get": {
        "tags": [
          "Suggest"
        ],
        "summary": "Suggère les 5 meilleures correspondances d’adresses en fonction des caractères saisis / Suggests the 5 best address matches depending on the entered string",
        "operationId": "SuggestAddress",
        "parameters": [
          {
            "name": "adresse",
            "in": "query",
            "description": "L'adresse recherchée",
            "required": true,
            "schema": {
              "type": "string",
              "description": "L'adresse recherchée"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoAdresse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoAdresse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoAdresse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Suggest/Poi": {
      "get": {
        "tags": [
          "Suggest"
        ],
        "summary": "Suggère les 5 meilleures correspondances de points d’intérêts en fonction des caractères saisis / Suggests the 5 top points of interest matches depending on the entered string",
        "operationId": "SuggestPoi",
        "parameters": [
          {
            "name": "nom",
            "in": "query",
            "description": "Le nom du point d'intérêt",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le nom du point d'intérêt"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoPoi"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoPoi"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoPoi"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Suggest/Lieux": {
      "get": {
        "tags": [
          "Suggest"
        ],
        "summary": "Suggère les 5 meilleures correspondances de lieux (peut être une adresses, entreprises ou des points d'intérêts) en fonction des caractères saisis / Suggests the 5 top location matches (can be addresses, business or points of interest) depending on the entered string",
        "operationId": "SuggestLieux",
        "parameters": [
          {
            "name": "nom",
            "in": "query",
            "description": "Le lieu recherché",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le lieu recherché"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Le nombre de résultats souhaités",
            "schema": {
              "type": "integer",
              "description": "Le nombre de résultats souhaités",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSuggestResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSuggestResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DtoSuggestResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Typographie/iris/{code}": {
      "get": {
        "tags": [
          "Typographie"
        ],
        "summary": "permet de récupérer des données typographiques au choix à partir d’un code IRIS",
        "operationId": "GetTypoIris",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Le code de l'iris",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le code de l'iris"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoTypoPolygon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoTypoPolygon"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoTypoPolygon"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Typographie/commune/{code}": {
      "get": {
        "tags": [
          "Typographie"
        ],
        "summary": "permet de récupérer des données typographiques au choix à partir d’un code commune",
        "operationId": "GetTypoCommune",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Le code de la commune",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le code de la commune"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoTypoPolygon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoTypoPolygon"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoTypoPolygon"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    },
    "/api/v1/Typographie/departement/{code}": {
      "get": {
        "tags": [
          "Typographie"
        ],
        "summary": "permet de récupérer des données typographiques au choix à partir d’un code département",
        "operationId": "GetTypoDept",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Le code du département",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Le code du département"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success / Succès de la requête",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DtoTypoPolygon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoTypoPolygon"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DtoTypoPolygon"
                }
              }
            }
          },
          "400": {
            "description": "Bad request / Requête incorrecte: un ou plusieurs paramètres sont incorrects ou manquants"
          },
          "403": {
            "description": "Forbidden / Interdiction: La clé d'autorisation de l'accés à l'API n'est pas valide"
          },
          "500": {
            "description": "Internal Server Error / Erreur interne du serveur"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DTOAlerte": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "L'identifiant de l'alerte",
            "format": "int32"
          },
          "IdImport": {
            "type": "integer",
            "description": "L'identifiant de l'import",
            "format": "int32"
          },
          "Emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "La liste des emails sur lesquels seront envoyées les alertes",
            "nullable": true
          },
          "DateCreation": {
            "type": "string",
            "description": "La date de création de l'alerte",
            "format": "date-time"
          },
          "DateFin": {
            "type": "string",
            "description": "La date de suppression de l'alerte",
            "format": "date-time",
            "nullable": true
          },
          "IdTypeEnvoi": {
            "type": "integer",
            "description": "Le type d'envoi de l'alerte : mail ou SFTP",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DTOImport": {
        "type": "object",
        "properties": {
          "Id_import": {
            "type": "integer",
            "description": "L'identifiant de l'import",
            "format": "int32"
          },
          "Libelle": {
            "type": "string",
            "description": "Le libellé de l'import",
            "nullable": true
          },
          "Nom_fichier": {
            "type": "string",
            "description": "Le nom du fichier",
            "nullable": true
          },
          "Date_import": {
            "type": "string",
            "description": "La date de l'ajout de l'import",
            "format": "date-time"
          },
          "Date_fin_traitement": {
            "type": "string",
            "description": "La date de fin de traitement du fichier",
            "format": "date-time",
            "nullable": true
          },
          "Date_fin": {
            "type": "string",
            "description": "La date de suppression de l'import",
            "format": "date-time",
            "nullable": true
          },
          "Quantite": {
            "type": "integer",
            "description": "Le nombre de sirets contenus dans le fichier",
            "format": "int32"
          },
          "Alertes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOAlerte"
            },
            "description": "La liste des alertes paramétrées sur l'import",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoHistoAlerteData": {
        "type": "object",
        "properties": {
          "IdImport": {
            "type": "integer",
            "description": "L'identifiant de l'import correspondant",
            "format": "int32"
          },
          "IdAlerte": {
            "type": "integer",
            "description": "L'identifiant de l'alerte correspondante",
            "format": "int32"
          },
          "Cle": {
            "type": "string",
            "description": "La clé concernée",
            "nullable": true
          },
          "Libelle": {
            "type": "string",
            "description": "Le libellé de la clé : siret ou siren",
            "nullable": true
          },
          "EventLibelle": {
            "type": "string",
            "description": "Le libellé de l'évènement",
            "nullable": true
          },
          "EventValue": {
            "type": "string",
            "description": "La valeur de l'évènement",
            "nullable": true
          },
          "EventDetail": {
            "type": "string",
            "description": "Le détail de l'évènement (date de radiation, ancien/nouveau scrore, ancienne/nouvelle adresse, etc)",
            "nullable": true
          },
          "EventDate": {
            "type": "string",
            "description": "La date de l'évènement",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DtoHistoAlerte": {
        "type": "object",
        "properties": {
          "DateEnvoi": {
            "type": "string",
            "description": "La date d'envoi de l'alerte",
            "format": "date-time"
          },
          "Data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DtoHistoAlerteData"
            },
            "description": "La liste des évènements décelés",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnnuaireInverseDemande": {
        "type": "object",
        "properties": {
          "Telephone": {
            "type": "string",
            "nullable": true
          },
          "LimiteReponse": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DtoAnnuaireInverseAdresse": {
        "type": "object",
        "properties": {
          "Appartement": {
            "type": "string",
            "description": "(38 caractères) Appartement, escalier, porte...",
            "nullable": true
          },
          "Batiment": {
            "type": "string",
            "description": "(38 caractères) Batiment, Résidence...",
            "nullable": true
          },
          "Voie": {
            "type": "string",
            "description": "(38 caractères) N° dans la voie et voie (RUE, AVENUE, ...)",
            "nullable": true
          },
          "BPlieudit": {
            "type": "string",
            "description": "(38 caractères) Boîte postale, lieu-dit",
            "nullable": true
          },
          "CP": {
            "type": "string",
            "description": "(5 caractères) Code Postal.",
            "nullable": true
          },
          "Ville": {
            "type": "string",
            "description": "(32 caractères) Nom de la commune",
            "nullable": true
          },
          "CodCom": {
            "type": "string",
            "description": "(5 caractères) Code commune INSEE",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoAnnuaireInverseResponse": {
        "type": "object",
        "properties": {
          "Civilite": {
            "type": "string",
            "description": "(4 caractères) Civilité",
            "nullable": true
          },
          "Nom": {
            "type": "string",
            "description": "(100 caractères) Nom ou raison sociale",
            "nullable": true
          },
          "Prenom": {
            "type": "string",
            "description": "(30 caractères) Prénom",
            "nullable": true
          },
          "Adresse": {
            "$ref": "#/components/schemas/DtoAnnuaireInverseAdresse"
          },
          "Professionnel": {
            "type": "boolean",
            "description": "Contient True pour une inscription professionnelle"
          },
          "Rubrique": {
            "type": "string",
            "description": "(100 caractères) Rubrique professionnelle",
            "nullable": true
          },
          "Fax": {
            "type": "string",
            "description": "(10 caractères) Numéro de Fax",
            "nullable": true
          },
          "ListeOrange": {
            "type": "boolean",
            "description": "Contient True pour une inscription en liste orange"
          }
        },
        "additionalProperties": false
      },
      "DtoEntreprise": {
        "type": "object",
        "properties": {
          "identreprise": {
            "type": "string",
            "description": "(32 caractères) Identifiant permettant d'appeler la fiche complète avec la méthode Compagny/byId/{id}",
            "nullable": true
          },
          "siren": {
            "type": "string",
            "description": "(9 caractères) SIREN de l'entreprise",
            "nullable": true
          },
          "siret": {
            "type": "string",
            "description": "(14 caractères) SIRET de l'Etablissement",
            "nullable": true
          },
          "rs": {
            "type": "string",
            "description": "Raison sociale",
            "nullable": true
          },
          "sigle": {
            "type": "string",
            "description": "(20 caractères) Sigle de l'Etablissement",
            "nullable": true
          },
          "enseigne": {
            "type": "string",
            "description": "(40 caractères) Enseigne de l'Etablissement",
            "nullable": true
          },
          "l1_nomen": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 1 (Raison Sociale)",
            "nullable": true
          },
          "l2_comp": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 2 (Complément de Raison Sociale)",
            "nullable": true
          },
          "l3_cadr": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 3 (Complément d'adresse)",
            "nullable": true
          },
          "l4_voie": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 4 (N° de voie et voie)",
            "nullable": true
          },
          "l5_disp": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 5 (BP ou Lieu-Dit)",
            "nullable": true
          },
          "l6_post": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 6 (Code Postal et Ville)",
            "nullable": true
          },
          "l7_etrg": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 7 (Pays si Etranger)",
            "nullable": true
          },
          "adresse1": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 1 Idaia",
            "nullable": true
          },
          "adresse2": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 2 Idaia",
            "nullable": true
          },
          "adresse3": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 3 Idaia",
            "nullable": true
          },
          "adresse4": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 4 Idaia",
            "nullable": true
          },
          "adresse5": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 5 Idaia",
            "nullable": true
          },
          "adresse6": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 6 Idaia",
            "nullable": true
          },
          "adr_total": {
            "type": "string",
            "description": "Ligne d'Adresse complète sur 1 ligne",
            "nullable": true
          },
          "paysasp": {
            "type": "integer",
            "description": "2: France, 1: DOM-TOM, 0: Etranger",
            "format": "int32"
          },
          "region2016": {
            "type": "string",
            "description": "Région (Etablissement)",
            "nullable": true
          },
          "lib_region2016": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "Région (Etablissement)",
            "nullable": true
          },
          "lib_region": {
            "type": "string",
            "nullable": true
          },
          "dept": {
            "type": "string",
            "description": "Département  (Etablissement)",
            "nullable": true
          },
          "lib_departement": {
            "type": "string",
            "nullable": true
          },
          "epci": {
            "type": "string",
            "description": "Intercommunalité (Etablissement)",
            "nullable": true
          },
          "arronetasp": {
            "type": "string",
            "description": "Arrondissement (Etablissement)",
            "nullable": true
          },
          "lib_arrondissement": {
            "type": "string",
            "nullable": true
          },
          "cantonasp": {
            "type": "string",
            "description": "canton intra (Etablissement)",
            "nullable": true
          },
          "lib_canton_asp": {
            "type": "string",
            "nullable": true
          },
          "canton": {
            "type": "string",
            "description": "canton (Etablissement)",
            "nullable": true
          },
          "lib_canton": {
            "type": "string",
            "nullable": true
          },
          "zemetasp": {
            "type": "string",
            "description": "zone d'emploi (Etablissement)",
            "nullable": true
          },
          "lib_zemp": {
            "type": "string",
            "nullable": true
          },
          "cod_com": {
            "type": "string",
            "description": "Commune (Etablissement)",
            "nullable": true
          },
          "lib_commune": {
            "type": "string",
            "nullable": true
          },
          "codpos": {
            "type": "string",
            "description": "Code postal (Etablissement)",
            "nullable": true
          },
          "mat_voie": {
            "type": "string",
            "description": "matricule Voie (Etablissement)",
            "nullable": true
          },
          "num_voie": {
            "type": "integer",
            "description": "Numéro de voie (Etablissement)",
            "format": "int32"
          },
          "aa": {
            "type": "string",
            "description": "Aire urbaine (Etablissement)",
            "nullable": true
          },
          "libelle_aa": {
            "type": "string",
            "nullable": true
          },
          "iris": {
            "type": "string",
            "description": "Iris (Etablissement)",
            "nullable": true
          },
          "lib_iris": {
            "type": "string",
            "nullable": true
          },
          "ilot": {
            "type": "string",
            "description": "Ilot (Etablissement)",
            "nullable": true
          },
          "siege": {
            "type": "boolean",
            "description": "Qualité de Siège ou non de l'Etablissement"
          },
          "lib_siege": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "portable": {
            "type": "string",
            "nullable": true
          },
          "telfixe": {
            "type": "string",
            "nullable": true
          },
          "tel": {
            "type": "string",
            "nullable": true
          },
          "etat": {
            "type": "string",
            "description": "(8 caractères) Etat de l'Etablissement (ACTIF, CESSE ou DEMENAGE)",
            "nullable": true
          },
          "date_etat": {
            "type": "string",
            "description": "(8 caractères) Date de l'Etat (si cessé ou déménagé) AAAAMMJJ",
            "nullable": true
          },
          "dcrenasp": {
            "type": "string",
            "description": "Date de création de l'Entreprise (AAAAMM)",
            "nullable": true
          },
          "dcretasp": {
            "type": "string",
            "description": "Date de création de l'Etablissement (AAAAMM)",
            "nullable": true
          },
          "date_modif": {
            "type": "string",
            "nullable": true
          },
          "origine": {
            "type": "string",
            "description": "(2 caractères) Origine de la création de l'Etablissement",
            "nullable": true
          },
          "lib_origine": {
            "type": "string",
            "nullable": true
          },
          "civilite": {
            "type": "string",
            "description": "(1 caractère) Civilité (pour les personnes physiques, 1 pour Monsieur, 2 pour Madame)",
            "nullable": true
          },
          "lib_civilite": {
            "type": "string",
            "nullable": true
          },
          "auxilt": {
            "type": "string",
            "nullable": true
          },
          "lib_auxilt": {
            "type": "string",
            "nullable": true
          },
          "aprm": {
            "type": "string",
            "description": "(6 caractères) Activité Principale (pour les ressortissants de la Chambre des Métiers)",
            "nullable": true
          },
          "lib_aprm": {
            "type": "string",
            "nullable": true
          },
          "tefen": {
            "type": "string",
            "description": "(2 caractères) Tranche d'Effectif salarié de l'Entreprise",
            "nullable": true
          },
          "lib_tefen": {
            "type": "string",
            "nullable": true
          },
          "tefet": {
            "type": "string",
            "description": "(2 caractères) Tranche d'Effectif salarié de l'Etablissement",
            "nullable": true
          },
          "exists_datadrive_bodacc_pcl_siren": {
            "type": "boolean",
            "description": "O si procédure collective"
          },
          "apennaf21_apen21": {
            "type": "string",
            "description": "Activité Principale (21 classes, Codes NAF) de l'Entreprise",
            "nullable": true
          },
          "lib_apen21": {
            "type": "string",
            "nullable": true
          },
          "lib_apen88": {
            "type": "string",
            "nullable": true
          },
          "lib_apen272": {
            "type": "string",
            "nullable": true
          },
          "lib_apen615": {
            "type": "string",
            "nullable": true
          },
          "apen700": {
            "type": "string",
            "description": "(5 caractères) Activité Principale (700 classes, Codes NAF) de l'Entreprise",
            "nullable": true
          },
          "lib_apen700": {
            "type": "string",
            "nullable": true
          },
          "apetnaf21_apet21": {
            "type": "string",
            "description": "Activité Principale (21 classes, Codes NAF) de l'Entreprise",
            "nullable": true
          },
          "lib_apet21": {
            "type": "string",
            "nullable": true
          },
          "lib_apet88": {
            "type": "string",
            "nullable": true
          },
          "lib_apet272": {
            "type": "string",
            "nullable": true
          },
          "lib_apet615": {
            "type": "string",
            "nullable": true
          },
          "apet700": {
            "type": "string",
            "description": "(5 caractères) Activité Principale (700 classes, Codes NAF) de l'Etablissement",
            "nullable": true
          },
          "lib_apet700": {
            "type": "string",
            "nullable": true
          },
          "nbetexpl": {
            "type": "integer",
            "description": "(4 caractères) Nombre d'Etablissement exploitants de l'Entreprise",
            "format": "int32"
          },
          "lieuact": {
            "type": "string",
            "description": "(2 caractères) Lieu de l'activité de l'Etablissement",
            "nullable": true
          },
          "lib_lieuact": {
            "type": "string",
            "nullable": true
          },
          "explet": {
            "type": "string",
            "description": "(1 caractère) Etablissement exploitant tout ou partie des moyens de production",
            "nullable": true
          },
          "lib_explet": {
            "type": "string",
            "nullable": true
          },
          "efencent": {
            "type": "integer",
            "description": "(6 caractères) Effectif salairé (à la centaine) de l'Entreprise",
            "format": "int32"
          },
          "depcomen": {
            "type": "string",
            "description": "(5 caractères) Département, Commune du Siège",
            "nullable": true
          },
          "efetcent": {
            "type": "integer",
            "description": "(6 caractères) Effectif salairé (à la centaine) de l'Etablissement",
            "format": "int32"
          },
          "lib_tefet": {
            "type": "string",
            "description": "Lib Tranche d'Effectif salarié de l'Etablissement",
            "nullable": true
          },
          "tca": {
            "type": "string",
            "description": "(1 caractère) Tranche de Chiffre d'Affaires de l'Entreprise",
            "nullable": true
          },
          "lib_tca": {
            "type": "string",
            "nullable": true
          },
          "cj": {
            "type": "string",
            "description": "(4 caractères) Catégorie juridique",
            "nullable": true
          },
          "lib_catjuridique": {
            "type": "string",
            "nullable": true
          },
          "activnat": {
            "type": "string",
            "description": "(2 caractères) Nature de l'activité de l'Etablissement",
            "nullable": true
          },
          "lib_activnat": {
            "type": "string",
            "nullable": true
          },
          "actisurf": {
            "type": "string",
            "description": "(2 caractères) Type de magasin",
            "nullable": true
          },
          "lib_actisurf": {
            "type": "string",
            "nullable": true
          },
          "indrep": {
            "type": "string",
            "description": "(1 caractère) Indice de répétition (Bis, Ter, etc...) de l'Etablissement",
            "nullable": true
          },
          "tcaexpor": {
            "type": "string",
            "description": "(1 caractère) Tranche de CA à l'exportation (grandes entreprises)",
            "nullable": true
          },
          "rpen": {
            "type": "string",
            "description": "(2 caractères) Code Région du Siège",
            "nullable": true
          },
          "regimp": {
            "type": "string",
            "nullable": true
          },
          "prodpart": {
            "type": "string",
            "description": "(1 caractère) Participation particulière à la production",
            "nullable": true
          },
          "lib_prodpart": {
            "type": "string",
            "nullable": true
          },
          "tca_scoree": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lib_tca_scoree": {
            "type": "string",
            "nullable": true
          },
          "lib_catjuri2": {
            "type": "string",
            "nullable": true
          },
          "tcd": {
            "type": "string",
            "description": "Tranche de population de la commune de l'établissemebt",
            "nullable": true
          },
          "lib_tcd": {
            "type": "string",
            "nullable": true
          },
          "saisonat": {
            "type": "string",
            "description": "(1 caractère) Type d'activité : permanente (\"P\") ou saisonnière (\"S\")",
            "nullable": true
          },
          "iib_saisonat": {
            "type": "string",
            "nullable": true
          },
          "monoact": {
            "type": "string",
            "nullable": true
          },
          "regimp_lib_region": {
            "type": "string",
            "description": "Principale région d'implantation",
            "nullable": true
          },
          "dcrenasp_lib_mois": {
            "type": "string",
            "nullable": true
          },
          "lib_mois": {
            "type": "string",
            "nullable": true
          },
          "depten": {
            "type": "string",
            "nullable": true
          },
          "lib_surrub": {
            "type": "string",
            "nullable": true
          },
          "surrubpro_codesurrub": {
            "type": "string",
            "nullable": true
          },
          "notice80_tel_cod_rub": {
            "type": "string",
            "nullable": true
          },
          "lib_rub": {
            "type": "string",
            "nullable": true
          },
          "rna": {
            "type": "string",
            "description": "Identifiant du Répertoire National des Associations",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoEntrepriseLight": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "(32 caractères) Identifiant permettant d'appeler la fiche complète avec la méthode Compagny/byId/{id}",
            "nullable": true
          },
          "Nomen": {
            "type": "string",
            "description": "(40 caractères) Nom de l'Entreprise (Raison Sociale)",
            "nullable": true
          },
          "rs": {
            "type": "string",
            "description": "Raison sociale",
            "nullable": true
          },
          "Sigle": {
            "type": "string",
            "description": "(20 caractères) Sigle de l'Etablissement",
            "nullable": true
          },
          "Enseigne": {
            "type": "string",
            "description": "(40 caractères) Nom de l'Etablissement",
            "nullable": true
          },
          "Adresse2": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 2 Idaia",
            "nullable": true
          },
          "Adresse3": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 3 Idaia (Complément d'adresse)",
            "nullable": true
          },
          "Adresse4": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 4 Idaia (N° de voie et voie)",
            "nullable": true
          },
          "Adresse5": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 5 Idaia (BP ou Lieu-Dit)",
            "nullable": true
          },
          "Adresse6": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 6 Idaia (Code Postal et Ville)",
            "nullable": true
          },
          "Lib_Apet700": {
            "type": "string",
            "description": "Libellé Activité (700 classes, Codes NAF) de l'Etablissement",
            "nullable": true
          },
          "l2_comp": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 2",
            "nullable": true
          },
          "l3_cadr": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 3 (Complément d'adresse)",
            "nullable": true
          },
          "l4_voie": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 4 (N° de voie et voie)",
            "nullable": true
          },
          "l5_disp": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 5 (BP ou Lieu-Dit)",
            "nullable": true
          },
          "l6_post": {
            "type": "string",
            "description": "(38 caractères) Ligne d'Adresse 6 (Code Postal et Ville)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoRechercheUnique": {
        "type": "object",
        "properties": {
          "SIRET": {
            "type": "string",
            "description": "SIRET de l'Etablissement",
            "nullable": true
          },
          "NOMEN": {
            "type": "string",
            "description": "Nom ou Raison Sociale de l'Entreprise",
            "nullable": true
          },
          "ENSEIGNE": {
            "type": "string",
            "description": "Enseigne de l'Etablissement",
            "nullable": true
          },
          "SIGLE": {
            "type": "string",
            "description": "Sigle de l'Etablissement",
            "nullable": true
          },
          "L1_NOMEN": {
            "type": "string",
            "description": "Ligne d'Adresse 1 (Raison Sociale)",
            "nullable": true
          },
          "L2_COMP": {
            "type": "string",
            "description": "Ligne d'Adresse 2 (Complément de Raison Sociale)",
            "nullable": true
          },
          "L3_CADR": {
            "type": "string",
            "description": "Ligne d'Adresse 3 (Complément d'adresse)",
            "nullable": true
          },
          "L4_VOIE": {
            "type": "string",
            "description": "Ligne d'Adresse 4 (N° de voie et voie)",
            "nullable": true
          },
          "L5_DISTSP": {
            "type": "string",
            "description": "Ligne d'Adresse 5 (BP ou Lieu-Dit)",
            "nullable": true
          },
          "L6_POST": {
            "type": "string",
            "description": "Ligne d'Adresse 6 (Code Postal et Ville)",
            "nullable": true
          },
          "L7_ETRG": {
            "type": "string",
            "description": "Ligne d'Adresse 7 (Pays si Etranger)",
            "nullable": true
          },
          "TEL": {
            "type": "string",
            "description": "Téléphone de l'Etablissement",
            "nullable": true
          },
          "FAX": {
            "type": "string",
            "description": "Fax de l'Etablissement",
            "nullable": true
          },
          "REGION": {
            "type": "string",
            "description": "Code Région de l'Etablissement",
            "nullable": true
          },
          "DEPT": {
            "type": "string",
            "description": "Numéro du Département de l'Etablissement",
            "nullable": true
          },
          "ARRONET": {
            "type": "string",
            "description": "Arrondissement de l'Etablissement",
            "nullable": true
          },
          "CTONET": {
            "type": "string",
            "description": "Code Canton ou \"pseudo-canton\" de l'Etablissement",
            "nullable": true
          },
          "COD_COM": {
            "type": "string",
            "description": "Code Commune de l'Etablissement",
            "nullable": true
          },
          "LIB_COM": {
            "type": "string",
            "description": "Libellé de la commune de l'Etablissement",
            "nullable": true
          },
          "CODPOS": {
            "type": "string",
            "description": "Code Postal de l'Etablissement",
            "nullable": true
          },
          "ZEMET": {
            "type": "string",
            "description": "Code Zone d'emploi de l'Etablissement",
            "nullable": true
          },
          "COD_VOIE": {
            "type": "string",
            "description": "Code voie de l'Etablissement",
            "nullable": true
          },
          "NUM_VOIE": {
            "type": "string",
            "description": "Numéro de voie de l'Etablissement",
            "nullable": true
          },
          "INDREP": {
            "type": "string",
            "description": "Indice de répétition (Bis, Ter, etc...) de l'Etablissement",
            "nullable": true
          },
          "TYPE_VOIE": {
            "type": "string",
            "description": "Type de voie de l'Etablissement",
            "nullable": true
          },
          "LIB_VOIE": {
            "type": "string",
            "description": "Libellé de voie de l'Etablissement",
            "nullable": true
          },
          "APET700": {
            "type": "string",
            "description": "Activité (700 classes, Codes NAF) de l'Etablissement",
            "nullable": true
          },
          "SIEGE": {
            "type": "string",
            "description": "Qualité de Siège ou non de l'Etablissement",
            "nullable": true
          },
          "TEFET": {
            "type": "string",
            "description": "Tranche d'Effectif salarié de l'Etablissement",
            "nullable": true
          },
          "EFETCENT": {
            "type": "string",
            "description": "Effectif salairé (à la centaine) de l'Etablissement",
            "nullable": true
          },
          "ORIGINE": {
            "type": "string",
            "description": "Origine de la création de l'Etablissement",
            "nullable": true
          },
          "DCRET": {
            "type": "string",
            "description": "Date de création de l'Etablissement (AAAAMM)",
            "nullable": true
          },
          "ACTIVNAT": {
            "type": "string",
            "description": "Nature de l'activité de l'Etablissement",
            "nullable": true
          },
          "LIEUACT": {
            "type": "string",
            "description": "Lieu de l'activité de l'Etablissement",
            "nullable": true
          },
          "ACTISURF": {
            "type": "string",
            "description": "Type de magasin",
            "nullable": true
          },
          "EXPLET": {
            "type": "string",
            "description": "Etablissement exploitant tout ou partie des moyens de production",
            "nullable": true
          },
          "PRODPART": {
            "type": "string",
            "description": "Participation particulière à la production",
            "nullable": true
          },
          "CIVILITE": {
            "type": "string",
            "description": "Civilité (pour les personnes physiques, 1 pour Monsieur, 2 pour Madame)",
            "nullable": true
          },
          "CJ": {
            "type": "string",
            "description": "Catégorie juridique",
            "nullable": true
          },
          "TEFEN": {
            "type": "string",
            "description": "Tranche d'Effectif salarié de l'Entreprise",
            "nullable": true
          },
          "EFENCENT": {
            "type": "string",
            "description": "Effectif salairé (à la centaine) de l'Entreprise",
            "nullable": true
          },
          "APEN700": {
            "type": "string",
            "description": "Activité Principale (700 classes, Codes NAF) de l'Entreprise",
            "nullable": true
          },
          "APRM": {
            "type": "string",
            "description": "Activité Principale (pour les ressortissants de la Chambre des Métiers)",
            "nullable": true
          },
          "TCA": {
            "type": "string",
            "description": "Tranche de Chiffre d'Affaires de l'Entreprise",
            "nullable": true
          },
          "DCREN": {
            "type": "string",
            "description": "Date de création de l'Entreprise (AAAAMM)",
            "nullable": true
          },
          "EXPLEN": {
            "type": "string",
            "description": "Entreprise exploitant tout ou partie des moyens de production",
            "nullable": true
          },
          "NBETEXPL": {
            "type": "string",
            "description": "Nombre d'Etablissement exploitants de l'Entreprise",
            "nullable": true
          },
          "TCAEXP": {
            "type": "string",
            "description": "Tranche de CA à l'exportation (grandes entreprises)",
            "nullable": true
          },
          "REGIMP": {
            "type": "string",
            "description": "Principale région d'implantation",
            "nullable": true
          },
          "RPEN": {
            "type": "string",
            "description": "Code Région du Siège",
            "nullable": true
          },
          "DEPCOMEN": {
            "type": "string",
            "description": "Département, Commune du Siège",
            "nullable": true
          },
          "ETAT": {
            "type": "string",
            "description": "Etat de l'Etablissement (ACTIF, CESSE ou DEMENAGE)",
            "nullable": true
          },
          "DATE_ETAT": {
            "type": "string",
            "description": "Date de l'Etat (si cessé ou déménagé) AAAAMMJJ",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoMarqueInpi": {
        "type": "object",
        "properties": {
          "datedepot": {
            "type": "string",
            "description": "Date de dépot de la marque",
            "format": "date-time",
            "nullable": true
          },
          "datederevenement": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateexpiration": {
            "type": "string",
            "description": "Date d'expiration de la marque",
            "format": "date-time",
            "nullable": true
          },
          "typepublication": {
            "type": "string",
            "description": "Type de publication de la marque",
            "nullable": true
          },
          "nommarque": {
            "type": "string",
            "description": "Nom de la marque",
            "nullable": true
          },
          "identifiant": {
            "type": "integer",
            "description": "Identifiant Etablissement permettant d'appeler la fiche complète avec la méthode Compagny/byId/{id}",
            "format": "int32"
          },
          "siren": {
            "type": "string",
            "description": "SIREN de l'entreprise détenant la marque",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoDomaine": {
        "type": "object",
        "properties": {
          "siren": {
            "type": "string",
            "description": "SIREN: Identifiant entreprise",
            "nullable": true
          },
          "siret": {
            "type": "string",
            "description": "SIRET: Identifiant de l'établissement siège",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL (ex: www.idaia.group)",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "description": "Domaine (ex: idaia.group)",
            "nullable": true
          },
          "site_principal": {
            "type": "integer",
            "description": "valeur à 1 si site principal",
            "format": "int32",
            "nullable": true
          },
          "top_ecommerce": {
            "type": "string",
            "description": "valeur à 1 si site ecommerce",
            "nullable": true
          },
          "siege": {
            "type": "integer",
            "description": "valeur à 1 si associé à siret siege",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DtoDistinctDomaine": {
        "type": "object",
        "properties": {
          "siren": {
            "type": "string",
            "description": "SIREN: Identifiant entreprise",
            "nullable": true
          },
          "siret": {
            "type": "string",
            "description": "SIRET: Identifiant de l'établissement siège",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "description": "Domaine (ex: idaia.group)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoDirigeant": {
        "type": "object",
        "properties": {
          "idcontact": {
            "type": "string",
            "description": "Identifiant du contact pour un appel unitaire",
            "nullable": true
          },
          "siret": {
            "type": "string",
            "description": "(14 caractères) SIRET du ou des dirigeants/fonctions restitués",
            "nullable": true
          },
          "fonction": {
            "type": "string",
            "description": "(4 caractères) Code fonction d'un dirigeant ou d'une fonction opérationnelle",
            "nullable": true
          },
          "lib_foncdir": {
            "type": "string",
            "description": "(50 caractères) Libellé correspondant au code fonction",
            "nullable": true
          },
          "lib_foncdir16": {
            "type": "string",
            "description": "(50 caractères) Libellé correspondant au code fonction",
            "nullable": true
          },
          "prenom": {
            "type": "string",
            "description": "(25 caractères) Prénom d'un dirigeant ou d'une fonction opérationnelle",
            "nullable": true
          },
          "nom": {
            "type": "string",
            "description": "(40 aractères) Nom d'un dirigeant ou d'une fonction opérationnelle",
            "nullable": true
          },
          "civilite": {
            "type": "string",
            "description": "(4 caractères) Civilité d'un dirigeant ou d'une fonction opérationnelle",
            "nullable": true
          },
          "ordre_fonction": {
            "type": "integer",
            "description": "(2 caractères) Numéro d'ordonnancement (dans un type_fonction)",
            "format": "int32"
          },
          "type_fonction": {
            "type": "integer",
            "description": "(1 caractère) Typologie d'une fonction (1 = Dirigeant, 2 = Fonction opérationnelle)",
            "format": "int32"
          },
          "date_naissance": {
            "type": "string",
            "description": "Date de naissance du dirigeant",
            "format": "date-time",
            "nullable": true
          },
          "ville_naissance": {
            "type": "string",
            "description": "Ville de naissance du dirigeant",
            "nullable": true
          },
          "identreprise": {
            "type": "string",
            "nullable": true
          },
          "rs": {
            "type": "string",
            "description": "(30 caractères) Raison Sociale de l'entreprise du dirigeant",
            "nullable": true
          },
          "enseigne": {
            "type": "string",
            "description": "(30 caractères) Enseigne de l'entreprise du dirigeant",
            "nullable": true
          },
          "adresse2": {
            "type": "string",
            "description": "(38 caractères) Adresse de l'entreprise du dirigeant",
            "nullable": true
          },
          "adresse3": {
            "type": "string",
            "nullable": true
          },
          "adresse4": {
            "type": "string",
            "nullable": true
          },
          "adresse5": {
            "type": "string",
            "nullable": true
          },
          "adresse6": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoSearchDirigeant": {
        "type": "object",
        "properties": {
          "fonction": {
            "type": "string",
            "description": "(4 caractères) Code fonction d'un dirigeant ou d'une fonction opérationnelle",
            "nullable": true
          },
          "lib_foncdir": {
            "type": "string",
            "description": "(50 caractères) Libellé correspondant au code fonction",
            "nullable": true
          },
          "lib_foncdir16": {
            "type": "string",
            "description": "(50 caractères) Libellé correspondant au code fonction",
            "nullable": true
          },
          "prenom": {
            "type": "string",
            "description": "(25 caractères) Prénom d'un dirigeant ou d'une fonction opérationnelle",
            "nullable": true
          },
          "nom": {
            "type": "string",
            "description": "(40 aractères) Nom d'un dirigeant ou d'une fonction opérationnelle",
            "nullable": true
          },
          "civilite": {
            "type": "string",
            "description": "(4 caractères) Civilité d'un dirigeant ou d'une fonction opérationnelle",
            "nullable": true
          },
          "idcontact": {
            "type": "string",
            "description": "Identifiant du contact pour un appel unitaire",
            "nullable": true
          },
          "type_fonction": {
            "type": "integer",
            "description": "(1 caractère) Typologie d'une fonction (1 = Dirigeant, 2 = Fonction opérationnelle)",
            "format": "int32"
          },
          "rs": {
            "type": "string",
            "description": "(30 caractères) Raison Sociale de l'entreprise du dirigeant",
            "nullable": true
          },
          "enseigne": {
            "type": "string",
            "description": "(30 caractères) Enseigne de l'entreprise du dirigeant",
            "nullable": true
          },
          "adresse2": {
            "type": "string",
            "description": "(38 caractères) Adresse de l'entreprise du dirigeant",
            "nullable": true
          },
          "adresse3": {
            "type": "string",
            "nullable": true
          },
          "adresse4": {
            "type": "string",
            "nullable": true
          },
          "adresse5": {
            "type": "string",
            "nullable": true
          },
          "adresse6": {
            "type": "string",
            "nullable": true
          },
          "identreprise": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoBilanLight": {
        "type": "object",
        "properties": {
          "siren": {
            "type": "string",
            "description": "SIREN: Identifiant entreprise",
            "nullable": true
          },
          "siret": {
            "type": "string",
            "description": "SIRET de l'établissement siège",
            "nullable": true
          },
          "type_bilan": {
            "type": "string",
            "description": "(C)omplet, (K) onsolidé, (S)implifié, (B)anque, (A)ssurance",
            "nullable": true
          },
          "bicn": {
            "type": "string",
            "description": "date clôture bilan",
            "nullable": true
          },
          "bicn_deb": {
            "type": "string",
            "description": "date début bilan",
            "nullable": true
          },
          "bicn1": {
            "type": "string",
            "description": "date clôture blian précédent",
            "nullable": true
          },
          "bidn": {
            "type": "string",
            "description": "nombre de mois",
            "nullable": true
          },
          "confidentialite": {
            "type": "string",
            "description": "0 = Non Confidentiel, 1 = Confidentiel total, 2 = Confidentiel partiel(compte de résultat)",
            "nullable": true
          },
          "fl": {
            "type": "string",
            "description": "Chiffre d'affaires (total)",
            "nullable": true
          },
          "fk": {
            "type": "string",
            "description": "Chiffre d'affaires export",
            "nullable": true
          },
          "hn": {
            "type": "string",
            "description": "Résultat net",
            "nullable": true
          },
          "dl": {
            "type": "string",
            "description": "Capitaux propres",
            "nullable": true
          },
          "caf": {
            "type": "string",
            "description": "Capacité d'autofinancement",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "dtfin": {
            "type": "string",
            "description": "Dettes financières",
            "nullable": true
          },
          "vcha": {
            "type": "string",
            "description": "Variation du Chiffre d'affaires",
            "nullable": true
          },
          "yp": {
            "type": "string",
            "description": "Effectif",
            "nullable": true
          },
          "treso": {
            "type": "string",
            "description": "Trésorerie",
            "nullable": true
          },
          "ec": {
            "type": "string",
            "description": "Total des dettes",
            "nullable": true
          },
          "gg": {
            "type": "string",
            "description": "Résultat d'exploitation",
            "nullable": true
          },
          "ee": {
            "type": "string",
            "description": "Total bilan",
            "nullable": true
          },
          "gj": {
            "type": "string",
            "description": "Produits financiers de participations",
            "nullable": true
          },
          "gu": {
            "type": "string",
            "description": "Total des charges financières",
            "nullable": true
          },
          "bfdr": {
            "type": "string",
            "description": "Besoin en Fonds de Roulement",
            "nullable": true
          },
          "da": {
            "type": "string",
            "description": "Capital social ou individuel",
            "nullable": true
          },
          "eh": {
            "type": "string",
            "description": "Concours bancaires",
            "nullable": true
          },
          "bx": {
            "type": "string",
            "description": "Clients et comptes rattachés",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoBilanComplet": {
        "type": "object",
        "properties": {
          "_1692": {
            "type": "string",
            "nullable": true
          },
          "_1823": {
            "type": "string",
            "nullable": true
          },
          "_1843": {
            "type": "string",
            "nullable": true
          },
          "_1953": {
            "type": "string",
            "nullable": true
          },
          "_1973": {
            "type": "string",
            "nullable": true
          },
          "_1993": {
            "type": "string",
            "nullable": true
          },
          "_2431": {
            "type": "string",
            "nullable": true
          },
          "_2591": {
            "type": "string",
            "nullable": true
          },
          "_3161": {
            "type": "string",
            "nullable": true
          },
          "_4021": {
            "type": "string",
            "nullable": true
          },
          "_4041": {
            "type": "string",
            "nullable": true
          },
          "_4121": {
            "type": "string",
            "nullable": true
          },
          "_4141": {
            "type": "string",
            "nullable": true
          },
          "_4221": {
            "type": "string",
            "nullable": true
          },
          "_4321": {
            "type": "string",
            "nullable": true
          },
          "_4421": {
            "type": "string",
            "nullable": true
          },
          "_4521": {
            "type": "string",
            "nullable": true
          },
          "_4621": {
            "type": "string",
            "nullable": true
          },
          "_4721": {
            "type": "string",
            "nullable": true
          },
          "_4821": {
            "type": "string",
            "nullable": true
          },
          "_4841": {
            "type": "string",
            "nullable": true
          },
          "_4901": {
            "type": "string",
            "nullable": true
          },
          "_4921": {
            "type": "string",
            "nullable": true
          },
          "_4941": {
            "type": "string",
            "nullable": true
          },
          "_5821": {
            "type": "string",
            "nullable": true
          },
          "_5841": {
            "type": "string",
            "nullable": true
          },
          "_5851": {
            "type": "string",
            "nullable": true
          },
          "_5961": {
            "type": "string",
            "nullable": true
          },
          "_5971": {
            "type": "string",
            "nullable": true
          },
          "_5991": {
            "type": "string",
            "nullable": true
          },
          "_6021": {
            "type": "string",
            "nullable": true
          },
          "_6031": {
            "type": "string",
            "nullable": true
          },
          "_6041": {
            "type": "string",
            "nullable": true
          },
          "_6051": {
            "type": "string",
            "nullable": true
          },
          "_6121": {
            "type": "string",
            "nullable": true
          },
          "_6141": {
            "type": "string",
            "nullable": true
          },
          "_6221": {
            "type": "string",
            "nullable": true
          },
          "_6241": {
            "type": "string",
            "nullable": true
          },
          "_6321": {
            "type": "string",
            "nullable": true
          },
          "_6341": {
            "type": "string",
            "nullable": true
          },
          "_6421": {
            "type": "string",
            "nullable": true
          },
          "_6441": {
            "type": "string",
            "nullable": true
          },
          "_6521": {
            "type": "string",
            "nullable": true
          },
          "_6541": {
            "type": "string",
            "nullable": true
          },
          "_6621": {
            "type": "string",
            "nullable": true
          },
          "_6641": {
            "type": "string",
            "nullable": true
          },
          "_6821": {
            "type": "string",
            "nullable": true
          },
          "_6841": {
            "type": "string",
            "nullable": true
          },
          "_siren": {
            "type": "string",
            "nullable": true
          },
          "_siret": {
            "type": "string",
            "nullable": true
          },
          "_bicn": {
            "type": "string",
            "nullable": true
          },
          "_bicn_deb": {
            "type": "string",
            "nullable": true
          },
          "_bicn1": {
            "type": "string",
            "nullable": true
          },
          "_datemaj": {
            "type": "string",
            "nullable": true
          },
          "_bidn": {
            "type": "string",
            "nullable": true
          },
          "_bidn1": {
            "type": "string",
            "nullable": true
          },
          "_type_bilan": {
            "type": "string",
            "nullable": true
          },
          "_confidentialite": {
            "type": "string",
            "nullable": true
          },
          "_origine": {
            "type": "string",
            "nullable": true
          },
          "_aa": {
            "type": "string",
            "nullable": true
          },
          "_aa3": {
            "type": "string",
            "nullable": true
          },
          "_ab": {
            "type": "string",
            "nullable": true
          },
          "_ac": {
            "type": "string",
            "nullable": true
          },
          "_ab3": {
            "type": "string",
            "nullable": true
          },
          "_cx": {
            "type": "string",
            "nullable": true
          },
          "_cq": {
            "type": "string",
            "nullable": true
          },
          "_cx3": {
            "type": "string",
            "nullable": true
          },
          "_af": {
            "type": "string",
            "nullable": true
          },
          "_ag": {
            "type": "string",
            "nullable": true
          },
          "_af3": {
            "type": "string",
            "nullable": true
          },
          "_ah": {
            "type": "string",
            "nullable": true
          },
          "_ai": {
            "type": "string",
            "nullable": true
          },
          "_ah3": {
            "type": "string",
            "nullable": true
          },
          "_aj": {
            "type": "string",
            "nullable": true
          },
          "_ak": {
            "type": "string",
            "nullable": true
          },
          "_aj3": {
            "type": "string",
            "nullable": true
          },
          "_al": {
            "type": "string",
            "nullable": true
          },
          "_am": {
            "type": "string",
            "nullable": true
          },
          "_al3": {
            "type": "string",
            "nullable": true
          },
          "_an": {
            "type": "string",
            "nullable": true
          },
          "_ao": {
            "type": "string",
            "nullable": true
          },
          "_an3": {
            "type": "string",
            "nullable": true
          },
          "_ap": {
            "type": "string",
            "nullable": true
          },
          "_aq": {
            "type": "string",
            "nullable": true
          },
          "_ap3": {
            "type": "string",
            "nullable": true
          },
          "_ar": {
            "type": "string",
            "nullable": true
          },
          "_as": {
            "type": "string",
            "nullable": true
          },
          "_ar3": {
            "type": "string",
            "nullable": true
          },
          "_at": {
            "type": "string",
            "nullable": true
          },
          "_au": {
            "type": "string",
            "nullable": true
          },
          "_at3": {
            "type": "string",
            "nullable": true
          },
          "_av": {
            "type": "string",
            "nullable": true
          },
          "_aw": {
            "type": "string",
            "nullable": true
          },
          "_av3": {
            "type": "string",
            "nullable": true
          },
          "_ax": {
            "type": "string",
            "nullable": true
          },
          "_ay": {
            "type": "string",
            "nullable": true
          },
          "_ax3": {
            "type": "string",
            "nullable": true
          },
          "_cs": {
            "type": "string",
            "nullable": true
          },
          "_ct": {
            "type": "string",
            "nullable": true
          },
          "_cs3": {
            "type": "string",
            "nullable": true
          },
          "_cu": {
            "type": "string",
            "nullable": true
          },
          "_cv": {
            "type": "string",
            "nullable": true
          },
          "_cu3": {
            "type": "string",
            "nullable": true
          },
          "_bb": {
            "type": "string",
            "nullable": true
          },
          "_bc": {
            "type": "string",
            "nullable": true
          },
          "_bb3": {
            "type": "string",
            "nullable": true
          },
          "_bd": {
            "type": "string",
            "nullable": true
          },
          "_be": {
            "type": "string",
            "nullable": true
          },
          "_bd3": {
            "type": "string",
            "nullable": true
          },
          "_bf": {
            "type": "string",
            "nullable": true
          },
          "_bg": {
            "type": "string",
            "nullable": true
          },
          "_bf3": {
            "type": "string",
            "nullable": true
          },
          "_bh": {
            "type": "string",
            "nullable": true
          },
          "_bi": {
            "type": "string",
            "nullable": true
          },
          "_bh3": {
            "type": "string",
            "nullable": true
          },
          "_bj": {
            "type": "string",
            "nullable": true
          },
          "_bk": {
            "type": "string",
            "nullable": true
          },
          "_bj3": {
            "type": "string",
            "nullable": true
          },
          "_bl": {
            "type": "string",
            "nullable": true
          },
          "_bm": {
            "type": "string",
            "nullable": true
          },
          "_bl3": {
            "type": "string",
            "nullable": true
          },
          "_bn": {
            "type": "string",
            "nullable": true
          },
          "_bo": {
            "type": "string",
            "nullable": true
          },
          "_bn3": {
            "type": "string",
            "nullable": true
          },
          "_bp": {
            "type": "string",
            "nullable": true
          },
          "_bq": {
            "type": "string",
            "nullable": true
          },
          "_bp3": {
            "type": "string",
            "nullable": true
          },
          "_br": {
            "type": "string",
            "nullable": true
          },
          "_bs": {
            "type": "string",
            "nullable": true
          },
          "_br3": {
            "type": "string",
            "nullable": true
          },
          "_bt": {
            "type": "string",
            "nullable": true
          },
          "_bu": {
            "type": "string",
            "nullable": true
          },
          "_bt3": {
            "type": "string",
            "nullable": true
          },
          "_bv": {
            "type": "string",
            "nullable": true
          },
          "_bw": {
            "type": "string",
            "nullable": true
          },
          "_bv3": {
            "type": "string",
            "nullable": true
          },
          "_bx": {
            "type": "string",
            "nullable": true
          },
          "_by": {
            "type": "string",
            "nullable": true
          },
          "_bx3": {
            "type": "string",
            "nullable": true
          },
          "_bz": {
            "type": "string",
            "nullable": true
          },
          "_ca": {
            "type": "string",
            "nullable": true
          },
          "_bz3": {
            "type": "string",
            "nullable": true
          },
          "_cb": {
            "type": "string",
            "nullable": true
          },
          "_cc": {
            "type": "string",
            "nullable": true
          },
          "_cb3": {
            "type": "string",
            "nullable": true
          },
          "_cd": {
            "type": "string",
            "nullable": true
          },
          "_ce": {
            "type": "string",
            "nullable": true
          },
          "_cd3": {
            "type": "string",
            "nullable": true
          },
          "_cf": {
            "type": "string",
            "nullable": true
          },
          "_cg": {
            "type": "string",
            "nullable": true
          },
          "_cf3": {
            "type": "string",
            "nullable": true
          },
          "_ch": {
            "type": "string",
            "nullable": true
          },
          "_ci": {
            "type": "string",
            "nullable": true
          },
          "_ch3": {
            "type": "string",
            "nullable": true
          },
          "_cj": {
            "type": "string",
            "nullable": true
          },
          "_ck": {
            "type": "string",
            "nullable": true
          },
          "_cj3": {
            "type": "string",
            "nullable": true
          },
          "_cw": {
            "type": "string",
            "nullable": true
          },
          "_cw3": {
            "type": "string",
            "nullable": true
          },
          "_cm": {
            "type": "string",
            "nullable": true
          },
          "_cm3": {
            "type": "string",
            "nullable": true
          },
          "_cn": {
            "type": "string",
            "nullable": true
          },
          "_cn3": {
            "type": "string",
            "nullable": true
          },
          "_co": {
            "type": "string",
            "nullable": true
          },
          "_1a": {
            "type": "string",
            "nullable": true
          },
          "_co3": {
            "type": "string",
            "nullable": true
          },
          "_cp": {
            "type": "string",
            "nullable": true
          },
          "_cr": {
            "type": "string",
            "nullable": true
          },
          "_da": {
            "type": "string",
            "nullable": true
          },
          "_db": {
            "type": "string",
            "nullable": true
          },
          "_ek": {
            "type": "string",
            "nullable": true
          },
          "_dc": {
            "type": "string",
            "nullable": true
          },
          "_dd": {
            "type": "string",
            "nullable": true
          },
          "_de": {
            "type": "string",
            "nullable": true
          },
          "_b1": {
            "type": "string",
            "nullable": true
          },
          "_df": {
            "type": "string",
            "nullable": true
          },
          "_ej": {
            "type": "string",
            "nullable": true
          },
          "_dg": {
            "type": "string",
            "nullable": true
          },
          "_dh": {
            "type": "string",
            "nullable": true
          },
          "_di": {
            "type": "string",
            "nullable": true
          },
          "_dj": {
            "type": "string",
            "nullable": true
          },
          "_dk": {
            "type": "string",
            "nullable": true
          },
          "_dl": {
            "type": "string",
            "nullable": true
          },
          "_dm": {
            "type": "string",
            "nullable": true
          },
          "_dn": {
            "type": "string",
            "nullable": true
          },
          "_do": {
            "type": "string",
            "nullable": true
          },
          "_dp": {
            "type": "string",
            "nullable": true
          },
          "_dq": {
            "type": "string",
            "nullable": true
          },
          "_dr": {
            "type": "string",
            "nullable": true
          },
          "_ds": {
            "type": "string",
            "nullable": true
          },
          "_dt": {
            "type": "string",
            "nullable": true
          },
          "_du": {
            "type": "string",
            "nullable": true
          },
          "_dv": {
            "type": "string",
            "nullable": true
          },
          "_dw": {
            "type": "string",
            "nullable": true
          },
          "_dx": {
            "type": "string",
            "nullable": true
          },
          "_dy": {
            "type": "string",
            "nullable": true
          },
          "_dz": {
            "type": "string",
            "nullable": true
          },
          "_ea": {
            "type": "string",
            "nullable": true
          },
          "_eb": {
            "type": "string",
            "nullable": true
          },
          "_ec": {
            "type": "string",
            "nullable": true
          },
          "_ed": {
            "type": "string",
            "nullable": true
          },
          "_ee": {
            "type": "string",
            "nullable": true
          },
          "_ef": {
            "type": "string",
            "nullable": true
          },
          "_eg": {
            "type": "string",
            "nullable": true
          },
          "_eh": {
            "type": "string",
            "nullable": true
          },
          "_ei": {
            "type": "string",
            "nullable": true
          },
          "_fa": {
            "type": "string",
            "nullable": true
          },
          "_fb": {
            "type": "string",
            "nullable": true
          },
          "_fc": {
            "type": "string",
            "nullable": true
          },
          "_fd": {
            "type": "string",
            "nullable": true
          },
          "_fe": {
            "type": "string",
            "nullable": true
          },
          "_ff": {
            "type": "string",
            "nullable": true
          },
          "_fg": {
            "type": "string",
            "nullable": true
          },
          "_fh": {
            "type": "string",
            "nullable": true
          },
          "_fi": {
            "type": "string",
            "nullable": true
          },
          "_fj": {
            "type": "string",
            "nullable": true
          },
          "_fk": {
            "type": "string",
            "nullable": true
          },
          "_fl": {
            "type": "string",
            "nullable": true
          },
          "_fm": {
            "type": "string",
            "nullable": true
          },
          "_fn": {
            "type": "string",
            "nullable": true
          },
          "_fo": {
            "type": "string",
            "nullable": true
          },
          "_fp": {
            "type": "string",
            "nullable": true
          },
          "_fq": {
            "type": "string",
            "nullable": true
          },
          "_fr": {
            "type": "string",
            "nullable": true
          },
          "_fs": {
            "type": "string",
            "nullable": true
          },
          "_ft": {
            "type": "string",
            "nullable": true
          },
          "_fu": {
            "type": "string",
            "nullable": true
          },
          "_fv": {
            "type": "string",
            "nullable": true
          },
          "_fw": {
            "type": "string",
            "nullable": true
          },
          "_fx": {
            "type": "string",
            "nullable": true
          },
          "_fy": {
            "type": "string",
            "nullable": true
          },
          "_fz": {
            "type": "string",
            "nullable": true
          },
          "_ga": {
            "type": "string",
            "nullable": true
          },
          "_gb": {
            "type": "string",
            "nullable": true
          },
          "_gc": {
            "type": "string",
            "nullable": true
          },
          "_gd": {
            "type": "string",
            "nullable": true
          },
          "_ge": {
            "type": "string",
            "nullable": true
          },
          "_gf": {
            "type": "string",
            "nullable": true
          },
          "_gg": {
            "type": "string",
            "nullable": true
          },
          "_gh": {
            "type": "string",
            "nullable": true
          },
          "_gi": {
            "type": "string",
            "nullable": true
          },
          "_gj": {
            "type": "string",
            "nullable": true
          },
          "_gk": {
            "type": "string",
            "nullable": true
          },
          "_gl": {
            "type": "string",
            "nullable": true
          },
          "_gm": {
            "type": "string",
            "nullable": true
          },
          "_gn": {
            "type": "string",
            "nullable": true
          },
          "_go": {
            "type": "string",
            "nullable": true
          },
          "_gp": {
            "type": "string",
            "nullable": true
          },
          "_gq": {
            "type": "string",
            "nullable": true
          },
          "_gr": {
            "type": "string",
            "nullable": true
          },
          "_gs": {
            "type": "string",
            "nullable": true
          },
          "_gt": {
            "type": "string",
            "nullable": true
          },
          "_gu": {
            "type": "string",
            "nullable": true
          },
          "_gv": {
            "type": "string",
            "nullable": true
          },
          "_gw": {
            "type": "string",
            "nullable": true
          },
          "_ha": {
            "type": "string",
            "nullable": true
          },
          "_hb": {
            "type": "string",
            "nullable": true
          },
          "_hc": {
            "type": "string",
            "nullable": true
          },
          "_hd": {
            "type": "string",
            "nullable": true
          },
          "_he": {
            "type": "string",
            "nullable": true
          },
          "_hf": {
            "type": "string",
            "nullable": true
          },
          "_hg": {
            "type": "string",
            "nullable": true
          },
          "_hh": {
            "type": "string",
            "nullable": true
          },
          "_hi": {
            "type": "string",
            "nullable": true
          },
          "_hj": {
            "type": "string",
            "nullable": true
          },
          "_hk": {
            "type": "string",
            "nullable": true
          },
          "_hl": {
            "type": "string",
            "nullable": true
          },
          "_hm": {
            "type": "string",
            "nullable": true
          },
          "_hn": {
            "type": "string",
            "nullable": true
          },
          "_hp": {
            "type": "string",
            "nullable": true
          },
          "_hq": {
            "type": "string",
            "nullable": true
          },
          "_a1": {
            "type": "string",
            "nullable": true
          },
          "_a2": {
            "type": "string",
            "nullable": true
          },
          "_a3": {
            "type": "string",
            "nullable": true
          },
          "_a4": {
            "type": "string",
            "nullable": true
          },
          "_cz": {
            "type": "string",
            "nullable": true
          },
          "_d8": {
            "type": "string",
            "nullable": true
          },
          "_d9": {
            "type": "string",
            "nullable": true
          },
          "_kd": {
            "type": "string",
            "nullable": true
          },
          "_ke": {
            "type": "string",
            "nullable": true
          },
          "_kf": {
            "type": "string",
            "nullable": true
          },
          "_ln": {
            "type": "string",
            "nullable": true
          },
          "_lo": {
            "type": "string",
            "nullable": true
          },
          "_lp": {
            "type": "string",
            "nullable": true
          },
          "_lq": {
            "type": "string",
            "nullable": true
          },
          "_lr": {
            "type": "string",
            "nullable": true
          },
          "_ls": {
            "type": "string",
            "nullable": true
          },
          "_0g": {
            "type": "string",
            "nullable": true
          },
          "_0h": {
            "type": "string",
            "nullable": true
          },
          "_0j": {
            "type": "string",
            "nullable": true
          },
          "_in": {
            "type": "string",
            "nullable": true
          },
          "_c0": {
            "type": "string",
            "nullable": true
          },
          "_d0": {
            "type": "string",
            "nullable": true
          },
          "_io": {
            "type": "string",
            "nullable": true
          },
          "_lv": {
            "type": "string",
            "nullable": true
          },
          "_lw": {
            "type": "string",
            "nullable": true
          },
          "_my": {
            "type": "string",
            "nullable": true
          },
          "_nc": {
            "type": "string",
            "nullable": true
          },
          "_iy": {
            "type": "string",
            "nullable": true
          },
          "_ng": {
            "type": "string",
            "nullable": true
          },
          "_nh": {
            "type": "string",
            "nullable": true
          },
          "_2e": {
            "type": "string",
            "nullable": true
          },
          "_i3": {
            "type": "string",
            "nullable": true
          },
          "_nj": {
            "type": "string",
            "nullable": true
          },
          "_nk": {
            "type": "string",
            "nullable": true
          },
          "_i4": {
            "type": "string",
            "nullable": true
          },
          "_0k": {
            "type": "string",
            "nullable": true
          },
          "_0l": {
            "type": "string",
            "nullable": true
          },
          "_cy": {
            "type": "string",
            "nullable": true
          },
          "_el": {
            "type": "string",
            "nullable": true
          },
          "_em": {
            "type": "string",
            "nullable": true
          },
          "_en": {
            "type": "string",
            "nullable": true
          },
          "_pe": {
            "type": "string",
            "nullable": true
          },
          "_pf": {
            "type": "string",
            "nullable": true
          },
          "_pg": {
            "type": "string",
            "nullable": true
          },
          "_ph": {
            "type": "string",
            "nullable": true
          },
          "_qu": {
            "type": "string",
            "nullable": true
          },
          "_qv": {
            "type": "string",
            "nullable": true
          },
          "_qw": {
            "type": "string",
            "nullable": true
          },
          "_qx": {
            "type": "string",
            "nullable": true
          },
          "_0n": {
            "type": "string",
            "nullable": true
          },
          "_0p": {
            "type": "string",
            "nullable": true
          },
          "_0q": {
            "type": "string",
            "nullable": true
          },
          "_0r": {
            "type": "string",
            "nullable": true
          },
          "_z91": {
            "type": "string",
            "nullable": true
          },
          "_z92": {
            "type": "string",
            "nullable": true
          },
          "_z9": {
            "type": "string",
            "nullable": true
          },
          "_z8": {
            "type": "string",
            "nullable": true
          },
          "_sp1": {
            "type": "string",
            "nullable": true
          },
          "_sp2": {
            "type": "string",
            "nullable": true
          },
          "_sp": {
            "type": "string",
            "nullable": true
          },
          "_sr": {
            "type": "string",
            "nullable": true
          },
          "_to": {
            "type": "string",
            "nullable": true
          },
          "_3z": {
            "type": "string",
            "nullable": true
          },
          "_ts": {
            "type": "string",
            "nullable": true
          },
          "_tt": {
            "type": "string",
            "nullable": true
          },
          "_tu": {
            "type": "string",
            "nullable": true
          },
          "_4d": {
            "type": "string",
            "nullable": true
          },
          "_4h": {
            "type": "string",
            "nullable": true
          },
          "_4m": {
            "type": "string",
            "nullable": true
          },
          "_4s": {
            "type": "string",
            "nullable": true
          },
          "_4w": {
            "type": "string",
            "nullable": true
          },
          "_5a": {
            "type": "string",
            "nullable": true
          },
          "_5e": {
            "type": "string",
            "nullable": true
          },
          "_5k": {
            "type": "string",
            "nullable": true
          },
          "_er": {
            "type": "string",
            "nullable": true
          },
          "_5r": {
            "type": "string",
            "nullable": true
          },
          "_5s": {
            "type": "string",
            "nullable": true
          },
          "_5t": {
            "type": "string",
            "nullable": true
          },
          "_5u": {
            "type": "string",
            "nullable": true
          },
          "_5y": {
            "type": "string",
            "nullable": true
          },
          "_5z": {
            "type": "string",
            "nullable": true
          },
          "_tv": {
            "type": "string",
            "nullable": true
          },
          "_tw": {
            "type": "string",
            "nullable": true
          },
          "_tx": {
            "type": "string",
            "nullable": true
          },
          "_6a": {
            "type": "string",
            "nullable": true
          },
          "_6b": {
            "type": "string",
            "nullable": true
          },
          "_6c": {
            "type": "string",
            "nullable": true
          },
          "_6d": {
            "type": "string",
            "nullable": true
          },
          "_6e": {
            "type": "string",
            "nullable": true
          },
          "_6f": {
            "type": "string",
            "nullable": true
          },
          "_6g": {
            "type": "string",
            "nullable": true
          },
          "_6h": {
            "type": "string",
            "nullable": true
          },
          "_02": {
            "type": "string",
            "nullable": true
          },
          "_03": {
            "type": "string",
            "nullable": true
          },
          "_04": {
            "type": "string",
            "nullable": true
          },
          "_05": {
            "type": "string",
            "nullable": true
          },
          "_9x": {
            "type": "string",
            "nullable": true
          },
          "_06": {
            "type": "string",
            "nullable": true
          },
          "_07": {
            "type": "string",
            "nullable": true
          },
          "_08": {
            "type": "string",
            "nullable": true
          },
          "_09": {
            "type": "string",
            "nullable": true
          },
          "_6n": {
            "type": "string",
            "nullable": true
          },
          "_6p": {
            "type": "string",
            "nullable": true
          },
          "_6r": {
            "type": "string",
            "nullable": true
          },
          "_6s": {
            "type": "string",
            "nullable": true
          },
          "_6t": {
            "type": "string",
            "nullable": true
          },
          "_6u": {
            "type": "string",
            "nullable": true
          },
          "_6v": {
            "type": "string",
            "nullable": true
          },
          "_6w": {
            "type": "string",
            "nullable": true
          },
          "_6x": {
            "type": "string",
            "nullable": true
          },
          "_6y": {
            "type": "string",
            "nullable": true
          },
          "_6z": {
            "type": "string",
            "nullable": true
          },
          "_7a": {
            "type": "string",
            "nullable": true
          },
          "_7b": {
            "type": "string",
            "nullable": true
          },
          "_ty": {
            "type": "string",
            "nullable": true
          },
          "_tz": {
            "type": "string",
            "nullable": true
          },
          "_ua": {
            "type": "string",
            "nullable": true
          },
          "_7c": {
            "type": "string",
            "nullable": true
          },
          "_ub": {
            "type": "string",
            "nullable": true
          },
          "_uc": {
            "type": "string",
            "nullable": true
          },
          "_ud": {
            "type": "string",
            "nullable": true
          },
          "_ue": {
            "type": "string",
            "nullable": true
          },
          "_uf": {
            "type": "string",
            "nullable": true
          },
          "_ug": {
            "type": "string",
            "nullable": true
          },
          "_uh": {
            "type": "string",
            "nullable": true
          },
          "_uj": {
            "type": "string",
            "nullable": true
          },
          "_uk": {
            "type": "string",
            "nullable": true
          },
          "_ul": {
            "type": "string",
            "nullable": true
          },
          "_um": {
            "type": "string",
            "nullable": true
          },
          "_up": {
            "type": "string",
            "nullable": true
          },
          "_ur": {
            "type": "string",
            "nullable": true
          },
          "_ut": {
            "type": "string",
            "nullable": true
          },
          "_uv": {
            "type": "string",
            "nullable": true
          },
          "_va": {
            "type": "string",
            "nullable": true
          },
          "_ux": {
            "type": "string",
            "nullable": true
          },
          "_uo": {
            "type": "string",
            "nullable": true
          },
          "_z1": {
            "type": "string",
            "nullable": true
          },
          "_uy": {
            "type": "string",
            "nullable": true
          },
          "_uz": {
            "type": "string",
            "nullable": true
          },
          "_vm": {
            "type": "string",
            "nullable": true
          },
          "_vb": {
            "type": "string",
            "nullable": true
          },
          "_vn": {
            "type": "string",
            "nullable": true
          },
          "_vp": {
            "type": "string",
            "nullable": true
          },
          "_vc": {
            "type": "string",
            "nullable": true
          },
          "_vr": {
            "type": "string",
            "nullable": true
          },
          "_vs": {
            "type": "string",
            "nullable": true
          },
          "_vt": {
            "type": "string",
            "nullable": true
          },
          "_vu": {
            "type": "string",
            "nullable": true
          },
          "_vv": {
            "type": "string",
            "nullable": true
          },
          "_7y": {
            "type": "string",
            "nullable": true
          },
          "_7y2": {
            "type": "string",
            "nullable": true
          },
          "_7y3": {
            "type": "string",
            "nullable": true
          },
          "_7z": {
            "type": "string",
            "nullable": true
          },
          "_7z2": {
            "type": "string",
            "nullable": true
          },
          "_7z3": {
            "type": "string",
            "nullable": true
          },
          "_vg": {
            "type": "string",
            "nullable": true
          },
          "_vg2": {
            "type": "string",
            "nullable": true
          },
          "_vg3": {
            "type": "string",
            "nullable": true
          },
          "_vh": {
            "type": "string",
            "nullable": true
          },
          "_vh2": {
            "type": "string",
            "nullable": true
          },
          "_vh3": {
            "type": "string",
            "nullable": true
          },
          "_8a": {
            "type": "string",
            "nullable": true
          },
          "_8a2": {
            "type": "string",
            "nullable": true
          },
          "_8a3": {
            "type": "string",
            "nullable": true
          },
          "_8b": {
            "type": "string",
            "nullable": true
          },
          "_8b2": {
            "type": "string",
            "nullable": true
          },
          "_8b3": {
            "type": "string",
            "nullable": true
          },
          "_8c": {
            "type": "string",
            "nullable": true
          },
          "_8c2": {
            "type": "string",
            "nullable": true
          },
          "_8c3": {
            "type": "string",
            "nullable": true
          },
          "_8d": {
            "type": "string",
            "nullable": true
          },
          "_8d2": {
            "type": "string",
            "nullable": true
          },
          "_8d3": {
            "type": "string",
            "nullable": true
          },
          "_8e": {
            "type": "string",
            "nullable": true
          },
          "_8e2": {
            "type": "string",
            "nullable": true
          },
          "_8e3": {
            "type": "string",
            "nullable": true
          },
          "_vw": {
            "type": "string",
            "nullable": true
          },
          "_vw2": {
            "type": "string",
            "nullable": true
          },
          "_vw3": {
            "type": "string",
            "nullable": true
          },
          "_vx": {
            "type": "string",
            "nullable": true
          },
          "_vx2": {
            "type": "string",
            "nullable": true
          },
          "_vx3": {
            "type": "string",
            "nullable": true
          },
          "_vq": {
            "type": "string",
            "nullable": true
          },
          "_vq2": {
            "type": "string",
            "nullable": true
          },
          "_vq3": {
            "type": "string",
            "nullable": true
          },
          "_8j": {
            "type": "string",
            "nullable": true
          },
          "_8j2": {
            "type": "string",
            "nullable": true
          },
          "_8j3": {
            "type": "string",
            "nullable": true
          },
          "_8j4": {
            "type": "string",
            "nullable": true
          },
          "_vi": {
            "type": "string",
            "nullable": true
          },
          "_vi2": {
            "type": "string",
            "nullable": true
          },
          "_vi3": {
            "type": "string",
            "nullable": true
          },
          "_vi4": {
            "type": "string",
            "nullable": true
          },
          "_8k": {
            "type": "string",
            "nullable": true
          },
          "_8k2": {
            "type": "string",
            "nullable": true
          },
          "_8k3": {
            "type": "string",
            "nullable": true
          },
          "_z2": {
            "type": "string",
            "nullable": true
          },
          "_z21": {
            "type": "string",
            "nullable": true
          },
          "_z22": {
            "type": "string",
            "nullable": true
          },
          "_8l": {
            "type": "string",
            "nullable": true
          },
          "_8l2": {
            "type": "string",
            "nullable": true
          },
          "_8l3": {
            "type": "string",
            "nullable": true
          },
          "_vy": {
            "type": "string",
            "nullable": true
          },
          "_vz": {
            "type": "string",
            "nullable": true
          },
          "_vy3": {
            "type": "string",
            "nullable": true
          },
          "_vy4": {
            "type": "string",
            "nullable": true
          },
          "_vj": {
            "type": "string",
            "nullable": true
          },
          "_vk": {
            "type": "string",
            "nullable": true
          },
          "_ze": {
            "type": "string",
            "nullable": true
          },
          "_yq": {
            "type": "string",
            "nullable": true
          },
          "_yr": {
            "type": "string",
            "nullable": true
          },
          "_ys": {
            "type": "string",
            "nullable": true
          },
          "_yt": {
            "type": "string",
            "nullable": true
          },
          "_xq": {
            "type": "string",
            "nullable": true
          },
          "_yu": {
            "type": "string",
            "nullable": true
          },
          "_ss": {
            "type": "string",
            "nullable": true
          },
          "_yv": {
            "type": "string",
            "nullable": true
          },
          "_st": {
            "type": "string",
            "nullable": true
          },
          "_zj": {
            "type": "string",
            "nullable": true
          },
          "_yw": {
            "type": "string",
            "nullable": true
          },
          "_9z": {
            "type": "string",
            "nullable": true
          },
          "_yx": {
            "type": "string",
            "nullable": true
          },
          "_yy": {
            "type": "string",
            "nullable": true
          },
          "_yz": {
            "type": "string",
            "nullable": true
          },
          "_yp": {
            "type": "string",
            "nullable": true
          },
          "_zr": {
            "type": "string",
            "nullable": true
          },
          "_0883": {
            "type": "string",
            "nullable": true
          },
          "_24b1": {
            "type": "string",
            "nullable": true
          },
          "_24a1": {
            "type": "string",
            "nullable": true
          },
          "_ca11": {
            "type": "string",
            "nullable": true
          },
          "_ca12": {
            "type": "string",
            "nullable": true
          },
          "_ca13": {
            "type": "string",
            "nullable": true
          },
          "_ca21": {
            "type": "string",
            "nullable": true
          },
          "_ca22": {
            "type": "string",
            "nullable": true
          },
          "_ca23": {
            "type": "string",
            "nullable": true
          },
          "_ca31": {
            "type": "string",
            "nullable": true
          },
          "_ca32": {
            "type": "string",
            "nullable": true
          },
          "_ca33": {
            "type": "string",
            "nullable": true
          },
          "_ca41": {
            "type": "string",
            "nullable": true
          },
          "_ca42": {
            "type": "string",
            "nullable": true
          },
          "_ca43": {
            "type": "string",
            "nullable": true
          },
          "_cp11": {
            "type": "string",
            "nullable": true
          },
          "_cp21": {
            "type": "string",
            "nullable": true
          },
          "_cp31": {
            "type": "string",
            "nullable": true
          },
          "_cp41": {
            "type": "string",
            "nullable": true
          },
          "_cp51": {
            "type": "string",
            "nullable": true
          },
          "_cp61": {
            "type": "string",
            "nullable": true
          },
          "_cp71": {
            "type": "string",
            "nullable": true
          },
          "_cp81": {
            "type": "string",
            "nullable": true
          },
          "_cp91": {
            "type": "string",
            "nullable": true
          },
          "_cah": {
            "type": "string",
            "nullable": true
          },
          "_pis": {
            "type": "string",
            "nullable": true
          },
          "_acm": {
            "type": "string",
            "nullable": true
          },
          "_vst": {
            "type": "string",
            "nullable": true
          },
          "_mab": {
            "type": "string",
            "nullable": true
          },
          "_ace": {
            "type": "string",
            "nullable": true
          },
          "_vaj": {
            "type": "string",
            "nullable": true
          },
          "_chp": {
            "type": "string",
            "nullable": true
          },
          "_imt": {
            "type": "string",
            "nullable": true
          },
          "_sue": {
            "type": "string",
            "nullable": true
          },
          "_ebe": {
            "type": "string",
            "nullable": true
          },
          "_apc": {
            "type": "string",
            "nullable": true
          },
          "_doe": {
            "type": "string",
            "nullable": true
          },
          "_rsd": {
            "type": "string",
            "nullable": true
          },
          "_rex": {
            "type": "string",
            "nullable": true
          },
          "_opc": {
            "type": "string",
            "nullable": true
          },
          "_prf": {
            "type": "string",
            "nullable": true
          },
          "_chf": {
            "type": "string",
            "nullable": true
          },
          "_rec": {
            "type": "string",
            "nullable": true
          },
          "_pre": {
            "type": "string",
            "nullable": true
          },
          "_che": {
            "type": "string",
            "nullable": true
          },
          "_par": {
            "type": "string",
            "nullable": true
          },
          "_isb": {
            "type": "string",
            "nullable": true
          },
          "_ren": {
            "type": "string",
            "nullable": true
          },
          "_dtfin": {
            "type": "string",
            "nullable": true
          },
          "_treso": {
            "type": "string",
            "nullable": true
          },
          "_vcha": {
            "type": "string",
            "nullable": true
          },
          "_bfdr": {
            "type": "string",
            "nullable": true
          },
          "_caf": {
            "type": "string",
            "nullable": true
          },
          "_fdr": {
            "type": "string",
            "nullable": true
          },
          "_score_z": {
            "type": "string",
            "nullable": true
          },
          "_natact": {
            "type": "string",
            "nullable": true
          },
          "_revmoy": {
            "type": "string",
            "nullable": true
          },
          "_stocks": {
            "type": "string",
            "nullable": true
          },
          "_rentab": {
            "type": "string",
            "nullable": true
          },
          "_divid": {
            "type": "string",
            "nullable": true
          },
          "_treso2": {
            "type": "string",
            "nullable": true
          },
          "_fkca": {
            "type": "string",
            "nullable": true
          },
          "_periode": {
            "type": "string",
            "nullable": true
          },
          "_idbilan": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoBilanSig": {
        "type": "object",
        "properties": {
          "siren": {
            "type": "string",
            "description": "SIREN: Identifiant entreprise",
            "nullable": true
          },
          "siret": {
            "type": "string",
            "description": "SIRET de l'établissement siège",
            "nullable": true
          },
          "confidentialite": {
            "type": "string",
            "description": "0 = Non Confidentiel, 1 = Confidentiel total, 2 = Confidentiel partiel(compte de résultat)",
            "nullable": true
          },
          "type_bilan": {
            "type": "string",
            "description": "(C)omplet, (K) onsolidé, (S)implifié, (B)anque, (A)ssurance",
            "nullable": true
          },
          "bicn": {
            "type": "string",
            "nullable": true
          },
          "bicn_deb": {
            "type": "string",
            "nullable": true
          },
          "bicn1": {
            "type": "string",
            "nullable": true
          },
          "mab": {
            "type": "string",
            "description": "Marge brute",
            "nullable": true
          },
          "pis": {
            "type": "string",
            "description": "Production immobilisée et stockée",
            "nullable": true
          },
          "vaj": {
            "type": "string",
            "description": "Valeur ajoutée",
            "nullable": true
          },
          "ebe": {
            "type": "string",
            "description": "Excédent brut d'exploitation",
            "nullable": true
          },
          "rex": {
            "type": "string",
            "description": "Résultat d'exploitation",
            "nullable": true
          },
          "prf": {
            "type": "string",
            "description": "Produits financiers",
            "nullable": true
          },
          "chf": {
            "type": "string",
            "description": "Charges financières",
            "nullable": true
          },
          "rec": {
            "type": "string",
            "description": "Résultat courant avant impôts",
            "nullable": true
          },
          "pre": {
            "type": "string",
            "description": "Produits exceptionnels",
            "nullable": true
          },
          "che": {
            "type": "string",
            "description": "Charges exceptionnelles",
            "nullable": true
          },
          "ren": {
            "type": "string",
            "description": "Résultat net",
            "nullable": true
          },
          "cah": {
            "type": "string",
            "description": "Chiffre d'affaires hors taxe",
            "nullable": true
          },
          "cam": {
            "type": "string",
            "nullable": true
          },
          "vst": {
            "type": "string",
            "description": "Production immobilisée et stockée",
            "nullable": true
          },
          "ace": {
            "type": "string",
            "description": "Autres charges externes",
            "nullable": true
          },
          "chp": {
            "type": "string",
            "description": "Charges de personnel",
            "nullable": true
          },
          "imt": {
            "type": "string",
            "description": "Impôts, taxes et versements assimilés",
            "nullable": true
          },
          "sue": {
            "type": "string",
            "description": "Subventions d'exploitation",
            "nullable": true
          },
          "apc": {
            "type": "string",
            "description": "Autres produits et autres charges",
            "nullable": true
          },
          "doe": {
            "type": "string",
            "description": "Dotations d'exploitation (Amortissements et Provisions)",
            "nullable": true
          },
          "rsd": {
            "type": "string",
            "description": "Reprises sur dotations et transferts de charges",
            "nullable": true
          },
          "opc": {
            "type": "string",
            "description": "Opérations en commun",
            "nullable": true
          },
          "par": {
            "type": "string",
            "description": "Participations",
            "nullable": true
          },
          "isb": {
            "type": "string",
            "description": "Impôts sur les bénéfices",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoScoreFinancier": {
        "type": "object",
        "properties": {
          "Valeur": {
            "type": "number",
            "description": "(double) Valeur du score",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "description": "(20 caractères) Note exprimée en pourcentage",
            "nullable": true
          },
          "NiveauRisque": {
            "type": "string",
            "description": "(20 caractères) Niveau de risque",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "(50 caractères) Description de la santé financière de l'entreprise",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoScoreFinancierResponse": {
        "type": "object",
        "properties": {
          "ConanHolder": {
            "$ref": "#/components/schemas/DtoScoreFinancier"
          },
          "Collongues": {
            "$ref": "#/components/schemas/DtoScoreFinancier"
          },
          "AFDCC": {
            "$ref": "#/components/schemas/DtoScoreFinancier"
          },
          "AFDCC2": {
            "$ref": "#/components/schemas/DtoScoreFinancier"
          },
          "BusinessCartegie": {
            "$ref": "#/components/schemas/DtoScoreFinancier"
          }
        },
        "additionalProperties": false
      },
      "DtoLiasseFiscale": {
        "type": "object",
        "properties": {
          "Exercice": {
            "type": "string",
            "description": "Date de clôture de l'exercice au format AAAAMMJJ",
            "nullable": true
          },
          "NbMois": {
            "type": "integer",
            "description": "Nombre de mois de l'exercice",
            "format": "int32"
          },
          "CodeLiasse": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Liste des codes liasse restitués (ex: YP pour effectif, FL pour chiffre d'affaires)",
            "nullable": true
          },
          "ValeurLiasse": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Liste des valeurs de liasse (unité monétaire en K€)",
            "nullable": true
          },
          "nbValues": {
            "type": "integer",
            "description": "Nombre de valeurs",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DtoMXServer": {
        "type": "object",
        "properties": {
          "Preference": {
            "type": "integer",
            "format": "int32"
          },
          "MailExchanger": {
            "type": "string",
            "nullable": true
          },
          "Ip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoEmailTest": {
        "type": "object",
        "properties": {
          "Email": {
            "type": "string",
            "description": "Email testé",
            "nullable": true
          },
          "DomainHasMx": {
            "type": "boolean",
            "description": "Définit si le domaine de l'email a un serveur de messagerie"
          },
          "EmailSuggested": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "En cas d'erreur, propose une suggestion d'email",
            "nullable": true
          },
          "DomainHasCatchAll": {
            "type": "boolean",
            "description": "Indique si le serveur MX utilise un catchall",
            "nullable": true
          },
          "ImpossibleToTest": {
            "type": "boolean",
            "description": "Valeur à true si le domaine ne peut pas être testé",
            "nullable": true
          },
          "ListMX": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DtoMXServer"
            },
            "description": "Affiche la totalité des serveurs de messagerie avec les informations pour chacun(IP,Preference)",
            "nullable": true
          },
          "syntax": {
            "type": "boolean",
            "description": "Indique si la syntaxe de l'email est correcte"
          },
          "domaineTemporaire": {
            "type": "boolean",
            "description": "Indique si l'email est sur un domaine qui fournit des emails temporaires (dit aussi email jetable)"
          }
        },
        "additionalProperties": false
      },
      "DtoEnrichissementTelAdresse": {
        "type": "object",
        "properties": {
          "Appartement": {
            "type": "string",
            "description": "(38 caractères) Appartement, escalier, porte...",
            "nullable": true
          },
          "Batiment": {
            "type": "string",
            "description": "(38 caractères) Batiment, Résidence...",
            "nullable": true
          },
          "Voie": {
            "type": "string",
            "description": "(38 caractères) N° dans la voie et voie (RUE, AVENUE, ...)",
            "nullable": true
          },
          "BPlieudit": {
            "type": "string",
            "description": "(38 caractères) Boîte postale, lieu-dit",
            "nullable": true
          },
          "CP": {
            "type": "string",
            "description": "(5 caractères) Code Postal.",
            "nullable": true
          },
          "Ville": {
            "type": "string",
            "description": "(32 caractères) Nom de la commune",
            "nullable": true
          },
          "CodCom": {
            "type": "string",
            "description": "(5 caractères) Code commune INSEE",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoEnrichissementTelSignaletique": {
        "type": "object",
        "properties": {
          "Civilite": {
            "type": "string",
            "description": "(4 caractères) Civilité - Non utilisé par l'enrichissement téléphonique",
            "nullable": true
          },
          "Nom": {
            "type": "string",
            "description": "(100 caractères) Nom ou raison sociale",
            "nullable": true
          },
          "Prenom": {
            "type": "string",
            "description": "(30 caractères) Prénom",
            "nullable": true
          },
          "RaisonSociale": {
            "type": "string",
            "description": "(30 caractères) Raison sociale",
            "nullable": true
          },
          "Enseigne": {
            "type": "string",
            "description": "(30 caractères) Enseigne",
            "nullable": true
          },
          "Telephone": {
            "type": "string",
            "description": "(10 caractères) Numéro de Téléphone - Non utilisé par l'enrichissement téléphonique",
            "nullable": true
          },
          "Siret": {
            "type": "string",
            "description": "(14 caractères) Numéro de Siret - Non utilisé par l'enrichissement téléphonique",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoEnrichissementTelDemande": {
        "type": "object",
        "properties": {
          "Adresse": {
            "$ref": "#/components/schemas/DtoEnrichissementTelAdresse"
          },
          "Signaletique": {
            "$ref": "#/components/schemas/DtoEnrichissementTelSignaletique"
          },
          "PartPro": {
            "type": "string",
            "description": "Permet de limiter la recherche aux particuliers (PART) ou aux professionnels (PRO). La valeur par défaut est non renseignée (chaîne vide) permettant de rechercher à la fois dans les particuliers et les professionnels",
            "nullable": true
          },
          "LimiteReponse": {
            "type": "integer",
            "description": "Nombre maximum de réponses restituées. Valeur par défaut : 10",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DtoEnrichissementTelResponse": {
        "type": "object",
        "properties": {
          "Telephone": {
            "type": "string",
            "description": "(10 caractères) Numéro de Téléphone",
            "nullable": true
          },
          "Civilite": {
            "type": "string",
            "description": "(4 caractères) Civilité",
            "nullable": true
          },
          "Nom": {
            "type": "string",
            "description": "(100 caractères) Nom ou raison sociale",
            "nullable": true
          },
          "Complement": {
            "type": "string",
            "description": "(100 caractères) Complément du nom ou de la raison sociale",
            "nullable": true
          },
          "Prenom": {
            "type": "string",
            "description": "(30 caractères) Prénom",
            "nullable": true
          },
          "Adresse": {
            "$ref": "#/components/schemas/DtoEnrichissementTelAdresse"
          },
          "Professionnel": {
            "type": "boolean",
            "description": "Contient True pour une inscription professionnelle"
          },
          "Rubrique": {
            "type": "string",
            "description": "(100 caractères) Rubrique professionnelle",
            "nullable": true
          },
          "Fax": {
            "type": "string",
            "description": "(10 caractères) Numéro de Fax",
            "nullable": true
          },
          "ListeOrange": {
            "type": "boolean",
            "description": "Contient True pour une inscription en liste orange"
          }
        },
        "additionalProperties": false
      },
      "DtoRequestGeocodeByAddress": {
        "type": "object",
        "properties": {
          "Appartement": {
            "type": "string",
            "description": "(38 caractères) Appartement, escalier, porte...",
            "nullable": true
          },
          "Batiment": {
            "type": "string",
            "description": "(38 caractères) Batiment, Résidence...",
            "nullable": true
          },
          "Voie": {
            "type": "string",
            "description": "(38 caractères) N° dans la voie et voie (RUE, AVENUE, ...)",
            "nullable": true
          },
          "BpLieuDit": {
            "type": "string",
            "description": "(38 caractères) Boîte postale, lieu-dit",
            "nullable": true
          },
          "CodePostal": {
            "type": "string",
            "description": "(5 caractères) Code Postal.",
            "nullable": true
          },
          "Ville": {
            "type": "string",
            "description": "(32 caractères) Nom de la commune",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoProperties": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Précision sur le résultat: (housenumber) = Au numéro dans la voie, (street) = Quelque part dans la voie, placé approximativement au centre de celle-ci, (locality) = lieu-dit, (municipality) = à la commune",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "numéro éventuel et nom de voie ou lieu dit",
            "nullable": true
          },
          "housenumber": {
            "type": "string",
            "description": "numéro avec indice de répétition éventuel (bis, ter, A, B)",
            "nullable": true
          },
          "context": {
            "type": "string",
            "description": "n° de département, nom de département et de région",
            "nullable": true
          },
          "label": {
            "type": "string",
            "description": "libellé complet de l’adresse",
            "nullable": true
          },
          "citycode": {
            "type": "string",
            "description": "Code INSEE de la commune",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "nom de la commune",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "description": "code postal",
            "nullable": true
          },
          "canton": {
            "type": "string",
            "description": "Le code canton",
            "nullable": true
          },
          "iris": {
            "type": "string",
            "description": "Code Iris",
            "nullable": true
          },
          "ilot": {
            "type": "string",
            "description": "Code Ilot",
            "nullable": true
          },
          "importance": {
            "type": "number",
            "description": "indicateur d’importance",
            "format": "float"
          },
          "fantoir": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "La voie",
            "nullable": true
          },
          "x": {
            "type": "number",
            "description": "coordonnées géographique en projection Lambert93",
            "format": "float"
          },
          "y": {
            "type": "number",
            "description": "coordonnées géographique en projection Lambert93",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "DtoGeometry": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "description": "Coordonnée issue du géocodage de l'adresse",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoGeocodageFeatures": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DtoProperties"
          },
          "geometry": {
            "$ref": "#/components/schemas/DtoGeometry"
          }
        },
        "additionalProperties": false
      },
      "DtoSiretPoint": {
        "type": "object",
        "properties": {
          "identreprise": {
            "type": "string",
            "description": "(32 caractères) Identifiant permettant d'appeler la fiche complète avec la méthode Compagny/byId/{id}",
            "nullable": true
          },
          "siret": {
            "type": "string",
            "description": "(14 caractères) SIRET de l'Etablissement",
            "nullable": true
          },
          "rs": {
            "type": "string",
            "description": "Raison sociale",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "description": "Coordonnée géographique en projection WGS84: latitude",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Coordonnée géographique en projection WGS84: longitude",
            "format": "double"
          },
          "pays": {
            "type": "integer",
            "description": "Pays",
            "format": "int32"
          },
          "region2016": {
            "type": "string",
            "description": "Région",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "Région (ancienne nomenclature avant 2016)",
            "nullable": true
          },
          "dept": {
            "type": "string",
            "description": "Département",
            "nullable": true
          },
          "epci": {
            "type": "string",
            "description": "Intercommunalité",
            "nullable": true
          },
          "arronetasp": {
            "type": "string",
            "description": "Arrondissement",
            "nullable": true
          },
          "canton": {
            "type": "string",
            "description": "Canton",
            "nullable": true
          },
          "cod_com": {
            "type": "string",
            "description": "Commune",
            "nullable": true
          },
          "iris": {
            "type": "string",
            "description": "Iris",
            "nullable": true
          },
          "ilot": {
            "type": "string",
            "description": "Ilot",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoReponseCSV": {
        "type": "object",
        "properties": {
          "Lat": {
            "type": "number",
            "description": "coordonnées géographique en projection WGS84",
            "format": "float",
            "nullable": true
          },
          "Lon": {
            "type": "number",
            "description": "coordonnées géographique en projection WGS84",
            "format": "float",
            "nullable": true
          },
          "X": {
            "type": "number",
            "description": "coordonnées géographique en projection Lambert93",
            "format": "float",
            "nullable": true
          },
          "Y": {
            "type": "number",
            "description": "coordonnées géographique en projection Lambert93",
            "format": "float",
            "nullable": true
          },
          "Label": {
            "type": "string",
            "description": "libellé complet de l’adresse",
            "nullable": true
          },
          "Distance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "description": "Précision sur le résultat: (housenumber) = Au numéro de voie, (street) = à la voie, placé approximativement au centre de celle-ci, (locality) = lieu-dit, (municipality) = à la commune",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Housenumber": {
            "type": "string",
            "description": "numéro avec indice de répétition éventuel (bis, ter, A, B)",
            "nullable": true
          },
          "Citycode": {
            "type": "string",
            "description": "Code INSEE de la commune",
            "nullable": true
          },
          "Postcode": {
            "type": "string",
            "description": "code postal",
            "nullable": true
          },
          "Iris": {
            "type": "string",
            "description": "Code Iris",
            "nullable": true
          },
          "Ilot": {
            "type": "string",
            "description": "Code Ilot",
            "nullable": true
          },
          "Canton": {
            "type": "string",
            "description": "Le code canton",
            "nullable": true
          },
          "Fantoir": {
            "type": "string",
            "nullable": true
          },
          "Score": {
            "type": "number",
            "description": "valeur de 0 à 1 indiquant la pertinence du résultat",
            "format": "double",
            "nullable": true
          },
          "AdditionalValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataSourceField": {
        "type": "object",
        "properties": {
          "FieldName": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BestRecord": {
        "type": "object",
        "properties": {
          "TransactionRecordID": {
            "type": "string",
            "nullable": true
          },
          "DatasourceFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataSourceField"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoMatchIdentity": {
        "type": "object",
        "properties": {
          "BestRecord": {
            "$ref": "#/components/schemas/BestRecord"
          }
        },
        "additionalProperties": false
      },
      "DtoIndividuEnrichissement": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "ID: identifiant unique permettant d'obtenir les informations détaillées de l'individu",
            "nullable": true
          },
          "Prenom": {
            "type": "string",
            "description": "PRENOM: prenom de l'individu",
            "nullable": true
          },
          "Nom": {
            "type": "string",
            "description": "NOM: nom de l'individu",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoIndividuEnrichissementId": {
        "type": "object",
        "properties": {
          "civ": {
            "type": "string",
            "nullable": true
          },
          "prenom": {
            "type": "string",
            "nullable": true
          },
          "nom": {
            "type": "string",
            "nullable": true
          },
          "adresse1": {
            "type": "string",
            "nullable": true
          },
          "adresse2": {
            "type": "string",
            "nullable": true
          },
          "adresse3": {
            "type": "string",
            "nullable": true
          },
          "adresse4": {
            "type": "string",
            "nullable": true
          },
          "adresse5": {
            "type": "string",
            "nullable": true
          },
          "adresse6": {
            "type": "string",
            "nullable": true
          },
          "energie": {
            "type": "string",
            "nullable": true
          },
          "lib_energie": {
            "type": "string",
            "nullable": true
          },
          "pavim": {
            "type": "string",
            "nullable": true
          },
          "lib_pavim": {
            "type": "string",
            "nullable": true
          },
          "propri_loca": {
            "type": "string",
            "nullable": true
          },
          "lib_propri_loca": {
            "type": "string",
            "nullable": true
          },
          "richesse_1": {
            "type": "string",
            "nullable": true
          },
          "lib_richesse": {
            "type": "string",
            "nullable": true
          },
          "sexe": {
            "type": "string",
            "nullable": true
          },
          "lib_sexe": {
            "type": "string",
            "nullable": true
          },
          "tranche_15": {
            "type": "string",
            "nullable": true
          },
          "lib_age": {
            "type": "string",
            "nullable": true
          },
          "ddn": {
            "type": "string",
            "nullable": true
          },
          "date_naissance": {
            "type": "string",
            "nullable": true
          },
          "telfixe": {
            "type": "string",
            "nullable": true
          },
          "portable": {
            "type": "string",
            "nullable": true
          },
          "top_bloctel": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DtoListeCodesLiasses": {
        "type": "object",
        "properties": {
          "listeCodes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoFonctionDirigeant": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "libelle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoEvenement": {
        "type": "object",
        "properties": {
          "IdEvenement": {
            "type": "integer",
            "description": "L'Id de l'évènement",
            "format": "int32"
          },
          "Libelle": {
            "type": "string",
            "description": "Le libellé de l'évènement",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "La description de l'évènement",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoReseauxSociaux": {
        "type": "object",
        "properties": {
          "SIREN": {
            "type": "string",
            "description": "(9 caractères) SIREN de l'entreprise",
            "nullable": true
          },
          "SITE": {
            "type": "string",
            "description": "URL du site Web",
            "nullable": true
          },
          "URL": {
            "type": "string",
            "description": "Lien du réseau social",
            "nullable": true
          },
          "LIBELLE": {
            "type": "string",
            "description": "Libellé du réseau social (ex: Linkedin ou Twitter)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoMarqueRmeLight": {
        "type": "object",
        "properties": {
          "idmarque": {
            "type": "integer",
            "description": "Identifiant de la marque",
            "format": "int32"
          },
          "marque_nom": {
            "type": "string",
            "description": "Nom de la marque",
            "nullable": true
          },
          "nb_pdv": {
            "type": "integer",
            "description": "Nombre de point de vente de la marque",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DtoRme": {
        "type": "object",
        "properties": {
          "marques": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DtoMarqueRmeLight"
            },
            "description": "La liste des marques associées",
            "nullable": true
          },
          "isTDR": {
            "type": "boolean",
            "description": "Indique si le siret est une tête de réseau"
          },
          "lib_type_reseau": {
            "type": "string",
            "description": "Libelle du type de réseau",
            "nullable": true
          },
          "siren": {
            "type": "string",
            "description": "(9 caractères) SIREN de l’entreprise",
            "nullable": true
          },
          "siret": {
            "type": "string",
            "description": "(14 caractères) SIRET de l’Etablissement",
            "nullable": true
          },
          "siret_tdr": {
            "type": "string",
            "description": "(14 caractères) SIRET de la tête de réseau",
            "nullable": true
          },
          "rs": {
            "type": "string",
            "description": "Raison sociale",
            "nullable": true
          },
          "codpos": {
            "type": "string",
            "description": "(5 caractères) Code postal de l'établissement",
            "nullable": true
          },
          "lib_commune": {
            "type": "string",
            "description": "Commune(Etablissement)",
            "nullable": true
          },
          "apet700": {
            "type": "string",
            "description": "(5 caractères) Activité Principale (700 classes, Codes NAF) de l’Etablissement",
            "nullable": true
          },
          "lib_apet700": {
            "type": "string",
            "nullable": true
          },
          "tefet": {
            "type": "string",
            "description": "(2 caractères) Tranche d’Effectif salarié de l’Etablissement",
            "nullable": true
          },
          "lib_tefet": {
            "type": "string",
            "nullable": true
          },
          "cj": {
            "type": "string",
            "description": "(4 caractères) Catégorie juridique",
            "nullable": true
          },
          "lib_catjuridique": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoMarqueRme": {
        "type": "object",
        "properties": {
          "idmarque": {
            "type": "integer",
            "description": "Identifiant de la marque",
            "format": "int32"
          },
          "marque_nom": {
            "type": "string",
            "description": "Nom de la marque",
            "nullable": true
          },
          "marque_email": {
            "type": "string",
            "description": "Adresse email de la marque",
            "nullable": true
          },
          "marque_tel": {
            "type": "string",
            "description": "Numéro de téléphone de la marque",
            "nullable": true
          },
          "marque_url": {
            "type": "string",
            "description": "Site internet de la marque",
            "nullable": true
          },
          "marque_code_activite": {
            "type": "string",
            "description": "Code d'activité de la marque",
            "nullable": true
          },
          "lib_activite": {
            "type": "string",
            "nullable": true
          },
          "marque_famille": {
            "type": "integer",
            "description": "Famille de la marque",
            "format": "int32"
          },
          "lib_famille": {
            "type": "string",
            "nullable": true
          },
          "nb_pdv": {
            "type": "integer",
            "description": "Nombre de point de vente de la marque",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DtoPdv": {
        "type": "object",
        "properties": {
          "lib_type_reseau": {
            "type": "string",
            "description": "Libelle du type de réseau",
            "nullable": true
          },
          "siren": {
            "type": "string",
            "description": "(9 caractères) SIREN de l’entreprise",
            "nullable": true
          },
          "siret": {
            "type": "string",
            "description": "(14 caractères) SIRET de l’Etablissement",
            "nullable": true
          },
          "rs": {
            "type": "string",
            "description": "Raison sociale",
            "nullable": true
          },
          "codpos": {
            "type": "string",
            "description": "(5 caractères) Code postal de l'établissement",
            "nullable": true
          },
          "lib_commune": {
            "type": "string",
            "description": "Commune(Etablissement)",
            "nullable": true
          },
          "apet700": {
            "type": "string",
            "description": "(5 caractères) Activité Principale (700 classes, Codes NAF) de l’Etablissement",
            "nullable": true
          },
          "lib_apet700": {
            "type": "string",
            "nullable": true
          },
          "tefet": {
            "type": "string",
            "description": "(2 caractères) Tranche d’Effectif salarié de l’Etablissement",
            "nullable": true
          },
          "lib_tefet": {
            "type": "string",
            "nullable": true
          },
          "cj": {
            "type": "string",
            "description": "(4 caractères) Catégorie juridique",
            "nullable": true
          },
          "lib_catjuridique": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoPdvs": {
        "type": "object",
        "properties": {
          "id_marque": {
            "type": "integer",
            "description": "L'identifiant de la marque",
            "format": "int32"
          },
          "nb_pdv": {
            "type": "integer",
            "description": "Le nombre de point de vente total de la marque",
            "format": "int32"
          },
          "marque_nom": {
            "type": "string",
            "description": "Le nom de la marque",
            "nullable": true
          },
          "siret_tdr": {
            "type": "string",
            "description": "Le siret de la tête de réseau",
            "nullable": true
          },
          "pdvs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DtoPdv"
            },
            "description": "La liste des points de vente",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Adresse": {
        "type": "object",
        "properties": {
          "Appartement": {
            "type": "string",
            "nullable": true
          },
          "Batiment": {
            "type": "string",
            "nullable": true
          },
          "Voie": {
            "type": "string",
            "nullable": true
          },
          "BPlieudit": {
            "type": "string",
            "nullable": true
          },
          "CP": {
            "type": "string",
            "nullable": true
          },
          "Ville": {
            "type": "string",
            "nullable": true
          },
          "CodCom": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Signaletique": {
        "type": "object",
        "properties": {
          "Civilite": {
            "type": "string",
            "nullable": true
          },
          "Nom": {
            "type": "string",
            "nullable": true
          },
          "Prenom": {
            "type": "string",
            "nullable": true
          },
          "RaisonSociale": {
            "type": "string",
            "nullable": true
          },
          "Enseigne": {
            "type": "string",
            "nullable": true
          },
          "Telephone": {
            "type": "string",
            "nullable": true
          },
          "Siret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RnvpDemande": {
        "type": "object",
        "properties": {
          "AdresseEntree": {
            "$ref": "#/components/schemas/Adresse"
          },
          "Destinataire": {
            "$ref": "#/components/schemas/Signaletique"
          },
          "NomMajuscule": {
            "type": "boolean"
          },
          "LongueurAdresse": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NormaliseResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "DtoSuggestRs": {
        "type": "object",
        "properties": {
          "rs": {
            "type": "string",
            "description": "Raison Sociale",
            "nullable": true
          },
          "identreprise": {
            "type": "string",
            "description": "(32 caractères) Identifiant permettant d'appeler la fiche complète avec la méthode Compagny/byId/{id}",
            "nullable": true
          },
          "lib_commune": {
            "type": "string",
            "description": "Nom de la commune",
            "nullable": true
          },
          "adresse4": {
            "type": "string",
            "description": "Ligne 4 adresse (Voie)",
            "nullable": true
          },
          "adresse6": {
            "type": "string",
            "description": "Ligne 6 adresse (CP + Ville)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoAdresse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "adresse4": {
            "type": "string",
            "nullable": true
          },
          "adresse6": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoPoi": {
        "type": "object",
        "properties": {
          "libelle": {
            "type": "string",
            "description": "Le nom du point d'intérêt",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "La catégorie utilisée pour classer le point d'intérêt",
            "nullable": true
          },
          "subCategory": {
            "type": "string",
            "description": "La sous-catégorie de classement du point d'intérêt",
            "nullable": true
          },
          "adr_total": {
            "type": "string",
            "description": "L'adresse complète du point d'intérêt",
            "nullable": true
          },
          "adresse4": {
            "type": "string",
            "description": "La ligne 4 de l'adresse Postale (La voie) du point d'intérêt",
            "nullable": true
          },
          "adresse6": {
            "type": "string",
            "description": "La ligne 6 de l'adresse Postale (CP + Ville) du point d'intérêt",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoSuggestResponse": {
        "type": "object",
        "properties": {
          "rs": {
            "type": "string",
            "description": "Raison Sociale",
            "nullable": true
          },
          "libelle": {
            "type": "string",
            "nullable": true
          },
          "adresse4": {
            "type": "string",
            "description": "Ligne 4 adresse (Voie)",
            "nullable": true
          },
          "adresse6": {
            "type": "string",
            "description": "Ligne 6 adresse (CP + Ville)",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type",
            "nullable": true
          },
          "precision": {
            "type": "string",
            "description": "Précision",
            "nullable": true
          },
          "subCategory": {
            "type": "string",
            "description": "Sous Catégorie",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Catégorie",
            "nullable": true
          },
          "cod_com": {
            "type": "string",
            "description": "Commune",
            "nullable": true
          },
          "lib_commune": {
            "type": "string",
            "description": "Nom de la commune",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DtoTypoPolygon": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Le code de l'élément géographique",
            "nullable": true
          },
          "Libelle": {
            "type": "string",
            "description": "Le libellé de l'élément géographique",
            "nullable": true
          },
          "energie": {
            "type": "string",
            "description": "Les informations générales de l'élément géographique",
            "nullable": true
          },
          "lib_energie": {
            "type": "string",
            "nullable": true
          },
          "propri_loca": {
            "type": "string",
            "nullable": true
          },
          "lib_propri_loca": {
            "type": "string",
            "nullable": true
          },
          "richesse": {
            "type": "string",
            "nullable": true
          },
          "lib_richesse": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Représente les informations typographiques d'un élément géographique"
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "description": "API Key Authentication",
        "name": "apiKey",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "tags": [
    {
      "name": "Alertes",
      "description": "Permet de surveiller et de déclencher des alertes sur des entreprises"
    },
    {
      "name": "AnnuaireInverse",
      "description": "(Reverse directory API) Permet de retrouver les coordonnées d'un particulier ou d'une entreprise à partir de son numéro de téléphone / Is used to find the contact details for a private individual or a business using their phone number"
    },
    {
      "name": "Company",
      "description": "(Company API) Permet de rechercher une entreprise ou d'obtenir des informations sur une entreprise / Is used to find a business or get information about a business"
    },
    {
      "name": "Dirigeant",
      "description": "(Director and operational position API) Permet de rechercher les dirigeants d’une entreprise ou de rechercher une entreprise par son dirigeant / Is used to find the directors of a business or to find a business using the name of one of its directors"
    },
    {
      "name": "DonneesFinancieres",
      "description": "(Financial Data API) Permet de rechercher les indicateurs clés financiers (liasses fiscales) d’une entreprise / Is used to find the key financial indicators (tax returns) for a business"
    },
    {
      "name": "Email",
      "description": "(Email API) Permet de vérifier la validité d'un email / Is used to check the validity of an email address"
    },
    {
      "name": "EnrichissementTel",
      "description": "(Phone enrichment API) Permet de retrouver le numéro de téléphone d'un particulier ou d'une entreprise à partir de son nom et(ou) de son adresse / Is used to find the phone number of a private person or a business using their name and/or address"
    },
    {
      "name": "Geocodage",
      "description": "(Geocoding API) Permet de géocoder une adresse postale (fournir une latitude et une longitude) / Is used to geocode a postal address (provide a latitude and longitude)"
    },
    {
      "name": "Iban",
      "description": "permet de vérifier la chaîne de caractères de l’IBAN"
    },
    {
      "name": "Individu",
      "description": "(Person API) Permet de vérifier les informations d'un individu / Is used to check the information for a private person"
    },
    {
      "name": "IndividuEnrichissement",
      "description": "Permet de rechercher et ensuite d'enrichir les informations d'un individu / Is used to research and enriching the information for a private person"
    },
    {
      "name": "ReseauxSociaux",
      "description": "(Social Media API) Permet d'obtenir la liste des réseaux sociaux d'une entreprise / Is used to get the list of social media for a business"
    },
    {
      "name": "Rme",
      "description": "Recherche d'information sur un Réseau de Marques et Enseignes"
    },
    {
      "name": "RNVP",
      "description": "(RNVP Addresses API) Mise en conformité des adresses avec les référentiels postaux de LA POSTE / Formats addresses to compliance with the LA POSTE postal references"
    },
    {
      "name": "Suggest",
      "description": "(Suggest API) Proposition de résultats en fonction des caractères saisis / Results proposed depending on the entered string"
    },
    {
      "name": "Typographie",
      "description": "permet de récupérer des données typographiques d'une zone géographique"
    }
  ],
  "servers": [
    {
      "url": "https://api.api-datastore.com",
      "description": ""
    }
  ]
}