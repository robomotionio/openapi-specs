{
  "openapi": "3.0.1",
  "info": {
    "title": "Zalando Shop",
    "description": "The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.",
    "version": "v1.0",
    "x-apisguru-categories": [
      "ecommerce"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_Zalando_profile_image.jpeg"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://api.zalando.com/schema/swagger.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "zalando.com"
  },
  "servers": [
    {
      "url": "https://api.zalando.com"
    }
  ],
  "paths": {
    "/article-reviews": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article Reviews",
        "description": "Zalando API Article Reviews Schema",
        "parameters": [
          {
            "name": "articleId",
            "in": "query",
            "description": "Article IDs. A list of config SKUs for which the article reviews will be returned.\nRequired if articleModelId is empty.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "articleModelId",
            "in": "query",
            "description": "Article model IDs. A list of model SKUs for which the article reviews will be returned.\nRequired if articleId is empty.\n",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "minStarRating",
            "in": "query",
            "description": "To get reviews with minimum star rating.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxStarRating",
            "in": "query",
            "description": "To get reviews with maximum star rating.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "articles are sorted on reviews provided by customers (eg: best)",
            "schema": {
              "type": "string",
              "default": "newest",
              "enum": [
                "newest",
                "best",
                "worst",
                "most_helpful"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "to request with required page number or pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "to request with required page size in a page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Articles Reviews response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article-Reviews"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/article-reviews-summaries": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article Reviews Summaries",
        "description": "Zalando API Article Reviews Summaries Schema",
        "parameters": [
          {
            "name": "articleModelId",
            "in": "query",
            "description": "Article model IDs. A list of model SKUs for which the article review summaries will be returned.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "to request with required page number or pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "to request with required page size in a page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Articles Reviews Summaries response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article-Reviews-Summaries"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/article-reviews-summaries/{articleModelId}": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article Reviews Summaries by articleModelId",
        "description": "Zalando API ArticleReviewsSummaries Schema",
        "parameters": [
          {
            "name": "articleModelId",
            "in": "path",
            "description": "To get unique reviews summary from article model Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Articles Reviews Summaries by articleModelId response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article-Reviews-Summary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/article-reviews/{reviewId}": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article Reviews by reviewId",
        "description": "Zalando API ArticleReviews Schema",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "description": "To get unique review by review Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Articles Reviews by reviewId response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article-Review"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/articles": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Search for Articles",
        "description": "Search for articles based on various different possible filter like e.g. the `brandFamily`, the `catagory` or a\nspecific `color`. See [Filters](https://todo) for a list of all available filter options.\n\nThe default `pageSize` for responses is set to `20`. You can add a `pageSize` request parameter to adjust that.\nPlease keep in mind that the maximum `pageSize` for this resource is `200`.\n\nThe endpoint also supports reducing the fields returned for each article via the `fields` parameter. Please\nrefer to [fields parameter](https://todo) for more details.",
        "parameters": [
          {
            "name": "articleId",
            "in": "query",
            "description": "The `articleIds` to use use for filtering.\n\nOne or more `articleIds` might be used as a filter criteria. Submit multiple `articleId` request parameters for\nmore than one to be used. They will be treated as `OR` criteria.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "articleModelId",
            "in": "query",
            "description": "filters by article ModelId",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "articleUnitId",
            "in": "query",
            "description": "filters by article's unit id",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "activationDate",
            "in": "query",
            "description": "period or time the articles are activated for selling in the shop",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "thisWeek",
                  "lastWeek",
                  "lastMonth"
                ]
              }
            }
          },
          {
            "name": "ageGroup",
            "in": "query",
            "description": "filters by age group (eg: kids)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "babies",
                  "kids",
                  "teen",
                  "adult"
                ]
              }
            }
          },
          {
            "name": "assortmentArea",
            "in": "query",
            "description": "filters by classification of articles (eg: maternity) ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "standard",
                  "maternity",
                  "plusSize",
                  "petite"
                ]
              }
            }
          },
          {
            "name": "brand",
            "in": "query",
            "description": "filters by brand key given by user (eg: SA5)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "brandfamily",
            "in": "query",
            "description": "filters by brand family key (eg: nike) ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "filters by category (eg: Socks, Rain Coats)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "filters by color (eg: red, blue)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "black",
                  "brown",
                  "beige",
                  "gray",
                  "white",
                  "blue",
                  "petrol",
                  "turquoise",
                  "green",
                  "olive",
                  "yellow",
                  "orange",
                  "red",
                  "pink",
                  "purple",
                  "gold",
                  "silver",
                  "multicolored"
                ]
              }
            }
          },
          {
            "name": "den",
            "in": "query",
            "description": "filters by den ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "den15",
                  "den20",
                  "den40",
                  "den60",
                  "den80",
                  "den100",
                  "den200",
                  "den120",
                  "den12",
                  "den50"
                ]
              }
            }
          },
          {
            "name": "filling",
            "in": "query",
            "description": "filters by different kinds of garment filling materials (eg: satin, wolle)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "angora",
                  "baumwolle",
                  "daunen",
                  "fell",
                  "fleece",
                  "frottee",
                  "kaschmir",
                  "lammfell",
                  "leder",
                  "lederimitat",
                  "merinowolle",
                  "microfaser",
                  "mohair",
                  "satin",
                  "schurwolle",
                  "seide",
                  "sonstige",
                  "textil",
                  "warm",
                  "wolle"
                ]
              }
            }
          },
          {
            "name": "fullText",
            "in": "query",
            "description": "filters by text (eg: search by 'as' gives result with articles of brand Sass)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "filters by gender",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "male",
                  "female"
                ]
              }
            }
          },
          {
            "name": "heelForm",
            "in": "query",
            "description": "filters by heel form (eg: flat)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "block",
                  "flat",
                  "wedge",
                  "penny",
                  "funnel",
                  "plateau",
                  "plateauBoots",
                  "wedgeHidden",
                  "plateauHidden",
                  "plateauHeels"
                ]
              }
            }
          },
          {
            "name": "heelHeight",
            "in": "query",
            "description": "filters by height of the heel size or length (eg: xs)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "xs",
                  "s",
                  "m"
                ]
              }
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "filters by garments length (eg: 3/4 length, knee-length)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "occasion",
            "in": "query",
            "description": "filters by type of occasion (eg: party, business)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "business",
                  "octoberFest",
                  "loungeWear",
                  "evening",
                  "party",
                  "leisure"
                ]
              }
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "filters by pattern on the garments (eg: animal print, plain)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "animalPrint",
                  "checkered",
                  "colored",
                  "floral",
                  "polkaDot",
                  "striped",
                  "paisley",
                  "plain",
                  "print",
                  "burnout",
                  "herringBone",
                  "camouflage",
                  "flecked",
                  "pinstripe",
                  "gradient",
                  "photoPrint"
                ]
              }
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "filters all articles in price range (eg: 9-90)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sale",
            "in": "query",
            "description": "filters discounted articles marked as sale",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "sale"
                ]
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "filters by season (Autumn/Winter or Spring/Summer)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "winter",
                  "summer"
                ]
              }
            }
          },
          {
            "name": "shaftHeight",
            "in": "query",
            "description": "filters by shaft height (eg: s, xs)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "xs",
                  "s",
                  "m",
                  "l"
                ]
              }
            }
          },
          {
            "name": "shaftWidth",
            "in": "query",
            "description": "filters by shaft width (eg: s, l)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "s",
                  "m",
                  "l"
                ]
              }
            }
          },
          {
            "name": "shirtCollar",
            "in": "query",
            "description": "filters by shirt collar styles (eg: low V neck, lined collar)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lapelCollar",
                  "mandarinCollar",
                  "hood",
                  "poloNeck",
                  "poloShirt",
                  "cowlNeck",
                  "roundNeck",
                  "scarfCollar",
                  "boatNeck",
                  "vNeck",
                  "buttonDown",
                  "turnDownCollar",
                  "highCollar",
                  "linedCollar",
                  "shirtCollar",
                  "cutawayCollar",
                  "doubleCollar",
                  "peterPanCollar",
                  "kentCollar",
                  "cupShapedCollar",
                  "contrastCollar",
                  "maoCollar",
                  "wingCollar",
                  "tabCollar",
                  "volantCollar",
                  "shawlCollar",
                  "envelope",
                  "lowVNeck",
                  "cacheCeour",
                  "lowRoundNeck",
                  "backless",
                  "henley",
                  "squareNeck",
                  "offTheShoulder"
                ]
              }
            }
          },
          {
            "name": "shoeFastener",
            "in": "query",
            "description": "filters by shoe fastener types (eg: buckle, lacing)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "buckle",
                  "belt",
                  "lacing",
                  "open",
                  "zipper",
                  "velcro"
                ]
              }
            }
          },
          {
            "name": "shoeToecap",
            "in": "query",
            "description": "filters by shoe toe cap variants (eg: pointed, square)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "round",
                  "pointed",
                  "open",
                  "square"
                ]
              }
            }
          },
          {
            "name": "shopArea",
            "in": "query",
            "description": "filters by classification of articles",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "shop",
                  "sale"
                ]
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "filters by size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sports",
            "in": "query",
            "description": "filters by different sport activities (eg: football)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "outdoor",
                  "skiSnow",
                  "running",
                  "training",
                  "football",
                  "handball",
                  "basketball",
                  "volleyball",
                  "golf",
                  "tennis",
                  "beach",
                  "skate",
                  "riding",
                  "cycling",
                  "sailing",
                  "badminton",
                  "dancing",
                  "snowboard",
                  "swimming"
                ]
              }
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "filters by technology used to produce the articles",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "clima365",
                  "climacool",
                  "climalite",
                  "climaproof",
                  "climawarm",
                  "driFit",
                  "flywire",
                  "formotion",
                  "omniHeat",
                  "polartec",
                  "primaloft",
                  "staywarm",
                  "techfit",
                  "thinsulate",
                  "venturi",
                  "h2no",
                  "dermizax",
                  "performanceShell",
                  "softShell",
                  "windstopper",
                  "proShell",
                  "hydratic",
                  "pacliteShell",
                  "activeShell",
                  "goreTex",
                  "hyvent",
                  "texapore",
                  "precip"
                ]
              }
            }
          },
          {
            "name": "trouserRise",
            "in": "query",
            "description": "filters by trouser rise",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "high",
                  "medium",
                  "low"
                ]
              }
            }
          },
          {
            "name": "upperMaterial",
            "in": "query",
            "description": "filters by different type of upper material used on garments (eg: lace)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "batiste",
                  "caoutchouc",
                  "cashmere",
                  "damask",
                  "down",
                  "feathers",
                  "felt",
                  "flanelette",
                  "flannel",
                  "fleece",
                  "imitationLeather",
                  "jacquard",
                  "jersey",
                  "leather",
                  "linen",
                  "linon",
                  "mesh",
                  "microfiber",
                  "mohair",
                  "other",
                  "percale",
                  "polyester",
                  "renforce",
                  "satin",
                  "seersucker",
                  "silk",
                  "synthetic",
                  "textile",
                  "towelling",
                  "varnish",
                  "velours",
                  "viscose",
                  "wool",
                  "cord",
                  "denim",
                  "rib",
                  "braided",
                  "crocheted",
                  "hardshell",
                  "softshell",
                  "lace",
                  "sweat"
                ]
              }
            }
          },
          {
            "name": "volume",
            "in": "query",
            "description": "filters by volume",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "smallest",
                  "small",
                  "medium",
                  "large",
                  "largest"
                ]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "to request with required page number or pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "to request with required page size in a page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sorting order (eg: popularity)",
            "schema": {
              "type": "string",
              "enum": [
                "popularity",
                "activationdate",
                "pricedesc",
                "priceasc",
                "sale"
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Articles response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Articles"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/articles/{articleId}": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article by articleId",
        "description": "Zalando API Article Schema",
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "To get unique article for article Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/articles/{articleId}/media": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article media by articleId",
        "description": "Zalando API Article Schema",
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "To get unique article for article Id media.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article-Media"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/articles/{articleId}/reviews": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article reviews by articleId",
        "description": "Zalando API Article Schema",
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "To get unique article for article Id reviews.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minStarRating",
            "in": "query",
            "description": "To get reviews with minimum star rating.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxStarRating",
            "in": "query",
            "description": "To get reviews with maximum star rating.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "articles are sorted on reviews provided by customers (eg: best)",
            "schema": {
              "type": "string",
              "default": "newest",
              "enum": [
                "newest",
                "best",
                "worst",
                "most_helpful"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "to request with required page number or pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "to request with required page size in a page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article-Reviews"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/articles/{articleId}/reviews-summary": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article reviews summary by articleId",
        "description": "Zalando API Article Schema",
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "To get unique article for article Id reviews summary.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article-Reviews-Summary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/articles/{articleId}/units": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article units by articleId",
        "description": "Zalando API Article Schema",
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "To get unique article for article Id units.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article-Units"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/articles/{articleId}/units/{unitId}": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Get Article units by articleId snd unitId",
        "description": "Zalando API Article Schema",
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "To get unique article for article Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unitId",
            "in": "path",
            "description": "To get unique article for article Id unit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article-Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/brands": {
      "get": {
        "tags": [
          "brands"
        ],
        "summary": "Shop Brands",
        "description": "Zalando API Brands Schema",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Request Brand by key",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Request Brand by name",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "brandFamilyName",
            "in": "query",
            "description": "Request Brand by brandFamilyName",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "brandFamilyKey",
            "in": "query",
            "description": "Request Brand by brandFamilyKey",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "to request with required page number or pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "to request with required page size in a page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brands response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brands"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/brands/{key}": {
      "get": {
        "tags": [
          "brands"
        ],
        "summary": "Get Single Brand by Key",
        "description": "Zalando API Brand Schema",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "To get unique Brand by key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand Key response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          },
          "404": {
            "description": "Brand not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Shop Categories",
        "description": "Zalando API Categories Schema",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Request Categories by names",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Request Categories by type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outlet",
            "in": "query",
            "description": "Request Categories by outlet",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hidden",
            "in": "query",
            "description": "Request Categories by hidden",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroup",
            "in": "query",
            "description": "Request Categories by target group",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Request Categories by keys",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "parentKey",
            "in": "query",
            "description": "Request Categories by parent keys",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "childKey",
            "in": "query",
            "description": "Request Categories by child keys",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "suggestedFilter",
            "in": "query",
            "description": "Request Categories by suggested filters",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "to request with required page number or pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "to request with required page size in a page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Categories Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{key}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get Single Category by Key",
        "description": "Zalando API Category Schema",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "To get unique Category by key.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.\n\nExample: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category Key response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Shop Domains",
        "description": "Zalando API Domains Schema",
        "responses": {
          "200": {
            "description": "Domains response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Zalando API Domains Schema",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/facets": {
      "get": {
        "tags": [
          "facets"
        ],
        "summary": "Shop Facets",
        "description": "Zalando API Facets Schema",
        "parameters": [
          {
            "name": "ageGroup",
            "in": "query",
            "description": "filters by age group (eg: kids)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "babies",
                  "kids",
                  "teen",
                  "adult"
                ]
              }
            }
          },
          {
            "name": "articleId",
            "in": "query",
            "description": "The `articleIds` to use use for filtering.\n\nOne or more `articleIds` might be used as a filter criteria. Submit multiple `articleId` request parameters for\nmore than one to be used. They will be treated as `OR` criteria.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "activationDate",
            "in": "query",
            "description": "period or time the articles are activated for selling in the shop",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "thisWeek",
                  "lastWeek",
                  "lastMonth"
                ]
              }
            }
          },
          {
            "name": "articleModelId",
            "in": "query",
            "description": "filters by article ModelId",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "assortmentArea",
            "in": "query",
            "description": "filters by classification of articles (eg: maternity) ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "standard",
                  "maternity",
                  "plusSize",
                  "petite"
                ]
              }
            }
          },
          {
            "name": "brand",
            "in": "query",
            "description": "filters by brand key given by user (eg: SA5)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "brandfamily",
            "in": "query",
            "description": "filters by brand family key (eg: nike) ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "filters by category (eg: Socks, Rain Coats)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "filters by color (eg: red, blue)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "black",
                  "brown",
                  "beige",
                  "gray",
                  "white",
                  "blue",
                  "petrol",
                  "turquoise",
                  "green",
                  "olive",
                  "yellow",
                  "orange",
                  "red",
                  "pink",
                  "purple",
                  "gold",
                  "silver",
                  "multicolored"
                ]
              }
            }
          },
          {
            "name": "den",
            "in": "query",
            "description": "filters by den ",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "den15",
                  "den20",
                  "den40",
                  "den60",
                  "den80",
                  "den100",
                  "den200",
                  "den120",
                  "den12",
                  "den50"
                ]
              }
            }
          },
          {
            "name": "filling",
            "in": "query",
            "description": "filters by different kinds of garment filling materials (eg: satin, wolle)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "angora",
                  "baumwolle",
                  "daunen",
                  "fell",
                  "fleece",
                  "frottee",
                  "kaschmir",
                  "lammfell",
                  "leder",
                  "lederimitat",
                  "merinowolle",
                  "microfaser",
                  "mohair",
                  "satin",
                  "schurwolle",
                  "seide",
                  "sonstige",
                  "textil",
                  "warm",
                  "wolle"
                ]
              }
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "filters by gender",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "male",
                  "female"
                ]
              }
            }
          },
          {
            "name": "heelForm",
            "in": "query",
            "description": "filters by heel form (eg: flat)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "block",
                  "flat",
                  "wedge",
                  "penny",
                  "funnel",
                  "plateau",
                  "plateauBoots",
                  "wedgeHidden",
                  "plateauHidden",
                  "plateauHeels"
                ]
              }
            }
          },
          {
            "name": "heelHeight",
            "in": "query",
            "description": "filters by height of the heel size or length (eg: xs)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "xs",
                  "s",
                  "m"
                ]
              }
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "filters by garments length (eg: 3/4 length, knee-length)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "occasion",
            "in": "query",
            "description": "filters by type of occasion (eg: party, business)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "business",
                  "octoberFest",
                  "loungeWear",
                  "evening",
                  "party",
                  "leisure"
                ]
              }
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "filters by pattern on the garments (eg: animal print, plain)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "animalPrint",
                  "checkered",
                  "colored",
                  "floral",
                  "polkaDot",
                  "striped",
                  "paisley",
                  "plain",
                  "print",
                  "burnout",
                  "herringBone",
                  "camouflage",
                  "flecked",
                  "pinstripe",
                  "gradient",
                  "photoPrint"
                ]
              }
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "filters all articles in price range (eg: 9-90)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sale",
            "in": "query",
            "description": "filters discounted articles marked as sale",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "sale"
                ]
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "filters by season (Autumn/Winter or Spring/Summer)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "winter",
                  "summer"
                ]
              }
            }
          },
          {
            "name": "shaftHeight",
            "in": "query",
            "description": "filters by shaft height (eg: s, xs)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "xs",
                  "s",
                  "m",
                  "l"
                ]
              }
            }
          },
          {
            "name": "shaftWidth",
            "in": "query",
            "description": "filters by shaft width (eg: s, l)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "s",
                  "m",
                  "l"
                ]
              }
            }
          },
          {
            "name": "shirtCollar",
            "in": "query",
            "description": "filters by shirt collar styles (eg: low V neck, lined collar)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lapelCollar",
                  "mandarinCollar",
                  "hood",
                  "poloNeck",
                  "poloShirt",
                  "cowlNeck",
                  "roundNeck",
                  "scarfCollar",
                  "boatNeck",
                  "vNeck",
                  "buttonDown",
                  "turnDownCollar",
                  "highCollar",
                  "linedCollar",
                  "shirtCollar",
                  "cutawayCollar",
                  "doubleCollar",
                  "peterPanCollar",
                  "kentCollar",
                  "cupShapedCollar",
                  "contrastCollar",
                  "maoCollar",
                  "wingCollar",
                  "tabCollar",
                  "volantCollar",
                  "shawlCollar",
                  "envelope",
                  "lowVNeck",
                  "cacheCeour",
                  "lowRoundNeck",
                  "backless",
                  "henley",
                  "squareNeck",
                  "offTheShoulder"
                ]
              }
            }
          },
          {
            "name": "shoeFastener",
            "in": "query",
            "description": "filters by shoe fastener types (eg: buckle, lacing)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "buckle",
                  "belt",
                  "lacing",
                  "open",
                  "zipper",
                  "velcro"
                ]
              }
            }
          },
          {
            "name": "shoeToecap",
            "in": "query",
            "description": "filters by shoe toe cap variants (eg: pointed, square)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "round",
                  "pointed",
                  "open",
                  "square"
                ]
              }
            }
          },
          {
            "name": "shopArea",
            "in": "query",
            "description": "filters by classification of articles",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "shop",
                  "sale"
                ]
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "filters by size",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sports",
            "in": "query",
            "description": "filters by different sport activities (eg: football)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "outdoor",
                  "skiSnow",
                  "running",
                  "training",
                  "football",
                  "handball",
                  "basketball",
                  "volleyball",
                  "golf",
                  "tennis",
                  "beach",
                  "skate",
                  "riding",
                  "cycling",
                  "sailing",
                  "badminton",
                  "dancing",
                  "snowboard",
                  "swimming"
                ]
              }
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "filters by technology used to produce the articles",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "clima365",
                  "climacool",
                  "climalite",
                  "climaproof",
                  "climawarm",
                  "driFit",
                  "flywire",
                  "formotion",
                  "omniHeat",
                  "polartec",
                  "primaloft",
                  "staywarm",
                  "techfit",
                  "thinsulate",
                  "venturi",
                  "h2no",
                  "dermizax",
                  "performanceShell",
                  "softShell",
                  "windstopper",
                  "proShell",
                  "hydratic",
                  "pacliteShell",
                  "activeShell",
                  "goreTex",
                  "hyvent",
                  "texapore",
                  "precip"
                ]
              }
            }
          },
          {
            "name": "trouserRise",
            "in": "query",
            "description": "filters by trouser rise",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "high",
                  "medium",
                  "low"
                ]
              }
            }
          },
          {
            "name": "upperMaterial",
            "in": "query",
            "description": "filters by different type of upper material used on garments (eg: lace)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "batiste",
                  "caoutchouc",
                  "cashmere",
                  "damask",
                  "down",
                  "feathers",
                  "felt",
                  "flanelette",
                  "flannel",
                  "fleece",
                  "imitationLeather",
                  "jacquard",
                  "jersey",
                  "leather",
                  "linen",
                  "linon",
                  "mesh",
                  "microfiber",
                  "mohair",
                  "other",
                  "percale",
                  "polyester",
                  "renforce",
                  "satin",
                  "seersucker",
                  "silk",
                  "synthetic",
                  "textile",
                  "towelling",
                  "varnish",
                  "velours",
                  "viscose",
                  "wool",
                  "cord",
                  "denim",
                  "rib",
                  "braided",
                  "crocheted",
                  "hardshell",
                  "softshell",
                  "lace",
                  "sweat"
                ]
              }
            }
          },
          {
            "name": "volume",
            "in": "query",
            "description": "filters by volume",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "smallest",
                  "small",
                  "medium",
                  "large",
                  "largest"
                ]
              }
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.\n\nExample: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Facets response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Facets"
                },
                "example": [
                  {
                    "facets": [
                      {
                        "count": 2080,
                        "displayName": "Sports Shoes",
                        "key": "childrens-sports-shoes"
                      },
                      {
                        "count": 273,
                        "displayName": "Outdoor Shoes",
                        "key": "childrens-outdoor-shoes"
                      },
                      {
                        "count": 1365,
                        "displayName": "Sandals & Flip Flops",
                        "key": "kids-shoes-sandals-flip-flops"
                      }
                    ],
                    "filter": "category"
                  },
                  {
                    "facets": [
                      {
                        "count": 190247,
                        "displayName": "female",
                        "key": "female"
                      },
                      {
                        "count": 117211,
                        "displayName": "male",
                        "key": "male"
                      }
                    ],
                    "filter": "gender"
                  },
                  {
                    "facets": [
                      {
                        "count": 17844,
                        "displayName": "allSeason",
                        "key": "allSeason"
                      },
                      {
                        "count": 155667,
                        "displayName": "summer",
                        "key": "summer"
                      },
                      {
                        "count": 116763,
                        "displayName": "winter",
                        "key": "winter"
                      }
                    ],
                    "filter": "season"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/filters": {
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "Shop Filters",
        "description": "Zalando API Filters Schema",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.\n\nExample: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Filters response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Filters"
                },
                "example": [
                  {
                    "multiValue": true,
                    "name": "ageGroup",
                    "type": "ENUM",
                    "values": [
                      {
                        "displayName": "babies",
                        "key": "babies"
                      },
                      {
                        "displayName": "kids",
                        "key": "kids"
                      },
                      {
                        "displayName": "teen",
                        "key": "teen"
                      },
                      {
                        "displayName": "adult",
                        "key": "adult"
                      }
                    ]
                  },
                  {
                    "multiValue": true,
                    "name": "brand",
                    "type": "KEY",
                    "values": []
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/filters/{filterName}": {
      "get": {
        "tags": [
          "filters"
        ],
        "summary": "Get Single Filter by filterName",
        "description": "Zalando API Filters Schema",
        "parameters": [
          {
            "name": "filterName",
            "in": "path",
            "description": "To get Filter by filterName.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.\n\nExample: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Filters response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Filter"
                },
                "example": {
                  "multiValue": true,
                  "name": "ageGroup",
                  "type": "ENUM",
                  "values": [
                    {
                      "displayName": "babies",
                      "key": "babies"
                    },
                    {
                      "displayName": "kids",
                      "key": "kids"
                    },
                    {
                      "displayName": "teen",
                      "key": "teen"
                    },
                    {
                      "displayName": "adult",
                      "key": "adult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Filter not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/recommendations/{articleIds}": {
      "get": {
        "tags": [
          "recommendations"
        ],
        "summary": "Get Recommendations by articleId",
        "description": "Zalando API Recommendations Schema",
        "parameters": [
          {
            "name": "articleIds",
            "in": "path",
            "description": "To get Recommendations by articleIds.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "To get maximum results of Recommendations by articleId.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
            "schema": {
              "type": "string",
              "enum": [
                "da-DK",
                "de-AT",
                "de-CH",
                "de-DE",
                "en-GB",
                "es-ES",
                "fi-FI",
                "fr-BE",
                "fr-CH",
                "fr-FR",
                "it-IT",
                "nl-BE",
                "nl-NL",
                "no-NO",
                "pl-PL",
                "sv-SE"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recommendations response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recommendations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Article": {
        "required": [
          "activationDate",
          "additionalInfos",
          "ageGroups",
          "attributes",
          "available",
          "brand",
          "categoryKeys",
          "color",
          "genders",
          "id",
          "media",
          "modelId",
          "name",
          "season",
          "seasonYear",
          "shopUrl",
          "units"
        ],
        "type": "object",
        "properties": {
          "activationDate": {
            "type": "string",
            "description": "timestamp the article was available in the Zalando webshop",
            "format": "date-time"
          },
          "additionalInfos": {
            "minItems": 0,
            "type": "array",
            "description": "any additional information of the article ",
            "items": {
              "type": "string"
            }
          },
          "ageGroups": {
            "minItems": 1,
            "type": "array",
            "description": "age group of the article belongs to",
            "items": {
              "type": "string",
              "enum": [
                "BABY",
                "CHILD",
                "TEEN",
                "ADULT"
              ]
            }
          },
          "attributes": {
            "minItems": 0,
            "type": "array",
            "description": "article attributes",
            "items": {
              "$ref": "#/components/schemas/Article-Attribute"
            }
          },
          "available": {
            "type": "boolean",
            "description": "will be true if at least one article unit is available"
          },
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "categoryKeys": {
            "minItems": 1,
            "type": "array",
            "description": "category keys of the article belongs to",
            "items": {
              "type": "string"
            }
          },
          "color": {
            "type": "string",
            "description": "the main color of the article"
          },
          "genders": {
            "minItems": 1,
            "type": "array",
            "description": "gender of the article belongs to",
            "items": {
              "type": "string",
              "enum": [
                "MALE",
                "FEMALE"
              ]
            }
          },
          "id": {
            "type": "string",
            "description": "unique article id"
          },
          "media": {
            "$ref": "#/components/schemas/Article-Media"
          },
          "modelId": {
            "type": "string",
            "description": "unique article model id"
          },
          "name": {
            "type": "string",
            "description": "article name"
          },
          "season": {
            "type": "string",
            "description": "collection season the article belongs to",
            "enum": [
              "SUMMER",
              "WINTER",
              "ALL"
            ]
          },
          "seasonYear": {
            "pattern": "^ALL$|^20[0-9]{2}$",
            "type": "string",
            "description": "collection year the article belongs to. Could be either a year or 'ALL'"
          },
          "shopUrl": {
            "type": "string",
            "description": "url of the article within the Zalando webshop",
            "format": "uri"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "units": {
            "minItems": 1,
            "type": "array",
            "description": "price of the article",
            "items": {
              "$ref": "#/components/schemas/Article-Unit"
            }
          }
        },
        "description": "A single article"
      },
      "Article-Attribute": {
        "required": [
          "name",
          "values"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the article attribute"
          },
          "values": {
            "minItems": 1,
            "type": "array",
            "description": "value of the article attribute",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Zalando API Article Attribute Schema"
      },
      "Article-Image": {
        "required": [
          "largeHdUrl",
          "largeUrl",
          "mediumHdUrl",
          "mediumUrl",
          "orderNumber",
          "smallHdUrl",
          "smallUrl",
          "thumbnailHdUrl",
          "type"
        ],
        "type": "object",
        "properties": {
          "largeHdUrl": {
            "type": "string",
            "description": "large HD image of the article",
            "format": "uri"
          },
          "largeUrl": {
            "type": "string",
            "description": "large image of the article",
            "format": "uri"
          },
          "mediumHdUrl": {
            "type": "string",
            "description": "medium HD image of the article",
            "format": "uri"
          },
          "mediumUrl": {
            "type": "string",
            "description": "medium image of the article",
            "format": "uri"
          },
          "orderNumber": {
            "type": "integer",
            "description": "sequence of the article images"
          },
          "smallHdUrl": {
            "type": "string",
            "description": "small HD image of the article",
            "format": "uri"
          },
          "smallUrl": {
            "type": "string",
            "description": "small image of the article",
            "format": "uri"
          },
          "thumbnailHdUrl": {
            "type": "string",
            "description": "thumbnail HD url of the article images",
            "format": "uri"
          },
          "type": {
            "type": "string",
            "description": "model or non model type article images"
          }
        },
        "description": "Zalando API Article Image Schema"
      },
      "Article-Media": {
        "required": [
          "images"
        ],
        "type": "object",
        "properties": {
          "images": {
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Article-Image"
            }
          }
        },
        "description": "Zalando API Article Media Schema"
      },
      "Article-Price": {
        "required": [
          "currency",
          "formatted",
          "value"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": ""
          },
          "formatted": {
            "type": "string",
            "description": ""
          },
          "value": {
            "type": "number",
            "description": ""
          }
        },
        "description": "Zalando API Article Price Schema"
      },
      "Article-Review": {
        "required": [
          "articleId",
          "articleModelId",
          "created",
          "description",
          "helpfulCount",
          "language",
          "rating",
          "reviewId",
          "title",
          "unhelpfulCount"
        ],
        "type": "object",
        "properties": {
          "articleId": {
            "type": "string"
          },
          "articleModelId": {
            "type": "string"
          },
          "articleSizeRatings": {
            "type": "object",
            "properties": {
              "BOOTLEG_WIDTH": {
                "type": "integer"
              },
              "CHEST": {
                "type": "integer"
              },
              "CHEST_GIRTH": {
                "type": "integer"
              },
              "COLLAR_SIZE": {
                "type": "integer"
              },
              "CUP_SIZE": {
                "type": "integer"
              },
              "HIPS_OR_REAR": {
                "type": "integer"
              },
              "LEG_FIT": {
                "type": "integer"
              },
              "LENGTH": {
                "type": "integer"
              },
              "OVERALL": {
                "type": "integer"
              },
              "SHOE_WIDTH": {
                "type": "integer"
              },
              "SHOULDERS": {
                "type": "integer"
              },
              "SLEEVES": {
                "type": "integer"
              }
            },
            "description": ""
          },
          "created": {
            "type": "string",
            "description": "article review created date and time",
            "format": "date-time"
          },
          "customerCity": {
            "type": "string",
            "description": "customer city in the article review"
          },
          "customerCountry": {
            "type": "string",
            "description": "customer country in the article review"
          },
          "customerNickname": {
            "type": "string",
            "description": "Customer short name in the article review"
          },
          "description": {
            "type": "string",
            "description": "description of the article review"
          },
          "helpfulCount": {
            "type": "integer",
            "description": "customer review helpful count of the article"
          },
          "language": {
            "type": "string",
            "description": "language in the article review"
          },
          "rating": {
            "type": "integer",
            "description": "customer rating of the article"
          },
          "recommend": {
            "type": "boolean",
            "description": "customer recommend to the article"
          },
          "reviewId": {
            "type": "string",
            "description": "unique article review id"
          },
          "title": {
            "type": "string",
            "description": "title in the article review"
          },
          "unhelpfulCount": {
            "type": "integer",
            "description": "customer review unhelpful count of the article"
          }
        },
        "description": "Zalando API Article Review Schema"
      },
      "Article-Reviews": {
        "description": "Zalando API Paged Article Reviews Schema",
        "allOf": [
          {
            "$ref": "#/components/schemas/Page"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Article-Review"
                }
              }
            }
          }
        ]
      },
      "Article-Reviews-Summaries": {
        "description": "Zalando API Paged Article Reviews Summaries Schema",
        "allOf": [
          {
            "$ref": "#/components/schemas/Page"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Article-Reviews-Summary"
                }
              }
            }
          }
        ]
      },
      "Article-Reviews-Summary": {
        "required": [
          "articleModelId",
          "averageStarRating",
          "numberOfUserPositiveRecommendations",
          "numberOfUserRecommendations",
          "numberOfUserReviews",
          "starRatingDistribution"
        ],
        "type": "object",
        "properties": {
          "articleModelId": {
            "type": "string"
          },
          "articleSizeRatings": {
            "type": "object",
            "properties": {
              "BOOTLEG_WIDTH": {
                "type": "number"
              },
              "CHEST": {
                "type": "number"
              },
              "CHEST_GIRTH": {
                "type": "number"
              },
              "COLLAR_SIZE": {
                "type": "number"
              },
              "CUP_SIZE": {
                "type": "number"
              },
              "HIPS_OR_REAR": {
                "type": "number"
              },
              "LEG_FIT": {
                "type": "number"
              },
              "LENGTH": {
                "type": "number"
              },
              "OVERALL": {
                "type": "number"
              },
              "SHOE_WIDTH": {
                "type": "number"
              },
              "SHOULDERS": {
                "type": "number"
              },
              "SLEEVES": {
                "type": "number"
              }
            },
            "description": "size rating of the article"
          },
          "averageStarRating": {
            "type": "number",
            "description": "average star rating of the article"
          },
          "numberOfUserPositiveRecommendations": {
            "type": "integer",
            "description": "number of positive recommendations to the article"
          },
          "numberOfUserRecommendations": {
            "type": "integer",
            "description": "number of users recommended to the article"
          },
          "numberOfUserReviews": {
            "type": "integer",
            "description": "number of user reviews of the article"
          },
          "starRatingDistribution": {
            "required": [
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "type": "object",
            "properties": {
              "1": {
                "type": "integer"
              },
              "2": {
                "type": "integer"
              },
              "3": {
                "type": "integer"
              },
              "4": {
                "type": "integer"
              },
              "5": {
                "type": "integer"
              }
            },
            "description": "start rating distribution of the article"
          }
        },
        "description": "Zalando API Article Reviews Summary Schema"
      },
      "Article-Unit": {
        "required": [
          "available",
          "id",
          "originalPrice",
          "price",
          "size",
          "stock"
        ],
        "type": "object",
        "properties": {
          "available": {
            "type": "boolean",
            "description": "availability of the article"
          },
          "id": {
            "type": "string",
            "description": "article id (sku)"
          },
          "originalPrice": {
            "$ref": "#/components/schemas/Article-Price"
          },
          "partnerId": {
            "type": "string",
            "description": "partner id (vendor id) of the article"
          },
          "price": {
            "$ref": "#/components/schemas/Article-Price"
          },
          "size": {
            "type": "string",
            "description": "article size"
          },
          "stock": {
            "type": "integer",
            "description": "stock of the article"
          }
        },
        "description": "Zalando API Article Unit Schema"
      },
      "Article-Units": {
        "minItems": 1,
        "type": "array",
        "description": "Zalando API Article Units Schema",
        "items": {
          "$ref": "#/components/schemas/Article-Unit"
        }
      },
      "Articles": {
        "description": "A simple container object that carries paging information as well as a list of articles on the `content` property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Page"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        ]
      },
      "Brand": {
        "required": [
          "key",
          "name",
          "shopUrl"
        ],
        "type": "object",
        "properties": {
          "brandFamily": {
            "$ref": "#/components/schemas/BrandFamily"
          },
          "key": {
            "type": "string",
            "description": "The unique key for a brand"
          },
          "logoLargeUrl": {
            "type": "string",
            "description": "The url of the large brand logo within the Zalando web shop",
            "format": "uri"
          },
          "logoUrl": {
            "type": "string",
            "description": "The url of the brand logo within the Zalando web shop",
            "format": "uri"
          },
          "name": {
            "type": "string",
            "description": "Name of the brand"
          },
          "shopUrl": {
            "type": "string",
            "description": "The url of the brand within the Zalando web shop",
            "format": "uri"
          }
        },
        "description": "Zalando API Brand Schema"
      },
      "BrandFamily": {
        "required": [
          "key",
          "name",
          "shopUrl"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The unique key for a brandFamily"
          },
          "name": {
            "type": "string",
            "description": "Name of the brandFamily"
          },
          "shopUrl": {
            "type": "string",
            "description": "The url of the brandFamily within the Zalando web shop",
            "format": "uri"
          }
        },
        "description": "Zalando API BrandFamily Schema"
      },
      "Brands": {
        "description": "Zalando API Paged Brands Schema",
        "allOf": [
          {
            "$ref": "#/components/schemas/Page"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          }
        ]
      },
      "Categories": {
        "description": "Zalando API Paged Categories Schema",
        "allOf": [
          {
            "$ref": "#/components/schemas/Page"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        ]
      },
      "Category": {
        "required": [
          "childKeys",
          "key",
          "name",
          "suggestedFilters",
          "targetGroup"
        ],
        "type": "object",
        "properties": {
          "childKeys": {
            "minItems": 0,
            "type": "array",
            "description": "The list of keys of the child categories",
            "items": {
              "type": "string"
            }
          },
          "cid": {
            "type": "integer",
            "description": "The numeric ID for a category."
          },
          "hidden": {
            "type": "boolean",
            "description": "The category is hidden and not shown on the Zalando web shop"
          },
          "key": {
            "type": "string",
            "description": "The unique key for a category"
          },
          "name": {
            "type": "string",
            "description": "Name of the category"
          },
          "outlet": {
            "type": "boolean",
            "description": "Containing articles are from last seasons"
          },
          "parentKey": {
            "type": "string",
            "description": "The key of the parent category"
          },
          "suggestedFilters": {
            "minItems": 1,
            "type": "array",
            "description": "list of filter names that are reasonable to use within this category",
            "items": {
              "type": "string"
            }
          },
          "targetGroup": {
            "type": "string",
            "description": "The target group of the articles from this category",
            "enum": [
              "ALL",
              "WOMEN",
              "MEN",
              "KIDS"
            ]
          },
          "type": {
            "type": "string",
            "description": "The type of the category."
          }
        },
        "description": "Zalando API Category Schema"
      },
      "Domain": {
        "required": [
          "countryCode",
          "currencyCode",
          "languageCode",
          "rootCategoryKey",
          "shopUrl",
          "taxRate"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "domain country code"
          },
          "currencyCode": {
            "type": "string",
            "description": "domain currency code"
          },
          "languageCode": {
            "type": "string",
            "description": "domain language"
          },
          "rootCategoryKey": {
            "type": "string",
            "description": "domain root category"
          },
          "shopUrl": {
            "type": "string",
            "description": "domain specific url"
          },
          "taxRate": {
            "maximum": 1,
            "exclusiveMaximum": true,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "domain tax rate"
          }
        },
        "description": "Zalando API Domain Schema"
      },
      "ErrorDetail": {
        "type": "object",
        "properties": {
          "invalidName": {
            "type": "boolean"
          },
          "invalidValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ErrorMessage": {
        "required": [
          "message",
          "status"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          }
        }
      },
      "Facet": {
        "required": [
          "facets",
          "filter"
        ],
        "type": "object",
        "properties": {
          "facets": {
            "minItems": 1,
            "type": "array",
            "description": "list of the calculated article counts for each filter value",
            "items": {
              "$ref": "#/components/schemas/Facet-Value"
            }
          },
          "filter": {
            "type": "string"
          }
        },
        "description": "Zalando API Facet Schema"
      },
      "Facet-Value": {
        "required": [
          "count",
          "displayName",
          "key"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "number of articles matching this filter value"
          },
          "displayName": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        },
        "description": "Zalando API FacetValue Schema"
      },
      "Facets": {
        "minItems": 0,
        "type": "array",
        "description": "Zalando API Facets Schema",
        "items": {
          "$ref": "#/components/schemas/Facet"
        }
      },
      "Filter": {
        "required": [
          "multiValue",
          "name",
          "type",
          "values"
        ],
        "type": "object",
        "properties": {
          "multiValue": {
            "type": "boolean",
            "description": "can this filter be used multiple times with different values in one search request"
          },
          "name": {
            "type": "string",
            "description": "The unique name for a filter"
          },
          "type": {
            "type": "string",
            "description": "filter enum types",
            "enum": [
              "SKU",
              "KEY",
              "ENUM",
              "STRING",
              "RANGE"
            ]
          },
          "values": {
            "minItems": 0,
            "type": "array",
            "description": "only if type is 'enum' this list contains all possible filter values",
            "items": {
              "$ref": "#/components/schemas/Filter-Value"
            }
          }
        },
        "description": "Zalando API Filter Schema"
      },
      "Filter-Value": {
        "required": [
          "displayName",
          "key"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "translated display name"
          },
          "key": {
            "type": "string",
            "description": "The key for a filterValue. Only unique within one filter"
          }
        },
        "description": "Zalando API FilterValue Schema"
      },
      "Filters": {
        "minItems": 0,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Filter"
        }
      },
      "Page": {
        "required": [
          "content",
          "page",
          "size",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "minItems": 0,
            "type": "array",
            "description": "page content",
            "items": {
              "type": "object"
            }
          },
          "page": {
            "type": "integer",
            "description": "page number"
          },
          "size": {
            "type": "integer",
            "description": "total number of elements in a page"
          },
          "totalElements": {
            "type": "integer",
            "description": "total elements in the response"
          },
          "totalPages": {
            "type": "integer",
            "description": "total number of pages in the response"
          }
        },
        "description": "wrapper object for paged responses",
        "discriminator": {
          "propertyName": "content"
        }
      },
      "Recommendations": {
        "minItems": 0,
        "type": "array",
        "description": "Zalando API Recommendations Schema",
        "items": {
          "$ref": "#/components/schemas/Recommendations-Article"
        }
      },
      "Recommendations-Article": {
        "required": [
          "id",
          "media",
          "modelId",
          "name",
          "shopUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Article-Media"
          },
          "modelId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shopUrl": {
            "type": "string"
          }
        },
        "description": "Zalando API Recommendation Article Schema"
      }
    },
    "parameters": {
      "acceptLanguage": {
        "name": "Accept-Language",
        "in": "header",
        "description": "Specify which Shop to use.\n\nA standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German\nshop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.\n\nThe shop choosen will e.g. define the currency used for prices as well as the language for product names and\ndescriptions. Furthermore it will impact which articles are available as they might differ between countries.",
        "schema": {
          "type": "string",
          "enum": [
            "da-DK",
            "de-AT",
            "de-CH",
            "de-DE",
            "en-GB",
            "es-ES",
            "fi-FI",
            "fr-BE",
            "fr-CH",
            "fr-FR",
            "it-IT",
            "nl-BE",
            "nl-NL",
            "no-NO",
            "pl-PL",
            "sv-SE"
          ]
        }
      },
      "activationDate": {
        "name": "activationDate",
        "in": "query",
        "description": "period or time the articles are activated for selling in the shop",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "thisWeek",
              "lastWeek",
              "lastMonth"
            ]
          }
        }
      },
      "ageGroup": {
        "name": "ageGroup",
        "in": "query",
        "description": "filters by age group (eg: kids)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "babies",
              "kids",
              "teen",
              "adult"
            ]
          }
        }
      },
      "articleId": {
        "name": "articleId",
        "in": "query",
        "description": "The `articleIds` to use use for filtering.\n\nOne or more `articleIds` might be used as a filter criteria. Submit multiple `articleId` request parameters for\nmore than one to be used. They will be treated as `OR` criteria.",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "articleModelId": {
        "name": "articleModelId",
        "in": "query",
        "description": "filters by article ModelId",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "articleReviewSort": {
        "name": "sort",
        "in": "query",
        "description": "articles are sorted on reviews provided by customers (eg: best)",
        "schema": {
          "type": "string",
          "default": "newest",
          "enum": [
            "newest",
            "best",
            "worst",
            "most_helpful"
          ]
        }
      },
      "articleUnitId": {
        "name": "articleUnitId",
        "in": "query",
        "description": "filters by article's unit id",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "assortmentArea": {
        "name": "assortmentArea",
        "in": "query",
        "description": "filters by classification of articles (eg: maternity) ",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "standard",
              "maternity",
              "plusSize",
              "petite"
            ]
          }
        }
      },
      "brand": {
        "name": "brand",
        "in": "query",
        "description": "filters by brand key given by user (eg: SA5)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "brandfamily": {
        "name": "brandfamily",
        "in": "query",
        "description": "filters by brand family key (eg: nike) ",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "category": {
        "name": "category",
        "in": "query",
        "description": "filters by category (eg: Socks, Rain Coats)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "color": {
        "name": "color",
        "in": "query",
        "description": "filters by color (eg: red, blue)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "black",
              "brown",
              "beige",
              "gray",
              "white",
              "blue",
              "petrol",
              "turquoise",
              "green",
              "olive",
              "yellow",
              "orange",
              "red",
              "pink",
              "purple",
              "gold",
              "silver",
              "multicolored"
            ]
          }
        }
      },
      "den": {
        "name": "den",
        "in": "query",
        "description": "filters by den ",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "den15",
              "den20",
              "den40",
              "den60",
              "den80",
              "den100",
              "den200",
              "den120",
              "den12",
              "den50"
            ]
          }
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.\n\nExample: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "filling": {
        "name": "filling",
        "in": "query",
        "description": "filters by different kinds of garment filling materials (eg: satin, wolle)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "angora",
              "baumwolle",
              "daunen",
              "fell",
              "fleece",
              "frottee",
              "kaschmir",
              "lammfell",
              "leder",
              "lederimitat",
              "merinowolle",
              "microfaser",
              "mohair",
              "satin",
              "schurwolle",
              "seide",
              "sonstige",
              "textil",
              "warm",
              "wolle"
            ]
          }
        }
      },
      "fullText": {
        "name": "fullText",
        "in": "query",
        "description": "filters by text (eg: search by 'as' gives result with articles of brand Sass)",
        "schema": {
          "type": "string"
        }
      },
      "gender": {
        "name": "gender",
        "in": "query",
        "description": "filters by gender",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          }
        }
      },
      "heelForm": {
        "name": "heelForm",
        "in": "query",
        "description": "filters by heel form (eg: flat)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "block",
              "flat",
              "wedge",
              "penny",
              "funnel",
              "plateau",
              "plateauBoots",
              "wedgeHidden",
              "plateauHidden",
              "plateauHeels"
            ]
          }
        }
      },
      "heelHeight": {
        "name": "heelHeight",
        "in": "query",
        "description": "filters by height of the heel size or length (eg: xs)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "xs",
              "s",
              "m"
            ]
          }
        }
      },
      "length": {
        "name": "length",
        "in": "query",
        "description": "filters by garments length (eg: 3/4 length, knee-length)",
        "schema": {
          "type": "string"
        }
      },
      "maxStarRating": {
        "name": "maxStarRating",
        "in": "query",
        "description": "To get reviews with maximum star rating.",
        "schema": {
          "type": "string"
        }
      },
      "minStarRating": {
        "name": "minStarRating",
        "in": "query",
        "description": "To get reviews with minimum star rating.",
        "schema": {
          "type": "string"
        }
      },
      "occasion": {
        "name": "occasion",
        "in": "query",
        "description": "filters by type of occasion (eg: party, business)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "business",
              "octoberFest",
              "loungeWear",
              "evening",
              "party",
              "leisure"
            ]
          }
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "to request with required page number or pagination",
        "schema": {
          "type": "string"
        }
      },
      "pageSize": {
        "name": "pageSize",
        "in": "query",
        "description": "to request with required page size in a page",
        "schema": {
          "type": "string"
        }
      },
      "pattern": {
        "name": "pattern",
        "in": "query",
        "description": "filters by pattern on the garments (eg: animal print, plain)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "animalPrint",
              "checkered",
              "colored",
              "floral",
              "polkaDot",
              "striped",
              "paisley",
              "plain",
              "print",
              "burnout",
              "herringBone",
              "camouflage",
              "flecked",
              "pinstripe",
              "gradient",
              "photoPrint"
            ]
          }
        }
      },
      "price": {
        "name": "price",
        "in": "query",
        "description": "filters all articles in price range (eg: 9-90)",
        "schema": {
          "type": "string"
        }
      },
      "sale": {
        "name": "sale",
        "in": "query",
        "description": "filters discounted articles marked as sale",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "sale"
            ]
          }
        }
      },
      "season": {
        "name": "season",
        "in": "query",
        "description": "filters by season (Autumn/Winter or Spring/Summer)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "winter",
              "summer"
            ]
          }
        }
      },
      "shaftHeight": {
        "name": "shaftHeight",
        "in": "query",
        "description": "filters by shaft height (eg: s, xs)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "xs",
              "s",
              "m",
              "l"
            ]
          }
        }
      },
      "shaftWidth": {
        "name": "shaftWidth",
        "in": "query",
        "description": "filters by shaft width (eg: s, l)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "s",
              "m",
              "l"
            ]
          }
        }
      },
      "shirtCollar": {
        "name": "shirtCollar",
        "in": "query",
        "description": "filters by shirt collar styles (eg: low V neck, lined collar)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "lapelCollar",
              "mandarinCollar",
              "hood",
              "poloNeck",
              "poloShirt",
              "cowlNeck",
              "roundNeck",
              "scarfCollar",
              "boatNeck",
              "vNeck",
              "buttonDown",
              "turnDownCollar",
              "highCollar",
              "linedCollar",
              "shirtCollar",
              "cutawayCollar",
              "doubleCollar",
              "peterPanCollar",
              "kentCollar",
              "cupShapedCollar",
              "contrastCollar",
              "maoCollar",
              "wingCollar",
              "tabCollar",
              "volantCollar",
              "shawlCollar",
              "envelope",
              "lowVNeck",
              "cacheCeour",
              "lowRoundNeck",
              "backless",
              "henley",
              "squareNeck",
              "offTheShoulder"
            ]
          }
        }
      },
      "shoeFastener": {
        "name": "shoeFastener",
        "in": "query",
        "description": "filters by shoe fastener types (eg: buckle, lacing)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "buckle",
              "belt",
              "lacing",
              "open",
              "zipper",
              "velcro"
            ]
          }
        }
      },
      "shoeToecap": {
        "name": "shoeToecap",
        "in": "query",
        "description": "filters by shoe toe cap variants (eg: pointed, square)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "round",
              "pointed",
              "open",
              "square"
            ]
          }
        }
      },
      "shopArea": {
        "name": "shopArea",
        "in": "query",
        "description": "filters by classification of articles",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "shop",
              "sale"
            ]
          }
        }
      },
      "size": {
        "name": "size",
        "in": "query",
        "description": "filters by size",
        "schema": {
          "type": "string"
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "description": "sorting order (eg: popularity)",
        "schema": {
          "type": "string",
          "enum": [
            "popularity",
            "activationdate",
            "pricedesc",
            "priceasc",
            "sale"
          ]
        }
      },
      "sports": {
        "name": "sports",
        "in": "query",
        "description": "filters by different sport activities (eg: football)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "outdoor",
              "skiSnow",
              "running",
              "training",
              "football",
              "handball",
              "basketball",
              "volleyball",
              "golf",
              "tennis",
              "beach",
              "skate",
              "riding",
              "cycling",
              "sailing",
              "badminton",
              "dancing",
              "snowboard",
              "swimming"
            ]
          }
        }
      },
      "technology": {
        "name": "technology",
        "in": "query",
        "description": "filters by technology used to produce the articles",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "clima365",
              "climacool",
              "climalite",
              "climaproof",
              "climawarm",
              "driFit",
              "flywire",
              "formotion",
              "omniHeat",
              "polartec",
              "primaloft",
              "staywarm",
              "techfit",
              "thinsulate",
              "venturi",
              "h2no",
              "dermizax",
              "performanceShell",
              "softShell",
              "windstopper",
              "proShell",
              "hydratic",
              "pacliteShell",
              "activeShell",
              "goreTex",
              "hyvent",
              "texapore",
              "precip"
            ]
          }
        }
      },
      "trouserRise": {
        "name": "trouserRise",
        "in": "query",
        "description": "filters by trouser rise",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "high",
              "medium",
              "low"
            ]
          }
        }
      },
      "upperMaterial": {
        "name": "upperMaterial",
        "in": "query",
        "description": "filters by different type of upper material used on garments (eg: lace)",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "batiste",
              "caoutchouc",
              "cashmere",
              "damask",
              "down",
              "feathers",
              "felt",
              "flanelette",
              "flannel",
              "fleece",
              "imitationLeather",
              "jacquard",
              "jersey",
              "leather",
              "linen",
              "linon",
              "mesh",
              "microfiber",
              "mohair",
              "other",
              "percale",
              "polyester",
              "renforce",
              "satin",
              "seersucker",
              "silk",
              "synthetic",
              "textile",
              "towelling",
              "varnish",
              "velours",
              "viscose",
              "wool",
              "cord",
              "denim",
              "rib",
              "braided",
              "crocheted",
              "hardshell",
              "softshell",
              "lace",
              "sweat"
            ]
          }
        }
      },
      "volume": {
        "name": "volume",
        "in": "query",
        "description": "filters by volume",
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "smallest",
              "small",
              "medium",
              "large",
              "largest"
            ]
          }
        }
      }
    }
  }
}