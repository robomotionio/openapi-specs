{
  "openapi": "3.0.0",
  "info": {
    "title": "QuickBooks Online V3API Collections - OAuth2",
    "description": "The QuickBooks Online Accounting API is a RESTful API that is used to access QuickBooks companies.\n\nDocs Ref - https://developer.intuit.com/docs/api/accounting\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "version": "1.0",
    "x-logo": {
      "url": "https://quickbooks.intuit.com/uk2/fr/fr-marketing/icons/icon-192x192.png"
    }
  },
  "servers": [
    {
      "url": "https://quickbooks.api.intuit.com/v3/company/{companyid}",
      "variables": {
        "companyid": {
          "default": "DefaultParameterValue"
        }
      }
    },
    {
      "url": "https://sandbox-quickbooks.api.intuit.com/v3/company/{companyid}",
      "variables": {
        "companyid": {
          "default": "DefaultParameterValue"
        }
      }
    },
    {
      "url": "https://quickbooks.api.intuit.com/v3/company"
    }
  ],
  "paths": {
    "/account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Account-Create",
        "description": "Create a new Account",
        "operationId": "Account-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account-Create-Request"
              },
              "example": {
                "AccountType": "Accounts Receivable",
                "Name": "AR4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/account/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Account-ReadById",
        "description": "Get the Account which has accountId as 1",
        "operationId": "Account-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/query": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Account-ReadAll",
        "description": "Get all customer records using generic 'Query' endpoint.\nMethod - GET",
        "operationId": "Account-ReadAll",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Select * from Account STARTPOSITION 1 MAXRESULTS 5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/attachable": {
      "post": {
        "tags": [
          "Attachable"
        ],
        "summary": "Attachable-Create",
        "description": "Create an attachable object\nConent-Type:application/json\nMethod - POST",
        "operationId": "Attachable-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachable-Create-Request"
              },
              "example": {
                "AttachableRef": [
                  {
                    "EntityRef": {
                      "value": "130",
                      "type": "Invoice"
                    },
                    "IncludeOnSend": "false"
                  }
                ],
                "Note": "This is an attached note."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/attachable/{id}": {
      "get": {
        "tags": [
          "Attachable"
        ],
        "summary": "Attachable-ReadById",
        "description": "Retrieve an attachable object by Id\nAccept:application/json\nMethod - GET",
        "operationId": "Attachable-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/upload": {
      "post": {
        "tags": [
          "Attachable"
        ],
        "summary": "Upload-Attachments",
        "description": "Uploading and linking new attachments\n\nhttps://developer.intuit.com/docs/0100_quickbooks_online/0200_dev_guides/accounting/attachments#Uploading_and_linking_new_attachments\n\nIf the attachment is not in the Attachment list already, it's possible to upload it and link it to the object in one multipart operation.\n\nOperation:      POST https://quickbooks.api.intuit.com/v3/company/companyID/upload\nContent type: multipart/form-data\n\nRequest body\n\nThe following sample code shows the multipart request body for uploading a file and its supporting Attachable metatdata object, with the result of it being both added to the Attachment list and added to the object.\n\nThe Attachable object accompanying this request supplies metadata and object information to which the attachment is linked. \nEach part of the multipart request is separated by a boundary.  In the sample below, the string  --YOjcLaTlykb6OxfYJx4O07j1MweeMFem is used.  You can use any random and unique string.\nThe file to be uploaded and its Attachable object are paired together via the name parameter in the part header for each one.\nThe name parameter for the file part is of the form file_content_nn, where nn is a unique index number among the set of files being uploaded.\nThe name parameter for the Attachable object is of the form file_metadata_nn, where nn corresponds to the file index number used with the content .\nThe file or files are stored in the Attachment list with the name specified by the filename parameter.\nIf the data supplied with the Attachable object cannot be validated, an error is returned and the file is not uploaded.",
        "operationId": "Upload-Attachments",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data;boundary=37a1965f87babd849241a530ad71e169": {
              "schema": {
                "type": "string",
                "example": "--37a1965f87babd849241a530ad71e169\nContent-Disposition: form-data; name=\"file_metadata_0\"\nContent-Type: application/json; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\n{\n    \"AttachableRef\": [\n    {\n      \"EntityRef\": {\n        \"type\": \"Invoice\",\n        \"value\": \"173\"\n      }\n    }\n  ],\n   \"FileName\": \"receipt_nov15.jpg\",\n    \"ContentType\": \"image/jpg\"\n  }\n--37a1965f87babd849241a530ad71e169\nContent-Disposition: form-data; name=\"file_content_0\"; filename=\"398535758.jpg\"\nContent-Type: image/jpeg\nContent-Transfer-Encoding: base64\n\n/9j/4AAQSkZJRgABAQEAlgCWAAD/4ge4SUNDX1BST0ZJTEUAAQEAAAeoYXBwbAIgAABtbnRyUkdC\nIFhZWiAH2QACABkACwAaAAthY3NwQVBQTAAAAABhcHBsAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAA\nAADTLWFwcGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtk\nZXNjAAABCAAAAG9kc2NtAAABeAAABWxjcHJ0AAAG5AAAADh3dHB0AAAHHAAAABRyWFlaAAAHMAAA\nABRnWFlaAAAHRAAAABRiWFlaAAAHWAAAABRyVFJDAAAHbAAAAA5jaGFkAAAHfAAAACxiVFJDAAAH\nbAAAAA5nVFJDAAAHbAAAAA5kZXNjAAAAAAAAABRHZW5lcmljIFJHQiBQcm9maWxlAAAAAAAAAAAA\nAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAbWx1YwAAAAAAAAAeAAAADHNrU0sAAAAoAAABeGhySFIAAAAoAAABoGNh\nRVMAAAAkAAAByHB0QlIAAAAmAAAB7HVrVUEAAAAqAAACEmZyRlUAAAAoAAACPHpoVFcAAAAWAAAC\nZGl0SVQAAAAoAAACem5iTk8AAAAmAAAComtvS1IAAAAWAAACyGNzQ1oAAAAiAAAC3mhlSUwAAAAe\nAAADAGRlREUAAAAsAAADHmh1SFUAAAAoAAADSnN2U0UAAAAmAAAConpoQ04AAAAWAAADcmphSlAA\nAAAaAAADiHJvUk8AAAAkAAADomVsR1IAAAAiAAADxnB0UE8AAAAmAAAD6G5sTkwAAAAoAAAEDmVz\nRVMAAAAmAAAD6HRoVEgAAAAkAAAENnRyVFIAAAAiAAAEWmZpRkkAAAAoAAAEfHBsUEwAAAAsAAAE\npHJ1UlUAAAAiAAAE0GFyRUcAAAAmAAAE8mVuVVMAAAAmAAAFGGRhREsAAAAuAAAFPgBWAWEAZQBv\nAGIAZQBjAG4A/QAgAFIARwBCACAAcAByAG8AZgBpAGwARwBlAG4AZQByAGkBDQBrAGkAIABSAEcA\nQgAgAHAAcgBvAGYAaQBsAFAAZQByAGYAaQBsACAAUgBHAEIAIABnAGUAbgDoAHIAaQBjAFAAZQBy\nAGYAaQBsACAAUgBHAEIAIABHAGUAbgDpAHIAaQBjAG8EFwQwBDMEMAQ7BEwEPQQ4BDkAIAQ/BEAE\nPgREBDAEOQQ7ACAAUgBHAEIAUAByAG8AZgBpAGwAIABnAOkAbgDpAHIAaQBxAHUAZQAgAFIAVgBC\nkBp1KAAgAFIARwBCACCCcl9pY8+P8ABQAHIAbwBmAGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIA\naQBjAG8ARwBlAG4AZQByAGkAcwBrACAAUgBHAEIALQBwAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg\n1QS4XNMMx3wATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAA\nUgBHAEIAIAXbBdwF3AXZAEEAbABsAGcAZQBtAGUAaQBuAGUAcwAgAFIARwBCAC0AUAByAG8AZgBp\nAGwAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYAaQBsZm6QGgAgAFIARwBCACBj\nz4/wZYdO9k4AgiwAIABSAEcAQgAgMNcw7TDVMKEwpDDrAFAAcgBvAGYAaQBsACAAUgBHAEIAIABn\nAGUAbgBlAHIAaQBjA5MDtQO9A7kDugPMACADwAPBA78DxgOvA7sAIABSAEcAQgBQAGUAcgBmAGkA\nbAAgAFIARwBCACAAZwBlAG4A6QByAGkAYwBvAEEAbABnAGUAbQBlAGUAbgAgAFIARwBCAC0AcABy\nAG8AZgBpAGUAbA5CDhsOIw5EDh8OJQ5MACAAUgBHAEIAIA4XDjEOSA4nDkQOGwBHAGUAbgBlAGwA\nIABSAEcAQgAgAFAAcgBvAGYAaQBsAGkAWQBsAGUAaQBuAGUAbgAgAFIARwBCAC0AcAByAG8AZgBp\nAGkAbABpAFUAbgBpAHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE\nOAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZBACAAUgBHAEIAIAYn\nBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAAUAByAG8AZgBpAGwAZQBHAGUAbgBlAHIA\nZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGV0ZXh0AAAAAENvcHlyaWdodCAyMDA3\nIEFwcGxlIEluYy4sIGFsbCByaWdodHMgcmVzZXJ2ZWQuAFhZWiAAAAAAAADzUgABAAAAARbPWFla\nIAAAAAAAAHRNAAA97gAAA9BYWVogAAAAAAAAWnUAAKxzAAAXNFhZWiAAAAAAAAAoGgAAFZ8AALg2\nY3VydgAAAAAAAAABAc0AAHNmMzIAAAAAAAEMQgAABd7///MmAAAHkgAA/ZH///ui///9owAAA9wA\nAMBs/+EAgEV4aWYAAE1NACoAAAAIAAUBEgADAAAAAQABAAABGgAFAAAAAQAAAEoBGwAFAAAAAQAA\nAFIBKAADAAAAAQACAACHaQAEAAAAAQAAAFoAAAAAAAA6mQAAAGQAADqZAAAAZAACoAIABAAAAAEA\nAAAuoAMABAAAAAEAAAAUAAAAAP/bAEMAAgEBAgEBAgIBAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYG\nBgcICwkHCAoIBgYJDQkKCwsMDAwHCQ0ODQwOCwwMC//bAEMBAgICAwIDBQMDBQsIBggLCwsLCwsL\nCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLC//AABEIABQALgMBIgAC\nEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAA\nAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4\nOTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaan\nqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQAD\nAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEG\nEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpT\nVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4\nubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APkb41eO\nNYtfi94oSDVdRVF1a74FzJgfvn96j+Kmj+O/gj/wj3/C159Q0MeK9Et/EekmfU1IvdPuN/kzrtkO\n0N5b/K2GGOQKzvjnz8YPFX/YVvP/AEc9fePiv9qXwn4K+Eut674A8S+Br3xl4e/Zd8MaZ4dF0LPU\nHtvENte3TtbwwThla8h3RuYipI+UspFfueIryw6p8kOa+n5Ja62310Z+V4XDRxU5RlPl8z4O0S/8\nYeJfB+t+IfD1xrN7oPhpbZtV1GG7ZrXTxczeRb+bJvwDLLlEAyWYHA4OK/hTxP4i8ceKdI0Xwrq9\n1eanr13FY6fANS2fappZFjRVdnCgF2UFiQozkkDmv0r+KX7VPhO/8JftJaX8I/HPwu0qXxf4c8C+\nJZIA1hDb63cpldfjtwI2WS7NvFGnkINyyMpXY7Fqq/GDUvhB4d+IXxP17TPHvwc1nTfiB8a/h/4o\n0O10zVbW4lstChubNbxpoto+zxARztLHyAgZnADc8NPN5ydpUbXtbfqob6dOZ9vha8zu/smElpXX\nW+3eW2vku+5+fXjvw38RPhlZm58eRa7ptp/a97oCXT3m+3nv7Jtt3BDKkhWUwtwzISgPG4mux/ZD\n8Y6tefEO++06nqL7dOkxm6k4/exf7VfRX/BRD9oTTfiz+xBaaD8NPGfgK803wz8XvFf2nRLOWzjv\n30+XU5pNKntIUQSPbeU+8yxkKUK7i+AB8x/sc/8AJQ7/AP7Bz/8Ao2KuqlWnicLOdSKTu1b0em/d\nanFVpRw+IjCnK60d/X0O/wDil+zfoWofE7xJNcXOqb31W7JxJHj/AF7/APTOsH/hmPw//wA/Gqf9\n/I//AI3RRXRTk+VamM4rmegv/DMfh/H/AB8ap/38j/8AjdB/Zj8Pn/l41Trn/WR9f+/dFFVzPuRZ\nXEP7Mfh89bjVOP8AppFx/wCQ69I/Zf8A2d9F0z4hXP2S61Qb9Olzl4z0lh/6Z+9FFY4mT9lLU1oJ\nc6P/2Q==\n\n--37a1965f87babd849241a530ad71e169--"
              },
              "example": "--37a1965f87babd849241a530ad71e169\nContent-Disposition: form-data; name=\"file_metadata_0\"\nContent-Type: application/json; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\n{\n    \"AttachableRef\": [\n    {\n      \"EntityRef\": {\n        \"type\": \"Invoice\",\n        \"value\": \"173\"\n      }\n    }\n  ],\n   \"FileName\": \"receipt_nov15.jpg\",\n    \"ContentType\": \"image/jpg\"\n  }\n--37a1965f87babd849241a530ad71e169\nContent-Disposition: form-data; name=\"file_content_0\"; filename=\"398535758.jpg\"\nContent-Type: image/jpeg\nContent-Transfer-Encoding: base64\n\n/9j/4AAQSkZJRgABAQEAlgCWAAD/4ge4SUNDX1BST0ZJTEUAAQEAAAeoYXBwbAIgAABtbnRyUkdC\nIFhZWiAH2QACABkACwAaAAthY3NwQVBQTAAAAABhcHBsAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAA\nAADTLWFwcGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtk\nZXNjAAABCAAAAG9kc2NtAAABeAAABWxjcHJ0AAAG5AAAADh3dHB0AAAHHAAAABRyWFlaAAAHMAAA\nABRnWFlaAAAHRAAAABRiWFlaAAAHWAAAABRyVFJDAAAHbAAAAA5jaGFkAAAHfAAAACxiVFJDAAAH\nbAAAAA5nVFJDAAAHbAAAAA5kZXNjAAAAAAAAABRHZW5lcmljIFJHQiBQcm9maWxlAAAAAAAAAAAA\nAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAbWx1YwAAAAAAAAAeAAAADHNrU0sAAAAoAAABeGhySFIAAAAoAAABoGNh\nRVMAAAAkAAAByHB0QlIAAAAmAAAB7HVrVUEAAAAqAAACEmZyRlUAAAAoAAACPHpoVFcAAAAWAAAC\nZGl0SVQAAAAoAAACem5iTk8AAAAmAAAComtvS1IAAAAWAAACyGNzQ1oAAAAiAAAC3mhlSUwAAAAe\nAAADAGRlREUAAAAsAAADHmh1SFUAAAAoAAADSnN2U0UAAAAmAAAConpoQ04AAAAWAAADcmphSlAA\nAAAaAAADiHJvUk8AAAAkAAADomVsR1IAAAAiAAADxnB0UE8AAAAmAAAD6G5sTkwAAAAoAAAEDmVz\nRVMAAAAmAAAD6HRoVEgAAAAkAAAENnRyVFIAAAAiAAAEWmZpRkkAAAAoAAAEfHBsUEwAAAAsAAAE\npHJ1UlUAAAAiAAAE0GFyRUcAAAAmAAAE8mVuVVMAAAAmAAAFGGRhREsAAAAuAAAFPgBWAWEAZQBv\nAGIAZQBjAG4A/QAgAFIARwBCACAAcAByAG8AZgBpAGwARwBlAG4AZQByAGkBDQBrAGkAIABSAEcA\nQgAgAHAAcgBvAGYAaQBsAFAAZQByAGYAaQBsACAAUgBHAEIAIABnAGUAbgDoAHIAaQBjAFAAZQBy\nAGYAaQBsACAAUgBHAEIAIABHAGUAbgDpAHIAaQBjAG8EFwQwBDMEMAQ7BEwEPQQ4BDkAIAQ/BEAE\nPgREBDAEOQQ7ACAAUgBHAEIAUAByAG8AZgBpAGwAIABnAOkAbgDpAHIAaQBxAHUAZQAgAFIAVgBC\nkBp1KAAgAFIARwBCACCCcl9pY8+P8ABQAHIAbwBmAGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIA\naQBjAG8ARwBlAG4AZQByAGkAcwBrACAAUgBHAEIALQBwAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg\n1QS4XNMMx3wATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAA\nUgBHAEIAIAXbBdwF3AXZAEEAbABsAGcAZQBtAGUAaQBuAGUAcwAgAFIARwBCAC0AUAByAG8AZgBp\nAGwAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYAaQBsZm6QGgAgAFIARwBCACBj\nz4/wZYdO9k4AgiwAIABSAEcAQgAgMNcw7TDVMKEwpDDrAFAAcgBvAGYAaQBsACAAUgBHAEIAIABn\nAGUAbgBlAHIAaQBjA5MDtQO9A7kDugPMACADwAPBA78DxgOvA7sAIABSAEcAQgBQAGUAcgBmAGkA\nbAAgAFIARwBCACAAZwBlAG4A6QByAGkAYwBvAEEAbABnAGUAbQBlAGUAbgAgAFIARwBCAC0AcABy\nAG8AZgBpAGUAbA5CDhsOIw5EDh8OJQ5MACAAUgBHAEIAIA4XDjEOSA4nDkQOGwBHAGUAbgBlAGwA\nIABSAEcAQgAgAFAAcgBvAGYAaQBsAGkAWQBsAGUAaQBuAGUAbgAgAFIARwBCAC0AcAByAG8AZgBp\nAGkAbABpAFUAbgBpAHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE\nOAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZBACAAUgBHAEIAIAYn\nBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAAUAByAG8AZgBpAGwAZQBHAGUAbgBlAHIA\nZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGV0ZXh0AAAAAENvcHlyaWdodCAyMDA3\nIEFwcGxlIEluYy4sIGFsbCByaWdodHMgcmVzZXJ2ZWQuAFhZWiAAAAAAAADzUgABAAAAARbPWFla\nIAAAAAAAAHRNAAA97gAAA9BYWVogAAAAAAAAWnUAAKxzAAAXNFhZWiAAAAAAAAAoGgAAFZ8AALg2\nY3VydgAAAAAAAAABAc0AAHNmMzIAAAAAAAEMQgAABd7///MmAAAHkgAA/ZH///ui///9owAAA9wA\nAMBs/+EAgEV4aWYAAE1NACoAAAAIAAUBEgADAAAAAQABAAABGgAFAAAAAQAAAEoBGwAFAAAAAQAA\nAFIBKAADAAAAAQACAACHaQAEAAAAAQAAAFoAAAAAAAA6mQAAAGQAADqZAAAAZAACoAIABAAAAAEA\nAAAuoAMABAAAAAEAAAAUAAAAAP/bAEMAAgEBAgEBAgIBAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYG\nBgcICwkHCAoIBgYJDQkKCwsMDAwHCQ0ODQwOCwwMC//bAEMBAgICAwIDBQMDBQsIBggLCwsLCwsL\nCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLC//AABEIABQALgMBIgAC\nEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAA\nAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4\nOTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaan\nqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQAD\nAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEG\nEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpT\nVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4\nubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APkb41eO\nNYtfi94oSDVdRVF1a74FzJgfvn96j+Kmj+O/gj/wj3/C159Q0MeK9Et/EekmfU1IvdPuN/kzrtkO\n0N5b/K2GGOQKzvjnz8YPFX/YVvP/AEc9fePiv9qXwn4K+Eut674A8S+Br3xl4e/Zd8MaZ4dF0LPU\nHtvENte3TtbwwThla8h3RuYipI+UspFfueIryw6p8kOa+n5Ja62310Z+V4XDRxU5RlPl8z4O0S/8\nYeJfB+t+IfD1xrN7oPhpbZtV1GG7ZrXTxczeRb+bJvwDLLlEAyWYHA4OK/hTxP4i8ceKdI0Xwrq9\n1eanr13FY6fANS2fappZFjRVdnCgF2UFiQozkkDmv0r+KX7VPhO/8JftJaX8I/HPwu0qXxf4c8C+\nJZIA1hDb63cpldfjtwI2WS7NvFGnkINyyMpXY7Fqq/GDUvhB4d+IXxP17TPHvwc1nTfiB8a/h/4o\n0O10zVbW4lstChubNbxpoto+zxARztLHyAgZnADc8NPN5ydpUbXtbfqob6dOZ9vha8zu/smElpXX\nW+3eW2vku+5+fXjvw38RPhlZm58eRa7ptp/a97oCXT3m+3nv7Jtt3BDKkhWUwtwzISgPG4mux/ZD\n8Y6tefEO++06nqL7dOkxm6k4/exf7VfRX/BRD9oTTfiz+xBaaD8NPGfgK803wz8XvFf2nRLOWzjv\n30+XU5pNKntIUQSPbeU+8yxkKUK7i+AB8x/sc/8AJQ7/AP7Bz/8Ao2KuqlWnicLOdSKTu1b0em/d\nanFVpRw+IjCnK60d/X0O/wDil+zfoWofE7xJNcXOqb31W7JxJHj/AF7/APTOsH/hmPw//wA/Gqf9\n/I//AI3RRXRTk+VamM4rmegv/DMfh/H/AB8ap/38j/8AjdB/Zj8Pn/l41Trn/WR9f+/dFFVzPuRZ\nXEP7Mfh89bjVOP8AppFx/wCQ69I/Zf8A2d9F0z4hXP2S61Qb9Olzl4z0lh/6Z+9FFY4mT9lLU1oJ\nc6P/2Q==\n\n--37a1965f87babd849241a530ad71e169--"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/batch": {
      "post": {
        "tags": [
          "Batch"
        ],
        "summary": "Batch",
        "description": "Multiple operations using batch query\nContent-Type:application/json\nMethod - POST",
        "operationId": "Batch",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequest"
              },
              "example": {
                "BatchItemRequest": [
                  {
                    "bId": "bid1",
                    "operation": "create",
                    "Vendor": {
                      "DisplayName": "Smith Family Store"
                    }
                  },
                  {
                    "bId": "bid2",
                    "operation": "delete",
                    "Invoice": {
                      "Id": "129",
                      "SyncToken": "0"
                    }
                  },
                  {
                    "bId": "bid3",
                    "operation": "update",
                    "SalesReceipt": {
                      "domain": "QBO",
                      "sparse": true,
                      "Id": "11",
                      "SyncToken": "0",
                      "PrivateNote": "A private note."
                    }
                  },
                  {
                    "bId": "bid4",
                    "Query": "select * from SalesReceipt"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/bill": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Bill-Create",
        "description": "Create a bill\nContent-Type:application/json\nMethod - POST",
        "operationId": "Bill-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bill-Create-Request"
              },
              "example": {
                "Line": [
                  {
                    "Id": "1",
                    "Amount": 200,
                    "DetailType": "AccountBasedExpenseLineDetail",
                    "AccountBasedExpenseLineDetail": {
                      "AccountRef": {
                        "value": "7"
                      }
                    }
                  }
                ],
                "VendorRef": {
                  "value": "56"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/bill/{id}": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Bill-GetById",
        "description": "Retrieve a bill by Id\nAccept:application/json\nMethod - GET",
        "operationId": "Bill-GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/billpayment": {
      "post": {
        "tags": [
          "BillPayment"
        ],
        "summary": "BillPayment-Create",
        "description": "Create a BillPayment against a pre-created bill\nContent-Type:application/json\nMethod - POST",
        "operationId": "BillPayment-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillPayment-Create-Request"
              },
              "example": {
                "VendorRef": {
                  "value": "62",
                  "name": "Test"
                },
                "PayType": "Check",
                "CheckPayment": {
                  "BankAccountRef": {
                    "value": "35",
                    "name": "Checking"
                  }
                },
                "TotalAmt": 100,
                "PrivateNote": "Acct. 1JK90",
                "Line": [
                  {
                    "Amount": 100,
                    "LinkedTxn": [
                      {
                        "TxnId": "153",
                        "TxnType": "Bill"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/billpayment/{id}": {
      "get": {
        "tags": [
          "BillPayment"
        ],
        "summary": "BillPayment-ReadById",
        "description": "Retrieve BillPayment by Id\nMethod - GET",
        "operationId": "BillPayment-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/cdc": {
      "get": {
        "tags": [
          "ChangeDataCapture"
        ],
        "summary": "CDC-Read",
        "description": "Retrive changed Bill and invoice objects since Aug10,2016\nMethod - GET",
        "operationId": "CDC-Read",
        "parameters": [
          {
            "name": "entities",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "bill,invoice"
            }
          },
          {
            "name": "changedSince",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "YYYY-MM-DD"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/class": {
      "post": {
        "tags": [
          "Class"
        ],
        "summary": "Class-Create",
        "description": "Create a Class object\nMethod - POST",
        "operationId": "Class-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Class-Create-Request"
              },
              "example": {
                "Name": "France"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/class/{id}": {
      "get": {
        "tags": [
          "Class"
        ],
        "summary": "Class-ReadById",
        "description": "Read a Class object by Id\nMethod - GET",
        "operationId": "Class-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/companyinfo/{companyid}": {
      "get": {
        "tags": [
          "CompanyInfo"
        ],
        "summary": "CompanyInfo-ReadById",
        "description": "Method : GET",
        "operationId": "CompanyInfo-ReadById",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "companyid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/creditmemo": {
      "post": {
        "tags": [
          "CreditMemo"
        ],
        "summary": "CreditMemo-Create",
        "description": "Create a credit memo\nMethod : POST",
        "operationId": "CreditMemo-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditMemo-Create-Request"
              },
              "example": {
                "Line": [
                  {
                    "Amount": 50,
                    "DetailType": "SalesItemLineDetail",
                    "SalesItemLineDetail": {
                      "ItemRef": {
                        "value": "3",
                        "name": "Concrete"
                      }
                    }
                  }
                ],
                "CustomerRef": {
                  "value": "3",
                  "name": "CoolCars"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/creditmemo/{id}": {
      "get": {
        "tags": [
          "CreditMemo"
        ],
        "summary": "CreditMemo-ReadById",
        "description": "Read a credit memo by Id\nMethod : GET",
        "operationId": "CreditMemo-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Customer-Create",
        "description": "Create a customer\nMethod : POST",
        "operationId": "Customer-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer-Create-Request"
              },
              "example": {
                "BillAddr": {
                  "Line1": "123 Main Street",
                  "City": "Mountain View",
                  "Country": "USA",
                  "CountrySubDivisionCode": "CA",
                  "PostalCode": "94042"
                },
                "Notes": "Here are other details.",
                "DisplayName": "King's Groceries1",
                "PrimaryPhone": {
                  "FreeFormNumber": "(555) 555-5555"
                },
                "PrimaryEmailAddr": {
                  "Address": "jdrew@myemail.com"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Customer-ReadById",
        "description": "Read a customer entry by Id\nMethod : GET",
        "operationId": "Customer-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/department": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Department-Create",
        "description": "Create a department object\nMethod : POST",
        "operationId": "Department-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department-Create-Request"
              },
              "example": {
                "Name": "Marketing Department"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/department/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Department-ReadById",
        "description": "Read a department object\nMethod : GET",
        "operationId": "Department-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/deposit": {
      "post": {
        "tags": [
          "Deposit"
        ],
        "summary": "Deposit-Create",
        "description": "Create a deposit object\nMethod : POST",
        "operationId": "Deposit-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deposit-Create-Request"
              },
              "example": {
                "DepositToAccountRef": {
                  "value": "35",
                  "name": "Checking"
                },
                "Line": [
                  {
                    "Amount": 20,
                    "DetailType": "DepositLineDetail",
                    "DepositLineDetail": {
                      "AccountRef": {
                        "value": "87",
                        "name": "Unapplied Cash Payment Income"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/deposit/{id}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Deposit-ReadById",
        "description": "Read a deposit object by Id\nMethod : POST",
        "operationId": "Deposit-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/employee": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Employee-Create",
        "description": "Create an employee object\nMethod : POST\n",
        "operationId": "Employee-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee-Create-Request"
              },
              "example": {
                "SSN": "444-55-6666",
                "PrimaryAddr": {
                  "Id": "50",
                  "Line1": "45 N. Elm Street",
                  "City": "Middlefield",
                  "CountrySubDivisionCode": "CA",
                  "PostalCode": "93242"
                },
                "GivenName": "John",
                "FamilyName": "Meuller",
                "PrimaryPhone": {
                  "FreeFormNumber": "408-525-1234"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/employee/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Employee-ReadById",
        "description": "Retrive an employee object by ID\nMethod : GET\n",
        "operationId": "Employee-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/estimate": {
      "post": {
        "tags": [
          "Estimate"
        ],
        "summary": "Estimate-Create",
        "description": "Create an Estimate object\nMethod : POST\n",
        "operationId": "Estimate-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Estimate-Create-Request"
              },
              "example": {
                "Line": [
                  {
                    "Id": "1",
                    "LineNum": 1,
                    "Description": "Pest Control Services",
                    "Amount": 35,
                    "DetailType": "SalesItemLineDetail",
                    "SalesItemLineDetail": {
                      "ItemRef": {
                        "value": "10",
                        "name": "Pest Control"
                      },
                      "UnitPrice": 35,
                      "Qty": 1,
                      "TaxCodeRef": {
                        "value": "NON"
                      }
                    }
                  },
                  {
                    "Amount": 35,
                    "DetailType": "SubTotalLineDetail"
                  },
                  {
                    "Amount": 3.5,
                    "DetailType": "DiscountLineDetail",
                    "DiscountLineDetail": {
                      "PercentBased": true,
                      "DiscountPercent": 10,
                      "DiscountAccountRef": {
                        "value": "86",
                        "name": "Discounts given"
                      }
                    }
                  }
                ],
                "TxnTaxDetail": {
                  "TotalTax": 0
                },
                "CustomerRef": {
                  "value": "3",
                  "name": "Cool Cars"
                },
                "CustomerMemo": {
                  "value": "Thank you for your business and have a great day!"
                },
                "TotalAmt": 31.5,
                "ApplyTaxAfterDiscount": false,
                "PrintStatus": "NeedToPrint",
                "EmailStatus": "NotSet",
                "BillEmail": {
                  "Address": "Cool_Cars@intuit.com"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/estimate/{id}": {
      "get": {
        "tags": [
          "Estimate"
        ],
        "summary": "Estimate-ReadById",
        "description": "Read an Estimate object by Id\nMethod : POST\n",
        "operationId": "Estimate-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/exchangerate": {
      "get": {
        "tags": [
          "ExchangeRate"
        ],
        "summary": "ExchangeRate - GetDetails",
        "description": "Get ExchangeRate\nMethod : GET\n",
        "operationId": "ExchangeRate-GetDetails",
        "parameters": [
          {
            "name": "sourcecurrencycode",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USD"
            }
          },
          {
            "name": "asofdate",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-04-25"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/invoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Invoice-Create",
        "description": "Create an invoice object\nMethod : POST\n",
        "operationId": "Invoice-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice-Create-Request"
              },
              "example": {
                "Line": [
                  {
                    "Amount": 100,
                    "DetailType": "SalesItemLineDetail",
                    "SalesItemLineDetail": {
                      "ItemRef": {
                        "value": "1",
                        "name": "Services"
                      }
                    }
                  }
                ],
                "CustomerRef": {
                  "value": "1"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/invoice/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Invoice-ReadById",
        "description": "Read an invoice object by Id\nMethod : POST\n",
        "operationId": "Invoice-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/item": {
      "post": {
        "tags": [
          "Item"
        ],
        "summary": "Item-Create",
        "description": "Create an item object\nMethod : POST\n",
        "operationId": "Item-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item-Create-Request"
              },
              "example": {
                "Name": "Garden Supplies1",
                "IncomeAccountRef": {
                  "value": "79",
                  "name": "Sales of Product Income"
                },
                "ExpenseAccountRef": {
                  "value": "80",
                  "name": "Cost of Goods Sold"
                },
                "AssetAccountRef": {
                  "value": "81",
                  "name": "Inventory Asset"
                },
                "Type": "Inventory",
                "TrackQtyOnHand": true,
                "QtyOnHand": 10,
                "InvStartDate": "2015-01-01"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/item/<ID>": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Item-ReadById",
        "description": "Read an Item by Id\nMethod : GET\n",
        "operationId": "Item-ReadById",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/journalentry": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "summary": "JournalEntry-Create",
        "description": "Create an journalentry object\nMethod : POST\n",
        "operationId": "JournalEntry-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntry-Create-Request"
              },
              "example": {
                "Line": [
                  {
                    "Id": "0",
                    "Description": "nov portion of rider insurance",
                    "Amount": 100,
                    "DetailType": "JournalEntryLineDetail",
                    "JournalEntryLineDetail": {
                      "PostingType": "Debit",
                      "AccountRef": {
                        "value": "39",
                        "name": "Opening Bal Equity"
                      }
                    }
                  },
                  {
                    "Description": "nov portion of rider insurance",
                    "Amount": 100,
                    "DetailType": "JournalEntryLineDetail",
                    "JournalEntryLineDetail": {
                      "PostingType": "Credit",
                      "AccountRef": {
                        "value": "44",
                        "name": "Notes Payable"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/journalentry/{id}": {
      "get": {
        "tags": [
          "JournalEntry"
        ],
        "summary": "JournalEntry-ReadById",
        "description": "Read an journalentry object by Id\nMethod : POST\n",
        "operationId": "JournalEntry-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/payment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Payment-Create",
        "description": "Create an payment object\nMethod : POST\n",
        "operationId": "Payment-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment-Create-Request"
              },
              "example": {
                "CustomerRef": {
                  "value": "58",
                  "name": "TEST123"
                },
                "TotalAmt": 100,
                "Line": [
                  {
                    "Amount": 100,
                    "LinkedTxn": [
                      {
                        "TxnId": "173",
                        "TxnType": "Invoice"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/payment/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Payment-ReadByID",
        "description": "Read a payment object by Id\nMethod : GET\n",
        "operationId": "Payment-ReadByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/paymentmethod": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "PaymentMethod-Create",
        "description": "Create a payment method\nMethod : POST\n",
        "operationId": "PaymentMethod-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod-Create-Request"
              },
              "example": {
                "Name": "Business Check"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/paymentmethod/{id}": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "PaymentMethod-ReadById",
        "description": "Read a payment method\nMethod : GET\n",
        "operationId": "PaymentMethod-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/preferences": {
      "get": {
        "tags": [
          "Preferences"
        ],
        "summary": "Preference-Read",
        "description": "Read the preference object\nMethod : POST\n",
        "operationId": "Preference-Read",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Preferences"
        ],
        "summary": "Preference-Update",
        "description": "Update the preference object endpoint\nMethod : POST\n",
        "operationId": "Preference-Update",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Preference-Update-Request"
              },
              "example": {
                "AccountingInfoPrefs": {
                  "TrackDepartments": true,
                  "DepartmentTerminology": "Location",
                  "ClassTrackingPerTxn": false,
                  "ClassTrackingPerTxnLine": true,
                  "CustomerTerminology": "Customers"
                },
                "ProductAndServicesPrefs": {
                  "ForSales": true,
                  "ForPurchase": true,
                  "QuantityWithPriceAndRate": true,
                  "QuantityOnHand": true
                },
                "SalesFormsPrefs": {
                  "CustomField": [
                    {
                      "CustomField": [
                        {
                          "Name": "SalesFormsPrefs.UseSalesCustom3",
                          "Type": "BooleanType",
                          "BooleanValue": false
                        },
                        {
                          "Name": "SalesFormsPrefs.UseSalesCustom2",
                          "Type": "BooleanType",
                          "BooleanValue": false
                        },
                        {
                          "Name": "SalesFormsPrefs.UseSalesCustom1",
                          "Type": "BooleanType",
                          "BooleanValue": true
                        }
                      ]
                    },
                    {
                      "CustomField": [
                        {
                          "Name": "SalesFormsPrefs.SalesCustomName1",
                          "Type": "StringType",
                          "StringValue": "Crew #"
                        }
                      ]
                    }
                  ],
                  "CustomTxnNumbers": false,
                  "AllowDeposit": true,
                  "AllowDiscount": true,
                  "DefaultDiscountAccount": "86",
                  "AllowEstimates": true,
                  "ETransactionEnabledStatus": "NotApplicable",
                  "ETransactionAttachPDF": false,
                  "ETransactionPaymentEnabled": false,
                  "IPNSupportEnabled": false,
                  "AllowServiceDate": false,
                  "AllowShipping": false,
                  "DefaultTerms": {
                    "value": "3"
                  },
                  "DefaultCustomerMessage": "Thank you for your business and have a great day!"
                },
                "EmailMessagesPrefs": {
                  "InvoiceMessage": {
                    "Subject": "Invoice from Craig's Design and Landscaping Services",
                    "Message": "Your invoice is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
                  },
                  "EstimateMessage": {
                    "Subject": "Estimate from Craig's Design and Landscaping Services",
                    "Message": "Please review the estimate below.  Feel free to contact us if you have any questions.\nWe look forward to working with you.\n\nSincerely,\nCraig's Design and Landscaping Services"
                  },
                  "SalesReceiptMessage": {
                    "Subject": "Sales Receipt from Craig's Design and Landscaping Services",
                    "Message": "Your sales receipt is attached.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
                  },
                  "StatementMessage": {
                    "Subject": "Statement from Craig's Design and Landscaping Services",
                    "Message": "Your statement is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
                  }
                },
                "VendorAndPurchasesPrefs": {
                  "TrackingByCustomer": true,
                  "BillableExpenseTracking": true,
                  "POCustomField": [
                    {
                      "CustomField": [
                        {
                          "Name": "PurchasePrefs.UsePurchaseCustom3",
                          "Type": "BooleanType",
                          "BooleanValue": false
                        },
                        {
                          "Name": "PurchasePrefs.UsePurchaseCustom2",
                          "Type": "BooleanType",
                          "BooleanValue": true
                        },
                        {
                          "Name": "PurchasePrefs.UsePurchaseCustom1",
                          "Type": "BooleanType",
                          "BooleanValue": true
                        }
                      ]
                    },
                    {
                      "CustomField": [
                        {
                          "Name": "PurchasePrefs.PurchaseCustomName2",
                          "Type": "StringType",
                          "StringValue": "Sales Rep"
                        },
                        {
                          "Name": "PurchasePrefs.PurchaseCustomName1",
                          "Type": "StringType",
                          "StringValue": "Crew #"
                        }
                      ]
                    }
                  ]
                },
                "TimeTrackingPrefs": {
                  "UseServices": true,
                  "BillCustomers": true,
                  "ShowBillRateToAll": false,
                  "WorkWeekStartDate": "Monday",
                  "MarkTimeEntriesBillable": true
                },
                "TaxPrefs": {
                  "UsingSalesTax": true,
                  "TaxGroupCodeRef": {
                    "value": "2"
                  }
                },
                "CurrencyPrefs": {
                  "MultiCurrencyEnabled": true,
                  "HomeCurrency": {
                    "value": "USD"
                  }
                },
                "ReportPrefs": {
                  "ReportBasis": "Accrual",
                  "CalcAgingReportFromTxnDate": false
                },
                "OtherPrefs": {
                  "NameValue": [
                    {
                      "Name": "SalesFormsPrefs.DefaultCustomerMessage",
                      "Value": "Thank you for your business and have a great day!"
                    },
                    {
                      "Name": "SalesFormsPrefs.DefaultItem",
                      "Value": "1"
                    },
                    {
                      "Name": "DTXCopyMemo",
                      "Value": "false"
                    },
                    {
                      "Name": "UncategorizedAssetAccountId",
                      "Value": "32"
                    },
                    {
                      "Name": "UncategorizedIncomeAccountId",
                      "Value": "30"
                    },
                    {
                      "Name": "UncategorizedExpenseAccountId",
                      "Value": "31"
                    },
                    {
                      "Name": "MasAccountId",
                      "Value": "35"
                    },
                    {
                      "Name": "SFCEnabled",
                      "Value": "true"
                    }
                  ]
                },
                "domain": "QBO",
                "sparse": false,
                "Id": "1",
                "SyncToken": "4",
                "MetaData": {
                  "CreateTime": "2016-01-13T09:07:08+00:00",
                  "LastUpdatedTime": "2016-08-24T03:12:45+00:00"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/purchase": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "Purchase-Create",
        "description": "Create a puchase object\nMethod : POST\n",
        "operationId": "Purchase-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase-Create-Request"
              },
              "example": {
                "AccountRef": {
                  "value": "42",
                  "name": "Visa"
                },
                "PaymentType": "CreditCard",
                "Line": [
                  {
                    "Amount": 10,
                    "DetailType": "AccountBasedExpenseLineDetail",
                    "AccountBasedExpenseLineDetail": {
                      "AccountRef": {
                        "name": "Meals and Entertainment",
                        "value": "13"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/purchase/{id}": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "Purchase-ReadById",
        "description": "Read a puchase object by Id\nMethod : POST\n",
        "operationId": "Purchase-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/purchaseorder": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "PurchaseOrder-Create",
        "description": "Create a puchase-order object\nMethod : POST\n",
        "operationId": "PurchaseOrder-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder-Create-Request"
              },
              "example": {
                "Line": [
                  {
                    "Amount": 25,
                    "DetailType": "ItemBasedExpenseLineDetail",
                    "ItemBasedExpenseLineDetail": {
                      "CustomerRef": {
                        "value": "3",
                        "name": "Cool Cars"
                      },
                      "BillableStatus": "NotBillable",
                      "ItemRef": {
                        "value": "11",
                        "name": "Pump"
                      },
                      "UnitPrice": 25,
                      "Qty": 1,
                      "TaxCodeRef": {
                        "value": "NON"
                      }
                    }
                  }
                ],
                "VendorRef": {
                  "value": "41",
                  "name": "Hicks Hardware"
                },
                "APAccountRef": {
                  "value": "33",
                  "name": "Accounts Payable (A/P)"
                },
                "TotalAmt": 25
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/purchaseorder/{id}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "PurchaseOrder-ReadById",
        "description": "Read a puchase-order object\nMethod : POST\n",
        "operationId": "PurchaseOrder-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/refundreceipt": {
      "post": {
        "tags": [
          "RefundReceipt"
        ],
        "summary": "RefundReceipt-Create",
        "description": "Create a refund-receipt object\nMethod : POST\n",
        "operationId": "RefundReceipt-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundReceipt-Create-Request"
              },
              "example": {
                "Line": [
                  {
                    "Amount": 420,
                    "DetailType": "SalesItemLineDetail",
                    "SalesItemLineDetail": {
                      "ItemRef": {
                        "value": "2"
                      }
                    }
                  }
                ],
                "DepositToAccountRef": {
                  "value": "35",
                  "name": "Checking"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/refundreceipt/{id}": {
      "get": {
        "tags": [
          "RefundReceipt"
        ],
        "summary": "RefundReceipt-ReadById",
        "description": "Read a refund-receipt object\nMethod : GET\n",
        "operationId": "RefundReceipt-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/AccountList": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AccountList",
        "description": "Report - Account list detail\nMethod : GET\n\nThe information below provides a reference on how to access the account list detail report from the QuickBooks Online Report Service.\n",
        "operationId": "Report-AccountList",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/AgedPayableDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AgedPayableDetail",
        "description": "Report - AgedPayable aging detail\nMethod : GET\n\nThe information below provides a reference on how to access the AP Aging summary report from the QuickBooks Online Report Service.\n",
        "operationId": "Report-AgedPayableDetail",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/AgedPayables": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AgedPayables",
        "description": "Report - AgedPayable aging summary\nMethod : GET\n\nThe information below provides a reference on how to access the AP Aging summary report from the QuickBooks Online Report Service.\n",
        "operationId": "Report-AgedPayables",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/AgedReceivableDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AgedReceivableDetail",
        "description": "Report - AgedReceivableDetail aging detail\nMethod : GET\n\nThe information below provides a reference on how to access the AR Aging Detail report from the QuickBooks Online Report Service.\n",
        "operationId": "Report-AgedReceivableDetail",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/AgedReceivables": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AgedReceivables",
        "description": "Report - AgedReceivable aging summary\nMethod : GET\n\nThe information below provides a reference on how to access the AR Aging Summary report from the QuickBooks Online Report Service.\n",
        "operationId": "Report-AgedReceivables",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/BalanceSheet": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-BalanceSheet",
        "description": "Report - BalanceSheet\nMethod : GET\n\nThe information below provides a reference on how to query the Balance Sheet report from the QuickBooks Online Report Service.\n",
        "operationId": "Report-BalanceSheet",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/CashFlow": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CashFlow",
        "description": "Report - CashFlow\nMethod : GET\n\nThe information below provides a reference on how to access the cash flow report from the QuickBooks Online Report Service.\n",
        "operationId": "Report-CashFlow",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/ClassSales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CashSales",
        "description": "Report - CashSales\nMethod : GET\n",
        "operationId": "Report-CashSales",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/CustomerBalance": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CustomerBalance",
        "description": "Report - CustomerBalance\nMethod : GET\n",
        "operationId": "Report-CustomerBalance",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/CustomerBalanceDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CustomerBalanceDetail",
        "description": "Report - CustomerBalance Detail\nMethod : GET\n\nThe information below provides a reference on how to access the Customer Balance Detail report from the QuickBooks Online Report Service.\n",
        "operationId": "Report-CustomerBalanceDetail",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/CustomerIncome": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CustomerIncome",
        "description": "Report - Customer Income\nMethod : GET\n",
        "operationId": "Report-CustomerIncome",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/CustomerSales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CustomerSales",
        "description": "Report - Customer Sales\nMethod : GET\n",
        "operationId": "Report-CustomerSales",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/DepartmentSales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-DepartmentSales",
        "description": "Report - Department Sales\nMethod : GET\n",
        "operationId": "Report-DepartmentSales",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/GeneralLedger": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-GeneralLedger",
        "description": "Report - General Ledger\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/general%20ledger\n",
        "operationId": "Report-GeneralLedger",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/InventoryValuationSummary": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-InventoryValuationSummary",
        "description": "Report - Inventory Valuation Summary\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/inventory%20valuation\n",
        "operationId": "Report-InventoryValuationSummary",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/ItemSales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-ItemSales",
        "description": "Report - Item Sales\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/sales%20by%20product\n",
        "operationId": "Report-ItemSales",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/ProfitAndLoss": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-ProfitAndLoss",
        "description": "Report - Profit and Loss\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/profit%20and%20loss\n",
        "operationId": "Report-ProfitAndLoss",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer",
            "description": "Filters report contents to include information for specified customers. Supported Values: One or more comma separated customer IDs as returned in the attribute, Customer.Id, of the Customer object response code."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "in": "query",
            "name": "qzurl",
            "description": "Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data. Supported Values: true, false"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "Cash",
                "Accrual"
              ]
            },
            "in": "query",
            "name": "accounting_method",
            "description": "The accounting method used in the report. Supported Values:Cash, Accrual"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "end_date",
            "description": "String\nThe end date of the report, in the format YYYY-MM-DD. start_date must be less than end_date. Use if you want the report to cover an explicit date range; otherwise, use date_macro to cover a standard report date range. If not specified value of date_macro is used"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_macro",
            "description": "Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the start_date and end_date to cover an explicit report date range. Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "adjusted_gain_loss",
            "description": "Specifies whether unrealized gain and losses are included in the report. Supported Values: true, false"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "class",
            "description": "Filters report contents to include information for specified classes if so configured in the company file. Supported Values: One or more comma separated class IDs as returned in the attribute, Class.Id, of the Class entity response code."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "item",
            "description": "Filters report contents to include information for specified items. Supported Values: One or more comma separated item IDs as returned in the attribute, Item.Id,of the Item entity response code."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "ascend",
                "descend"
              ]
            },
            "in": "query",
            "name": "sort_order",
            "description": "The sort order. Supported Values: ascend, descend "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "summarize_column_by",
            "description": "The criteria by which to group the report results. Supported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "department",
            "description": "Filters report contents to include information for specified departments if so configured in the company file. Supported Values: One or more comma separated department IDs as returned in the attribute, Department.Id of the Department object response code."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "vendor",
            "description": "Filters report contents to include information for specified vendors. Supported Values: One or more comma separated vendor IDs as returned in the attribute, Vendor.Id, of the Vendor object response code."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "start_date",
            "description": "The start date of the report, in the format YYYY-MM-DD. start_date must be less than end_date. Use if you want the report to cover an explicit date range; otherwise, use date_macro to cover a standard report date range. If not specified value of date_macro is used"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/ProfitAndLossDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-ProfitAndLossDetail",
        "description": "Report - Profit and Loss Detail\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/profit%20and%20loss%20detail\n",
        "operationId": "Report-ProfitAndLossDetail",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/TrialBalance": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-TrialBalance",
        "description": "Report - Trial Balance \nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/trial%20balance\n",
        "operationId": "Report-TrialBalance",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/TransactionList": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-TransactionList",
        "description": "Report - Trial List \nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/transaction%20list\n",
        "operationId": "Report-TransactionList",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/VendorBalance": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-VendorBalance",
        "description": "Report - Vendor Balance \nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/vendor%20balance\n",
        "operationId": "Report-VendorBalance",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/VendorBalanceDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-VendorBalanceDetail",
        "description": "Report - Vendor Balance Detail\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/vendor%20balance%20detail\n",
        "operationId": "Report-VendorBalanceDetail",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/reports/VendorExpenses": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-VendorExpense",
        "description": "Report - Vendor Expense\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/expenses%20by%20vendor\n",
        "operationId": "Report-VendorExpense",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/salesreceipt": {
      "post": {
        "tags": [
          "SalesReceipt"
        ],
        "summary": "SalesReceipt-Create",
        "description": "Create an salesreceipt object\nMethod : POST\n",
        "operationId": "SalesReceipt-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReceipt-Create-Request"
              },
              "example": {
                "Line": [
                  {
                    "Id": "1",
                    "LineNum": 1,
                    "Description": "Pest Control Services",
                    "Amount": 35,
                    "DetailType": "SalesItemLineDetail",
                    "SalesItemLineDetail": {
                      "ItemRef": {
                        "value": "10",
                        "name": "Pest Control"
                      },
                      "UnitPrice": 35,
                      "Qty": 1,
                      "TaxCodeRef": {
                        "value": "NON"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/salesreceipt/{id}": {
      "get": {
        "tags": [
          "SalesReceipt"
        ],
        "summary": "SalesReceipt-ReadByID",
        "description": "Create an salesreceipt object\nMethod : POST\n",
        "operationId": "SalesReceipt-ReadByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/taxagency": {
      "post": {
        "tags": [
          "TaxAgency"
        ],
        "summary": "TaxAgency-Create",
        "description": "Create a tax-agency object\nMethod : POST\n\nSample response payload\n\n{\n  \"SalesReceipt\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"181\"\n  },\n  \"time\": \"2016-09-02T02:17:24.353-07:00\"\n}",
        "operationId": "TaxAgency-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxAgency-Create-Request"
              },
              "example": {
                "DisplayName": "CityTaxAgency"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/taxagency/{id}": {
      "get": {
        "tags": [
          "TaxAgency"
        ],
        "summary": "TaxAgency-ReadByID",
        "description": "Get a tax-agency object by ID\nMethod : GET\n",
        "operationId": "TaxAgency-ReadByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/taxcode/{id}": {
      "get": {
        "tags": [
          "TaxCode"
        ],
        "summary": "TaxCode-ReadById",
        "description": "Read a taxcode by Id\nMethod : POST\n",
        "operationId": "TaxCode-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/taxrate/{id}": {
      "get": {
        "tags": [
          "TaxRate"
        ],
        "summary": "TaxRate-ReadById",
        "description": "Read a taxRate by Id\nMethod : POST\n",
        "operationId": "TaxRate-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/taxservice/taxcode": {
      "post": {
        "tags": [
          "TaxService"
        ],
        "summary": "TaxService-Create",
        "description": "Use TaxService to create taxcode and corresponding taxrates\nMethod : POST\n",
        "operationId": "TaxService-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxService-Create-Request"
              },
              "example": {
                "TaxCode": "MyTaxCodeName",
                "TaxRateDetails": [
                  {
                    "TaxRateName": "myNewTaxRateName",
                    "RateValue": "8",
                    "TaxAgencyId": "1",
                    "TaxApplicableOn": "Sales"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/term": {
      "post": {
        "tags": [
          "Term"
        ],
        "summary": "Term-Create",
        "description": "Create a term object\nMethod : POST\n",
        "operationId": "Term-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Term-Create-Request"
              },
              "example": {
                "Name": "Term120",
                "DueDays": "120"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/term/{id}": {
      "get": {
        "tags": [
          "Term"
        ],
        "summary": "Term-ReadById",
        "description": "Read a term object by Id\nMethod : Get\n",
        "operationId": "Term-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/timeactivity": {
      "post": {
        "tags": [
          "TimeActivity"
        ],
        "summary": "TimeActivity-Create",
        "description": "Create a term object\nMethod : POST\n",
        "operationId": "TimeActivity-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeActivity-Create-Request"
              },
              "example": {
                "NameOf": "Employee",
                "EmployeeRef": {
                  "value": "55",
                  "name": "Emily Platt"
                },
                "StartTime": "2015-07-05T16:00:00+00:00",
                "EndTime": "2013-07-06T01:00:00+00:00"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/transfer": {
      "post": {
        "tags": [
          "Transfer"
        ],
        "summary": "Transfer-Create",
        "description": "Create a transfer object\nMethod : POST\n",
        "operationId": "Transfer-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transfer-Create-Request"
              },
              "example": {
                "FromAccountRef": {
                  "value": "35",
                  "name": "Checking"
                },
                "ToAccountRef": {
                  "value": "36",
                  "name": "Savings"
                },
                "Amount": "120.00"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/transfer/{id}": {
      "get": {
        "tags": [
          "Transfer"
        ],
        "summary": "Transfer-ReadById",
        "description": "Read a transfer object by Id\nMethod : GET\n",
        "operationId": "Transfer-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/vendor": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Vendor-Create",
        "description": "Create a vendor object\nMethod : POST\n",
        "operationId": "Vendor-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor-Create-Request"
              },
              "example": {
                "BillAddr": {
                  "Line1": "Dianne's Auto Shop",
                  "Line2": "Dianne Bradley",
                  "Line3": "29834 Mustang Ave.",
                  "City": "Millbrae",
                  "Country": "U.S.A",
                  "CountrySubDivisionCode": "CA",
                  "PostalCode": "94030"
                },
                "TaxIdentifier": "99-5688293",
                "AcctNum": "35372649",
                "Title": "Ms.",
                "GivenName": "Dianne",
                "FamilyName": "Bradley",
                "Suffix": "Sr.",
                "CompanyName": "Dianne's Auto Shop",
                "DisplayName": "Dianne's Auto Shop",
                "PrintOnCheckName": "Dianne's Auto Shop",
                "PrimaryPhone": {
                  "FreeFormNumber": "(650) 555-2342"
                },
                "Mobile": {
                  "FreeFormNumber": "(650) 555-2000"
                },
                "PrimaryEmailAddr": {
                  "Address": "dbradley@myemail.com"
                },
                "WebAddr": {
                  "URI": "http://DiannesAutoShop.com"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/vendor/{id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Vendor-ReadById",
        "description": "Read a vendor object by Id\nMethod : GET\n",
        "operationId": "Vendor-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/vendorcredit": {
      "post": {
        "tags": [
          "VendorCredit"
        ],
        "summary": "VendorCredit-Create",
        "description": "Create a vendorcredit object\nMethod : POST\n",
        "operationId": "VendorCredit-Create",
        "parameters": [
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "{\n        \"TxnDate\":\"2014-12-23\",\n        \"Line\":[\n        {\n            \"Id\":\"1\",\n            \"Amount\":90.00,\n            \"DetailType\":\"AccountBasedExpenseLineDetail\",\n            \"AccountBasedExpenseLineDetail\":\n            {\n                \"CustomerRef\":\n                {\n                    \"value\":\"1\",\n                    \"name\":\"Amy's Bird Sanctuary\"\n                },\n                \"AccountRef\":\n                {\n                    \"value\":\"8\",\n                    \"name\":\"Bank Charges\"\n                },\n                \"BillableStatus\":\"Billable\",\n                \"TaxCodeRef\":\n                {\n                    \"value\":\"TAX\"\n                }\n            }\n        }\n        ],\n        \"VendorRef\":\n        {\n            \"value\":\"30\",\n            \"name\":\"Books by Bessie\"\n        },\n        \"APAccountRef\":\n        {\n            \"value\":\"33\",\n            \"name\":\"Accounts Payable (A/P)\"\n        },\n        \"TotalAmt\":90.00\n    }\n    ]\n}"
              },
              "example": "{\n        \"TxnDate\":\"2014-12-23\",\n        \"Line\":[\n        {\n            \"Id\":\"1\",\n            \"Amount\":90.00,\n            \"DetailType\":\"AccountBasedExpenseLineDetail\",\n            \"AccountBasedExpenseLineDetail\":\n            {\n                \"CustomerRef\":\n                {\n                    \"value\":\"1\",\n                    \"name\":\"Amy's Bird Sanctuary\"\n                },\n                \"AccountRef\":\n                {\n                    \"value\":\"8\",\n                    \"name\":\"Bank Charges\"\n                },\n                \"BillableStatus\":\"Billable\",\n                \"TaxCodeRef\":\n                {\n                    \"value\":\"TAX\"\n                }\n            }\n        }\n        ],\n        \"VendorRef\":\n        {\n            \"value\":\"30\",\n            \"name\":\"Books by Bessie\"\n        },\n        \"APAccountRef\":\n        {\n            \"value\":\"33\",\n            \"name\":\"Accounts Payable (A/P)\"\n        },\n        \"TotalAmt\":90.00\n    }\n    ]\n}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/vendorcredit/{id}": {
      "get": {
        "tags": [
          "VendorCredit"
        ],
        "summary": "VendorCredit-ReadById",
        "description": "Read a vendorcredit object by Id\nMethod : GET\n\nPlease change the VendorCredit it from 165 to a valid VendorCredit objectId which exists in your QBO account",
        "operationId": "VendorCredit-ReadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "name": "minorversion",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "14"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "QBOV3-OAuth2-Spellcaster"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "Account-Create-Request": {
        "title": "Account-Create-Request",
        "required": [
          "AccountType",
          "Name"
        ],
        "type": "object",
        "properties": {
          "AccountType": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "AccountType": "Accounts Receivable",
          "Name": "AR4"
        }
      },
      "Account-Update-Request": {
        "title": "Account-Update-Request",
        "required": [
          "Name",
          "SubAccount",
          "FullyQualifiedName",
          "Active",
          "Classification",
          "AccountType",
          "AccountSubType",
          "CurrentBalance",
          "CurrentBalanceWithSubAccounts",
          "CurrencyRef",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "SubAccount": {
            "type": "boolean"
          },
          "FullyQualifiedName": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "Classification": {
            "type": "string"
          },
          "AccountType": {
            "type": "string"
          },
          "AccountSubType": {
            "type": "string"
          },
          "CurrentBalance": {
            "type": "integer",
            "format": "int32"
          },
          "CurrentBalanceWithSubAccounts": {
            "type": "integer",
            "format": "int32"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Name": "AR3-Updated111",
          "SubAccount": false,
          "FullyQualifiedName": "AR3-Updated",
          "Active": true,
          "Classification": "Asset",
          "AccountType": "Accounts Receivable",
          "AccountSubType": "AccountsReceivable",
          "CurrentBalance": 0,
          "CurrentBalanceWithSubAccounts": 0,
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "domain": "QBO",
          "sparse": false,
          "Id": "94",
          "SyncToken": "3"
        }
      },
      "CurrencyRef": {
        "title": "CurrencyRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "USD",
          "name": "United States Dollar"
        }
      },
      "Attachable-Create-Request": {
        "title": "Attachable-Create-Request",
        "required": [
          "AttachableRef",
          "Note"
        ],
        "type": "object",
        "properties": {
          "AttachableRef": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachableRef"
            },
            "description": ""
          },
          "Note": {
            "type": "string"
          }
        },
        "example": {
          "AttachableRef": [
            {
              "EntityRef": {
                "value": "130",
                "type": "Invoice"
              },
              "IncludeOnSend": "false"
            }
          ],
          "Note": "This is an attached note."
        }
      },
      "AttachableRef": {
        "title": "AttachableRef",
        "required": [
          "EntityRef",
          "IncludeOnSend"
        ],
        "type": "object",
        "properties": {
          "EntityRef": {
            "$ref": "#/components/schemas/EntityRef"
          },
          "IncludeOnSend": {
            "type": "string"
          }
        },
        "example": {
          "EntityRef": {
            "value": "130",
            "type": "Invoice"
          },
          "IncludeOnSend": "false"
        }
      },
      "EntityRef": {
        "title": "EntityRef",
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "value": "130",
          "type": "Invoice"
        }
      },
      "Attachable-Update-Request": {
        "title": "Attachable-Update-Request",
        "required": [
          "Note",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData",
          "AttachableRef"
        ],
        "type": "object",
        "properties": {
          "Note": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "AttachableRef": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachableRef1"
            },
            "description": ""
          }
        },
        "example": {
          "Note": "This is an attached note. Updated",
          "domain": "QBO",
          "sparse": false,
          "Id": "5000000000000029383",
          "SyncToken": "0",
          "MetaData": {
            "CreateTime": "2016-08-18T07:18:04+00:00",
            "LastUpdatedTime": "2016-08-18T07:18:04+00:00"
          },
          "AttachableRef": [
            {
              "EntityRef": {
                "value": "130",
                "type": "Invoice"
              },
              "IncludeOnSend": false
            }
          ]
        }
      },
      "MetaData": {
        "title": "MetaData",
        "required": [
          "CreateTime",
          "LastUpdatedTime"
        ],
        "type": "object",
        "properties": {
          "CreateTime": {
            "type": "string"
          },
          "LastUpdatedTime": {
            "type": "string"
          }
        },
        "example": {
          "CreateTime": "2016-08-18T07:18:04+00:00",
          "LastUpdatedTime": "2016-08-18T07:18:04+00:00"
        }
      },
      "AttachableRef1": {
        "title": "AttachableRef1",
        "required": [
          "EntityRef",
          "IncludeOnSend"
        ],
        "type": "object",
        "properties": {
          "EntityRef": {
            "$ref": "#/components/schemas/EntityRef"
          },
          "IncludeOnSend": {
            "type": "boolean"
          }
        },
        "example": {
          "EntityRef": {
            "value": "130",
            "type": "Invoice"
          },
          "IncludeOnSend": false
        }
      },
      "Attachable-Delete-Request": {
        "title": "Attachable-Delete-Request",
        "required": [
          "Note",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData",
          "AttachableRef"
        ],
        "type": "object",
        "properties": {
          "Note": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "AttachableRef": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachableRef1"
            },
            "description": ""
          }
        },
        "example": {
          "Note": "This is an attached note. Updated1",
          "domain": "QBO",
          "sparse": false,
          "Id": "5000000000000029383",
          "SyncToken": "2",
          "MetaData": {
            "CreateTime": "2016-08-18T07:18:04+00:00",
            "LastUpdatedTime": "2016-08-18T07:18:04+00:00"
          },
          "AttachableRef": [
            {
              "EntityRef": {
                "value": "130",
                "type": "Invoice"
              },
              "IncludeOnSend": false
            }
          ]
        }
      },
      "BatchRequest": {
        "title": "BatchRequest",
        "required": [
          "BatchItemRequest"
        ],
        "type": "object",
        "properties": {
          "BatchItemRequest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchItemRequest"
            },
            "description": ""
          }
        },
        "example": {
          "BatchItemRequest": [
            {
              "bId": "bid1",
              "operation": "create",
              "Vendor": {
                "DisplayName": "Smith Family Store"
              }
            },
            {
              "bId": "bid2",
              "operation": "delete",
              "Invoice": {
                "Id": "129",
                "SyncToken": "0"
              }
            },
            {
              "bId": "bid3",
              "operation": "update",
              "SalesReceipt": {
                "domain": "QBO",
                "sparse": true,
                "Id": "11",
                "SyncToken": "0",
                "PrivateNote": "A private note."
              }
            },
            {
              "bId": "bid4",
              "Query": "select * from SalesReceipt"
            }
          ]
        }
      },
      "BatchItemRequest": {
        "title": "BatchItemRequest",
        "required": [
          "bId"
        ],
        "type": "object",
        "properties": {
          "bId": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "Vendor": {
            "$ref": "#/components/schemas/Vendor"
          },
          "Invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "SalesReceipt": {
            "$ref": "#/components/schemas/SalesReceipt"
          },
          "Query": {
            "type": "string"
          }
        },
        "example": {
          "bId": "bid1",
          "operation": "create",
          "Vendor": {
            "DisplayName": "Smith Family Store"
          }
        }
      },
      "Vendor": {
        "title": "Vendor",
        "required": [
          "DisplayName"
        ],
        "type": "object",
        "properties": {
          "DisplayName": {
            "type": "string"
          }
        },
        "example": {
          "DisplayName": "Smith Family Store"
        }
      },
      "Invoice": {
        "title": "Invoice",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "129",
          "SyncToken": "0"
        }
      },
      "SalesReceipt": {
        "title": "SalesReceipt",
        "required": [
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "PrivateNote"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "PrivateNote": {
            "type": "string"
          }
        },
        "example": {
          "domain": "QBO",
          "sparse": true,
          "Id": "11",
          "SyncToken": "0",
          "PrivateNote": "A private note."
        }
      },
      "Bill-Create-Request": {
        "title": "Bill-Create-Request",
        "required": [
          "Line",
          "VendorRef"
        ],
        "type": "object",
        "properties": {
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line"
            },
            "description": ""
          },
          "VendorRef": {
            "$ref": "#/components/schemas/VendorRef"
          }
        },
        "example": {
          "Line": [
            {
              "Id": "1",
              "Amount": 200,
              "DetailType": "AccountBasedExpenseLineDetail",
              "AccountBasedExpenseLineDetail": {
                "AccountRef": {
                  "value": "7"
                }
              }
            }
          ],
          "VendorRef": {
            "value": "56"
          }
        }
      },
      "Line": {
        "title": "Line",
        "required": [
          "Id",
          "Amount",
          "DetailType",
          "AccountBasedExpenseLineDetail"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Amount": {
            "type": "number"
          },
          "DetailType": {
            "type": "string"
          },
          "AccountBasedExpenseLineDetail": {
            "$ref": "#/components/schemas/AccountBasedExpenseLineDetail"
          }
        },
        "example": {
          "Id": "1",
          "Amount": 200,
          "DetailType": "AccountBasedExpenseLineDetail",
          "AccountBasedExpenseLineDetail": {
            "AccountRef": {
              "value": "7"
            }
          }
        }
      },
      "AccountBasedExpenseLineDetail": {
        "title": "AccountBasedExpenseLineDetail",
        "required": [
          "AccountRef"
        ],
        "type": "object",
        "properties": {
          "AccountRef": {
            "$ref": "#/components/schemas/AccountRef"
          }
        },
        "example": {
          "AccountRef": {
            "value": "7"
          }
        }
      },
      "AccountRef": {
        "title": "AccountRef",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "7"
        }
      },
      "VendorRef": {
        "title": "VendorRef",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "56"
        }
      },
      "Bill-Update-Request": {
        "title": "Bill-Update-Request",
        "required": [
          "Line",
          "VendorRef"
        ],
        "type": "object",
        "properties": {
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line"
            },
            "description": ""
          },
          "VendorRef": {
            "$ref": "#/components/schemas/VendorRef"
          }
        },
        "example": {
          "Line": [
            {
              "Id": "1",
              "Amount": 240.67,
              "DetailType": "AccountBasedExpenseLineDetail",
              "AccountBasedExpenseLineDetail": {
                "AccountRef": {
                  "value": "7"
                }
              }
            }
          ],
          "VendorRef": {
            "value": "56"
          }
        }
      },
      "Bill-Delete-Request": {
        "title": "Bill-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "149",
          "SyncToken": "0"
        }
      },
      "BillPayment-Create-Request": {
        "title": "BillPayment-Create-Request",
        "required": [
          "VendorRef",
          "PayType",
          "CheckPayment",
          "TotalAmt",
          "PrivateNote",
          "Line"
        ],
        "type": "object",
        "properties": {
          "VendorRef": {
            "$ref": "#/components/schemas/VendorRef2"
          },
          "PayType": {
            "type": "string"
          },
          "CheckPayment": {
            "$ref": "#/components/schemas/CheckPayment"
          },
          "TotalAmt": {
            "type": "number"
          },
          "PrivateNote": {
            "type": "string"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line2"
            },
            "description": ""
          }
        },
        "example": {
          "VendorRef": {
            "value": "62",
            "name": "Test"
          },
          "PayType": "Check",
          "CheckPayment": {
            "BankAccountRef": {
              "value": "35",
              "name": "Checking"
            }
          },
          "TotalAmt": 100,
          "PrivateNote": "Acct. 1JK90",
          "Line": [
            {
              "Amount": 100,
              "LinkedTxn": [
                {
                  "TxnId": "153",
                  "TxnType": "Bill"
                }
              ]
            }
          ]
        }
      },
      "VendorRef2": {
        "title": "VendorRef2",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "62",
          "name": "Test"
        }
      },
      "CheckPayment": {
        "title": "CheckPayment",
        "required": [
          "BankAccountRef"
        ],
        "type": "object",
        "properties": {
          "BankAccountRef": {
            "$ref": "#/components/schemas/BankAccountRef"
          }
        },
        "example": {
          "BankAccountRef": {
            "value": "35",
            "name": "Checking"
          }
        }
      },
      "BankAccountRef": {
        "title": "BankAccountRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "35",
          "name": "Checking"
        }
      },
      "Line2": {
        "title": "Line2",
        "required": [
          "Amount",
          "LinkedTxn"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "type": "number"
          },
          "LinkedTxn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedTxn"
            },
            "description": ""
          }
        },
        "example": {
          "Amount": 100,
          "LinkedTxn": [
            {
              "TxnId": "153",
              "TxnType": "Bill"
            }
          ]
        }
      },
      "LinkedTxn": {
        "title": "LinkedTxn",
        "required": [
          "TxnId",
          "TxnType"
        ],
        "type": "object",
        "properties": {
          "TxnId": {
            "type": "string"
          },
          "TxnType": {
            "type": "string"
          }
        },
        "example": {
          "TxnId": "153",
          "TxnType": "Bill"
        }
      },
      "BillPayment-Delete-Request": {
        "title": "BillPayment-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "154",
          "SyncToken": "0"
        }
      },
      "BillPayment-Update-Request": {
        "title": "BillPayment-Update-Request",
        "required": [
          "VendorRef",
          "PayType",
          "CheckPayment",
          "TotalAmt",
          "PrivateNote",
          "Line"
        ],
        "type": "object",
        "properties": {
          "VendorRef": {
            "$ref": "#/components/schemas/VendorRef2"
          },
          "PayType": {
            "type": "string"
          },
          "CheckPayment": {
            "$ref": "#/components/schemas/CheckPayment"
          },
          "TotalAmt": {
            "type": "number"
          },
          "PrivateNote": {
            "type": "string"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line2"
            },
            "description": ""
          }
        },
        "example": {
          "VendorRef": {
            "value": "62",
            "name": "Test"
          },
          "PayType": "Check",
          "CheckPayment": {
            "BankAccountRef": {
              "value": "35",
              "name": "Checking"
            }
          },
          "TotalAmt": 100,
          "PrivateNote": "Updated Note",
          "Line": [
            {
              "Amount": 100,
              "LinkedTxn": [
                {
                  "TxnId": "153",
                  "TxnType": "Bill"
                }
              ]
            }
          ]
        }
      },
      "Class-Create-Request": {
        "title": "Class-Create-Request",
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Name": "France"
        }
      },
      "Class-Update-Request": {
        "title": "Class-Update-Request",
        "required": [
          "Name",
          "SubClass",
          "FullyQualifiedName",
          "Active",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "SubClass": {
            "type": "boolean"
          },
          "FullyQualifiedName": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Name": "France-I",
          "SubClass": false,
          "FullyQualifiedName": "France",
          "Active": true,
          "domain": "QBO",
          "sparse": false,
          "Id": "5000000000000018727",
          "SyncToken": "0"
        }
      },
      "Class-Delete-Request": {
        "title": "Class-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "5000000000000018727",
          "SyncToken": "1"
        }
      },
      "CreditMemo-Create-Request": {
        "title": "CreditMemo-Create-Request",
        "required": [
          "Line",
          "CustomerRef"
        ],
        "type": "object",
        "properties": {
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line4"
            },
            "description": ""
          },
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          }
        },
        "example": {
          "Line": [
            {
              "Amount": 50,
              "DetailType": "SalesItemLineDetail",
              "SalesItemLineDetail": {
                "ItemRef": {
                  "value": "3",
                  "name": "Concrete"
                }
              }
            }
          ],
          "CustomerRef": {
            "value": "3",
            "name": "CoolCars"
          }
        }
      },
      "Line4": {
        "title": "Line4",
        "required": [
          "Amount",
          "DetailType",
          "SalesItemLineDetail"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "DetailType": {
            "type": "string"
          },
          "SalesItemLineDetail": {
            "$ref": "#/components/schemas/SalesItemLineDetail"
          }
        },
        "example": {
          "Amount": 50,
          "DetailType": "SalesItemLineDetail",
          "SalesItemLineDetail": {
            "ItemRef": {
              "value": "3",
              "name": "Concrete"
            }
          }
        }
      },
      "SalesItemLineDetail": {
        "title": "SalesItemLineDetail",
        "required": [
          "ItemRef"
        ],
        "type": "object",
        "properties": {
          "ItemRef": {
            "$ref": "#/components/schemas/ItemRef"
          }
        },
        "example": {
          "ItemRef": {
            "value": "3",
            "name": "Concrete"
          }
        }
      },
      "ItemRef": {
        "title": "ItemRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "3",
          "name": "Concrete"
        }
      },
      "CustomerRef": {
        "title": "CustomerRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "3",
          "name": "CoolCars"
        }
      },
      "CreditMemo-Update-Request": {
        "title": "CreditMemo-Update-Request",
        "required": [
          "RemainingCredit",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData",
          "CustomField",
          "DocNumber",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "Line",
          "TxnTaxDetail",
          "CustomerRef",
          "BillAddr",
          "ShipAddr",
          "TotalAmt",
          "HomeTotalAmt",
          "ApplyTaxAfterDiscount",
          "PrintStatus",
          "EmailStatus",
          "Balance"
        ],
        "type": "object",
        "properties": {
          "RemainingCredit": {
            "type": "integer",
            "format": "int32"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "CustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            },
            "description": ""
          },
          "DocNumber": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line5"
            },
            "description": ""
          },
          "TxnTaxDetail": {
            "$ref": "#/components/schemas/TxnTaxDetail"
          },
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          },
          "BillAddr": {
            "$ref": "#/components/schemas/BillAddr"
          },
          "ShipAddr": {
            "$ref": "#/components/schemas/ShipAddr"
          },
          "TotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "HomeTotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "ApplyTaxAfterDiscount": {
            "type": "boolean"
          },
          "PrintStatus": {
            "type": "string"
          },
          "EmailStatus": {
            "type": "string"
          },
          "Balance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "RemainingCredit": 50,
          "domain": "QBO",
          "sparse": false,
          "Id": "160",
          "SyncToken": "0",
          "MetaData": {
            "CreateTime": "2016-08-18T20:09:52+00:00",
            "LastUpdatedTime": "2016-08-18T20:09:52+00:00"
          },
          "CustomField": [
            {
              "DefinitionId": "1",
              "Name": "Crew #",
              "Type": "StringType"
            }
          ],
          "DocNumber": "1040-Updated",
          "TxnDate": "2016-08-18",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "Line": [
            {
              "Id": "1",
              "LineNum": 1,
              "Amount": 50,
              "DetailType": "SalesItemLineDetail",
              "SalesItemLineDetail": {
                "ItemRef": {
                  "value": "3",
                  "name": "Concrete"
                },
                "TaxCodeRef": {
                  "value": "NON"
                }
              }
            },
            {
              "Amount": 50,
              "DetailType": "SubTotalLineDetail"
            }
          ],
          "TxnTaxDetail": {
            "TotalTax": 0
          },
          "CustomerRef": {
            "value": "3",
            "name": "Cool Cars"
          },
          "BillAddr": {
            "Id": "4",
            "Line1": "65 Ocean Dr.",
            "City": "Half Moon Bay",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "94213",
            "Lat": "37.4300318",
            "Long": "-122.4336537"
          },
          "ShipAddr": {
            "Id": "4",
            "Line1": "65 Ocean Dr.",
            "City": "Half Moon Bay",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "94213",
            "Lat": "37.4300318",
            "Long": "-122.4336537"
          },
          "TotalAmt": 50,
          "HomeTotalAmt": 50,
          "ApplyTaxAfterDiscount": false,
          "PrintStatus": "NeedToPrint",
          "EmailStatus": "NotSet",
          "Balance": 50
        }
      },
      "CustomField": {
        "title": "CustomField",
        "required": [
          "DefinitionId",
          "Name",
          "Type"
        ],
        "type": "object",
        "properties": {
          "DefinitionId": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          }
        },
        "example": {
          "DefinitionId": "1",
          "Name": "Crew #",
          "Type": "StringType"
        }
      },
      "Line5": {
        "title": "Line5",
        "required": [
          "Amount",
          "DetailType"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "LineNum": {
            "type": "integer",
            "format": "int32"
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "DetailType": {
            "type": "string"
          },
          "SalesItemLineDetail": {
            "$ref": "#/components/schemas/SalesItemLineDetail1"
          },
          "SubTotalLineDetail": {
            "type": "object"
          }
        },
        "example": {
          "Id": "1",
          "LineNum": 1,
          "Amount": 50,
          "DetailType": "SalesItemLineDetail",
          "SalesItemLineDetail": {
            "ItemRef": {
              "value": "3",
              "name": "Concrete"
            },
            "TaxCodeRef": {
              "value": "NON"
            }
          }
        }
      },
      "SalesItemLineDetail1": {
        "title": "SalesItemLineDetail1",
        "required": [
          "ItemRef",
          "TaxCodeRef"
        ],
        "type": "object",
        "properties": {
          "ItemRef": {
            "$ref": "#/components/schemas/ItemRef"
          },
          "TaxCodeRef": {
            "$ref": "#/components/schemas/TaxCodeRef"
          }
        },
        "example": {
          "ItemRef": {
            "value": "3",
            "name": "Concrete"
          },
          "TaxCodeRef": {
            "value": "NON"
          }
        }
      },
      "TaxCodeRef": {
        "title": "TaxCodeRef",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "NON"
        }
      },
      "TxnTaxDetail": {
        "title": "TxnTaxDetail",
        "required": [
          "TotalTax"
        ],
        "type": "object",
        "properties": {
          "TotalTax": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "TotalTax": 0
        }
      },
      "BillAddr": {
        "title": "BillAddr",
        "required": [
          "Id",
          "Line1",
          "City",
          "CountrySubDivisionCode",
          "PostalCode",
          "Lat",
          "Long"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Line1": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "CountrySubDivisionCode": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          },
          "Lat": {
            "type": "string"
          },
          "Long": {
            "type": "string"
          }
        },
        "example": {
          "Id": "4",
          "Line1": "65 Ocean Dr.",
          "City": "Half Moon Bay",
          "CountrySubDivisionCode": "CA",
          "PostalCode": "94213",
          "Lat": "37.4300318",
          "Long": "-122.4336537"
        }
      },
      "ShipAddr": {
        "title": "ShipAddr",
        "required": [
          "Id",
          "Line1",
          "City",
          "CountrySubDivisionCode",
          "PostalCode",
          "Lat",
          "Long"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Line1": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "CountrySubDivisionCode": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          },
          "Lat": {
            "type": "string"
          },
          "Long": {
            "type": "string"
          }
        },
        "example": {
          "Id": "4",
          "Line1": "65 Ocean Dr.",
          "City": "Half Moon Bay",
          "CountrySubDivisionCode": "CA",
          "PostalCode": "94213",
          "Lat": "37.4300318",
          "Long": "-122.4336537"
        }
      },
      "CreditMemo-Delete-Request": {
        "title": "CreditMemo-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "160",
          "SyncToken": "2"
        }
      },
      "Customer-Create-Request": {
        "title": "Customer-Create-Request",
        "required": [
          "BillAddr",
          "Notes",
          "DisplayName",
          "PrimaryPhone",
          "PrimaryEmailAddr"
        ],
        "type": "object",
        "properties": {
          "BillAddr": {
            "$ref": "#/components/schemas/BillAddr1"
          },
          "Notes": {
            "type": "string"
          },
          "DisplayName": {
            "type": "string"
          },
          "PrimaryPhone": {
            "$ref": "#/components/schemas/PrimaryPhone"
          },
          "PrimaryEmailAddr": {
            "$ref": "#/components/schemas/PrimaryEmailAddr"
          }
        },
        "example": {
          "BillAddr": {
            "Line1": "123 Main Street",
            "City": "Mountain View",
            "Country": "USA",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "94042"
          },
          "Notes": "Here are other details.",
          "DisplayName": "King's Groceries1",
          "PrimaryPhone": {
            "FreeFormNumber": "(555) 555-5555"
          },
          "PrimaryEmailAddr": {
            "Address": "jdrew@myemail.com"
          }
        }
      },
      "BillAddr1": {
        "title": "BillAddr1",
        "required": [
          "Line1",
          "City",
          "Country",
          "CountrySubDivisionCode",
          "PostalCode"
        ],
        "type": "object",
        "properties": {
          "Line1": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "CountrySubDivisionCode": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          }
        },
        "example": {
          "Line1": "123 Main Street",
          "City": "Mountain View",
          "Country": "USA",
          "CountrySubDivisionCode": "CA",
          "PostalCode": "94042"
        }
      },
      "PrimaryPhone": {
        "title": "PrimaryPhone",
        "required": [
          "FreeFormNumber"
        ],
        "type": "object",
        "properties": {
          "FreeFormNumber": {
            "type": "string"
          }
        },
        "example": {
          "FreeFormNumber": "(555) 555-5555"
        }
      },
      "PrimaryEmailAddr": {
        "title": "PrimaryEmailAddr",
        "required": [
          "Address"
        ],
        "type": "object",
        "properties": {
          "Address": {
            "type": "string"
          }
        },
        "example": {
          "Address": "jdrew@myemail.com"
        }
      },
      "Customer-Update-Request": {
        "title": "Customer-Update-Request",
        "required": [
          "Taxable",
          "BillAddr",
          "Notes",
          "Job",
          "BillWithParent",
          "Balance",
          "BalanceWithJobs",
          "CurrencyRef",
          "PreferredDeliveryMethod",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "FullyQualifiedName",
          "DisplayName",
          "PrintOnCheckName",
          "Active",
          "PrimaryPhone",
          "PrimaryEmailAddr",
          "DefaultTaxCodeRef"
        ],
        "type": "object",
        "properties": {
          "Taxable": {
            "type": "boolean"
          },
          "BillAddr": {
            "$ref": "#/components/schemas/BillAddr2"
          },
          "Notes": {
            "type": "string"
          },
          "Job": {
            "type": "boolean"
          },
          "BillWithParent": {
            "type": "boolean"
          },
          "Balance": {
            "type": "integer",
            "format": "int32"
          },
          "BalanceWithJobs": {
            "type": "integer",
            "format": "int32"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "PreferredDeliveryMethod": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "FullyQualifiedName": {
            "type": "string"
          },
          "DisplayName": {
            "type": "string"
          },
          "PrintOnCheckName": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "PrimaryPhone": {
            "$ref": "#/components/schemas/PrimaryPhone"
          },
          "PrimaryEmailAddr": {
            "$ref": "#/components/schemas/PrimaryEmailAddr"
          },
          "DefaultTaxCodeRef": {
            "$ref": "#/components/schemas/DefaultTaxCodeRef"
          }
        },
        "example": {
          "Taxable": true,
          "BillAddr": {
            "Id": "100",
            "Line1": "123 Main Street",
            "City": "Mountain View",
            "Country": "USA",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "94042"
          },
          "Notes": "Here are other details.",
          "Job": false,
          "BillWithParent": false,
          "Balance": 0,
          "BalanceWithJobs": 0,
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "PreferredDeliveryMethod": "Print",
          "domain": "QBO",
          "sparse": false,
          "Id": "63",
          "SyncToken": "2",
          "FullyQualifiedName": "King's Groceries-Updated",
          "DisplayName": "King's Groceries-Updated",
          "PrintOnCheckName": "King's Groceries1",
          "Active": true,
          "PrimaryPhone": {
            "FreeFormNumber": "(555) 555-5555"
          },
          "PrimaryEmailAddr": {
            "Address": "jdrew@myemail.com"
          },
          "DefaultTaxCodeRef": {
            "value": "2"
          }
        }
      },
      "BillAddr2": {
        "title": "BillAddr2",
        "required": [
          "Id",
          "Line1",
          "City",
          "Country",
          "CountrySubDivisionCode",
          "PostalCode"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Line1": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "CountrySubDivisionCode": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          }
        },
        "example": {
          "Id": "100",
          "Line1": "123 Main Street",
          "City": "Mountain View",
          "Country": "USA",
          "CountrySubDivisionCode": "CA",
          "PostalCode": "94042"
        }
      },
      "DefaultTaxCodeRef": {
        "title": "DefaultTaxCodeRef",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "2"
        }
      },
      "Customer-Delete-Request": {
        "title": "Customer-Delete-Request",
        "required": [
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "Active"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          }
        },
        "example": {
          "domain": "QBO",
          "sparse": true,
          "Id": "67",
          "SyncToken": "0",
          "Active": false
        }
      },
      "Department-Create-Request": {
        "title": "Department-Create-Request",
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Marketing Department"
        }
      },
      "Department-Update-Request": {
        "title": "Department-Update-Request",
        "required": [
          "Name",
          "SubDepartment",
          "FullyQualifiedName",
          "Active",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "SubDepartment": {
            "type": "boolean"
          },
          "FullyQualifiedName": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Marketing Department-Updated",
          "SubDepartment": false,
          "FullyQualifiedName": "Marketing Department",
          "Active": true,
          "domain": "QBO",
          "sparse": false,
          "Id": "1",
          "SyncToken": "0"
        }
      },
      "Department-Delete-Request": {
        "title": "Department-Delete-Request",
        "required": [
          "Name",
          "SubDepartment",
          "FullyQualifiedName",
          "Active",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "SubDepartment": {
            "type": "boolean"
          },
          "FullyQualifiedName": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Marketing Department-Updated",
          "SubDepartment": false,
          "FullyQualifiedName": "Marketing Department",
          "Active": false,
          "domain": "QBO",
          "sparse": false,
          "Id": "1",
          "SyncToken": "2"
        }
      },
      "Deposit-Create-Request": {
        "title": "Deposit-Create-Request",
        "required": [
          "DepositToAccountRef",
          "Line"
        ],
        "type": "object",
        "properties": {
          "DepositToAccountRef": {
            "$ref": "#/components/schemas/DepositToAccountRef"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line6"
            },
            "description": ""
          }
        },
        "example": {
          "DepositToAccountRef": {
            "value": "35",
            "name": "Checking"
          },
          "Line": [
            {
              "Amount": 20,
              "DetailType": "DepositLineDetail",
              "DepositLineDetail": {
                "AccountRef": {
                  "value": "87",
                  "name": "Unapplied Cash Payment Income"
                }
              }
            }
          ]
        }
      },
      "DepositToAccountRef": {
        "title": "DepositToAccountRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "35",
          "name": "Checking"
        }
      },
      "Line6": {
        "title": "Line6",
        "required": [
          "Amount",
          "DetailType",
          "DepositLineDetail"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "type": "number"
          },
          "DetailType": {
            "type": "string"
          },
          "DepositLineDetail": {
            "$ref": "#/components/schemas/DepositLineDetail"
          }
        },
        "example": {
          "Amount": 20,
          "DetailType": "DepositLineDetail",
          "DepositLineDetail": {
            "AccountRef": {
              "value": "87",
              "name": "Unapplied Cash Payment Income"
            }
          }
        }
      },
      "DepositLineDetail": {
        "title": "DepositLineDetail",
        "required": [
          "AccountRef"
        ],
        "type": "object",
        "properties": {
          "AccountRef": {
            "$ref": "#/components/schemas/AccountRef2"
          }
        },
        "example": {
          "AccountRef": {
            "value": "87",
            "name": "Unapplied Cash Payment Income"
          }
        }
      },
      "AccountRef2": {
        "title": "AccountRef2",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "87",
          "name": "Unapplied Cash Payment Income"
        }
      },
      "Deposit-Update-Request": {
        "title": "Deposit-Update-Request",
        "required": [
          "DepositToAccountRef",
          "TotalAmt",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "Line"
        ],
        "type": "object",
        "properties": {
          "DepositToAccountRef": {
            "$ref": "#/components/schemas/DepositToAccountRef"
          },
          "TotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line7"
            },
            "description": ""
          }
        },
        "example": {
          "DepositToAccountRef": {
            "value": "35",
            "name": "Checking"
          },
          "TotalAmt": 205,
          "domain": "QBO",
          "sparse": false,
          "Id": "162",
          "SyncToken": "0",
          "TxnDate": "2016-08-18",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "Line": [
            {
              "Id": "1",
              "LineNum": 1,
              "Amount": 205,
              "DetailType": "DepositLineDetail",
              "DepositLineDetail": {
                "AccountRef": {
                  "value": "87",
                  "name": "Unapplied Cash Payment Income"
                }
              }
            }
          ]
        }
      },
      "Line7": {
        "title": "Line7",
        "required": [
          "Id",
          "LineNum",
          "Amount",
          "DetailType",
          "DepositLineDetail"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "LineNum": {
            "type": "integer",
            "format": "int32"
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "DetailType": {
            "type": "string"
          },
          "DepositLineDetail": {
            "$ref": "#/components/schemas/DepositLineDetail"
          }
        },
        "example": {
          "Id": "1",
          "LineNum": 1,
          "Amount": 205,
          "DetailType": "DepositLineDetail",
          "DepositLineDetail": {
            "AccountRef": {
              "value": "87",
              "name": "Unapplied Cash Payment Income"
            }
          }
        }
      },
      "Deposit-Delete-Request": {
        "title": "Deposit-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "162",
          "SyncToken": "1"
        }
      },
      "Employee-Create-Request": {
        "title": "Employee-Create-Request",
        "required": [
          "SSN",
          "PrimaryAddr",
          "GivenName",
          "FamilyName",
          "PrimaryPhone"
        ],
        "type": "object",
        "properties": {
          "SSN": {
            "type": "string"
          },
          "PrimaryAddr": {
            "$ref": "#/components/schemas/PrimaryAddr"
          },
          "GivenName": {
            "type": "string"
          },
          "FamilyName": {
            "type": "string"
          },
          "PrimaryPhone": {
            "$ref": "#/components/schemas/PrimaryPhone"
          }
        },
        "example": {
          "SSN": "444-55-6666",
          "PrimaryAddr": {
            "Id": "50",
            "Line1": "45 N. Elm Street",
            "City": "Middlefield",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "93242"
          },
          "GivenName": "John",
          "FamilyName": "Meuller",
          "PrimaryPhone": {
            "FreeFormNumber": "408-525-1234"
          }
        }
      },
      "PrimaryAddr": {
        "title": "PrimaryAddr",
        "required": [
          "Id",
          "Line1",
          "City",
          "CountrySubDivisionCode",
          "PostalCode"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Line1": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "CountrySubDivisionCode": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          }
        },
        "example": {
          "Id": "50",
          "Line1": "45 N. Elm Street",
          "City": "Middlefield",
          "CountrySubDivisionCode": "CA",
          "PostalCode": "93242"
        }
      },
      "Employee-Update-Request": {
        "title": "Employee-Update-Request",
        "required": [
          "SSN",
          "PrimaryAddr",
          "BillableTime",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData",
          "GivenName",
          "FamilyName",
          "DisplayName",
          "PrintOnCheckName",
          "Active",
          "PrimaryPhone"
        ],
        "type": "object",
        "properties": {
          "SSN": {
            "type": "string"
          },
          "PrimaryAddr": {
            "$ref": "#/components/schemas/PrimaryAddr"
          },
          "BillableTime": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "GivenName": {
            "type": "string"
          },
          "FamilyName": {
            "type": "string"
          },
          "DisplayName": {
            "type": "string"
          },
          "PrintOnCheckName": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "PrimaryPhone": {
            "$ref": "#/components/schemas/PrimaryPhone"
          }
        },
        "example": {
          "SSN": "XXX-XX-XXXX",
          "PrimaryAddr": {
            "Id": "105",
            "Line1": "45 N. Elm Street",
            "City": "Middlefield",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "93242"
          },
          "BillableTime": false,
          "domain": "QBO",
          "sparse": false,
          "Id": "68",
          "SyncToken": "0",
          "MetaData": {
            "CreateTime": "2016-08-18T23:04:16+00:00",
            "LastUpdatedTime": "2016-08-18T23:04:16+00:00"
          },
          "GivenName": "John",
          "FamilyName": "Meuller",
          "DisplayName": "John Meuller - Updated",
          "PrintOnCheckName": "John Meuller",
          "Active": true,
          "PrimaryPhone": {
            "FreeFormNumber": "408-525-1234"
          }
        }
      },
      "Employee-Delete-Request": {
        "title": "Employee-Delete-Request",
        "required": [
          "SSN",
          "PrimaryAddr",
          "BillableTime",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData",
          "GivenName",
          "FamilyName",
          "DisplayName",
          "PrintOnCheckName",
          "Active",
          "PrimaryPhone"
        ],
        "type": "object",
        "properties": {
          "SSN": {
            "type": "string"
          },
          "PrimaryAddr": {
            "$ref": "#/components/schemas/PrimaryAddr"
          },
          "BillableTime": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "GivenName": {
            "type": "string"
          },
          "FamilyName": {
            "type": "string"
          },
          "DisplayName": {
            "type": "string"
          },
          "PrintOnCheckName": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "PrimaryPhone": {
            "$ref": "#/components/schemas/PrimaryPhone"
          }
        },
        "example": {
          "SSN": "XXX-XX-XXXX",
          "PrimaryAddr": {
            "Id": "105",
            "Line1": "45 N. Elm Street",
            "City": "Middlefield",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "93242"
          },
          "BillableTime": false,
          "domain": "QBO",
          "sparse": false,
          "Id": "68",
          "SyncToken": "2",
          "MetaData": {
            "CreateTime": "2016-08-18T23:04:16+00:00",
            "LastUpdatedTime": "2016-08-18T23:04:16+00:00"
          },
          "GivenName": "John",
          "FamilyName": "Meuller",
          "DisplayName": "John Meuller - Updated",
          "PrintOnCheckName": "John Meuller",
          "Active": false,
          "PrimaryPhone": {
            "FreeFormNumber": "408-525-1234"
          }
        }
      },
      "Estimate-Create-Request": {
        "title": "Estimate-Create-Request",
        "required": [
          "Line",
          "TxnTaxDetail",
          "CustomerRef",
          "CustomerMemo",
          "TotalAmt",
          "ApplyTaxAfterDiscount",
          "PrintStatus",
          "EmailStatus",
          "BillEmail"
        ],
        "type": "object",
        "properties": {
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line8"
            },
            "description": ""
          },
          "TxnTaxDetail": {
            "$ref": "#/components/schemas/TxnTaxDetail"
          },
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          },
          "CustomerMemo": {
            "$ref": "#/components/schemas/CustomerMemo"
          },
          "TotalAmt": {
            "type": "number"
          },
          "ApplyTaxAfterDiscount": {
            "type": "boolean"
          },
          "PrintStatus": {
            "type": "string"
          },
          "EmailStatus": {
            "type": "string"
          },
          "BillEmail": {
            "$ref": "#/components/schemas/BillEmail"
          }
        },
        "example": {
          "Line": [
            {
              "Id": "1",
              "LineNum": 1,
              "Description": "Pest Control Services",
              "Amount": 35,
              "DetailType": "SalesItemLineDetail",
              "SalesItemLineDetail": {
                "ItemRef": {
                  "value": "10",
                  "name": "Pest Control"
                },
                "UnitPrice": 35,
                "Qty": 1,
                "TaxCodeRef": {
                  "value": "NON"
                }
              }
            },
            {
              "Amount": 35,
              "DetailType": "SubTotalLineDetail"
            },
            {
              "Amount": 3.5,
              "DetailType": "DiscountLineDetail",
              "DiscountLineDetail": {
                "PercentBased": true,
                "DiscountPercent": 10,
                "DiscountAccountRef": {
                  "value": "86",
                  "name": "Discounts given"
                }
              }
            }
          ],
          "TxnTaxDetail": {
            "TotalTax": 0
          },
          "CustomerRef": {
            "value": "3",
            "name": "Cool Cars"
          },
          "CustomerMemo": {
            "value": "Thank you for your business and have a great day!"
          },
          "TotalAmt": 31.5,
          "ApplyTaxAfterDiscount": false,
          "PrintStatus": "NeedToPrint",
          "EmailStatus": "NotSet",
          "BillEmail": {
            "Address": "Cool_Cars@intuit.com"
          }
        }
      },
      "Line8": {
        "title": "Line8",
        "required": [
          "Amount",
          "DetailType"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "LineNum": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "Amount": {
            "type": "number"
          },
          "DetailType": {
            "type": "string"
          },
          "SalesItemLineDetail": {
            "$ref": "#/components/schemas/SalesItemLineDetail2"
          },
          "SubTotalLineDetail": {
            "type": "object"
          },
          "DiscountLineDetail": {
            "$ref": "#/components/schemas/DiscountLineDetail"
          }
        },
        "example": {
          "Id": "1",
          "LineNum": 1,
          "Description": "Pest Control Services",
          "Amount": 35,
          "DetailType": "SalesItemLineDetail",
          "SalesItemLineDetail": {
            "ItemRef": {
              "value": "10",
              "name": "Pest Control"
            },
            "UnitPrice": 35,
            "Qty": 1,
            "TaxCodeRef": {
              "value": "NON"
            }
          }
        }
      },
      "SalesItemLineDetail2": {
        "title": "SalesItemLineDetail2",
        "required": [
          "ItemRef",
          "UnitPrice",
          "Qty",
          "TaxCodeRef"
        ],
        "type": "object",
        "properties": {
          "ItemRef": {
            "$ref": "#/components/schemas/ItemRef"
          },
          "UnitPrice": {
            "type": "integer",
            "format": "int32"
          },
          "Qty": {
            "type": "integer",
            "format": "int32"
          },
          "TaxCodeRef": {
            "$ref": "#/components/schemas/TaxCodeRef"
          }
        },
        "example": {
          "ItemRef": {
            "value": "10",
            "name": "Pest Control"
          },
          "UnitPrice": 35,
          "Qty": 1,
          "TaxCodeRef": {
            "value": "NON"
          }
        }
      },
      "DiscountLineDetail": {
        "title": "DiscountLineDetail",
        "required": [
          "PercentBased",
          "DiscountPercent",
          "DiscountAccountRef"
        ],
        "type": "object",
        "properties": {
          "PercentBased": {
            "type": "boolean"
          },
          "DiscountPercent": {
            "type": "integer",
            "format": "int32"
          },
          "DiscountAccountRef": {
            "$ref": "#/components/schemas/DiscountAccountRef"
          }
        },
        "example": {
          "PercentBased": true,
          "DiscountPercent": 10,
          "DiscountAccountRef": {
            "value": "86",
            "name": "Discounts given"
          }
        }
      },
      "DiscountAccountRef": {
        "title": "DiscountAccountRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "86",
          "name": "Discounts given"
        }
      },
      "CustomerMemo": {
        "title": "CustomerMemo",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "Thank you for your business and have a great day!"
        }
      },
      "BillEmail": {
        "title": "BillEmail",
        "required": [
          "Address"
        ],
        "type": "object",
        "properties": {
          "Address": {
            "type": "string"
          }
        },
        "example": {
          "Address": "Cool_Cars@intuit.com"
        }
      },
      "Estimate-Update-Request": {
        "title": "Estimate-Update-Request",
        "required": [
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "CustomField",
          "DocNumber",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "TxnStatus",
          "Line",
          "TxnTaxDetail",
          "CustomerRef",
          "CustomerMemo",
          "BillAddr",
          "ShipAddr",
          "TotalAmt",
          "HomeTotalAmt",
          "ApplyTaxAfterDiscount",
          "PrintStatus",
          "EmailStatus",
          "BillEmail"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "CustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            },
            "description": ""
          },
          "DocNumber": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "TxnStatus": {
            "type": "string"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line9"
            },
            "description": ""
          },
          "TxnTaxDetail": {
            "$ref": "#/components/schemas/TxnTaxDetail"
          },
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          },
          "CustomerMemo": {
            "$ref": "#/components/schemas/CustomerMemo"
          },
          "BillAddr": {
            "$ref": "#/components/schemas/BillAddr"
          },
          "ShipAddr": {
            "$ref": "#/components/schemas/ShipAddr"
          },
          "TotalAmt": {
            "type": "number"
          },
          "HomeTotalAmt": {
            "type": "number"
          },
          "ApplyTaxAfterDiscount": {
            "type": "boolean"
          },
          "PrintStatus": {
            "type": "string"
          },
          "EmailStatus": {
            "type": "string"
          },
          "BillEmail": {
            "$ref": "#/components/schemas/BillEmail"
          }
        }
      },
      "Line9": {
        "title": "Line9",
        "required": [
          "Amount",
          "DetailType"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "LineNum": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "DetailType": {
            "type": "string"
          },
          "SalesItemLineDetail": {
            "$ref": "#/components/schemas/SalesItemLineDetail2"
          },
          "SubTotalLineDetail": {
            "type": "object"
          },
          "DiscountLineDetail": {
            "$ref": "#/components/schemas/DiscountLineDetail"
          }
        },
        "example": {
          "Id": "1",
          "LineNum": 1,
          "Description": "Pest Control Services",
          "Amount": 35,
          "DetailType": "SalesItemLineDetail",
          "SalesItemLineDetail": {
            "ItemRef": {
              "value": "10",
              "name": "Pest Control"
            },
            "UnitPrice": 35,
            "Qty": 1,
            "TaxCodeRef": {
              "value": "NON"
            }
          }
        }
      },
      "Estimate-Delete-Request": {
        "title": "Estimate-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "163",
          "SyncToken": "1"
        }
      },
      "Invoice-Create-Request": {
        "title": "Invoice-Create-Request",
        "required": [
          "Line",
          "CustomerRef"
        ],
        "type": "object",
        "properties": {
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line10"
            },
            "description": ""
          },
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef4"
          }
        },
        "example": {
          "Line": [
            {
              "Amount": 100,
              "DetailType": "SalesItemLineDetail",
              "SalesItemLineDetail": {
                "ItemRef": {
                  "value": "1",
                  "name": "Services"
                }
              }
            }
          ],
          "CustomerRef": {
            "value": "1"
          }
        }
      },
      "Line10": {
        "title": "Line10",
        "required": [
          "Amount",
          "DetailType",
          "SalesItemLineDetail"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "type": "number"
          },
          "DetailType": {
            "type": "string"
          },
          "SalesItemLineDetail": {
            "$ref": "#/components/schemas/SalesItemLineDetail"
          }
        },
        "example": {
          "Amount": 100,
          "DetailType": "SalesItemLineDetail",
          "SalesItemLineDetail": {
            "ItemRef": {
              "value": "1",
              "name": "Services"
            }
          }
        }
      },
      "CustomerRef4": {
        "title": "CustomerRef4",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "1"
        }
      },
      "Invoice-Update-Request": {
        "title": "Invoice-Update-Request",
        "required": [
          "Deposit",
          "AllowIPNPayment",
          "AllowOnlinePayment",
          "AllowOnlineCreditCardPayment",
          "AllowOnlineACHPayment",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "CustomField",
          "DocNumber",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "LinkedTxn",
          "Line",
          "TxnTaxDetail",
          "CustomerRef",
          "BillAddr",
          "ShipAddr",
          "DueDate",
          "TotalAmt",
          "HomeTotalAmt",
          "ApplyTaxAfterDiscount",
          "PrintStatus",
          "EmailStatus",
          "Balance"
        ],
        "type": "object",
        "properties": {
          "Deposit": {
            "type": "integer",
            "format": "int32"
          },
          "AllowIPNPayment": {
            "type": "boolean"
          },
          "AllowOnlinePayment": {
            "type": "boolean"
          },
          "AllowOnlineCreditCardPayment": {
            "type": "boolean"
          },
          "AllowOnlineACHPayment": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "CustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            },
            "description": ""
          },
          "DocNumber": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "LinkedTxn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line5"
            },
            "description": ""
          },
          "TxnTaxDetail": {
            "$ref": "#/components/schemas/TxnTaxDetail"
          },
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          },
          "BillAddr": {
            "$ref": "#/components/schemas/BillAddr"
          },
          "ShipAddr": {
            "$ref": "#/components/schemas/ShipAddr"
          },
          "DueDate": {
            "type": "string"
          },
          "TotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "HomeTotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "ApplyTaxAfterDiscount": {
            "type": "boolean"
          },
          "PrintStatus": {
            "type": "string"
          },
          "EmailStatus": {
            "type": "string"
          },
          "Balance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "Deposit": 0,
          "AllowIPNPayment": false,
          "AllowOnlinePayment": false,
          "AllowOnlineCreditCardPayment": false,
          "AllowOnlineACHPayment": false,
          "domain": "QBO",
          "sparse": false,
          "Id": "164",
          "SyncToken": "0",
          "CustomField": [
            {
              "DefinitionId": "1",
              "Name": "Crew #",
              "Type": "StringType"
            }
          ],
          "DocNumber": "1041-Updated",
          "TxnDate": "2016-08-18",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "LinkedTxn": [],
          "Line": [
            {
              "Id": "1",
              "LineNum": 1,
              "Amount": 100,
              "DetailType": "SalesItemLineDetail",
              "SalesItemLineDetail": {
                "ItemRef": {
                  "value": "1",
                  "name": "Services"
                },
                "TaxCodeRef": {
                  "value": "NON"
                }
              }
            },
            {
              "Amount": 100,
              "DetailType": "SubTotalLineDetail"
            }
          ],
          "TxnTaxDetail": {
            "TotalTax": 0
          },
          "CustomerRef": {
            "value": "1",
            "name": "Amy's Bird Sanctuary"
          },
          "BillAddr": {
            "Id": "2",
            "Line1": "4581 Finch St.",
            "City": "Bayshore",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "94326",
            "Lat": "INVALID",
            "Long": "INVALID"
          },
          "ShipAddr": {
            "Id": "2",
            "Line1": "4581 Finch St.",
            "City": "Bayshore",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "94326",
            "Lat": "INVALID",
            "Long": "INVALID"
          },
          "DueDate": "2016-09-17",
          "TotalAmt": 100,
          "HomeTotalAmt": 100,
          "ApplyTaxAfterDiscount": false,
          "PrintStatus": "NeedToPrint",
          "EmailStatus": "NotSet",
          "Balance": 100
        }
      },
      "Invoice-Delete-Request": {
        "title": "Invoice-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "130",
          "SyncToken": "10"
        }
      },
      "Invoice-Void-Request": {
        "title": "Invoice-Void-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "173",
          "SyncToken": "2"
        }
      },
      "Item-Create-Request": {
        "title": "Item-Create-Request",
        "required": [
          "Name",
          "IncomeAccountRef",
          "ExpenseAccountRef",
          "AssetAccountRef",
          "Type",
          "TrackQtyOnHand",
          "QtyOnHand",
          "InvStartDate"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "IncomeAccountRef": {
            "$ref": "#/components/schemas/IncomeAccountRef"
          },
          "ExpenseAccountRef": {
            "$ref": "#/components/schemas/ExpenseAccountRef"
          },
          "AssetAccountRef": {
            "$ref": "#/components/schemas/AssetAccountRef"
          },
          "Type": {
            "type": "string"
          },
          "TrackQtyOnHand": {
            "type": "boolean"
          },
          "QtyOnHand": {
            "type": "integer",
            "format": "int32"
          },
          "InvStartDate": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Garden Supplies1",
          "IncomeAccountRef": {
            "value": "79",
            "name": "Sales of Product Income"
          },
          "ExpenseAccountRef": {
            "value": "80",
            "name": "Cost of Goods Sold"
          },
          "AssetAccountRef": {
            "value": "81",
            "name": "Inventory Asset"
          },
          "Type": "Inventory",
          "TrackQtyOnHand": true,
          "QtyOnHand": 10,
          "InvStartDate": "2015-01-01"
        }
      },
      "IncomeAccountRef": {
        "title": "IncomeAccountRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "79",
          "name": "Sales of Product Income"
        }
      },
      "ExpenseAccountRef": {
        "title": "ExpenseAccountRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "80",
          "name": "Cost of Goods Sold"
        }
      },
      "AssetAccountRef": {
        "title": "AssetAccountRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "81",
          "name": "Inventory Asset"
        }
      },
      "Item-Update-Request": {
        "title": "Item-Update-Request",
        "required": [
          "Name",
          "Active",
          "FullyQualifiedName",
          "Taxable",
          "UnitPrice",
          "Type",
          "IncomeAccountRef",
          "PurchaseCost",
          "ExpenseAccountRef",
          "AssetAccountRef",
          "TrackQtyOnHand",
          "QtyOnHand",
          "InvStartDate",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "FullyQualifiedName": {
            "type": "string"
          },
          "Taxable": {
            "type": "boolean"
          },
          "UnitPrice": {
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "type": "string"
          },
          "IncomeAccountRef": {
            "$ref": "#/components/schemas/IncomeAccountRef"
          },
          "PurchaseCost": {
            "type": "integer",
            "format": "int32"
          },
          "ExpenseAccountRef": {
            "$ref": "#/components/schemas/ExpenseAccountRef"
          },
          "AssetAccountRef": {
            "$ref": "#/components/schemas/AssetAccountRef"
          },
          "TrackQtyOnHand": {
            "type": "boolean"
          },
          "QtyOnHand": {
            "type": "integer",
            "format": "int32"
          },
          "InvStartDate": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Garden Supplies-Updated",
          "Active": true,
          "FullyQualifiedName": "Garden Supplies-Updated",
          "Taxable": false,
          "UnitPrice": 0,
          "Type": "Inventory",
          "IncomeAccountRef": {
            "value": "79",
            "name": "Sales of Product Income"
          },
          "PurchaseCost": 0,
          "ExpenseAccountRef": {
            "value": "80",
            "name": "Cost of Goods Sold"
          },
          "AssetAccountRef": {
            "value": "81",
            "name": "Inventory Asset"
          },
          "TrackQtyOnHand": true,
          "QtyOnHand": 10,
          "InvStartDate": "2015-01-01",
          "domain": "QBO",
          "sparse": false,
          "Id": "20",
          "SyncToken": "0"
        }
      },
      "Item-Delete-Request": {
        "title": "Item-Delete-Request",
        "required": [
          "Name",
          "Active",
          "FullyQualifiedName",
          "Taxable",
          "UnitPrice",
          "Type",
          "IncomeAccountRef",
          "PurchaseCost",
          "ExpenseAccountRef",
          "AssetAccountRef",
          "TrackQtyOnHand",
          "QtyOnHand",
          "InvStartDate",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "FullyQualifiedName": {
            "type": "string"
          },
          "Taxable": {
            "type": "boolean"
          },
          "UnitPrice": {
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "type": "string"
          },
          "IncomeAccountRef": {
            "$ref": "#/components/schemas/IncomeAccountRef"
          },
          "PurchaseCost": {
            "type": "integer",
            "format": "int32"
          },
          "ExpenseAccountRef": {
            "$ref": "#/components/schemas/ExpenseAccountRef"
          },
          "AssetAccountRef": {
            "$ref": "#/components/schemas/AssetAccountRef"
          },
          "TrackQtyOnHand": {
            "type": "boolean"
          },
          "QtyOnHand": {
            "type": "integer",
            "format": "int32"
          },
          "InvStartDate": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Garden Supplies-Updated",
          "Active": false,
          "FullyQualifiedName": "Garden Supplies-Updated",
          "Taxable": false,
          "UnitPrice": 0,
          "Type": "Inventory",
          "IncomeAccountRef": {
            "value": "79",
            "name": "Sales of Product Income"
          },
          "PurchaseCost": 0,
          "ExpenseAccountRef": {
            "value": "80",
            "name": "Cost of Goods Sold"
          },
          "AssetAccountRef": {
            "value": "81",
            "name": "Inventory Asset"
          },
          "TrackQtyOnHand": true,
          "QtyOnHand": 10,
          "InvStartDate": "2015-01-01",
          "domain": "QBO",
          "sparse": false,
          "Id": "20",
          "SyncToken": "0"
        }
      },
      "JournalEntry-Create-Request": {
        "title": "JournalEntry-Create-Request",
        "required": [
          "Line"
        ],
        "type": "object",
        "properties": {
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line12"
            },
            "description": ""
          }
        },
        "example": {
          "Line": [
            {
              "Id": "0",
              "Description": "nov portion of rider insurance",
              "Amount": 100,
              "DetailType": "JournalEntryLineDetail",
              "JournalEntryLineDetail": {
                "PostingType": "Debit",
                "AccountRef": {
                  "value": "39",
                  "name": "Opening Bal Equity"
                }
              }
            },
            {
              "Description": "nov portion of rider insurance",
              "Amount": 100,
              "DetailType": "JournalEntryLineDetail",
              "JournalEntryLineDetail": {
                "PostingType": "Credit",
                "AccountRef": {
                  "value": "44",
                  "name": "Notes Payable"
                }
              }
            }
          ]
        }
      },
      "Line12": {
        "title": "Line12",
        "required": [
          "Description",
          "Amount",
          "DetailType",
          "JournalEntryLineDetail"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Amount": {
            "type": "number"
          },
          "DetailType": {
            "type": "string"
          },
          "JournalEntryLineDetail": {
            "$ref": "#/components/schemas/JournalEntryLineDetail"
          }
        },
        "example": {
          "Id": "0",
          "Description": "nov portion of rider insurance",
          "Amount": 100,
          "DetailType": "JournalEntryLineDetail",
          "JournalEntryLineDetail": {
            "PostingType": "Debit",
            "AccountRef": {
              "value": "39",
              "name": "Opening Bal Equity"
            }
          }
        }
      },
      "JournalEntryLineDetail": {
        "title": "JournalEntryLineDetail",
        "required": [
          "PostingType",
          "AccountRef"
        ],
        "type": "object",
        "properties": {
          "PostingType": {
            "type": "string"
          },
          "AccountRef": {
            "$ref": "#/components/schemas/AccountRef2"
          }
        },
        "example": {
          "PostingType": "Debit",
          "AccountRef": {
            "value": "39",
            "name": "Opening Bal Equity"
          }
        }
      },
      "JournalEntry-Update-Request": {
        "title": "JournalEntry-Update-Request",
        "required": [
          "Adjustment",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "Line",
          "TxnTaxDetail"
        ],
        "type": "object",
        "properties": {
          "Adjustment": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line13"
            },
            "description": ""
          },
          "TxnTaxDetail": {
            "type": "object"
          }
        },
        "example": {
          "Adjustment": false,
          "domain": "QBO",
          "sparse": false,
          "Id": "167",
          "SyncToken": "0",
          "TxnDate": "2016-08-19",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "Line": [
            {
              "Id": "0",
              "Description": "nov portion of rider insurance-updated",
              "Amount": 100,
              "DetailType": "JournalEntryLineDetail",
              "JournalEntryLineDetail": {
                "PostingType": "Debit",
                "AccountRef": {
                  "value": "39",
                  "name": "Truck:Depreciation"
                }
              }
            },
            {
              "Id": "1",
              "Description": "nov portion of rider insurance-updated",
              "Amount": 100,
              "DetailType": "JournalEntryLineDetail",
              "JournalEntryLineDetail": {
                "PostingType": "Credit",
                "AccountRef": {
                  "value": "44",
                  "name": "Notes Payable"
                }
              }
            }
          ]
        }
      },
      "Line13": {
        "title": "Line13",
        "required": [
          "Id",
          "Description",
          "Amount",
          "DetailType",
          "JournalEntryLineDetail"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "DetailType": {
            "type": "string"
          },
          "JournalEntryLineDetail": {
            "$ref": "#/components/schemas/JournalEntryLineDetail"
          }
        },
        "example": {
          "Id": "0",
          "Description": "nov portion of rider insurance-updated",
          "Amount": 100,
          "DetailType": "JournalEntryLineDetail",
          "JournalEntryLineDetail": {
            "PostingType": "Debit",
            "AccountRef": {
              "value": "39",
              "name": "Truck:Depreciation"
            }
          }
        }
      },
      "JournalEntry-Delete-Request": {
        "title": "JournalEntry-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "167",
          "SyncToken": "0"
        }
      },
      "Payment-Create-Request": {
        "title": "Payment-Create-Request",
        "required": [
          "CustomerRef",
          "TotalAmt",
          "Line"
        ],
        "type": "object",
        "properties": {
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          },
          "TotalAmt": {
            "type": "number"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line2"
            },
            "description": ""
          }
        },
        "example": {
          "CustomerRef": {
            "value": "58",
            "name": "TEST123"
          },
          "TotalAmt": 100,
          "Line": [
            {
              "Amount": 100,
              "LinkedTxn": [
                {
                  "TxnId": "173",
                  "TxnType": "Invoice"
                }
              ]
            }
          ]
        }
      },
      "Payment-Update-Request": {
        "title": "Payment-Update-Request",
        "required": [
          "CustomerRef",
          "DepositToAccountRef",
          "TotalAmt",
          "UnappliedAmt",
          "ProcessPayment",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "Line"
        ],
        "type": "object",
        "properties": {
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          },
          "DepositToAccountRef": {
            "$ref": "#/components/schemas/DepositToAccountRef2"
          },
          "TotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "UnappliedAmt": {
            "type": "integer",
            "format": "int32"
          },
          "ProcessPayment": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line15"
            },
            "description": ""
          }
        },
        "example": {
          "CustomerRef": {
            "value": "58",
            "name": "TEST123"
          },
          "DepositToAccountRef": {
            "value": "4"
          },
          "TotalAmt": 100,
          "UnappliedAmt": 0,
          "ProcessPayment": false,
          "domain": "QBO",
          "sparse": false,
          "Id": "174",
          "SyncToken": "0",
          "TxnDate": "2016-08-29",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "Line": [
            {
              "Amount": 100,
              "LinkedTxn": [
                {
                  "TxnId": "173",
                  "TxnType": "Invoice"
                }
              ],
              "LineEx": {
                "any": [
                  {
                    "name": "{http://schema.intuit.com/finance/v3}NameValue",
                    "declaredType": "com.intuit.schema.finance.v3.NameValue",
                    "scope": "javax.xml.bind.JAXBElement$GlobalScope",
                    "value": {
                      "Name": "txnId",
                      "Value": "173"
                    },
                    "nil": false,
                    "globalScope": true,
                    "typeSubstituted": false
                  },
                  {
                    "name": "{http://schema.intuit.com/finance/v3}NameValue",
                    "declaredType": "com.intuit.schema.finance.v3.NameValue",
                    "scope": "javax.xml.bind.JAXBElement$GlobalScope",
                    "value": {
                      "Name": "txnOpenBalance",
                      "Value": "100.00"
                    },
                    "nil": false,
                    "globalScope": true,
                    "typeSubstituted": false
                  },
                  {
                    "name": "{http://schema.intuit.com/finance/v3}NameValue",
                    "declaredType": "com.intuit.schema.finance.v3.NameValue",
                    "scope": "javax.xml.bind.JAXBElement$GlobalScope",
                    "value": {
                      "Name": "txnReferenceNumber",
                      "Value": "1043"
                    },
                    "nil": false,
                    "globalScope": true,
                    "typeSubstituted": false
                  }
                ]
              }
            }
          ]
        }
      },
      "DepositToAccountRef2": {
        "title": "DepositToAccountRef2",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "4"
        }
      },
      "Line15": {
        "title": "Line15",
        "required": [
          "Amount",
          "LinkedTxn",
          "LineEx"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "LinkedTxn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedTxn"
            },
            "description": ""
          },
          "LineEx": {
            "$ref": "#/components/schemas/LineEx"
          }
        },
        "example": {
          "Amount": 100,
          "LinkedTxn": [
            {
              "TxnId": "173",
              "TxnType": "Invoice"
            }
          ],
          "LineEx": {
            "any": [
              {
                "name": "{http://schema.intuit.com/finance/v3}NameValue",
                "declaredType": "com.intuit.schema.finance.v3.NameValue",
                "scope": "javax.xml.bind.JAXBElement$GlobalScope",
                "value": {
                  "Name": "txnId",
                  "Value": "173"
                },
                "nil": false,
                "globalScope": true,
                "typeSubstituted": false
              },
              {
                "name": "{http://schema.intuit.com/finance/v3}NameValue",
                "declaredType": "com.intuit.schema.finance.v3.NameValue",
                "scope": "javax.xml.bind.JAXBElement$GlobalScope",
                "value": {
                  "Name": "txnOpenBalance",
                  "Value": "100.00"
                },
                "nil": false,
                "globalScope": true,
                "typeSubstituted": false
              },
              {
                "name": "{http://schema.intuit.com/finance/v3}NameValue",
                "declaredType": "com.intuit.schema.finance.v3.NameValue",
                "scope": "javax.xml.bind.JAXBElement$GlobalScope",
                "value": {
                  "Name": "txnReferenceNumber",
                  "Value": "1043"
                },
                "nil": false,
                "globalScope": true,
                "typeSubstituted": false
              }
            ]
          }
        }
      },
      "LineEx": {
        "title": "LineEx",
        "required": [
          "any"
        ],
        "type": "object",
        "properties": {
          "any": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Any"
            },
            "description": ""
          }
        },
        "example": {
          "any": [
            {
              "name": "{http://schema.intuit.com/finance/v3}NameValue",
              "declaredType": "com.intuit.schema.finance.v3.NameValue",
              "scope": "javax.xml.bind.JAXBElement$GlobalScope",
              "value": {
                "Name": "txnId",
                "Value": "173"
              },
              "nil": false,
              "globalScope": true,
              "typeSubstituted": false
            },
            {
              "name": "{http://schema.intuit.com/finance/v3}NameValue",
              "declaredType": "com.intuit.schema.finance.v3.NameValue",
              "scope": "javax.xml.bind.JAXBElement$GlobalScope",
              "value": {
                "Name": "txnOpenBalance",
                "Value": "100.00"
              },
              "nil": false,
              "globalScope": true,
              "typeSubstituted": false
            },
            {
              "name": "{http://schema.intuit.com/finance/v3}NameValue",
              "declaredType": "com.intuit.schema.finance.v3.NameValue",
              "scope": "javax.xml.bind.JAXBElement$GlobalScope",
              "value": {
                "Name": "txnReferenceNumber",
                "Value": "1043"
              },
              "nil": false,
              "globalScope": true,
              "typeSubstituted": false
            }
          ]
        }
      },
      "Any": {
        "title": "Any",
        "required": [
          "name",
          "declaredType",
          "scope",
          "value",
          "nil",
          "globalScope",
          "typeSubstituted"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "declaredType": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/Value"
          },
          "nil": {
            "type": "boolean"
          },
          "globalScope": {
            "type": "boolean"
          },
          "typeSubstituted": {
            "type": "boolean"
          }
        },
        "example": {
          "name": "{http://schema.intuit.com/finance/v3}NameValue",
          "declaredType": "com.intuit.schema.finance.v3.NameValue",
          "scope": "javax.xml.bind.JAXBElement$GlobalScope",
          "value": {
            "Name": "txnId",
            "Value": "173"
          },
          "nil": false,
          "globalScope": true,
          "typeSubstituted": false
        }
      },
      "Value": {
        "title": "Value",
        "required": [
          "Name",
          "Value"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        },
        "example": {
          "Name": "txnId",
          "Value": "173"
        }
      },
      "Payment-Delete-Request": {
        "title": "Payment-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "174",
          "SyncToken": "1"
        }
      },
      "PaymentMethod-Create-Request": {
        "title": "PaymentMethod-Create-Request",
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Business Check"
        }
      },
      "PaymentMethod-Update-Request": {
        "title": "PaymentMethod-Update-Request",
        "required": [
          "Name",
          "Active",
          "Type",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "Type": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          }
        },
        "example": {
          "Name": "Business Check-Updated",
          "Active": true,
          "Type": "NON_CREDIT_CARD",
          "domain": "QBO",
          "sparse": false,
          "Id": "8",
          "SyncToken": "0",
          "MetaData": {
            "CreateTime": "2016-08-24T03:09:50+00:00",
            "LastUpdatedTime": "2016-08-24T03:09:50+00:00"
          }
        }
      },
      "PaymentMethod-Delete-Request": {
        "title": "PaymentMethod-Delete-Request",
        "required": [
          "Name",
          "Active",
          "Type",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "Type": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          }
        },
        "example": {
          "Name": "Business Check-Updated",
          "Active": false,
          "Type": "NON_CREDIT_CARD",
          "domain": "QBO",
          "sparse": false,
          "Id": "8",
          "SyncToken": "0",
          "MetaData": {
            "CreateTime": "2016-08-24T03:09:50+00:00",
            "LastUpdatedTime": "2016-08-24T03:09:50+00:00"
          }
        }
      },
      "Preference-Update-Request": {
        "title": "Preference-Update-Request",
        "required": [
          "AccountingInfoPrefs",
          "ProductAndServicesPrefs",
          "SalesFormsPrefs",
          "EmailMessagesPrefs",
          "VendorAndPurchasesPrefs",
          "TimeTrackingPrefs",
          "TaxPrefs",
          "CurrencyPrefs",
          "ReportPrefs",
          "OtherPrefs",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData"
        ],
        "type": "object",
        "properties": {
          "AccountingInfoPrefs": {
            "$ref": "#/components/schemas/AccountingInfoPrefs"
          },
          "ProductAndServicesPrefs": {
            "$ref": "#/components/schemas/ProductAndServicesPrefs"
          },
          "SalesFormsPrefs": {
            "$ref": "#/components/schemas/SalesFormsPrefs"
          },
          "EmailMessagesPrefs": {
            "$ref": "#/components/schemas/EmailMessagesPrefs"
          },
          "VendorAndPurchasesPrefs": {
            "$ref": "#/components/schemas/VendorAndPurchasesPrefs"
          },
          "TimeTrackingPrefs": {
            "$ref": "#/components/schemas/TimeTrackingPrefs"
          },
          "TaxPrefs": {
            "$ref": "#/components/schemas/TaxPrefs"
          },
          "CurrencyPrefs": {
            "$ref": "#/components/schemas/CurrencyPrefs"
          },
          "ReportPrefs": {
            "$ref": "#/components/schemas/ReportPrefs"
          },
          "OtherPrefs": {
            "$ref": "#/components/schemas/OtherPrefs"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          }
        },
        "example": {
          "AccountingInfoPrefs": {
            "TrackDepartments": true,
            "DepartmentTerminology": "Location",
            "ClassTrackingPerTxn": false,
            "ClassTrackingPerTxnLine": true,
            "CustomerTerminology": "Customers"
          },
          "ProductAndServicesPrefs": {
            "ForSales": true,
            "ForPurchase": true,
            "QuantityWithPriceAndRate": true,
            "QuantityOnHand": true
          },
          "SalesFormsPrefs": {
            "CustomField": [
              {
                "CustomField": [
                  {
                    "Name": "SalesFormsPrefs.UseSalesCustom3",
                    "Type": "BooleanType",
                    "BooleanValue": false
                  },
                  {
                    "Name": "SalesFormsPrefs.UseSalesCustom2",
                    "Type": "BooleanType",
                    "BooleanValue": false
                  },
                  {
                    "Name": "SalesFormsPrefs.UseSalesCustom1",
                    "Type": "BooleanType",
                    "BooleanValue": true
                  }
                ]
              },
              {
                "CustomField": [
                  {
                    "Name": "SalesFormsPrefs.SalesCustomName1",
                    "Type": "StringType",
                    "StringValue": "Crew #"
                  }
                ]
              }
            ],
            "CustomTxnNumbers": false,
            "AllowDeposit": true,
            "AllowDiscount": true,
            "DefaultDiscountAccount": "86",
            "AllowEstimates": true,
            "ETransactionEnabledStatus": "NotApplicable",
            "ETransactionAttachPDF": false,
            "ETransactionPaymentEnabled": false,
            "IPNSupportEnabled": false,
            "AllowServiceDate": false,
            "AllowShipping": false,
            "DefaultTerms": {
              "value": "3"
            },
            "DefaultCustomerMessage": "Thank you for your business and have a great day!"
          },
          "EmailMessagesPrefs": {
            "InvoiceMessage": {
              "Subject": "Invoice from Craig's Design and Landscaping Services",
              "Message": "Your invoice is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
            },
            "EstimateMessage": {
              "Subject": "Estimate from Craig's Design and Landscaping Services",
              "Message": "Please review the estimate below.  Feel free to contact us if you have any questions.\nWe look forward to working with you.\n\nSincerely,\nCraig's Design and Landscaping Services"
            },
            "SalesReceiptMessage": {
              "Subject": "Sales Receipt from Craig's Design and Landscaping Services",
              "Message": "Your sales receipt is attached.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
            },
            "StatementMessage": {
              "Subject": "Statement from Craig's Design and Landscaping Services",
              "Message": "Your statement is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
            }
          },
          "VendorAndPurchasesPrefs": {
            "TrackingByCustomer": true,
            "BillableExpenseTracking": true,
            "POCustomField": [
              {
                "CustomField": [
                  {
                    "Name": "PurchasePrefs.UsePurchaseCustom3",
                    "Type": "BooleanType",
                    "BooleanValue": false
                  },
                  {
                    "Name": "PurchasePrefs.UsePurchaseCustom2",
                    "Type": "BooleanType",
                    "BooleanValue": true
                  },
                  {
                    "Name": "PurchasePrefs.UsePurchaseCustom1",
                    "Type": "BooleanType",
                    "BooleanValue": true
                  }
                ]
              },
              {
                "CustomField": [
                  {
                    "Name": "PurchasePrefs.PurchaseCustomName2",
                    "Type": "StringType",
                    "StringValue": "Sales Rep"
                  },
                  {
                    "Name": "PurchasePrefs.PurchaseCustomName1",
                    "Type": "StringType",
                    "StringValue": "Crew #"
                  }
                ]
              }
            ]
          },
          "TimeTrackingPrefs": {
            "UseServices": true,
            "BillCustomers": true,
            "ShowBillRateToAll": false,
            "WorkWeekStartDate": "Monday",
            "MarkTimeEntriesBillable": true
          },
          "TaxPrefs": {
            "UsingSalesTax": true,
            "TaxGroupCodeRef": {
              "value": "2"
            }
          },
          "CurrencyPrefs": {
            "MultiCurrencyEnabled": true,
            "HomeCurrency": {
              "value": "USD"
            }
          },
          "ReportPrefs": {
            "ReportBasis": "Accrual",
            "CalcAgingReportFromTxnDate": false
          },
          "OtherPrefs": {
            "NameValue": [
              {
                "Name": "SalesFormsPrefs.DefaultCustomerMessage",
                "Value": "Thank you for your business and have a great day!"
              },
              {
                "Name": "SalesFormsPrefs.DefaultItem",
                "Value": "1"
              },
              {
                "Name": "DTXCopyMemo",
                "Value": "false"
              },
              {
                "Name": "UncategorizedAssetAccountId",
                "Value": "32"
              },
              {
                "Name": "UncategorizedIncomeAccountId",
                "Value": "30"
              },
              {
                "Name": "UncategorizedExpenseAccountId",
                "Value": "31"
              },
              {
                "Name": "MasAccountId",
                "Value": "35"
              },
              {
                "Name": "SFCEnabled",
                "Value": "true"
              }
            ]
          },
          "domain": "QBO",
          "sparse": false,
          "Id": "1",
          "SyncToken": "4",
          "MetaData": {
            "CreateTime": "2016-01-13T09:07:08+00:00",
            "LastUpdatedTime": "2016-08-24T03:12:45+00:00"
          }
        }
      },
      "AccountingInfoPrefs": {
        "title": "AccountingInfoPrefs",
        "required": [
          "TrackDepartments",
          "DepartmentTerminology",
          "ClassTrackingPerTxn",
          "ClassTrackingPerTxnLine",
          "CustomerTerminology"
        ],
        "type": "object",
        "properties": {
          "TrackDepartments": {
            "type": "boolean"
          },
          "DepartmentTerminology": {
            "type": "string"
          },
          "ClassTrackingPerTxn": {
            "type": "boolean"
          },
          "ClassTrackingPerTxnLine": {
            "type": "boolean"
          },
          "CustomerTerminology": {
            "type": "string"
          }
        },
        "example": {
          "TrackDepartments": true,
          "DepartmentTerminology": "Location",
          "ClassTrackingPerTxn": false,
          "ClassTrackingPerTxnLine": true,
          "CustomerTerminology": "Customers"
        }
      },
      "ProductAndServicesPrefs": {
        "title": "ProductAndServicesPrefs",
        "required": [
          "ForSales",
          "ForPurchase",
          "QuantityWithPriceAndRate",
          "QuantityOnHand"
        ],
        "type": "object",
        "properties": {
          "ForSales": {
            "type": "boolean"
          },
          "ForPurchase": {
            "type": "boolean"
          },
          "QuantityWithPriceAndRate": {
            "type": "boolean"
          },
          "QuantityOnHand": {
            "type": "boolean"
          }
        },
        "example": {
          "ForSales": true,
          "ForPurchase": true,
          "QuantityWithPriceAndRate": true,
          "QuantityOnHand": true
        }
      },
      "SalesFormsPrefs": {
        "title": "SalesFormsPrefs",
        "required": [
          "CustomField",
          "CustomTxnNumbers",
          "AllowDeposit",
          "AllowDiscount",
          "DefaultDiscountAccount",
          "AllowEstimates",
          "ETransactionEnabledStatus",
          "ETransactionAttachPDF",
          "ETransactionPaymentEnabled",
          "IPNSupportEnabled",
          "AllowServiceDate",
          "AllowShipping",
          "DefaultTerms",
          "DefaultCustomerMessage"
        ],
        "type": "object",
        "properties": {
          "CustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField3"
            },
            "description": ""
          },
          "CustomTxnNumbers": {
            "type": "boolean"
          },
          "AllowDeposit": {
            "type": "boolean"
          },
          "AllowDiscount": {
            "type": "boolean"
          },
          "DefaultDiscountAccount": {
            "type": "string"
          },
          "AllowEstimates": {
            "type": "boolean"
          },
          "ETransactionEnabledStatus": {
            "type": "string"
          },
          "ETransactionAttachPDF": {
            "type": "boolean"
          },
          "ETransactionPaymentEnabled": {
            "type": "boolean"
          },
          "IPNSupportEnabled": {
            "type": "boolean"
          },
          "AllowServiceDate": {
            "type": "boolean"
          },
          "AllowShipping": {
            "type": "boolean"
          },
          "DefaultTerms": {
            "$ref": "#/components/schemas/DefaultTerms"
          },
          "DefaultCustomerMessage": {
            "type": "string"
          }
        },
        "example": {
          "CustomField": [
            {
              "CustomField": [
                {
                  "Name": "SalesFormsPrefs.UseSalesCustom3",
                  "Type": "BooleanType",
                  "BooleanValue": false
                },
                {
                  "Name": "SalesFormsPrefs.UseSalesCustom2",
                  "Type": "BooleanType",
                  "BooleanValue": false
                },
                {
                  "Name": "SalesFormsPrefs.UseSalesCustom1",
                  "Type": "BooleanType",
                  "BooleanValue": true
                }
              ]
            },
            {
              "CustomField": [
                {
                  "Name": "SalesFormsPrefs.SalesCustomName1",
                  "Type": "StringType",
                  "StringValue": "Crew #"
                }
              ]
            }
          ],
          "CustomTxnNumbers": false,
          "AllowDeposit": true,
          "AllowDiscount": true,
          "DefaultDiscountAccount": "86",
          "AllowEstimates": true,
          "ETransactionEnabledStatus": "NotApplicable",
          "ETransactionAttachPDF": false,
          "ETransactionPaymentEnabled": false,
          "IPNSupportEnabled": false,
          "AllowServiceDate": false,
          "AllowShipping": false,
          "DefaultTerms": {
            "value": "3"
          },
          "DefaultCustomerMessage": "Thank you for your business and have a great day!"
        }
      },
      "CustomField3": {
        "title": "CustomField3",
        "required": [
          "CustomField"
        ],
        "type": "object",
        "properties": {
          "CustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField4"
            },
            "description": ""
          }
        },
        "example": {
          "CustomField": [
            {
              "Name": "SalesFormsPrefs.UseSalesCustom3",
              "Type": "BooleanType",
              "BooleanValue": false
            },
            {
              "Name": "SalesFormsPrefs.UseSalesCustom2",
              "Type": "BooleanType",
              "BooleanValue": false
            },
            {
              "Name": "SalesFormsPrefs.UseSalesCustom1",
              "Type": "BooleanType",
              "BooleanValue": true
            }
          ]
        }
      },
      "CustomField4": {
        "title": "CustomField4",
        "required": [
          "Name",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "BooleanValue": {
            "type": "boolean"
          },
          "StringValue": {
            "type": "string"
          }
        },
        "example": {
          "Name": "SalesFormsPrefs.UseSalesCustom3",
          "Type": "BooleanType",
          "BooleanValue": false
        }
      },
      "DefaultTerms": {
        "title": "DefaultTerms",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "3"
        }
      },
      "EmailMessagesPrefs": {
        "title": "EmailMessagesPrefs",
        "required": [
          "InvoiceMessage",
          "EstimateMessage",
          "SalesReceiptMessage",
          "StatementMessage"
        ],
        "type": "object",
        "properties": {
          "InvoiceMessage": {
            "$ref": "#/components/schemas/InvoiceMessage"
          },
          "EstimateMessage": {
            "$ref": "#/components/schemas/EstimateMessage"
          },
          "SalesReceiptMessage": {
            "$ref": "#/components/schemas/SalesReceiptMessage"
          },
          "StatementMessage": {
            "$ref": "#/components/schemas/StatementMessage"
          }
        },
        "example": {
          "InvoiceMessage": {
            "Subject": "Invoice from Craig's Design and Landscaping Services",
            "Message": "Your invoice is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
          },
          "EstimateMessage": {
            "Subject": "Estimate from Craig's Design and Landscaping Services",
            "Message": "Please review the estimate below.  Feel free to contact us if you have any questions.\nWe look forward to working with you.\n\nSincerely,\nCraig's Design and Landscaping Services"
          },
          "SalesReceiptMessage": {
            "Subject": "Sales Receipt from Craig's Design and Landscaping Services",
            "Message": "Your sales receipt is attached.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
          },
          "StatementMessage": {
            "Subject": "Statement from Craig's Design and Landscaping Services",
            "Message": "Your statement is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
          }
        }
      },
      "InvoiceMessage": {
        "title": "InvoiceMessage",
        "required": [
          "Subject",
          "Message"
        ],
        "type": "object",
        "properties": {
          "Subject": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          }
        },
        "example": {
          "Subject": "Invoice from Craig's Design and Landscaping Services",
          "Message": "Your invoice is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
        }
      },
      "EstimateMessage": {
        "title": "EstimateMessage",
        "required": [
          "Subject",
          "Message"
        ],
        "type": "object",
        "properties": {
          "Subject": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          }
        },
        "example": {
          "Subject": "Estimate from Craig's Design and Landscaping Services",
          "Message": "Please review the estimate below.  Feel free to contact us if you have any questions.\nWe look forward to working with you.\n\nSincerely,\nCraig's Design and Landscaping Services"
        }
      },
      "SalesReceiptMessage": {
        "title": "SalesReceiptMessage",
        "required": [
          "Subject",
          "Message"
        ],
        "type": "object",
        "properties": {
          "Subject": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          }
        },
        "example": {
          "Subject": "Sales Receipt from Craig's Design and Landscaping Services",
          "Message": "Your sales receipt is attached.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
        }
      },
      "StatementMessage": {
        "title": "StatementMessage",
        "required": [
          "Subject",
          "Message"
        ],
        "type": "object",
        "properties": {
          "Subject": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          }
        },
        "example": {
          "Subject": "Statement from Craig's Design and Landscaping Services",
          "Message": "Your statement is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
        }
      },
      "VendorAndPurchasesPrefs": {
        "title": "VendorAndPurchasesPrefs",
        "required": [
          "TrackingByCustomer",
          "BillableExpenseTracking",
          "POCustomField"
        ],
        "type": "object",
        "properties": {
          "TrackingByCustomer": {
            "type": "boolean"
          },
          "BillableExpenseTracking": {
            "type": "boolean"
          },
          "POCustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POCustomField"
            },
            "description": ""
          }
        },
        "example": {
          "TrackingByCustomer": true,
          "BillableExpenseTracking": true,
          "POCustomField": [
            {
              "CustomField": [
                {
                  "Name": "PurchasePrefs.UsePurchaseCustom3",
                  "Type": "BooleanType",
                  "BooleanValue": false
                },
                {
                  "Name": "PurchasePrefs.UsePurchaseCustom2",
                  "Type": "BooleanType",
                  "BooleanValue": true
                },
                {
                  "Name": "PurchasePrefs.UsePurchaseCustom1",
                  "Type": "BooleanType",
                  "BooleanValue": true
                }
              ]
            },
            {
              "CustomField": [
                {
                  "Name": "PurchasePrefs.PurchaseCustomName2",
                  "Type": "StringType",
                  "StringValue": "Sales Rep"
                },
                {
                  "Name": "PurchasePrefs.PurchaseCustomName1",
                  "Type": "StringType",
                  "StringValue": "Crew #"
                }
              ]
            }
          ]
        }
      },
      "POCustomField": {
        "title": "POCustomField",
        "required": [
          "CustomField"
        ],
        "type": "object",
        "properties": {
          "CustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField4"
            },
            "description": ""
          }
        },
        "example": {
          "CustomField": [
            {
              "Name": "PurchasePrefs.UsePurchaseCustom3",
              "Type": "BooleanType",
              "BooleanValue": false
            },
            {
              "Name": "PurchasePrefs.UsePurchaseCustom2",
              "Type": "BooleanType",
              "BooleanValue": true
            },
            {
              "Name": "PurchasePrefs.UsePurchaseCustom1",
              "Type": "BooleanType",
              "BooleanValue": true
            }
          ]
        }
      },
      "TimeTrackingPrefs": {
        "title": "TimeTrackingPrefs",
        "required": [
          "UseServices",
          "BillCustomers",
          "ShowBillRateToAll",
          "WorkWeekStartDate",
          "MarkTimeEntriesBillable"
        ],
        "type": "object",
        "properties": {
          "UseServices": {
            "type": "boolean"
          },
          "BillCustomers": {
            "type": "boolean"
          },
          "ShowBillRateToAll": {
            "type": "boolean"
          },
          "WorkWeekStartDate": {
            "type": "string"
          },
          "MarkTimeEntriesBillable": {
            "type": "boolean"
          }
        },
        "example": {
          "UseServices": true,
          "BillCustomers": true,
          "ShowBillRateToAll": false,
          "WorkWeekStartDate": "Monday",
          "MarkTimeEntriesBillable": true
        }
      },
      "TaxPrefs": {
        "title": "TaxPrefs",
        "required": [
          "UsingSalesTax",
          "TaxGroupCodeRef"
        ],
        "type": "object",
        "properties": {
          "UsingSalesTax": {
            "type": "boolean"
          },
          "TaxGroupCodeRef": {
            "$ref": "#/components/schemas/TaxGroupCodeRef"
          }
        },
        "example": {
          "UsingSalesTax": true,
          "TaxGroupCodeRef": {
            "value": "2"
          }
        }
      },
      "TaxGroupCodeRef": {
        "title": "TaxGroupCodeRef",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "2"
        }
      },
      "CurrencyPrefs": {
        "title": "CurrencyPrefs",
        "required": [
          "MultiCurrencyEnabled",
          "HomeCurrency"
        ],
        "type": "object",
        "properties": {
          "MultiCurrencyEnabled": {
            "type": "boolean"
          },
          "HomeCurrency": {
            "$ref": "#/components/schemas/HomeCurrency"
          }
        },
        "example": {
          "MultiCurrencyEnabled": true,
          "HomeCurrency": {
            "value": "USD"
          }
        }
      },
      "HomeCurrency": {
        "title": "HomeCurrency",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "USD"
        }
      },
      "ReportPrefs": {
        "title": "ReportPrefs",
        "required": [
          "ReportBasis",
          "CalcAgingReportFromTxnDate"
        ],
        "type": "object",
        "properties": {
          "ReportBasis": {
            "type": "string"
          },
          "CalcAgingReportFromTxnDate": {
            "type": "boolean"
          }
        },
        "example": {
          "ReportBasis": "Accrual",
          "CalcAgingReportFromTxnDate": false
        }
      },
      "OtherPrefs": {
        "title": "OtherPrefs",
        "required": [
          "NameValue"
        ],
        "type": "object",
        "properties": {
          "NameValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValue"
            },
            "description": ""
          }
        },
        "example": {
          "NameValue": [
            {
              "Name": "SalesFormsPrefs.DefaultCustomerMessage",
              "Value": "Thank you for your business and have a great day!"
            },
            {
              "Name": "SalesFormsPrefs.DefaultItem",
              "Value": "1"
            },
            {
              "Name": "DTXCopyMemo",
              "Value": "false"
            },
            {
              "Name": "UncategorizedAssetAccountId",
              "Value": "32"
            },
            {
              "Name": "UncategorizedIncomeAccountId",
              "Value": "30"
            },
            {
              "Name": "UncategorizedExpenseAccountId",
              "Value": "31"
            },
            {
              "Name": "MasAccountId",
              "Value": "35"
            },
            {
              "Name": "SFCEnabled",
              "Value": "true"
            }
          ]
        }
      },
      "NameValue": {
        "title": "NameValue",
        "required": [
          "Name",
          "Value"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        },
        "example": {
          "Name": "SalesFormsPrefs.DefaultCustomerMessage",
          "Value": "Thank you for your business and have a great day!"
        }
      },
      "Purchase-Create-Request": {
        "title": "Purchase-Create-Request",
        "required": [
          "AccountRef",
          "PaymentType",
          "Line"
        ],
        "type": "object",
        "properties": {
          "AccountRef": {
            "$ref": "#/components/schemas/AccountRef2"
          },
          "PaymentType": {
            "type": "string"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line16"
            },
            "description": ""
          }
        },
        "example": {
          "AccountRef": {
            "value": "42",
            "name": "Visa"
          },
          "PaymentType": "CreditCard",
          "Line": [
            {
              "Amount": 10,
              "DetailType": "AccountBasedExpenseLineDetail",
              "AccountBasedExpenseLineDetail": {
                "AccountRef": {
                  "name": "Meals and Entertainment",
                  "value": "13"
                }
              }
            }
          ]
        }
      },
      "Line16": {
        "title": "Line16",
        "required": [
          "Amount",
          "DetailType",
          "AccountBasedExpenseLineDetail"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "type": "number"
          },
          "DetailType": {
            "type": "string"
          },
          "AccountBasedExpenseLineDetail": {
            "$ref": "#/components/schemas/AccountBasedExpenseLineDetail2"
          }
        },
        "example": {
          "Amount": 10,
          "DetailType": "AccountBasedExpenseLineDetail",
          "AccountBasedExpenseLineDetail": {
            "AccountRef": {
              "name": "Meals and Entertainment",
              "value": "13"
            }
          }
        }
      },
      "AccountBasedExpenseLineDetail2": {
        "title": "AccountBasedExpenseLineDetail2",
        "required": [
          "AccountRef"
        ],
        "type": "object",
        "properties": {
          "AccountRef": {
            "$ref": "#/components/schemas/AccountRef2"
          }
        },
        "example": {
          "AccountRef": {
            "name": "Meals and Entertainment",
            "value": "13"
          }
        }
      },
      "Purchase-Update-Request": {
        "title": "Purchase-Update-Request",
        "required": [
          "AccountRef",
          "PaymentType",
          "Credit",
          "TotalAmt",
          "PurchaseEx",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData",
          "CustomField",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "Line"
        ],
        "type": "object",
        "properties": {
          "AccountRef": {
            "$ref": "#/components/schemas/AccountRef2"
          },
          "PaymentType": {
            "type": "string"
          },
          "Credit": {
            "type": "boolean"
          },
          "TotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "PurchaseEx": {
            "$ref": "#/components/schemas/PurchaseEx"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "CustomField": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line17"
            },
            "description": ""
          }
        },
        "example": {
          "AccountRef": {
            "value": "42",
            "name": "Visa"
          },
          "PaymentType": "CreditCard",
          "Credit": false,
          "TotalAmt": 100,
          "PurchaseEx": {
            "any": [
              {
                "name": "{http://schema.intuit.com/finance/v3}NameValue",
                "declaredType": "com.intuit.schema.finance.v3.NameValue",
                "scope": "javax.xml.bind.JAXBElement$GlobalScope",
                "value": {
                  "Name": "TxnType",
                  "Value": "54"
                },
                "nil": false,
                "globalScope": true,
                "typeSubstituted": false
              }
            ]
          },
          "domain": "QBO",
          "sparse": false,
          "Id": "175",
          "SyncToken": "0",
          "MetaData": {
            "CreateTime": "2016-08-24T05:52:14+00:00",
            "LastUpdatedTime": "2016-08-24T05:52:14+00:00"
          },
          "CustomField": [],
          "TxnDate": "2016-08-23",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "Line": [
            {
              "Id": "1",
              "Amount": 100,
              "DetailType": "AccountBasedExpenseLineDetail",
              "AccountBasedExpenseLineDetail": {
                "AccountRef": {
                  "value": "13",
                  "name": "Meals and Entertainment"
                },
                "BillableStatus": "NotBillable",
                "TaxCodeRef": {
                  "value": "NON"
                }
              }
            }
          ]
        }
      },
      "PurchaseEx": {
        "title": "PurchaseEx",
        "required": [
          "any"
        ],
        "type": "object",
        "properties": {
          "any": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Any"
            },
            "description": ""
          }
        },
        "example": {
          "any": [
            {
              "name": "{http://schema.intuit.com/finance/v3}NameValue",
              "declaredType": "com.intuit.schema.finance.v3.NameValue",
              "scope": "javax.xml.bind.JAXBElement$GlobalScope",
              "value": {
                "Name": "TxnType",
                "Value": "54"
              },
              "nil": false,
              "globalScope": true,
              "typeSubstituted": false
            }
          ]
        }
      },
      "Line17": {
        "title": "Line17",
        "required": [
          "Id",
          "Amount",
          "DetailType",
          "AccountBasedExpenseLineDetail"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "DetailType": {
            "type": "string"
          },
          "AccountBasedExpenseLineDetail": {
            "$ref": "#/components/schemas/AccountBasedExpenseLineDetail3"
          }
        },
        "example": {
          "Id": "1",
          "Amount": 100,
          "DetailType": "AccountBasedExpenseLineDetail",
          "AccountBasedExpenseLineDetail": {
            "AccountRef": {
              "value": "13",
              "name": "Meals and Entertainment"
            },
            "BillableStatus": "NotBillable",
            "TaxCodeRef": {
              "value": "NON"
            }
          }
        }
      },
      "AccountBasedExpenseLineDetail3": {
        "title": "AccountBasedExpenseLineDetail3",
        "required": [
          "AccountRef",
          "BillableStatus",
          "TaxCodeRef"
        ],
        "type": "object",
        "properties": {
          "AccountRef": {
            "$ref": "#/components/schemas/AccountRef2"
          },
          "BillableStatus": {
            "type": "string"
          },
          "TaxCodeRef": {
            "$ref": "#/components/schemas/TaxCodeRef"
          }
        },
        "example": {
          "AccountRef": {
            "value": "13",
            "name": "Meals and Entertainment"
          },
          "BillableStatus": "NotBillable",
          "TaxCodeRef": {
            "value": "NON"
          }
        }
      },
      "Purchase-Delete-Request": {
        "title": "Purchase-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "175",
          "SyncToken": "1"
        }
      },
      "PurchaseOrder-Create-Request": {
        "title": "PurchaseOrder-Create-Request",
        "required": [
          "Line",
          "VendorRef",
          "APAccountRef",
          "TotalAmt"
        ],
        "type": "object",
        "properties": {
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line18"
            },
            "description": ""
          },
          "VendorRef": {
            "$ref": "#/components/schemas/VendorRef2"
          },
          "APAccountRef": {
            "$ref": "#/components/schemas/APAccountRef"
          },
          "TotalAmt": {
            "type": "number"
          }
        },
        "example": {
          "Line": [
            {
              "Amount": 25,
              "DetailType": "ItemBasedExpenseLineDetail",
              "ItemBasedExpenseLineDetail": {
                "CustomerRef": {
                  "value": "3",
                  "name": "Cool Cars"
                },
                "BillableStatus": "NotBillable",
                "ItemRef": {
                  "value": "11",
                  "name": "Pump"
                },
                "UnitPrice": 25,
                "Qty": 1,
                "TaxCodeRef": {
                  "value": "NON"
                }
              }
            }
          ],
          "VendorRef": {
            "value": "41",
            "name": "Hicks Hardware"
          },
          "APAccountRef": {
            "value": "33",
            "name": "Accounts Payable (A/P)"
          },
          "TotalAmt": 25
        }
      },
      "Line18": {
        "title": "Line18",
        "required": [
          "Amount",
          "DetailType",
          "ItemBasedExpenseLineDetail"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "type": "number"
          },
          "DetailType": {
            "type": "string"
          },
          "ItemBasedExpenseLineDetail": {
            "$ref": "#/components/schemas/ItemBasedExpenseLineDetail"
          }
        },
        "example": {
          "Amount": 25,
          "DetailType": "ItemBasedExpenseLineDetail",
          "ItemBasedExpenseLineDetail": {
            "CustomerRef": {
              "value": "3",
              "name": "Cool Cars"
            },
            "BillableStatus": "NotBillable",
            "ItemRef": {
              "value": "11",
              "name": "Pump"
            },
            "UnitPrice": 25,
            "Qty": 1,
            "TaxCodeRef": {
              "value": "NON"
            }
          }
        }
      },
      "ItemBasedExpenseLineDetail": {
        "title": "ItemBasedExpenseLineDetail",
        "required": [
          "CustomerRef",
          "BillableStatus",
          "ItemRef",
          "UnitPrice",
          "Qty",
          "TaxCodeRef"
        ],
        "type": "object",
        "properties": {
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          },
          "BillableStatus": {
            "type": "string"
          },
          "ItemRef": {
            "$ref": "#/components/schemas/ItemRef"
          },
          "UnitPrice": {
            "type": "integer",
            "format": "int32"
          },
          "Qty": {
            "type": "integer",
            "format": "int32"
          },
          "TaxCodeRef": {
            "$ref": "#/components/schemas/TaxCodeRef"
          }
        },
        "example": {
          "CustomerRef": {
            "value": "3",
            "name": "Cool Cars"
          },
          "BillableStatus": "NotBillable",
          "ItemRef": {
            "value": "11",
            "name": "Pump"
          },
          "UnitPrice": 25,
          "Qty": 1,
          "TaxCodeRef": {
            "value": "NON"
          }
        }
      },
      "APAccountRef": {
        "title": "APAccountRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "33",
          "name": "Accounts Payable (A/P)"
        }
      },
      "PurchaseOrder-Update-Request": {
        "title": "PurchaseOrder-Update-Request",
        "required": [
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData",
          "CustomField",
          "DocNumber",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "Line",
          "VendorRef",
          "APAccountRef",
          "TotalAmt"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "CustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            },
            "description": ""
          },
          "DocNumber": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line19"
            },
            "description": ""
          },
          "VendorRef": {
            "$ref": "#/components/schemas/VendorRef2"
          },
          "APAccountRef": {
            "$ref": "#/components/schemas/APAccountRef"
          },
          "TotalAmt": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "domain": "QBO",
          "sparse": false,
          "Id": "179",
          "SyncToken": "0",
          "MetaData": {
            "CreateTime": "2016-08-24T06:18:26+00:00",
            "LastUpdatedTime": "2016-08-24T06:18:26+00:00"
          },
          "CustomField": [
            {
              "DefinitionId": "1",
              "Name": "Crew #",
              "Type": "StringType"
            },
            {
              "DefinitionId": "2",
              "Name": "Sales Rep",
              "Type": "StringType"
            }
          ],
          "DocNumber": "1006-Updated",
          "TxnDate": "2016-08-23",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "Line": [
            {
              "Id": "1",
              "Amount": 25,
              "DetailType": "ItemBasedExpenseLineDetail",
              "ItemBasedExpenseLineDetail": {
                "CustomerRef": {
                  "value": "3",
                  "name": "Cool Cars"
                },
                "BillableStatus": "NotBillable",
                "ItemRef": {
                  "value": "11",
                  "name": "Pump"
                },
                "UnitPrice": 25,
                "Qty": 1,
                "TaxCodeRef": {
                  "value": "NON"
                }
              }
            }
          ],
          "VendorRef": {
            "value": "41",
            "name": "Hicks Hardware"
          },
          "APAccountRef": {
            "value": "33",
            "name": "Accounts Payable (A/P)"
          },
          "TotalAmt": 25
        }
      },
      "Line19": {
        "title": "Line19",
        "required": [
          "Id",
          "Amount",
          "DetailType",
          "ItemBasedExpenseLineDetail"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "DetailType": {
            "type": "string"
          },
          "ItemBasedExpenseLineDetail": {
            "$ref": "#/components/schemas/ItemBasedExpenseLineDetail"
          }
        },
        "example": {
          "Id": "1",
          "Amount": 25,
          "DetailType": "ItemBasedExpenseLineDetail",
          "ItemBasedExpenseLineDetail": {
            "CustomerRef": {
              "value": "3",
              "name": "Cool Cars"
            },
            "BillableStatus": "NotBillable",
            "ItemRef": {
              "value": "11",
              "name": "Pump"
            },
            "UnitPrice": 25,
            "Qty": 1,
            "TaxCodeRef": {
              "value": "NON"
            }
          }
        }
      },
      "PurchaseOrder-Delete-Request": {
        "title": "PurchaseOrder-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "179",
          "SyncToken": "1"
        }
      },
      "RefundReceipt-Create-Request": {
        "title": "RefundReceipt-Create-Request",
        "required": [
          "Line",
          "DepositToAccountRef"
        ],
        "type": "object",
        "properties": {
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line20"
            },
            "description": ""
          },
          "DepositToAccountRef": {
            "$ref": "#/components/schemas/DepositToAccountRef"
          }
        },
        "example": {
          "Line": [
            {
              "Amount": 420,
              "DetailType": "SalesItemLineDetail",
              "SalesItemLineDetail": {
                "ItemRef": {
                  "value": "2"
                }
              }
            }
          ],
          "DepositToAccountRef": {
            "value": "35",
            "name": "Checking"
          }
        }
      },
      "Line20": {
        "title": "Line20",
        "required": [
          "Amount",
          "DetailType",
          "SalesItemLineDetail"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "type": "number"
          },
          "DetailType": {
            "type": "string"
          },
          "SalesItemLineDetail": {
            "$ref": "#/components/schemas/SalesItemLineDetail6"
          }
        },
        "example": {
          "Amount": 420,
          "DetailType": "SalesItemLineDetail",
          "SalesItemLineDetail": {
            "ItemRef": {
              "value": "2"
            }
          }
        }
      },
      "SalesItemLineDetail6": {
        "title": "SalesItemLineDetail6",
        "required": [
          "ItemRef"
        ],
        "type": "object",
        "properties": {
          "ItemRef": {
            "$ref": "#/components/schemas/ItemRef8"
          }
        },
        "example": {
          "ItemRef": {
            "value": "2"
          }
        }
      },
      "ItemRef8": {
        "title": "ItemRef8",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "2"
        }
      },
      "RefundReceipt-Update-Request": {
        "title": "RefundReceipt-Update-Request",
        "required": [
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData",
          "CustomField",
          "DocNumber",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "Line",
          "TxnTaxDetail",
          "TotalAmt",
          "HomeTotalAmt",
          "ApplyTaxAfterDiscount",
          "PrintStatus",
          "Balance",
          "PaymentRefNum",
          "DepositToAccountRef"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "CustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            },
            "description": ""
          },
          "DocNumber": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line5"
            },
            "description": ""
          },
          "TxnTaxDetail": {
            "$ref": "#/components/schemas/TxnTaxDetail"
          },
          "TotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "HomeTotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "ApplyTaxAfterDiscount": {
            "type": "boolean"
          },
          "PrintStatus": {
            "type": "string"
          },
          "Balance": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentRefNum": {
            "type": "string"
          },
          "DepositToAccountRef": {
            "$ref": "#/components/schemas/DepositToAccountRef"
          }
        },
        "example": {
          "domain": "QBO",
          "sparse": false,
          "Id": "180",
          "SyncToken": "0",
          "MetaData": {
            "CreateTime": "2016-08-24T06:38:22+00:00",
            "LastUpdatedTime": "2016-08-24T06:38:22+00:00"
          },
          "CustomField": [
            {
              "DefinitionId": "1",
              "Name": "Crew #",
              "Type": "StringType"
            }
          ],
          "DocNumber": "1044-Updated",
          "TxnDate": "2016-08-23",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "Line": [
            {
              "Id": "1",
              "LineNum": 1,
              "Amount": 420,
              "DetailType": "SalesItemLineDetail",
              "SalesItemLineDetail": {
                "ItemRef": {
                  "value": "2",
                  "name": "Hours"
                },
                "TaxCodeRef": {
                  "value": "NON"
                }
              }
            },
            {
              "Amount": 420,
              "DetailType": "SubTotalLineDetail"
            }
          ],
          "TxnTaxDetail": {
            "TotalTax": 0
          },
          "TotalAmt": 420,
          "HomeTotalAmt": 420,
          "ApplyTaxAfterDiscount": false,
          "PrintStatus": "NeedToPrint",
          "Balance": 0,
          "PaymentRefNum": "To Print",
          "DepositToAccountRef": {
            "value": "35",
            "name": "Checking"
          }
        }
      },
      "RefundReceipt-Delete-Request": {
        "title": "RefundReceipt-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "180",
          "SyncToken": "1"
        }
      },
      "SalesReceipt-Create-Request": {
        "title": "SalesReceipt-Create-Request",
        "required": [
          "Line"
        ],
        "type": "object",
        "properties": {
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line22"
            },
            "description": ""
          }
        },
        "example": {
          "Line": [
            {
              "Id": "1",
              "LineNum": 1,
              "Description": "Pest Control Services",
              "Amount": 35,
              "DetailType": "SalesItemLineDetail",
              "SalesItemLineDetail": {
                "ItemRef": {
                  "value": "10",
                  "name": "Pest Control"
                },
                "UnitPrice": 35,
                "Qty": 1,
                "TaxCodeRef": {
                  "value": "NON"
                }
              }
            }
          ]
        }
      },
      "Line22": {
        "title": "Line22",
        "required": [
          "Id",
          "LineNum",
          "Description",
          "Amount",
          "DetailType",
          "SalesItemLineDetail"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "LineNum": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "Amount": {
            "type": "number"
          },
          "DetailType": {
            "type": "string"
          },
          "SalesItemLineDetail": {
            "$ref": "#/components/schemas/SalesItemLineDetail2"
          }
        },
        "example": {
          "Id": "1",
          "LineNum": 1,
          "Description": "Pest Control Services",
          "Amount": 35,
          "DetailType": "SalesItemLineDetail",
          "SalesItemLineDetail": {
            "ItemRef": {
              "value": "10",
              "name": "Pest Control"
            },
            "UnitPrice": 35,
            "Qty": 1,
            "TaxCodeRef": {
              "value": "NON"
            }
          }
        }
      },
      "SalesReceipt-Update-Request": {
        "title": "SalesReceipt-Update-Request",
        "required": [
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "CustomField",
          "DocNumber",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "Line",
          "TxnTaxDetail",
          "TotalAmt",
          "HomeTotalAmt",
          "ApplyTaxAfterDiscount",
          "PrintStatus",
          "EmailStatus",
          "Balance",
          "DepositToAccountRef"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "CustomField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            },
            "description": ""
          },
          "DocNumber": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line23"
            },
            "description": ""
          },
          "TxnTaxDetail": {
            "$ref": "#/components/schemas/TxnTaxDetail"
          },
          "TotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "HomeTotalAmt": {
            "type": "integer",
            "format": "int32"
          },
          "ApplyTaxAfterDiscount": {
            "type": "boolean"
          },
          "PrintStatus": {
            "type": "string"
          },
          "EmailStatus": {
            "type": "string"
          },
          "Balance": {
            "type": "integer",
            "format": "int32"
          },
          "DepositToAccountRef": {
            "$ref": "#/components/schemas/DepositToAccountRef"
          }
        },
        "example": {
          "domain": "QBO",
          "sparse": false,
          "Id": "181",
          "SyncToken": "0",
          "CustomField": [
            {
              "DefinitionId": "1",
              "Name": "Crew #",
              "Type": "StringType"
            }
          ],
          "DocNumber": "1045-Updated",
          "TxnDate": "2016-09-02",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "Line": [
            {
              "Id": "1",
              "LineNum": 1,
              "Description": "Pest Control Services",
              "Amount": 35,
              "DetailType": "SalesItemLineDetail",
              "SalesItemLineDetail": {
                "ItemRef": {
                  "value": "10",
                  "name": "Pest Control"
                },
                "UnitPrice": 35,
                "Qty": 1,
                "TaxCodeRef": {
                  "value": "NON"
                }
              }
            },
            {
              "Amount": 35,
              "DetailType": "SubTotalLineDetail"
            }
          ],
          "TxnTaxDetail": {
            "TotalTax": 0
          },
          "TotalAmt": 35,
          "HomeTotalAmt": 35,
          "ApplyTaxAfterDiscount": false,
          "PrintStatus": "NeedToPrint",
          "EmailStatus": "NotSet",
          "Balance": 0,
          "DepositToAccountRef": {
            "value": "4",
            "name": "Undeposited Funds"
          }
        }
      },
      "Line23": {
        "title": "Line23",
        "required": [
          "Amount",
          "DetailType"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "LineNum": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "DetailType": {
            "type": "string"
          },
          "SalesItemLineDetail": {
            "$ref": "#/components/schemas/SalesItemLineDetail2"
          },
          "SubTotalLineDetail": {
            "type": "object"
          }
        },
        "example": {
          "Id": "1",
          "LineNum": 1,
          "Description": "Pest Control Services",
          "Amount": 35,
          "DetailType": "SalesItemLineDetail",
          "SalesItemLineDetail": {
            "ItemRef": {
              "value": "10",
              "name": "Pest Control"
            },
            "UnitPrice": 35,
            "Qty": 1,
            "TaxCodeRef": {
              "value": "NON"
            }
          }
        }
      },
      "SalesReceipt-Delete-Request": {
        "title": "SalesReceipt-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "181",
          "SyncToken": "1"
        }
      },
      "SalesReceipt-Void-Request": {
        "title": "SalesReceipt-Void-Request",
        "required": [
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "sparse": true,
          "Id": "188",
          "SyncToken": "0"
        }
      },
      "TaxAgency-Create-Request": {
        "title": "TaxAgency-Create-Request",
        "required": [
          "DisplayName"
        ],
        "type": "object",
        "properties": {
          "DisplayName": {
            "type": "string"
          }
        },
        "example": {
          "DisplayName": "CityTaxAgency"
        }
      },
      "TaxService-Create-Request": {
        "title": "TaxService-Create-Request",
        "required": [
          "TaxCode",
          "TaxRateDetails"
        ],
        "type": "object",
        "properties": {
          "TaxCode": {
            "type": "string"
          },
          "TaxRateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRateDetail"
            },
            "description": ""
          }
        },
        "example": {
          "TaxCode": "MyTaxCodeName",
          "TaxRateDetails": [
            {
              "TaxRateName": "myNewTaxRateName",
              "RateValue": "8",
              "TaxAgencyId": "1",
              "TaxApplicableOn": "Sales"
            }
          ]
        }
      },
      "TaxRateDetail": {
        "title": "TaxRateDetail",
        "required": [
          "TaxRateName",
          "RateValue",
          "TaxAgencyId",
          "TaxApplicableOn"
        ],
        "type": "object",
        "properties": {
          "TaxRateName": {
            "type": "string"
          },
          "RateValue": {
            "type": "string"
          },
          "TaxAgencyId": {
            "type": "string"
          },
          "TaxApplicableOn": {
            "type": "string"
          }
        },
        "example": {
          "TaxRateName": "myNewTaxRateName",
          "RateValue": "8",
          "TaxAgencyId": "1",
          "TaxApplicableOn": "Sales"
        }
      },
      "Term-Create-Request": {
        "title": "Term-Create-Request",
        "required": [
          "Name",
          "DueDays"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "DueDays": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Term120",
          "DueDays": "120"
        }
      },
      "Term-Update-Request": {
        "title": "Term-Update-Request",
        "required": [
          "Name",
          "Active",
          "Type",
          "DiscountPercent",
          "DueDays",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "Type": {
            "type": "string"
          },
          "DiscountPercent": {
            "type": "integer",
            "format": "int32"
          },
          "DueDays": {
            "type": "integer",
            "format": "int32"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Term1120-Updated",
          "Active": true,
          "Type": "STANDARD",
          "DiscountPercent": 0,
          "DueDays": 120,
          "domain": "QBO",
          "sparse": false,
          "Id": "8",
          "SyncToken": "0"
        }
      },
      "Term-Delete-Request": {
        "title": "Term-Delete-Request",
        "required": [
          "Name",
          "Active",
          "Type",
          "DiscountPercent",
          "DueDays",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "Type": {
            "type": "string"
          },
          "DiscountPercent": {
            "type": "integer",
            "format": "int32"
          },
          "DueDays": {
            "type": "integer",
            "format": "int32"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Term1120-Updated",
          "Active": false,
          "Type": "STANDARD",
          "DiscountPercent": 0,
          "DueDays": 120,
          "domain": "QBO",
          "sparse": false,
          "Id": "8",
          "SyncToken": "1"
        }
      },
      "TimeActivity-Create-Request": {
        "title": "TimeActivity-Create-Request",
        "required": [
          "NameOf",
          "EmployeeRef",
          "StartTime",
          "EndTime"
        ],
        "type": "object",
        "properties": {
          "NameOf": {
            "type": "string"
          },
          "EmployeeRef": {
            "$ref": "#/components/schemas/EmployeeRef"
          },
          "StartTime": {
            "type": "string"
          },
          "EndTime": {
            "type": "string"
          }
        },
        "example": {
          "NameOf": "Employee",
          "EmployeeRef": {
            "value": "55",
            "name": "Emily Platt"
          },
          "StartTime": "2015-07-05T16:00:00+00:00",
          "EndTime": "2013-07-06T01:00:00+00:00"
        }
      },
      "EmployeeRef": {
        "title": "EmployeeRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "55",
          "name": "Emily Platt"
        }
      },
      "TimeActivity-Update-Request": {
        "title": "TimeActivity-Update-Request",
        "required": [
          "TxnDate",
          "NameOf",
          "EmployeeRef",
          "ItemRef",
          "BillableStatus",
          "Taxable",
          "HourlyRate",
          "StartTime",
          "EndTime",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "TxnDate": {
            "type": "string"
          },
          "NameOf": {
            "type": "string"
          },
          "EmployeeRef": {
            "$ref": "#/components/schemas/EmployeeRef"
          },
          "ItemRef": {
            "$ref": "#/components/schemas/ItemRef"
          },
          "BillableStatus": {
            "type": "string"
          },
          "Taxable": {
            "type": "boolean"
          },
          "HourlyRate": {
            "type": "integer",
            "format": "int32"
          },
          "StartTime": {
            "type": "string"
          },
          "EndTime": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "TxnDate": "2016-09-03",
          "NameOf": "Employee",
          "EmployeeRef": {
            "value": "55",
            "name": "Emily Platt"
          },
          "ItemRef": {
            "value": "2",
            "name": "Hours"
          },
          "BillableStatus": "NotBillable",
          "Taxable": false,
          "HourlyRate": 0,
          "StartTime": "2016-09-02T16:00:00+00:00",
          "EndTime": "2016-09-03T01:00:00+00:00",
          "domain": "QBO",
          "sparse": false,
          "Id": "6",
          "SyncToken": "0"
        }
      },
      "TimeActivity-ReadById-Request": {
        "title": "TimeActivity-ReadById-Request",
        "required": [
          "TxnDate",
          "NameOf",
          "EmployeeRef",
          "ItemRef",
          "BillableStatus",
          "Taxable",
          "HourlyRate",
          "StartTime",
          "EndTime",
          "domain",
          "sparse",
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "TxnDate": {
            "type": "string"
          },
          "NameOf": {
            "type": "string"
          },
          "EmployeeRef": {
            "$ref": "#/components/schemas/EmployeeRef"
          },
          "ItemRef": {
            "$ref": "#/components/schemas/ItemRef"
          },
          "BillableStatus": {
            "type": "string"
          },
          "Taxable": {
            "type": "boolean"
          },
          "HourlyRate": {
            "type": "integer",
            "format": "int32"
          },
          "StartTime": {
            "type": "string"
          },
          "EndTime": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "TxnDate": "2016-09-03",
          "NameOf": "Employee",
          "EmployeeRef": {
            "value": "55",
            "name": "Emily Platt"
          },
          "ItemRef": {
            "value": "2",
            "name": "Hours"
          },
          "BillableStatus": "NotBillable",
          "Taxable": false,
          "HourlyRate": 0,
          "StartTime": "2016-09-02T16:00:00+00:00",
          "EndTime": "2016-09-03T01:00:00+00:00",
          "domain": "QBO",
          "sparse": false,
          "Id": "6",
          "SyncToken": "0"
        }
      },
      "TimeActivity-Delete-Request": {
        "title": "TimeActivity-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "6",
          "SyncToken": "1"
        }
      },
      "Transfer-Create-Request": {
        "title": "Transfer-Create-Request",
        "required": [
          "FromAccountRef",
          "ToAccountRef",
          "Amount"
        ],
        "type": "object",
        "properties": {
          "FromAccountRef": {
            "$ref": "#/components/schemas/FromAccountRef"
          },
          "ToAccountRef": {
            "$ref": "#/components/schemas/ToAccountRef"
          },
          "Amount": {
            "type": "string"
          }
        },
        "example": {
          "FromAccountRef": {
            "value": "35",
            "name": "Checking"
          },
          "ToAccountRef": {
            "value": "36",
            "name": "Savings"
          },
          "Amount": "120.00"
        }
      },
      "FromAccountRef": {
        "title": "FromAccountRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "35",
          "name": "Checking"
        }
      },
      "ToAccountRef": {
        "title": "ToAccountRef",
        "required": [
          "value",
          "name"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "value": "36",
          "name": "Savings"
        }
      },
      "Transfer-Update-Request": {
        "title": "Transfer-Update-Request",
        "required": [
          "FromAccountRef",
          "ToAccountRef",
          "Amount",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate"
        ],
        "type": "object",
        "properties": {
          "FromAccountRef": {
            "$ref": "#/components/schemas/FromAccountRef"
          },
          "ToAccountRef": {
            "$ref": "#/components/schemas/ToAccountRef"
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "FromAccountRef": {
            "value": "35",
            "name": "Checking"
          },
          "ToAccountRef": {
            "value": "36",
            "name": "Savings"
          },
          "Amount": 120,
          "domain": "QBO",
          "sparse": false,
          "Id": "183",
          "SyncToken": "0",
          "TxnDate": "2016-09-03",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1
        }
      },
      "Transfer-Delete-Request": {
        "title": "Transfer-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "183",
          "SyncToken": "1"
        }
      },
      "Vendor-Create-Request": {
        "title": "Vendor-Create-Request",
        "required": [
          "BillAddr",
          "TaxIdentifier",
          "AcctNum",
          "Title",
          "GivenName",
          "FamilyName",
          "Suffix",
          "CompanyName",
          "DisplayName",
          "PrintOnCheckName",
          "PrimaryPhone",
          "Mobile",
          "PrimaryEmailAddr",
          "WebAddr"
        ],
        "type": "object",
        "properties": {
          "BillAddr": {
            "$ref": "#/components/schemas/BillAddr5"
          },
          "TaxIdentifier": {
            "type": "string"
          },
          "AcctNum": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "GivenName": {
            "type": "string"
          },
          "FamilyName": {
            "type": "string"
          },
          "Suffix": {
            "type": "string"
          },
          "CompanyName": {
            "type": "string"
          },
          "DisplayName": {
            "type": "string"
          },
          "PrintOnCheckName": {
            "type": "string"
          },
          "PrimaryPhone": {
            "$ref": "#/components/schemas/PrimaryPhone"
          },
          "Mobile": {
            "$ref": "#/components/schemas/Mobile"
          },
          "PrimaryEmailAddr": {
            "$ref": "#/components/schemas/PrimaryEmailAddr"
          },
          "WebAddr": {
            "$ref": "#/components/schemas/WebAddr"
          }
        },
        "example": {
          "BillAddr": {
            "Line1": "Dianne's Auto Shop",
            "Line2": "Dianne Bradley",
            "Line3": "29834 Mustang Ave.",
            "City": "Millbrae",
            "Country": "U.S.A",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "94030"
          },
          "TaxIdentifier": "99-5688293",
          "AcctNum": "35372649",
          "Title": "Ms.",
          "GivenName": "Dianne",
          "FamilyName": "Bradley",
          "Suffix": "Sr.",
          "CompanyName": "Dianne's Auto Shop",
          "DisplayName": "Dianne's Auto Shop",
          "PrintOnCheckName": "Dianne's Auto Shop",
          "PrimaryPhone": {
            "FreeFormNumber": "(650) 555-2342"
          },
          "Mobile": {
            "FreeFormNumber": "(650) 555-2000"
          },
          "PrimaryEmailAddr": {
            "Address": "dbradley@myemail.com"
          },
          "WebAddr": {
            "URI": "http://DiannesAutoShop.com"
          }
        }
      },
      "BillAddr5": {
        "title": "BillAddr5",
        "required": [
          "Line1",
          "Line2",
          "Line3",
          "City",
          "Country",
          "CountrySubDivisionCode",
          "PostalCode"
        ],
        "type": "object",
        "properties": {
          "Line1": {
            "type": "string"
          },
          "Line2": {
            "type": "string"
          },
          "Line3": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "CountrySubDivisionCode": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          }
        },
        "example": {
          "Line1": "Dianne's Auto Shop",
          "Line2": "Dianne Bradley",
          "Line3": "29834 Mustang Ave.",
          "City": "Millbrae",
          "Country": "U.S.A",
          "CountrySubDivisionCode": "CA",
          "PostalCode": "94030"
        }
      },
      "Mobile": {
        "title": "Mobile",
        "required": [
          "FreeFormNumber"
        ],
        "type": "object",
        "properties": {
          "FreeFormNumber": {
            "type": "string"
          }
        },
        "example": {
          "FreeFormNumber": "(650) 555-2000"
        }
      },
      "WebAddr": {
        "title": "WebAddr",
        "required": [
          "URI"
        ],
        "type": "object",
        "properties": {
          "URI": {
            "type": "string"
          }
        },
        "example": {
          "URI": "http://DiannesAutoShop.com"
        }
      },
      "Vendor-Update-Request": {
        "title": "Vendor-Update-Request",
        "required": [
          "BillAddr",
          "TaxIdentifier",
          "Balance",
          "AcctNum",
          "Vendor1099",
          "CurrencyRef",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "Title",
          "GivenName",
          "FamilyName",
          "Suffix",
          "CompanyName",
          "DisplayName",
          "PrintOnCheckName",
          "Active",
          "PrimaryPhone",
          "Mobile",
          "PrimaryEmailAddr",
          "WebAddr"
        ],
        "type": "object",
        "properties": {
          "BillAddr": {
            "$ref": "#/components/schemas/BillAddr6"
          },
          "TaxIdentifier": {
            "type": "string"
          },
          "Balance": {
            "type": "integer",
            "format": "int32"
          },
          "AcctNum": {
            "type": "string"
          },
          "Vendor1099": {
            "type": "boolean"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "GivenName": {
            "type": "string"
          },
          "FamilyName": {
            "type": "string"
          },
          "Suffix": {
            "type": "string"
          },
          "CompanyName": {
            "type": "string"
          },
          "DisplayName": {
            "type": "string"
          },
          "PrintOnCheckName": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "PrimaryPhone": {
            "$ref": "#/components/schemas/PrimaryPhone"
          },
          "Mobile": {
            "$ref": "#/components/schemas/Mobile"
          },
          "PrimaryEmailAddr": {
            "$ref": "#/components/schemas/PrimaryEmailAddr"
          },
          "WebAddr": {
            "$ref": "#/components/schemas/WebAddr"
          }
        },
        "example": {
          "BillAddr": {
            "Id": "111",
            "Line1": "Dianne's Auto Shop",
            "Line2": "Dianne Bradley",
            "Line3": "29834 Mustang Ave.",
            "City": "Millbrae",
            "Country": "U.S.A",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "94030"
          },
          "TaxIdentifier": "XXXXXX8293",
          "Balance": 0,
          "AcctNum": "35372649",
          "Vendor1099": false,
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "domain": "QBO",
          "sparse": false,
          "Id": "70",
          "SyncToken": "0",
          "Title": "Ms.",
          "GivenName": "Dianne",
          "FamilyName": "Bradley",
          "Suffix": "Sr.",
          "CompanyName": "Dianne's Auto Shop",
          "DisplayName": "Dianne's Auto Shop-Updated",
          "PrintOnCheckName": "Dianne's Auto Shop",
          "Active": true,
          "PrimaryPhone": {
            "FreeFormNumber": "(650) 555-2342"
          },
          "Mobile": {
            "FreeFormNumber": "(650) 555-2000"
          },
          "PrimaryEmailAddr": {
            "Address": "dbradley@myemail.com"
          },
          "WebAddr": {
            "URI": "http://DiannesAutoShop.com"
          }
        }
      },
      "BillAddr6": {
        "title": "BillAddr6",
        "required": [
          "Id",
          "Line1",
          "Line2",
          "Line3",
          "City",
          "Country",
          "CountrySubDivisionCode",
          "PostalCode"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Line1": {
            "type": "string"
          },
          "Line2": {
            "type": "string"
          },
          "Line3": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "CountrySubDivisionCode": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          }
        },
        "example": {
          "Id": "111",
          "Line1": "Dianne's Auto Shop",
          "Line2": "Dianne Bradley",
          "Line3": "29834 Mustang Ave.",
          "City": "Millbrae",
          "Country": "U.S.A",
          "CountrySubDivisionCode": "CA",
          "PostalCode": "94030"
        }
      },
      "Vendor-Delete-Request": {
        "title": "Vendor-Delete-Request",
        "required": [
          "BillAddr",
          "TaxIdentifier",
          "Balance",
          "AcctNum",
          "Vendor1099",
          "CurrencyRef",
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "Title",
          "GivenName",
          "FamilyName",
          "Suffix",
          "CompanyName",
          "DisplayName",
          "PrintOnCheckName",
          "Active",
          "PrimaryPhone",
          "Mobile",
          "PrimaryEmailAddr",
          "WebAddr"
        ],
        "type": "object",
        "properties": {
          "BillAddr": {
            "$ref": "#/components/schemas/BillAddr6"
          },
          "TaxIdentifier": {
            "type": "string"
          },
          "Balance": {
            "type": "integer",
            "format": "int32"
          },
          "AcctNum": {
            "type": "string"
          },
          "Vendor1099": {
            "type": "boolean"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "GivenName": {
            "type": "string"
          },
          "FamilyName": {
            "type": "string"
          },
          "Suffix": {
            "type": "string"
          },
          "CompanyName": {
            "type": "string"
          },
          "DisplayName": {
            "type": "string"
          },
          "PrintOnCheckName": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "PrimaryPhone": {
            "$ref": "#/components/schemas/PrimaryPhone"
          },
          "Mobile": {
            "$ref": "#/components/schemas/Mobile"
          },
          "PrimaryEmailAddr": {
            "$ref": "#/components/schemas/PrimaryEmailAddr"
          },
          "WebAddr": {
            "$ref": "#/components/schemas/WebAddr"
          }
        },
        "example": {
          "BillAddr": {
            "Id": "111",
            "Line1": "Dianne's Auto Shop",
            "Line2": "Dianne Bradley",
            "Line3": "29834 Mustang Ave.",
            "City": "Millbrae",
            "Country": "U.S.A",
            "CountrySubDivisionCode": "CA",
            "PostalCode": "94030"
          },
          "TaxIdentifier": "XXXXXX8293",
          "Balance": 0,
          "AcctNum": "35372649",
          "Vendor1099": false,
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "domain": "QBO",
          "sparse": false,
          "Id": "70",
          "SyncToken": "0",
          "Title": "Ms.",
          "GivenName": "Dianne",
          "FamilyName": "Bradley",
          "Suffix": "Sr.",
          "CompanyName": "Dianne's Auto Shop",
          "DisplayName": "Dianne's Auto Shop-Updated",
          "PrintOnCheckName": "Dianne's Auto Shop",
          "Active": false,
          "PrimaryPhone": {
            "FreeFormNumber": "(650) 555-2342"
          },
          "Mobile": {
            "FreeFormNumber": "(650) 555-2000"
          },
          "PrimaryEmailAddr": {
            "Address": "dbradley@myemail.com"
          },
          "WebAddr": {
            "URI": "http://DiannesAutoShop.com"
          }
        }
      },
      "VendorCredit-Update-Request": {
        "title": "VendorCredit-Update-Request",
        "required": [
          "domain",
          "sparse",
          "Id",
          "SyncToken",
          "MetaData",
          "TxnDate",
          "CurrencyRef",
          "ExchangeRate",
          "Line",
          "VendorRef",
          "APAccountRef",
          "TotalAmt"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "sparse": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "TxnDate": {
            "type": "string"
          },
          "CurrencyRef": {
            "$ref": "#/components/schemas/CurrencyRef"
          },
          "ExchangeRate": {
            "type": "integer",
            "format": "int32"
          },
          "Line": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line24"
            },
            "description": ""
          },
          "VendorRef": {
            "$ref": "#/components/schemas/VendorRef2"
          },
          "APAccountRef": {
            "$ref": "#/components/schemas/APAccountRef"
          },
          "TotalAmt": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "domain": "QBO",
          "sparse": false,
          "Id": "185",
          "SyncToken": "0",
          "MetaData": {
            "CreateTime": "2016-09-02T10:09:34+00:00",
            "LastUpdatedTime": "2016-09-02T10:09:34+00:00"
          },
          "TxnDate": "2014-04-23",
          "CurrencyRef": {
            "value": "USD",
            "name": "United States Dollar"
          },
          "ExchangeRate": 1,
          "Line": [
            {
              "Id": "1",
              "Amount": 90,
              "DetailType": "AccountBasedExpenseLineDetail",
              "AccountBasedExpenseLineDetail": {
                "CustomerRef": {
                  "value": "1",
                  "name": "Amy's Bird Sanctuary"
                },
                "AccountRef": {
                  "value": "8",
                  "name": "Bank Charges"
                },
                "BillableStatus": "Billable",
                "TaxCodeRef": {
                  "value": "TAX"
                }
              }
            }
          ],
          "VendorRef": {
            "value": "30",
            "name": "Books by Bessie"
          },
          "APAccountRef": {
            "value": "33",
            "name": "Accounts Payable (A/P)"
          },
          "TotalAmt": 90
        }
      },
      "Line24": {
        "title": "Line24",
        "required": [
          "Id",
          "Amount",
          "DetailType",
          "AccountBasedExpenseLineDetail"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Amount": {
            "type": "integer",
            "format": "int32"
          },
          "DetailType": {
            "type": "string"
          },
          "AccountBasedExpenseLineDetail": {
            "$ref": "#/components/schemas/AccountBasedExpenseLineDetail4"
          }
        },
        "example": {
          "Id": "1",
          "Amount": 90,
          "DetailType": "AccountBasedExpenseLineDetail",
          "AccountBasedExpenseLineDetail": {
            "CustomerRef": {
              "value": "1",
              "name": "Amy's Bird Sanctuary"
            },
            "AccountRef": {
              "value": "8",
              "name": "Bank Charges"
            },
            "BillableStatus": "Billable",
            "TaxCodeRef": {
              "value": "TAX"
            }
          }
        }
      },
      "AccountBasedExpenseLineDetail4": {
        "title": "AccountBasedExpenseLineDetail4",
        "required": [
          "CustomerRef",
          "AccountRef",
          "BillableStatus",
          "TaxCodeRef"
        ],
        "type": "object",
        "properties": {
          "CustomerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          },
          "AccountRef": {
            "$ref": "#/components/schemas/AccountRef2"
          },
          "BillableStatus": {
            "type": "string"
          },
          "TaxCodeRef": {
            "$ref": "#/components/schemas/TaxCodeRef"
          }
        },
        "example": {
          "CustomerRef": {
            "value": "1",
            "name": "Amy's Bird Sanctuary"
          },
          "AccountRef": {
            "value": "8",
            "name": "Bank Charges"
          },
          "BillableStatus": "Billable",
          "TaxCodeRef": {
            "value": "TAX"
          }
        }
      },
      "VendorCredit-Delete-Request": {
        "title": "VendorCredit-Delete-Request",
        "required": [
          "Id",
          "SyncToken"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "SyncToken": {
            "type": "string"
          }
        },
        "example": {
          "Id": "185",
          "SyncToken": "1"
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://appcenter.intuit.com/connect/oauth2",
            "tokenUrl": "https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer",
            "refreshUrl": "https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer",
            "X-Refresh-Settings": {
              "Content-Type": "application/x-www-form-urlencoded"
            },
            "scopes": {
              "openid": "OpenID",
              "email": "email",
              "profile": "profile",
              "address": "address",
              "phone": "phone",
              "com.intuit.quickbooks.accounting": "Accounting"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "tags": [
    {
      "name": "Account",
      "description": "An Account object is a component of a Chart Of Accounts, and is part of a ledger. It is used to record a total monetary amount allocated against a specific use. Accounts are one of five basic types: asset, liability, revenue (income), expenses, or equity. Delete is achieved by setting the Active attribute to false in an object update request; thus, making it inactive. In this type of delete, the record is not permanently deleted, but is hidden for display purposes. References to inactive objects are left intact. \n\nhttps://developer.intuit.com/docs/api/accounting/account"
    },
    {
      "name": "Attachable",
      "description": "https://developer.intuit.com/docs/api/accounting/attachable\n\n\nThis page covers the Attachable, Upload, and Download resources used for attachment management. Attachments are supplemental information linked to a transaction or Item object. They can be files, notes, or a combination of both.\n\nIn the case of file attachments, use an upload endpoint multipart request to upload the files to the QuickBooks attachment list and, optionally, to supply metadata for each via an attachable object. If meta data is not supplied with the upload request, the system creates it.\nIn the case of a note, use the create attachable endpoint.\nFor information about attachments, see the Attachments Developer Guide.\n"
    },
    {
      "name": "Batch",
      "description": "https://developer.intuit.com/docs/api/accounting/batch\n\nThe batch operation enables an application to perform multiple operations in a single request.  For example, in a single batch request an application can create a customer, update an invoice, and read an account.  Compared to multiple requests, a single batch request can improve an application's performance by decreasing network roundtrips and increasing throughput. The individual operations within a batch request are called BatchItemRequest objects.\n"
    },
    {
      "name": "Bill",
      "description": "https://developer.intuit.com/docs/api/accounting/bill\n\nA Bill object is an AP transaction representing a request-for-payment from a third party for goods/services rendered and/or received.\n"
    },
    {
      "name": "BillPayment",
      "description": "https://developer.intuit.com/docs/api/accounting/billpayment\n\n\nA BillPayment object represents the payment transaction for a bill that the business owner receives from a vendor for goods or services purchased from the vendor. QuickBooks Online supports bill payments through a credit card or a checking account. \nBillPayment.TotalAmt is the total amount associated with this payment. This includes the total of all the payments from the payment line details. If TotalAmt is greater than the total on the lines being paid, the overpayment is treated as a credit and exposed as such on the QuickBooks UI. The total amount cannot be negative."
    },
    {
      "name": "Budget",
      "description": "https://developer.intuit.com/docs/api/accounting/budget\n\nThe Budget endpoint allows you to retrieve the current state of budgets already set up in the user's company file. A budget allows for an amount to be assigned on a monthly, quarterly, or annual basis for a specific account or customer and are created to give a business measurable expense goals. This amount represents how much should be spent against that account or customer in the give time period.\n"
    },
    {
      "name": "ChangeDataCapture",
      "description": "https://developer.intuit.com/docs/api/accounting/changedatacapture\n\nThe change data capture (cdc) operation returns a list of objects that have changed since a specified time. This operation is for an app that periodically polls data services in order to refresh its local copy of object data. The app calls the cdc operation, specifying a comma separated list of object types and a date-time stamp specifying how far to look back. Data services returns all objects specified by entityList that have changed since the specified date-time. Look-back time can be up to 30 days."
    },
    {
      "name": "Class",
      "description": "https://developer.intuit.com/docs/api/accounting/class\n\nClass objects provide a way to track different segments of the business so they're not tied to a particular client or project. For example, you can define classes to break down the income and expenses for each business segment. Classes are available to the entire transaction or to individual detail lines of a transaction.\n\nRef - https://developer.intuit.com/docs/0100_quickbooks_online/0200_dev_guides/accounting/class_tracking"
    },
    {
      "name": "CompanyInfo",
      "description": "https://developer.intuit.com/docs/api/accounting/companyinfo\n\nThe CompanyInfo object contains basic company information. In QuickBooks, company info and preferences are displayed in the same place under preferences, so it may be confusing to figure out from user interface which fields may belong to this object. But in general, properties such as company addresses or name are considered company information. Some attributes may exist in both CompanyInfo and Preferences objects.\n"
    },
    {
      "name": "CreditMemo",
      "description": "https://developer.intuit.com/docs/api/accounting/creditmemo\n\nThe CreditMemo object is a financial transaction representing a refund or credit of payment or part of a payment for goods or services that have been sold.\n"
    },
    {
      "name": "Customer",
      "description": "https://developer.intuit.com/docs/api/accounting/customer\n\nA customer is a consumer of the service or product that your business offers. The Customer object allows you to categorize customers according to your business requirements. To create a job, you must first create a customer and then create a job referencing that customer as a parent with the ParentRef attribute. Some areas a sub-customer/job can be used include:\n\nTo track a job for the top-level customer, such as a kitchen remodel or bathroom remodel.\nMembers of a team or league.\nProperties managed by a Homeowner Association or Property Management Company.\nSee QuickBooks product documentation for more about sub-customers and jobs.\n"
    },
    {
      "name": "Department",
      "description": "https://developer.intuit.com/docs/api/accounting/department\n\nThe Department resource provides a way to track transactions based on physical locations such as stores, sales regions, or countries. As you create sales and expense transactions, consistently designate the department to which they belong."
    },
    {
      "name": "Deposit",
      "description": "https://developer.intuit.com/docs/api/accounting/deposit\n\n\nA deposit object is a transaction that records one or more deposits of the following types:\n\nA customer payment, originally held in the Undeposited Funds account, into the Asset Account specified by the Deposit.DepositToAccountRef attribute. The Deposit.line.LinkedTxn element is used in this case to hold deposit information.\nA new, direct deposit specified by Deposit.Line.DepositLineDetail line detail.\n"
    },
    {
      "name": "Employee",
      "description": "https://developer.intuit.com/docs/api/accounting/employee\n\nAn Employee object represents a person working for the company.\n\nThe DisplayName attribute must be unique.\nThe GivenName, MiddleName, FamilyName, and PrintOnCheckName attributes must not contain a colon (:).\nThe GivenName and FamilyName attributes are required.\nThe PrimaryEmailAddress attribute must contain an at sign (@) and dot (.).\nThe full complement of read, create, delete via deactivation (active=false), and update operations are available both with and without QuickBooks Payroll enabled. However, when Payroll is enabled, support for some attributes is limited:\nTitle—Not supported when QuickBooks Payroll is enabled.\nSuffix—Not supported when QuickBooks Payroll is enabled.\nDisplayName —It’s read only when QuickBooks Payroll is enabled and a concatenation of GivenName MiddleName FamilyName.\nPrintOnCheckName—Not supported when QuickBooks Payroll is enabled.\nBillRate—Not supported when QuickBooks Payroll is enabled.\nSSN—Masked SSNs, as is returned in a response, cannot be passed in a request when QuickBooks Payroll is enabled. Code for this field must be removed before submitting."
    },
    {
      "name": "Estimate",
      "description": "https://developer.intuit.com/docs/api/accounting/estimate\n\nEstimate represents a proposal for a financial transaction from a business to a customer for goods or services proposed to be sold, including proposed pricing.\n"
    },
    {
      "name": "ExchangeRate",
      "description": "https://developer.intuit.com/docs/api/accounting/exchangerate\n\nApplicable only for those companies that enable multicurrency, the exchangerate resource provides the ability to query and set exchange rates available to the QuickBooks Online company. This entity works in combination with the companycurrency entity and the Currency Center in the QuickBooks Online UI to manage exchange rates for the company.\n"
    },
    {
      "name": "Invoice",
      "description": "https://developer.intuit.com/docs/api/accounting/invoice\n\nAn Invoice represents a sales form where the customer pays for a product or service later.\n"
    },
    {
      "name": "Item",
      "description": "https://developer.intuit.com/docs/api/accounting/item\n\nAn item is a thing that your company buys, sells, or re-sells, such as products and services. An item is shown as a line on an invoice or other sales form."
    },
    {
      "name": "JournalEntry",
      "description": "https://developer.intuit.com/docs/api/accounting/journalentry\n\nJournalEntry is a transaction in which:\n\nThere are at least one pair of lines, a debit and a credit, called distribution lines.\nEach distribution line has an account from the Chart of Accounts. Query the Account resource for a listing of the Chart of Accounts.\nThe total of the debit column equals the total of the credit column.\nWhen you record a transaction with a JournalEntry object, the QuickBooks Online UI labels the transaction as JRNL in the register and as General Journal on reports that list transactions."
    },
    {
      "name": "Payment",
      "description": "https://developer.intuit.com/docs/api/accounting/payment\n\nA Payment object records a payment in QuickBooks. The payment can be applied for a particular customer against multiple Invoices and Credit Memos. It can also be created without any Invoice or Credit Memo, by just specifying an amount."
    },
    {
      "name": "PaymentMethod",
      "description": "https://developer.intuit.com/docs/api/accounting/paymentmethod\n\nThe PaymentMethod resource provides the method of payment for received goods."
    },
    {
      "name": "Preferences",
      "description": "https://developer.intuit.com/docs/api/accounting/preferences\n\nThe Preferences resource represents a set of company preferences that control application behavior in QuickBooks Online. They are mostly exposed as read-only through the Preferences endpoint with only a very small subset of them available as writable. Preferences are not necessarily honored when making requests via the QuickBooks API because a lot of them control UI behavior in the application and may not be applicable for apps.\n\nBusiness Rules\n\nThe create operation is not supported.\nThe read request retrieves all preferences. There is no notion of preference objects or object IDs.\nUpdate operations are supported for a limited subset of preferences.\nThe Delete operation is not supported.\nQuery is supported with sorting and filtering enabled for Metadata timestamp attributes. Pagination is not supported.\nOtherPrefs type is used as an extension mechanism to contain additional attributes as Name/Value pairs.\n"
    },
    {
      "name": "Purchase",
      "description": "https://developer.intuit.com/docs/api/accounting/purchase\n\nA Purchase object represents an expense, such as a purchase made from a vendor. There are three types of purchases: Cash, Check, and Credit Card.\n\nCash Purchase contains information regarding a payment made in cash.\nCheck Purchase contains information regarding a payment made by check.\nCredit Card Purchase contains information regarding a payment made by credit card or refunded/credited back to a credit card."
    },
    {
      "name": "PurchaseOrder",
      "description": "https://developer.intuit.com/docs/api/accounting/purchaseorder\n\nThe PurchaseOrder object is a non-posting transaction representing a request to purchase goods or services from a third party.\n"
    },
    {
      "name": "RefundReceipt",
      "description": "https://developer.intuit.com/docs/api/accounting/refundreceipt\n\nA RefundReceipt object represents a refund to the customer for a product or service that was provided.\n"
    },
    {
      "name": "Reports"
    },
    {
      "name": "SalesReceipt",
      "description": "https://developer.intuit.com/docs/api/accounting/salesreceipt\n\nA SalesReceipt object represents the sales receipt that is given to a customer. A sales receipt is similar to an invoice. However, for a sales receipt, payment is received as part of the sale of goods and services. The sales receipt specifies a deposit account where the customer's payment is deposited. If the deposit account is not specified, the Undeposited Account is used."
    },
    {
      "name": "TaxAgency",
      "description": "https://developer.intuit.com/docs/api/accounting/taxagency\n\nA TaxAgency object is associated with a tax rate and identifies the agency to which that tax rate applies, that is, the entity that collects those taxes.\n"
    },
    {
      "name": "TaxCode",
      "description": "https://developer.intuit.com/docs/api/accounting/taxcode\n\nA TaxCode object is used to track the taxable or non-taxable status of products, services, and customers. You can assign a sales tax code to each of your products, services, and customers based on their taxable or non-taxable status. You can then use these codes to generate reports that provide information to the tax agencies about the taxable or non-taxable status of certain sales."
    },
    {
      "name": "TaxRate",
      "description": "https://developer.intuit.com/docs/api/accounting/taxrate\n\nA TaxRate object represents rate applied to calculate tax liability. Use the TaxService entity to create a taxrate. See Global tax model for more information about using TaxRate objects and the tax model in general.\n"
    },
    {
      "name": "TaxService",
      "description": "https://developer.intuit.com/docs/api/accounting/taxservice\n\nThe TaxService resource allows you to perform the following actions:\n\nCreate a new TaxCode object and specify a list of existing tax rates to be associated to that tax code. To retrieve a list of existing TaxCode objects, query the TaxCode resource.\nCreate a new TaxRate object, dynamically. To retrieve a list of existing tax rates, query the TaxRate resource.\n"
    },
    {
      "name": "Term",
      "description": "https://developer.intuit.com/docs/api/accounting/term\n\nA Term object represents the terms under which a sale is made, typically expressed in the form of days due after the goods are received. Optionally, a discount of the total amount may be applied if payment is made within a stipulated time. For example, net 30 indicates that payment is due within 30 days. A term of 2%/15 net 60 indicates that payment is due within 60 days, with a discount of 2% if payment is made within 15 days. This resource also supports:\n\nAn absolute due date.\nA number of days from a start date.\nA percent discount.\nAn absolute discount.\n"
    },
    {
      "name": "TimeActivity",
      "description": "https://developer.intuit.com/docs/api/accounting/timeactivity\n\nThe TimeActivity object represents a record of time worked by a vendor or employee.\n"
    },
    {
      "name": "Transfer",
      "description": "https://developer.intuit.com/docs/api/accounting/transfer\n\nA Transfer represents a transaction where funds are moved between two accounts from the company's QuickBooks chart of accounts.\n"
    },
    {
      "name": "Vendor",
      "description": "https://developer.intuit.com/docs/api/accounting/vendor\n\nThe Vendor object represents the seller from whom your company purchases any service or product.\n"
    },
    {
      "name": "VendorCredit",
      "description": "https://developer.intuit.com/docs/api/accounting/vendorcredit\n\n\nThe VendorCredit object is an accounts payable transaction that represents a refund or credit of payment for goods or services. It is a credit that a vendor owes you for various reasons such as overpaid bill, returned merchandise, or other reasons.\n"
    }
  ]
}