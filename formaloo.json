{
  "openapi": "3.0.3",
  "info": {
    "title": "Formaloo",
    "version": "3.0.0",
    "description": "Welcome to the Formaloo API! You can use our API to access Formaloo API endpoints, to integrate your app with Formaloo CDP and get useful insights on your customers.\\n\\nWe have language bindings in Shell, Ruby, Python, PHP, Java, Go, NodeJS and JavaScript! You can view code examples in the dark area to the right, and you can switch the programming language of the examples with the tabs in the top right.\\n\\nWe really appreciate your feedback on the Formaloo API and the Documentation. Get in touch using the contact details provided.",
    "contact": {
      "url": "https://www.formaloo.com/en/developers/"
    }
  },
  "paths": {
    "/v3.4/access-type-descriptions": {
      "get": {
        "operationId": "3.4_access_type_descriptions_list",
        "description": "Get a list of user's categories.",
        "summary": "Get Access Type Description List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAccessTypeDescriptionList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/applications": {
      "post": {
        "operationId": "3.4_applications_create",
        "description": "",
        "summary": "Request Api Key",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAPIKey"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateAPIKey"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateAPIKey"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAPIKey"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/available-email-servers": {
      "get": {
        "operationId": "3.4_available_email_servers_list",
        "description": "Get a list of the email servers available for the user.",
        "summary": "Get Email Server Available List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEmailSenderShortList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_available_email_servers_create",
        "description": "get: Get a list of the email servers available for the user.",
        "summary": "Email Server Available List",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailSenderShort"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailSenderShort"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EmailSenderShort"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailSenderShort"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/board-templates": {
      "get": {
        "operationId": "3.4_board_templates_list",
        "description": "",
        "summary": "Get Board Template List",
        "parameters": [
          {
            "in": "query",
            "name": "is_default",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBoardTemplateList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_board_templates_create",
        "description": "",
        "summary": "Board Template List",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardTemplate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BoardTemplate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BoardTemplate"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardTemplate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks": {
      "get": {
        "operationId": "3.4_boards_blocks_list",
        "description": "Get a list of boards belonging to a specific form.",
        "summary": "Get Block List",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBlockList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/{block_slug}": {
      "get": {
        "operationId": "3.4_boards_blocks_retrieve",
        "description": "Get a block with it's main data.",
        "summary": "Block Action",
        "parameters": [
          {
            "in": "path",
            "name": "block_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_boards_blocks_update",
        "description": "Update a block.",
        "summary": "Block Action",
        "parameters": [
          {
            "in": "path",
            "name": "block_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Block"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Block"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Block"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_boards_blocks_partial_update",
        "description": "update a block.",
        "summary": "Block Action",
        "parameters": [
          {
            "in": "path",
            "name": "block_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedBlock"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedBlock"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedBlock"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_boards_blocks_destroy",
        "description": "delete a block.",
        "summary": "Block Action",
        "parameters": [
          {
            "in": "path",
            "name": "block_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/{block_slug}/content": {
      "get": {
        "operationId": "3.4_boards_blocks_content_list",
        "description": "Get content of a block.",
        "summary": "Block Content",
        "parameters": [
          {
            "in": "path",
            "name": "block_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "created_at",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__day",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__month",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__year",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "submit_time",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_gt",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_gte",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_lt",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_lte",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            },
            "description": "Comma seperated list.",
            "examples": {
              "Example": {
                "value": "item1,item2,item3"
              }
            }
          },
          {
            "in": "query",
            "name": "tracking_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBlockList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/form-charts": {
      "post": {
        "operationId": "3.4_boards_blocks_form_charts_create",
        "description": "Use this endpoint to create a form charts block.",
        "summary": "Create Form Charts Block",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormChartsBlock"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormChartsBlock"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormChartsBlock"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormChartsBlock"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/form-display": {
      "post": {
        "operationId": "3.4_boards_blocks_form_display_create",
        "description": "Use this endpoint to create a form display block.",
        "summary": "Create Form Display Block",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormDisplayBlock"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormDisplayBlock"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormDisplayBlock"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDisplayBlock"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/form-result": {
      "post": {
        "operationId": "3.4_boards_blocks_form_result_create",
        "description": "Use this endpoint to create a form result block.",
        "summary": "Create Form Result Block",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormResultBlockCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormResultBlockCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormResultBlockCreate"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResultBlockCreate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/form-result/{block_slug}/duplicate": {
      "post": {
        "operationId": "3.4_boards_blocks_form_result_duplicate_create",
        "description": "Use this endpoint to duplicate a form result block.",
        "summary": "Form Result Block Duplicate",
        "parameters": [
          {
            "in": "path",
            "name": "block_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormResultBlockDuplicate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormResultBlockDuplicate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormResultBlockDuplicate"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResultBlockDuplicate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/kanbans": {
      "post": {
        "operationId": "3.4_boards_blocks_kanbans_create",
        "description": "Use this endpoint to create a form kanban block.",
        "summary": "Create Kanban Block",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KanbanBlockCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/KanbanBlockCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/KanbanBlockCreate"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KanbanBlockCreate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/menu": {
      "post": {
        "operationId": "3.4_boards_blocks_menu_create",
        "description": "Use this endpoint to create a menu block.",
        "summary": "Create Menu Block",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuBlock"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MenuBlock"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MenuBlock"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuBlock"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/reports": {
      "post": {
        "operationId": "3.4_boards_blocks_reports_create",
        "description": "Use this endpoint to create a report block.",
        "summary": "Create Report Block",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportBlock"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ReportBlock"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ReportBlock"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportBlock"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/{board_slug}/blocks/stats": {
      "post": {
        "operationId": "3.4_boards_blocks_stats_create",
        "description": "Use this endpoint to create a stats block.",
        "summary": "Create Stats Block",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatsBlock"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StatsBlock"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StatsBlock"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsBlock"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/boards/available-stats": {
      "get": {
        "operationId": "3.4_boards_available_stats_list",
        "description": "Get a list of available stats with their description.",
        "summary": "Get Available Stats List",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardFormStats"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/businesses": {
      "get": {
        "operationId": "3.4_businesses_list",
        "description": "",
        "summary": "Get Business List",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShortBusiness"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/categories": {
      "get": {
        "operationId": "3.4_categories_list",
        "description": "Get a list of user's forms' categories.",
        "summary": "Get Category List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCategoryList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_categories_create",
        "description": "Create a category for user's forms.",
        "summary": "Create Category",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/categories/{slug}": {
      "get": {
        "operationId": "3.4_categories_retrieve",
        "description": "Show a category.",
        "summary": "Get Category",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_categories_update",
        "description": "Update a category.",
        "summary": "Edit Category",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_categories_partial_update",
        "description": "Update a category.",
        "summary": "Edit Category",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCategory"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCategory"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCategory"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_categories_destroy",
        "description": "get: Show a category.\nput: Update a category.\npatch: Update a category.",
        "summary": "Delete Category",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/categories/{slug}/breadcrumb": {
      "get": {
        "operationId": "3.4_categories_breadcrumb_retrieve",
        "description": "Show a category's breadcrumb.",
        "summary": "Category Breadcrumb",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryBreadcrumb"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/categories/{slug}/category-users": {
      "get": {
        "operationId": "3.4_categories_category_users_list",
        "description": "",
        "summary": "Get Category Users Of Category List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCategoryUserList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/categories/{slug}/users": {
      "get": {
        "operationId": "3.4_categories_users_list",
        "description": "",
        "summary": "Get Users Of Category List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserShortWithCategoryAccessList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/category-users": {
      "post": {
        "operationId": "3.4_category_users_create",
        "description": "",
        "summary": "Create Category Users",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUser"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryUser"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/category-users/{slug}": {
      "delete": {
        "operationId": "3.4_category_users_destroy",
        "description": "",
        "summary": "Category User Delete",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/currencies": {
      "get": {
        "operationId": "3.4_currencies_list",
        "description": "",
        "summary": "Get Currency List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCurrencyList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/draft-rows/{submit_code}": {
      "get": {
        "operationId": "3.4_draft_rows_retrieve",
        "description": "",
        "summary": "Draft Row",
        "parameters": [
          {
            "in": "path",
            "name": "submit_code",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowActions"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_draft_rows_update",
        "description": "",
        "summary": "Draft Row",
        "parameters": [
          {
            "in": "path",
            "name": "submit_code",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RowActions"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RowActions"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RowActions"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowActions"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_draft_rows_partial_update",
        "description": "",
        "summary": "Draft Row",
        "parameters": [
          {
            "in": "path",
            "name": "submit_code",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRowActions"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRowActions"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRowActions"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowActions"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/email-servers": {
      "get": {
        "operationId": "3.4_email_servers_list",
        "description": "Get a list of the email servers owned by the user.",
        "summary": "Get Email Server List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEmailSenderList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_email_servers_create",
        "description": "Create a new email server for the user.",
        "summary": "Create Email Server",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailSender"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailSender"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EmailSender"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailSender"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/email-servers/{slug}": {
      "get": {
        "operationId": "3.4_email_servers_retrieve",
        "description": "Get an email server object.",
        "summary": "Get Email Server",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailSender"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_email_servers_update",
        "description": "Update an email server.",
        "summary": "Edit Email Server",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailSender"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailSender"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EmailSender"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailSender"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_email_servers_partial_update",
        "description": "get: Get an email server object.\nput: Update an email server.\nput: Update an email server.\ndelete: Delete an email server",
        "summary": "Edit Email Server",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEmailSender"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEmailSender"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEmailSender"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailSender"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_email_servers_destroy",
        "description": "Delete an email server",
        "summary": "Delete Email Server",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/email-template-examples": {
      "get": {
        "operationId": "3.4_email_template_examples_list",
        "description": "Use to get a list of email template examples.",
        "summary": "Get Email Template Example List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEmailTemplateExampleList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_email_template_examples_create",
        "description": "get: Use to get a list of email template examples.",
        "summary": "Email Template Example List",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateExample"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateExample"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateExample"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateExample"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/email-templates": {
      "get": {
        "operationId": "3.4_email_templates_list",
        "description": "Use to get a list of User's email templates.",
        "summary": "Get Email Template List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEmailTemplateList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_email_templates_create",
        "description": "Use to create an email template.",
        "summary": "Create Email Template",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplate"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/email-templates/{slug}": {
      "get": {
        "operationId": "3.4_email_templates_retrieve",
        "description": "Use to get the email template object.",
        "summary": "Get Email Template Object",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_email_templates_update",
        "description": "Use to update the email template object.",
        "summary": "Edit Email Template Object",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplate"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_email_templates_partial_update",
        "description": "Use to update the email template object.",
        "summary": "Edit Email Template Object",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEmailTemplate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEmailTemplate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEmailTemplate"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_email_templates_destroy",
        "description": "Use to delete the email template object.",
        "summary": "Delete Email Template Object",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/email-templates/{slug}/copy": {
      "post": {
        "operationId": "3.4_email_templates_copy_create",
        "description": "Use to copy an email template.",
        "summary": "Email Template Copy",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/email_verifications": {
      "post": {
        "operationId": "3.4_email_verifications_create",
        "description": "Create an Email OTP and return UUID for further verification with token.",
        "summary": "Request Email Verification",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEmailVerificationOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RequestEmailVerificationOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestEmailVerificationOTP"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestEmailVerificationOTP"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/email_verifications/{uuid}/resend": {
      "put": {
        "operationId": "3.4_email_verifications_resend_update",
        "description": "patch: Update an Email OTP. (give the UUID and token.)",
        "summary": "Resend Email Verification",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendEmailOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResendEmailOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ResendEmailOTP"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendEmailOTP"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_email_verifications_resend_partial_update",
        "description": "Update an Email OTP. (give the UUID and token.)",
        "summary": "Resend Email Verification",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedResendEmailOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedResendEmailOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedResendEmailOTP"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendEmailOTP"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/email_verifications/{uuid}/verify": {
      "put": {
        "operationId": "3.4_email_verifications_erify_update",
        "description": "Update an Email OTP. (give the UUID and token.)",
        "summary": "Verify Email Verification",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailOTP"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailOTP"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_email_verifications_erify_partial_update",
        "description": "put: Update an Email OTP. (give the UUID and token.)",
        "summary": "Verify Email Verification",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedVerifyEmailOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedVerifyEmailOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedVerifyEmailOTP"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmailOTP"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields": {
      "post": {
        "operationId": "3.4_fields_create",
        "description": "This endpoint is used to create a field with any type. Although it only shows the general fields options on the schema, it accepts and excepts all the options needed for the given type.",
        "summary": "Create Generic Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Field"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Field"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Field"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/{slug}": {
      "get": {
        "operationId": "3.4_fields_retrieve",
        "description": "Read a field's data",
        "summary": "Get Field",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldAction"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_fields_update",
        "description": "get: Read a field's data\npatch: update a field's data. Although it only shows the general fields options on the schema, it accepts and excepts all the options needed for the given field's type.\npath: update a field's data. Although it only shows the general fields options on the schema, it accepts and excepts all the options needed for the given field's type.",
        "summary": "Edit Field",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldAction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FieldAction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FieldAction"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldAction"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_fields_partial_update",
        "description": "update a field's data. Although it only shows the general fields options on the schema, it accepts and excepts all the options needed for the given field's type.",
        "summary": "Edit Field",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFieldAction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFieldAction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFieldAction"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldAction"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_fields_destroy",
        "description": "get: Read a field's data\npatch: update a field's data. Although it only shows the general fields options on the schema, it accepts and excepts all the options needed for the given field's type.\npath: update a field's data. Although it only shows the general fields options on the schema, it accepts and excepts all the options needed for the given field's type.",
        "summary": "Delete Field",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/fields/{slug}/choices": {
      "get": {
        "operationId": "3.4_fields_choices_list",
        "description": "",
        "summary": "Field Choices",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedChoiceListList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/barcode": {
      "post": {
        "operationId": "3.4_fields_barcode_create",
        "description": "Use this endpoint to create a barcode field.",
        "summary": "Create Barcode Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/boolean": {
      "post": {
        "operationId": "3.4_fields_boolean_create",
        "description": "Use this endpoint to create a true/false input field.",
        "summary": "Create Boolean Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BooleanField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BooleanField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BooleanField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/choice": {
      "post": {
        "operationId": "3.4_fields_choice_create",
        "description": "Use this endpoint to create a radio choice input field.",
        "summary": "Create Choice Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChoiceField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChoiceField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChoiceField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChoiceField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/choice-fetch": {
      "post": {
        "operationId": "3.4_fields_choice_fetch_create",
        "description": "Use this endpoint to create a choice fetch field.",
        "summary": "Create Choice Fetch Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChoiceFetchField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChoiceFetchField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChoiceFetchField"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChoiceFetchField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/city": {
      "post": {
        "operationId": "3.4_fields_city_create",
        "description": "Use this endpoint to create a city field.",
        "summary": "Create City Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CityField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CityField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/date": {
      "post": {
        "operationId": "3.4_fields_date_create",
        "description": "Use this endpoint to create a date input field.",
        "summary": "Create Date Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DateField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DateField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DateField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/dropdown": {
      "post": {
        "operationId": "3.4_fields_dropdown_create",
        "description": "Use this endpoint to create a dropdown choice input field.",
        "summary": "Create Drop Down Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DropdownField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DropdownField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DropdownField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DropdownField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/duplicate": {
      "post": {
        "operationId": "3.4_fields_duplicate_create",
        "description": "Copy a form, which is owned by user or a template",
        "summary": "Duplicate Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DuplicateField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DuplicateField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DuplicateField"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DuplicateField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/email": {
      "post": {
        "operationId": "3.4_fields_email_create",
        "description": "Use this endpoint to create a email input field.",
        "summary": "Create Email Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmailField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EmailField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/file": {
      "post": {
        "operationId": "3.4_fields_file_create",
        "description": "Use this endpoint to create a file input field.",
        "summary": "Create File Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FileField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/hidden": {
      "post": {
        "operationId": "3.4_fields_hidden_create",
        "description": "Use this endpoint to create a hidden field.",
        "summary": "Create Hidden Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HiddenField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/HiddenField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/HiddenField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HiddenField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/location": {
      "post": {
        "operationId": "3.4_fields_location_create",
        "description": "Use this endpoint to create a location field.",
        "summary": "Create Location Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LocationField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LocationField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/long_text": {
      "post": {
        "operationId": "3.4_fields_long_text_create",
        "description": "Use this endpoint to create a long text input field.",
        "summary": "Create Text Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TextField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TextField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/lookup": {
      "post": {
        "operationId": "3.4_fields_lookup_create",
        "description": "Use this endpoint to create a lopkup field.",
        "summary": "Create Lookup Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LookupField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LookupField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LookupField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/matrix": {
      "post": {
        "operationId": "3.4_fields_matrix_create",
        "description": "Use this endpoint to create a matrix input field.",
        "summary": "Create Matrix Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatrixField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MatrixField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MatrixField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/meta": {
      "post": {
        "operationId": "3.4_fields_meta_create",
        "description": "Use this endpoint to create a meta field.",
        "summary": "Create Meta Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetaField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MetaField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MetaField"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/money": {
      "post": {
        "operationId": "3.4_fields_money_create",
        "description": "Use this endpoint to create a money input field.",
        "summary": "Create Money Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoneyField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MoneyField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MoneyField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoneyField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/multiple_select": {
      "post": {
        "operationId": "3.4_fields_multiple_select_create",
        "description": "Use this endpoint to create a multiple select input field.",
        "summary": "Create Multiple Select Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleSelectField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MultipleSelectField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MultipleSelectField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleSelectField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/number": {
      "post": {
        "operationId": "3.4_fields_number_create",
        "description": "Use this endpoint to create a number input field.",
        "summary": "Create Number Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NumberField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NumberField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/oembed": {
      "post": {
        "operationId": "3.4_fields_oembed_create",
        "description": "Use this endpoint to create a oembed field.",
        "summary": "Create Oembed Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OembedField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OembedField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OembedField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OembedField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/phone": {
      "post": {
        "operationId": "3.4_fields_phone_create",
        "description": "Use this endpoint to create a phone input field.",
        "summary": "Create Phone Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PhoneField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PhoneField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/phone_verification": {
      "post": {
        "operationId": "3.4_fields_phone_verification_create",
        "description": "Use this endpoint to create a phone input field.",
        "summary": "Create Phone Verification Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneVerificationField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PhoneVerificationField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PhoneVerificationField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneVerificationField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/product": {
      "post": {
        "operationId": "3.4_fields_product_create",
        "description": "Use this endpoint to create a product.",
        "summary": "Create Product Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProductField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProductField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/rating": {
      "post": {
        "operationId": "3.4_fields_rating_create",
        "description": "Use this endpoint to create a rating input field.",
        "summary": "Create Rating Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RatingField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RatingField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/short_text": {
      "post": {
        "operationId": "3.4_fields_short_text_create",
        "description": "Use this endpoint to create a short text input field.",
        "summary": "Create Char Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CharField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CharField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CharField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/signature": {
      "post": {
        "operationId": "3.4_fields_signature_create",
        "description": "Use this endpoint to create a signature input field.",
        "summary": "Create Signature Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignatureField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SignatureField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SignatureField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/text_choice": {
      "post": {
        "operationId": "3.4_fields_text_choice_create",
        "description": "Use this endpoint to create a text choice field.",
        "summary": "Create Text Choice Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextChoiceField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TextChoiceField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TextChoiceField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextChoiceField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/time": {
      "post": {
        "operationId": "3.4_fields_time_create",
        "description": "Use this endpoint to create a time input field.",
        "summary": "Create Time Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TimeField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TimeField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/website": {
      "post": {
        "operationId": "3.4_fields_website_create",
        "description": "Use this endpoint to create a web input field.",
        "summary": "Create Website Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/fields/yes_no": {
      "post": {
        "operationId": "3.4_fields_yes_no_create",
        "description": "Use this endpoint to create a yes/no input field.",
        "summary": "Create Yes No Field",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/YesNoField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/YesNoField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/YesNoField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YesNoField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/force-updates": {
      "get": {
        "operationId": "3.4_force_updates_list",
        "description": "",
        "summary": "Get Force Updates List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedForceUpdateList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/form-and-rows": {
      "get": {
        "operationId": "3.4_form_and_rows_list",
        "description": "",
        "summary": "Search Forms And Rows",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFormSummaryList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/form-displays/address/{address}": {
      "get": {
        "operationId": "3.4_form_displays_address_retrieve",
        "description": "Show a form and it's fields by form address.",
        "summary": "Show Form",
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "type": "string",
              "description": "A unique string to identify form for users. It's auto-generated if not set by user."
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowForm"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/form-displays/by-domain": {
      "get": {
        "operationId": "3.4_form_displays_by_domain_retrieve",
        "description": "Show a form and it's fields by form address.",
        "summary": "Show Form",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowForm"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/form-displays/slug/{slug}": {
      "get": {
        "operationId": "3.4_form_displays_slug_retrieve",
        "description": "Show a form and it's fields by form slug.",
        "summary": "Get Form",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowForm"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/form-displays/slug/{slug}/submit": {
      "post": {
        "operationId": "3.4_form_displays_slug_submit_create",
        "description": "Submit a form.",
        "summary": "Submit Form",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/form-displays/tag/{address}": {
      "get": {
        "operationId": "3.4_form_displays_tag_list",
        "description": "Show a list of forms that have a specific tag",
        "summary": "Tag Forms",
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedShowFormSummaryList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/form-excel-imports": {
      "post": {
        "operationId": "3.4_form_excel_imports_create",
        "description": "",
        "summary": "Form Import Api",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormImport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormImport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormImport"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormImport"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/form-shares/{slug}": {
      "delete": {
        "operationId": "3.4_form_shares_destroy",
        "description": "",
        "summary": "Remove Access On Form",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/form-tags": {
      "get": {
        "operationId": "3.4_form_tags_list",
        "description": "Get a list of form tags created by current user.",
        "summary": "Get Form Tag List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFormTagList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_form_tags_create",
        "description": "Create a form tag.",
        "summary": "Create Form Tag",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormTag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormTag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormTag"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormTag"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/form-tags/{slug}": {
      "get": {
        "operationId": "3.4_form_tags_retrieve",
        "description": "Show a form tag.",
        "summary": "Get Form Tag",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormTag"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_form_tags_update",
        "description": "Update a form tag.",
        "summary": "Edit Form Tag",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormTag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormTag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormTag"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormTag"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_form_tags_partial_update",
        "description": "Update a form tag.",
        "summary": "Edit Form Tag",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormTag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormTag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormTag"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormTag"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_form_tags_destroy",
        "description": "Delete a form tag.",
        "summary": "Delete Form Tag",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/form-templates": {
      "get": {
        "operationId": "3.4_form_templates_list",
        "description": "Show a list of templates list.",
        "summary": "Get Form Template List",
        "parameters": [
          {
            "in": "query",
            "name": "categories",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFormTemplateList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/form-themes": {
      "get": {
        "operationId": "3.4_form_themes_list",
        "description": "Get a list of form",
        "summary": "Get Theme List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedThemeList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_form_themes_create",
        "description": "Create a category for user's forms.",
        "summary": "Create Theme",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms": {
      "get": {
        "operationId": "3.4_forms_list",
        "description": "Give a list of all forms created by or shared with the current user.",
        "summary": "Get Form List",
        "parameters": [
          {
            "in": "query",
            "name": "categories",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "copied_from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFormSummaryList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_forms_create",
        "description": "Creates a dynamic form for the current user.",
        "summary": "Create Form",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormSummary"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormSummary"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormSummary"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormSummary"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/boards": {
      "get": {
        "operationId": "3.4_forms_boards_list",
        "description": "Get a list of boards belonging to a specific form.",
        "summary": "Get Board List",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBoardListList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_forms_boards_create",
        "description": "Get a new board for the form.",
        "summary": "Create Board",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardList"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BoardList"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BoardList"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/boards/{board_share_address}/copy": {
      "post": {
        "operationId": "3.4_forms_boards_copy_create",
        "description": "copy a board",
        "summary": "Board Copy",
        "parameters": [
          {
            "in": "path",
            "name": "board_share_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardCopy"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BoardCopy"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BoardCopy"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardCopy"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/boards/{board_slug}": {
      "get": {
        "operationId": "3.4_forms_boards_retrieve",
        "description": "Get a board with it's main data.",
        "summary": "Board Action",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateBoard"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_forms_boards_update",
        "description": "Update a board.",
        "summary": "Board Action",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateBoard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PrivateBoard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PrivateBoard"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateBoard"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_forms_boards_partial_update",
        "description": "update a board.",
        "summary": "Board Action",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPrivateBoard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPrivateBoard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPrivateBoard"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateBoard"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_forms_boards_destroy",
        "description": "get: Get a board with it's main data.\nput: Update a board.\npatch: update a board.",
        "summary": "Board Action",
        "parameters": [
          {
            "in": "path",
            "name": "board_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/boards/primary": {
      "get": {
        "operationId": "3.4_forms_boards_primary_retrieve",
        "description": "Get the form's primary board.",
        "summary": "Primary Board",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateBoard"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_forms_boards_primary_update",
        "description": "Update the form's primary board.",
        "summary": "Primary Board",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateBoard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PrivateBoard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PrivateBoard"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateBoard"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_forms_boards_primary_partial_update",
        "description": "update the form's primary board.",
        "summary": "Primary Board",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPrivateBoard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPrivateBoard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPrivateBoard"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateBoard"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_forms_boards_primary_destroy",
        "description": "get: Get the form's primary board.\nput: Update the form's primary board.\npatch: update the form's primary board.",
        "summary": "Primary Board",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/combined-fields-charts": {
      "get": {
        "operationId": "3.4_forms_combined_fields_charts_list",
        "description": "Get a list of combined_fields_charts belonging to a specific form.",
        "summary": "Get Form Combined Fields Chart List",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCombinedFieldsChartList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/reports": {
      "get": {
        "operationId": "3.4_forms_reports_list",
        "description": "Get a list of combined_fields_charts belonging to a specific form.",
        "summary": "Get Form Reports List",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedReportList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/table-charts": {
      "get": {
        "operationId": "3.4_forms_table_charts_list",
        "description": "Get a list of table charts belonging to a specific form.",
        "summary": "Get Form Table Chart List",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTableChartList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/webhooks": {
      "get": {
        "operationId": "3.4_forms_webhooks_list",
        "description": "",
        "summary": "Get Form Webhook List",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormWebhook"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_forms_webhooks_create",
        "description": "",
        "summary": "Create Form Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormWebhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormWebhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormWebhook"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormWebhook"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/webhooks/{slug}": {
      "get": {
        "operationId": "3.4_forms_webhooks_retrieve",
        "description": "Show a form webhook.",
        "summary": "Get Form Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormWebhook"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_forms_webhooks_update",
        "description": "Update a form webhook.",
        "summary": "Edit Form Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormWebhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormWebhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormWebhook"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormWebhook"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_forms_webhooks_partial_update",
        "description": "Update a form webhook.",
        "summary": "Edit Form Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormWebhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormWebhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormWebhook"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormWebhook"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_forms_webhooks_destroy",
        "description": "Delete a form webhook.",
        "summary": "Delete Form Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/forms/{form_slug}/webhooks/{slug}/sample-data": {
      "get": {
        "operationId": "3.4_forms_webhooks_sample_data_retrieve",
        "description": "",
        "summary": "Webhook Sample Data",
        "parameters": [
          {
            "in": "path",
            "name": "form_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSampleData"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}": {
      "get": {
        "operationId": "3.4_forms_retrieve",
        "description": "Show a form and its fields.",
        "summary": "Get Form",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_forms_update",
        "description": "Update a form.",
        "summary": "Edit Form",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdate"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_forms_partial_update",
        "description": "Update a form.",
        "summary": "Edit Form",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormUpdate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormUpdate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormUpdate"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormUpdate"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_forms_destroy",
        "description": "Delete a form and all its submitted data.",
        "summary": "Delete Form",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/forms/{slug}/copy": {
      "post": {
        "operationId": "3.4_forms_copy_create",
        "description": "Copy a form, which is owned by user or a template",
        "summary": "Copy Form",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyForm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CopyForm"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CopyForm"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyForm"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/excel-export": {
      "post": {
        "operationId": "3.4_forms_excel_export_create",
        "description": "get: Export form data to excel.",
        "summary": "Export Excel",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/forms/{slug}/fields": {
      "put": {
        "operationId": "3.4_forms_fields_update",
        "description": "Update a form's fields. (give the list of form fields.)",
        "summary": "Form Fields",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FormField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FormField"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormField"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_forms_fields_partial_update",
        "description": "Update a form's fields. (give the list of form fields.)",
        "summary": "Form Fields",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormField"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedFormField"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormField"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/get-utm-query": {
      "post": {
        "operationId": "3.4_forms_get_utm_query_create",
        "description": "Create a UTM tracker for the form.",
        "summary": "Create Utm Tracker",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUTMTracker"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateUTMTracker"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateUTMTracker"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUTMTracker"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/google-sheet-export": {
      "post": {
        "operationId": "3.4_forms_google_sheet_export_create",
        "description": "Export form data to excel.",
        "summary": "Export To Google Sheets",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportToGoogleSheets"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ExportToGoogleSheets"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExportToGoogleSheets"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportToGoogleSheets"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/live-dashboard-code": {
      "get": {
        "operationId": "3.4_forms_live_dashboard_code_retrieve",
        "description": "Create the form's current active live dashboard code.",
        "summary": "Form Live Dashboard Code Get Create",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveDashboardCode"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_forms_live_dashboard_code_create",
        "description": "Create a live dashboard code for a form, replacing any existing code.",
        "summary": "Create Form Live Dashboard Code Get",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiveDashboardCode"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LiveDashboardCode"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LiveDashboardCode"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveDashboardCode"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/row-tags": {
      "get": {
        "operationId": "3.4_forms_row_tags_list",
        "description": "",
        "summary": "Row Tag",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRowTagList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_forms_row_tags_create",
        "description": "",
        "summary": "Row Tag",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RowTag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RowTag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RowTag"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowTag"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/row-tags/{tag_slug}": {
      "get": {
        "operationId": "3.4_forms_row_tags_retrieve",
        "description": "",
        "summary": "Row Tag",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "tag_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowTag"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_forms_row_tags_update",
        "description": "",
        "summary": "Row Tag",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "tag_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RowTag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RowTag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RowTag"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowTag"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_forms_row_tags_partial_update",
        "description": "",
        "summary": "Row Tag",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "tag_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRowTag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRowTag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRowTag"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowTag"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_forms_row_tags_destroy",
        "description": "",
        "summary": "Row Tag",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "tag_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/forms/{slug}/rows": {
      "get": {
        "operationId": "3.4_forms_rows_list",
        "description": "Show a form with all of it's submitted data.",
        "summary": "Form Rows",
        "parameters": [
          {
            "in": "query",
            "name": "created_at",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__day",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__month",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__year",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "submit_time",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_gt",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_gte",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_lt",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_lte",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            },
            "description": "Comma seperated list.",
            "examples": {
              "Example": {
                "value": "item1,item2,item3"
              }
            }
          },
          {
            "in": "query",
            "name": "tracking_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRowList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_forms_rows_create",
        "description": "get: Show a form with all of it's submitted data.",
        "summary": "Form Rows",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Row"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Row"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Row"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Row"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/rows/bulk-delete": {
      "post": {
        "operationId": "3.4_forms_rows_bulk_delete_create",
        "description": "",
        "summary": "Row Bulk Delete",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RowBulkDelete"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RowBulkDelete"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RowBulkDelete"
              }
            }
          },
          "required": true
        },
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowBulkDelete"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/share": {
      "post": {
        "operationId": "3.4_forms_share_create",
        "description": "",
        "summary": "Share Access On Form",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareAccessOnForm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ShareAccessOnForm"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ShareAccessOnForm"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareAccessOnForm"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/shared-users": {
      "get": {
        "operationId": "3.4_forms_shared_users_list",
        "description": "",
        "summary": "Get Form Shared Profiles List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFormSharedProfilesListList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/forms/{slug}/stats": {
      "get": {
        "operationId": "3.4_forms_stats_retrieve",
        "description": "Give some simple stats about the form data",
        "summary": "Form Stats",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormStats"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/live-dashboards": {
      "post": {
        "operationId": "3.4_live_dashboards_create",
        "description": "Get a form's data by its live dashboard code.",
        "summary": "Form Live Dashboard Code",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetLiveDashboardCode"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GetLiveDashboardCode"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GetLiveDashboardCode"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLiveDashboardCode"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/live-dashboards/{live_dashboard_address}": {
      "get": {
        "operationId": "3.4_live_dashboards_retrieve",
        "description": "Give the stats for a live dashboard form.",
        "summary": "Form Live Dashboard",
        "parameters": [
          {
            "in": "path",
            "name": "live_dashboard_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormLiveDashboard"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/live-dashboards/{live_dashboard_address}/rows": {
      "get": {
        "operationId": "3.4_live_dashboards_rows_list",
        "description": "Give the list of all submits for a live dashboard form.",
        "summary": "Form Live Dashboard Rows",
        "parameters": [
          {
            "in": "query",
            "name": "created_at",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__day",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__month",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__year",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "live_dashboard_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "submit_time",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_gt",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_gte",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_lt",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_lte",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            },
            "description": "Comma seperated list.",
            "examples": {
              "Example": {
                "value": "item1,item2,item3"
              }
            }
          },
          {
            "in": "query",
            "name": "tracking_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRowList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_live_dashboards_rows_create",
        "description": "Give the list of all submits for a live dashboard form.",
        "summary": "Form Live Dashboard Rows",
        "parameters": [
          {
            "in": "path",
            "name": "live_dashboard_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Row"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Row"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Row"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Row"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/live-dashboards/{live_dashboard_address}/rows/{row_slug}/votes": {
      "get": {
        "operationId": "3.4_live_dashboards_rows_otes_retrieve",
        "description": "",
        "summary": "Form Live Dashboard Row Votes",
        "parameters": [
          {
            "in": "path",
            "name": "live_dashboard_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "row_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowVote"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_live_dashboards_rows_otes_create",
        "description": "",
        "summary": "Form Live Dashboard Row Votes",
        "parameters": [
          {
            "in": "path",
            "name": "live_dashboard_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "row_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RowVote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RowVote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RowVote"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowVote"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/live-dashboards/{live_dashboard_address}/rows/{row_slug}/votes/{slug}": {
      "put": {
        "operationId": "3.4_live_dashboards_rows_otes_update",
        "description": "",
        "summary": "Form Live Dashboard Row Votes",
        "parameters": [
          {
            "in": "path",
            "name": "live_dashboard_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "row_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RowVote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RowVote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RowVote"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowVote"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_live_dashboards_rows_otes_destroy",
        "description": "",
        "summary": "Form Live Dashboard Row Votes",
        "parameters": [
          {
            "in": "path",
            "name": "live_dashboard_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "row_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/oauth2/confirm-code": {
      "post": {
        "operationId": "3.4_oauth2_confirm_code_create",
        "description": "",
        "summary": "Confirm O Auth2 Login",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmOAuth2Login"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmOAuth2Login"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmOAuth2Login"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmOAuth2Login"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/oauth2/request-redirect": {
      "post": {
        "operationId": "3.4_oauth2_request_redirect_create",
        "description": "",
        "summary": "Redirection Address",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedirectionAddress"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RedirectionAddress"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RedirectionAddress"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectionAddress"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/payment-methods": {
      "get": {
        "operationId": "3.4_payment_methods_list",
        "description": "",
        "summary": "Payment Method",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPaymentMethodList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "3.4_payment_methods_create",
        "description": "",
        "summary": "Payment Method",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/payment-methods/{slug}": {
      "get": {
        "operationId": "3.4_payment_methods_retrieve",
        "description": "",
        "summary": "Payment Method",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_payment_methods_update",
        "description": "",
        "summary": "Payment Method",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/phone_verifications": {
      "post": {
        "operationId": "3.4_phone_verifications_create",
        "description": "Create SMSOTP and return UUID for further verification with token.",
        "summary": "Request Phone Verification",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPhoneVerificationOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RequestPhoneVerificationOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestPhoneVerificationOTP"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestPhoneVerificationOTP"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/phone_verifications/{uuid}/resend": {
      "put": {
        "operationId": "3.4_phone_verifications_resend_update",
        "description": "patch: Update a SMSOTP. (give the UUID and token.)",
        "summary": "Resend Phone Verification",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendPhoneOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResendPhoneOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ResendPhoneOTP"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendPhoneOTP"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_phone_verifications_resend_partial_update",
        "description": "Update a SMSOTP. (give the UUID and token.)",
        "summary": "Resend Phone Verification",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedResendPhoneOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedResendPhoneOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedResendPhoneOTP"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendPhoneOTP"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/phone_verifications/{uuid}/verify": {
      "put": {
        "operationId": "3.4_phone_verifications_erify_update",
        "description": "Update a SMSOTP. (give the UUID and token.)",
        "summary": "Verify Phone Verification",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneOTP"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyPhoneOTP"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_phone_verifications_erify_partial_update",
        "description": "put: Update a SMSOTP. (give the UUID and token.)",
        "summary": "Verify Phone Verification",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedVerifyPhoneOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedVerifyPhoneOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedVerifyPhoneOTP"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyPhoneOTP"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/profile": {
      "get": {
        "operationId": "3.4_profile_retrieve",
        "description": "Gives full profile information.",
        "summary": "Get Profile Edit",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_profile_update",
        "description": "Updates the profile information.",
        "summary": "Profile Retrieve Edit",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_profile_partial_update",
        "description": "Updates the profile information.",
        "summary": "Profile Retrieve Edit",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedProfile"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/profile/extensions-stats": {
      "get": {
        "operationId": "3.4_profile_extensions_stats_retrieve",
        "description": "",
        "summary": "Profile Extensions Stats",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileExtensionsStats"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/push-notification-register": {
      "post": {
        "operationId": "3.4_push_notification_register_create",
        "description": "Register a user to receive notifications on a device.",
        "summary": "Register Client",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterClient"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RegisterClient"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RegisterClient"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterClient"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/push-notification-unregister": {
      "post": {
        "operationId": "3.4_push_notification_unregister_create",
        "description": "Un-register a user from receiving notifications on a device.",
        "summary": "Un Register Client",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnRegisterClient"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UnRegisterClient"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UnRegisterClient"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnRegisterClient"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/reports/{report_slug}": {
      "get": {
        "operationId": "3.4_reports_retrieve",
        "description": "Get a report with it's main data.",
        "summary": "Report Action",
        "parameters": [
          {
            "in": "path",
            "name": "report_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_reports_update",
        "description": "Update a report.",
        "summary": "Report Action",
        "parameters": [
          {
            "in": "path",
            "name": "report_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Report"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Report"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Report"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_reports_partial_update",
        "description": "Update a report.",
        "summary": "Report Action",
        "parameters": [
          {
            "in": "path",
            "name": "report_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedReport"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_reports_destroy",
        "description": "Delete a report.",
        "summary": "Report Action",
        "parameters": [
          {
            "in": "path",
            "name": "report_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/reports/combined-fields-charts": {
      "post": {
        "operationId": "3.4_reports_combined_fields_charts_create",
        "description": "Use this endpoint to create a combined fields chart.",
        "summary": "Create Combined Fields Chart",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CombinedFieldsChartCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CombinedFieldsChartCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CombinedFieldsChartCreate"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CombinedFieldsChartCreate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/reports/table-charts": {
      "post": {
        "operationId": "3.4_reports_table_charts_create",
        "description": "Use this endpoint to create a table chart.",
        "summary": "Create Table Chart",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableChartCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TableChartCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TableChartCreate"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableChartCreate"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/row-results/{submit_code}": {
      "get": {
        "operationId": "3.4_row_results_retrieve",
        "description": "Use the submit code of a row to show it's submit results.",
        "summary": "Row Result",
        "parameters": [
          {
            "in": "path",
            "name": "submit_code",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowResult"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/rows": {
      "get": {
        "operationId": "3.4_rows_list",
        "description": "Show a list of all submitted data for user.",
        "summary": "Get Row List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            },
            "description": "Comma seperated list.",
            "examples": {
              "Example": {
                "value": "item1,item2,item3"
              }
            }
          },
          {
            "in": "query",
            "name": "tracking_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRowSearchList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/rows/{slug}": {
      "get": {
        "operationId": "3.4_rows_retrieve",
        "description": "Get an specific submitted row.",
        "summary": "Row",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowActions"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "3.4_rows_update",
        "description": "Update an specific submitted row.",
        "summary": "Row",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RowActions"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RowActions"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RowActions"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowActions"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "3.4_rows_partial_update",
        "description": "Update an specific submitted row.",
        "summary": "Row",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRowActions"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRowActions"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRowActions"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RowActions"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "3.4_rows_destroy",
        "description": "get: Get an specific submitted row.\nput: Update an specific submitted row.\npatch: Update an specific submitted row.",
        "summary": "Row",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/v3.4/shared-boards/{board_share_address}": {
      "get": {
        "operationId": "3.4_shared_boards_retrieve",
        "description": "Use to retrieve a board shared by its share address.",
        "summary": "Get Shared Board",
        "parameters": [
          {
            "in": "path",
            "name": "board_share_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/shared-boards/{board_share_address}/blocks": {
      "get": {
        "operationId": "3.4_shared_boards_blocks_list",
        "description": "Use to retrieve the list of blocks on a board shared by its share address.",
        "summary": "Get Shared Board Block List",
        "parameters": [
          {
            "in": "path",
            "name": "board_share_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBlockList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/shared-boards/{board_share_address}/blocks/{block_slug}": {
      "get": {
        "operationId": "3.4_shared_boards_blocks_retrieve",
        "description": "Use to retrieve a block from a board shared by its share address.",
        "summary": "Get Shared Board Block",
        "parameters": [
          {
            "in": "path",
            "name": "block_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "board_share_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/shared-boards/{board_share_address}/blocks/{block_slug}/content": {
      "get": {
        "operationId": "3.4_shared_boards_blocks_content_list",
        "description": "Use to retrieve contents of a block from a board shared by its share address.",
        "summary": "Shared Board Block Content",
        "parameters": [
          {
            "in": "path",
            "name": "block_slug",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "board_share_address",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "created_at",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__day",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__month",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "created_at__year",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "submit_time",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_gt",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_gte",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_lt",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "submit_time_lte",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            },
            "description": "Comma seperated list.",
            "examples": {
              "Example": {
                "value": "item1,item2,item3"
              }
            }
          },
          {
            "in": "query",
            "name": "tracking_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBlockList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/template-boards": {
      "get": {
        "operationId": "3.4_template_boards_list",
        "description": "",
        "summary": "Get Template Boards List",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBoardListList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/template-categories": {
      "get": {
        "operationId": "3.4_template_categories_list",
        "description": "Get a list of templates' categories.",
        "summary": "Get Template Category List",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v3.4/template-tags": {
      "get": {
        "operationId": "3.4_template_tags_list",
        "description": "Get a list of templates' tags.",
        "summary": "Get Template Form Tag List",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "A search query on the list items."
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "3.4"
        ],
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormTag"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/v1.0/action-type-groups": {
      "get": {
        "summary": "Get Action Type Group List",
        "tags": [
          "Action Type Groups"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "count": 123,
                      "next": "http://api.example.org/accounts/?page=4",
                      "previous": "http://api.example.org/accounts/?page=2",
                      "page_size": 10,
                      "page_count": 13,
                      "current_page": 3,
                      "action_type_groups": [
                        {
                          "title": "string",
                          "description": "string",
                          "default_text_template": {
                            "property1": null,
                            "property2": null
                          },
                          "slug": "string"
                        }
                      ]
                    }
                  },
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "next": {
                      "type": "string"
                    },
                    "previous": {
                      "type": "string"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "page_count": {
                      "type": "integer"
                    },
                    "current_page": {
                      "type": "integer"
                    },
                    "action_type_groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "default_text_template": {
                            "type": "object",
                            "properties": {
                              "property1": {
                                "nullable": true
                              },
                              "property2": {
                                "nullable": true
                              }
                            }
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-action-type-groups",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "active_business",
            "required": true,
            "description": "Slug of the business we're performing the action on."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "A page number within the paginated result set."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "description": "Use this endpoint to get a list of all action type groups, if you want to create your action type based on one of them."
      },
      "parameters": []
    },
    "/v1.0/action-types": {
      "get": {
        "summary": "Create Action Type",
        "tags": [
          "Action Types"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "next": {
                      "type": "string"
                    },
                    "previous": {
                      "type": "string"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "page_count": {
                      "type": "integer"
                    },
                    "current_page": {
                      "type": "integer"
                    },
                    "action_types": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "integration": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              },
                              "website": {
                                "type": "string"
                              }
                            }
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "slug": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "slug": {
                            "type": "string"
                          },
                          "is_owned": {
                            "type": "boolean"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "default_operation_type": {
                            "type": "string"
                          },
                          "activity_text_template": {
                            "type": "object",
                            "properties": {
                              "property1": {
                                "nullable": true
                              },
                              "property2": {
                                "nullable": true
                              }
                            }
                          },
                          "action_score": {
                            "type": "integer"
                          },
                          "group": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "default_text_template": {
                                "type": "object",
                                "properties": {
                                  "property1": {
                                    "nullable": true
                                  },
                                  "property2": {
                                    "nullable": true
                                  }
                                }
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "count": 123,
                      "next": "http://api.example.org/accounts/?page=4",
                      "previous": "http://api.example.org/accounts/?page=2",
                      "page_size": 10,
                      "page_count": 13,
                      "current_page": 3,
                      "action_types": [
                        {
                          "title": "string",
                          "description": "string",
                          "integration": {
                            "title": "string",
                            "description": "string",
                            "slug": "string",
                            "website": "http://example.com"
                          },
                          "tags": [
                            {
                              "title": "string",
                              "description": "string",
                              "slug": "string"
                            }
                          ],
                          "slug": "string",
                          "is_owned": true,
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "default_operation_type": "create",
                          "activity_text_template": {
                            "property1": null,
                            "property2": null
                          },
                          "action_score": -2147483648,
                          "group": {
                            "title": "string",
                            "description": "string",
                            "default_text_template": {
                              "property1": null,
                              "property2": null
                            },
                            "slug": "string"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-action-types",
        "description": "Use this endpoint to get a list of all action types defined on your integration, or the integrations you're using.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "active_business",
            "required": true,
            "description": "Slug of the business we're performing the action on."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "A page number within the paginated result set."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create Action Type",
        "operationId": "post-action-types",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Use this endpoint to create a custom action type on your integration, if you want to catch a desired activity (e.g. visiting a page).",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "active_business",
            "required": true,
            "description": "Slug of the business we're performing the action on."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "title": "string",
                    "description": "string",
                    "default_operation_type": "create",
                    "activity_text_template": {
                      "property1": null,
                      "property2": null
                    },
                    "action_score": -2147483648
                  }
                },
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "default_operation_type": {
                    "type": "string"
                  },
                  "activity_text_template": {
                    "type": "object",
                    "properties": {
                      "property1": {
                        "nullable": true
                      },
                      "property2": {
                        "nullable": true
                      }
                    }
                  },
                  "action_score": {
                    "type": "integer"
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "tags": [
          "Action Types"
        ]
      },
      "parameters": []
    },
    "/v1.0/action-types/{slug}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "slug",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Action Type",
        "tags": [
          "Action Types"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "integration": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "website": {
                          "type": "string"
                        }
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "slug": {
                      "type": "string"
                    },
                    "is_owned": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "default_operation_type": {
                      "type": "string"
                    },
                    "activity_text_template": {
                      "type": "object",
                      "properties": {
                        "property1": {
                          "nullable": true
                        },
                        "property2": {
                          "nullable": true
                        }
                      }
                    },
                    "action_score": {
                      "type": "integer"
                    },
                    "group": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "default_text_template": {
                          "type": "object",
                          "properties": {
                            "property1": {
                              "nullable": true
                            },
                            "property2": {
                              "nullable": true
                            }
                          }
                        },
                        "slug": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "title": "string",
                      "description": "string",
                      "integration": {
                        "title": "string",
                        "description": "string",
                        "slug": "string",
                        "website": "http://example.com"
                      },
                      "tags": [
                        {
                          "title": "string",
                          "description": "string",
                          "slug": "string"
                        }
                      ],
                      "slug": "string",
                      "is_owned": true,
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "default_operation_type": "create",
                      "activity_text_template": {
                        "property1": null,
                        "property2": null
                      },
                      "action_score": -2147483648,
                      "group": {
                        "title": "string",
                        "description": "string",
                        "default_text_template": {
                          "property1": null,
                          "property2": null
                        },
                        "slug": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-action-types-slug",
        "description": "Get a specific action type with its data.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      },
      "patch": {
        "summary": "Edit Action Type",
        "operationId": "patch-action-types-slug",
        "description": "Update an action type's data.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "title": "string",
                    "description": "string",
                    "default_operation_type": "create",
                    "activity_text_template": {
                      "property1": null,
                      "property2": null
                    },
                    "action_score": -2147483648
                  }
                },
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "default_operation_type": {
                    "type": "string"
                  },
                  "activity_text_template": {
                    "type": "object",
                    "properties": {
                      "property1": {
                        "nullable": true
                      },
                      "property2": {
                        "nullable": true
                      }
                    }
                  },
                  "action_score": {
                    "type": "integer"
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Action Types"
        ]
      },
      "delete": {
        "summary": "Delete Action Type",
        "operationId": "delete-action-types-slug",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Delete an action type.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "Action Types"
        ]
      }
    },
    "/v1.0/activities": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "Activities"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "next": {
                      "type": "string"
                    },
                    "previous": {
                      "type": "string"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "page_count": {
                      "type": "integer"
                    },
                    "current_page": {
                      "type": "integer"
                    },
                    "activities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          },
                          "operation_type": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "activity_date": {
                            "type": "string"
                          },
                          "customer": {
                            "type": "object",
                            "properties": {
                              "full_name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              },
                              "code": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "updated_at": {
                                "type": "string"
                              },
                              "score": {
                                "type": "integer"
                              },
                              "level": {
                                "type": "integer"
                              }
                            }
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "count": 123,
                      "next": "http://api.example.org/accounts/?page=4",
                      "previous": "http://api.example.org/accounts/?page=2",
                      "page_size": 10,
                      "page_count": 13,
                      "current_page": 3,
                      "activities": [
                        {
                          "action": {
                            "title": "string",
                            "description": "string",
                            "slug": "string"
                          },
                          "operation_type": "create",
                          "description": "string",
                          "activity_date": "2019-08-24T14:15:22Z",
                          "customer": {
                            "full_name": "string",
                            "email": "user@example.com",
                            "phone_number": "string",
                            "code": "f5d62b05-370e-48be-a755-8675ca146431",
                            "slug": "string",
                            "created_at": "2019-08-24T14:15:22Z",
                            "updated_at": "2019-08-24T14:15:22Z",
                            "score": 0,
                            "level": 0
                          },
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "slug": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-activities",
        "description": "Use this endpoint to get a list of all activities created for the cuurent business using this integration.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "description": "The application secret provided to the client.",
            "name": "x-api-key",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "action_type"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "active_business",
            "required": true,
            "description": "Slug of the business we're performing the action on."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "activity_date",
            "description": "Query over the date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "created_at",
            "description": "Query over the date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "operation_type",
            "description": "Comma seperated list."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "A page number within the paginated result set."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create Activity",
        "operationId": "post-activities",
        "description": "Use this endpoint to create an activity for a new or existing customer (e.g. An rer was created, a form was submitted, etc).",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "action_type"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "active_business",
            "description": "Slug of the business we're performing the action on.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "activity_date",
            "description": "Query over the date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "created_at",
            "description": "Query over the date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "operation_type",
            "description": "Comma seperated list."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "action": {
                      "title": "string",
                      "description": "string"
                    },
                    "operation_type": "create",
                    "activity_date": "2019-08-24T14:15:22Z",
                    "slug": "string"
                  }
                },
                "properties": {
                  "action": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "title"
                    ]
                  },
                  "operation_type": {
                    "type": "string"
                  },
                  "activity_date": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  }
                },
                "required": [
                  "slug"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Activities"
        ]
      },
      "parameters": []
    },
    "/v1.0/businesses": {
      "get": {
        "summary": "Get Business List",
        "tags": [
          "Businesses"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "x-examples": {
                    "example-1": [
                      {
                        "full_name": "string",
                        "email": "user@example.com",
                        "phone_number": "string",
                        "code": "f5d62b05-370e-48be-a755-8675ca146431",
                        "slug": "string",
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z",
                        "score": 0,
                        "level": 0
                      }
                    ]
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "full_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "score": {
                        "type": "integer"
                      },
                      "level": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-businesses",
        "description": "Gives a list of available businesses for the current user.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      },
      "parameters": []
    },
    "/v1.0/currencies": {
      "get": {
        "summary": "Get Currency List",
        "tags": [
          "Currencies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "next": {
                      "type": "string"
                    },
                    "previous": {
                      "type": "string"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "page_count": {
                      "type": "integer"
                    },
                    "current_page": {
                      "type": "integer"
                    },
                    "currencies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "iso_code": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "count": 123,
                      "next": "http://api.example.org/accounts/?page=4",
                      "previous": "http://api.example.org/accounts/?page=2",
                      "page_size": 10,
                      "page_count": 13,
                      "current_page": 3,
                      "currencies": [
                        {
                          "title": "string",
                          "iso_code": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-currencies",
        "description": "Use this endpoint to get a list of available currencies for activities' monetary value.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "active_business",
            "description": "Slug of the business we're performing the action on.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "A page number within the paginated result set."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      },
      "parameters": []
    },
    "/v1.0/customers": {
      "get": {
        "summary": "Get Customer List",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "next": {
                      "type": "string"
                    },
                    "previous": {
                      "type": "string"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "page_count": {
                      "type": "integer"
                    },
                    "current_page": {
                      "type": "integer"
                    },
                    "customers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "customer_data": {
                            "type": "object",
                            "properties": {
                              "property1": {
                                "nullable": true
                              },
                              "property2": {
                                "nullable": true
                              }
                            }
                          },
                          "full_name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "slug": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "score": {
                            "type": "integer"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "count": 123,
                      "next": "http://api.example.org/accounts/?page=4",
                      "previous": "http://api.example.org/accounts/?page=2",
                      "page_size": 10,
                      "page_count": 13,
                      "current_page": 3,
                      "customers": [
                        {
                          "code": "f5d62b05-370e-48be-a755-8675ca146431",
                          "customer_data": {
                            "property1": null,
                            "property2": null
                          },
                          "full_name": "string",
                          "email": "user@example.com",
                          "phone_number": "string",
                          "tags": [
                            {
                              "title": "string",
                              "description": "string",
                              "slug": "string"
                            }
                          ],
                          "score": 0,
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-customers",
        "description": "Gives a list of all customers on the current business.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "active_business",
            "description": "Slug of the business we're performing the action on.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "A page number within the paginated result set."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create Customer",
        "operationId": "post-customers",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "required": true,
            "description": "The application secret provided to the client."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "active_business",
            "required": true,
            "description": "Slug of the business we're performing the action on."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_data": {
                    "type": "object",
                    "properties": {
                      "property1": {
                        "nullable": true
                      },
                      "property2": {
                        "nullable": true
                      }
                    }
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "score": {
                    "type": "integer"
                  }
                },
                "x-examples": {
                  "example-1": {
                    "customer_data": {
                      "property1": null,
                      "property2": null
                    },
                    "full_name": "string",
                    "email": "user@example.com",
                    "phone_number": "string",
                    "tags": [
                      {
                        "title": "string",
                        "description": "string",
                        "slug": "string"
                      }
                    ],
                    "score": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ],
        "description": "Create a new customer on the current business."
      },
      "parameters": []
    },
    "/v1.0/customers/{code}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Customer",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "customer_data": {
                      "type": "object",
                      "properties": {
                        "property1": {
                          "nullable": true
                        },
                        "property2": {
                          "nullable": true
                        }
                      }
                    },
                    "full_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "score": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "code": "f5d62b05-370e-48be-a755-8675ca146431",
                      "customer_data": {
                        "property1": null,
                        "property2": null
                      },
                      "full_name": "string",
                      "email": "user@example.com",
                      "phone_number": "string",
                      "tags": [
                        {
                          "title": "string",
                          "description": "string",
                          "slug": "string"
                        }
                      ],
                      "score": 0,
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-customers-code",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "JWT token"
          }
        ],
        "description": "Get a customer's data."
      },
      "patch": {
        "summary": "Edit Customer",
        "operationId": "patch-customers-code",
        "description": "Update a customer.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "required": true,
            "description": "The application secret provided to the client."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_data": {
                    "type": "object",
                    "properties": {
                      "property1": {
                        "nullable": true
                      },
                      "property2": {
                        "nullable": true
                      }
                    }
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "score": {
                    "type": "integer"
                  }
                },
                "x-examples": {
                  "example-1": {
                    "customer_data": {
                      "property1": null,
                      "property2": null
                    },
                    "full_name": "string",
                    "email": "user@example.com",
                    "phone_number": "string",
                    "tags": [
                      {
                        "title": "string",
                        "description": "string",
                        "slug": "string"
                      }
                    ],
                    "score": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "summary": "Delete Customer",
        "operationId": "delete-customers-code",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Delete a customer.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/v1.0/customers/{slug}/activities": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "slug",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Customer Activity List",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      },
                      "operation_type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "iso_code": {
                            "type": "string"
                          }
                        }
                      },
                      "monetary_value": {
                        "type": "string"
                      },
                      "activity_date": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": [
                      {
                        "action": {
                          "title": "string",
                          "description": "string",
                          "slug": "string"
                        },
                        "operation_type": "create",
                        "description": "string",
                        "currency": {
                          "title": "string",
                          "iso_code": "string"
                        },
                        "monetary_value": "string",
                        "activity_date": "2019-08-24T14:15:22Z",
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z",
                        "slug": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-customers-slug-activities",
        "description": "Gives a list of a customer's activities.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "active_business",
            "description": "Slug of the business we're performing the action on.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "operation",
            "description": "Comma seperated list."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Comma seperated list."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      }
    },
    "/v1.0/customers/batch": {
      "post": {
        "summary": "Create Customer Batch Import",
        "operationId": "post-customers-batch",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Create a batch customer creation job based on json data or excel file.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "required": true,
            "description": "The application secret provided to the client."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string"
                  },
                  "customers_data": {
                    "type": "object",
                    "properties": {
                      "property1": {
                        "nullable": true
                      },
                      "property2": {
                        "nullable": true
                      }
                    }
                  },
                  "file_type": {
                    "type": "string"
                  }
                },
                "x-examples": {
                  "example-1": {
                    "file": "http://example.com",
                    "customers_data": {
                      "property1": null,
                      "property2": null
                    },
                    "file_type": "excel"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": []
    },
    "/v1.0/customers/batch/{slug}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "slug",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Customer Batch Import",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    },
                    "customers_data": {
                      "type": "object",
                      "properties": {
                        "property1": {
                          "nullable": true
                        },
                        "property2": {
                          "nullable": true
                        }
                      }
                    },
                    "file_type": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "imported_at": {
                      "type": "string"
                    },
                    "import_results": {
                      "type": "object",
                      "properties": {
                        "property1": {
                          "nullable": true
                        },
                        "property2": {
                          "nullable": true
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "status": "new",
                      "file": "http://example.com",
                      "customers_data": {
                        "property1": null,
                        "property2": null
                      },
                      "file_type": "excel",
                      "slug": "string",
                      "created_at": "2019-08-24T14:15:22Z",
                      "imported_at": "2019-08-24T14:15:22Z",
                      "import_results": {
                        "property1": null,
                        "property2": null
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-customers-batch-slug",
        "description": "Get a customer batch info object to see its status.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "required": true,
            "description": "The application secret provided to the client."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      }
    },
    "/v1.0/tags": {
      "get": {
        "summary": "Get Tag List",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "next": {
                      "type": "string"
                    },
                    "previous": {
                      "type": "string"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "page_count": {
                      "type": "integer"
                    },
                    "current_page": {
                      "type": "integer"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "count": 123,
                      "next": "http://api.example.org/accounts/?page=4",
                      "previous": "http://api.example.org/accounts/?page=2",
                      "page_size": 10,
                      "page_count": 13,
                      "current_page": 3,
                      "tags": [
                        {
                          "title": "string",
                          "description": "string",
                          "slug": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-tags",
        "description": "Use this endpoint to create a tag to use in action types' setttings.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "required": true,
            "description": "The application secret provided to the client."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "A page number within the paginated result set."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create Tag",
        "operationId": "post-tags",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Use this endpoint to get a list of all tags on a business.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "A search query on the list items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "title": "string",
                    "description": "string"
                  }
                },
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      },
      "parameters": []
    },
    "/v1.0/tags/{slug}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "slug",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Tag",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "title": "string",
                      "description": "string",
                      "slug": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-tags-slug",
        "description": "Get a specific tag.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "required": true,
            "description": "The application secret provided to the client."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ]
      },
      "patch": {
        "summary": "Edit Tag",
        "operationId": "patch-tags-slug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "title": "string",
                      "description": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update a tag.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "The application secret provided to the client.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "Tags"
        ]
      },
      "delete": {
        "summary": "Delete Tag",
        "operationId": "delete-tags-slug",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Delete a tag.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "required": true,
            "description": "The application secret provided to the client."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccessEnum": {
        "enum": [
          "read",
          "edit",
          "delete",
          "owner",
          "editor"
        ],
        "type": "string"
      },
      "AccessTypeDescription": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "access": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccessEnum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed."
          },
          "description": {
            "type": "string",
            "description": "what is shown to the user as the name and description of an access type",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          }
        },
        "required": [
          "created_at",
          "deleted",
          "description",
          "updated_at"
        ]
      },
      "BarcodeField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "acceptable_answers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "set if the field only accepts answers from a predefined list (e.g. a list of emails for a email field)."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "BlankEnum": {
        "enum": [
          ""
        ]
      },
      "Block": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          }
        },
        "required": [
          "created_at",
          "title",
          "type",
          "updated_at"
        ]
      },
      "Board": {
        "type": "object",
        "properties": {
          "primary_form": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShowFormSummary"
              }
            ],
            "readOnly": true
          },
          "blocks": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "template": {
            "type": "string"
          },
          "copied_from": {
            "type": "string"
          },
          "thumbnail_slug": {
            "type": "string",
            "writeOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "tags's slug."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_primary": {
            "type": "boolean",
            "readOnly": true,
            "description": "shows if this board is the primary board for the primary form."
          },
          "is_template": {
            "type": "boolean",
            "readOnly": true,
            "description": "shows if this board can be used as a template."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "an optional short title to identify the board by.",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the board."
          },
          "share_address": {
            "type": "string",
            "readOnly": true,
            "description": "an auto-generated address to share the board with.",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "readOnly": true,
            "description": "the thumbnail's url."
          }
        },
        "required": [
          "blocks",
          "created_at",
          "is_primary",
          "is_template",
          "primary_form",
          "share_address",
          "slug",
          "thumbnail_url",
          "updated_at"
        ]
      },
      "BoardCopy": {
        "type": "object",
        "properties": {
          "primary_form": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShowFormSummary"
              }
            ],
            "readOnly": true
          },
          "blocks": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "template": {
            "type": "string"
          },
          "copied_from": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_primary": {
            "type": "boolean",
            "readOnly": true,
            "description": "shows if this board is the primary board for the primary form."
          },
          "is_template": {
            "type": "boolean",
            "description": "shows if this board can be used as a template."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "an optional short title to identify the board by.",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the board."
          },
          "share_address": {
            "type": "string",
            "readOnly": true,
            "description": "an auto-generated address to share the board with.",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "thumbnail_slug": {
            "type": "string",
            "nullable": true,
            "description": "the thumbnail's slug.",
            "maxLength": 31
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true,
            "description": "the thumbnail's url.",
            "maxLength": 900
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "blocks",
          "created_at",
          "is_primary",
          "primary_form",
          "share_address",
          "slug",
          "updated_at"
        ]
      },
      "BoardFormStats": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional desctiption on the stats and what it shows.",
            "maxLength": 511
          }
        },
        "required": [
          "title"
        ]
      },
      "BoardList": {
        "type": "object",
        "properties": {
          "primary_form": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShowFormSummary"
              }
            ],
            "readOnly": true
          },
          "template": {
            "type": "string"
          },
          "copied_from": {
            "type": "string"
          },
          "thumbnail_slug": {
            "type": "string",
            "writeOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "tags's slug."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_primary": {
            "type": "boolean",
            "readOnly": true,
            "description": "shows if this board is the primary board for the primary form."
          },
          "is_template": {
            "type": "boolean",
            "readOnly": true,
            "description": "shows if this board can be used as a template."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "an optional short title to identify the board by.",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the board."
          },
          "share_address": {
            "type": "string",
            "readOnly": true,
            "description": "an auto-generated address to share the board with.",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "readOnly": true,
            "description": "the thumbnail's url."
          }
        },
        "required": [
          "created_at",
          "is_primary",
          "is_template",
          "primary_form",
          "share_address",
          "slug",
          "thumbnail_url",
          "updated_at"
        ]
      },
      "BoardTemplate": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "an optional short title to identify the template by.",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the board template."
          },
          "settings": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "is_default": {
            "type": "boolean",
            "description": "shows if this template is default for creating default blocks of boards"
          }
        }
      },
      "BooleanField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "Business": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "business's title.",
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "business_identifier": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about the business."
          }
        },
        "required": [
          "business_identifier",
          "title"
        ]
      },
      "BusinessPlan": {
        "type": "object",
        "properties": {
          "from_date": {
            "type": "string",
            "format": "date",
            "readOnly": true,
            "description": "date that the plan starts"
          },
          "to_date": {
            "type": "string",
            "format": "date",
            "readOnly": true,
            "description": "date that the plan finishes"
          }
        },
        "required": [
          "from_date",
          "to_date"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parent_category": {
            "type": "string",
            "nullable": true,
            "description": "If the category has a parent category, send its slug on this field."
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleCategory"
            },
            "readOnly": true
          },
          "shared_access": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "category color settings or color code.",
            "maxLength": 63
          }
        },
        "required": [
          "created_at",
          "shared_access",
          "slug",
          "subcategories",
          "title",
          "updated_at"
        ]
      },
      "CategoryBreadcrumb": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "category color settings or color code.",
            "maxLength": 63
          },
          "parent_category": {
            "type": "integer",
            "nullable": true,
            "description": "shows if this category is inside another category."
          }
        },
        "required": [
          "title"
        ]
      },
      "CategoryUser": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "profile": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "access": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccessEnum"
              }
            ],
            "description": "shows the access type"
          }
        },
        "required": [
          "category",
          "profile",
          "slug"
        ]
      },
      "CharField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "acceptable_answers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "set if the field only accepts answers from a predefined list (e.g. a list of emails for a email field)."
          },
          "max_length": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "description": "maximum acceptable length for the input text."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "ChartTypeEnum": {
        "enum": [
          "bar_chart",
          "line_chart",
          "pie_chart",
          "gantt_chart"
        ],
        "type": "string"
      },
      "ChoiceFetchField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "choices_source": {
            "type": "string",
            "format": "uri",
            "description": "the remote endpoint to fetch choices from",
            "maxLength": 200
          }
        },
        "required": [
          "choices_source",
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "ChoiceField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "choice_items": {
            "type": "object",
            "additionalProperties": {},
            "description": "A list of choice titles and their slugs (for editing the existing choices). (e.g. [{\"title\":\"Existing Option\",\"slug\":\"OPTION_SLUG\", \"image\":\"base64 Image\"},{\"title\":\"New Option\", \"image\":\"base64 Image\"}])"
          },
          "remove_related_form_logic": {
            "type": "boolean",
            "writeOnly": true,
            "default": false,
            "description": "Remove any form logic related to this field's removed choices. (For when you're removing an existing choice from the field)."
          },
          "bulk_choices": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "description": "Use to send a bulk list of choices to add to the field"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "has_other_choice": {
            "type": "boolean",
            "description": "specifies that field has other choice or not."
          },
          "shuffle_choices": {
            "type": "boolean",
            "description": "shows whether to shuffle the ordering of the field choices or not."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "ChoiceGroup": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "description": "the groups title.",
            "maxLength": 255
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          }
        },
        "required": [
          "created_at",
          "deleted",
          "title",
          "updated_at"
        ]
      },
      "ChoiceList": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "choice text.",
            "maxLength": 1023
          }
        }
      },
      "CityField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "has_other_choice": {
            "type": "boolean",
            "description": "specifies that field has other choice or not."
          },
          "shuffle_choices": {
            "type": "boolean",
            "description": "shows whether to shuffle the ordering of the field choices or not."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "CombinedFieldsChart": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type3f2Enum"
              }
            ],
            "description": "determines the type of this report.",
            "readOnly": true
          },
          "primary_form": {
            "type": "string"
          },
          "chart_data": {
            "type": "string",
            "readOnly": true
          },
          "x_field": {
            "type": "string"
          },
          "y_fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the report."
          },
          "chart_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChartTypeEnum"
              }
            ],
            "description": "type of the chart."
          },
          "rows_y_fields": {
            "type": "object",
            "additionalProperties": {},
            "description": "shows list of fields in rows that we use for Y-axis of chart"
          }
        },
        "required": [
          "chart_data",
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "CombinedFieldsChartCreate": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type3f2Enum"
              }
            ],
            "description": "determines the type of this report.",
            "readOnly": true
          },
          "primary_form": {
            "type": "string"
          },
          "chart_data": {
            "type": "string",
            "readOnly": true
          },
          "x_field": {
            "type": "string"
          },
          "y_fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the report."
          },
          "chart_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChartTypeEnum"
              }
            ],
            "description": "type of the chart."
          },
          "rows_y_fields": {
            "type": "object",
            "additionalProperties": {},
            "description": "shows list of fields in rows that we use for Y-axis of chart"
          }
        },
        "required": [
          "chart_data",
          "created_at",
          "primary_form",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "ConfirmOAuth2Login": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Access code sent by OAuth2 server."
          },
          "redirect_uri": {
            "type": "string",
            "description": "Optional redirect uri, if you're using a non-default uri."
          }
        },
        "required": [
          "code"
        ]
      },
      "CopyForm": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true,
            "description": "category's slug."
          }
        }
      },
      "CreateAPIKey": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "readOnly": true
          },
          "refresh": {
            "type": "boolean",
            "writeOnly": true,
            "default": false
          }
        },
        "required": [
          "key"
        ]
      },
      "CreateTypeEnum": {
        "enum": [
          "api",
          "excel"
        ],
        "type": "string"
      },
      "CreateUTMTracker": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "writeOnly": true
          },
          "query": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "query",
          "source"
        ]
      },
      "Currency": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3
          },
          "sign": {
            "type": "string",
            "nullable": true,
            "maxLength": 15
          }
        },
        "required": [
          "currency_code",
          "title"
        ]
      },
      "CurrencyEnum": {
        "enum": [
          "irr",
          "irt",
          "usd",
          "eur",
          "other"
        ],
        "type": "string"
      },
      "DateField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "calculated_default_date": {
            "type": "string",
            "readOnly": true
          },
          "calculated_relative_range_start": {
            "type": "string",
            "readOnly": true
          },
          "calculated_relative_range_end": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "from_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "minimum acceptable date"
          },
          "to_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "maximum acceptable date"
          },
          "relative_range_start": {
            "type": "string",
            "nullable": true,
            "description": "define an offset for the accepted date, for example `-1m -2d` (for dates after 1 month and 2 days ago).",
            "pattern": "^(((\\+|-)?\\d+)(d|w|m|y)\\s*)+$",
            "maxLength": 63
          },
          "relative_range_end": {
            "type": "string",
            "nullable": true,
            "description": "define an offset for the accepted date, for example `-1m -2d` (for dates before 1 month and 2 days ago.).",
            "pattern": "^(((\\+|-)?\\d+)(d|w|m|y)\\s*)+$",
            "maxLength": 63
          },
          "default_date": {
            "type": "string",
            "nullable": true,
            "description": "If set, a defined date will be automatically set for the field upon submit. Choices are `today`, `custom`, or a date range like `-5y` or `+1d +2w` or etc.",
            "pattern": "^((custom)|(today)|((((\\+|-)?\\d+)(d|w|m|y)\\s*)+))$",
            "maxLength": 63
          },
          "custom_default_date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "if `default_date` is set to `custom`, the default date should be read from this field."
          },
          "date_format": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "calculated_default_date",
          "calculated_relative_range_end",
          "calculated_relative_range_start",
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "DropdownField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "choice_items": {
            "type": "object",
            "additionalProperties": {},
            "description": "A list of choice titles and their slugs (for editing the existing choices). (e.g. [{\"title\":\"Existing Option\",\"slug\":\"OPTION_SLUG\", \"image\":\"base64 Image\"},{\"title\":\"New Option\", \"image\":\"base64 Image\"}])"
          },
          "remove_related_form_logic": {
            "type": "boolean",
            "writeOnly": true,
            "default": false,
            "description": "Remove any form logic related to this field's removed choices. (For when you're removing an existing choice from the field)."
          },
          "bulk_choices": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "description": "Use to send a bulk list of choices to add to the field"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "has_other_choice": {
            "type": "boolean",
            "description": "specifies that field has other choice or not."
          },
          "shuffle_choices": {
            "type": "boolean",
            "description": "shows whether to shuffle the ordering of the field choices or not."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "DuplicateField": {
        "type": "object",
        "properties": {
          "copied_field": {
            "type": "string",
            "writeOnly": true,
            "description": "the slug of the field you want to copy.",
            "pattern": "^[-a-zA-Z0-9_]+$"
          }
        },
        "required": [
          "copied_field"
        ]
      },
      "EmailField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "acceptable_answers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "set if the field only accepts answers from a predefined list (e.g. a list of emails for a email field)."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "EmailOTP": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "a unique identifier for working with the object."
          },
          "tried": {
            "type": "integer",
            "maximum": 32767,
            "description": "number of times user send a token to validate the code and uuid.",
            "minimum": 0
          },
          "last_tried_date": {
            "type": "string",
            "format": "date-time",
            "description": "last time of retrying otp."
          }
        },
        "required": [
          "uuid"
        ]
      },
      "EmailSender": {
        "type": "object",
        "properties": {
          "sender_default_email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "sender's default email. if not set, email's will be sent from the system's default.",
            "maxLength": 255
          },
          "sender_default_name": {
            "type": "string",
            "nullable": true,
            "description": "sender's default name. you'll have to set the sender default email to use this.",
            "maxLength": 63
          },
          "default_reply_to_email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "the default address to set as the email's default `reply to` email address.",
            "maxLength": 254
          },
          "smtp_username": {
            "type": "string",
            "nullable": true,
            "description": "smtp username. you'll have to set this value to use the custom sender."
          },
          "smtp_password": {
            "type": "string",
            "writeOnly": true
          },
          "smtp_host": {
            "type": "string",
            "nullable": true,
            "description": "smtp smtp host. you'll have to set this value to use the custom sender.",
            "maxLength": 255
          },
          "smtp_port": {
            "type": "integer",
            "maximum": 32767,
            "nullable": true,
            "description": "smtp port. you'll have to set this value to use the custom sender.",
            "minimum": 0
          },
          "smtp_use_tls": {
            "type": "boolean"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "is this sender currently enabled?"
          },
          "is_active": {
            "type": "string",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "a title to identify this email sever",
            "maxLength": 255
          }
        },
        "required": [
          "is_active",
          "slug",
          "smtp_password"
        ]
      },
      "EmailSenderShort": {
        "type": "object",
        "properties": {
          "is_system_default": {
            "type": "boolean",
            "description": "is this a default email sender created by system?",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "a title to identify this email sever",
            "maxLength": 255
          }
        },
        "required": [
          "is_system_default"
        ]
      },
      "EmailTemplate": {
        "type": "object",
        "properties": {
          "is_active": {
            "type": "string",
            "readOnly": true
          },
          "email_server_slug": {
            "type": "string",
            "writeOnly": true,
            "nullable": true,
            "description": "the email server used by this email template for sending emails."
          },
          "email_server": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailSenderShort"
              }
            ],
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "a title to identify the email template",
            "maxLength": 255
          },
          "sender_email": {
            "type": "string",
            "nullable": true,
            "description": "use if you want to send the email from a specific address. can be read from the context.",
            "maxLength": 63
          },
          "reply_to_email": {
            "type": "string",
            "nullable": true,
            "description": "the address to set as the email's `reply to` email address.",
            "maxLength": 255
          },
          "sender_name": {
            "type": "string",
            "nullable": true,
            "description": "use if you want to set the sender's name. can be read from the context.",
            "maxLength": 63
          },
          "subject": {
            "type": "string",
            "nullable": true,
            "description": "use to set a template for emil's subject",
            "maxLength": 255
          },
          "body": {
            "type": "string",
            "description": "body of the email template"
          },
          "is_enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "created_at",
          "email_server",
          "is_active",
          "updated_at"
        ]
      },
      "EmailTemplateExample": {
        "type": "object",
        "properties": {
          "is_active": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "a title to identify the email template",
            "maxLength": 255
          },
          "sender_email": {
            "type": "string",
            "nullable": true,
            "description": "use if you want to send the email from a specific address. can be read from the context.",
            "maxLength": 63
          },
          "reply_to_email": {
            "type": "string",
            "nullable": true,
            "description": "the address to set as the email's `reply to` email address.",
            "maxLength": 255
          },
          "sender_name": {
            "type": "string",
            "nullable": true,
            "description": "use if you want to set the sender's name. can be read from the context.",
            "maxLength": 63
          },
          "subject": {
            "type": "string",
            "nullable": true,
            "description": "use to set a template for emil's subject",
            "maxLength": 255
          },
          "body": {
            "type": "string",
            "description": "body of the email template"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "is_example": {
            "type": "boolean"
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "email_server": {
            "type": "integer",
            "nullable": true,
            "description": "the email server used to send this email"
          }
        },
        "required": [
          "created_at",
          "is_active",
          "updated_at"
        ]
      },
      "EmailTemplateShort": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "description": "a title to identify the email template",
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "is_active": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "is_active"
        ]
      },
      "EmailVerificationStateEnum": {
        "enum": [
          "not_required",
          "not_verified",
          "verified"
        ],
        "type": "string"
      },
      "ExportToGoogleSheets": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "writeOnly": true
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "FieldAction": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "acceptable_answers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "set if the field only accepts answers from a predefined list (e.g. a list of emails for a email field)."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "FileField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "file_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileTypeEnum"
              }
            ],
            "description": "the acceptable file type."
          },
          "max_size": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "maximum file size (kbs).",
            "minimum": 0
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "FileTypeEnum": {
        "enum": [
          "image",
          "document",
          "all"
        ],
        "type": "string"
      },
      "ForceUpdate": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ForceUpdateTypeEnum"
              }
            ],
            "description": "type of force update"
          },
          "from_version": {
            "type": "string",
            "description": "The version from which we have to ask the user to update the app.",
            "maxLength": 25
          },
          "to_version": {
            "type": "string",
            "description": "The version that we want the user to update the app until that version.",
            "maxLength": 25
          }
        },
        "required": [
          "from_version",
          "title",
          "to_version"
        ]
      },
      "ForceUpdateTypeEnum": {
        "enum": [
          "update",
          "suggest_update"
        ],
        "type": "string"
      },
      "FormChartsBlock": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subtype": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          }
        },
        "required": [
          "created_at",
          "slug",
          "title",
          "type",
          "updated_at"
        ]
      },
      "FormCurrencyTypeEnum": {
        "enum": [
          "irr",
          "dollar",
          "irt",
          "USD",
          "EUR",
          "GBP",
          "AUD",
          "CAD",
          "CHF",
          "NOK",
          "SEK",
          "DKK",
          "MXN",
          "NZD",
          "BRL",
          "JPY",
          "INR",
          "AED",
          "IDR"
        ],
        "type": "string"
      },
      "FormDisplayBlock": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subtype": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          },
          "display_type": {
            "$ref": "#/components/schemas/FormDisplayBlockDisplayTypeEnum"
          }
        },
        "required": [
          "created_at",
          "slug",
          "title",
          "type",
          "updated_at"
        ]
      },
      "FormDisplayBlockDisplayTypeEnum": {
        "enum": [
          "open_web",
          "display_single_page",
          "display_multi_page"
        ],
        "type": "string"
      },
      "FormField": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "form_fields": {
            "type": "array",
            "items": {},
            "writeOnly": true,
            "description": "a list of form fields' slug."
          },
          "suspended": {
            "type": "boolean",
            "readOnly": true
          },
          "verified": {
            "type": "boolean",
            "description": "defines if the form is verified or not.",
            "readOnly": true
          },
          "permanently_verified": {
            "type": "boolean",
            "description": "defines if the form is permanently verified or not. meaning, event after changes, it won't need to be verified again.",
            "readOnly": true
          },
          "total_visits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many times the form was visited.",
            "minimum": 0
          }
        },
        "required": [
          "form_fields",
          "permanently_verified",
          "slug",
          "suspended",
          "title",
          "verified"
        ]
      },
      "FormImport": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "uri",
            "writeOnly": true,
            "description": "An excel file containing the forms' rows and columns."
          }
        },
        "required": [
          "file"
        ]
      },
      "FormLiveDashboard": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about form."
          },
          "fields_list": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "form_currency_type": {
            "nullable": true,
            "description": "shows the currency of the calculations.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormCurrencyTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "live_dashboard_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional live dashboard configuration, like what we show on dashboard or how we show them."
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the logo to be shown on the top of form"
          },
          "public_rows": {
            "type": "boolean",
            "description": "if set true, submitted data will be publicly shared by a link."
          },
          "public_stats": {
            "type": "boolean",
            "description": "if set true, form stats will be publicly shared by a link."
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "stats": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "submit_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "total_submits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many submits the form has.",
            "minimum": 0
          },
          "visit_count": {
            "type": "integer",
            "readOnly": true
          },
          "total_visits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many times the form was visited.",
            "minimum": 0
          }
        },
        "required": [
          "created_at",
          "fields_list",
          "stats",
          "visit_count"
        ]
      },
      "FormLiveDashboardCode": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "subdomain": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "subdomain"
        ]
      },
      "FormResultBlockCreate": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          },
          "filters": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "slug",
          "title",
          "type",
          "updated_at"
        ]
      },
      "FormResultBlockDuplicate": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          },
          "menu_item": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          },
          "filters": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "FormSharedProfilesList": {
        "type": "object",
        "properties": {
          "profile": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "access": {
            "nullable": true,
            "description": "shows the fields type. once defined, it can't be changed.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccessEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "share_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShareTypeEnum"
              }
            ],
            "description": "the field that user used to share form."
          },
          "category_user": {
            "type": "integer",
            "nullable": true,
            "description": "shows the category that gives access to form for user."
          }
        },
        "required": [
          "profile"
        ]
      },
      "FormShort": {
        "type": "object",
        "properties": {
          "submit_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submit_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "readOnly": true
          },
          "submit_count": {
            "type": "integer",
            "readOnly": true
          },
          "visit_count": {
            "type": "integer",
            "readOnly": true
          },
          "export_in_progress": {
            "type": "boolean",
            "description": "Shows if there's an excel export task in progress for the form.",
            "readOnly": true
          },
          "last_export_file": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "readOnly": true
          },
          "last_export_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was last excel export created.",
            "readOnly": true
          },
          "user_spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet of user.",
            "readOnly": true
          },
          "user_spreadsheet_range": {
            "type": "string",
            "nullable": true,
            "description": "range(name of sheet) for the corresponding google sheet of user.",
            "readOnly": true
          },
          "user_spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet of user.",
            "readOnly": true
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Category"
              }
            ],
            "readOnly": true
          },
          "admin_email_notif_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateShort"
              }
            ],
            "readOnly": true
          },
          "user_email_notif_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateShort"
              }
            ],
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormTag"
            },
            "readOnly": true
          },
          "copied_from": {
            "type": "string",
            "readOnly": true
          },
          "subdomain": {
            "type": "string",
            "readOnly": true
          },
          "owner_custom_domain": {
            "type": "string",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "show_title": {
            "type": "boolean",
            "description": "title visibility on form."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about form."
          },
          "success_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is successfully submitted."
          },
          "error_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is not successfully submitted."
          },
          "button_text": {
            "type": "string",
            "nullable": true,
            "description": "a text to show on the form's submit button.",
            "maxLength": 63
          },
          "form_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormTypeEnum"
              }
            ],
            "description": "shows the forms type."
          },
          "max_submit_count": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "description": "the maximum times people can submit this form.",
            "minimum": 0
          },
          "needs_login": {
            "type": "boolean",
            "description": "whether the users need to login to submit the form."
          },
          "time_limit": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time limit to fill this form"
          },
          "shuffle_fields": {
            "type": "boolean",
            "description": "shows wether to shuffle the ordering of the form field on show."
          },
          "form_redirects_after_submit": {
            "type": "string",
            "nullable": true,
            "description": "Either null or the url of destination.",
            "maxLength": 2000
          },
          "include_data_on_redirect": {
            "type": "boolean",
            "description": "if set true, the submitted data along with aliases will be included in the redirect url."
          },
          "send_emails_to": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "an email address to send form data copy on each submit.",
            "maxLength": 254
          },
          "submit_email_notif": {
            "type": "boolean",
            "description": "receive email notifications on each submit for the form."
          },
          "row_update_email_notif": {
            "type": "boolean",
            "description": "receive email notifications when a row is updated."
          },
          "send_user_confirm": {
            "type": "boolean",
            "description": "whether to send a copy of data to user."
          },
          "submit_push_notif": {
            "type": "boolean",
            "description": "receive push notifications on each submit for the form."
          },
          "row_update_push_notif": {
            "type": "boolean",
            "description": "receive push notifications when a row is updated."
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "an optional thumbnail for the form"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the logo to be shown on the top of form"
          },
          "logo_slug": {
            "type": "string",
            "nullable": true,
            "description": "the logo's slug.",
            "maxLength": 31
          },
          "logo_url": {
            "type": "string",
            "nullable": true,
            "description": "the logo's url.",
            "maxLength": 900
          },
          "logo_position": {
            "nullable": true,
            "description": "the logo's position.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LogoPositionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's text color.",
            "maxLength": 63
          },
          "button_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's button color.",
            "maxLength": 63
          },
          "theme_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme color.",
            "maxLength": 63
          },
          "theme_name": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme name.",
            "maxLength": 63
          },
          "field_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's field color.",
            "maxLength": 63
          },
          "background_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's background color.",
            "maxLength": 63
          },
          "border_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's border color.",
            "maxLength": 63
          },
          "submit_text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's submit text color.",
            "maxLength": 63
          },
          "background_image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "background image for this form."
          },
          "background_image_slug": {
            "type": "string",
            "nullable": true,
            "description": "the background image's slug.",
            "maxLength": 31
          },
          "background_image_url": {
            "type": "string",
            "nullable": true,
            "description": "the background image's url.",
            "maxLength": 900
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional theme configuration."
          },
          "custom_js": {
            "type": "string",
            "nullable": true
          },
          "custom_css": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "defines if the form is active and users can see and submit it."
          },
          "config": {
            "type": "string",
            "nullable": true,
            "description": "the form's additional configuration.",
            "maxLength": 255
          },
          "show_calculations_score_result": {
            "type": "boolean",
            "description": "to show calculations result after user sumbits a form"
          },
          "show_submit_tracking_code": {
            "type": "boolean",
            "description": "whether to show the tracking code after user has submitted the form."
          },
          "show_answers": {
            "type": "boolean",
            "description": "whether to show the reslts page containing answers and answer sheet after form submit."
          },
          "form_currency_type": {
            "nullable": true,
            "description": "shows the currency of the calculations.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormCurrencyTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "public_stats": {
            "type": "boolean",
            "description": "if set true, form stats will be publicly shared by a link."
          },
          "public_rows": {
            "type": "boolean",
            "description": "if set true, submitted data will be publicly shared by a link."
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "live_dashboard_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional live dashboard configuration, like what we show on dashboard or how we show them."
          },
          "address_is_universal": {
            "type": "boolean",
            "description": "If set true, form's address should be universally unique, and the forms is accessible on the root domain, otherwise, it's only available on the user's domain and subdomain."
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on the form, if they want to show this form on a custom domain (e.g. https://example.co/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "accept_draft_answers": {
            "type": "boolean",
            "description": "users can have draft answers on this form or not."
          },
          "last_export_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was last excel export task was started for the form?"
          },
          "spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet.",
            "maxLength": 255
          },
          "spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet.",
            "maxLength": 255
          },
          "last_submit_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was the last submit on the form?"
          },
          "is_empty": {
            "type": "boolean",
            "description": "is the form empty"
          },
          "total_submits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many submits the form has.",
            "minimum": 0
          },
          "total_size": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "format": "int64",
            "description": "shows total size of the form and it's fields' fields in bytes."
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "has_recaptcha": {
            "type": "boolean",
            "description": "defines if show a recaptcha on form or not"
          },
          "slack_accesses": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "List of slack access slugs."
          }
        },
        "required": [
          "admin_email_notif_template",
          "category",
          "copied_from",
          "created_at",
          "deleted",
          "export_in_progress",
          "last_export_file",
          "last_export_time",
          "owner",
          "owner_custom_domain",
          "subdomain",
          "submit_count",
          "tags",
          "updated_at",
          "user_email_notif_template",
          "user_spreadsheet_id",
          "user_spreadsheet_range",
          "user_spreadsheet_url",
          "visit_count"
        ]
      },
      "FormStats": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "stats": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          }
        },
        "required": [
          "stats"
        ]
      },
      "FormSummary": {
        "type": "object",
        "properties": {
          "submit_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submit_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "readOnly": true
          },
          "submit_count": {
            "type": "integer",
            "readOnly": true
          },
          "visit_count": {
            "type": "integer",
            "readOnly": true
          },
          "export_in_progress": {
            "type": "boolean",
            "description": "Shows if there's an excel export task in progress for the form.",
            "readOnly": true
          },
          "last_export_file": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "readOnly": true
          },
          "last_export_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was last excel export created.",
            "readOnly": true
          },
          "user_spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet of user.",
            "readOnly": true
          },
          "user_spreadsheet_range": {
            "type": "string",
            "nullable": true,
            "description": "range(name of sheet) for the corresponding google sheet of user.",
            "readOnly": true
          },
          "user_spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet of user.",
            "readOnly": true
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Category"
              }
            ],
            "readOnly": true
          },
          "admin_email_notif_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateShort"
              }
            ],
            "readOnly": true
          },
          "user_email_notif_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateShort"
              }
            ],
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormTag"
            },
            "readOnly": true
          },
          "copied_from": {
            "type": "string",
            "readOnly": true
          },
          "subdomain": {
            "type": "string",
            "readOnly": true
          },
          "owner_custom_domain": {
            "type": "string",
            "readOnly": true
          },
          "shared_access": {
            "type": "string",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "show_title": {
            "type": "boolean",
            "description": "title visibility on form."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about form."
          },
          "success_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is successfully submitted."
          },
          "error_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is not successfully submitted."
          },
          "button_text": {
            "type": "string",
            "nullable": true,
            "description": "a text to show on the form's submit button.",
            "maxLength": 63
          },
          "form_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormTypeEnum"
              }
            ],
            "description": "shows the forms type."
          },
          "max_submit_count": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "description": "the maximum times people can submit this form.",
            "minimum": 0
          },
          "needs_login": {
            "type": "boolean",
            "description": "whether the users need to login to submit the form."
          },
          "time_limit": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time limit to fill this form"
          },
          "shuffle_fields": {
            "type": "boolean",
            "description": "shows wether to shuffle the ordering of the form field on show."
          },
          "form_redirects_after_submit": {
            "type": "string",
            "nullable": true,
            "description": "Either null or the url of destination.",
            "maxLength": 2000
          },
          "include_data_on_redirect": {
            "type": "boolean",
            "description": "if set true, the submitted data along with aliases will be included in the redirect url."
          },
          "send_emails_to": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "an email address to send form data copy on each submit.",
            "maxLength": 254
          },
          "submit_email_notif": {
            "type": "boolean",
            "description": "receive email notifications on each submit for the form."
          },
          "row_update_email_notif": {
            "type": "boolean",
            "description": "receive email notifications when a row is updated."
          },
          "send_user_confirm": {
            "type": "boolean",
            "description": "whether to send a copy of data to user."
          },
          "submit_push_notif": {
            "type": "boolean",
            "description": "receive push notifications on each submit for the form."
          },
          "row_update_push_notif": {
            "type": "boolean",
            "description": "receive push notifications when a row is updated."
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "an optional thumbnail for the form"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the logo to be shown on the top of form"
          },
          "logo_slug": {
            "type": "string",
            "nullable": true,
            "description": "the logo's slug.",
            "maxLength": 31
          },
          "logo_url": {
            "type": "string",
            "nullable": true,
            "description": "the logo's url.",
            "maxLength": 900
          },
          "logo_position": {
            "nullable": true,
            "description": "the logo's position.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LogoPositionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's text color.",
            "maxLength": 63
          },
          "button_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's button color.",
            "maxLength": 63
          },
          "theme_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme color.",
            "maxLength": 63
          },
          "theme_name": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme name.",
            "maxLength": 63
          },
          "field_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's field color.",
            "maxLength": 63
          },
          "background_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's background color.",
            "maxLength": 63
          },
          "border_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's border color.",
            "maxLength": 63
          },
          "submit_text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's submit text color.",
            "maxLength": 63
          },
          "background_image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "background image for this form."
          },
          "background_image_slug": {
            "type": "string",
            "nullable": true,
            "description": "the background image's slug.",
            "maxLength": 31
          },
          "background_image_url": {
            "type": "string",
            "nullable": true,
            "description": "the background image's url.",
            "maxLength": 900
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional theme configuration."
          },
          "custom_js": {
            "type": "string",
            "nullable": true
          },
          "custom_css": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "defines if the form is active and users can see and submit it."
          },
          "config": {
            "type": "string",
            "nullable": true,
            "description": "the form's additional configuration.",
            "maxLength": 255
          },
          "show_calculations_score_result": {
            "type": "boolean",
            "description": "to show calculations result after user sumbits a form"
          },
          "show_submit_tracking_code": {
            "type": "boolean",
            "description": "whether to show the tracking code after user has submitted the form."
          },
          "show_answers": {
            "type": "boolean",
            "description": "whether to show the reslts page containing answers and answer sheet after form submit."
          },
          "form_currency_type": {
            "nullable": true,
            "description": "shows the currency of the calculations.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormCurrencyTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "public_stats": {
            "type": "boolean",
            "description": "if set true, form stats will be publicly shared by a link."
          },
          "public_rows": {
            "type": "boolean",
            "description": "if set true, submitted data will be publicly shared by a link."
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "live_dashboard_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional live dashboard configuration, like what we show on dashboard or how we show them."
          },
          "address_is_universal": {
            "type": "boolean",
            "description": "If set true, form's address should be universally unique, and the forms is accessible on the root domain, otherwise, it's only available on the user's domain and subdomain."
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on the form, if they want to show this form on a custom domain (e.g. https://example.co/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "accept_draft_answers": {
            "type": "boolean",
            "description": "users can have draft answers on this form or not."
          },
          "last_export_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was last excel export task was started for the form?"
          },
          "spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet.",
            "maxLength": 255
          },
          "spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet.",
            "maxLength": 255
          },
          "last_submit_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was the last submit on the form?"
          },
          "is_empty": {
            "type": "boolean",
            "description": "is the form empty"
          },
          "total_submits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many submits the form has.",
            "minimum": 0
          },
          "total_size": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "format": "int64",
            "description": "shows total size of the form and it's fields' fields in bytes."
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "has_recaptcha": {
            "type": "boolean",
            "description": "defines if show a recaptcha on form or not"
          },
          "slack_accesses": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "List of slack access slugs."
          }
        },
        "required": [
          "admin_email_notif_template",
          "category",
          "copied_from",
          "created_at",
          "deleted",
          "export_in_progress",
          "last_export_file",
          "last_export_time",
          "owner",
          "owner_custom_domain",
          "shared_access",
          "subdomain",
          "submit_count",
          "tags",
          "updated_at",
          "user_email_notif_template",
          "user_spreadsheet_id",
          "user_spreadsheet_range",
          "user_spreadsheet_url",
          "visit_count"
        ]
      },
      "FormTag": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "category color settings or color code.",
            "maxLength": 63
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to used by users to get all the forms with this tag.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          }
        },
        "required": [
          "slug",
          "title"
        ]
      },
      "FormTemplate": {
        "type": "object",
        "properties": {
          "submit_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submit_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "owner": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "submit_count": {
            "type": "integer",
            "readOnly": true
          },
          "visit_count": {
            "type": "integer",
            "readOnly": true
          },
          "export_in_progress": {
            "type": "boolean",
            "description": "Shows if there's an excel export task in progress for the form.",
            "readOnly": true
          },
          "last_export_file": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "readOnly": true
          },
          "last_export_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was last excel export created.",
            "readOnly": true
          },
          "user_spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet of user.",
            "readOnly": true
          },
          "user_spreadsheet_range": {
            "type": "string",
            "nullable": true,
            "description": "range(name of sheet) for the corresponding google sheet of user.",
            "readOnly": true
          },
          "user_spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet of user.",
            "readOnly": true
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Category"
              }
            ],
            "readOnly": true
          },
          "admin_email_notif_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateShort"
              }
            ],
            "readOnly": true
          },
          "user_email_notif_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailTemplateShort"
              }
            ],
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormTag"
            },
            "readOnly": true
          },
          "copied_from": {
            "type": "string",
            "readOnly": true
          },
          "subdomain": {
            "type": "string",
            "readOnly": true
          },
          "owner_custom_domain": {
            "type": "string",
            "readOnly": true
          },
          "copies_count": {
            "type": "integer",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "show_title": {
            "type": "boolean",
            "description": "title visibility on form."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about form."
          },
          "success_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is successfully submitted."
          },
          "error_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is not successfully submitted."
          },
          "button_text": {
            "type": "string",
            "nullable": true,
            "description": "a text to show on the form's submit button.",
            "maxLength": 63
          },
          "form_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormTypeEnum"
              }
            ],
            "description": "shows the forms type."
          },
          "max_submit_count": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "description": "the maximum times people can submit this form.",
            "minimum": 0
          },
          "needs_login": {
            "type": "boolean",
            "description": "whether the users need to login to submit the form."
          },
          "time_limit": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time limit to fill this form"
          },
          "shuffle_fields": {
            "type": "boolean",
            "description": "shows wether to shuffle the ordering of the form field on show."
          },
          "form_redirects_after_submit": {
            "type": "string",
            "nullable": true,
            "description": "Either null or the url of destination.",
            "maxLength": 2000
          },
          "include_data_on_redirect": {
            "type": "boolean",
            "description": "if set true, the submitted data along with aliases will be included in the redirect url."
          },
          "send_emails_to": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "an email address to send form data copy on each submit.",
            "maxLength": 254
          },
          "submit_email_notif": {
            "type": "boolean",
            "description": "receive email notifications on each submit for the form."
          },
          "row_update_email_notif": {
            "type": "boolean",
            "description": "receive email notifications when a row is updated."
          },
          "send_user_confirm": {
            "type": "boolean",
            "description": "whether to send a copy of data to user."
          },
          "submit_push_notif": {
            "type": "boolean",
            "description": "receive push notifications on each submit for the form."
          },
          "row_update_push_notif": {
            "type": "boolean",
            "description": "receive push notifications when a row is updated."
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "an optional thumbnail for the form"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the logo to be shown on the top of form"
          },
          "logo_slug": {
            "type": "string",
            "nullable": true,
            "description": "the logo's slug.",
            "maxLength": 31
          },
          "logo_url": {
            "type": "string",
            "nullable": true,
            "description": "the logo's url.",
            "maxLength": 900
          },
          "logo_position": {
            "nullable": true,
            "description": "the logo's position.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LogoPositionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's text color.",
            "maxLength": 63
          },
          "button_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's button color.",
            "maxLength": 63
          },
          "theme_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme color.",
            "maxLength": 63
          },
          "theme_name": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme name.",
            "maxLength": 63
          },
          "field_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's field color.",
            "maxLength": 63
          },
          "background_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's background color.",
            "maxLength": 63
          },
          "border_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's border color.",
            "maxLength": 63
          },
          "submit_text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's submit text color.",
            "maxLength": 63
          },
          "background_image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "background image for this form."
          },
          "background_image_slug": {
            "type": "string",
            "nullable": true,
            "description": "the background image's slug.",
            "maxLength": 31
          },
          "background_image_url": {
            "type": "string",
            "nullable": true,
            "description": "the background image's url.",
            "maxLength": 900
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional theme configuration."
          },
          "custom_js": {
            "type": "string",
            "nullable": true
          },
          "custom_css": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "defines if the form is active and users can see and submit it."
          },
          "config": {
            "type": "string",
            "nullable": true,
            "description": "the form's additional configuration.",
            "maxLength": 255
          },
          "show_calculations_score_result": {
            "type": "boolean",
            "description": "to show calculations result after user sumbits a form"
          },
          "show_submit_tracking_code": {
            "type": "boolean",
            "description": "whether to show the tracking code after user has submitted the form."
          },
          "show_answers": {
            "type": "boolean",
            "description": "whether to show the reslts page containing answers and answer sheet after form submit."
          },
          "form_currency_type": {
            "nullable": true,
            "description": "shows the currency of the calculations.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormCurrencyTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": -32768,
            "description": "forms position in relation to other forms."
          },
          "public_stats": {
            "type": "boolean",
            "description": "if set true, form stats will be publicly shared by a link."
          },
          "public_rows": {
            "type": "boolean",
            "description": "if set true, submitted data will be publicly shared by a link."
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "live_dashboard_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional live dashboard configuration, like what we show on dashboard or how we show them."
          },
          "address_is_universal": {
            "type": "boolean",
            "description": "If set true, form's address should be universally unique, and the forms is accessible on the root domain, otherwise, it's only available on the user's domain and subdomain."
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on the form, if they want to show this form on a custom domain (e.g. https://example.co/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "accept_draft_answers": {
            "type": "boolean",
            "description": "users can have draft answers on this form or not."
          },
          "spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet.",
            "maxLength": 255
          },
          "spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet.",
            "maxLength": 255
          },
          "last_submit_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was the last submit on the form?"
          },
          "total_submits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many submits the form has.",
            "minimum": 0
          },
          "total_size": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "format": "int64",
            "description": "shows total size of the form and it's fields' fields in bytes."
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "has_recaptcha": {
            "type": "boolean",
            "description": "defines if show a recaptcha on form or not"
          },
          "slack_accesses": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "List of slack access slugs."
          }
        },
        "required": [
          "admin_email_notif_template",
          "category",
          "copied_from",
          "copies_count",
          "created_at",
          "deleted",
          "export_in_progress",
          "last_export_file",
          "last_export_time",
          "owner",
          "owner_custom_domain",
          "subdomain",
          "submit_count",
          "tags",
          "updated_at",
          "user_email_notif_template",
          "user_spreadsheet_id",
          "user_spreadsheet_range",
          "user_spreadsheet_url",
          "visit_count"
        ]
      },
      "FormTypeEnum": {
        "enum": [
          "simple",
          "multi_step",
          "nps"
        ],
        "type": "string"
      },
      "FormUpdate": {
        "type": "object",
        "properties": {
          "submit_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submit_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "forward_submit_emails_to": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "description": "A list of emails to forward the form submit emails to."
          },
          "owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "readOnly": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "fields_list": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "submit_count": {
            "type": "integer",
            "readOnly": true
          },
          "visit_count": {
            "type": "integer",
            "readOnly": true
          },
          "has_email_fields": {
            "type": "boolean",
            "readOnly": true
          },
          "user_spreadsheet_id": {
            "type": "string",
            "nullable": true
          },
          "user_spreadsheet_range": {
            "type": "string",
            "nullable": true
          },
          "user_spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet of user.",
            "readOnly": true
          },
          "export_in_progress": {
            "type": "boolean",
            "description": "Shows if there's an excel export task in progress for the form.",
            "readOnly": true
          },
          "last_export_file": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "readOnly": true
          },
          "last_export_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was last excel export created.",
            "readOnly": true
          },
          "copied_from": {
            "type": "string",
            "readOnly": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "description": "category's slug."
          },
          "admin_email_notif_template": {
            "type": "string",
            "nullable": true,
            "description": "email template's slug."
          },
          "user_email_notif_template": {
            "type": "string",
            "nullable": true,
            "description": "email template's slug."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "tags's slug."
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "readOnly": true
          },
          "logic": {
            "type": "object",
            "additionalProperties": {}
          },
          "subdomain": {
            "type": "string",
            "readOnly": true
          },
          "owner_custom_domain": {
            "type": "string",
            "readOnly": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ],
            "readOnly": true
          },
          "logic_metadata": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "form_fields": {
            "type": "array",
            "items": {
              "type": "string",
              "writeOnly": true
            },
            "writeOnly": true,
            "description": "a list of form fields' slug."
          },
          "remove_related_form_logic": {
            "type": "boolean",
            "writeOnly": true,
            "default": false,
            "description": "Remove any form logic related to this form's removed fields. (For when you're removing an existing field from the form)."
          },
          "shared_access": {
            "type": "string",
            "readOnly": true
          },
          "row_tags": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "payment_method": {
            "type": "string",
            "nullable": true
          },
          "redirection_address": {
            "type": "string",
            "nullable": true
          },
          "fixed_payment_amount": {
            "type": "string",
            "nullable": true
          },
          "shuffle_choices": {
            "type": "boolean",
            "writeOnly": true,
            "nullable": true
          },
          "logo_slug": {
            "type": "string",
            "writeOnly": true
          },
          "logo_url": {
            "type": "string",
            "readOnly": true
          },
          "background_image_slug": {
            "type": "string",
            "writeOnly": true
          },
          "background_image_url": {
            "type": "string",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "show_title": {
            "type": "boolean",
            "description": "title visibility on form."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about form."
          },
          "success_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is successfully submitted."
          },
          "error_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is not successfully submitted."
          },
          "button_text": {
            "type": "string",
            "nullable": true,
            "description": "a text to show on the form's submit button.",
            "maxLength": 63
          },
          "form_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormTypeEnum"
              }
            ],
            "description": "shows the forms type."
          },
          "max_submit_count": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "description": "the maximum times people can submit this form.",
            "minimum": 0
          },
          "needs_login": {
            "type": "boolean",
            "description": "whether the users need to login to submit the form."
          },
          "max_submit_per_ip_per_day": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "minimum": 0
          },
          "time_limit": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time limit to fill this form"
          },
          "shuffle_fields": {
            "type": "boolean",
            "description": "shows wether to shuffle the ordering of the form field on show."
          },
          "form_redirects_after_submit": {
            "type": "string",
            "nullable": true,
            "description": "Either null or the url of destination.",
            "maxLength": 2000
          },
          "include_data_on_redirect": {
            "type": "boolean",
            "description": "if set true, the submitted data along with aliases will be included in the redirect url."
          },
          "send_emails_to": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "an email address to send form data copy on each submit.",
            "maxLength": 254
          },
          "submit_email_notif": {
            "type": "boolean",
            "description": "receive email notifications on each submit for the form."
          },
          "row_update_email_notif": {
            "type": "boolean",
            "description": "receive email notifications when a row is updated."
          },
          "send_user_confirm": {
            "type": "boolean",
            "description": "whether to send a copy of data to user."
          },
          "submit_push_notif": {
            "type": "boolean",
            "description": "receive push notifications on each submit for the form."
          },
          "row_update_push_notif": {
            "type": "boolean",
            "description": "receive push notifications when a row is updated."
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "an optional thumbnail for the form"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the logo to be shown on the top of form"
          },
          "logo_position": {
            "nullable": true,
            "description": "the logo's position.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LogoPositionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's text color.",
            "maxLength": 63
          },
          "button_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's button color.",
            "maxLength": 63
          },
          "theme_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme color.",
            "maxLength": 63
          },
          "theme_name": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme name.",
            "maxLength": 63
          },
          "field_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's field color.",
            "maxLength": 63
          },
          "background_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's background color.",
            "maxLength": 63
          },
          "border_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's border color.",
            "maxLength": 63
          },
          "submit_text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's submit text color.",
            "maxLength": 63
          },
          "background_image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "background image for this form."
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional theme configuration."
          },
          "custom_js": {
            "type": "string",
            "nullable": true
          },
          "custom_css": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "defines if the form is active and users can see and submit it."
          },
          "config": {
            "type": "string",
            "nullable": true,
            "description": "the form's additional configuration.",
            "maxLength": 255
          },
          "show_calculations_score_result": {
            "type": "boolean",
            "description": "to show calculations result after user sumbits a form"
          },
          "show_submit_tracking_code": {
            "type": "boolean",
            "description": "whether to show the tracking code after user has submitted the form."
          },
          "show_answers": {
            "type": "boolean",
            "description": "whether to show the reslts page containing answers and answer sheet after form submit."
          },
          "form_currency_type": {
            "nullable": true,
            "description": "shows the currency of the calculations.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormCurrencyTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "public_stats": {
            "type": "boolean",
            "description": "if set true, form stats will be publicly shared by a link."
          },
          "public_rows": {
            "type": "boolean",
            "description": "if set true, submitted data will be publicly shared by a link."
          },
          "live_dashboard_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional live dashboard configuration, like what we show on dashboard or how we show them."
          },
          "address_is_universal": {
            "type": "boolean",
            "description": "If set true, form's address should be universally unique, and the forms is accessible on the root domain, otherwise, it's only available on the user's domain and subdomain."
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on the form, if they want to show this form on a custom domain (e.g. https://example.co/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "accept_draft_answers": {
            "type": "boolean",
            "description": "users can have draft answers on this form or not."
          },
          "last_export_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was last excel export task was started for the form?"
          },
          "spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet.",
            "maxLength": 255
          },
          "spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet.",
            "maxLength": 255
          },
          "last_submit_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was the last submit on the form?"
          },
          "total_submits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many submits the form has.",
            "minimum": 0
          },
          "total_size": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "format": "int64",
            "description": "shows total size of the form and it's fields' fields in bytes."
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "has_recaptcha": {
            "type": "boolean",
            "description": "defines if show a recaptcha on form or not"
          },
          "slack_accesses": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "List of slack access slugs."
          },
          "primary_email": {
            "type": "integer",
            "nullable": true,
            "description": "an email field in the form, to send the submitted data to."
          },
          "shared_users": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "readOnly": true
          }
        },
        "required": [
          "background_image_url",
          "copied_from",
          "created_at",
          "currency",
          "deleted",
          "export_in_progress",
          "fields",
          "fields_list",
          "fixed_payment_amount",
          "has_email_fields",
          "last_export_file",
          "last_export_time",
          "live_dashboard_address",
          "logic_metadata",
          "logo_url",
          "owner",
          "owner_custom_domain",
          "payment_method",
          "redirection_address",
          "row_tags",
          "shared_access",
          "shared_users",
          "subdomain",
          "submit_count",
          "updated_at",
          "user_spreadsheet_id",
          "user_spreadsheet_range",
          "user_spreadsheet_url",
          "visit_count"
        ]
      },
      "FormWebhook": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "the call back url to send the data to after the webhook has been triggered.",
            "maxLength": 512
          },
          "secret": {
            "type": "string",
            "nullable": true,
            "description": "an optional secret key sent to the url, inside header (in a pre-defined header key)."
          },
          "form_submit_events": {
            "type": "boolean",
            "description": "is called everytime form has a new submit."
          },
          "row_payment_events": {
            "type": "boolean",
            "description": "is called everytime form receives a successful payment."
          },
          "row_update_events": {
            "type": "boolean",
            "description": "is called everytime a row is edited."
          },
          "active": {
            "type": "boolean",
            "description": "whether the webhook is currently active or not."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          }
        },
        "required": [
          "created_at",
          "slug",
          "updated_at",
          "url"
        ]
      },
      "GatewayEnum": {
        "enum": [
          "pasargad",
          "zarrinpal",
          "asan_pardakht",
          "stripe",
          "paypal",
          "square"
        ],
        "type": "string"
      },
      "GetLiveDashboardCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true,
            "description": "the code with which the live dashboard will be shared.",
            "maxLength": 6
          },
          "form": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormLiveDashboardCode"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "form"
        ]
      },
      "HiddenField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "KanbanBlockCreate": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "columns_field": {
            "type": "string"
          },
          "items_field": {
            "type": "string"
          },
          "featured_image_field": {
            "type": "string"
          },
          "base_block": {
            "type": "string"
          },
          "content_filters": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          },
          "filters": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "mode": {
            "$ref": "#/components/schemas/ModeEnum"
          },
          "display_type": {
            "$ref": "#/components/schemas/KanbanBlockCreateDisplayTypeEnum"
          }
        },
        "required": [
          "columns_field",
          "content_filters",
          "created_at",
          "items_field",
          "slug",
          "title",
          "type",
          "updated_at"
        ]
      },
      "KanbanBlockCreateDisplayTypeEnum": {
        "enum": [
          "kanban",
          "grid_view"
        ],
        "type": "string"
      },
      "LiveDashboardCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "readOnly": true,
            "description": "the code with which the live dashboard will be shared."
          },
          "form": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormLiveDashboardCode"
              }
            ],
            "readOnly": true
          },
          "expiration_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "shows until wich time the code will be valid."
          }
        },
        "required": [
          "code",
          "expiration_time",
          "form"
        ]
      },
      "LocationEnum": {
        "enum": [
          "left-sidebar",
          "right-sidebar",
          "header",
          "footer",
          "main",
          "non-primary"
        ],
        "type": "string"
      },
      "LocationField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "LogoPositionEnum": {
        "enum": [
          "left",
          "center",
          "right"
        ],
        "type": "string"
      },
      "LookupField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "choice_items": {
            "type": "object",
            "additionalProperties": {},
            "description": "A list of choice titles and their slugs (for editing the existing choices). (e.g. [{\"title\":\"Existing Option\",\"slug\":\"OPTION_SLUG\", \"image\":\"base64 Image\"},{\"title\":\"New Option\", \"image\":\"base64 Image\"}])"
          },
          "remove_related_form_logic": {
            "type": "boolean",
            "writeOnly": true,
            "default": false,
            "description": "Remove any form logic related to this field's removed choices. (For when you're removing an existing choice from the field)."
          },
          "related_form": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "has_other_choice": {
            "type": "boolean",
            "description": "specifies that field has other choice or not."
          },
          "shuffle_choices": {
            "type": "boolean",
            "description": "shows whether to shuffle the ordering of the field choices or not."
          },
          "add_new_choice": {
            "type": "boolean",
            "description": "shows user can add new choice item or not."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "MatrixField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "choice_items": {
            "type": "object",
            "additionalProperties": {},
            "description": "A list of choice titles and their slugs (for editing the existing choices). (e.g. [{\"title\":\"Existing Option\",\"slug\":\"OPTION_SLUG\", \"image\":\"base64 Image\"},{\"title\":\"New Option\", \"image\":\"base64 Image\"}])"
          },
          "remove_related_form_logic": {
            "type": "boolean",
            "writeOnly": true,
            "default": false,
            "description": "Remove any form logic related to this field's removed choices. (For when you're removing an existing choice from the field)."
          },
          "bulk_choices": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "description": "Use to send a bulk list of choices to add to the field"
          },
          "choice_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChoiceGroup"
            },
            "description": "A list of choice group and their slugs (for editing the existing choices). (e.g. [{\"title\":\"Existing Group\",\"slug\":\"GROUP_SLUG\"},{\"title\":\"New GROUP\"}])"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "shuffle_choices": {
            "type": "boolean",
            "description": "shows whether to shuffle the ordering of the field choices or not."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "MenuBlock": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuItem"
            },
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          }
        },
        "required": [
          "created_at",
          "items",
          "title",
          "type",
          "updated_at"
        ]
      },
      "MenuItem": {
        "type": "object",
        "properties": {
          "sub_items": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "block": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "type": {
            "$ref": "#/components/schemas/MenuItemTypeEnum"
          },
          "link": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the link to wich the menu item is set.",
            "maxLength": 200
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional desctiption on the menu item.",
            "maxLength": 511
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of item",
            "maxLength": 63
          }
        },
        "required": [
          "block",
          "created_at",
          "sub_items",
          "title",
          "type",
          "updated_at"
        ]
      },
      "MenuItemTypeEnum": {
        "enum": [
          "block",
          "link",
          "group"
        ],
        "type": "string"
      },
      "MetaField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "file_slug": {
            "type": "string",
            "writeOnly": true
          },
          "file_slugs": {
            "type": "array",
            "items": {},
            "writeOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "sub_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetaFieldSubTypeEnum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed."
          },
          "video_link": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "link to the embeded video's page for video meta fields",
            "maxLength": 200
          }
        },
        "required": [
          "created_at",
          "slug",
          "sub_type",
          "type",
          "updated_at"
        ]
      },
      "MetaFieldSubTypeEnum": {
        "enum": [
          "page_break",
          "section",
          "video"
        ],
        "type": "string"
      },
      "ModeEnum": {
        "enum": [
          "editable",
          "read_only"
        ],
        "type": "string"
      },
      "MoneyField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "min_value": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "description": "the minimum accepted value for the field."
          },
          "max_value": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "description": "the maximum accepted value for the field."
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "description": "the currency for money input."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "MultipleSelectField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "choice_items": {
            "type": "object",
            "additionalProperties": {},
            "description": "A list of choice titles and their slugs (for editing the existing choices). (e.g. [{\"title\":\"Existing Option\",\"slug\":\"OPTION_SLUG\", \"image\":\"base64 Image\"},{\"title\":\"New Option\", \"image\":\"base64 Image\"}])"
          },
          "remove_related_form_logic": {
            "type": "boolean",
            "writeOnly": true,
            "default": false,
            "description": "Remove any form logic related to this field's removed choices. (For when you're removing an existing choice from the field)."
          },
          "bulk_choices": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "description": "Use to send a bulk list of choices to add to the field"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "has_other_choice": {
            "type": "boolean",
            "description": "specifies that field has other choice or not."
          },
          "shuffle_choices": {
            "type": "boolean",
            "description": "shows whether to shuffle the ordering of the field choices or not."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "NullEnum": {
        "enum": [
          null
        ]
      },
      "NumberField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "min_value": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "description": "the minimum accepted value for the field."
          },
          "max_value": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "description": "the maximum accepted value for the field."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "OembedField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "url of the content",
            "maxLength": 200
          },
          "oembed": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "config": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "PaginatedAccessTypeDescriptionList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "access_type_descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessTypeDescription"
            }
          }
        }
      },
      "PaginatedBlockList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Block"
            }
          }
        }
      },
      "PaginatedBoardListList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "boards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardList"
            }
          }
        }
      },
      "PaginatedBoardTemplateList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "board_templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardTemplate"
            }
          }
        }
      },
      "PaginatedCategoryList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      },
      "PaginatedCategoryUserList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "category_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryUser"
            }
          }
        }
      },
      "PaginatedChoiceListList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChoiceList"
            }
          }
        }
      },
      "PaginatedCombinedFieldsChartList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "combined_fields_chartss": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CombinedFieldsChart"
            }
          }
        }
      },
      "PaginatedCurrencyList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        }
      },
      "PaginatedEmailSenderList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "email_servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailSender"
            }
          }
        }
      },
      "PaginatedEmailSenderShortList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "email_servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailSenderShort"
            }
          }
        }
      },
      "PaginatedEmailTemplateExampleList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "email_templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailTemplateExample"
            }
          }
        }
      },
      "PaginatedEmailTemplateList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "email_templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailTemplate"
            }
          }
        }
      },
      "PaginatedForceUpdateList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "force_updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForceUpdate"
            }
          }
        }
      },
      "PaginatedFormSharedProfilesListList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "shared_profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormSharedProfilesList"
            }
          }
        }
      },
      "PaginatedFormSummaryList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormSummary"
            }
          }
        }
      },
      "PaginatedFormTagList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "form_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormTag"
            }
          }
        }
      },
      "PaginatedFormTemplateList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormTemplate"
            }
          }
        }
      },
      "PaginatedPaymentMethodList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          }
        }
      },
      "PaginatedReportList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Report"
            }
          }
        }
      },
      "PaginatedRowList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Row"
            }
          }
        }
      },
      "PaginatedRowSearchList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowSearch"
            }
          }
        }
      },
      "PaginatedRowTagList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowTag"
            }
          }
        }
      },
      "PaginatedShowFormSummaryList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShowFormSummary"
            }
          }
        }
      },
      "PaginatedTableChartList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "table_charts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TableChart"
            }
          }
        }
      },
      "PaginatedThemeList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "themes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Theme"
            }
          }
        }
      },
      "PaginatedUserShortWithCategoryAccessList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "page_size": {
            "type": "integer",
            "example": 10
          },
          "page_count": {
            "type": "integer",
            "example": 13
          },
          "current_page": {
            "type": "integer",
            "example": 3
          },
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserShortWithCategoryAccess"
            }
          }
        }
      },
      "PatchedBlock": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          }
        }
      },
      "PatchedCategory": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parent_category": {
            "type": "string",
            "nullable": true,
            "description": "If the category has a parent category, send its slug on this field."
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleCategory"
            },
            "readOnly": true
          },
          "shared_access": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "category color settings or color code.",
            "maxLength": 63
          }
        }
      },
      "PatchedEmailSender": {
        "type": "object",
        "properties": {
          "sender_default_email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "sender's default email. if not set, email's will be sent from the system's default.",
            "maxLength": 255
          },
          "sender_default_name": {
            "type": "string",
            "nullable": true,
            "description": "sender's default name. you'll have to set the sender default email to use this.",
            "maxLength": 63
          },
          "default_reply_to_email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "the default address to set as the email's default `reply to` email address.",
            "maxLength": 254
          },
          "smtp_username": {
            "type": "string",
            "nullable": true,
            "description": "smtp username. you'll have to set this value to use the custom sender."
          },
          "smtp_password": {
            "type": "string",
            "writeOnly": true
          },
          "smtp_host": {
            "type": "string",
            "nullable": true,
            "description": "smtp smtp host. you'll have to set this value to use the custom sender.",
            "maxLength": 255
          },
          "smtp_port": {
            "type": "integer",
            "maximum": 32767,
            "nullable": true,
            "description": "smtp port. you'll have to set this value to use the custom sender.",
            "minimum": 0
          },
          "smtp_use_tls": {
            "type": "boolean"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "is this sender currently enabled?"
          },
          "is_active": {
            "type": "string",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "a title to identify this email sever",
            "maxLength": 255
          }
        }
      },
      "PatchedEmailTemplate": {
        "type": "object",
        "properties": {
          "is_active": {
            "type": "string",
            "readOnly": true
          },
          "email_server_slug": {
            "type": "string",
            "writeOnly": true,
            "nullable": true,
            "description": "the email server used by this email template for sending emails."
          },
          "email_server": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailSenderShort"
              }
            ],
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "a title to identify the email template",
            "maxLength": 255
          },
          "sender_email": {
            "type": "string",
            "nullable": true,
            "description": "use if you want to send the email from a specific address. can be read from the context.",
            "maxLength": 63
          },
          "reply_to_email": {
            "type": "string",
            "nullable": true,
            "description": "the address to set as the email's `reply to` email address.",
            "maxLength": 255
          },
          "sender_name": {
            "type": "string",
            "nullable": true,
            "description": "use if you want to set the sender's name. can be read from the context.",
            "maxLength": 63
          },
          "subject": {
            "type": "string",
            "nullable": true,
            "description": "use to set a template for emil's subject",
            "maxLength": 255
          },
          "body": {
            "type": "string",
            "description": "body of the email template"
          },
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "PatchedFieldAction": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "acceptable_answers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "set if the field only accepts answers from a predefined list (e.g. a list of emails for a email field)."
          }
        }
      },
      "PatchedFormField": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "form_fields": {
            "type": "array",
            "items": {},
            "writeOnly": true,
            "description": "a list of form fields' slug."
          },
          "suspended": {
            "type": "boolean",
            "readOnly": true
          },
          "verified": {
            "type": "boolean",
            "description": "defines if the form is verified or not.",
            "readOnly": true
          },
          "permanently_verified": {
            "type": "boolean",
            "description": "defines if the form is permanently verified or not. meaning, event after changes, it won't need to be verified again.",
            "readOnly": true
          },
          "total_visits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many times the form was visited.",
            "minimum": 0
          }
        }
      },
      "PatchedFormTag": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "category color settings or color code.",
            "maxLength": 63
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to used by users to get all the forms with this tag.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          }
        }
      },
      "PatchedFormUpdate": {
        "type": "object",
        "properties": {
          "submit_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submit_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "forward_submit_emails_to": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "description": "A list of emails to forward the form submit emails to."
          },
          "owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "readOnly": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "fields_list": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "submit_count": {
            "type": "integer",
            "readOnly": true
          },
          "visit_count": {
            "type": "integer",
            "readOnly": true
          },
          "has_email_fields": {
            "type": "boolean",
            "readOnly": true
          },
          "user_spreadsheet_id": {
            "type": "string",
            "nullable": true
          },
          "user_spreadsheet_range": {
            "type": "string",
            "nullable": true
          },
          "user_spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet of user.",
            "readOnly": true
          },
          "export_in_progress": {
            "type": "boolean",
            "description": "Shows if there's an excel export task in progress for the form.",
            "readOnly": true
          },
          "last_export_file": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "readOnly": true
          },
          "last_export_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was last excel export created.",
            "readOnly": true
          },
          "copied_from": {
            "type": "string",
            "readOnly": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "description": "category's slug."
          },
          "admin_email_notif_template": {
            "type": "string",
            "nullable": true,
            "description": "email template's slug."
          },
          "user_email_notif_template": {
            "type": "string",
            "nullable": true,
            "description": "email template's slug."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "tags's slug."
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "readOnly": true
          },
          "logic": {
            "type": "object",
            "additionalProperties": {}
          },
          "subdomain": {
            "type": "string",
            "readOnly": true
          },
          "owner_custom_domain": {
            "type": "string",
            "readOnly": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ],
            "readOnly": true
          },
          "logic_metadata": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "form_fields": {
            "type": "array",
            "items": {
              "type": "string",
              "writeOnly": true
            },
            "writeOnly": true,
            "description": "a list of form fields' slug."
          },
          "remove_related_form_logic": {
            "type": "boolean",
            "writeOnly": true,
            "default": false,
            "description": "Remove any form logic related to this form's removed fields. (For when you're removing an existing field from the form)."
          },
          "shared_access": {
            "type": "string",
            "readOnly": true
          },
          "row_tags": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "payment_method": {
            "type": "string",
            "nullable": true
          },
          "redirection_address": {
            "type": "string",
            "nullable": true
          },
          "fixed_payment_amount": {
            "type": "string",
            "nullable": true
          },
          "shuffle_choices": {
            "type": "boolean",
            "writeOnly": true,
            "nullable": true
          },
          "logo_slug": {
            "type": "string",
            "writeOnly": true
          },
          "logo_url": {
            "type": "string",
            "readOnly": true
          },
          "background_image_slug": {
            "type": "string",
            "writeOnly": true
          },
          "background_image_url": {
            "type": "string",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "show_title": {
            "type": "boolean",
            "description": "title visibility on form."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about form."
          },
          "success_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is successfully submitted."
          },
          "error_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is not successfully submitted."
          },
          "button_text": {
            "type": "string",
            "nullable": true,
            "description": "a text to show on the form's submit button.",
            "maxLength": 63
          },
          "form_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormTypeEnum"
              }
            ],
            "description": "shows the forms type."
          },
          "max_submit_count": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "description": "the maximum times people can submit this form.",
            "minimum": 0
          },
          "needs_login": {
            "type": "boolean",
            "description": "whether the users need to login to submit the form."
          },
          "max_submit_per_ip_per_day": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "minimum": 0
          },
          "time_limit": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time limit to fill this form"
          },
          "shuffle_fields": {
            "type": "boolean",
            "description": "shows wether to shuffle the ordering of the form field on show."
          },
          "form_redirects_after_submit": {
            "type": "string",
            "nullable": true,
            "description": "Either null or the url of destination.",
            "maxLength": 2000
          },
          "include_data_on_redirect": {
            "type": "boolean",
            "description": "if set true, the submitted data along with aliases will be included in the redirect url."
          },
          "send_emails_to": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "an email address to send form data copy on each submit.",
            "maxLength": 254
          },
          "submit_email_notif": {
            "type": "boolean",
            "description": "receive email notifications on each submit for the form."
          },
          "row_update_email_notif": {
            "type": "boolean",
            "description": "receive email notifications when a row is updated."
          },
          "send_user_confirm": {
            "type": "boolean",
            "description": "whether to send a copy of data to user."
          },
          "submit_push_notif": {
            "type": "boolean",
            "description": "receive push notifications on each submit for the form."
          },
          "row_update_push_notif": {
            "type": "boolean",
            "description": "receive push notifications when a row is updated."
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "an optional thumbnail for the form"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the logo to be shown on the top of form"
          },
          "logo_position": {
            "nullable": true,
            "description": "the logo's position.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LogoPositionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's text color.",
            "maxLength": 63
          },
          "button_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's button color.",
            "maxLength": 63
          },
          "theme_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme color.",
            "maxLength": 63
          },
          "theme_name": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme name.",
            "maxLength": 63
          },
          "field_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's field color.",
            "maxLength": 63
          },
          "background_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's background color.",
            "maxLength": 63
          },
          "border_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's border color.",
            "maxLength": 63
          },
          "submit_text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's submit text color.",
            "maxLength": 63
          },
          "background_image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "background image for this form."
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional theme configuration."
          },
          "custom_js": {
            "type": "string",
            "nullable": true
          },
          "custom_css": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "defines if the form is active and users can see and submit it."
          },
          "config": {
            "type": "string",
            "nullable": true,
            "description": "the form's additional configuration.",
            "maxLength": 255
          },
          "show_calculations_score_result": {
            "type": "boolean",
            "description": "to show calculations result after user sumbits a form"
          },
          "show_submit_tracking_code": {
            "type": "boolean",
            "description": "whether to show the tracking code after user has submitted the form."
          },
          "show_answers": {
            "type": "boolean",
            "description": "whether to show the reslts page containing answers and answer sheet after form submit."
          },
          "form_currency_type": {
            "nullable": true,
            "description": "shows the currency of the calculations.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormCurrencyTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "public_stats": {
            "type": "boolean",
            "description": "if set true, form stats will be publicly shared by a link."
          },
          "public_rows": {
            "type": "boolean",
            "description": "if set true, submitted data will be publicly shared by a link."
          },
          "live_dashboard_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional live dashboard configuration, like what we show on dashboard or how we show them."
          },
          "address_is_universal": {
            "type": "boolean",
            "description": "If set true, form's address should be universally unique, and the forms is accessible on the root domain, otherwise, it's only available on the user's domain and subdomain."
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on the form, if they want to show this form on a custom domain (e.g. https://example.co/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "accept_draft_answers": {
            "type": "boolean",
            "description": "users can have draft answers on this form or not."
          },
          "last_export_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was last excel export task was started for the form?"
          },
          "spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet.",
            "maxLength": 255
          },
          "spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet.",
            "maxLength": 255
          },
          "last_submit_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was the last submit on the form?"
          },
          "total_submits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many submits the form has.",
            "minimum": 0
          },
          "total_size": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "format": "int64",
            "description": "shows total size of the form and it's fields' fields in bytes."
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "has_recaptcha": {
            "type": "boolean",
            "description": "defines if show a recaptcha on form or not"
          },
          "slack_accesses": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "List of slack access slugs."
          },
          "primary_email": {
            "type": "integer",
            "nullable": true,
            "description": "an email field in the form, to send the submitted data to."
          },
          "shared_users": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "readOnly": true
          }
        }
      },
      "PatchedFormWebhook": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "the call back url to send the data to after the webhook has been triggered.",
            "maxLength": 512
          },
          "secret": {
            "type": "string",
            "nullable": true,
            "description": "an optional secret key sent to the url, inside header (in a pre-defined header key)."
          },
          "form_submit_events": {
            "type": "boolean",
            "description": "is called everytime form has a new submit."
          },
          "row_payment_events": {
            "type": "boolean",
            "description": "is called everytime form receives a successful payment."
          },
          "row_update_events": {
            "type": "boolean",
            "description": "is called everytime a row is edited."
          },
          "active": {
            "type": "boolean",
            "description": "whether the webhook is currently active or not."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          }
        }
      },
      "PatchedPrivateBoard": {
        "type": "object",
        "properties": {
          "primary_form": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrivateShowFormSummary"
              }
            ],
            "readOnly": true
          },
          "blocks": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "template": {
            "type": "string"
          },
          "copied_from": {
            "type": "string"
          },
          "thumbnail_slug": {
            "type": "string",
            "writeOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "tags's slug."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_primary": {
            "type": "boolean",
            "readOnly": true,
            "description": "shows if this board is the primary board for the primary form."
          },
          "is_template": {
            "type": "boolean",
            "readOnly": true,
            "description": "shows if this board can be used as a template."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "an optional short title to identify the board by.",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the board."
          },
          "share_address": {
            "type": "string",
            "readOnly": true,
            "description": "an auto-generated address to share the board with.",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "readOnly": true,
            "description": "the thumbnail's url."
          }
        }
      },
      "PatchedProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "weekly_digest": {
            "type": "boolean"
          },
          "submit_email_notif": {
            "type": "boolean"
          },
          "submit_push_notif": {
            "type": "boolean"
          },
          "total_forms": {
            "type": "integer",
            "readOnly": true
          },
          "total_submits": {
            "type": "integer",
            "readOnly": true
          },
          "used_space": {
            "type": "integer",
            "readOnly": true
          },
          "plan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Plan"
              }
            ],
            "readOnly": true
          },
          "plan_detail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessPlan"
              }
            ],
            "readOnly": true
          },
          "active_business": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Business"
              }
            ],
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "maxLength": 16
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "verified_account": {
            "type": "boolean"
          },
          "verified_email": {
            "type": "boolean"
          },
          "verified_phone": {
            "type": "boolean"
          },
          "gift_credit": {
            "type": "string",
            "format": "decimal",
            "maximum": 1000000000000000000,
            "minimum": -1000000000000000000,
            "description": "current amount of gift credit user has"
          },
          "is_guest": {
            "type": "boolean"
          },
          "score": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "subdomain": {
            "type": "string",
            "nullable": true,
            "description": "a subdomain to for showing the users' forms.",
            "maxLength": 31,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on their profile, if they want to show their forms on a custom domain (e.g. https://example.co/form_address/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "use_custom_emails": {
            "type": "boolean",
            "description": "if set false, all the settings for custom email templates and servers will be ignored."
          }
        }
      },
      "PatchedReport": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type3f2Enum"
              }
            ],
            "description": "determines the type of this report.",
            "readOnly": true
          },
          "primary_form": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the report."
          }
        }
      },
      "PatchedResendEmailOTP": {
        "type": "object",
        "properties": {
          "tried": {
            "type": "integer",
            "maximum": 32767,
            "description": "number of times user send a token to validate the code and uuid.",
            "readOnly": true
          },
          "email_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailOTP"
              }
            ],
            "readOnly": true
          }
        }
      },
      "PatchedResendPhoneOTP": {
        "type": "object",
        "properties": {
          "tried": {
            "type": "integer",
            "maximum": 32767,
            "description": "number of times user send a token to validate the code and uuid.",
            "readOnly": true
          },
          "sms_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SMSOTP"
              }
            ],
            "readOnly": true
          }
        }
      },
      "PatchedRowActions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserShort"
              }
            ],
            "readOnly": true
          },
          "readable_data": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "rendered_data": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "form": {
            "type": "string",
            "readOnly": true
          },
          "row_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "submit_code": {
            "type": "string",
            "nullable": true,
            "description": "a submit code to provide to user.",
            "readOnly": true
          },
          "tracking_code": {
            "type": "string",
            "nullable": true,
            "description": "a tracking code to provide to end user. unique for each row in the form.",
            "readOnly": true
          },
          "next_row": {
            "type": "string",
            "readOnly": true
          },
          "previous_row": {
            "type": "string",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sumbit_time": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time it took to fill this form"
          },
          "submitter_referer_address": {
            "type": "string",
            "nullable": true,
            "description": "which website was this request submitted on",
            "maxLength": 2048
          },
          "phone_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneVerificationStateEnum"
              }
            ],
            "description": "shows the status of phone verification field. defualt is not required"
          },
          "email_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailVerificationStateEnum"
              }
            ],
            "description": "shows the status of email verification field. defualt is not required"
          },
          "data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the form's submitted data, in json. a key value pair with fields's slug."
          },
          "calculation_score": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "shows the sume of scores for each field in row. it is null if there is not any calculations"
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ],
            "description": "shows status of the row."
          }
        }
      },
      "PatchedRowTag": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "category color settings or color code.",
            "maxLength": 63
          }
        }
      },
      "PatchedVerifyEmailOTP": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "writeOnly": true
          },
          "email_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailOTP"
              }
            ],
            "readOnly": true
          }
        }
      },
      "PatchedVerifyPhoneOTP": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "writeOnly": true
          },
          "sms_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SMSOTP"
              }
            ],
            "readOnly": true
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "payment method's display name.",
            "maxLength": 255
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "payment method's identifying name.",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "gateway": {
            "nullable": true,
            "description": "To which gateway this payment methods redirects the request (e.g. pasargad).",
            "oneOf": [
              {
                "$ref": "#/components/schemas/GatewayEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "payment_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentTypeEnum"
              }
            ],
            "readOnly": true,
            "description": "payment method's type."
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "description": "payment method's logo."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "any extra description to show with payment method.",
            "maxLength": 511
          },
          "active": {
            "type": "boolean",
            "description": "shows whether the method is currently active."
          },
          "terminal_code": {
            "type": "string",
            "nullable": true,
            "description": "the terminal code needed to connect to the gateway.",
            "maxLength": 255
          },
          "merchant_code": {
            "type": "string",
            "nullable": true,
            "description": "the merchant code needed to connect to the gateway.",
            "maxLength": 255
          },
          "private_key": {
            "type": "string",
            "nullable": true,
            "description": "the private key needed to sign the payment data."
          },
          "order": {
            "type": "integer",
            "maximum": 32767,
            "minimum": -32768,
            "description": "shows payment method ordering."
          }
        },
        "required": [
          "gateway",
          "name",
          "payment_type"
        ]
      },
      "PaymentTypeEnum": {
        "enum": [
          "offline",
          "gateway"
        ],
        "type": "string"
      },
      "PhoneField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "acceptable_answers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "set if the field only accepts answers from a predefined list (e.g. a list of emails for a email field)."
          },
          "phone_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneTypeEnum"
              }
            ],
            "description": "shows if the field accepts mobile number, landline number, or both."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "PhoneTypeEnum": {
        "enum": [
          "mobile",
          "landline",
          "both"
        ],
        "type": "string"
      },
      "PhoneVerificationField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "acceptable_answers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "set if the field only accepts answers from a predefined list (e.g. a list of emails for a email field)."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "PhoneVerificationStateEnum": {
        "enum": [
          "not_required",
          "not_verified",
          "verified"
        ],
        "type": "string"
      },
      "Plan": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "slug": {
            "$ref": "#/components/schemas/SlugEnum"
          },
          "icas_slug": {
            "type": "string",
            "nullable": true,
            "description": "slug of the plan in icas service.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "extra_settings": {
            "type": "object",
            "additionalProperties": {},
            "description": "any extra settings on the plan."
          }
        }
      },
      "PrivateBoard": {
        "type": "object",
        "properties": {
          "primary_form": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrivateShowFormSummary"
              }
            ],
            "readOnly": true
          },
          "blocks": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "template": {
            "type": "string"
          },
          "copied_from": {
            "type": "string"
          },
          "thumbnail_slug": {
            "type": "string",
            "writeOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "tags's slug."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_primary": {
            "type": "boolean",
            "readOnly": true,
            "description": "shows if this board is the primary board for the primary form."
          },
          "is_template": {
            "type": "boolean",
            "readOnly": true,
            "description": "shows if this board can be used as a template."
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "an optional short title to identify the board by.",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the board."
          },
          "share_address": {
            "type": "string",
            "readOnly": true,
            "description": "an auto-generated address to share the board with.",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "thumbnail_url": {
            "type": "string",
            "readOnly": true,
            "description": "the thumbnail's url."
          }
        },
        "required": [
          "blocks",
          "created_at",
          "is_primary",
          "is_template",
          "primary_form",
          "share_address",
          "slug",
          "thumbnail_url",
          "updated_at"
        ]
      },
      "PrivateShowFormSummary": {
        "type": "object",
        "properties": {
          "submit_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submit_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "has_watermark": {
            "type": "boolean",
            "readOnly": true
          },
          "recaptcha_code": {
            "type": "string",
            "readOnly": true
          },
          "visit_count": {
            "type": "integer",
            "readOnly": true
          },
          "subdomain": {
            "type": "string",
            "readOnly": true
          },
          "owner_custom_domain": {
            "type": "string",
            "readOnly": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ],
            "readOnly": true
          },
          "shared_access": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "show_title": {
            "type": "boolean",
            "description": "title visibility on form."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about form."
          },
          "success_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is successfully submitted."
          },
          "error_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is not successfully submitted."
          },
          "button_text": {
            "type": "string",
            "nullable": true,
            "description": "a text to show on the form's submit button.",
            "maxLength": 63
          },
          "form_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormTypeEnum"
              }
            ],
            "description": "shows the forms type."
          },
          "needs_login": {
            "type": "boolean",
            "description": "whether the users need to login to submit the form."
          },
          "time_limit": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time limit to fill this form"
          },
          "shuffle_fields": {
            "type": "boolean",
            "description": "shows wether to shuffle the ordering of the form field on show."
          },
          "form_redirects_after_submit": {
            "type": "string",
            "nullable": true,
            "description": "Either null or the url of destination.",
            "maxLength": 2000
          },
          "include_data_on_redirect": {
            "type": "boolean",
            "description": "if set true, the submitted data along with aliases will be included in the redirect url."
          },
          "row_update_email_notif": {
            "type": "boolean",
            "description": "receive email notifications when a row is updated."
          },
          "row_update_push_notif": {
            "type": "boolean",
            "description": "receive push notifications when a row is updated."
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "an optional thumbnail for the form"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the logo to be shown on the top of form"
          },
          "logo_slug": {
            "type": "string",
            "nullable": true,
            "description": "the logo's slug.",
            "maxLength": 31
          },
          "logo_url": {
            "type": "string",
            "nullable": true,
            "description": "the logo's url.",
            "maxLength": 900
          },
          "logo_position": {
            "nullable": true,
            "description": "the logo's position.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LogoPositionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's text color.",
            "maxLength": 63
          },
          "button_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's button color.",
            "maxLength": 63
          },
          "theme_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme color.",
            "maxLength": 63
          },
          "field_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's field color.",
            "maxLength": 63
          },
          "background_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's background color.",
            "maxLength": 63
          },
          "border_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's border color.",
            "maxLength": 63
          },
          "submit_text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's submit text color.",
            "maxLength": 63
          },
          "background_image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "background image for this form."
          },
          "background_image_slug": {
            "type": "string",
            "nullable": true,
            "description": "the background image's slug.",
            "maxLength": 31
          },
          "background_image_url": {
            "type": "string",
            "nullable": true,
            "description": "the background image's url.",
            "maxLength": 900
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional theme configuration."
          },
          "custom_js": {
            "type": "string",
            "nullable": true
          },
          "custom_css": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "type": "string",
            "nullable": true,
            "description": "the form's additional configuration.",
            "maxLength": 255
          },
          "show_calculations_score_result": {
            "type": "boolean",
            "description": "to show calculations result after user sumbits a form"
          },
          "show_submit_tracking_code": {
            "type": "boolean",
            "description": "whether to show the tracking code after user has submitted the form."
          },
          "show_answers": {
            "type": "boolean",
            "description": "whether to show the reslts page containing answers and answer sheet after form submit."
          },
          "form_currency_type": {
            "nullable": true,
            "description": "shows the currency of the calculations.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormCurrencyTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": -32768,
            "description": "forms position in relation to other forms."
          },
          "public_stats": {
            "type": "boolean",
            "description": "if set true, form stats will be publicly shared by a link."
          },
          "public_rows": {
            "type": "boolean",
            "description": "if set true, submitted data will be publicly shared by a link."
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "live_dashboard_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional live dashboard configuration, like what we show on dashboard or how we show them."
          },
          "address_is_universal": {
            "type": "boolean",
            "description": "If set true, form's address should be universally unique, and the forms is accessible on the root domain, otherwise, it's only available on the user's domain and subdomain."
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on the form, if they want to show this form on a custom domain (e.g. https://example.co/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "accept_draft_answers": {
            "type": "boolean",
            "description": "users can have draft answers on this form or not."
          },
          "spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet.",
            "maxLength": 255
          },
          "spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet.",
            "maxLength": 255
          },
          "last_submit_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was the last submit on the form?"
          },
          "total_submits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many submits the form has.",
            "minimum": 0
          },
          "total_size": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "format": "int64",
            "description": "shows total size of the form and it's fields' fields in bytes."
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "has_recaptcha": {
            "type": "boolean",
            "description": "defines if show a recaptcha on form or not"
          }
        },
        "required": [
          "created_at",
          "currency",
          "fields",
          "has_watermark",
          "owner_custom_domain",
          "recaptcha_code",
          "shared_access",
          "subdomain",
          "updated_at",
          "visit_count"
        ]
      },
      "ProductField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "images": {
            "type": "object",
            "additionalProperties": {},
            "description": "a list of new or existing images for the product (each image sent as a base64 image)."
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?",
            "readOnly": true
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "min_value": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "description": "the minimum accepted value for the field."
          },
          "max_value": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "description": "the maximum accepted value for the field."
          },
          "unit_price": {
            "type": "string",
            "format": "decimal",
            "maximum": 10000000000,
            "minimum": -10000000000,
            "description": "the price for each item of the product."
          }
        },
        "required": [
          "calculation_items",
          "created_at",
          "is_calculatable",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "weekly_digest": {
            "type": "boolean"
          },
          "submit_email_notif": {
            "type": "boolean"
          },
          "submit_push_notif": {
            "type": "boolean"
          },
          "total_forms": {
            "type": "integer",
            "readOnly": true
          },
          "total_submits": {
            "type": "integer",
            "readOnly": true
          },
          "used_space": {
            "type": "integer",
            "readOnly": true
          },
          "plan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Plan"
              }
            ],
            "readOnly": true
          },
          "plan_detail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessPlan"
              }
            ],
            "readOnly": true
          },
          "active_business": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Business"
              }
            ],
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "maxLength": 16
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "verified_account": {
            "type": "boolean"
          },
          "verified_email": {
            "type": "boolean"
          },
          "verified_phone": {
            "type": "boolean"
          },
          "gift_credit": {
            "type": "string",
            "format": "decimal",
            "maximum": 1000000000000000000,
            "minimum": -1000000000000000000,
            "description": "current amount of gift credit user has"
          },
          "is_guest": {
            "type": "boolean"
          },
          "score": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "subdomain": {
            "type": "string",
            "nullable": true,
            "description": "a subdomain to for showing the users' forms.",
            "maxLength": 31,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on their profile, if they want to show their forms on a custom domain (e.g. https://example.co/form_address/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "use_custom_emails": {
            "type": "boolean",
            "description": "if set false, all the settings for custom email templates and servers will be ignored."
          }
        },
        "required": [
          "active_business",
          "id",
          "plan",
          "plan_detail",
          "submit_email_notif",
          "submit_push_notif",
          "total_forms",
          "total_submits",
          "used_space",
          "username",
          "weekly_digest"
        ]
      },
      "ProfileExtensionsStats": {
        "type": "object",
        "properties": {
          "stats": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "stats"
        ]
      },
      "RatingField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "has_custom_range": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "sub_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RatingFieldSubTypeEnum"
              }
            ],
            "description": "type of the rating field."
          },
          "range_start": {
            "type": "integer",
            "maximum": 32767,
            "minimum": -32768,
            "nullable": true,
            "description": "if the scores have a minimum value (start of their acceptable range), define here."
          },
          "range_end": {
            "type": "integer",
            "maximum": 32767,
            "minimum": -32768,
            "nullable": true,
            "description": "if the scores have a maximum value (end of their acceptable range), define here."
          },
          "min_message": {
            "type": "string",
            "description": "text message for min value",
            "maxLength": 100
          },
          "max_message": {
            "type": "string",
            "description": "text message for max value",
            "maxLength": 100
          },
          "thumbnail_type": {
            "nullable": true,
            "description": "type of the rating field.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ThumbnailTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "has_custom_range",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "RatingFieldSubTypeEnum": {
        "enum": [
          "star",
          "like_dislike",
          "nps",
          "score",
          "embeded"
        ],
        "type": "string"
      },
      "RedirectionAddress": {
        "type": "object",
        "properties": {
          "grant_access": {
            "type": "boolean",
            "default": false
          },
          "provider": {
            "type": "string"
          }
        }
      },
      "RegisterClient": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "key"
        ]
      },
      "Report": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type3f2Enum"
              }
            ],
            "description": "determines the type of this report.",
            "readOnly": true
          },
          "primary_form": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the report."
          }
        },
        "required": [
          "created_at",
          "primary_form",
          "type",
          "updated_at"
        ]
      },
      "ReportBlock": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "report": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          }
        },
        "required": [
          "created_at",
          "report",
          "slug",
          "title",
          "type",
          "updated_at"
        ]
      },
      "RequestEmailVerificationOTP": {
        "type": "object",
        "properties": {
          "owner_model": {
            "type": "string",
            "writeOnly": true
          },
          "owner_slug": {
            "type": "string",
            "writeOnly": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "writeOnly": true
          },
          "email_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailOTP"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "email",
          "email_otp"
        ]
      },
      "RequestPhoneVerificationOTP": {
        "type": "object",
        "properties": {
          "owner_model": {
            "type": "string",
            "writeOnly": true
          },
          "owner_slug": {
            "type": "string",
            "writeOnly": true
          },
          "phone": {
            "type": "string",
            "writeOnly": true,
            "pattern": "^\\+?\\d+$"
          },
          "sms_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SMSOTP"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "phone",
          "sms_otp"
        ]
      },
      "ResendEmailOTP": {
        "type": "object",
        "properties": {
          "tried": {
            "type": "integer",
            "maximum": 32767,
            "description": "number of times user send a token to validate the code and uuid.",
            "readOnly": true
          },
          "email_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailOTP"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "email_otp",
          "tried"
        ]
      },
      "ResendPhoneOTP": {
        "type": "object",
        "properties": {
          "tried": {
            "type": "integer",
            "maximum": 32767,
            "description": "number of times user send a token to validate the code and uuid.",
            "readOnly": true
          },
          "sms_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SMSOTP"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "sms_otp",
          "tried"
        ]
      },
      "Row": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserShort"
              }
            ],
            "readOnly": true
          },
          "form": {
            "type": "string",
            "readOnly": true
          },
          "row_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowTag"
            }
          },
          "rendered_data": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "data": {
            "type": "string",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "submit_code": {
            "type": "string",
            "nullable": true,
            "description": "a submit code to provide to user.",
            "readOnly": true
          },
          "tracking_code": {
            "type": "string",
            "nullable": true,
            "description": "a tracking code to provide to end user. unique for each row in the form.",
            "readOnly": true
          },
          "upvotes_count": {
            "type": "string",
            "readOnly": true
          },
          "downvotes_count": {
            "type": "string",
            "readOnly": true
          },
          "votes_count": {
            "type": "string",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sumbit_time": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time it took to fill this form"
          },
          "submitter_referer_address": {
            "type": "string",
            "nullable": true,
            "description": "which website was this request submitted on",
            "maxLength": 2048
          },
          "phone_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneVerificationStateEnum"
              }
            ],
            "description": "shows the status of phone verification field. defualt is not required"
          },
          "email_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailVerificationStateEnum"
              }
            ],
            "description": "shows the status of email verification field. defualt is not required"
          },
          "calculation_score": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "shows the sume of scores for each field in row. it is null if there is not any calculations"
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ],
            "description": "shows status of the row."
          }
        },
        "required": [
          "created_at",
          "data",
          "deleted",
          "downvotes_count",
          "form",
          "id",
          "rendered_data",
          "row_tags",
          "slug",
          "submit_code",
          "tracking_code",
          "updated_at",
          "upvotes_count",
          "user",
          "votes_count"
        ]
      },
      "RowActions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserShort"
              }
            ],
            "readOnly": true
          },
          "readable_data": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "rendered_data": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "form": {
            "type": "string",
            "readOnly": true
          },
          "row_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "submit_code": {
            "type": "string",
            "nullable": true,
            "description": "a submit code to provide to user.",
            "readOnly": true
          },
          "tracking_code": {
            "type": "string",
            "nullable": true,
            "description": "a tracking code to provide to end user. unique for each row in the form.",
            "readOnly": true
          },
          "next_row": {
            "type": "string",
            "readOnly": true
          },
          "previous_row": {
            "type": "string",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sumbit_time": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time it took to fill this form"
          },
          "submitter_referer_address": {
            "type": "string",
            "nullable": true,
            "description": "which website was this request submitted on",
            "maxLength": 2048
          },
          "phone_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneVerificationStateEnum"
              }
            ],
            "description": "shows the status of phone verification field. defualt is not required"
          },
          "email_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailVerificationStateEnum"
              }
            ],
            "description": "shows the status of email verification field. defualt is not required"
          },
          "data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the form's submitted data, in json. a key value pair with fields's slug."
          },
          "calculation_score": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "shows the sume of scores for each field in row. it is null if there is not any calculations"
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ],
            "description": "shows status of the row."
          }
        },
        "required": [
          "created_at",
          "deleted",
          "form",
          "id",
          "next_row",
          "previous_row",
          "readable_data",
          "rendered_data",
          "slug",
          "submit_code",
          "tracking_code",
          "updated_at",
          "user"
        ]
      },
      "RowBulkDelete": {
        "type": "object",
        "properties": {
          "slugs_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "slugs_list"
        ]
      },
      "RowResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserShort"
              }
            ],
            "readOnly": true
          },
          "readable_data": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "rendered_data": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "row_tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "submit_code": {
            "type": "string",
            "nullable": true,
            "description": "a submit code to provide to user.",
            "readOnly": true
          },
          "tracking_code": {
            "type": "string",
            "nullable": true,
            "description": "a tracking code to provide to end user. unique for each row in the form.",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sumbit_time": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time it took to fill this form"
          },
          "submitter_referer_address": {
            "type": "string",
            "nullable": true,
            "description": "which website was this request submitted on",
            "maxLength": 2048
          },
          "phone_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneVerificationStateEnum"
              }
            ],
            "description": "shows the status of phone verification field. defualt is not required"
          },
          "email_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailVerificationStateEnum"
              }
            ],
            "description": "shows the status of email verification field. defualt is not required"
          },
          "data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the form's submitted data, in json. a key value pair with fields's slug."
          },
          "calculation_score": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "shows the sume of scores for each field in row. it is null if there is not any calculations"
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ],
            "description": "shows status of the row."
          },
          "form": {
            "type": "integer",
            "description": "the form that's submitted."
          }
        },
        "required": [
          "created_at",
          "deleted",
          "form",
          "id",
          "readable_data",
          "rendered_data",
          "slug",
          "submit_code",
          "tracking_code",
          "updated_at",
          "user"
        ]
      },
      "RowSearch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserShort"
              }
            ],
            "readOnly": true
          },
          "form": {
            "$ref": "#/components/schemas/FormShort"
          },
          "row_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowTag"
            }
          },
          "rendered_data": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "data": {
            "type": "string",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "submit_code": {
            "type": "string",
            "nullable": true,
            "description": "a submit code to provide to user.",
            "readOnly": true
          },
          "tracking_code": {
            "type": "string",
            "nullable": true,
            "description": "a tracking code to provide to end user. unique for each row in the form.",
            "readOnly": true
          },
          "upvotes_count": {
            "type": "string",
            "readOnly": true
          },
          "downvotes_count": {
            "type": "string",
            "readOnly": true
          },
          "votes_count": {
            "type": "string",
            "readOnly": true
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sumbit_time": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time it took to fill this form"
          },
          "submitter_referer_address": {
            "type": "string",
            "nullable": true,
            "description": "which website was this request submitted on",
            "maxLength": 2048
          },
          "phone_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneVerificationStateEnum"
              }
            ],
            "description": "shows the status of phone verification field. defualt is not required"
          },
          "email_verification_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailVerificationStateEnum"
              }
            ],
            "description": "shows the status of email verification field. defualt is not required"
          },
          "searchable_data": {
            "type": "object",
            "additionalProperties": {},
            "description": "a cache for the row's searchable data. only contains the field title and display value pair."
          },
          "calculation_score": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "shows the sume of scores for each field in row. it is null if there is not any calculations"
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ],
            "description": "shows status of the row."
          }
        },
        "required": [
          "created_at",
          "data",
          "deleted",
          "downvotes_count",
          "form",
          "id",
          "rendered_data",
          "row_tags",
          "slug",
          "submit_code",
          "tracking_code",
          "updated_at",
          "upvotes_count",
          "user",
          "votes_count"
        ]
      },
      "RowTag": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "category color settings or color code.",
            "maxLength": 63
          }
        },
        "required": [
          "title"
        ]
      },
      "RowVote": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RowVoteTypeEnum"
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          }
        }
      },
      "RowVoteTypeEnum": {
        "enum": [
          "up_vote",
          "down_vote"
        ],
        "type": "string"
      },
      "SMSOTP": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "a unique identifier for working with the object."
          },
          "tried": {
            "type": "integer",
            "maximum": 32767,
            "description": "number of times user send a token to validate the code and uuid.",
            "minimum": 0
          },
          "last_tried_date": {
            "type": "string",
            "format": "date-time",
            "description": "last time of retrying otp."
          }
        },
        "required": [
          "uuid"
        ]
      },
      "ShareAccessOnForm": {
        "type": "object",
        "properties": {
          "profiles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The email or phone number with which the profile(s) have signed up in formaloo."
          },
          "access": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccessEnum"
              }
            ],
            "description": "The access level we want to grant for the profile(s)."
          }
        },
        "required": [
          "access",
          "profiles"
        ]
      },
      "ShareTypeEnum": {
        "enum": [
          "phone_number",
          "email"
        ],
        "type": "string"
      },
      "ShortBusiness": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "business's title.",
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about the business."
          },
          "business_identifier": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "business_identifier",
          "title"
        ]
      },
      "ShowForm": {
        "type": "object",
        "properties": {
          "submit_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submit_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "form_fields": {
            "type": "array",
            "items": {},
            "writeOnly": true,
            "description": "a list of form fields' slug."
          },
          "fields": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "fields_list": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "has_watermark": {
            "type": "boolean",
            "readOnly": true
          },
          "recaptcha_code": {
            "type": "string",
            "readOnly": true
          },
          "logic": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "logic_metadata": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "visit_count": {
            "type": "integer",
            "readOnly": true
          },
          "subdomain": {
            "type": "string",
            "readOnly": true
          },
          "owner_custom_domain": {
            "type": "string",
            "readOnly": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ],
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "show_title": {
            "type": "boolean",
            "description": "title visibility on form."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about form."
          },
          "success_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is successfully submitted."
          },
          "error_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is not successfully submitted."
          },
          "button_text": {
            "type": "string",
            "nullable": true,
            "description": "a text to show on the form's submit button.",
            "maxLength": 63
          },
          "form_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormTypeEnum"
              }
            ],
            "description": "shows the forms type."
          },
          "needs_login": {
            "type": "boolean",
            "description": "whether the users need to login to submit the form."
          },
          "time_limit": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time limit to fill this form"
          },
          "shuffle_fields": {
            "type": "boolean",
            "description": "shows wether to shuffle the ordering of the form field on show."
          },
          "form_redirects_after_submit": {
            "type": "string",
            "nullable": true,
            "description": "Either null or the url of destination.",
            "maxLength": 2000
          },
          "include_data_on_redirect": {
            "type": "boolean",
            "description": "if set true, the submitted data along with aliases will be included in the redirect url."
          },
          "row_update_email_notif": {
            "type": "boolean",
            "description": "receive email notifications when a row is updated."
          },
          "row_update_push_notif": {
            "type": "boolean",
            "description": "receive push notifications when a row is updated."
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "an optional thumbnail for the form"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the logo to be shown on the top of form"
          },
          "logo_slug": {
            "type": "string",
            "nullable": true,
            "description": "the logo's slug.",
            "maxLength": 31
          },
          "logo_url": {
            "type": "string",
            "nullable": true,
            "description": "the logo's url.",
            "maxLength": 900
          },
          "logo_position": {
            "nullable": true,
            "description": "the logo's position.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LogoPositionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's text color.",
            "maxLength": 63
          },
          "button_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's button color.",
            "maxLength": 63
          },
          "theme_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme color.",
            "maxLength": 63
          },
          "field_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's field color.",
            "maxLength": 63
          },
          "background_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's background color.",
            "maxLength": 63
          },
          "border_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's border color.",
            "maxLength": 63
          },
          "submit_text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's submit text color.",
            "maxLength": 63
          },
          "background_image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "background image for this form."
          },
          "background_image_slug": {
            "type": "string",
            "nullable": true,
            "description": "the background image's slug.",
            "maxLength": 31
          },
          "background_image_url": {
            "type": "string",
            "nullable": true,
            "description": "the background image's url.",
            "maxLength": 900
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional theme configuration."
          },
          "custom_js": {
            "type": "string",
            "nullable": true
          },
          "custom_css": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "type": "string",
            "nullable": true,
            "description": "the form's additional configuration.",
            "maxLength": 255
          },
          "show_calculations_score_result": {
            "type": "boolean",
            "description": "to show calculations result after user sumbits a form"
          },
          "show_submit_tracking_code": {
            "type": "boolean",
            "description": "whether to show the tracking code after user has submitted the form."
          },
          "show_answers": {
            "type": "boolean",
            "description": "whether to show the reslts page containing answers and answer sheet after form submit."
          },
          "form_currency_type": {
            "nullable": true,
            "description": "shows the currency of the calculations.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormCurrencyTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": -32768,
            "description": "forms position in relation to other forms."
          },
          "public_stats": {
            "type": "boolean",
            "description": "if set true, form stats will be publicly shared by a link."
          },
          "public_rows": {
            "type": "boolean",
            "description": "if set true, submitted data will be publicly shared by a link."
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "live_dashboard_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional live dashboard configuration, like what we show on dashboard or how we show them."
          },
          "address_is_universal": {
            "type": "boolean",
            "description": "If set true, form's address should be universally unique, and the forms is accessible on the root domain, otherwise, it's only available on the user's domain and subdomain."
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on the form, if they want to show this form on a custom domain (e.g. https://example.co/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "accept_draft_answers": {
            "type": "boolean",
            "description": "users can have draft answers on this form or not."
          },
          "spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet.",
            "maxLength": 255
          },
          "spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet.",
            "maxLength": 255
          },
          "last_submit_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was the last submit on the form?"
          },
          "total_submits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many submits the form has.",
            "minimum": 0
          },
          "total_size": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "format": "int64",
            "description": "shows total size of the form and it's fields' fields in bytes."
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "has_recaptcha": {
            "type": "boolean",
            "description": "defines if show a recaptcha on form or not"
          }
        },
        "required": [
          "created_at",
          "currency",
          "fields",
          "fields_list",
          "has_watermark",
          "logic",
          "logic_metadata",
          "owner_custom_domain",
          "recaptcha_code",
          "subdomain",
          "updated_at",
          "visit_count"
        ]
      },
      "ShowFormSummary": {
        "type": "object",
        "properties": {
          "submit_start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submit_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "has_watermark": {
            "type": "boolean",
            "readOnly": true
          },
          "recaptcha_code": {
            "type": "string",
            "readOnly": true
          },
          "visit_count": {
            "type": "integer",
            "readOnly": true
          },
          "subdomain": {
            "type": "string",
            "readOnly": true
          },
          "owner_custom_domain": {
            "type": "string",
            "readOnly": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ],
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "A unique string to identify form for users. It's auto-generated if not set by user.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "the form's display name.",
            "maxLength": 255
          },
          "show_title": {
            "type": "boolean",
            "description": "title visibility on form."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "a description about form."
          },
          "success_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is successfully submitted."
          },
          "error_message": {
            "type": "string",
            "nullable": true,
            "description": "a messages to show if the form is not successfully submitted."
          },
          "button_text": {
            "type": "string",
            "nullable": true,
            "description": "a text to show on the form's submit button.",
            "maxLength": 63
          },
          "form_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormTypeEnum"
              }
            ],
            "description": "shows the forms type."
          },
          "needs_login": {
            "type": "boolean",
            "description": "whether the users need to login to submit the form."
          },
          "time_limit": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "time limit to fill this form"
          },
          "shuffle_fields": {
            "type": "boolean",
            "description": "shows wether to shuffle the ordering of the form field on show."
          },
          "form_redirects_after_submit": {
            "type": "string",
            "nullable": true,
            "description": "Either null or the url of destination.",
            "maxLength": 2000
          },
          "include_data_on_redirect": {
            "type": "boolean",
            "description": "if set true, the submitted data along with aliases will be included in the redirect url."
          },
          "row_update_email_notif": {
            "type": "boolean",
            "description": "receive email notifications when a row is updated."
          },
          "row_update_push_notif": {
            "type": "boolean",
            "description": "receive push notifications when a row is updated."
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "an optional thumbnail for the form"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "the logo to be shown on the top of form"
          },
          "logo_slug": {
            "type": "string",
            "nullable": true,
            "description": "the logo's slug.",
            "maxLength": 31
          },
          "logo_url": {
            "type": "string",
            "nullable": true,
            "description": "the logo's url.",
            "maxLength": 900
          },
          "logo_position": {
            "nullable": true,
            "description": "the logo's position.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LogoPositionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's text color.",
            "maxLength": 63
          },
          "button_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's button color.",
            "maxLength": 63
          },
          "theme_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's theme color.",
            "maxLength": 63
          },
          "field_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's field color.",
            "maxLength": 63
          },
          "background_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's background color.",
            "maxLength": 63
          },
          "border_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's border color.",
            "maxLength": 63
          },
          "submit_text_color": {
            "type": "string",
            "nullable": true,
            "description": "the form's submit text color.",
            "maxLength": 63
          },
          "background_image": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "background image for this form."
          },
          "background_image_slug": {
            "type": "string",
            "nullable": true,
            "description": "the background image's slug.",
            "maxLength": 31
          },
          "background_image_url": {
            "type": "string",
            "nullable": true,
            "description": "the background image's url.",
            "maxLength": 900
          },
          "theme_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional theme configuration."
          },
          "custom_js": {
            "type": "string",
            "nullable": true
          },
          "custom_css": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "type": "string",
            "nullable": true,
            "description": "the form's additional configuration.",
            "maxLength": 255
          },
          "show_calculations_score_result": {
            "type": "boolean",
            "description": "to show calculations result after user sumbits a form"
          },
          "show_submit_tracking_code": {
            "type": "boolean",
            "description": "whether to show the tracking code after user has submitted the form."
          },
          "show_answers": {
            "type": "boolean",
            "description": "whether to show the reslts page containing answers and answer sheet after form submit."
          },
          "form_currency_type": {
            "nullable": true,
            "description": "shows the currency of the calculations.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormCurrencyTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": -32768,
            "description": "forms position in relation to other forms."
          },
          "public_stats": {
            "type": "boolean",
            "description": "if set true, form stats will be publicly shared by a link."
          },
          "public_rows": {
            "type": "boolean",
            "description": "if set true, submitted data will be publicly shared by a link."
          },
          "live_dashboard_address": {
            "type": "string",
            "nullable": true,
            "description": "a read-only slug with wich the form's submitted data will be shared.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "live_dashboard_config": {
            "type": "object",
            "additionalProperties": {},
            "description": "the form's additional live dashboard configuration, like what we show on dashboard or how we show them."
          },
          "address_is_universal": {
            "type": "boolean",
            "description": "If set true, form's address should be universally unique, and the forms is accessible on the root domain, otherwise, it's only available on the user's domain and subdomain."
          },
          "custom_domain": {
            "type": "string",
            "nullable": true,
            "description": "user can set this on the form, if they want to show this form on a custom domain (e.g. https://example.co/).",
            "pattern": "^(\\w+.)+\\w+$",
            "maxLength": 255
          },
          "accept_draft_answers": {
            "type": "boolean",
            "description": "users can have draft answers on this form or not."
          },
          "spreadsheet_id": {
            "type": "string",
            "nullable": true,
            "description": "id for the corresponding google sheet.",
            "maxLength": 255
          },
          "spreadsheet_url": {
            "type": "string",
            "nullable": true,
            "description": "url for the corresponding google sheet.",
            "maxLength": 255
          },
          "last_submit_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "when was the last submit on the form?"
          },
          "total_submits_count": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "shows how many submits the form has.",
            "minimum": 0
          },
          "total_size": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "format": "int64",
            "description": "shows total size of the form and it's fields' fields in bytes."
          },
          "create_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateTypeEnum"
              }
            ],
            "description": "shows the way that form created."
          },
          "has_recaptcha": {
            "type": "boolean",
            "description": "defines if show a recaptcha on form or not"
          }
        },
        "required": [
          "created_at",
          "currency",
          "fields",
          "has_watermark",
          "owner_custom_domain",
          "recaptcha_code",
          "subdomain",
          "updated_at",
          "visit_count"
        ]
      },
      "SignatureField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "SimpleCategory": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "category color settings or color code.",
            "maxLength": 63
          }
        },
        "required": [
          "title"
        ]
      },
      "SlugEnum": {
        "enum": [
          "free",
          "verified",
          "plus",
          "standard",
          "pro",
          "advance",
          "enterprise"
        ],
        "type": "string"
      },
      "StatsBlock": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1eaEnum"
              }
            ],
            "description": "determines the contents of this block. once set, can't be edited.",
            "readOnly": true
          },
          "form": {
            "type": "string"
          },
          "stats": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationEnum"
              }
            ],
            "description": "determines the location of this block (e.g. in the sidebar, header, footer,...)."
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "color of block",
            "maxLength": 63
          },
          "stats_settings": {
            "type": "object",
            "additionalProperties": {},
            "description": "shows list of available stats and whether they're active on the board."
          }
        },
        "required": [
          "created_at",
          "stats",
          "title",
          "type",
          "updated_at"
        ]
      },
      "StatusEnum": {
        "enum": [
          "draft",
          "submit"
        ],
        "type": "string"
      },
      "TableChart": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type3f2Enum"
              }
            ],
            "description": "determines the type of this report.",
            "readOnly": true
          },
          "primary_form": {
            "type": "string"
          },
          "chart_data": {
            "type": "string",
            "readOnly": true
          },
          "x_field": {
            "type": "string"
          },
          "y_fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the report."
          },
          "chart_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChartTypeEnum"
              }
            ],
            "description": "type of the chart."
          },
          "rows_y_fields": {
            "type": "object",
            "additionalProperties": {},
            "description": "shows list of fields in rows that we use for Y-axis of chart"
          }
        },
        "required": [
          "chart_data",
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "TableChartCreate": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type3f2Enum"
              }
            ],
            "description": "determines the type of this report.",
            "readOnly": true
          },
          "primary_form": {
            "type": "string"
          },
          "chart_data": {
            "type": "string",
            "readOnly": true
          },
          "x_field": {
            "type": "string"
          },
          "y_fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "an optional descrption on the report."
          },
          "chart_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChartTypeEnum"
              }
            ],
            "description": "type of the chart."
          },
          "rows_y_fields": {
            "type": "object",
            "additionalProperties": {},
            "description": "shows list of fields in rows that we use for Y-axis of chart"
          }
        },
        "required": [
          "chart_data",
          "created_at",
          "primary_form",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "TextChoiceField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "choice_items": {
            "type": "object",
            "additionalProperties": {},
            "description": "A list of choice titles and their slugs (for editing the existing choices). (e.g. [{\"title\":\"Existing Option\",\"slug\":\"OPTION_SLUG\", \"image\":\"base64 Image\"},{\"title\":\"New Option\", \"image\":\"base64 Image\"}])"
          },
          "remove_related_form_logic": {
            "type": "boolean",
            "writeOnly": true,
            "default": false,
            "description": "Remove any form logic related to this field's removed choices. (For when you're removing an existing choice from the field)."
          },
          "bulk_choices": {
            "type": "object",
            "additionalProperties": {},
            "writeOnly": true,
            "nullable": true,
            "description": "Use to send a bulk list of choices to add to the field"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "has_other_choice": {
            "type": "boolean",
            "description": "specifies that field has other choice or not."
          },
          "shuffle_choices": {
            "type": "boolean",
            "description": "shows whether to shuffle the ordering of the field choices or not."
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "TextField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "Theme": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "theme_name": {
            "type": "string",
            "description": "the form's theme name.",
            "maxLength": 63
          },
          "text_color": {
            "type": "string",
            "description": "the form's text color.",
            "maxLength": 63
          },
          "button_color": {
            "type": "string",
            "description": "the form's button color.",
            "maxLength": 63
          },
          "field_color": {
            "type": "string",
            "description": "the form's field color.",
            "maxLength": 63
          },
          "background_color": {
            "type": "string",
            "description": "the form's background color.",
            "maxLength": 63
          },
          "border_color": {
            "type": "string",
            "description": "the form's border color.",
            "maxLength": 63
          },
          "submit_text_color": {
            "type": "string",
            "description": "the form's submit text color.",
            "maxLength": 63
          },
          "cover_image": {
            "type": "string",
            "format": "uri",
            "description": "cover image for this theme."
          }
        },
        "required": [
          "background_color",
          "border_color",
          "button_color",
          "cover_image",
          "field_color",
          "submit_text_color",
          "text_color",
          "theme_name"
        ]
      },
      "ThumbnailTypeEnum": {
        "enum": [
          "monster",
          "funny_face",
          "star",
          "heart",
          "outlined",
          "flat_face"
        ],
        "type": "string"
      },
      "TimeField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          },
          "from_time": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "minimum acceptable time"
          },
          "to_time": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "description": "maximum acceptable time"
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "Type1eaEnum": {
        "enum": [
          "generic",
          "menu",
          "stats",
          "form_display",
          "form_result",
          "form_charts",
          "report",
          "kanban"
        ],
        "type": "string"
      },
      "Type3f2Enum": {
        "enum": [
          "generic",
          "combined_fields_chart",
          "table_chart"
        ],
        "type": "string"
      },
      "TypeF04Enum": {
        "enum": [
          "number",
          "money",
          "product",
          "rating",
          "short_text",
          "long_text",
          "regex",
          "website",
          "email",
          "phone",
          "checkbox",
          "yes_no",
          "choice",
          "dropdown",
          "multiple_select",
          "matrix",
          "text_choice",
          "time",
          "date",
          "file",
          "signature",
          "meta",
          "oembed",
          "email_verification",
          "phone_verification",
          "barcode",
          "location",
          "hidden",
          "city",
          "table",
          "lookup",
          "choice_fetch",
          "generic_field"
        ],
        "type": "string"
      },
      "UnRegisterClient": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "user_type": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "user_type",
          "username"
        ]
      },
      "UserShort": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          }
        },
        "required": [
          "id"
        ]
      },
      "UserShortWithCategoryAccess": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "shared_access": {
            "type": "string",
            "readOnly": true
          },
          "category_user": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "category_user",
          "id",
          "shared_access"
        ]
      },
      "VerifyEmailOTP": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "writeOnly": true
          },
          "email_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailOTP"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "code",
          "email_otp"
        ]
      },
      "VerifyPhoneOTP": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "writeOnly": true
          },
          "sms_otp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SMSOTP"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "code",
          "sms_otp"
        ]
      },
      "WebhookSampleData": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 63,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "the call back url to send the data to after the webhook has been triggered.",
            "maxLength": 512
          }
        },
        "required": [
          "url"
        ]
      },
      "WebsiteField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      },
      "YesNoField": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "form": {
            "type": "string",
            "description": "the form to which this field will be added. (form slug)",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeF04Enum"
              }
            ],
            "description": "shows the fields type. once defined, it can't be changed.",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "field title or label to be shown to user. (e.g. \"your contact email\")",
            "maxLength": 255
          },
          "alias": {
            "type": "string",
            "nullable": true,
            "description": "a user-defined slug to identify the field, which is unique form-wide, unless null.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "extra info on the field (if any). (e.g. \"please use the email account you always check.\")"
          },
          "answer_description": {
            "type": "string",
            "nullable": true,
            "description": "any description on this question and it's answers."
          },
          "position": {
            "type": "integer",
            "maximum": 32767,
            "description": "the order of the field on the form. (e.g. 2)",
            "minimum": 0
          },
          "required": {
            "type": "boolean",
            "description": "is the field required?"
          },
          "unique": {
            "type": "boolean",
            "description": "should the submitted value be unique for the form?"
          },
          "admin_only": {
            "type": "boolean",
            "description": "if set true, it will be set as admin only, and end users won't be able to see/submit it."
          },
          "json_key": {
            "type": "string",
            "nullable": true,
            "description": "A string to represent the field value in a json output.",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "is_calculatable": {
            "type": "boolean",
            "description": "is this a calcutable field that have calculations?"
          },
          "calculation_items": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "description": "the field's additional calculations."
          },
          "is_random_sortable": {
            "type": "boolean",
            "description": "if value is True, can randomly sort this field"
          }
        },
        "required": [
          "created_at",
          "slug",
          "type",
          "updated_at"
        ]
      }
    },
    "securitySchemes": {}
  },
  "servers": [
    {
      "url": "https://api.formaloo.net",
      "description": ""
    }
  ],
  "tags": [
    {
      "name": "3.4"
    },
    {
      "name": "Action Type Groups"
    },
    {
      "name": "Action Types"
    },
    {
      "name": "Activities"
    },
    {
      "name": "Businesses"
    },
    {
      "name": "Currencies"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Tags"
    }
  ]
}