{
  "openapi": "3.0.1",
  "info": {
    "title": "Referentials",
    "description": "Object definitions and their corresponding APIs used within the Pennylane API.",
    "contact": {
      "email": "tech@pennylane.tech"
    },
    "version": "1.0.0"
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "node",
      "ruby",
      "php",
      "python",
      "java"
    ],
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  },
  "servers": [
    {
      "url": "https://app.pennylane.com"
    }
  ],
  "tags": [
    {
      "name": "Customers",
      "description": "Create, Read, Update & List your customers"
    },
    {
      "name": "Products",
      "description": "Create, Read, Update & List your products"
    },
    {
      "name": "Categories",
      "description": "Create, Read, Update & List your categories"
    },
    {
      "name": "Plan Items",
      "description": "Create, Update & List your plan items"
    },
    {
      "name": "Enums",
      "description": "List all Pennylane enumerators"
    }
  ],
  "paths": {
    "/api/external/v1/customers": {
      "post": {
        "operationId": "customers-post",
        "summary": "Create a customer",
        "description": "This endpoint allows you to create a customer based on a specific payload. You can even provide your own id.",
        "tags": [
          "Customers"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customer"
                ],
                "type": "object",
                "properties": {
                  "customer": {
                    "anyOf": [
                      {
                        "title": "Company Customer",
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "name",
                              "customer_type",
                              "address",
                              "postal_code",
                              "city",
                              "country_alpha2"
                            ],
                            "properties": {
                              "customer_type": {
                                "type": "string",
                                "description": "Type of the customer. Must be company",
                                "enum": [
                                  "company"
                                ]
                              },
                              "name": {
                                "type": "string",
                                "example": "Pennylane",
                                "description": "Company name"
                              },
                              "reg_no": {
                                "type": "string",
                                "example": "XXXXXXXXX",
                                "description": "Customer registration number (SIREN)"
                              },
                              "address": {
                                "type": "string",
                                "example": "4 rue du faubourg saint martin",
                                "description": "Customer address (billing address)"
                              },
                              "postal_code": {
                                "type": "string",
                                "example": "75010",
                                "description": "Postal code (billing address)"
                              },
                              "city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (billing address)"
                              },
                              "country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (billing address)"
                              },
                              "recipient": {
                                "type": "string",
                                "example": "On the behalf of John",
                                "description": "Recipient displayed in the invoice"
                              },
                              "vat_number": {
                                "type": "string",
                                "example": "12345678901",
                                "description": "Customer's VAT number"
                              }
                            }
                          },
                          {
                            "title": "Common Customer",
                            "type": "object",
                            "properties": {
                              "source_id": {
                                "type": "string",
                                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                                "description": "You can use your own id when creating the customer. If not provided, Pennylane will pick one for you. Id must be unique",
                                "nullable": false
                              },
                              "emails": {
                                "type": "array",
                                "example": [
                                  "hello@example.org"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "billing_iban": {
                                "type": "string",
                                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
                              },
                              "delivery_address": {
                                "type": "string",
                                "example": "33 rue du mail",
                                "description": "Customer address (shipping address)"
                              },
                              "delivery_postal_code": {
                                "type": "string",
                                "example": "75002",
                                "description": "Postal code (shipping address)"
                              },
                              "delivery_city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (shipping address)"
                              },
                              "delivery_country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (shipping address)"
                              },
                              "payment_conditions": {
                                "description": "Customer payment conditions",
                                "type": "string",
                                "enum": [
                                  "upon_receipt",
                                  "custom",
                                  "15_days",
                                  "30_days",
                                  "45_days",
                                  "60_days"
                                ]
                              },
                              "phone": {
                                "type": "string",
                                "example": "+33123232323",
                                "description": "Customer phone number"
                              },
                              "reference": {
                                "type": "string",
                                "example": "This is a custom reference",
                                "description": "This reference doesn't appear on the invoice"
                              },
                              "notes": {
                                "type": "string",
                                "example": "This is a note",
                                "description": "Notes about the customer"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "title": "Individual Customer",
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "first_name",
                              "last_name",
                              "customer_type",
                              "country_alpha2"
                            ],
                            "properties": {
                              "customer_type": {
                                "type": "string",
                                "description": "Type of the customer. Must be individual",
                                "enum": [
                                  "individual"
                                ]
                              },
                              "first_name": {
                                "type": "string",
                                "example": "John",
                                "description": "Customer first name"
                              },
                              "last_name": {
                                "type": "string",
                                "example": "Doe",
                                "description": "Customer last name"
                              },
                              "gender": {
                                "description": "Customer gender",
                                "type": "string",
                                "enum": [
                                  "mister",
                                  "madam"
                                ]
                              },
                              "address": {
                                "type": "string",
                                "example": "4 rue du faubourg saint martin",
                                "description": "Customer address (billing address)"
                              },
                              "postal_code": {
                                "type": "string",
                                "example": "75010",
                                "description": "Postal code (billing address)"
                              },
                              "city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (billing address)"
                              },
                              "country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (billing address)"
                              }
                            }
                          },
                          {
                            "title": "Common Customer",
                            "type": "object",
                            "properties": {
                              "source_id": {
                                "type": "string",
                                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                                "description": "You can use your own id when creating the customer. If not provided, Pennylane will pick one for you. Id must be unique",
                                "nullable": false
                              },
                              "emails": {
                                "type": "array",
                                "example": [
                                  "hello@example.org"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "billing_iban": {
                                "type": "string",
                                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
                              },
                              "delivery_address": {
                                "type": "string",
                                "example": "33 rue du mail",
                                "description": "Customer address (shipping address)"
                              },
                              "delivery_postal_code": {
                                "type": "string",
                                "example": "75002",
                                "description": "Postal code (shipping address)"
                              },
                              "delivery_city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (shipping address)"
                              },
                              "delivery_country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (shipping address)"
                              },
                              "payment_conditions": {
                                "description": "Customer payment conditions",
                                "type": "string",
                                "enum": [
                                  "upon_receipt",
                                  "custom",
                                  "15_days",
                                  "30_days",
                                  "45_days",
                                  "60_days"
                                ]
                              },
                              "phone": {
                                "type": "string",
                                "example": "+33123232323",
                                "description": "Customer phone number"
                              },
                              "reference": {
                                "type": "string",
                                "example": "This is a custom reference",
                                "description": "This reference doesn't appear on the invoice"
                              },
                              "notes": {
                                "type": "string",
                                "example": "This is a note",
                                "description": "Notes about the customer"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer has been created successfully"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "422": {
            "description": "An error occurred during creation",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "customers-get",
        "summary": "List all customers",
        "description": "This endpoint returns a list of customers.",
        "tags": [
          "Customers"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Customers are paginated, this is the current page returned."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalPages": {
                      "type": "integer"
                    },
                    "currentPage": {
                      "type": "integer"
                    },
                    "customers": {
                      "type": "array",
                      "items": {
                        "title": "Customer",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "first_name": {
                                "type": "string",
                                "example": "John",
                                "description": "Customer first name (present only when type is individual)"
                              },
                              "last_name": {
                                "type": "string",
                                "example": "Doe",
                                "description": "Customer last name (present only when type is individual)"
                              },
                              "gender": {
                                "type": "string",
                                "description": "Customer gender (present only when type is individual)",
                                "enum": [
                                  "mister",
                                  "madam"
                                ]
                              },
                              "name": {
                                "type": "string",
                                "example": "Pennylane",
                                "description": "Company name (present only when type is company)"
                              },
                              "reg_no": {
                                "type": "string",
                                "example": "XXXXXXXXX",
                                "description": "Customer registration number (SIREN - present only when type is company)"
                              },
                              "vat_number": {
                                "type": "string",
                                "example": "FR12345678910",
                                "description": "Customer's VAT number"
                              }
                            }
                          },
                          {
                            "title": "Common Customer",
                            "type": "object",
                            "properties": {
                              "updated_at": {
                                "type": "string",
                                "example": "!!str 2021-06-30T07:44:37.545Z",
                                "description": "The last time the customer has been updated"
                              },
                              "source_id": {
                                "type": "string",
                                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                                "description": "Customer identifier (is unique)",
                                "nullable": false
                              },
                              "emails": {
                                "type": "array",
                                "example": [
                                  "hello@example.org"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "billing_iban": {
                                "type": "string",
                                "nullable": true,
                                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
                              },
                              "customer_type": {
                                "description": "Type of the customer (company or individual)",
                                "type": "string",
                                "enum": [
                                  "company",
                                  "individual"
                                ]
                              },
                              "address": {
                                "type": "string",
                                "example": "4 rue du faubourg saint martin",
                                "description": "Customer address (billing address)"
                              },
                              "postal_code": {
                                "type": "string",
                                "example": "75010",
                                "description": "Postal code (billing address)"
                              },
                              "city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (billing address)"
                              },
                              "country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (billing address)"
                              },
                              "delivery_address": {
                                "type": "string",
                                "example": "33 rue du mail"
                              },
                              "delivery_postal_code": {
                                "type": "string",
                                "example": "75002",
                                "description": "Postal code (shipping address)"
                              },
                              "delivery_city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (shipping address)"
                              },
                              "delivery_country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (shipping address)"
                              },
                              "payment_conditions": {
                                "description": "Customer payment conditions",
                                "type": "string",
                                "enum": [
                                  "upon_receipt",
                                  "custom",
                                  "15_days",
                                  "30_days",
                                  "45_days",
                                  "60_days"
                                ]
                              },
                              "phone": {
                                "type": "string",
                                "example": "+33123232323",
                                "description": "Customer phone number"
                              },
                              "reference": {
                                "type": "string",
                                "example": "This is a custom reference",
                                "description": "This reference doesn't appear on the invoice"
                              },
                              "notes": {
                                "type": "string",
                                "example": "This is a note",
                                "description": "Notes about the customer"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "total_customers": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        }
      }
    },
    "/api/external/v1/customers/{id}": {
      "get": {
        "operationId": "customers-id-get",
        "summary": "Retrieve a customer",
        "description": "This endpoint returns a specific customer.",
        "tags": [
          "Customers"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Existing customer identifier (source_id)",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "title": "Customer",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "first_name": {
                              "type": "string",
                              "example": "John",
                              "description": "Customer first name (present only when type is individual)"
                            },
                            "last_name": {
                              "type": "string",
                              "example": "Doe",
                              "description": "Customer last name (present only when type is individual)"
                            },
                            "gender": {
                              "type": "string",
                              "description": "Customer gender (present only when type is individual)",
                              "enum": [
                                "mister",
                                "madam"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "example": "Pennylane",
                              "description": "Company name (present only when type is company)"
                            },
                            "reg_no": {
                              "type": "string",
                              "example": "XXXXXXXXX",
                              "description": "Customer registration number (SIREN - present only when type is company)"
                            },
                            "vat_number": {
                              "type": "string",
                              "example": "FR12345678910",
                              "description": "Customer's VAT number"
                            }
                          }
                        },
                        {
                          "title": "Common Customer",
                          "type": "object",
                          "properties": {
                            "updated_at": {
                              "type": "string",
                              "example": "!!str 2021-06-30T07:44:37.545Z",
                              "description": "The last time the customer has been updated"
                            },
                            "source_id": {
                              "type": "string",
                              "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                              "description": "Customer identifier (is unique)",
                              "nullable": false
                            },
                            "emails": {
                              "type": "array",
                              "example": [
                                "hello@example.org"
                              ],
                              "items": {
                                "type": "string"
                              }
                            },
                            "billing_iban": {
                              "type": "string",
                              "nullable": true,
                              "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                              "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
                            },
                            "customer_type": {
                              "description": "Type of the customer (company or individual)",
                              "type": "string",
                              "enum": [
                                "company",
                                "individual"
                              ]
                            },
                            "address": {
                              "type": "string",
                              "example": "4 rue du faubourg saint martin",
                              "description": "Customer address (billing address)"
                            },
                            "postal_code": {
                              "type": "string",
                              "example": "75010",
                              "description": "Postal code (billing address)"
                            },
                            "city": {
                              "type": "string",
                              "example": "Paris",
                              "description": "City (billing address)"
                            },
                            "country_alpha2": {
                              "type": "string",
                              "example": "FR",
                              "description": "Country alpha code (billing address)"
                            },
                            "delivery_address": {
                              "type": "string",
                              "example": "33 rue du mail"
                            },
                            "delivery_postal_code": {
                              "type": "string",
                              "example": "75002",
                              "description": "Postal code (shipping address)"
                            },
                            "delivery_city": {
                              "type": "string",
                              "example": "Paris",
                              "description": "City (shipping address)"
                            },
                            "delivery_country_alpha2": {
                              "type": "string",
                              "example": "FR",
                              "description": "Country alpha code (shipping address)"
                            },
                            "payment_conditions": {
                              "description": "Customer payment conditions",
                              "type": "string",
                              "enum": [
                                "upon_receipt",
                                "custom",
                                "15_days",
                                "30_days",
                                "45_days",
                                "60_days"
                              ]
                            },
                            "phone": {
                              "type": "string",
                              "example": "+33123232323",
                              "description": "Customer phone number"
                            },
                            "reference": {
                              "type": "string",
                              "example": "This is a custom reference",
                              "description": "This reference doesn't appear on the invoice"
                            },
                            "notes": {
                              "type": "string",
                              "example": "This is a note",
                              "description": "Notes about the customer"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "customers-id-put",
        "summary": "Update a customer",
        "description": "This endpoint updates a specific customer.",
        "tags": [
          "Customers"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Existing customer identifier (source_id)",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customer"
                ],
                "type": "object",
                "properties": {
                  "customer": {
                    "anyOf": [
                      {
                        "title": "Company Customer",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Pennylane",
                                "description": "Company name"
                              },
                              "reg_no": {
                                "type": "string",
                                "example": "XXXXXXXXX",
                                "description": "Customer registration number (SIREN)"
                              },
                              "recipient": {
                                "type": "string",
                                "example": "On the behalf of John",
                                "description": "Invoice Recipient"
                              },
                              "vat_number": {
                                "type": "string",
                                "example": "FR12345678910",
                                "description": "Customer's VAT number"
                              }
                            }
                          },
                          {
                            "title": "Common Customer",
                            "type": "object",
                            "properties": {
                              "updated_at": {
                                "type": "string",
                                "example": "!!str 2021-06-30T07:44:37.545Z",
                                "description": "The last time the customer has been updated"
                              },
                              "source_id": {
                                "type": "string",
                                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                                "description": "Customer identifier (is unique)",
                                "nullable": false
                              },
                              "emails": {
                                "type": "array",
                                "example": [
                                  "hello@example.org"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "billing_iban": {
                                "type": "string",
                                "nullable": true,
                                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
                              },
                              "customer_type": {
                                "description": "Type of the customer (company or individual)",
                                "type": "string",
                                "enum": [
                                  "company",
                                  "individual"
                                ]
                              },
                              "address": {
                                "type": "string",
                                "example": "4 rue du faubourg saint martin",
                                "description": "Customer address (billing address)"
                              },
                              "postal_code": {
                                "type": "string",
                                "example": "75010",
                                "description": "Postal code (billing address)"
                              },
                              "city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (billing address)"
                              },
                              "country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (billing address)"
                              },
                              "delivery_address": {
                                "type": "string",
                                "example": "33 rue du mail"
                              },
                              "delivery_postal_code": {
                                "type": "string",
                                "example": "75002",
                                "description": "Postal code (shipping address)"
                              },
                              "delivery_city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (shipping address)"
                              },
                              "delivery_country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (shipping address)"
                              },
                              "payment_conditions": {
                                "description": "Customer payment conditions",
                                "type": "string",
                                "enum": [
                                  "upon_receipt",
                                  "custom",
                                  "15_days",
                                  "30_days",
                                  "45_days",
                                  "60_days"
                                ]
                              },
                              "phone": {
                                "type": "string",
                                "example": "+33123232323",
                                "description": "Customer phone number"
                              },
                              "reference": {
                                "type": "string",
                                "example": "This is a custom reference",
                                "description": "This reference doesn't appear on the invoice"
                              },
                              "notes": {
                                "type": "string",
                                "example": "This is a note",
                                "description": "Notes about the customer"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "title": "Individual Customer",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "first_name": {
                                "type": "string",
                                "example": "John",
                                "description": "Customer first name"
                              },
                              "last_name": {
                                "type": "string",
                                "example": "Doe",
                                "description": "Customer last name"
                              },
                              "gender": {
                                "description": "Customer gender",
                                "type": "string",
                                "enum": [
                                  "mister",
                                  "madam"
                                ]
                              }
                            }
                          },
                          {
                            "title": "Common Customer",
                            "type": "object",
                            "properties": {
                              "updated_at": {
                                "type": "string",
                                "example": "!!str 2021-06-30T07:44:37.545Z",
                                "description": "The last time the customer has been updated"
                              },
                              "source_id": {
                                "type": "string",
                                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                                "description": "Customer identifier (is unique)",
                                "nullable": false
                              },
                              "emails": {
                                "type": "array",
                                "example": [
                                  "hello@example.org"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "billing_iban": {
                                "type": "string",
                                "nullable": true,
                                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
                              },
                              "customer_type": {
                                "description": "Type of the customer (company or individual)",
                                "type": "string",
                                "enum": [
                                  "company",
                                  "individual"
                                ]
                              },
                              "address": {
                                "type": "string",
                                "example": "4 rue du faubourg saint martin",
                                "description": "Customer address (billing address)"
                              },
                              "postal_code": {
                                "type": "string",
                                "example": "75010",
                                "description": "Postal code (billing address)"
                              },
                              "city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (billing address)"
                              },
                              "country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (billing address)"
                              },
                              "delivery_address": {
                                "type": "string",
                                "example": "33 rue du mail"
                              },
                              "delivery_postal_code": {
                                "type": "string",
                                "example": "75002",
                                "description": "Postal code (shipping address)"
                              },
                              "delivery_city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (shipping address)"
                              },
                              "delivery_country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (shipping address)"
                              },
                              "payment_conditions": {
                                "description": "Customer payment conditions",
                                "type": "string",
                                "enum": [
                                  "upon_receipt",
                                  "custom",
                                  "15_days",
                                  "30_days",
                                  "45_days",
                                  "60_days"
                                ]
                              },
                              "phone": {
                                "type": "string",
                                "example": "+33123232323",
                                "description": "Customer phone number"
                              },
                              "reference": {
                                "type": "string",
                                "example": "This is a custom reference",
                                "description": "This reference doesn't appear on the invoice"
                              },
                              "notes": {
                                "type": "string",
                                "example": "This is a note",
                                "description": "Notes about the customer"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer has been updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "title": "Customer",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "first_name": {
                              "type": "string",
                              "example": "John",
                              "description": "Customer first name (present only when type is individual)"
                            },
                            "last_name": {
                              "type": "string",
                              "example": "Doe",
                              "description": "Customer last name (present only when type is individual)"
                            },
                            "gender": {
                              "type": "string",
                              "description": "Customer gender (present only when type is individual)",
                              "enum": [
                                "mister",
                                "madam"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "example": "Pennylane",
                              "description": "Company name (present only when type is company)"
                            },
                            "reg_no": {
                              "type": "string",
                              "example": "XXXXXXXXX",
                              "description": "Customer registration number (SIREN - present only when type is company)"
                            },
                            "vat_number": {
                              "type": "string",
                              "example": "FR12345678910",
                              "description": "Customer's VAT number"
                            }
                          }
                        },
                        {
                          "title": "Common Customer",
                          "type": "object",
                          "properties": {
                            "updated_at": {
                              "type": "string",
                              "example": "!!str 2021-06-30T07:44:37.545Z",
                              "description": "The last time the customer has been updated"
                            },
                            "source_id": {
                              "type": "string",
                              "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                              "description": "Customer identifier (is unique)",
                              "nullable": false
                            },
                            "emails": {
                              "type": "array",
                              "example": [
                                "hello@example.org"
                              ],
                              "items": {
                                "type": "string"
                              }
                            },
                            "billing_iban": {
                              "type": "string",
                              "nullable": true,
                              "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                              "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
                            },
                            "customer_type": {
                              "description": "Type of the customer (company or individual)",
                              "type": "string",
                              "enum": [
                                "company",
                                "individual"
                              ]
                            },
                            "address": {
                              "type": "string",
                              "example": "4 rue du faubourg saint martin",
                              "description": "Customer address (billing address)"
                            },
                            "postal_code": {
                              "type": "string",
                              "example": "75010",
                              "description": "Postal code (billing address)"
                            },
                            "city": {
                              "type": "string",
                              "example": "Paris",
                              "description": "City (billing address)"
                            },
                            "country_alpha2": {
                              "type": "string",
                              "example": "FR",
                              "description": "Country alpha code (billing address)"
                            },
                            "delivery_address": {
                              "type": "string",
                              "example": "33 rue du mail"
                            },
                            "delivery_postal_code": {
                              "type": "string",
                              "example": "75002",
                              "description": "Postal code (shipping address)"
                            },
                            "delivery_city": {
                              "type": "string",
                              "example": "Paris",
                              "description": "City (shipping address)"
                            },
                            "delivery_country_alpha2": {
                              "type": "string",
                              "example": "FR",
                              "description": "Country alpha code (shipping address)"
                            },
                            "payment_conditions": {
                              "description": "Customer payment conditions",
                              "type": "string",
                              "enum": [
                                "upon_receipt",
                                "custom",
                                "15_days",
                                "30_days",
                                "45_days",
                                "60_days"
                              ]
                            },
                            "phone": {
                              "type": "string",
                              "example": "+33123232323",
                              "description": "Customer phone number"
                            },
                            "reference": {
                              "type": "string",
                              "example": "This is a custom reference",
                              "description": "This reference doesn't appear on the invoice"
                            },
                            "notes": {
                              "type": "string",
                              "example": "This is a note",
                              "description": "Notes about the customer"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          },
          "422": {
            "description": "The customer can't be updated.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/suppliers": {
      "get": {
        "operationId": "suppliers-get",
        "summary": "List all suppliers",
        "description": "This endpoint returns a list of suppliers.",
        "tags": [
          "Suppliers"
        ],
        "security": [
          {
            "oauth2": [
              "supplier_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "suppliers are paginated, this is the current page returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalPages": {
                      "type": "integer"
                    },
                    "currentPage": {
                      "type": "integer"
                    },
                    "suppliers": {
                      "type": "array",
                      "items": {
                        "title": "Supplier",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Pennylane",
                                "description": "Company name (present only when type is company)"
                              },
                              "reg_no": {
                                "type": "string",
                                "example": "XXXXXXXXX",
                                "description": "Supplier registration number (SIREN - present only when type is company)"
                              },
                              "vat_number": {
                                "type": "string",
                                "example": "FR12345678910",
                                "description": "Supplier's VAT number"
                              },
                              "plan_item": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "number": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "enabled": {
                                    "type": "boolean"
                                  },
                                  "vat_rate": {
                                    "type": "string"
                                  },
                                  "country_alpha2": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "number",
                                  "label",
                                  "enabled",
                                  "vat_rate",
                                  "country_alpha2",
                                  "description"
                                ]
                              }
                            }
                          },
                          {
                            "title": "Common supplier",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Pennylane",
                                "description": "Company name"
                              },
                              "updated_at": {
                                "type": "string",
                                "example": "!!str 2021-06-30T07:44:37.545Z",
                                "description": "The last time the supplier has been updated"
                              },
                              "source_id": {
                                "type": "string",
                                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                                "description": "supplier identifier (is unique)",
                                "nullable": false
                              },
                              "emails": {
                                "type": "array",
                                "example": [
                                  "hello@example.org"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "billing_iban": {
                                "type": "string",
                                "nullable": true,
                                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                                "description": "The billing IBAN of the supplier. This is the iban on which you wish to receive payment from this supplier."
                              },
                              "address": {
                                "type": "string",
                                "example": "4 rue du faubourg saint martin",
                                "description": "supplier address (billing address)"
                              },
                              "postal_code": {
                                "type": "string",
                                "example": "75010",
                                "description": "Postal code (billing address)"
                              },
                              "city": {
                                "type": "string",
                                "example": "Paris",
                                "description": "City (billing address)"
                              },
                              "country_alpha2": {
                                "type": "string",
                                "example": "FR",
                                "description": "Country alpha code (billing address)"
                              },
                              "payment_conditions": {
                                "description": "supplier payment conditions",
                                "type": "string",
                                "enum": [
                                  "upon_receipt",
                                  "custom",
                                  "15_days",
                                  "30_days",
                                  "45_days",
                                  "60_days"
                                ]
                              },
                              "phone": {
                                "type": "string",
                                "example": "+33123232323",
                                "description": "supplier phone number"
                              },
                              "reference": {
                                "type": "string",
                                "example": "This is a custom reference",
                                "description": "This reference doesn't appear on the invoice"
                              },
                              "notes": {
                                "type": "string",
                                "example": "This is a note",
                                "description": "Notes about the supplier"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "total_suppliers": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access token is missing or invalid"
          }
        }
      },
      "post": {
        "operationId": "suppliers-post",
        "summary": "Create a supplier",
        "description": "This endpoint allows you to create a supplier based on a specific payload. You can even provide your own id.",
        "tags": [
          "Suppliers"
        ],
        "security": [
          {
            "oauth2": [
              "supplier_invoices"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "supplier"
                ],
                "type": "object",
                "properties": {
                  "supplier": {
                    "title": "Company Supplier",
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "address",
                          "postal_code",
                          "city",
                          "country_alpha2"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Pennylane",
                            "description": "Company name"
                          },
                          "reg_no": {
                            "type": "string",
                            "example": "XXXXXXXXX",
                            "description": "Supplier registration number (SIREN)"
                          },
                          "address": {
                            "type": "string",
                            "example": "4 rue du faubourg saint martin",
                            "description": "Supplier address (billing address)"
                          },
                          "postal_code": {
                            "type": "string",
                            "example": "75010",
                            "description": "Postal code (billing address)"
                          },
                          "city": {
                            "type": "string",
                            "example": "Paris",
                            "description": "City (billing address)"
                          },
                          "country_alpha2": {
                            "type": "string",
                            "example": "FR",
                            "description": "Country alpha code (billing address)"
                          },
                          "recipient": {
                            "type": "string",
                            "example": "On the behalf of John",
                            "description": "Recipient displayed in the invoice"
                          },
                          "vat_number": {
                            "type": "string",
                            "example": "12345678901",
                            "description": "Suppliers's VAT number"
                          }
                        }
                      },
                      {
                        "title": "Common Supplier",
                        "type": "object",
                        "properties": {
                          "source_id": {
                            "type": "string",
                            "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                            "description": "You can use your own id when creating the supplier. If not provided, Pennylane will pick one for you. Id must be unique",
                            "nullable": false
                          },
                          "emails": {
                            "type": "array",
                            "example": [
                              "hello@example.org"
                            ],
                            "items": {
                              "type": "string"
                            }
                          },
                          "iban": {
                            "type": "string",
                            "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                            "description": "The IBAN of the supplier"
                          },
                          "payment_conditions": {
                            "description": "Supplier payment conditions",
                            "type": "string",
                            "enum": [
                              "upon_receipt",
                              "custom",
                              "15_days",
                              "30_days",
                              "45_days",
                              "60_days"
                            ]
                          },
                          "phone": {
                            "type": "string",
                            "example": "+33123232323",
                            "description": "Supplier phone number"
                          },
                          "reference": {
                            "type": "string",
                            "example": "This is a custom reference",
                            "description": "This reference doesn't appear on the invoice"
                          },
                          "notes": {
                            "type": "string",
                            "example": "This is a note",
                            "description": "Notes about the supplier"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Supplier has been created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Supplier",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Pennylane",
                          "description": "Company name (present only when type is company)"
                        },
                        "reg_no": {
                          "type": "string",
                          "example": "XXXXXXXXX",
                          "description": "Supplier registration number (SIREN - present only when type is company)"
                        },
                        "vat_number": {
                          "type": "string",
                          "example": "FR12345678910",
                          "description": "Supplier's VAT number"
                        },
                        "plan_item": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "number": {
                              "type": "string"
                            },
                            "label": {
                              "type": "string"
                            },
                            "enabled": {
                              "type": "boolean"
                            },
                            "vat_rate": {
                              "type": "string"
                            },
                            "country_alpha2": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "number",
                            "label",
                            "enabled",
                            "vat_rate",
                            "country_alpha2",
                            "description"
                          ]
                        }
                      }
                    },
                    {
                      "title": "Common supplier",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Pennylane",
                          "description": "Company name"
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "!!str 2021-06-30T07:44:37.545Z",
                          "description": "The last time the supplier has been updated"
                        },
                        "source_id": {
                          "type": "string",
                          "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                          "description": "supplier identifier (is unique)",
                          "nullable": false
                        },
                        "emails": {
                          "type": "array",
                          "example": [
                            "hello@example.org"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "billing_iban": {
                          "type": "string",
                          "nullable": true,
                          "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                          "description": "The billing IBAN of the supplier. This is the iban on which you wish to receive payment from this supplier."
                        },
                        "address": {
                          "type": "string",
                          "example": "4 rue du faubourg saint martin",
                          "description": "supplier address (billing address)"
                        },
                        "postal_code": {
                          "type": "string",
                          "example": "75010",
                          "description": "Postal code (billing address)"
                        },
                        "city": {
                          "type": "string",
                          "example": "Paris",
                          "description": "City (billing address)"
                        },
                        "country_alpha2": {
                          "type": "string",
                          "example": "FR",
                          "description": "Country alpha code (billing address)"
                        },
                        "payment_conditions": {
                          "description": "supplier payment conditions",
                          "type": "string",
                          "enum": [
                            "upon_receipt",
                            "custom",
                            "15_days",
                            "30_days",
                            "45_days",
                            "60_days"
                          ]
                        },
                        "phone": {
                          "type": "string",
                          "example": "+33123232323",
                          "description": "supplier phone number"
                        },
                        "reference": {
                          "type": "string",
                          "example": "This is a custom reference",
                          "description": "This reference doesn't appear on the invoice"
                        },
                        "notes": {
                          "type": "string",
                          "example": "This is a note",
                          "description": "Notes about the supplier"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "422": {
            "description": "An error occurred during creation",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/suppliers/{id}": {
      "get": {
        "operationId": "suppliers-id-get",
        "summary": "Retrieve a supplier",
        "description": "This endpoint returns a specific supplier.",
        "tags": [
          "Suppliers"
        ],
        "security": [
          {
            "oauth2": [
              "suppliers_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Existing supplier identifier (source_id)",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "supplier": {
                      "title": "Supplier",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Pennylane",
                              "description": "Company name (present only when type is company)"
                            },
                            "reg_no": {
                              "type": "string",
                              "example": "XXXXXXXXX",
                              "description": "Supplier registration number (SIREN - present only when type is company)"
                            },
                            "vat_number": {
                              "type": "string",
                              "example": "FR12345678910",
                              "description": "Supplier's VAT number"
                            },
                            "plan_item": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "number": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "enabled": {
                                  "type": "boolean"
                                },
                                "vat_rate": {
                                  "type": "string"
                                },
                                "country_alpha2": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "number",
                                "label",
                                "enabled",
                                "vat_rate",
                                "country_alpha2",
                                "description"
                              ]
                            }
                          }
                        },
                        {
                          "title": "Common supplier",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Pennylane",
                              "description": "Company name"
                            },
                            "updated_at": {
                              "type": "string",
                              "example": "!!str 2021-06-30T07:44:37.545Z",
                              "description": "The last time the supplier has been updated"
                            },
                            "source_id": {
                              "type": "string",
                              "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                              "description": "supplier identifier (is unique)",
                              "nullable": false
                            },
                            "emails": {
                              "type": "array",
                              "example": [
                                "hello@example.org"
                              ],
                              "items": {
                                "type": "string"
                              }
                            },
                            "billing_iban": {
                              "type": "string",
                              "nullable": true,
                              "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                              "description": "The billing IBAN of the supplier. This is the iban on which you wish to receive payment from this supplier."
                            },
                            "address": {
                              "type": "string",
                              "example": "4 rue du faubourg saint martin",
                              "description": "supplier address (billing address)"
                            },
                            "postal_code": {
                              "type": "string",
                              "example": "75010",
                              "description": "Postal code (billing address)"
                            },
                            "city": {
                              "type": "string",
                              "example": "Paris",
                              "description": "City (billing address)"
                            },
                            "country_alpha2": {
                              "type": "string",
                              "example": "FR",
                              "description": "Country alpha code (billing address)"
                            },
                            "payment_conditions": {
                              "description": "supplier payment conditions",
                              "type": "string",
                              "enum": [
                                "upon_receipt",
                                "custom",
                                "15_days",
                                "30_days",
                                "45_days",
                                "60_days"
                              ]
                            },
                            "phone": {
                              "type": "string",
                              "example": "+33123232323",
                              "description": "supplier phone number"
                            },
                            "reference": {
                              "type": "string",
                              "example": "This is a custom reference",
                              "description": "This reference doesn't appear on the invoice"
                            },
                            "notes": {
                              "type": "string",
                              "example": "This is a note",
                              "description": "Notes about the supplier"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "Supplier not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "suppliers-id-put",
        "summary": "Update a supplier",
        "description": "This endpoint updates a specific supplier",
        "tags": [
          "Suppliers"
        ],
        "security": [
          {
            "oauth2": [
              "supplier_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Existing supplier identifier (source_id)",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "supplier"
                ],
                "type": "object",
                "properties": {
                  "supplier": {
                    "title": "Company Supplier",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Pennylane",
                            "description": "Company name"
                          },
                          "reg_no": {
                            "type": "string",
                            "example": "XXXXXXXXX",
                            "description": "Supplier registration number (SIREN)"
                          },
                          "recipient": {
                            "type": "string",
                            "example": "On the behalf of John",
                            "description": "Invoice Recipient"
                          },
                          "vat_number": {
                            "type": "string",
                            "example": "FR12345678910",
                            "description": "Supplier's VAT number"
                          }
                        }
                      },
                      {
                        "title": "Common supplier",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Pennylane",
                            "description": "Company name"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "!!str 2021-06-30T07:44:37.545Z",
                            "description": "The last time the supplier has been updated"
                          },
                          "source_id": {
                            "type": "string",
                            "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                            "description": "supplier identifier (is unique)",
                            "nullable": false
                          },
                          "emails": {
                            "type": "array",
                            "example": [
                              "hello@example.org"
                            ],
                            "items": {
                              "type": "string"
                            }
                          },
                          "billing_iban": {
                            "type": "string",
                            "nullable": true,
                            "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                            "description": "The billing IBAN of the supplier. This is the iban on which you wish to receive payment from this supplier."
                          },
                          "address": {
                            "type": "string",
                            "example": "4 rue du faubourg saint martin",
                            "description": "supplier address (billing address)"
                          },
                          "postal_code": {
                            "type": "string",
                            "example": "75010",
                            "description": "Postal code (billing address)"
                          },
                          "city": {
                            "type": "string",
                            "example": "Paris",
                            "description": "City (billing address)"
                          },
                          "country_alpha2": {
                            "type": "string",
                            "example": "FR",
                            "description": "Country alpha code (billing address)"
                          },
                          "payment_conditions": {
                            "description": "supplier payment conditions",
                            "type": "string",
                            "enum": [
                              "upon_receipt",
                              "custom",
                              "15_days",
                              "30_days",
                              "45_days",
                              "60_days"
                            ]
                          },
                          "phone": {
                            "type": "string",
                            "example": "+33123232323",
                            "description": "supplier phone number"
                          },
                          "reference": {
                            "type": "string",
                            "example": "This is a custom reference",
                            "description": "This reference doesn't appear on the invoice"
                          },
                          "notes": {
                            "type": "string",
                            "example": "This is a note",
                            "description": "Notes about the supplier"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Supplier has been updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "supplier": {
                      "title": "Supplier",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Pennylane",
                              "description": "Company name (present only when type is company)"
                            },
                            "reg_no": {
                              "type": "string",
                              "example": "XXXXXXXXX",
                              "description": "Supplier registration number (SIREN - present only when type is company)"
                            },
                            "vat_number": {
                              "type": "string",
                              "example": "FR12345678910",
                              "description": "Supplier's VAT number"
                            },
                            "plan_item": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "number": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "enabled": {
                                  "type": "boolean"
                                },
                                "vat_rate": {
                                  "type": "string"
                                },
                                "country_alpha2": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "number",
                                "label",
                                "enabled",
                                "vat_rate",
                                "country_alpha2",
                                "description"
                              ]
                            }
                          }
                        },
                        {
                          "title": "Common supplier",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Pennylane",
                              "description": "Company name"
                            },
                            "updated_at": {
                              "type": "string",
                              "example": "!!str 2021-06-30T07:44:37.545Z",
                              "description": "The last time the supplier has been updated"
                            },
                            "source_id": {
                              "type": "string",
                              "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                              "description": "supplier identifier (is unique)",
                              "nullable": false
                            },
                            "emails": {
                              "type": "array",
                              "example": [
                                "hello@example.org"
                              ],
                              "items": {
                                "type": "string"
                              }
                            },
                            "billing_iban": {
                              "type": "string",
                              "nullable": true,
                              "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                              "description": "The billing IBAN of the supplier. This is the iban on which you wish to receive payment from this supplier."
                            },
                            "address": {
                              "type": "string",
                              "example": "4 rue du faubourg saint martin",
                              "description": "supplier address (billing address)"
                            },
                            "postal_code": {
                              "type": "string",
                              "example": "75010",
                              "description": "Postal code (billing address)"
                            },
                            "city": {
                              "type": "string",
                              "example": "Paris",
                              "description": "City (billing address)"
                            },
                            "country_alpha2": {
                              "type": "string",
                              "example": "FR",
                              "description": "Country alpha code (billing address)"
                            },
                            "payment_conditions": {
                              "description": "supplier payment conditions",
                              "type": "string",
                              "enum": [
                                "upon_receipt",
                                "custom",
                                "15_days",
                                "30_days",
                                "45_days",
                                "60_days"
                              ]
                            },
                            "phone": {
                              "type": "string",
                              "example": "+33123232323",
                              "description": "supplier phone number"
                            },
                            "reference": {
                              "type": "string",
                              "example": "This is a custom reference",
                              "description": "This reference doesn't appear on the invoice"
                            },
                            "notes": {
                              "type": "string",
                              "example": "This is a note",
                              "description": "Notes about the supplier"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "Supplier not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          },
          "422": {
            "description": "The supplier can't be updated.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/categories": {
      "get": {
        "operationId": "tags-get",
        "summary": "List all categories",
        "description": "This endpoint returns a list of categories.",
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "oauth2": [
              "accounting"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Categories are paginated, this is the current page returned."
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "example": 50
            },
            "description": "Categories are paginated. By default, you get 20 by page. You can specify another number of categories by page."
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string",
              "example": "+date,-debit"
            },
            "description": "Categories are sorted by descending id, by default. Use the attribute names separated by commas.\n\nSortable attributes are the following only: id, group_id, label, direction\n"
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "example": "[{\"field\": \"label\", \"operator\": \"eq\", \"value\": \"Alimentaire\"}]"
            },
            "description": "You can choose to filter categories on a specific attributes (id, group_id, label, etc).\n\nFor instance, you can select the categories that have the `direction` `cash_out` by using the following filter: `[{\"field\": \"direction\", \"operator\": \"eq\", \"value\": \"cash_out\"}]`.\n\nFilterable attributes are the following only: `id`, `group_id`, `label` and `direction`.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_pages": {
                      "type": "integer",
                      "example": 1
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 20
                    },
                    "total_categories": {
                      "type": "integer",
                      "example": 42
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "source_id": {
                            "type": "string",
                            "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                            "description": "Category identifier (is unique)",
                            "nullable": false
                          },
                          "group_source_id": {
                            "type": "string",
                            "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
                            "description": "Group identifier (is unique)",
                            "nullable": false
                          },
                          "group_label": {
                            "type": "string",
                            "example": "Category Group Label",
                            "description": "Category group name",
                            "nullable": false
                          },
                          "label": {
                            "type": "string",
                            "example": "Alimentaire",
                            "description": "Category name (is unique per group of categories)",
                            "nullable": false
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "cash_in",
                              "cash_out"
                            ],
                            "nullable": true
                          },
                          "is_editable": {
                            "type": "boolean"
                          },
                          "created_at": {
                            "type": "string",
                            "nullable": false,
                            "description": "Category created date",
                            "example": "2022-10-26T09:58:12.146343Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "nullable": false,
                            "description": "Category created date",
                            "example": "2022-10-26T09:58:12.146343Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        }
      },
      "post": {
        "operationId": "tags-post",
        "summary": "Create a new category",
        "description": "This endpoint returns the created category.",
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "oauth2": [
              "accounting"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "category"
                ],
                "properties": {
                  "category": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "source_id": {
                            "type": "string",
                            "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                            "description": "Category identifier (is unique)",
                            "nullable": false
                          },
                          "group_source_id": {
                            "type": "string",
                            "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
                            "description": "Group identifier (is unique)",
                            "nullable": false
                          },
                          "group_label": {
                            "type": "string",
                            "example": "Category Group Label",
                            "description": "Category group name",
                            "nullable": false
                          },
                          "label": {
                            "type": "string",
                            "example": "Alimentaire",
                            "description": "Category name (is unique per group of categories)",
                            "nullable": false
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "cash_in",
                              "cash_out"
                            ],
                            "nullable": true
                          },
                          "is_editable": {
                            "type": "boolean"
                          },
                          "created_at": {
                            "type": "string",
                            "nullable": false,
                            "description": "Category created date",
                            "example": "2022-10-26T09:58:12.146343Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "nullable": false,
                            "description": "Category created date",
                            "example": "2022-10-26T09:58:12.146343Z"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "group_source_id": {
                            "type": "string",
                            "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
                            "description": "Group identifier (is unique)",
                            "nullable": false
                          }
                        },
                        "required": [
                          "group_source_id"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the created category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "source_id": {
                          "type": "string",
                          "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                          "description": "Category identifier (is unique)",
                          "nullable": false
                        },
                        "group_source_id": {
                          "type": "string",
                          "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
                          "description": "Group identifier (is unique)",
                          "nullable": false
                        },
                        "group_label": {
                          "type": "string",
                          "example": "Category Group Label",
                          "description": "Category group name",
                          "nullable": false
                        },
                        "label": {
                          "type": "string",
                          "example": "Alimentaire",
                          "description": "Category name (is unique per group of categories)",
                          "nullable": false
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "cash_in",
                            "cash_out"
                          ],
                          "nullable": true
                        },
                        "is_editable": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string",
                          "nullable": false,
                          "description": "Category created date",
                          "example": "2022-10-26T09:58:12.146343Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "nullable": false,
                          "description": "Category created date",
                          "example": "2022-10-26T09:58:12.146343Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        }
      }
    },
    "/api/external/v1/categories/{id}": {
      "get": {
        "operationId": "tag-id-get",
        "summary": "Retrieve a category",
        "description": "This endpoint returns a specific category.",
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "oauth2": [
              "accounting"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Existing category identifier (source_id)",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "source_id": {
                          "type": "string",
                          "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                          "description": "Category identifier (is unique)",
                          "nullable": false
                        },
                        "group_source_id": {
                          "type": "string",
                          "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
                          "description": "Group identifier (is unique)",
                          "nullable": false
                        },
                        "group_label": {
                          "type": "string",
                          "example": "Category Group Label",
                          "description": "Category group name",
                          "nullable": false
                        },
                        "label": {
                          "type": "string",
                          "example": "Alimentaire",
                          "description": "Category name (is unique per group of categories)",
                          "nullable": false
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "cash_in",
                            "cash_out"
                          ],
                          "nullable": true
                        },
                        "is_editable": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string",
                          "nullable": false,
                          "description": "Category created date",
                          "example": "2022-10-26T09:58:12.146343Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "nullable": false,
                          "description": "Category created date",
                          "example": "2022-10-26T09:58:12.146343Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "category not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "tags-put",
        "summary": "Update a category",
        "description": "This endpoint returns the updated category.",
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "oauth2": [
              "accounting"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Existing category identifier (source_id)",
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "category": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "source_id": {
                        "type": "string",
                        "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                        "description": "Category identifier (is unique)",
                        "nullable": false
                      },
                      "group_source_id": {
                        "type": "string",
                        "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
                        "description": "Group identifier (is unique)",
                        "nullable": false
                      },
                      "group_label": {
                        "type": "string",
                        "example": "Category Group Label",
                        "description": "Category group name",
                        "nullable": false
                      },
                      "label": {
                        "type": "string",
                        "example": "Alimentaire",
                        "description": "Category name (is unique per group of categories)",
                        "nullable": false
                      },
                      "direction": {
                        "type": "string",
                        "enum": [
                          "cash_in",
                          "cash_out"
                        ],
                        "nullable": true
                      },
                      "is_editable": {
                        "type": "boolean"
                      },
                      "created_at": {
                        "type": "string",
                        "nullable": false,
                        "description": "Category created date",
                        "example": "2022-10-26T09:58:12.146343Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "nullable": false,
                        "description": "Category created date",
                        "example": "2022-10-26T09:58:12.146343Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "source_id": {
                          "type": "string",
                          "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                          "description": "Category identifier (is unique)",
                          "nullable": false
                        },
                        "group_source_id": {
                          "type": "string",
                          "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
                          "description": "Group identifier (is unique)",
                          "nullable": false
                        },
                        "group_label": {
                          "type": "string",
                          "example": "Category Group Label",
                          "description": "Category group name",
                          "nullable": false
                        },
                        "label": {
                          "type": "string",
                          "example": "Alimentaire",
                          "description": "Category name (is unique per group of categories)",
                          "nullable": false
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "cash_in",
                            "cash_out"
                          ],
                          "nullable": true
                        },
                        "is_editable": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string",
                          "nullable": false,
                          "description": "Category created date",
                          "example": "2022-10-26T09:58:12.146343Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "nullable": false,
                          "description": "Category created date",
                          "example": "2022-10-26T09:58:12.146343Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/category_groups": {
      "get": {
        "operationId": "tag-groups-get",
        "summary": "List all category groups",
        "description": "This endpoint returns a list of category groups",
        "tags": [
          "CategoryGroups"
        ],
        "security": [
          {
            "oauth2": [
              "accounting"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "suppliers are paginated, this is the current page returned."
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "example": 50
            },
            "description": "Category groups are paginated. By default, you get 20 by page. You can specify another number of category groups by page."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_pages": {
                      "type": "integer"
                    },
                    "current_page": {
                      "type": "integer"
                    },
                    "total_category_groups": {
                      "type": "integer"
                    },
                    "category_groups": {
                      "type": "array",
                      "items": {
                        "title": "CategoryGroup",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "label": {
                            "type": "string"
                          },
                          "default_tag_id": {
                            "type": "integer",
                            "nullable": true
                          },
                          "qonto_id": {
                            "type": "integer",
                            "nullable": true
                          },
                          "icon": {
                            "type": "string"
                          },
                          "categories": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "source_id": {
                                  "type": "string",
                                  "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                                  "description": "Category identifier (is unique)",
                                  "nullable": false
                                },
                                "group_source_id": {
                                  "type": "string",
                                  "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
                                  "description": "Group identifier (is unique)",
                                  "nullable": false
                                },
                                "group_label": {
                                  "type": "string",
                                  "example": "Category Group Label",
                                  "description": "Category group name",
                                  "nullable": false
                                },
                                "label": {
                                  "type": "string",
                                  "example": "Alimentaire",
                                  "description": "Category name (is unique per group of categories)",
                                  "nullable": false
                                },
                                "direction": {
                                  "type": "string",
                                  "enum": [
                                    "cash_in",
                                    "cash_out"
                                  ],
                                  "nullable": true
                                },
                                "is_editable": {
                                  "type": "boolean"
                                },
                                "created_at": {
                                  "type": "string",
                                  "nullable": false,
                                  "description": "Category created date",
                                  "example": "2022-10-26T09:58:12.146343Z"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "nullable": false,
                                  "description": "Category created date",
                                  "example": "2022-10-26T09:58:12.146343Z"
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "id",
                          "label",
                          "default_tag_id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access token is missing or invalid"
          }
        }
      }
    },
    "/api/external/v1/products": {
      "post": {
        "operationId": "products-post",
        "summary": "Create a product",
        "description": "This endpoint allows you to create a product based on a specific payload. You can even provide your own id.",
        "tags": [
          "Products"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "product"
                ],
                "type": "object",
                "properties": {
                  "product": {
                    "title": "Product",
                    "type": "object",
                    "required": [
                      "label",
                      "unit",
                      "price",
                      "vat_rate",
                      "currency"
                    ],
                    "properties": {
                      "source_id": {
                        "type": "string",
                        "description": "You can use your own id when creating the product. If not provided, Pennylane will pick one for you. Id must be unique",
                        "example": "0e67fc3c-c632-4feb-ad34-e18ed5fbf66a"
                      },
                      "label": {
                        "type": "string",
                        "description": "Product label",
                        "example": "Pack 1"
                      },
                      "description": {
                        "type": "string",
                        "description": "Product description",
                        "example": "This is the package level 1"
                      },
                      "unit": {
                        "type": "string",
                        "description": "Product unit",
                        "example": "piece"
                      },
                      "price_before_tax": {
                        "type": "number",
                        "description": "Product price before taxes",
                        "example": 10
                      },
                      "price": {
                        "type": "number",
                        "description": "Product price including taxes",
                        "example": 12
                      },
                      "vat_rate": {
                        "description": "Product VAT rate. A 20% VAT in France is FR_200.",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                          "FR_09",
                          "FR_21",
                          "FR_55",
                          "FR_85",
                          "FR_100",
                          "FR_130",
                          "FR_200",
                          "AT_100",
                          "AT_130",
                          "AT_200",
                          "BE_60",
                          "BE_120",
                          "BE_210",
                          "BG_90",
                          "BG_200",
                          "CH_25",
                          "CH_37",
                          "CH_77",
                          "CY_50",
                          "CY_90",
                          "CY_190",
                          "CZ_100",
                          "CZ_150",
                          "CZ_210",
                          "DE_70",
                          "DE_190",
                          "DK_250",
                          "EE_90",
                          "EE_200",
                          "ES_40",
                          "ES_100",
                          "ES_210",
                          "FI_100",
                          "FI_140",
                          "FI_240",
                          "GB_50",
                          "GB_200",
                          "GR_60",
                          "GR_130",
                          "GR_240",
                          "HR_50",
                          "HR_130",
                          "HR_250",
                          "HU_50",
                          "HU_180",
                          "HU_270",
                          "IE_48",
                          "IE_90",
                          "IE_135",
                          "IE_210",
                          "IE_230",
                          "IT_40",
                          "IT_50",
                          "IT_100",
                          "IT_220",
                          "LT_50",
                          "LT_90",
                          "LT_210",
                          "LU_30",
                          "LU_70",
                          "LU_80",
                          "LU_130",
                          "LU_140",
                          "LU_160",
                          "LU_170",
                          "LV_50",
                          "LV_120",
                          "LV_210",
                          "MC_09",
                          "MC_21",
                          "MC_55",
                          "MC_85",
                          "MC_100",
                          "MC_200",
                          "MT_50",
                          "MT_70",
                          "MT_180",
                          "NL_90",
                          "NL_210",
                          "PL_50",
                          "PL_80",
                          "PL_230",
                          "PT_60",
                          "PT_130",
                          "PT_230",
                          "RO_50",
                          "RO_90",
                          "RO_190",
                          "SE_60",
                          "SE_120",
                          "SE_250",
                          "SI_50",
                          "SI_95",
                          "SI_220",
                          "SK_100",
                          "SK_200",
                          "exempt",
                          "crossborder",
                          "extracom",
                          "FR_100_construction",
                          "FR_200_construction"
                        ]
                      },
                      "currency": {
                        "type": "string",
                        "description": "Product currency",
                        "example": "EUR"
                      },
                      "reference": {
                        "nullable": true,
                        "type": "string",
                        "description": "Product reference",
                        "example": "REF-453"
                      },
                      "substance": {
                        "nullable": true,
                        "description": "Product substance. Can be services or goods.",
                        "type": "string",
                        "enum": [
                          "goods",
                          "services"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product has been created successfully"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "422": {
            "description": "An error occurred during creation",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "products-get",
        "summary": "List all products",
        "description": "This endpoint returns a list of products.",
        "tags": [
          "Products"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Products are paginated, this is the current page returned."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalPages": {
                      "type": "integer"
                    },
                    "currentPage": {
                      "type": "integer"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "title": "Product",
                        "type": "object",
                        "properties": {
                          "source_id": {
                            "type": "string",
                            "description": "Product identifier (is unique)",
                            "example": "0e67fc3c-c632-4feb-ad34-e18ed5fbf66a"
                          },
                          "label": {
                            "type": "string",
                            "description": "Product label",
                            "example": "Pack 1"
                          },
                          "description": {
                            "type": "string",
                            "description": "Product description",
                            "example": "This is the package level 1"
                          },
                          "unit": {
                            "type": "string",
                            "description": "The kind of unit which applies to the amount\n",
                            "example": "piece"
                          },
                          "price": {
                            "type": "number",
                            "description": "Product price including taxes",
                            "example": 12
                          },
                          "vat_rate": {
                            "description": "Product VAT rate. A 20% VAT in France is FR_200.",
                            "type": "string",
                            "enum": [
                              "FR_09",
                              "FR_21",
                              "FR_55",
                              "FR_85",
                              "FR_100",
                              "FR_130",
                              "FR_200",
                              "AT_100",
                              "AT_130",
                              "AT_200",
                              "BE_60",
                              "BE_120",
                              "BE_210",
                              "BG_90",
                              "BG_200",
                              "CH_25",
                              "CH_37",
                              "CH_77",
                              "CY_50",
                              "CY_90",
                              "CY_190",
                              "CZ_100",
                              "CZ_150",
                              "CZ_210",
                              "DE_70",
                              "DE_190",
                              "DK_250",
                              "EE_90",
                              "EE_200",
                              "ES_40",
                              "ES_100",
                              "ES_210",
                              "FI_100",
                              "FI_140",
                              "FI_240",
                              "GB_50",
                              "GB_200",
                              "GR_60",
                              "GR_130",
                              "GR_240",
                              "HR_50",
                              "HR_130",
                              "HR_250",
                              "HU_50",
                              "HU_180",
                              "HU_270",
                              "IE_48",
                              "IE_90",
                              "IE_135",
                              "IE_210",
                              "IE_230",
                              "IT_40",
                              "IT_50",
                              "IT_100",
                              "IT_220",
                              "LT_50",
                              "LT_90",
                              "LT_210",
                              "LU_30",
                              "LU_70",
                              "LU_80",
                              "LU_130",
                              "LU_140",
                              "LU_160",
                              "LU_170",
                              "LV_50",
                              "LV_120",
                              "LV_210",
                              "MC_09",
                              "MC_21",
                              "MC_55",
                              "MC_85",
                              "MC_100",
                              "MC_200",
                              "MT_50",
                              "MT_70",
                              "MT_180",
                              "NL_90",
                              "NL_210",
                              "PL_50",
                              "PL_80",
                              "PL_230",
                              "PT_60",
                              "PT_130",
                              "PT_230",
                              "RO_50",
                              "RO_90",
                              "RO_190",
                              "SE_60",
                              "SE_120",
                              "SE_250",
                              "SI_50",
                              "SI_95",
                              "SI_220",
                              "SK_100",
                              "SK_200",
                              "exempt",
                              "crossborder",
                              "extracom",
                              "FR_100_construction",
                              "FR_200_construction"
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "description": "Product currency (ISO 4217). Default is EUR.",
                            "example": "EUR"
                          },
                          "reference": {
                            "nullable": true,
                            "type": "string",
                            "description": "Product reference",
                            "example": "REF-453"
                          },
                          "substance": {
                            "nullable": true,
                            "description": "Product substance. Can be services or goods.",
                            "type": "string",
                            "enum": [
                              "goods",
                              "services"
                            ]
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "!!str 2021-06-30T08:04:15.400Z",
                            "description": "The last time the product has been updated"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        }
      }
    },
    "/api/external/v1/products/{id}": {
      "get": {
        "operationId": "products-id-get",
        "summary": "Retrieve a product",
        "description": "This endpoint returns a specific product.",
        "tags": [
          "Products"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Existing product identifier (source_id)",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product": {
                      "title": "Product",
                      "type": "object",
                      "properties": {
                        "source_id": {
                          "type": "string",
                          "description": "Product identifier (is unique)",
                          "example": "0e67fc3c-c632-4feb-ad34-e18ed5fbf66a"
                        },
                        "label": {
                          "type": "string",
                          "description": "Product label",
                          "example": "Pack 1"
                        },
                        "description": {
                          "type": "string",
                          "description": "Product description",
                          "example": "This is the package level 1"
                        },
                        "unit": {
                          "type": "string",
                          "description": "The kind of unit which applies to the amount\n",
                          "example": "piece"
                        },
                        "price": {
                          "type": "number",
                          "description": "Product price including taxes",
                          "example": 12
                        },
                        "vat_rate": {
                          "description": "Product VAT rate. A 20% VAT in France is FR_200.",
                          "type": "string",
                          "enum": [
                            "FR_09",
                            "FR_21",
                            "FR_55",
                            "FR_85",
                            "FR_100",
                            "FR_130",
                            "FR_200",
                            "AT_100",
                            "AT_130",
                            "AT_200",
                            "BE_60",
                            "BE_120",
                            "BE_210",
                            "BG_90",
                            "BG_200",
                            "CH_25",
                            "CH_37",
                            "CH_77",
                            "CY_50",
                            "CY_90",
                            "CY_190",
                            "CZ_100",
                            "CZ_150",
                            "CZ_210",
                            "DE_70",
                            "DE_190",
                            "DK_250",
                            "EE_90",
                            "EE_200",
                            "ES_40",
                            "ES_100",
                            "ES_210",
                            "FI_100",
                            "FI_140",
                            "FI_240",
                            "GB_50",
                            "GB_200",
                            "GR_60",
                            "GR_130",
                            "GR_240",
                            "HR_50",
                            "HR_130",
                            "HR_250",
                            "HU_50",
                            "HU_180",
                            "HU_270",
                            "IE_48",
                            "IE_90",
                            "IE_135",
                            "IE_210",
                            "IE_230",
                            "IT_40",
                            "IT_50",
                            "IT_100",
                            "IT_220",
                            "LT_50",
                            "LT_90",
                            "LT_210",
                            "LU_30",
                            "LU_70",
                            "LU_80",
                            "LU_130",
                            "LU_140",
                            "LU_160",
                            "LU_170",
                            "LV_50",
                            "LV_120",
                            "LV_210",
                            "MC_09",
                            "MC_21",
                            "MC_55",
                            "MC_85",
                            "MC_100",
                            "MC_200",
                            "MT_50",
                            "MT_70",
                            "MT_180",
                            "NL_90",
                            "NL_210",
                            "PL_50",
                            "PL_80",
                            "PL_230",
                            "PT_60",
                            "PT_130",
                            "PT_230",
                            "RO_50",
                            "RO_90",
                            "RO_190",
                            "SE_60",
                            "SE_120",
                            "SE_250",
                            "SI_50",
                            "SI_95",
                            "SI_220",
                            "SK_100",
                            "SK_200",
                            "exempt",
                            "crossborder",
                            "extracom",
                            "FR_100_construction",
                            "FR_200_construction"
                          ]
                        },
                        "currency": {
                          "type": "string",
                          "description": "Product currency (ISO 4217). Default is EUR.",
                          "example": "EUR"
                        },
                        "reference": {
                          "nullable": true,
                          "type": "string",
                          "description": "Product reference",
                          "example": "REF-453"
                        },
                        "substance": {
                          "nullable": true,
                          "description": "Product substance. Can be services or goods.",
                          "type": "string",
                          "enum": [
                            "goods",
                            "services"
                          ]
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "!!str 2021-06-30T08:04:15.400Z",
                          "description": "The last time the product has been updated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "products-id-put",
        "summary": "Update a product",
        "description": "This endpoint updates a specific product.",
        "tags": [
          "Products"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Product identifier (source_id)",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "product"
                ],
                "type": "object",
                "properties": {
                  "product": {
                    "title": "Product",
                    "type": "object",
                    "properties": {
                      "source_id": {
                        "type": "string",
                        "description": "Product identifier (is unique)",
                        "example": "0e67fc3c-c632-4feb-ad34-e18ed5fbf66a"
                      },
                      "label": {
                        "type": "string",
                        "description": "Product label",
                        "example": "Pack 1"
                      },
                      "description": {
                        "type": "string",
                        "description": "Product description",
                        "example": "This is the package level 1"
                      },
                      "unit": {
                        "type": "string",
                        "description": "The kind of unit which applies to the amount\n",
                        "example": "piece"
                      },
                      "price": {
                        "type": "number",
                        "description": "Product price including taxes",
                        "example": 12
                      },
                      "vat_rate": {
                        "description": "Product VAT rate. A 20% VAT in France is FR_200.",
                        "type": "string",
                        "enum": [
                          "FR_09",
                          "FR_21",
                          "FR_55",
                          "FR_85",
                          "FR_100",
                          "FR_130",
                          "FR_200",
                          "AT_100",
                          "AT_130",
                          "AT_200",
                          "BE_60",
                          "BE_120",
                          "BE_210",
                          "BG_90",
                          "BG_200",
                          "CH_25",
                          "CH_37",
                          "CH_77",
                          "CY_50",
                          "CY_90",
                          "CY_190",
                          "CZ_100",
                          "CZ_150",
                          "CZ_210",
                          "DE_70",
                          "DE_190",
                          "DK_250",
                          "EE_90",
                          "EE_200",
                          "ES_40",
                          "ES_100",
                          "ES_210",
                          "FI_100",
                          "FI_140",
                          "FI_240",
                          "GB_50",
                          "GB_200",
                          "GR_60",
                          "GR_130",
                          "GR_240",
                          "HR_50",
                          "HR_130",
                          "HR_250",
                          "HU_50",
                          "HU_180",
                          "HU_270",
                          "IE_48",
                          "IE_90",
                          "IE_135",
                          "IE_210",
                          "IE_230",
                          "IT_40",
                          "IT_50",
                          "IT_100",
                          "IT_220",
                          "LT_50",
                          "LT_90",
                          "LT_210",
                          "LU_30",
                          "LU_70",
                          "LU_80",
                          "LU_130",
                          "LU_140",
                          "LU_160",
                          "LU_170",
                          "LV_50",
                          "LV_120",
                          "LV_210",
                          "MC_09",
                          "MC_21",
                          "MC_55",
                          "MC_85",
                          "MC_100",
                          "MC_200",
                          "MT_50",
                          "MT_70",
                          "MT_180",
                          "NL_90",
                          "NL_210",
                          "PL_50",
                          "PL_80",
                          "PL_230",
                          "PT_60",
                          "PT_130",
                          "PT_230",
                          "RO_50",
                          "RO_90",
                          "RO_190",
                          "SE_60",
                          "SE_120",
                          "SE_250",
                          "SI_50",
                          "SI_95",
                          "SI_220",
                          "SK_100",
                          "SK_200",
                          "exempt",
                          "crossborder",
                          "extracom",
                          "FR_100_construction",
                          "FR_200_construction"
                        ]
                      },
                      "currency": {
                        "type": "string",
                        "description": "Product currency (ISO 4217). Default is EUR.",
                        "example": "EUR"
                      },
                      "reference": {
                        "nullable": true,
                        "type": "string",
                        "description": "Product reference",
                        "example": "REF-453"
                      },
                      "substance": {
                        "nullable": true,
                        "description": "Product substance. Can be services or goods.",
                        "type": "string",
                        "enum": [
                          "goods",
                          "services"
                        ]
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "!!str 2021-06-30T08:04:15.400Z",
                        "description": "The last time the product has been updated"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product has been updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product": {
                      "title": "Product",
                      "type": "object",
                      "properties": {
                        "source_id": {
                          "type": "string",
                          "description": "Product identifier (is unique)",
                          "example": "0e67fc3c-c632-4feb-ad34-e18ed5fbf66a"
                        },
                        "label": {
                          "type": "string",
                          "description": "Product label",
                          "example": "Pack 1"
                        },
                        "description": {
                          "type": "string",
                          "description": "Product description",
                          "example": "This is the package level 1"
                        },
                        "unit": {
                          "type": "string",
                          "description": "The kind of unit which applies to the amount\n",
                          "example": "piece"
                        },
                        "price": {
                          "type": "number",
                          "description": "Product price including taxes",
                          "example": 12
                        },
                        "vat_rate": {
                          "description": "Product VAT rate. A 20% VAT in France is FR_200.",
                          "type": "string",
                          "enum": [
                            "FR_09",
                            "FR_21",
                            "FR_55",
                            "FR_85",
                            "FR_100",
                            "FR_130",
                            "FR_200",
                            "AT_100",
                            "AT_130",
                            "AT_200",
                            "BE_60",
                            "BE_120",
                            "BE_210",
                            "BG_90",
                            "BG_200",
                            "CH_25",
                            "CH_37",
                            "CH_77",
                            "CY_50",
                            "CY_90",
                            "CY_190",
                            "CZ_100",
                            "CZ_150",
                            "CZ_210",
                            "DE_70",
                            "DE_190",
                            "DK_250",
                            "EE_90",
                            "EE_200",
                            "ES_40",
                            "ES_100",
                            "ES_210",
                            "FI_100",
                            "FI_140",
                            "FI_240",
                            "GB_50",
                            "GB_200",
                            "GR_60",
                            "GR_130",
                            "GR_240",
                            "HR_50",
                            "HR_130",
                            "HR_250",
                            "HU_50",
                            "HU_180",
                            "HU_270",
                            "IE_48",
                            "IE_90",
                            "IE_135",
                            "IE_210",
                            "IE_230",
                            "IT_40",
                            "IT_50",
                            "IT_100",
                            "IT_220",
                            "LT_50",
                            "LT_90",
                            "LT_210",
                            "LU_30",
                            "LU_70",
                            "LU_80",
                            "LU_130",
                            "LU_140",
                            "LU_160",
                            "LU_170",
                            "LV_50",
                            "LV_120",
                            "LV_210",
                            "MC_09",
                            "MC_21",
                            "MC_55",
                            "MC_85",
                            "MC_100",
                            "MC_200",
                            "MT_50",
                            "MT_70",
                            "MT_180",
                            "NL_90",
                            "NL_210",
                            "PL_50",
                            "PL_80",
                            "PL_230",
                            "PT_60",
                            "PT_130",
                            "PT_230",
                            "RO_50",
                            "RO_90",
                            "RO_190",
                            "SE_60",
                            "SE_120",
                            "SE_250",
                            "SI_50",
                            "SI_95",
                            "SI_220",
                            "SK_100",
                            "SK_200",
                            "exempt",
                            "crossborder",
                            "extracom",
                            "FR_100_construction",
                            "FR_200_construction"
                          ]
                        },
                        "currency": {
                          "type": "string",
                          "description": "Product currency (ISO 4217). Default is EUR.",
                          "example": "EUR"
                        },
                        "reference": {
                          "nullable": true,
                          "type": "string",
                          "description": "Product reference",
                          "example": "REF-453"
                        },
                        "substance": {
                          "nullable": true,
                          "description": "Product substance. Can be services or goods.",
                          "type": "string",
                          "enum": [
                            "goods",
                            "services"
                          ]
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "!!str 2021-06-30T08:04:15.400Z",
                          "description": "The last time the product has been updated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          },
          "422": {
            "description": "The product can't be updated",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Missing parameter"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/plan_items": {
      "get": {
        "operationId": "plan_items-get",
        "summary": "List all plan items",
        "description": "This endpoint returns a list of plan items",
        "tags": [
          "Plan Items"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Plan items are paginated, this is the current page which will be returned. The page index is starting at 1."
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "example": 50
            },
            "description": "Plan items are paginated. By default, you get 20 plan items by page. You can specify another number of plan items by page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of plan items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "total_pages": {
                      "type": "integer",
                      "example": 5,
                      "description": "The total number of pages available"
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1,
                      "description": "The current page returned"
                    },
                    "plan_items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "vat_rate": {
                            "type": "string"
                          },
                          "country_alpha2": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "number",
                          "label",
                          "enabled",
                          "vat_rate",
                          "country_alpha2",
                          "description"
                        ]
                      }
                    },
                    "total_plan_items": {
                      "type": "integer",
                      "example": 12,
                      "description": "The total number of plan items"
                    }
                  },
                  "required": [
                    "total_pages",
                    "current_page",
                    "plan_items",
                    "total_plan_items"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "plan_items-post",
        "summary": "Create a plan item",
        "description": "This endpoint allows you to create a plan item based on a specific payload.",
        "tags": [
          "Plan Items"
        ],
        "security": [
          {
            "oauth2": [
              "customer_invoices"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "plan_item": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "vat_rate": {
                        "type": "string"
                      },
                      "country_alpha2": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "number",
                      "label"
                    ]
                  }
                },
                "required": [
                  "plan_item"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Plan item has been created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "plan_item": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "vat_rate": {
                          "type": "string"
                        },
                        "country_alpha2": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "number",
                        "label",
                        "enabled",
                        "vat_rate",
                        "country_alpha2",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "plan_item"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/api/external/v1/enums/{id}": {
      "get": {
        "operationId": "enums-id-get",
        "tags": [
          "Enums"
        ],
        "summary": "Retrieve an enum",
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "enum": [
                "vat_rate",
                "unit",
                "countries",
                "currency",
                "customer_type",
                "payment_conditions",
                "billing_subscription_payment_conditions",
                "gender",
                "substance",
                "invoice_viewable_source",
                "billing_subscription_mode",
                "billing_subscription_payment_method",
                "billing_subscription_status",
                "templates_availables_locales"
              ]
            },
            "description": "Enum identifier",
            "required": true
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale to use",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "fr",
                "en"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the available values for a specific enum",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "value": "mister",
                      "label": "Mister"
                    },
                    {
                      "value": "madam",
                      "label": "Madam"
                    }
                  ],
                  "items": {
                    "type": "object",
                    "required": [
                      "label",
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "API Key": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Bearer"
      }
    },
    "schemas": {
      "Gender": {
        "type": "string",
        "enum": [
          "mister",
          "madam"
        ]
      },
      "CustomerType": {
        "type": "string",
        "enum": [
          "company",
          "individual"
        ]
      },
      "PaymentConditions": {
        "type": "string",
        "enum": [
          "upon_receipt",
          "custom",
          "15_days",
          "30_days",
          "45_days",
          "60_days"
        ]
      },
      "CommonCustomer": {
        "title": "Common Customer",
        "type": "object",
        "properties": {
          "updated_at": {
            "type": "string",
            "example": "!!str 2021-06-30T07:44:37.545Z",
            "description": "The last time the customer has been updated"
          },
          "source_id": {
            "type": "string",
            "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
            "description": "Customer identifier (is unique)",
            "nullable": false
          },
          "emails": {
            "type": "array",
            "example": [
              "hello@example.org"
            ],
            "items": {
              "type": "string"
            }
          },
          "billing_iban": {
            "type": "string",
            "nullable": true,
            "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
            "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
          },
          "customer_type": {
            "description": "Type of the customer (company or individual)",
            "type": "string",
            "enum": [
              "company",
              "individual"
            ]
          },
          "address": {
            "type": "string",
            "example": "4 rue du faubourg saint martin",
            "description": "Customer address (billing address)"
          },
          "postal_code": {
            "type": "string",
            "example": "75010",
            "description": "Postal code (billing address)"
          },
          "city": {
            "type": "string",
            "example": "Paris",
            "description": "City (billing address)"
          },
          "country_alpha2": {
            "type": "string",
            "example": "FR",
            "description": "Country alpha code (billing address)"
          },
          "delivery_address": {
            "type": "string",
            "example": "33 rue du mail"
          },
          "delivery_postal_code": {
            "type": "string",
            "example": "75002",
            "description": "Postal code (shipping address)"
          },
          "delivery_city": {
            "type": "string",
            "example": "Paris",
            "description": "City (shipping address)"
          },
          "delivery_country_alpha2": {
            "type": "string",
            "example": "FR",
            "description": "Country alpha code (shipping address)"
          },
          "payment_conditions": {
            "description": "Customer payment conditions",
            "type": "string",
            "enum": [
              "upon_receipt",
              "custom",
              "15_days",
              "30_days",
              "45_days",
              "60_days"
            ]
          },
          "phone": {
            "type": "string",
            "example": "+33123232323",
            "description": "Customer phone number"
          },
          "reference": {
            "type": "string",
            "example": "This is a custom reference",
            "description": "This reference doesn't appear on the invoice"
          },
          "notes": {
            "type": "string",
            "example": "This is a note",
            "description": "Notes about the customer"
          }
        }
      },
      "Customer": {
        "title": "Customer",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string",
                "example": "John",
                "description": "Customer first name (present only when type is individual)"
              },
              "last_name": {
                "type": "string",
                "example": "Doe",
                "description": "Customer last name (present only when type is individual)"
              },
              "gender": {
                "type": "string",
                "description": "Customer gender (present only when type is individual)",
                "enum": [
                  "mister",
                  "madam"
                ]
              },
              "name": {
                "type": "string",
                "example": "Pennylane",
                "description": "Company name (present only when type is company)"
              },
              "reg_no": {
                "type": "string",
                "example": "XXXXXXXXX",
                "description": "Customer registration number (SIREN - present only when type is company)"
              },
              "vat_number": {
                "type": "string",
                "example": "FR12345678910",
                "description": "Customer's VAT number"
              }
            }
          },
          {
            "title": "Common Customer",
            "type": "object",
            "properties": {
              "updated_at": {
                "type": "string",
                "example": "!!str 2021-06-30T07:44:37.545Z",
                "description": "The last time the customer has been updated"
              },
              "source_id": {
                "type": "string",
                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                "description": "Customer identifier (is unique)",
                "nullable": false
              },
              "emails": {
                "type": "array",
                "example": [
                  "hello@example.org"
                ],
                "items": {
                  "type": "string"
                }
              },
              "billing_iban": {
                "type": "string",
                "nullable": true,
                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
              },
              "customer_type": {
                "description": "Type of the customer (company or individual)",
                "type": "string",
                "enum": [
                  "company",
                  "individual"
                ]
              },
              "address": {
                "type": "string",
                "example": "4 rue du faubourg saint martin",
                "description": "Customer address (billing address)"
              },
              "postal_code": {
                "type": "string",
                "example": "75010",
                "description": "Postal code (billing address)"
              },
              "city": {
                "type": "string",
                "example": "Paris",
                "description": "City (billing address)"
              },
              "country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (billing address)"
              },
              "delivery_address": {
                "type": "string",
                "example": "33 rue du mail"
              },
              "delivery_postal_code": {
                "type": "string",
                "example": "75002",
                "description": "Postal code (shipping address)"
              },
              "delivery_city": {
                "type": "string",
                "example": "Paris",
                "description": "City (shipping address)"
              },
              "delivery_country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (shipping address)"
              },
              "payment_conditions": {
                "description": "Customer payment conditions",
                "type": "string",
                "enum": [
                  "upon_receipt",
                  "custom",
                  "15_days",
                  "30_days",
                  "45_days",
                  "60_days"
                ]
              },
              "phone": {
                "type": "string",
                "example": "+33123232323",
                "description": "Customer phone number"
              },
              "reference": {
                "type": "string",
                "example": "This is a custom reference",
                "description": "This reference doesn't appear on the invoice"
              },
              "notes": {
                "type": "string",
                "example": "This is a note",
                "description": "Notes about the customer"
              }
            }
          }
        ]
      },
      "InputCommonCustomer": {
        "title": "Common Customer",
        "type": "object",
        "properties": {
          "source_id": {
            "type": "string",
            "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
            "description": "You can use your own id when creating the customer. If not provided, Pennylane will pick one for you. Id must be unique",
            "nullable": false
          },
          "emails": {
            "type": "array",
            "example": [
              "hello@example.org"
            ],
            "items": {
              "type": "string"
            }
          },
          "billing_iban": {
            "type": "string",
            "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
            "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
          },
          "delivery_address": {
            "type": "string",
            "example": "33 rue du mail",
            "description": "Customer address (shipping address)"
          },
          "delivery_postal_code": {
            "type": "string",
            "example": "75002",
            "description": "Postal code (shipping address)"
          },
          "delivery_city": {
            "type": "string",
            "example": "Paris",
            "description": "City (shipping address)"
          },
          "delivery_country_alpha2": {
            "type": "string",
            "example": "FR",
            "description": "Country alpha code (shipping address)"
          },
          "payment_conditions": {
            "description": "Customer payment conditions",
            "type": "string",
            "enum": [
              "upon_receipt",
              "custom",
              "15_days",
              "30_days",
              "45_days",
              "60_days"
            ]
          },
          "phone": {
            "type": "string",
            "example": "+33123232323",
            "description": "Customer phone number"
          },
          "reference": {
            "type": "string",
            "example": "This is a custom reference",
            "description": "This reference doesn't appear on the invoice"
          },
          "notes": {
            "type": "string",
            "example": "This is a note",
            "description": "Notes about the customer"
          }
        }
      },
      "InputCompanyCustomer": {
        "title": "Company Customer",
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "required": [
              "name",
              "customer_type",
              "address",
              "postal_code",
              "city",
              "country_alpha2"
            ],
            "properties": {
              "customer_type": {
                "type": "string",
                "description": "Type of the customer. Must be company",
                "enum": [
                  "company"
                ]
              },
              "name": {
                "type": "string",
                "example": "Pennylane",
                "description": "Company name"
              },
              "reg_no": {
                "type": "string",
                "example": "XXXXXXXXX",
                "description": "Customer registration number (SIREN)"
              },
              "address": {
                "type": "string",
                "example": "4 rue du faubourg saint martin",
                "description": "Customer address (billing address)"
              },
              "postal_code": {
                "type": "string",
                "example": "75010",
                "description": "Postal code (billing address)"
              },
              "city": {
                "type": "string",
                "example": "Paris",
                "description": "City (billing address)"
              },
              "country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (billing address)"
              },
              "recipient": {
                "type": "string",
                "example": "On the behalf of John",
                "description": "Recipient displayed in the invoice"
              },
              "vat_number": {
                "type": "string",
                "example": "12345678901",
                "description": "Customer's VAT number"
              }
            }
          },
          {
            "title": "Common Customer",
            "type": "object",
            "properties": {
              "source_id": {
                "type": "string",
                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                "description": "You can use your own id when creating the customer. If not provided, Pennylane will pick one for you. Id must be unique",
                "nullable": false
              },
              "emails": {
                "type": "array",
                "example": [
                  "hello@example.org"
                ],
                "items": {
                  "type": "string"
                }
              },
              "billing_iban": {
                "type": "string",
                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
              },
              "delivery_address": {
                "type": "string",
                "example": "33 rue du mail",
                "description": "Customer address (shipping address)"
              },
              "delivery_postal_code": {
                "type": "string",
                "example": "75002",
                "description": "Postal code (shipping address)"
              },
              "delivery_city": {
                "type": "string",
                "example": "Paris",
                "description": "City (shipping address)"
              },
              "delivery_country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (shipping address)"
              },
              "payment_conditions": {
                "description": "Customer payment conditions",
                "type": "string",
                "enum": [
                  "upon_receipt",
                  "custom",
                  "15_days",
                  "30_days",
                  "45_days",
                  "60_days"
                ]
              },
              "phone": {
                "type": "string",
                "example": "+33123232323",
                "description": "Customer phone number"
              },
              "reference": {
                "type": "string",
                "example": "This is a custom reference",
                "description": "This reference doesn't appear on the invoice"
              },
              "notes": {
                "type": "string",
                "example": "This is a note",
                "description": "Notes about the customer"
              }
            }
          }
        ]
      },
      "InputIndividualCustomer": {
        "title": "Individual Customer",
        "allOf": [
          {
            "type": "object",
            "required": [
              "first_name",
              "last_name",
              "customer_type",
              "country_alpha2"
            ],
            "properties": {
              "customer_type": {
                "type": "string",
                "description": "Type of the customer. Must be individual",
                "enum": [
                  "individual"
                ]
              },
              "first_name": {
                "type": "string",
                "example": "John",
                "description": "Customer first name"
              },
              "last_name": {
                "type": "string",
                "example": "Doe",
                "description": "Customer last name"
              },
              "gender": {
                "description": "Customer gender",
                "type": "string",
                "enum": [
                  "mister",
                  "madam"
                ]
              },
              "address": {
                "type": "string",
                "example": "4 rue du faubourg saint martin",
                "description": "Customer address (billing address)"
              },
              "postal_code": {
                "type": "string",
                "example": "75010",
                "description": "Postal code (billing address)"
              },
              "city": {
                "type": "string",
                "example": "Paris",
                "description": "City (billing address)"
              },
              "country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (billing address)"
              }
            }
          },
          {
            "title": "Common Customer",
            "type": "object",
            "properties": {
              "source_id": {
                "type": "string",
                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                "description": "You can use your own id when creating the customer. If not provided, Pennylane will pick one for you. Id must be unique",
                "nullable": false
              },
              "emails": {
                "type": "array",
                "example": [
                  "hello@example.org"
                ],
                "items": {
                  "type": "string"
                }
              },
              "billing_iban": {
                "type": "string",
                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
              },
              "delivery_address": {
                "type": "string",
                "example": "33 rue du mail",
                "description": "Customer address (shipping address)"
              },
              "delivery_postal_code": {
                "type": "string",
                "example": "75002",
                "description": "Postal code (shipping address)"
              },
              "delivery_city": {
                "type": "string",
                "example": "Paris",
                "description": "City (shipping address)"
              },
              "delivery_country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (shipping address)"
              },
              "payment_conditions": {
                "description": "Customer payment conditions",
                "type": "string",
                "enum": [
                  "upon_receipt",
                  "custom",
                  "15_days",
                  "30_days",
                  "45_days",
                  "60_days"
                ]
              },
              "phone": {
                "type": "string",
                "example": "+33123232323",
                "description": "Customer phone number"
              },
              "reference": {
                "type": "string",
                "example": "This is a custom reference",
                "description": "This reference doesn't appear on the invoice"
              },
              "notes": {
                "type": "string",
                "example": "This is a note",
                "description": "Notes about the customer"
              }
            }
          }
        ]
      },
      "MissingParameterError": {
        "description": "Missing parameter"
      },
      "CompanyCustomer": {
        "title": "Company Customer",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Pennylane",
                "description": "Company name"
              },
              "reg_no": {
                "type": "string",
                "example": "XXXXXXXXX",
                "description": "Customer registration number (SIREN)"
              },
              "recipient": {
                "type": "string",
                "example": "On the behalf of John",
                "description": "Invoice Recipient"
              },
              "vat_number": {
                "type": "string",
                "example": "FR12345678910",
                "description": "Customer's VAT number"
              }
            }
          },
          {
            "title": "Common Customer",
            "type": "object",
            "properties": {
              "updated_at": {
                "type": "string",
                "example": "!!str 2021-06-30T07:44:37.545Z",
                "description": "The last time the customer has been updated"
              },
              "source_id": {
                "type": "string",
                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                "description": "Customer identifier (is unique)",
                "nullable": false
              },
              "emails": {
                "type": "array",
                "example": [
                  "hello@example.org"
                ],
                "items": {
                  "type": "string"
                }
              },
              "billing_iban": {
                "type": "string",
                "nullable": true,
                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
              },
              "customer_type": {
                "description": "Type of the customer (company or individual)",
                "type": "string",
                "enum": [
                  "company",
                  "individual"
                ]
              },
              "address": {
                "type": "string",
                "example": "4 rue du faubourg saint martin",
                "description": "Customer address (billing address)"
              },
              "postal_code": {
                "type": "string",
                "example": "75010",
                "description": "Postal code (billing address)"
              },
              "city": {
                "type": "string",
                "example": "Paris",
                "description": "City (billing address)"
              },
              "country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (billing address)"
              },
              "delivery_address": {
                "type": "string",
                "example": "33 rue du mail"
              },
              "delivery_postal_code": {
                "type": "string",
                "example": "75002",
                "description": "Postal code (shipping address)"
              },
              "delivery_city": {
                "type": "string",
                "example": "Paris",
                "description": "City (shipping address)"
              },
              "delivery_country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (shipping address)"
              },
              "payment_conditions": {
                "description": "Customer payment conditions",
                "type": "string",
                "enum": [
                  "upon_receipt",
                  "custom",
                  "15_days",
                  "30_days",
                  "45_days",
                  "60_days"
                ]
              },
              "phone": {
                "type": "string",
                "example": "+33123232323",
                "description": "Customer phone number"
              },
              "reference": {
                "type": "string",
                "example": "This is a custom reference",
                "description": "This reference doesn't appear on the invoice"
              },
              "notes": {
                "type": "string",
                "example": "This is a note",
                "description": "Notes about the customer"
              }
            }
          }
        ]
      },
      "IndividualCustomer": {
        "title": "Individual Customer",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string",
                "example": "John",
                "description": "Customer first name"
              },
              "last_name": {
                "type": "string",
                "example": "Doe",
                "description": "Customer last name"
              },
              "gender": {
                "description": "Customer gender",
                "type": "string",
                "enum": [
                  "mister",
                  "madam"
                ]
              }
            }
          },
          {
            "title": "Common Customer",
            "type": "object",
            "properties": {
              "updated_at": {
                "type": "string",
                "example": "!!str 2021-06-30T07:44:37.545Z",
                "description": "The last time the customer has been updated"
              },
              "source_id": {
                "type": "string",
                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                "description": "Customer identifier (is unique)",
                "nullable": false
              },
              "emails": {
                "type": "array",
                "example": [
                  "hello@example.org"
                ],
                "items": {
                  "type": "string"
                }
              },
              "billing_iban": {
                "type": "string",
                "nullable": true,
                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                "description": "The billing IBAN of the customer. This is the iban on which you wish to receive payment from this customer."
              },
              "customer_type": {
                "description": "Type of the customer (company or individual)",
                "type": "string",
                "enum": [
                  "company",
                  "individual"
                ]
              },
              "address": {
                "type": "string",
                "example": "4 rue du faubourg saint martin",
                "description": "Customer address (billing address)"
              },
              "postal_code": {
                "type": "string",
                "example": "75010",
                "description": "Postal code (billing address)"
              },
              "city": {
                "type": "string",
                "example": "Paris",
                "description": "City (billing address)"
              },
              "country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (billing address)"
              },
              "delivery_address": {
                "type": "string",
                "example": "33 rue du mail"
              },
              "delivery_postal_code": {
                "type": "string",
                "example": "75002",
                "description": "Postal code (shipping address)"
              },
              "delivery_city": {
                "type": "string",
                "example": "Paris",
                "description": "City (shipping address)"
              },
              "delivery_country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (shipping address)"
              },
              "payment_conditions": {
                "description": "Customer payment conditions",
                "type": "string",
                "enum": [
                  "upon_receipt",
                  "custom",
                  "15_days",
                  "30_days",
                  "45_days",
                  "60_days"
                ]
              },
              "phone": {
                "type": "string",
                "example": "+33123232323",
                "description": "Customer phone number"
              },
              "reference": {
                "type": "string",
                "example": "This is a custom reference",
                "description": "This reference doesn't appear on the invoice"
              },
              "notes": {
                "type": "string",
                "example": "This is a note",
                "description": "Notes about the customer"
              }
            }
          }
        ]
      },
      "PlanItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "vat_rate": {
            "type": "string"
          },
          "country_alpha2": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "number",
          "label",
          "enabled",
          "vat_rate",
          "country_alpha2",
          "description"
        ]
      },
      "CommonSupplier": {
        "title": "Common supplier",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Pennylane",
            "description": "Company name"
          },
          "updated_at": {
            "type": "string",
            "example": "!!str 2021-06-30T07:44:37.545Z",
            "description": "The last time the supplier has been updated"
          },
          "source_id": {
            "type": "string",
            "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
            "description": "supplier identifier (is unique)",
            "nullable": false
          },
          "emails": {
            "type": "array",
            "example": [
              "hello@example.org"
            ],
            "items": {
              "type": "string"
            }
          },
          "billing_iban": {
            "type": "string",
            "nullable": true,
            "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
            "description": "The billing IBAN of the supplier. This is the iban on which you wish to receive payment from this supplier."
          },
          "address": {
            "type": "string",
            "example": "4 rue du faubourg saint martin",
            "description": "supplier address (billing address)"
          },
          "postal_code": {
            "type": "string",
            "example": "75010",
            "description": "Postal code (billing address)"
          },
          "city": {
            "type": "string",
            "example": "Paris",
            "description": "City (billing address)"
          },
          "country_alpha2": {
            "type": "string",
            "example": "FR",
            "description": "Country alpha code (billing address)"
          },
          "payment_conditions": {
            "description": "supplier payment conditions",
            "type": "string",
            "enum": [
              "upon_receipt",
              "custom",
              "15_days",
              "30_days",
              "45_days",
              "60_days"
            ]
          },
          "phone": {
            "type": "string",
            "example": "+33123232323",
            "description": "supplier phone number"
          },
          "reference": {
            "type": "string",
            "example": "This is a custom reference",
            "description": "This reference doesn't appear on the invoice"
          },
          "notes": {
            "type": "string",
            "example": "This is a note",
            "description": "Notes about the supplier"
          }
        }
      },
      "Supplier": {
        "title": "Supplier",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Pennylane",
                "description": "Company name (present only when type is company)"
              },
              "reg_no": {
                "type": "string",
                "example": "XXXXXXXXX",
                "description": "Supplier registration number (SIREN - present only when type is company)"
              },
              "vat_number": {
                "type": "string",
                "example": "FR12345678910",
                "description": "Supplier's VAT number"
              },
              "plan_item": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "vat_rate": {
                    "type": "string"
                  },
                  "country_alpha2": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "number",
                  "label",
                  "enabled",
                  "vat_rate",
                  "country_alpha2",
                  "description"
                ]
              }
            }
          },
          {
            "title": "Common supplier",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Pennylane",
                "description": "Company name"
              },
              "updated_at": {
                "type": "string",
                "example": "!!str 2021-06-30T07:44:37.545Z",
                "description": "The last time the supplier has been updated"
              },
              "source_id": {
                "type": "string",
                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                "description": "supplier identifier (is unique)",
                "nullable": false
              },
              "emails": {
                "type": "array",
                "example": [
                  "hello@example.org"
                ],
                "items": {
                  "type": "string"
                }
              },
              "billing_iban": {
                "type": "string",
                "nullable": true,
                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                "description": "The billing IBAN of the supplier. This is the iban on which you wish to receive payment from this supplier."
              },
              "address": {
                "type": "string",
                "example": "4 rue du faubourg saint martin",
                "description": "supplier address (billing address)"
              },
              "postal_code": {
                "type": "string",
                "example": "75010",
                "description": "Postal code (billing address)"
              },
              "city": {
                "type": "string",
                "example": "Paris",
                "description": "City (billing address)"
              },
              "country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (billing address)"
              },
              "payment_conditions": {
                "description": "supplier payment conditions",
                "type": "string",
                "enum": [
                  "upon_receipt",
                  "custom",
                  "15_days",
                  "30_days",
                  "45_days",
                  "60_days"
                ]
              },
              "phone": {
                "type": "string",
                "example": "+33123232323",
                "description": "supplier phone number"
              },
              "reference": {
                "type": "string",
                "example": "This is a custom reference",
                "description": "This reference doesn't appear on the invoice"
              },
              "notes": {
                "type": "string",
                "example": "This is a note",
                "description": "Notes about the supplier"
              }
            }
          }
        ]
      },
      "InputCommonSupplier": {
        "title": "Common Supplier",
        "type": "object",
        "properties": {
          "source_id": {
            "type": "string",
            "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
            "description": "You can use your own id when creating the supplier. If not provided, Pennylane will pick one for you. Id must be unique",
            "nullable": false
          },
          "emails": {
            "type": "array",
            "example": [
              "hello@example.org"
            ],
            "items": {
              "type": "string"
            }
          },
          "iban": {
            "type": "string",
            "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
            "description": "The IBAN of the supplier"
          },
          "payment_conditions": {
            "description": "Supplier payment conditions",
            "type": "string",
            "enum": [
              "upon_receipt",
              "custom",
              "15_days",
              "30_days",
              "45_days",
              "60_days"
            ]
          },
          "phone": {
            "type": "string",
            "example": "+33123232323",
            "description": "Supplier phone number"
          },
          "reference": {
            "type": "string",
            "example": "This is a custom reference",
            "description": "This reference doesn't appear on the invoice"
          },
          "notes": {
            "type": "string",
            "example": "This is a note",
            "description": "Notes about the supplier"
          }
        }
      },
      "InputCompanySupplier": {
        "title": "Company Supplier",
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "required": [
              "name",
              "address",
              "postal_code",
              "city",
              "country_alpha2"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "Pennylane",
                "description": "Company name"
              },
              "reg_no": {
                "type": "string",
                "example": "XXXXXXXXX",
                "description": "Supplier registration number (SIREN)"
              },
              "address": {
                "type": "string",
                "example": "4 rue du faubourg saint martin",
                "description": "Supplier address (billing address)"
              },
              "postal_code": {
                "type": "string",
                "example": "75010",
                "description": "Postal code (billing address)"
              },
              "city": {
                "type": "string",
                "example": "Paris",
                "description": "City (billing address)"
              },
              "country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (billing address)"
              },
              "recipient": {
                "type": "string",
                "example": "On the behalf of John",
                "description": "Recipient displayed in the invoice"
              },
              "vat_number": {
                "type": "string",
                "example": "12345678901",
                "description": "Suppliers's VAT number"
              }
            }
          },
          {
            "title": "Common Supplier",
            "type": "object",
            "properties": {
              "source_id": {
                "type": "string",
                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                "description": "You can use your own id when creating the supplier. If not provided, Pennylane will pick one for you. Id must be unique",
                "nullable": false
              },
              "emails": {
                "type": "array",
                "example": [
                  "hello@example.org"
                ],
                "items": {
                  "type": "string"
                }
              },
              "iban": {
                "type": "string",
                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                "description": "The IBAN of the supplier"
              },
              "payment_conditions": {
                "description": "Supplier payment conditions",
                "type": "string",
                "enum": [
                  "upon_receipt",
                  "custom",
                  "15_days",
                  "30_days",
                  "45_days",
                  "60_days"
                ]
              },
              "phone": {
                "type": "string",
                "example": "+33123232323",
                "description": "Supplier phone number"
              },
              "reference": {
                "type": "string",
                "example": "This is a custom reference",
                "description": "This reference doesn't appear on the invoice"
              },
              "notes": {
                "type": "string",
                "example": "This is a note",
                "description": "Notes about the supplier"
              }
            }
          }
        ]
      },
      "CompanySupplier": {
        "title": "Company Supplier",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Pennylane",
                "description": "Company name"
              },
              "reg_no": {
                "type": "string",
                "example": "XXXXXXXXX",
                "description": "Supplier registration number (SIREN)"
              },
              "recipient": {
                "type": "string",
                "example": "On the behalf of John",
                "description": "Invoice Recipient"
              },
              "vat_number": {
                "type": "string",
                "example": "FR12345678910",
                "description": "Supplier's VAT number"
              }
            }
          },
          {
            "title": "Common supplier",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Pennylane",
                "description": "Company name"
              },
              "updated_at": {
                "type": "string",
                "example": "!!str 2021-06-30T07:44:37.545Z",
                "description": "The last time the supplier has been updated"
              },
              "source_id": {
                "type": "string",
                "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                "description": "supplier identifier (is unique)",
                "nullable": false
              },
              "emails": {
                "type": "array",
                "example": [
                  "hello@example.org"
                ],
                "items": {
                  "type": "string"
                }
              },
              "billing_iban": {
                "type": "string",
                "nullable": true,
                "example": "FRXX XXXX XXXX XXXX XXXX XXXX XXX",
                "description": "The billing IBAN of the supplier. This is the iban on which you wish to receive payment from this supplier."
              },
              "address": {
                "type": "string",
                "example": "4 rue du faubourg saint martin",
                "description": "supplier address (billing address)"
              },
              "postal_code": {
                "type": "string",
                "example": "75010",
                "description": "Postal code (billing address)"
              },
              "city": {
                "type": "string",
                "example": "Paris",
                "description": "City (billing address)"
              },
              "country_alpha2": {
                "type": "string",
                "example": "FR",
                "description": "Country alpha code (billing address)"
              },
              "payment_conditions": {
                "description": "supplier payment conditions",
                "type": "string",
                "enum": [
                  "upon_receipt",
                  "custom",
                  "15_days",
                  "30_days",
                  "45_days",
                  "60_days"
                ]
              },
              "phone": {
                "type": "string",
                "example": "+33123232323",
                "description": "supplier phone number"
              },
              "reference": {
                "type": "string",
                "example": "This is a custom reference",
                "description": "This reference doesn't appear on the invoice"
              },
              "notes": {
                "type": "string",
                "example": "This is a note",
                "description": "Notes about the supplier"
              }
            }
          }
        ]
      },
      "Category": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "source_id": {
            "type": "string",
            "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
            "description": "Category identifier (is unique)",
            "nullable": false
          },
          "group_source_id": {
            "type": "string",
            "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
            "description": "Group identifier (is unique)",
            "nullable": false
          },
          "group_label": {
            "type": "string",
            "example": "Category Group Label",
            "description": "Category group name",
            "nullable": false
          },
          "label": {
            "type": "string",
            "example": "Alimentaire",
            "description": "Category name (is unique per group of categories)",
            "nullable": false
          },
          "direction": {
            "type": "string",
            "enum": [
              "cash_in",
              "cash_out"
            ],
            "nullable": true
          },
          "is_editable": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "nullable": false,
            "description": "Category created date",
            "example": "2022-10-26T09:58:12.146343Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": false,
            "description": "Category created date",
            "example": "2022-10-26T09:58:12.146343Z"
          }
        }
      },
      "CategoryGroup": {
        "title": "CategoryGroup",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          },
          "default_tag_id": {
            "type": "integer",
            "nullable": true
          },
          "qonto_id": {
            "type": "integer",
            "nullable": true
          },
          "icon": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "source_id": {
                  "type": "string",
                  "example": "38a1f19a-256d-4692-a8fe-0a16403f59ff",
                  "description": "Category identifier (is unique)",
                  "nullable": false
                },
                "group_source_id": {
                  "type": "string",
                  "example": "03b961bb-09ad-4789-b1c3-a77875773b82",
                  "description": "Group identifier (is unique)",
                  "nullable": false
                },
                "group_label": {
                  "type": "string",
                  "example": "Category Group Label",
                  "description": "Category group name",
                  "nullable": false
                },
                "label": {
                  "type": "string",
                  "example": "Alimentaire",
                  "description": "Category name (is unique per group of categories)",
                  "nullable": false
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "cash_in",
                    "cash_out"
                  ],
                  "nullable": true
                },
                "is_editable": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "nullable": false,
                  "description": "Category created date",
                  "example": "2022-10-26T09:58:12.146343Z"
                },
                "updated_at": {
                  "type": "string",
                  "nullable": false,
                  "description": "Category created date",
                  "example": "2022-10-26T09:58:12.146343Z"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "label",
          "default_tag_id"
        ]
      },
      "VatRate": {
        "type": "string",
        "enum": [
          "FR_09",
          "FR_21",
          "FR_55",
          "FR_85",
          "FR_100",
          "FR_130",
          "FR_200",
          "AT_100",
          "AT_130",
          "AT_200",
          "BE_60",
          "BE_120",
          "BE_210",
          "BG_90",
          "BG_200",
          "CH_25",
          "CH_37",
          "CH_77",
          "CY_50",
          "CY_90",
          "CY_190",
          "CZ_100",
          "CZ_150",
          "CZ_210",
          "DE_70",
          "DE_190",
          "DK_250",
          "EE_90",
          "EE_200",
          "ES_40",
          "ES_100",
          "ES_210",
          "FI_100",
          "FI_140",
          "FI_240",
          "GB_50",
          "GB_200",
          "GR_60",
          "GR_130",
          "GR_240",
          "HR_50",
          "HR_130",
          "HR_250",
          "HU_50",
          "HU_180",
          "HU_270",
          "IE_48",
          "IE_90",
          "IE_135",
          "IE_210",
          "IE_230",
          "IT_40",
          "IT_50",
          "IT_100",
          "IT_220",
          "LT_50",
          "LT_90",
          "LT_210",
          "LU_30",
          "LU_70",
          "LU_80",
          "LU_130",
          "LU_140",
          "LU_160",
          "LU_170",
          "LV_50",
          "LV_120",
          "LV_210",
          "MC_09",
          "MC_21",
          "MC_55",
          "MC_85",
          "MC_100",
          "MC_200",
          "MT_50",
          "MT_70",
          "MT_180",
          "NL_90",
          "NL_210",
          "PL_50",
          "PL_80",
          "PL_230",
          "PT_60",
          "PT_130",
          "PT_230",
          "RO_50",
          "RO_90",
          "RO_190",
          "SE_60",
          "SE_120",
          "SE_250",
          "SI_50",
          "SI_95",
          "SI_220",
          "SK_100",
          "SK_200",
          "exempt",
          "crossborder",
          "extracom",
          "FR_100_construction",
          "FR_200_construction"
        ]
      },
      "Substance": {
        "type": "string",
        "enum": [
          "goods",
          "services"
        ]
      },
      "Product": {
        "title": "Product",
        "type": "object",
        "properties": {
          "source_id": {
            "type": "string",
            "description": "Product identifier (is unique)",
            "example": "0e67fc3c-c632-4feb-ad34-e18ed5fbf66a"
          },
          "label": {
            "type": "string",
            "description": "Product label",
            "example": "Pack 1"
          },
          "description": {
            "type": "string",
            "description": "Product description",
            "example": "This is the package level 1"
          },
          "unit": {
            "type": "string",
            "description": "The kind of unit which applies to the amount\n",
            "example": "piece"
          },
          "price": {
            "type": "number",
            "description": "Product price including taxes",
            "example": 12
          },
          "vat_rate": {
            "description": "Product VAT rate. A 20% VAT in France is FR_200.",
            "type": "string",
            "enum": [
              "FR_09",
              "FR_21",
              "FR_55",
              "FR_85",
              "FR_100",
              "FR_130",
              "FR_200",
              "AT_100",
              "AT_130",
              "AT_200",
              "BE_60",
              "BE_120",
              "BE_210",
              "BG_90",
              "BG_200",
              "CH_25",
              "CH_37",
              "CH_77",
              "CY_50",
              "CY_90",
              "CY_190",
              "CZ_100",
              "CZ_150",
              "CZ_210",
              "DE_70",
              "DE_190",
              "DK_250",
              "EE_90",
              "EE_200",
              "ES_40",
              "ES_100",
              "ES_210",
              "FI_100",
              "FI_140",
              "FI_240",
              "GB_50",
              "GB_200",
              "GR_60",
              "GR_130",
              "GR_240",
              "HR_50",
              "HR_130",
              "HR_250",
              "HU_50",
              "HU_180",
              "HU_270",
              "IE_48",
              "IE_90",
              "IE_135",
              "IE_210",
              "IE_230",
              "IT_40",
              "IT_50",
              "IT_100",
              "IT_220",
              "LT_50",
              "LT_90",
              "LT_210",
              "LU_30",
              "LU_70",
              "LU_80",
              "LU_130",
              "LU_140",
              "LU_160",
              "LU_170",
              "LV_50",
              "LV_120",
              "LV_210",
              "MC_09",
              "MC_21",
              "MC_55",
              "MC_85",
              "MC_100",
              "MC_200",
              "MT_50",
              "MT_70",
              "MT_180",
              "NL_90",
              "NL_210",
              "PL_50",
              "PL_80",
              "PL_230",
              "PT_60",
              "PT_130",
              "PT_230",
              "RO_50",
              "RO_90",
              "RO_190",
              "SE_60",
              "SE_120",
              "SE_250",
              "SI_50",
              "SI_95",
              "SI_220",
              "SK_100",
              "SK_200",
              "exempt",
              "crossborder",
              "extracom",
              "FR_100_construction",
              "FR_200_construction"
            ]
          },
          "currency": {
            "type": "string",
            "description": "Product currency (ISO 4217). Default is EUR.",
            "example": "EUR"
          },
          "reference": {
            "nullable": true,
            "type": "string",
            "description": "Product reference",
            "example": "REF-453"
          },
          "substance": {
            "nullable": true,
            "description": "Product substance. Can be services or goods.",
            "type": "string",
            "enum": [
              "goods",
              "services"
            ]
          },
          "updated_at": {
            "type": "string",
            "example": "!!str 2021-06-30T08:04:15.400Z",
            "description": "The last time the product has been updated"
          }
        }
      },
      "InputProduct": {
        "title": "Product",
        "type": "object",
        "required": [
          "label",
          "unit",
          "price",
          "vat_rate",
          "currency"
        ],
        "properties": {
          "source_id": {
            "type": "string",
            "description": "You can use your own id when creating the product. If not provided, Pennylane will pick one for you. Id must be unique",
            "example": "0e67fc3c-c632-4feb-ad34-e18ed5fbf66a"
          },
          "label": {
            "type": "string",
            "description": "Product label",
            "example": "Pack 1"
          },
          "description": {
            "type": "string",
            "description": "Product description",
            "example": "This is the package level 1"
          },
          "unit": {
            "type": "string",
            "description": "Product unit",
            "example": "piece"
          },
          "price_before_tax": {
            "type": "number",
            "description": "Product price before taxes",
            "example": 10
          },
          "price": {
            "type": "number",
            "description": "Product price including taxes",
            "example": 12
          },
          "vat_rate": {
            "description": "Product VAT rate. A 20% VAT in France is FR_200.",
            "nullable": false,
            "type": "string",
            "enum": [
              "FR_09",
              "FR_21",
              "FR_55",
              "FR_85",
              "FR_100",
              "FR_130",
              "FR_200",
              "AT_100",
              "AT_130",
              "AT_200",
              "BE_60",
              "BE_120",
              "BE_210",
              "BG_90",
              "BG_200",
              "CH_25",
              "CH_37",
              "CH_77",
              "CY_50",
              "CY_90",
              "CY_190",
              "CZ_100",
              "CZ_150",
              "CZ_210",
              "DE_70",
              "DE_190",
              "DK_250",
              "EE_90",
              "EE_200",
              "ES_40",
              "ES_100",
              "ES_210",
              "FI_100",
              "FI_140",
              "FI_240",
              "GB_50",
              "GB_200",
              "GR_60",
              "GR_130",
              "GR_240",
              "HR_50",
              "HR_130",
              "HR_250",
              "HU_50",
              "HU_180",
              "HU_270",
              "IE_48",
              "IE_90",
              "IE_135",
              "IE_210",
              "IE_230",
              "IT_40",
              "IT_50",
              "IT_100",
              "IT_220",
              "LT_50",
              "LT_90",
              "LT_210",
              "LU_30",
              "LU_70",
              "LU_80",
              "LU_130",
              "LU_140",
              "LU_160",
              "LU_170",
              "LV_50",
              "LV_120",
              "LV_210",
              "MC_09",
              "MC_21",
              "MC_55",
              "MC_85",
              "MC_100",
              "MC_200",
              "MT_50",
              "MT_70",
              "MT_180",
              "NL_90",
              "NL_210",
              "PL_50",
              "PL_80",
              "PL_230",
              "PT_60",
              "PT_130",
              "PT_230",
              "RO_50",
              "RO_90",
              "RO_190",
              "SE_60",
              "SE_120",
              "SE_250",
              "SI_50",
              "SI_95",
              "SI_220",
              "SK_100",
              "SK_200",
              "exempt",
              "crossborder",
              "extracom",
              "FR_100_construction",
              "FR_200_construction"
            ]
          },
          "currency": {
            "type": "string",
            "description": "Product currency",
            "example": "EUR"
          },
          "reference": {
            "nullable": true,
            "type": "string",
            "description": "Product reference",
            "example": "REF-453"
          },
          "substance": {
            "nullable": true,
            "description": "Product substance. Can be services or goods.",
            "type": "string",
            "enum": [
              "goods",
              "services"
            ]
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "_id": "6346dcdea2d2830109006b0e"
}