{
  "openapi": "3.0.0",
  "info": {
    "description": "[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/eeda0fcdf55ea26bd0ec#?env%5BHootsuite%5D=W3sidHlwZSI6InRleHQiLCJlbmFibGVkIjp0cnVlLCJrZXkiOiJ1cmwiLCJ2YWx1ZSI6Imh0dHBzOi8vcGxhdGZvcm0uaG9vdHN1aXRlLmNvbSJ9LHsidHlwZSI6InRleHQiLCJlbmFibGVkIjp0cnVlLCJrZXkiOiJhdXRob3JpemF0aW9uX3VybCIsInZhbHVlIjoiaHR0cHM6Ly9wbGF0Zm9ybS5ob290c3VpdGUuY29tL29hdXRoMi9hdXRoIn0seyJ0eXBlIjoidGV4dCIsImVuYWJsZWQiOnRydWUsImtleSI6InRva2VuX3VybCIsInZhbHVlIjoiaHR0cHM6Ly9wbGF0Zm9ybS5ob290c3VpdGUuY29tL29hdXRoMi90b2tlbiJ9LHsidHlwZSI6InRleHQiLCJlbmFibGVkIjp0cnVlLCJrZXkiOiJjbGllbnRfaWQiLCJ2YWx1ZSI6IiJ9LHsidHlwZSI6InRleHQiLCJlbmFibGVkIjp0cnVlLCJrZXkiOiJjbGllbnRfc2VjcmV0IiwidmFsdWUiOiIifV0=)\n# Introduction\nThe Hootsuite API is built on REST principles and uses JSON as a data interchange format.\n### Base URL\nAll URLs referenced in this document use the following base: https://platform.hootsuite.com. The Hootsuite API is served over HTTPS to ensure data privacy.\n### Request Format\nThe Hootsuite API supports the following HTTP verbs:\n| Verb       | Description  |\n|--------|------|\n| GET    | GET requests retrieve resources. GET requests with query parameters should be [URL encoded](https://en.wikipedia.org/wiki/Percent-encoding).  |\n| POST   | POST requests create or update resources. POST requests can partially update a resource by passing a subset of the fields that should be updated. To remove a single field set it to null. POST requests should always set content-type and character encoding to: application/json;charset=utf-8. |\n| DELETE | DELETE requests delete resources. Delete requests return a 200 OK with an empty data envelope if the request was successful.|\n### Response Format\nAll responses are returned in JSON. The response is wrapped in a top level data envelope which is an object or array depending on whether a single item or a collection is returned. If a single item is returned the data field will be an object. If a collection is returned the field will be an array.\nIf the response was unsuccessful an errors array will be returned. Responses that partially fail will return both a data and errors object.\nA single item response:\n```\n{\n  \"data\": {},\n  \"errors\": [{},{},{}]\n}\n```\nA collection response:\n```\n{\n  \"data\": [{},{},{}],\n  \"errors\": [{},{},{}]\n  \"metadata\": {}\n}\n```\n### HTTP Response Codes\nThe Hootsuite API uses HTTP status codes to indicate the status of your request.\n|Code |Description |\n|---|---|\n|200 OK|Resource was successfully created, updated, deleted or retrieved.|\n|400 Bad Request|Invalid request, possibly due to missing parameters|\n|401 Unauthorized|Missing or invalid authentication|\n|403 Forbidden|Access denied|\n|404 Not Found|Requested resource does not exist|\n|429 Too Many Requests|Rate Limit Exceeded. Please contact dev.support@hootsuite.com for assistance|\n|500 Server Error|Unexpected error occurred on the server|\n### API Error Handling\nError responses are returned with the following fields. Note, the schema for OAuth2 error responses are different and comply with the RFC. Please refer to the Authorization endpoint documentation for details.\n|Field|Description|\n|---|---|\n|code|Unique number indicating type of error|\n|message|Description of error|\n|id|Unique id for tracing purposes|\n|resource|(optional) type and id are used to point to the field(s) that caused the error|\n```\n{\n  \"errors\": [\n    {\n      \"code\" : 1234,\n      \"message\": \"Could not create message for social profile\",\n      \"id\" : \"f7d32670-4e6a-48c0-a2a7-87803536a712\",\n      \"resource\": {\n        \"type\":\"socialProfile\",\n        \"id\":\"7534653235\"\n      }\n    }\n  ]\n}\n```\n### Error Codes\nHere is a list of error codes and descriptions returned by our APIs:\n|Code|Description|\n|---|---|\n|1000|Missing or duplicate access token|\n|1001|Invalid access token|\n|1002|Invalid API key|\n|1003|Account plan limit exceeded|\n|1004|API plan limit exceeded|\n|1005|Token could not be retrieved|\n|1006|Token removal failed|\n|1007|The client could not be authenticated due to missing or invalid client credentials|\n|1008|Resource Owner authentication failed|\n|1009|Invalid grant_type|\n|1010|Invalid OAuth request|\n|1011|Duplicate OAuth parameters|\n|1012|Invalid authorization code|\n|1013|Must be confidential client|\n|1014|Unauthorized JWT user|\n|1015|Client registration could not be deleted|\n|1016|Client info could not be retrieved|\n|1017|Client info could not be updated|\n|1018|Client could not be registered|\n|1019|A registration type must be selected|\n|1020|Client key could not be deleted|\n|1021|The id_token values could not be retrieved|\n|1022|id_token could not be registered|\n|1023|id_token could not be removed therefore user logout could not be executed|\n|1024|Token could not be revoked|\n|1025|Token could not be registered|\n|1026|Non-valid parameter list for this operation|\n|1027|Missing authorization code|\n|1028|Authorization code could not be validated|\n|1029|id_token could not be validated|\n|1030|The client is not authorized to execute a status check|\n|1031|Invalid oauth parameters|\n|1032|Token could not be validated|\n|1033|The requested scope is not valid|\n|1034|The session is not valid|\n|1035|Missing oauth_token parameter|\n|1036|oauth_token invalid or expired|\n|1037|The required scope to access this endpoint was not granted by the user|\n|1038|token_type_hint is not supported|\n|1039|Client not authorized to revoke token|\n|1040|oauth_consumer_key invalid or expired|\n|1041|The token may not have been revoked due to an unknown error|\n|1042|Missing oauth_signature|\n|1043|Too many requests|\n|1044|Invalid oauth_signature_method|\n|1100|Invalid JSON schema|\n|1201|Not authorized to make changes to organization|\n|2000|Invalid member password|\n|2001|Invalid member email|\n|2002|Invalid member name (please enter name between 2 and 100 chars in length)|\n|2003|Invalid member default timezone|\n|2004|Invalid initials|\n|2005|Missing member name|\n|2006|Missing member email|\n|2007|Missing member password|\n|2008|No more available seats in organization|\n|2303|Invalid organization ID|\n|2304|Invalid member ID|\n|2305|Missing member ID|\n|2306|Missing social profile ID|\n|3002|Team name has to be between 2-200 characters|\n|3003|Unable to find an organization with that ID|\n|3004|Missing team ID|\n|3005|Invalid team ID|\n|3006|Team name has to be unique in the organization|\n|3008|Member is not seated in the organization|\n|3010|Email is already in use|\n|3020|Invalid cursor format|\n|3021|Invalid social network type|\n|3301|Payment member can’t be removed from the organization|\n|4000|Schema validation failed|\n|4001|Resource not found|\n|4002|Insufficient permissions to view organization members|\n|4003|Insufficient permissions to view member permissions|\n|4004|Insufficient permissions to view member organizations|\n|4005|Insufficient permissions to view team members|\n|4006|Insufficient permissions to view team|\n|4007|Insufficient permissions to create team|\n|4008|Insufficient permissions to view team social profile|\n|4009|Insufficient organization permissions|\n|4010|Insufficient permissions to view organization teams|\n|4303|Member does not exist in organization|\n|5000|An unknown error occurred|\n|5001|HTTP method not permitted|\n|5002|Unsupported operation|\n|9000|An internal error occurred|\n|40001|Social profile isn’t owned by organization (required for posting messages with tags)|\n|40003|You have attempted to delete a message that cannot be deleted in its current state|\n|40004|Only attachments from http://static.ow.ly or http://ow.ly/i/ are currently allowed|\n|40005|Insufficient permission to create new message tags|\n|40019|Message state filter not supported|\n|40020|Specified date range is too large|\n|40021|Uploaded media is not yet ready to be used (further processing required)|\n|40022|Invalid boolean for includeUnscheduledReviewMsgs flag|\n|40023|Twitter only allows 1 network per message|\n|40024|Posting to Facebook Groups is no longer supported|\n|40025|Scheduled message limit reached|\n",
    "version": "1.0",
    "title": "Hootsuite REST API",
    "contact": {
      "email": "dev.support@hootsuite.com"
    },
    "license": {
      "name": "Hootsuite Developer Terms and API License Agreement",
      "url": "https://hootsuite.com/legal/dev-api-terms"
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Hootsuite uses OAuth2 to authenticate end users. Members authenticated with the Hootsuite API are subject to the same permissions configured as when using the Hootsuite Web Dashboard. Learn more about managing permissions at the [Hootsuite Help Center](https://help.hootsuite.com/hc/en-us/articles/204598170-About-organizations-teams-and-permissions)."
    },
    {
      "name": "Me",
      "description": "The Me API returns information about the user that has authenticated with the API."
    },
    {
      "name": "Media"
    },
    {
      "name": "Members"
    },
    {
      "name": "Messages"
    },
    {
      "name": "Comments"
    },
    {
      "name": "Organizations"
    },
    {
      "name": "SCIM 2.0"
    },
    {
      "name": "Social Profiles",
      "description": "A social profile is a publishing channel on a social network account. The following social profile types are supported via the Hootsuite API: Twitter, Facebook, Facebook Page, Facebook Group, LinkedIn, Linkedin Group, Linkedin Company, Instagram"
    },
    {
      "name": "Teams"
    },
    {
      "name": "Interactions"
    }
  ],
  "security": [
    {
      "OAuth2": []
    }
  ],
  "paths": {
    "/oauth2/auth": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "operationId": "oauth2Authorize",
        "summary": "OAuth2 Authorize",
        "description": "[OAuth2 Authorize](https://tools.ietf.org/html/rfc6749#section-3.1) endpoint.",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "response_type",
            "description": "The response type requested.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "code"
              ]
            }
          },
          {
            "in": "query",
            "name": "client_id",
            "required": true,
            "description": "Your client ID found in the Hootsuite Developer Portal.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "scope",
            "required": true,
            "description": "The required token scopes.",
            "schema": {
              "type": "string",
              "enum": [
                "offline"
              ]
            }
          },
          {
            "in": "query",
            "name": "redirect_uri",
            "required": true,
            "description": "The URI to redirect to after authentication.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "state",
            "required": false,
            "description": "An opaque value used by the client to maintain state between the request and callback. See [rfc6749#section-4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1) for more context.\n\nNote: if this param is provided, it must be at least 8 characters long.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "oauth2Token",
        "summary": "OAuth2 Token",
        "description": "[OAuth2 Token](https://tools.ietf.org/html/rfc6749#section-3.2) endpoint. The required parameters depend on the grant type requested:\n\n|Required Parameter|Grant Type|\n|---|---|\n|code|authorization_code|\n|redirect_uri|authorization_code|\n|member_id|member_app|\n|organization_id|organization_app|\n|refresh_token|refresh_token|\n\nThis endpoint requires that you pass in your client credentials using the HTTP Basic authentication scheme as per outlined in the [spec](https://tools.ietf.org/html/rfc6749#section-2.3.1).\nIncluding your client credentials in the request-body is not supported.\n\n**Note**: The specific authorization code provided for the `code` parameter must only be used successfully once. If an authorization code is used a second time, all tokens granted with the first `/oauth2/token` call will be revoked.\n",
        "security": [
          {
            "Basic_Auth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "A base64-encoded client_id:client_secret string used for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "description": "The OAuth2 grant_type used.",
                    "type": "string",
                    "enum": [
                      "authorization_code",
                      "client_credentials",
                      "member_app",
                      "organization_app",
                      "refresh_token"
                    ]
                  },
                  "code": {
                    "description": "The authorization code granted by the /oauth2/auth endpoint. Required for grant type: authorization_code",
                    "type": "string"
                  },
                  "redirect_uri": {
                    "description": "The URI to redirect to after authentication. Required for grant type: authorization_code",
                    "type": "string"
                  },
                  "member_id": {
                    "description": "The member id of the user to grant a token for. Required for grant type: member_app",
                    "type": "string"
                  },
                  "organization_id": {
                    "description": "The organization id to grant a token for. Required for grant type: organization_app",
                    "type": "string"
                  },
                  "scope": {
                    "description": "The required token scopes",
                    "type": "string"
                  },
                  "refresh_token": {
                    "description": "The refresh token code previously granted. Required for grant type: refresh_token",
                    "type": "string"
                  }
                },
                "required": [
                  "grant_type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2BearerToken"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/messages": {
      "post": {
        "tags": [
          "Messages"
        ],
        "operationId": "scheduleMessage",
        "summary": "Schedule messages",
        "description": "Schedules a message to send on one or more social profiles (except Pinterest). Returns an array of uniquely identifiable messages (one per social profile requested).<br/><br/>Scheduling a message to Pinterest can not be bundled with any other social profiles.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SocialProfileMessagesResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "operationId": "retrieveMessages",
        "summary": "Retrieve outbound messages",
        "description": "Outbound messages are messages that are scheduled or were previously sent. This endpoint returns outbound messages sorted by increasing scheduled send time. Messages pending approval, including those created by and/or actionable by the given user, will also be returned via this API.\n\nMessages returned can be filtered by social profile or the current state of the message. If more than 50 results are returned a cursor will be automatically created to paginate the results.\n\nQuery Parameters must be [URL encoded](https://en.wikipedia.org/wiki/Percent-encoding). For example:\n\n```\n?startTime=2020-01-01T00%3A00%3A00Z\n&endTime=2020-01-15T17%3A55%3A01Z\n&socialProfileIds=1234\n&state=SCHEDULED\n&limit=5\n```\n\nTo specify multiple social profiles, use the following [syntax](http://stackoverflow.com/questions/6243051/how-to-pass-an-array-within-a-query-string):\n\n```\n?socialProfileIds=1234&socialProfileIds=5678\n```\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "The start date range of messages to be returned. In [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
            "required": true,
            "example": "2020-01-01T00:00:00Z",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "The end date range of messages to be returned. In [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format. Must not be later than 4 weeks from startTime.",
            "required": true,
            "example": "2020-01-15T17:55:01Z",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "A filter to return messages with in the matching state. Allowed values are PENDING_APPROVAL, REJECTED, SENT, SCHEDULED and SEND_FAILED_PERMANENTLY.",
            "required": false,
            "example": "SCHEDULED",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "socialProfileIds",
            "in": "query",
            "description": "A filter to return messages for certain social profiles.",
            "required": false,
            "example": "115185509",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of messages to be returned in the response. Defaults to 50 if not specified. Maximum allowable limit is 100.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor to a specific page in the result set. Defaults to the first page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUnscheduledReviewMsgs",
            "in": "query",
            "description": "Flag to retrieve unscheduled (Send Now) review messages on top of scheduled ones retrieved from time range query.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SocialProfileMessagesResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/messages/{messageId}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "operationId": "retrieveMessage",
        "summary": "Retrieve message",
        "description": "Retrieves a message. A message is always associated with a single social profile. Messages might be unavailable for a brief time during upload to social networks.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The message ID.",
            "required": true,
            "example": 4138476039,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SocialProfileMessageResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Messages"
        ],
        "operationId": "deleteMessage",
        "summary": "Delete message",
        "description": "Deletes a message. A message is always associated with a single social profile.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The message ID.",
            "required": true,
            "example": 4138476039,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyDataEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/messages/{messageId}/approve": {
      "post": {
        "tags": [
          "Messages"
        ],
        "operationId": "approveMessage",
        "summary": "Approve message",
        "description": "Approve a message.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The message ID.",
            "required": true,
            "example": 4138476039,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ApproveMessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyDataEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/messages/{messageId}/reject": {
      "post": {
        "tags": [
          "Messages"
        ],
        "operationId": "rejectMessage",
        "summary": "Reject message",
        "description": "Reject a message.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The message ID.",
            "required": true,
            "example": 4138476039,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/RejectMessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyDataEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/messages/{messageId}/history": {
      "get": {
        "tags": [
          "Messages"
        ],
        "operationId": "getMessageHistory",
        "summary": "Get message review history",
        "description": "Gets a message's prescreening review history.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The message ID.",
            "required": true,
            "example": 4138476039,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MessageReviewResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/comments/{commentId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "operationId": "retrieveComment",
        "summary": "Retrieve comment",
        "description": "Retrieves a comment if it's been through the approvals workflow.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "The comment ID.",
            "required": true,
            "example": 4138476039,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SocialProfileCommentResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/comments/{commentId}/approve": {
      "post": {
        "tags": [
          "Comments"
        ],
        "operationId": "approveComment",
        "summary": "Approve comment",
        "description": "Approve a comment.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "The comment ID.",
            "required": true,
            "example": 4138476039,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ApproveCommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyDataEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/comments/{commentId}/reject": {
      "post": {
        "tags": [
          "Comments"
        ],
        "operationId": "rejectComment",
        "summary": "Reject comment",
        "description": "Reject a comment.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "The comment ID.",
            "required": true,
            "example": 4138476039,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/RejectCommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyDataEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/media": {
      "post": {
        "tags": [
          "Media"
        ],
        "operationId": "createMedia",
        "summary": "Create media upload url",
        "description": "Creates an Amazon S3 upload URL that can be used to transfer media to Hootsuite which ensures the media is available when a scheduled message is sent to the social network.\nHootsuite will generate thumbnails and key frames and return a unique media identifier that can be passed when creating a message.\nSubsequent uploads to an upload URL will be accepted by Amazon but immediately deleted by Hootsuite and only the first valid media file uploaded will be used.\nThe MIME type and size provided in this call must match the MIME type and size of the media uploaded.\n\nHootsuite will remove uploaded media 90 days after using the media in a message.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/MediaUploadUrlRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MediaUploadUrlResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/media/{mediaId}": {
      "get": {
        "tags": [
          "Media"
        ],
        "operationId": "getMedia",
        "summary": "Retrieve media upload status",
        "description": "Retrieves the status of a media upload to Hootsuite.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "mediaId",
            "in": "path",
            "description": "The Media ID to retrieve",
            "required": true,
            "example": "aHR0cHM6Ly9ob290c3VpdGUtdmlkZW8uczMuYW1hem9uYXdzLmNvbS9wcm9kdWN0aW9uLzEyMjU1MjQ0XzgyOTVmZjllLWFkOWYtNGNlNy1iOGE3LTgwNzI0NDAwYTBhZS5tcDQ=",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MediaDownloadUrlResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/socialProfiles": {
      "get": {
        "tags": [
          "Social Profiles"
        ],
        "operationId": "getSocialProfiles",
        "summary": "Retrieve social profiles",
        "description": "Retrieves the social profiles that the authenticated user has access to.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SocialProfilesResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/socialProfiles/{socialProfileId}": {
      "get": {
        "tags": [
          "Social Profiles"
        ],
        "operationId": "getSocialProfile",
        "summary": "Retrieve social profile",
        "description": "Retrieve a social profile. Requires BASIC_USAGE permission on the social profile.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "socialProfileId",
            "in": "path",
            "description": "The social profile ID",
            "required": true,
            "example": 115185509,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SocialProfileResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/socialProfiles/{socialProfileId}/teams": {
      "get": {
        "tags": [
          "Social Profiles"
        ],
        "operationId": "getSocialProfileTeams",
        "summary": "Retrieve social profile's teams",
        "description": "Retrieves a list of team IDs with access to a social profile. Requires BASIC_USAGE permission on the social profile or ORG_MANAGE_SOCIAL_PROFILE permission on the organization that owns the social profile.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "socialProfileId",
            "in": "path",
            "description": "The social profile ID",
            "required": true,
            "example": 115185509,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SocialProfileTeamsResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Insufficient Permissions to View Profile)",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/members/{memberId}": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "retrieveMember",
        "summary": "Retrieve member",
        "description": "Retrieves a member",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/members": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "createMember",
        "summary": "Create member",
        "description": "Creates a member in a Hootsuite organization.  Requires organization manage members permission.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "operationId": "retrieveMe",
        "summary": "Retrieve authenticated member",
        "description": "Retrieves authenticated member.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/organizations": {
      "get": {
        "tags": [
          "Me"
        ],
        "operationId": "retrieveMeOrganizations",
        "summary": "Retrieve authenticated member's organizations",
        "description": "Retrieves the organizations that the authenticated member is in.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MemberOrganizationsResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/socialProfiles": {
      "get": {
        "tags": [
          "Me"
        ],
        "operationId": "getMySocialProfiles",
        "summary": "Retrieve authenticated member's social profiles",
        "description": "Retrieves the social media profiles that the authenticated user has BASIC_USAGE permissions on.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMemberSocialProfilesResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/members/{memberId}/organizations": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "retrieveMemberOrganizationsById",
        "summary": "Retrieve member's organizations",
        "description": "Retrieves the organizations that the member is in.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MemberOrganizationsResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/teams": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "operationId": "getOrganizationTeams",
        "summary": "Retrieve organization teams",
        "description": "Retrieves a list of teams for a given organization.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationTeamsResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (Insufficient permissions to view organization teams)",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teams"
        ],
        "operationId": "createTeam",
        "summary": "Create team",
        "description": "Creates a team in an organization.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/teams/{teamId}/members/{memberId}": {
      "post": {
        "tags": [
          "Teams"
        ],
        "operationId": "addMemberToTeam",
        "summary": "Add member to team",
        "description": "Adds a member to a team.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "The Team ID",
            "required": true,
            "example": 359493,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyDataEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/teams/{teamId}/members": {
      "get": {
        "tags": [
          "Teams"
        ],
        "operationId": "getTeamMembers",
        "summary": "Retrieve team members",
        "description": "Retrieves the members in a team.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "The Team ID",
            "required": true,
            "example": 359493,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMembersResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/members": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "operationId": "retrieveOrganizationMembers",
        "summary": "Retrieve organization members",
        "description": "Retrieves the members in an organization",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMembersResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/members/{memberId}": {
      "delete": {
        "tags": [
          "Organizations"
        ],
        "operationId": "removeMemberFromOrganization",
        "summary": "Remove member from organization",
        "description": "Removes a member from an organization.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyDataEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/members/{memberId}/permissions": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "operationId": "retrieveOrganizationMemberOrganizationPermissions",
        "summary": "Retrieve org member's organization permissions",
        "description": "Retrieves an organization member’s permissions for the organization.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMemberOrganizationPermissionsResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/members/{memberId}/teams": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "operationId": "retrieveOrganizationMembersTeams",
        "summary": "Retrieve org member's teams",
        "description": "Retrieves the teams an organization member is in.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMemberTeamsResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/teams/{teamId}/members/{memberId}/permissions": {
      "get": {
        "tags": [
          "Teams"
        ],
        "operationId": "retrieveOrganizationMembersTeamPermissions",
        "summary": "Retrieve team member's permissions",
        "description": "Retrieves team member's team permissions.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "The Team ID",
            "required": true,
            "example": 359493,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMemberTeamPermissionsResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/teams/{teamId}/socialProfiles": {
      "get": {
        "tags": [
          "Teams"
        ],
        "operationId": "retrieveOrganizationTeamsSocialProfiles",
        "summary": "Retrieve org team’s social profiles",
        "description": "Retrieves the organization's social profiles that an organization team can access.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "The Team ID",
            "required": true,
            "example": 359493,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationTeamSocialProfilesResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/members/{memberId}/socialProfiles": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "operationId": "retrieveOrganizationMembersSocialProfiles",
        "summary": "Retrieve org member’s social profiles",
        "description": "Retrieves the organization's social profiles that an organization member can access.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMemberSocialProfilesResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{organizationId}/members/{memberId}/socialProfiles/{socialProfileId}/permissions": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "operationId": "retrieveOrganizationSocialProfilePermissions",
        "summary": "Retrieve org member’s social profile permissions",
        "description": "Retrieves an organization member’s permissions for a social profile.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "The Organization ID",
            "required": true,
            "example": 626731,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "socialProfileId",
            "in": "path",
            "description": "The Social Profile ID",
            "required": true,
            "example": 115185509,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMemberSocialProfilePermissionsResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/{teamId}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "operationId": "getTeam",
        "summary": "Retrieve team",
        "description": "Retrieves a team with a given team ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "The Team ID",
            "required": true,
            "example": 359493,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponseEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (Insufficient permissions to view team)",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResponseEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/scim/v2/Users": {
      "post": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "createScimUser",
        "summary": "Create User",
        "description": "Creates a Hootsuite user using the SCIM 2.0 protocol.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateReplaceScimUser"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "getScimUsers",
        "summary": "Get Users",
        "description": "Retrieves Hootsuite users using the SCIM 2.0 protocol. Support equals filtering on username.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filtering by username.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The starting index for pagination.",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUsers"
                }
              }
            }
          }
        }
      }
    },
    "/scim/v2/Users/{memberId}": {
      "get": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "getScimUser",
        "summary": "Get User",
        "description": "Retrieves a Hootsuite user using the SCIM 2.0 protocol.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUser"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "replaceScimUser",
        "summary": "Replace User",
        "description": "Updates a Hootsuite user using the SCIM 2.0 protocol. To see the JSON object attributes required by the PUT endpoint, call the /Schemas endpoint. For a complete example request, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.1)",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The Member ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateReplaceScimUser"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "modifyScimUser",
        "summary": "Modify User",
        "description": "Modify one or more attributes of a Hootsuite user. For a complete example request, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The member ID",
            "required": true,
            "example": 1234567,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ScimPatchUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scim/v2/Groups": {
      "post": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "createScimGroup",
        "summary": "Create Group",
        "description": "Creates a Hootsuite team using the SCIM 2.0 protocol.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateReplaceScimGroup"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "getScimGroups",
        "summary": "Get Groups",
        "description": "Retrieves Hootsuite teams using the SCIM 2.0 protocol. Support equals filtering on displayName.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filtering by displayName.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The starting index for pagination.",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimGroups"
                }
              }
            }
          }
        }
      }
    },
    "/scim/v2/Groups/{groupId}": {
      "get": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "getScimGroup",
        "summary": "Get Group",
        "description": "Retrieves a Hootsuite team using the SCIM 2.0 protocol.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "The team Id",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "replaceScimGroup",
        "summary": "Replace Group",
        "description": "Updates a Hootsuite team using the SCIM 2.0 protocol. For a complete example request, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.1)",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "The Team ID",
            "required": true,
            "example": 15240789,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateReplaceScimGroup"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "modifyScimGroup",
        "summary": "Modify Group",
        "description": "Modify one or more attributes of a Hootsuite team. For a complete example request, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "The team Id",
            "required": true,
            "example": 1234567,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ScimPatchGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scim/v2/ResourceTypes": {
      "get": {
        "tags": [
          "SCIM 2.0"
        ],
        "operationId": "getScimResourceTypes",
        "summary": "Get Resource Types",
        "description": "Retrieves the configuration for all supported SCIM resource types",
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ScimResourceTypes"
                }
              }
            }
          }
        }
      }
    },
    "/v1/interactions/{socialNetworkType}": {
      "get": {
        "tags": [
          "Interactions"
        ],
        "summary": "Get Interactions",
        "description": "Retrieves the interactions between two users of a particular social network type such as direct messages, comments, and posts.\n\nThis API is only available to Enterprise users.\n",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InteractionsGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/bearerToken"
          },
          {
            "name": "socialNetworkType",
            "in": "path",
            "required": true,
            "description": "Valid options are `facebook` and `twitter`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "socialNetworkId",
            "in": "query",
            "required": true,
            "description": "ID of the user owned by the calling member or organization. This is the ID from the social network itself, not the Hootsuite social profile ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetSocialNetworkId",
            "in": "query",
            "required": true,
            "description": "ID of the user whose interactions with your social profile you are interested in. This is the ID from the social network itself, not the Hootsuite social profile ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Used for pagination.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results to retrieve. Defaults to 10.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://platform.hootsuite.com"
    }
  ],
  "components": {
    "parameters": {
      "bearerToken": {
        "in": "header",
        "name": "Authorization",
        "description": "A bearer token string used for authentication",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "CreateReplaceScimUser": {
        "content": {
          "application/json;charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/CreateReplaceScimUser"
            }
          }
        },
        "required": true
      },
      "CreateReplaceScimGroup": {
        "content": {
          "application/json;charset=utf-8": {
            "schema": {
              "$ref": "#/components/schemas/CreateReplaceScimGroup"
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://platform.hootsuite.com/oauth2/auth",
            "tokenUrl": "https://platform.hootsuite.com/oauth2/token",
            "scopes": {
              "offline": "Request refresh tokens"
            }
          }
        }
      },
      "Basic_Auth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "AnyValue": {},
      "DeleteMessageResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "The data response envelope.",
            "items": {
              "$ref": ""
            }
          }
        }
      },
      "SocialProfileMessagesResponseEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "The data response envelope.",
            "items": {
              "$ref": "#/components/schemas/SocialProfileMessage"
            }
          },
          "metadata": {
            "title": "metadata",
            "type": "object",
            "description": "The metadata response envelope.",
            "properties": {
              "cursor": {
                "title": "cursor",
                "type": "object",
                "description": "The cursor to paginate the results. A cursor will be created if the number of results exceeds the limit set in the query parameters.",
                "properties": {
                  "next": {
                    "type": "string",
                    "description": "A cursor to the next page of results. This is set to null if no more pages exist.",
                    "example": "1577887200000:4138476039:0"
                  },
                  "previous": {
                    "type": "string",
                    "description": "A cursor to the previous page of results. This is set to null if no previous pages exist.",
                    "example": "1577887200000:4138476039:1"
                  }
                }
              }
            }
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The message text to publish.",
            "example": "5 trends that will change how we use social media this year http://owl.li/YuNr2"
          },
          "socialProfileIds": {
            "type": "array",
            "description": "The social profiles that the message will be posted to.",
            "items": {
              "type": "string",
              "example": "115185509"
            }
          },
          "scheduledSendTime": {
            "type": "string",
            "description": "The time the message is scheduled to be sent in UTC time, [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format. Missing or different timezones will not be accepted, to ensure there is no ambiguity about scheduled time. Dates must end with 'Z' to be accepted.",
            "example": "2020-01-01T14:00:00Z"
          },
          "webhookUrls": {
            "type": "array",
            "description": "The webhook URL(s) to call to when the message’s state changes.",
            "items": {
              "type": "string",
              "example": "https://myserver.com/inbound"
            }
          },
          "tags": {
            "type": "array",
            "description": "The Hootsuite message tags to apply to the message. To set tags the social profile must belong to an organization. Tags are case sensitive. Limited permission members can only use the existing tags for organization and cannot create new ones. See more about message tags at the Hootsuite Help Center.<br/>Not supported by Pinterest.",
            "items": {
              "type": "string",
              "example": "test_tag"
            }
          },
          "targeting": {
            "$ref": "#/components/schemas/TargetingOptions"
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyOptions"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "emailNotification": {
            "type": "boolean",
            "description": "A flag to determine whether email notifications are sent when the message is published.",
            "example": true
          },
          "mediaUrls": {
            "type": "array",
            "description": "The ow.ly media to attach to the message",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "The media URL.",
                  "example": "http://static.ow.ly/photos/normal/cS5.jpg"
                }
              }
            }
          },
          "media": {
            "type": "array",
            "description": "The media to attach to the message",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The media ID.",
                  "example": "aHR0cDovL2V4YW1wbGUub3Jn"
                },
                "videoOptions": {
                  "type": "object",
                  "description": "The metadata to set for a video.",
                  "properties": {
                    "facebook": {
                      "type": "object",
                      "description": "Facebook video metadata. Optional.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The video title",
                          "example": "My Video"
                        },
                        "category": {
                          "type": "string",
                          "description": "The video category",
                          "example": "ENTERTAINMENT",
                          "enum": [
                            "BEAUTY_FASHION",
                            "BUSINESS",
                            "CARS_TRUCKS",
                            "COMEDY",
                            "CUTE_ANIMALS",
                            "ENTERTAINMENT",
                            "FAMILY",
                            "FOOD_HEALTH",
                            "HOME",
                            "LIFESTYLE",
                            "MUSIC",
                            "NEWS",
                            "POLITICS",
                            "SCIENCE",
                            "SPORTS",
                            "TECHNOLOGY",
                            "VIDEO_GAMING",
                            "OTHER"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "extendedInfo": {
            "type": "array",
            "description": "Object used to send social profile metadata. Only available for Pinterest messages at this time.",
            "items": {
              "type": "object",
              "properties": {
                "socialProfileType": {
                  "type": "string",
                  "description": "The social profile type that this extendedInfo object is for.",
                  "example": "PINTEREST",
                  "enum": [
                    "PINTEREST"
                  ]
                },
                "socialProfileId": {
                  "type": "string",
                  "description": "The social profile ID that this extendedInfo object is for.",
                  "example": "123456789"
                },
                "data": {
                  "type": "object",
                  "description": "Social profile specific metadata.",
                  "properties": {
                    "boardId": {
                      "type": "string",
                      "description": "Pinterest board ID for Pin",
                      "example": "123456789012345678"
                    },
                    "destinationUrl": {
                      "type": "string",
                      "description": "Website for Pin",
                      "example": "https://www.hootsuite.com"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SocialProfileMessageResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SocialProfileMessage"
          }
        },
        "description": "The response data wrapper for a social profile message"
      },
      "SocialProfileCommentResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SocialProfileComment"
          }
        },
        "description": "The response data wrapper for a social profile comment"
      },
      "SocialProfileComment": {
        "type": "object",
        "required": [
          "id",
          "reviewState"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "The comment text.",
            "example": "This is an example comment."
          },
          "createdDate": {
            "type": "string",
            "description": "The time the message is scheduled to be sent in UTC time, [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format. Missing or different timezones will not be accepted, to ensure there is no ambiguity about scheduled time. Dates must end with \"Z\" to be accepted.",
            "example": "2019-01-24T00:51:33.000Z"
          },
          "creatorId": {
            "type": "string",
            "description": "The author member ID.",
            "example": "12345"
          },
          "creatorName": {
            "type": "string",
            "description": "The author member name.",
            "example": "Joe Smith"
          },
          "id": {
            "type": "string",
            "description": "The comment ID.",
            "example": "4138476039"
          },
          "parentId": {
            "type": "string",
            "description": "The social network native ID of the parent post.",
            "example": "126123123_12314"
          },
          "parentType": {
            "type": "string",
            "description": "The parent content type.",
            "enum": [
              "POST",
              "COMMENT"
            ]
          },
          "reviewState": {
            "type": "string",
            "description": "The comment's current review state.",
            "enum": [
              "COMPLETED",
              "DELETED",
              "EXPIRED_APPROVAL",
              "FAILED",
              "PENDING_APPROVAL",
              "REJECTED"
            ]
          },
          "sequenceNumber": {
            "type": "number",
            "description": "The number representing which step in the approval process the message is on, or null if the comment is not subject to approval.",
            "example": 3
          },
          "socialProfileId": {
            "type": "string",
            "description": "The social profile that the comment will be published to.",
            "example": "12345"
          }
        }
      },
      "SocialProfileMessage": {
        "type": "object",
        "required": [
          "id",
          "state"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The message ID.",
            "example": "4138476039"
          },
          "state": {
            "type": "string",
            "description": "The message state.",
            "example": "SCHEDULED",
            "enum": [
              "SCHEDULED",
              "SUBMITTED",
              "PENDING_APPROVAL",
              "SENT",
              "SEND_FAILED_PERMANENTLY",
              "REJECTED"
            ]
          },
          "text": {
            "type": "string",
            "description": "The message text to publish.",
            "example": "5 trends that will change how we use social media this year http://owl.li/YuNr2"
          },
          "socialProfile": {
            "title": "socialProfileReference",
            "type": "object",
            "description": "The social profile that the message will be published to.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The social profile ID.",
                "example": "115185509"
              },
              "externalURL": {
                "type": "string",
                "description": "The external public URL of the social profile.",
                "example": "https://www.linkedin.com/in/l-lhs-8654321"
              }
            }
          },
          "scheduledSendTime": {
            "type": "string",
            "description": "The time the message is scheduled to be sent in UTC time, [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format. Missing or different timezones will not be accepted, to ensure there is no ambiguity about scheduled time. Dates must end with 'Z' to be accepted.",
            "example": "2018-10-25T10:35:00Z"
          },
          "webhookUrls": {
            "type": "array",
            "description": "The webhook URL(s) to call to when the message’s state changes.",
            "items": {
              "type": "string",
              "example": "https://myserver.com/inbound"
            }
          },
          "tags": {
            "type": "array",
            "description": "The Hootsuite message tags to apply to the message. To set tags the social profile must belong to an organization. Tags are case sensitive. Limited permission members can only use the existing tags for organization and cannot create new ones. See more about message tags at the Hootsuite Help Center.",
            "items": {
              "type": "string",
              "example": "test_tag"
            }
          },
          "targeting": {
            "title": "targetingOptions",
            "type": "object",
            "description": "Social network targeting options to be applied when publishing the message.",
            "properties": {
              "facebookPage": {
                "$ref": "#/components/schemas/FacebookPageTargeting"
              },
              "linkedInCompany": {
                "$ref": "#/components/schemas/LinkedInCompanyTargeting"
              }
            }
          },
          "privacy": {
            "title": "privacyOptions",
            "type": "object",
            "description": "Social network privacy options to be applied when publishing the message.",
            "properties": {
              "facebook": {
                "$ref": "#/components/schemas/FacebookPrivacy"
              },
              "linkedIn": {
                "$ref": "#/components/schemas/LinkedInPrivacy"
              }
            }
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "emailNotification": {
            "type": "boolean",
            "description": "A flag to determine whether email notifications are sent when the message is published.",
            "example": true
          },
          "mediaUrls": {
            "type": "array",
            "description": "The ow.ly media attached to the message",
            "items": {
              "$ref": "#/components/schemas/MediaUrl"
            }
          },
          "media": {
            "type": "array",
            "description": "The media attached to the message",
            "items": {
              "$ref": "#/components/schemas/Media"
            }
          },
          "extendedInfo": {
            "type": "array",
            "description": "Social profile metadata attached to the message. Only available for Pinterest messages at this time.",
            "items": {
              "type": "object",
              "properties": {
                "socialProfileType": {
                  "type": "string",
                  "description": "The social profile type that this extendedInfo object is for.",
                  "example": "PINTEREST",
                  "enum": [
                    "PINTEREST"
                  ]
                },
                "socialProfileId": {
                  "type": "string",
                  "description": "The social profile ID that this extendedInfo object is for.",
                  "example": "123456789"
                },
                "data": {
                  "type": "object",
                  "description": "Social profile specific meta data.",
                  "properties": {
                    "boardId": {
                      "type": "string",
                      "description": "Pinterest board ID for Pin",
                      "example": "123456789012345678"
                    },
                    "destinationUrl": {
                      "type": "string",
                      "description": "Website for Pin",
                      "example": "https://www.hootsuite.com"
                    }
                  }
                }
              }
            }
          },
          "postId": {
            "type": "string",
            "description": "The external message ID used by social network for this message. Only set once the message has been published.",
            "example": "705207140236001282"
          },
          "postUrl": {
            "type": "string",
            "description": "The URL of the message live on the social network. Only set once the message has been published. Only available for Facebook and LinkedIn messages at this time.",
            "example": "https://www.facebook.com/177463958820/posts/10155617296368821"
          },
          "createdByMember": {
            "title": "memberReference",
            "type": "object",
            "description": "The identifier of the member who originally created the message.",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of member.",
                "example": "1389211223"
              }
            }
          },
          "lastUpdatedByMember": {
            "title": "memberReference",
            "type": "object",
            "description": "The identifier of the member who last updated the message.",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of member.",
                "example": "1389211222"
              }
            }
          },
          "sequenceNumber": {
            "type": "number",
            "description": "The number representing which step in the approval process the message is on, or null if the message is not subject to approval.",
            "example": 3
          }
        }
      },
      "Location": {
        "description": "The message’s geolocation in decimal degrees for latitude and longitude. Twitter allows users to set the location for a post manually. The location object takes in Decimal Degrees for latitude and longitude. Decimal degrees are an alternative to using degrees, minutes, and seconds (DMS). The values for latitude and longitude are bounded by ±90° and ±180° respectively. Positive latitudes are north of the equator, negative latitudes are south of the equator. Positive longitudes are east of Prime Meridian, negative longitudes are west of the Prime Meridian.<br/>Not supported by Pinterest.",
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "The latitude in decimal degrees. Must be between -90 to 90.",
            "example": 57.64911
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "The longitude in decimal degrees. Must be between -180 to 180.",
            "example": 10.40744
          }
        }
      },
      "TargetingOptions": {
        "type": "object",
        "description": "Social network targeting options to be applied when publishing the message.",
        "properties": {
          "facebookPage": {
            "$ref": "#/components/schemas/FacebookPageTargeting"
          },
          "linkedInCompany": {
            "$ref": "#/components/schemas/LinkedInCompanyTargeting"
          }
        }
      },
      "FacebookPageTargeting": {
        "description": "Targeting options for Facebook Page. Note that recently Facebook has deprecated feed targeting fields `ageMax`, `genders`, and `locales`.",
        "type": "object",
        "properties": {
          "ageMin": {
            "type": "integer",
            "description": "Minimum age to target the message at. If used, must be value of 13, 17, 18, 19, 21.",
            "example": 45
          },
          "education": {
            "type": "array",
            "description": "Education level to target the message at.",
            "items": {
              "type": "string",
              "example": "collegeGrad",
              "enum": [
                "highSchool",
                "college",
                "collegeGrad"
              ]
            }
          },
          "interestedIn": {
            "type": "array",
            "description": "Interested in preferences to target the message at.",
            "items": {
              "type": "string",
              "example": "female",
              "enum": [
                "male",
                "female"
              ]
            }
          },
          "relationshipStatus": {
            "type": "array",
            "description": "Relationship status to target the message at.",
            "items": {
              "type": "string",
              "example": "single",
              "enum": [
                "single",
                "relationship",
                "married",
                "engaged"
              ]
            }
          },
          "countries": {
            "type": "array",
            "description": "Country to target the message at.",
            "items": {
              "type": "object",
              "properties": {
                "k": {
                  "type": "string",
                  "description": "The full name of the country being targeted.",
                  "example": "Canada"
                },
                "v": {
                  "type": "string",
                  "description": "The 2-digit ISO 3166 format code, as provided by Facebook.",
                  "example": "CA"
                }
              }
            }
          },
          "regions": {
            "type": "array",
            "description": "Region to target the message at. Note that regions can only be specified when there is exactly one country targeted. Limit 200.",
            "items": {
              "type": "object",
              "properties": {
                "k": {
                  "type": "string",
                  "description": "The full name of the region being targeted.",
                  "example": "British Columbia"
                },
                "v": {
                  "type": "string",
                  "description": "The region key, as provided by Facebook.",
                  "example": "2"
                }
              }
            }
          },
          "cities": {
            "type": "array",
            "description": "City to target the message at. Note that cities can only be specified when there is exactly one country targeted. Limit 250.",
            "items": {
              "type": "object",
              "properties": {
                "k": {
                  "type": "string",
                  "description": "The full name of the city being targeted.",
                  "example": "Burnaby, BC"
                },
                "v": {
                  "type": "string",
                  "description": "The city key, as provided by Facebook.",
                  "example": "292466"
                }
              }
            }
          },
          "zips": {
            "type": "array",
            "description": "Zip/Postal Code to target the message at. Limit 50,000.",
            "items": {
              "type": "object",
              "properties": {
                "k": {
                  "type": "string",
                  "description": "The name of the zip/postal code being targeted.",
                  "example": "K1S"
                },
                "v": {
                  "type": "string",
                  "description": "The zip/postal code key, as provided by Facebook.",
                  "example": "CA:K1S"
                }
              }
            }
          }
        }
      },
      "LinkedInCompanyTargeting": {
        "type": "object",
        "properties": {
          "companySize": {
            "type": "array",
            "description": "Company size to target the message at.\n\nself:             'Self employed'\n\n1-10:             '1 to 10 employees'\n\n11-50:            '11 to 50 employees'\n\n51-200:           '51 to 200 employees'\n\n201-500:          '201 to 500 employees'\n\n501-1000:         '501 to 1000 employees'\n\n1001-5000:        '1001 to 5000 employees'\n\n5001-10000:       '5001 to 10000 employees'\n\n10001:            '10001+ employees'\n",
            "items": {
              "type": "string",
              "example": "51-200"
            }
          },
          "geography": {
            "type": "array",
            "description": "Geography to target the message at.  Valid values:\n\naf:             'Africa'\n\naf.eg:          'Egypt'\n\naf.za:          'South Africa'\n\naq:             'Antarctica'\n\nas:             'Asia'\n\nas.cn:          'China'\n\nas.hk:          'Hong Kong'\n\nas.in:          'India'\n\nas.in.an:       'Andaman & Nicobar Islands'\n\nas.in.ap:       'Andhra Pradesh'\n\nas.in.ap.6508:  'Hyderabad Area, India'\n\nas.in.ar:       'Arunachal Pradesh'\n\nas.in.as:       'Assam'\n\nas.in.br:       'Bihar'\n\nas.in.ch:       'Chandigarh'\n\nas.in.cg:       'Chattisgarh'\n\nas.in.dn:       'Dadra & Nagar Haveli'\n\nas.in.dd:       'Daman & Diu'\n\nas.in.dl:       'Delhi'\n\nas.in.dl.7151:  'New Delhi Area, India'\n\nas.in.ga:       'Goa'\n\nas.in.gj:       'Gujarat'\n\nas.in.gj.7065:  'Ahmedabad Area, India'\n\nas.in.gj.6552:  'Vadodara Area, India'\n\nas.in.hr:       'Haryana'\n\nas.in.hr.7391:  'Gurgaon, India'\n\nas.in.hp:       'Himachal Pradesh'\n\nas.in.jk:       'Jammu & Kashmir'\n\nas.in.jh:       'Jharkhand'\n\nas.in.ka:       'Karnataka'\n\nas.in.ka.7127:  'Bengaluru Area, India'\n\nas.in.kl:       'Kerala'\n\nas.in.kl.6477:  'Cochin Area, India'\n\nas.in.ld:       'Lakshadweep'\n\nas.in.mp:       'Madhya Pradesh'\n\nas.in.mp.7382:  'Indore Area, India'\n\nas.in.mh:       'Maharashtra'\n\nas.in.mh.7150:  'Mumbai Area, India'\n\nas.in.mh.6751:  'Nagpur Area, India'\n\nas.in.mh.7350:  'Pune Area, India'\n\nas.in.mn:       'Manipur'\n\nas.in.ml:       'Meghalaya'\n\nas.in.mz:       'Mizoram'\n\nas.in.nl:       'Nagaland'\n\nas.in.or:       'Orissa'\n\nas.in.py:       'Pondicherry'\n\nas.in.pb:       'Punjab'\n\nas.in.pb.6879:  'Chandigarh Area, India'\n\nas.in.rj:       'Rajasthan'\n\nas.in.rj.7287:  'Jaipur Area, India'\n\nas.in.sk:       'Sikkim'\n\nas.in.tn:       'Tamil Nadu'\n\nas.in.tn.6891:  'Chennai Area, India'\n\nas.in.tn.6472:  'Coimbatore Area, India'\n\nas.in.tr:       'Tripura'\n\nas.in.up:       'Uttar Pradesh'\n\nas.in.up.7093:  'Lucknow Area, India'\n\nas.in.up.7392:  'Noida Area, India'\n\nas.in.ul:       'Uttarakhand'\n\nas.in.wb:       'West Bengal'\n\nas.in.wb.7003:  'Kolkata Area, India'\n\nas.id:          'Indonesia'\n\nas.jp:          'Japan'\n\nas.my:          'Malaysia'\n\nas.ph:          'Philippines'\n\nas.sg:          'Singapore'\n\nas.th:          'Thailand'\n\neu:             'Europe'\n\neu.be:          'Belgium'\n\neu.bg:          'Bulgaria'\n\neu.hr:          'Croatia'\n\neu.cz:          'Czech Republic'\n\neu.dk:          'Denmark'\n\neu.dk.*.5038:   'Copenhagen Area, Denmark'\n\neu.dk.*.5041:   'Odense Area, Denmark'\n\neu.dk.*.5044:   'Ålborg Area, Denmark'\n\neu.dk.*.5045:   'Århus Area, Denmark'\n\neu.fi:          'Finland'\n\neu.fr:          'France'\n\neu.fr.*.5205:   'Lille Area, France'\n\neu.fr.*.5210:   'Lyon Area, France'\n\neu.fr.*.5211:   'Marseille Area, France'\n\neu.fr.*.5221:   'Nice Area, France'\n\neu.fr.*.5227:   'Paris Area, France'\n\neu.fr.*.5249:   'Toulouse Area, France'\n\neu.de:          'Germany'\n\neu.gr:          'Greece'\n\neu.hu:          'Hungary'\n\neu.ie:          'Ireland'\n\neu.it:          'Italy'\n\neu.it.*.5587:   'Bologna Area, Italy'\n\neu.it.*.5616:   'Milan Area, Italy'\n\neu.it.*.5636:   'Rome Area, Italy'\n\neu.it.*.5652:   'Turin Area, Italy'\n\neu.it.*.5657:   'Venice Area, Italy'\n\n\neu.nl:          'Netherlands'\n\neu.nl.*.5663:   'Almere Stad Area, Netherlands'\n\neu.nl.*.5664:   'Amsterdam Area, Netherlands'\n\neu.nl.*.5665:   'Apeldoorn Area, Netherlands'\n\neu.nl.*.5906:   'Breda Area, Netherlands'\n\neu.nl.*.5668:   'Eindhoven Area, Netherlands'\n\neu.nl.*.5669:   'Enschede Area, Netherlands'\n\neu.nl.*.5673:   'Groningen Area, Netherlands'\n\neu.nl.*.7417:   'Maastricht Area, Netherlands'\n\neu.nl.*.5681:   'Nijmegen Area, Netherlands'\n\neu.nl.*.5908:   'Rotterdam Area, Netherlands'\n\neu.nl.*.5688:   'The Hague Area, Netherlands'\n\neu.nl.*.5907:   'Tilburg Area, Netherlands'\n\neu.nl.*.5690:   'Utrecht Area, Netherlands'\n\neu.no:          'Norway'\n\neu.pl:          'Poland'\n\neu.pt:          'Portugal'\n\neu.ro:          'Romania'\n\neu.ru:          'Russian Federation'\n\neu.es:          'Spain'\n\neu.se:          'Sweden'\n\neu.ch:          'Switzerland'\n\neu.tr:          'Turkey'\n\neu.ua:          'Ukraine'\n\neu.gb:          'United Kingdom'\n\neu.gb.*.4544:   'Birmingham, United Kingdom'\n\neu.gb.*.4550:   'Brighton, United Kingdom'\n\neu.gb.*.4552:   'Bristol, United Kingdom'\n\neu.gb.*.4555:   'Cambridge, United Kingdom'\n\neu.gb.*.4558:   'Chelmsford, United Kingdom'\n\neu.gb.*.4562:   'Coventry, United Kingdom'\n\neu.gb.*.4574:   'Edinburgh, United Kingdom'\n\neu.gb.*.4579:   'Glasgow, United Kingdom'\n\neu.gb.*.4580:   'Gloucester, United Kingdom'\n\neu.gb.*.4582:   'Guildford, United Kingdom'\n\neu.gb.*.4583:   'Harrow, United Kingdom'\n\neu.gb.*.4586:   'Hemel Hempstead, United Kingdom'\n\neu.gb.*.4597:   'Kingston upon Thames, United Kingdom'\n\neu.gb.*.4606:   'Leeds, United Kingdom'\n\neu.gb.*.4603:   'Leicester, United Kingdom'\n\neu.gb.*.4573:   'London, United Kingdom'\n\neu.gb.*.4608:   'Manchester, United Kingdom'\n\neu.gb.*.4610:   'Milton Keynes, United Kingdom'\n\neu.gb.*.4612:   'Newcastle upon Tyne, United Kingdom'\n\neu.gb.*.4614:   'Northampton, United Kingdom'\n\neu.gb.*.4613:   'Nottingham, United Kingdom'\n\neu.gb.*.4618:   'Oxford, United Kingdom'\n\neu.gb.*.4623:   'Portsmouth, United Kingdom'\n\neu.gb.*.4625:   'Reading, United Kingdom'\n\neu.gb.*.4626:   'Redhill, United Kingdom'\n\neu.gb.*.4628:   'Sheffield, United Kingdom'\n\neu.gb.*.4632:   'Slough, United Kingdom'\n\neu.gb.*.4635:   'Southampton, United Kingdom'\n\neu.gb.*.4644:   'Tonbridge, United Kingdom'\n\neu.gb.*.4648:   'Twickenham, United Kingdom'\n\nla:             'Latin America'\n\nla.ar:          'Argentina'\n\nla.br:          'Brazil'\n\nla.br.ac:       'Acre'\n\nla.br.al:       'Alagoas'\n\nla.br.ap:       'Amapá'\n\nla.br.am:       'Amazonas'\n\nla.br.ba:       'Bahia'\n\nla.br.ce:       'Ceará'\n\nla.br.df:       'Distrito Federal'\n\nla.br.es:       'Espírito Santo'\n\nla.br.go:       'Goiás'\n\nla.br.ma:       'Maranhão'\n\nla.br.mt:       'Mato Grosso'\n\nla.br.ms:       'Mato Grosso do Sul'\n\nla.br.mg:       'Minas Gerais'\n\nla.br.mg.6156:  'Belo Horizonte Area, Brazil'\n\nla.br.pr:       'Paraná'\n\nla.br.pr.6399:  'Curitiba Area, Brazil'\n\nla.br.pb:       'Paraíba'\n\nla.br.pa:       'Pará'\n\nla.br.pe:       'Pernambuco'\n\nla.br.pi:       'Piauí'\n\nla.br.rn:       'Rio Grande do Norte'\n\nla.br.rs:       'Rio Grande do Sul'\n\nla.br.rs.6467:  'Porto Alegre Area, Brazil'\n\nla.br.rj:       'Rio de Janeiro'\n\nla.br.rj.6034:  'Rio de Janeiro Area, Brazil'\n\nla.br.ro:       'Rondônia'\n\nla.br.rr:       'Roraima'\n\nla.br.sc:       'Santa Catarina'\n\nla.br.se:       'Sergipe'\n\nla.br.sp:       'São Paulo'\n\nla.br.sp.6104:  'Campinas Area, Brazil'\n\nla.br.sp.6368:  'São Paulo Area, Brazil'\n\nla.br.to:       'Tocantins'\n\nla.mx:          'Mexico'\n\nme:             'Middle East'\n\nme.bh:          'Bahrain'\n\nme.il:          'Israel'\n\nme.jo:          'Jordan'\n\nme.kw:          'Kuwait'\n\nme.pk:          'Pakistan'\n\nme.qa:          'Qatar'\n\nme.sa:          'Saudi Arabia'\n\nme.ae:          'United Arab Emirates'\n\nna:             'North America'\n\nna.ca:          'Canada'\n\nna.ca.ab:       'Alberta'\n\nna.ca.ab.4882:  'Calgary, Canada Area'\n\nna.ca.ab.4872:  'Edmonton, Canada Area'\n\nna.ca.bc:       'British Columbia'\n\nna.ca.bc.4873:  'British Columbia, Canada'\n\nna.ca.bc.4880:  'Vancouver, Canada Area'\n\nna.ca.mb:       'Manitoba'\n\nna.ca.nb:       'New Brunswick'\n\nna.ca.nl:       'Newfoundland And Labrador'\n\nna.ca.nt:       'Northwest Territories'\n\nna.ca.ns:       'Nova Scotia'\n\nna.ca.nu:       'Nunavut'\n\nna.ca.on:       'Ontario'\n\nna.ca.on.4865:  'Kitchener, Canada Area'\n\nna.ca.on.4869:  'London, Canada Area'\n\nna.ca.on.4864:  'Ontario, Canada'\n\nna.ca.on.4884:  'Ottawa, Canada Area'\n\nna.ca.on.4876:  'Toronto, Canada Area'\n\nna.ca.pe:       'Prince Edward Island'\n\nna.ca.qc:       'Quebec'\n\nna.ca.qc.4863:  'Montreal, Canada Area'\n\nna.ca.qc.4875:  'Quebec, Canada'\n\nna.ca.sk:       'Saskatchewan'\n\nna.ca.yt:       'Yukon'\n\nna.us:          'United States'\n\nna.us.al:       'Alabama'\n\nna.us.al.100:   'Birmingham, Alabama Area'\n\nna.us.al.344:   'Huntsville, Alabama Area'\n\nna.us.al.516:   'Mobile, Alabama Area'\n\nna.us.ak:       'Alaska'\n\nna.us.ak.38:    'Anchorage, Alaska Area'\n\nna.us.az:       'Arizona'\n\nna.us.az.620:   'Phoenix, Arizona Area'\n\nna.us.az.852:   'Tucson, Arizona Area'\n\nna.us.ar:       'Arkansas'\n\nna.us.ar.258:   'Fayetteville, Arkansas Area'\n\nna.us.ar.440:   'Little Rock, Arkansas Area'\n\nna.us.ca:       'California'\n\nna.us.ca.284:   'Fresno, California Area'\n\nna.us.ca.49:    'Greater Los Angeles Area'\n\nna.us.ca.732:   'Greater San Diego Area'\n\nna.us.ca.51:    'Orange County, California Area'\n\nna.us.ca.82:    'Sacramento, California Area'\n\nna.us.ca.712:   'Salinas, California Area'\n\nna.us.ca.84:    'San Francisco Bay Area'\n\nna.us.ca.748:   'Santa Barbara, California Area'\n\nna.us.ca.812:   'Stockton, California Area'\n\nna.us.co:       'Colorado'\n\nna.us.co.172:   'Colorado Springs, Colorado Area'\n\nna.us.co.267:   'Fort Collins, Colorado Area'\n\nna.us.co.34:    'Greater Denver Area'\n\nna.us.ct:       'Connecticut'\n\nna.us.ct.327:   'Hartford, Connecticut Area'\n\nna.us.ct.552:   'New London/Norwich, Connecticut Area'\n\nna.us.de:       'Delaware'\n\nna.us.dc:       'District Of Columbia'\n\nna.us.dc.97:    'Washington D.C. Metro Area'\n\nna.us.fl:       'Florida'\n\nna.us.fl.202:   'Daytona Beach, Florida Area'\n\nna.us.fl.270:   'Fort Myers, Florida Area'\n\nna.us.fl.271:   'Fort Pierce, Florida Area'\n\nna.us.fl.290:   'Gainesville, Florida Area'\n\nna.us.fl.359:   'Jacksonville, Florida Area'\n\nna.us.fl.398:   'Lakeland, Florida Area'\n\nna.us.fl.490:   'Melbourne, Florida Area'\n\nna.us.fl.56:    'Miami/Fort Lauderdale Area'\n\nna.us.fl.596:   'Orlando, Florida Area'\n\nna.us.fl.751:   'Sarasota, Florida Area'\n\nna.us.fl.824:   'Tallahassee, Florida Area'\n\nna.us.fl.828:   'Tampa/St. Petersburg, Florida Area'\n\nna.us.fl.896:   'West Palm Beach, Florida Area'\n\nna.us.ga:       'Georgia'\n\nna.us.ga.60:    'Augusta, Georgia Area'\n\nna.us.ga.52:    'Greater Atlanta Area'\n\nna.us.ga.752:   'Savannah, Georgia Area'\n\nna.us.hi:       'Hawaii'\n\nna.us.hi.332:   'Hawaiian Islands'\n\nna.us.id:       'Idaho'\n\nna.us.id.108:   'Boise, Idaho Area'\n\nna.us.il:       'Illinois'\n\nna.us.il.14:    'Greater Chicago Area'\n\nna.us.il.612:   'Peoria, Illinois Area'\n\nna.us.il.688:   'Rockford, Illinois Area'\n\nna.us.il.140:   'Urbana-Champaign, Illinois Area'\n\nna.us.in:       'Indiana'\n\nna.us.in.244:   'Evansville, Indiana Area'\n\nna.us.in.276:   'Fort Wayne, Indiana Area'\n\nna.us.in.348:   'Indianapolis, Indiana Area'\n\nna.us.ia:       'Iowa'\n\nna.us.ia.196:   'Davenport, Iowa Area'\n\nna.us.ia.212:   'Des Moines, Iowa Area'\n\nna.us.ks:       'Kansas'\n\nna.us.ks.904:   'Wichita, Kansas Area'\n\nna.us.ky:       'Kentucky'\n\nna.us.ky.428:   'Lexington, Kentucky Area'\n\nna.us.ky.452:   'Louisville, Kentucky Area'\n\nna.us.la:       'Louisiana'\n\nna.us.la.76:    'Baton Rouge, Louisiana Area'\n\nna.us.la.556:   'Greater New Orleans Area'\n\nna.us.me:       'Maine'\n\nna.us.me.640:   'Portland, Maine Area'\n\nna.us.md:       'Maryland'\n\nna.us.md.7416:  'Baltimore, Maryland Area'\n\nna.us.ma:       'Massachusetts'\n\nna.us.ma.7:     'Greater Boston Area'\n\nna.us.ma.800:   'Springfield, Massachusetts Area'\n\nna.us.mi:       'Michigan'\n\nna.us.mi.35:    'Greater Detroit Area'\n\nna.us.mi.300:   'Greater Grand Rapids, Michigan Area'\n\nna.us.mi.372:   'Kalamazoo, Michigan Area'\n\nna.us.mi.404:   'Lansing, Michigan Area'\n\nna.us.mi.696:   'Saginaw, Michigan Area'\n\nna.us.mn:       'Minnesota'\n\nna.us.mn.512:   'Greater Minneapolis-St. Paul Area'\n\nna.us.ms:       'Mississippi'\n\nna.us.ms.356:   'Jackson, Mississippi Area'\n\nna.us.mo:       'Missouri'\n\nna.us.mo.174:   'Columbia, Missouri Area'\n\nna.us.mo.704:   'Greater St. Louis Area'\n\nna.us.mo.376:   'Kansas City, Missouri Area'\n\nna.us.mo.792:   'Springfield, Missouri Area'\n\nna.us.mt:       'Montana'\n\nna.us.ne:       'Nebraska'\n\nna.us.ne.592:   'Greater Omaha Area'\n\nna.us.ne.436:   'Lincoln, Nebraska Area'\n\nna.us.nv:       'Nevada'\n\nna.us.nv.412:   'Las Vegas, Nevada Area'\n\nna.us.nv.672:   'Reno, Nevada Area'\n\nna.us.nh:       'New Hampshire'\n\nna.us.nj:       'New Jersey'\n\nna.us.nm:       'New Mexico'\n\nna.us.nm.20:    'Albuquerque, New Mexico Area'\n\nna.us.ny:       'New York'\n\nna.us.ny.16:    'Albany, New York Area'\n\nna.us.ny.128:   'Buffalo/Niagara, New York Area'\n\nna.us.ny.70:    'Greater New York City Area'\n\nna.us.ny.96:    'Ithaca, New York Area'\n\nna.us.ny.684:   'Rochester, New York Area'\n\nna.us.ny.816:   'Syracuse, New York Area'\n\nna.us.nc:       'North Carolina'\n\nna.us.nc.48:    'Asheville, North Carolina Area'\n\nna.us.nc.152:   'Charlotte, North Carolina Area'\n\nna.us.nc.312:   'Greensboro/Winston-Salem, North Carolina Area'\n\nna.us.nc.664:   'Raleigh-Durham, North Carolina Area'\n\nna.us.nc.920:   'Wilmington, North Carolina Area'\n\nna.us.nd:       'North Dakota'\n\nna.us.oh:       'Ohio'\n\nna.us.oh.21:    'Cincinnati Area'\n\nna.us.oh.28:    'Cleveland/Akron, Ohio Area'\n\nna.us.oh.184:   'Columbus, Ohio Area'\n\nna.us.oh.200:   'Dayton, Ohio Area'\n\nna.us.oh.840:   'Toledo, Ohio Area'\n\nna.us.ok:       'Oklahoma'\n\nna.us.ok.588:   'Oklahoma City, Oklahoma Area'\n\nna.us.ok.856:   'Tulsa, Oklahoma Area'\n\nna.us.or:       'Oregon'\n\nna.us.or.240:   'Eugene, Oregon Area'\n\nna.us.or.79:    'Portland, Oregon Area'\n\nna.us.pa:       'Pennsylvania'\n\nna.us.pa.24:    'Allentown, Pennsylvania Area'\n\nna.us.pa.77:    'Greater Philadelphia Area'\n\nna.us.pa.628:   'Greater Pittsburgh Area'\n\nna.us.pa.324:   'Harrisburg, Pennsylvania Area'\n\nna.us.pa.400:   'Lancaster, Pennsylvania Area'\n\nna.us.pa.756:   'Scranton, Pennsylvania Area'\n\nna.us.ri:       'Rhode Island'\n\nna.us.ri.648:   'Providence, Rhode Island Area'\n\nna.us.sc:       'South Carolina'\n\nna.us.sc.144:   'Charleston, South Carolina Area'\n\nna.us.sc.176:   'Columbia, South Carolina Area'\n\nna.us.sc.316:   'Greenville, South Carolina Area'\n\nna.us.sd:       'South Dakota'\n\nna.us.sd.776:   'Sioux Falls, South Dakota Area'\n\nna.us.tn:       'Tennessee'\n\nna.us.tn.156:   'Chattanooga, Tennessee Area'\n\nna.us.tn.492:   'Greater Memphis Area'\n\nna.us.tn.536:   'Greater Nashville Area'\n\nna.us.tn.366:   'Johnson City, Tennessee Area'\n\nna.us.tn.384:   'Knoxville, Tennessee Area'\n\nna.us.tx:       'Texas'\n\nna.us.tx.64:    'Austin, Texas Area'\n\nna.us.tx.31:    'Dallas/Fort Worth Area'\n\nna.us.tx.232:   'El Paso, Texas Area'\n\nna.us.tx.42:    'Houston, Texas Area'\n\nna.us.tx.724:   'San Antonio, Texas Area'\n\nna.us.ut:       'Utah'\n\nna.us.ut.716:   'Greater Salt Lake City Area'\n\nna.us.ut.652:   'Provo, Utah Area'\n\nna.us.vt:       'Vermont'\n\nna.us.vt.130:   'Burlington, Vermont Area'\n\nna.us.va:       'Virginia'\n\nna.us.va.154:   'Charlottesville, Virginia Area'\n\nna.us.va.572:   'Norfolk, Virginia Area'\n\nna.us.va.676:   'Richmond, Virginia Area'\n\nna.us.va.680:   'Roanoke, Virginia Area'\n\nna.us.wa:       'Washington'\n\nna.us.wa.91:    'Greater Seattle Area'\n\nna.us.wa.784:   'Spokane, Washington Area'\n\nna.us.wv:       'West Virginia'\n\nna.us.wi:       'Wisconsin'\n\nna.us.wi.63:    'Greater Milwaukee Area'\n\nna.us.wi.308:   'Green Bay, Wisconsin Area'\n\nna.us.wi.472:   'Madison, Wisconsin Area'\n\nna.us.wi.46:    'Oshkosh, Wisconsin Area'\n\nna.us.wy:       'Wyoming'\n\noc:             'Oceania'\n\noc.au:          'Australia'\n\noc.au.*.4886:   'Adelaide Area, Australia'\n\noc.au.*.4909:   'Brisbane Area, Australia'\n\noc.au.*.4893:   'Canberra Area, Australia'\n\noc.au.*.4900:   'Melbourne Area, Australia'\n\noc.au.*.4905:   'Perth Area, Australia'\n\noc.au.*.4910:   'Sydney Area, Australia'\n\noc.nz:          'New Zealand'\n",
            "items": {
              "type": "string",
              "example": "as.jp"
            }
          },
          "industry": {
            "type": "array",
            "description": "Industry to target the message at.\n\n63: 'Agriculture - Farming'\n\n64: 'Agriculture - Ranching'\n\n65: 'Agriculture - Dairy'\n\n66: 'Agriculture - Fishery'\n\n35: 'Arts - Motion Pictures and Film'\n\n37: 'Arts - Museums and Institutions'\n\n38: 'Arts - Fine Art'\n\n39: 'Arts - Performing Arts'\n\n99: 'Arts - Design'\n\n111: 'Arts - Arts and Crafts'\n\n115: 'Arts - Music'\n\n136: 'Arts - Photography'\n\n140: 'Arts - Graphic Design'\n\n48: 'Construction - Construction'\n\n49: 'Construction - Building Materials'\n\n50: 'Construction - Architecture & Planning'\n\n51: 'Construction - Civil Engineering'\n\n18: 'Consumer Goods - Cosmetics'\n\n19: 'Consumer Goods - Apparel & Fashion'\n\n20: 'Consumer Goods - Sporting Goods'\n\n21: 'Consumer Goods - Tobacco'\n\n22: 'Consumer Goods - Supermarkets'\n\n23: 'Consumer Goods - Food Production'\n\n24: 'Consumer Goods - Consumer Electronics'\n\n25: 'Consumer Goods - Consumer Goods'\n\n26: 'Consumer Goods - Furniture'\n\n27: 'Consumer Goods - Retail'\n\n133: 'Consumer Goods - Wholesale'\n\n134: 'Consumer Goods - Import and Export'\n\n142: 'Consumer Goods - Wine and Spirits'\n\n143: 'Consumer Goods - Luxury Goods & Jewelry'\n\n11: 'Corporate - Management Consulting'\n\n80: 'Corporate - Marketing and Advertising'\n\n97: 'Corporate - Market Research'\n\n98: 'Corporate - Public Relations and Communications'\n\n104: 'Corporate - Staffing and Recruiting'\n\n105: 'Corporate - Professional Training & Coaching'\n\n121: 'Corporate - Security and Investigations'\n\n122: 'Corporate - Facilities Services'\n\n123: 'Corporate - Outsourcing/Offshoring'\n\n137: 'Corporate - Human Resources'\n\n138: 'Corporate - Business Supplies and Equipment'\n\n67: 'Educational - Primary/Secondary Education'\n\n68: 'Educational - Higher Education'\n\n69: 'Educational - Education Management'\n\n70: 'Educational - Research'\n\n132: 'Educational - E-Learning'\n\n41: 'Finance - Banking'\n\n42: 'Finance - Insurance'\n\n43: 'Finance - Financial Services'\n\n44: 'Finance - Real Estate'\n\n45: 'Finance - Investment Banking'\n\n46: 'Finance - Investment Management'\n\n47: 'Finance - Accounting'\n\n106: 'Finance - Venture Capital & Private Equity'\n\n128: 'Finance - Commercial Real Estate'\n\n129: 'Finance - Capital Markets'\n\n71: 'Government - Military'\n\n72: 'Government - Legislative Office'\n\n73: 'Government - Judiciary'\n\n74: 'Government - International Affairs'\n\n75: 'Government - Government Administration'\n\n76: 'Government - Executive Office'\n\n77: 'Government - Law Enforcement'\n\n78: 'Government - Public Safety'\n\n79: 'Government - Public Policy'\n\n107: 'Government - Political Organization'\n\n148: 'Government - Government Relations'\n\n1:  'High Tech - Defense & Space'\n\n3:  'High Tech - Computer Hardware'\n\n4:  'High Tech - Computer Software'\n\n5:  'High Tech - Computer Networking'\n\n6:  'High Tech - Internet'\n\n7:  'High Tech - Semiconductors'\n\n8:  'High Tech - Telecommunications'\n\n96: 'High Tech - Information Technology and Services'\n\n114: 'High Tech - Nanotechnology'\n\n118: 'High Tech - Computer & Network Security'\n\n119: 'High Tech - Wireless'\n\n9:  'Legal - Law Practice'\n\n10: 'Legal - Legal Services'\n\n120: 'Legal - Alternative Dispute Resolution'\n\n52: 'Manufacturing - Aviation & Aerospace'\n\n53: 'Manufacturing - Automotive'\n\n54: 'Manufacturing - Chemicals'\n\n55: 'Manufacturing - Machinery'\n\n56: 'Manufacturing - Mining & Metals'\n\n57: 'Manufacturing - Oil & Energy'\n\n58: 'Manufacturing - Shipbuilding'\n\n59: 'Manufacturing - Utilities'\n\n60: 'Manufacturing - Textiles'\n\n61: 'Manufacturing - Paper & Forest Products'\n\n62: 'Manufacturing - Railroad Manufacture'\n\n112: 'Manufacturing - Electrical/Electronic Manufacturing'\n\n117: 'Manufacturing - Plastics'\n\n135: 'Manufacturing - Mechanical or Industrial Engineering'\n\n144: 'Manufacturing - Renewables & Environment'\n\n145: 'Manufacturing - Glass, Ceramics & Concrete'\n\n146: 'Manufacturing - Packaging and Containers'\n\n147: 'Manufacturing - Industrial Automation'\n\n36: 'Media - Broadcast Media'\n\n81: 'Media - Newspapers'\n\n82: 'Media - Publishing'\n\n83: 'Media - Printing'\n\n103: 'Media - Writing and Editing'\n\n113: 'Media - Online Media'\n\n126: 'Media - Media Production'\n\n127: 'Media - Animation'\n\n12: 'Medical - Biotechnology'\n\n13: 'Medical - Medical Practice'\n\n14: 'Medical - Hospital & Health Care'\n\n15: 'Medical - Pharmaceuticals'\n\n16: 'Medical - Veterinary'\n\n17: 'Medical - Medical Devices'\n\n124: 'Medical - Health, Wellness and Fitness'\n\n125: 'Medical - Alternative Medicine'\n\n139: 'Medical - Mental Health Care'\n\n91: 'Non-profit - Consumer Services'\n\n100: 'Non-profit - Non-profit Organization Management'\n\n101: 'Non-profit - Fund-Raising'\n\n102: 'Non-profit - Program Development'\n\n130: 'Non-profit - Think Tanks'\n\n131: 'Non-profit - Philanthropy'\n\n141: 'Non-profit - International Trade and Development'\n\n28: 'Recreational - Entertainment'\n\n29: 'Recreational - Gambling & Casinos'\n\n30: 'Recreational - Leisure, Travel & Tourism'\n\n31: 'Recreational - Hospitality'\n\n32: 'Recreational - Restaurants'\n\n33: 'Recreational - Sports'\n\n34: 'Recreational - Food & Beverages'\n\n40: 'Recreational - Recreational Facilities and Services'\n\n109: 'Recreational - Computer Games'\n\n110: 'Recreational - Events Services'\n\n84: 'Service - Information Services'\n\n85: 'Service - Libraries'\n\n86: 'Service - Environmental Services'\n\n88: 'Service - Individual & Family Services'\n\n89: 'Service - Religious Institutions'\n\n90: 'Service - Civic & Social Organization'\n\n108: 'Service - Translation and Localization'\n\n87: 'Transportation - Package/Freight Delivery'\n\n92: 'Transportation - Transportation/Trucking/Railroad'\n\n93: 'Transportation - Warehousing'\n\n94: 'Transportation - Airlines/Aviation'\n\n95: 'Transportation - Maritime'\n\n116: 'Transportation - Logistics and Supply Chain'\n",
            "items": {
              "type": "string",
              "example": "41"
            }
          },
          "jobFunction": {
            "type": "array",
            "description": "Job function to target the message at.\n\nacad: 'Research'\n\nacct: 'Accounting'\n\nadmn: 'Administrative'\n\nbd:   'Business Development'\n\nbuy:  'Purchasing'\n\ncnsl: 'Consulting'\n\ncre:  'Arts and Design'\n\ncss:  'Community and Social Services'\n\nedu:  'Education'\n\neng:  'Engineering'\n\nent:  'Entrepreneurship'\n\nfinc: 'Finance'\n\nhr:   'Human Resources'\n\nit:   'Information Technology'\n\nlgl:  'Legal'\n\nmed:  'Healthcare Services'\n\nmktg: 'Marketing'\n\nmps:  'Military and Protective Services'\n\nops:  'Operations'\n\nppm:  'Program and Project Management'\n\npr:   'Media and Communication'\n\nprod: 'Product Management'\n\nqa:   'Quality Assurance'\n\nre:   'Real Estate'\n\nsale: 'Sales'\n\nsupp: 'Support'\n",
            "items": {
              "type": "string",
              "example": "qa"
            }
          },
          "seniority": {
            "type": "array",
            "description": "Seniority to target the message at.\n\nc:  'Chief X Officer'\n\nd:  'Director'\n\nen: 'Entry'\n\nic: 'Senior'\n\nm:  'Manager'\n\no:  'Owner'\n\np:  'Partner'\n\ntr: 'Training'\n\nup: 'Unpaid'\n\nvp: 'Vice President'\n",
            "items": {
              "type": "string",
              "example": "en"
            }
          }
        }
      },
      "PrivacyOptions": {
        "type": "object",
        "description": "Social network privacy options to be applied when publishing the message.",
        "properties": {
          "facebook": {
            "$ref": "#/components/schemas/FacebookPrivacy"
          },
          "linkedIn": {
            "$ref": "#/components/schemas/LinkedInPrivacy"
          }
        }
      },
      "FacebookPrivacy": {
        "type": "object",
        "properties": {
          "visibility": {
            "type": "array",
            "description": "Facebook visibility rules. At most 1 can be used.",
            "items": {
              "type": "string",
              "example": "everyone",
              "enum": [
                "everyone",
                "friends",
                "friendsOfFriends"
              ]
            }
          }
        }
      },
      "LinkedInPrivacy": {
        "type": "object",
        "properties": {
          "visibility": {
            "type": "array",
            "description": "LinkedIn visibility rules. At most 1 can be used.",
            "items": {
              "type": "string",
              "example": "anyone",
              "enum": [
                "anyone",
                "connectionsOnly"
              ]
            }
          }
        }
      },
      "MediaUrl": {
        "type": "object",
        "properties": {
          "thumbnailUrl": {
            "type": "string",
            "description": "The thumbnail media URL.",
            "example": "http://static.ow.ly/photos/thumb/cS5.jpg"
          },
          "url": {
            "type": "string",
            "description": "The media URL.",
            "example": "http://static.ow.ly/photos/normal/cS5.jpg"
          }
        },
        "description": "An ow.ly media URL."
      },
      "Media": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The media ID.",
            "example": "aHR0cDovL2V4YW1wbGUub3Jn"
          },
          "thumbnailId": {
            "type": "string",
            "description": "The thumbnail media ID.",
            "example": "aHR0cDovL2V4YW1wbGUtMDAwMS5vcmc="
          },
          "videoOptions": {
            "type": "object",
            "description": "The metadata to set for a video.",
            "properties": {
              "facebook": {
                "type": "object",
                "description": "Facebook video metadata. Optional.",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The video title",
                    "example": "My Video"
                  },
                  "category": {
                    "type": "string",
                    "description": "The video category",
                    "example": "ENTERTAINMENT",
                    "enum": [
                      "BEAUTY_FASHION",
                      "BUSINESS",
                      "CARS_TRUCKS",
                      "COMEDY",
                      "CUTE_ANIMALS",
                      "ENTERTAINMENT",
                      "FAMILY",
                      "FOOD_HEALTH",
                      "HOME",
                      "LIFESTYLE",
                      "MUSIC",
                      "NEWS",
                      "POLITICS",
                      "SCIENCE",
                      "SPORTS",
                      "TECHNOLOGY",
                      "VIDEO_GAMING",
                      "OTHER"
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "The media attached to the message."
      },
      "SocialProfilesResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialProfile"
            }
          }
        },
        "description": "The response data wrapper for a social profile."
      },
      "SocialProfileResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SocialProfile"
          }
        },
        "description": "The response data wrapper for a social profile."
      },
      "SocialProfileTeamsResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamId"
            }
          }
        },
        "description": "The response data wrapper for a team."
      },
      "SocialProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The social profile ID.",
            "example": "115185509"
          },
          "type": {
            "type": "string",
            "description": "The social network the profile belongs to.",
            "example": "FACEBOOK"
          },
          "socialNetworkId": {
            "type": "string",
            "description": "The ID for user on the social network.",
            "example": "1261768027866378"
          },
          "socialNetworkUsername": {
            "type": "string",
            "description": "The username used on the social network. This field will be **null** if the social network type is *TWITTER*.",
            "example": "Pammy The Dog"
          },
          "avatarUrl": {
            "type": "string",
            "description": "Link to the avatar used by user on the social network (if present). This field will be **null** if the social network type is *TWITTER*.",
            "example": "https://scontent.xx.fbcdn.net/v/t1.0-1/c59.0.200.200/p300x500/10354686_10151114552801856_220324501106153455_n.jpg?oh=375abcd2474f9fe943242bfe9c313bc2&oe=590D5D25\""
          },
          "owner": {
            "type": "string",
            "description": "Key representing who owns this profile the member or the organization the member is a part of.",
            "example": "MEMBER",
            "enum": [
              "MEMBER",
              "ORGANIZATION"
            ]
          },
          "ownerId": {
            "type": "string",
            "description": "The owner ID. Either a member ID or an organization ID.",
            "example": "2147516921"
          }
        }
      },
      "TeamId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The team ID.",
            "example": "1998554224"
          }
        }
      },
      "MediaUploadUrlResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MediaUploadUrl"
          }
        },
        "description": "The response data wrapper for a Media Upload Url."
      },
      "MediaDownloadUrlResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MediaDownloadUrl"
          }
        },
        "description": "The response data wrapper for a Media Download Url."
      },
      "MediaUploadUrlRequest": {
        "type": "object",
        "properties": {
          "sizeBytes": {
            "type": "integer",
            "description": "Size in bytes of the media file to be uploaded.",
            "example": 383631
          },
          "mimeType": {
            "type": "string",
            "description": "MIME type of the media to be uploaded. Supported media types are video/mp4, image/gif, image/jpeg, image/jpg, image/png.",
            "example": "video/mp4"
          }
        }
      },
      "MediaUploadUrl": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The media identifier.",
            "example": "aHR0cHM6Ly9ob290c3VpdGUtdmlkZW8uczMuYW1hem9uYXdzLmNvbS9wcm9kdWN0aW9uLzEyMjU1MjQ0XzgyOTVmZjllLWFkOWYtNGNlNy1iOGE3LTgwNzI0NDAwYTBhZS5tcDQ="
          },
          "uploadUrl": {
            "type": "string",
            "description": "An S3 URL to upload media to Hootsuite.",
            "example": "https://hootsuite-video.s3.amazonaws.com/production/12255244_01942650-3d42-42b8-a191-aa84eb45d105.mp4?AWSAccessKeyId=AKIAIM7ASX2JTE3ZFAAA&Expires=1471978770&Signature=b%2B196oEHxySdmE%2FC34ZRL6pXSAI%3D"
          },
          "uploadUrlDurationSeconds": {
            "type": "integer",
            "description": "The number of seconds until the upload url is no longer valid.",
            "example": 1799
          }
        }
      },
      "MediaDownloadUrl": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The media identifier.",
            "example": "aHR0cHM6Ly9ob290c3VpdGUtdmlkZW8uczMuYW1hem9uYXdzLmNvbS9wcm9kdWN0aW9uLzEyMjU1MjQ0XzgyOTVmZjllLWFkOWYtNGNlNy1iOGE3LTgwNzI0NDAwYTBhZS5tcDQ="
          },
          "state": {
            "type": "string",
            "description": "The state of the uploaded media. This is used to determine whether the media has been processed by Hootsuite and is ready to attach to a message.",
            "example": "READY",
            "enum": [
              "READY",
              "QUEUED"
            ]
          },
          "downloadUrl": {
            "type": "string",
            "description": "An S3 URL to download the media from Hootsuite. This is only available after the media has been processed",
            "example": "https://hootsuiteapis.s3-us-east-1.amazonaws.com/2147563588/5eb2d61a-1812-44d9-b1b2-a475d4238daf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIALK18ASHK1AS9DGAS%2F20160418%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20160418T215337Z&X-Amz-Expires=21&X-Amz-SignedHeaders=host&X-Amz-Signature=ea25ef6b4dabad49ec8a9cf0da2a227219222065f15a38dde2955312e2f1501d"
          },
          "downloadUrlDurationSeconds": {
            "type": "integer",
            "description": "The number of seconds until the download url is no longer valid. This is only available after the media has been processed",
            "example": 1799
          }
        }
      },
      "MemberResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Member"
          }
        }
      },
      "CreateMemberRequest": {
        "type": "object",
        "required": [
          "email",
          "fullName",
          "organizationIds"
        ],
        "properties": {
          "organizationIds": {
            "type": "array",
            "description": "The organizations the member should be added to.",
            "items": {
              "type": "integer",
              "example": "626731"
            }
          },
          "email": {
            "type": "string",
            "description": "The member’s email.",
            "example": "jsmith@test.com"
          },
          "fullName": {
            "type": "string",
            "description": "The member’s name.",
            "example": "Joe Smith"
          },
          "companyName": {
            "type": "string",
            "description": "The member’s company name.",
            "example": "Hootsuite"
          },
          "bio": {
            "type": "string",
            "description": "The member’s bio.",
            "example": "I am Joe Smith"
          },
          "timezone": {
            "type": "string",
            "description": "The member's time zone. If not provided it will default to “America/Vancouver”. Valid values are defined at http://php.net/manual/en/timezones.php.",
            "example": "America/Vancouver"
          },
          "language": {
            "type": "string",
            "description": "The member’s language.",
            "example": "en",
            "enum": [
              "en",
              "ja",
              "fr",
              "it",
              "es",
              "de",
              "pt_BR",
              "pl",
              "id",
              "zh_CN",
              "zh_HK",
              "zh_TW",
              "nl",
              "ko",
              "ar",
              "ru",
              "th",
              "tr"
            ]
          }
        }
      },
      "Member": {
        "type": "object",
        "required": [
          "email",
          "fullName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The member ID.",
            "example": "15240789"
          },
          "email": {
            "type": "string",
            "description": "The member’s email.",
            "example": "jsmith@test.com"
          },
          "isActive": {
            "type": "boolean",
            "description": "A flag indicating if the member is active.",
            "example": true
          },
          "createdDate": {
            "type": "string",
            "description": "The date the member's account was created.",
            "example": "2013-05-29T13:27:24Z"
          },
          "modifiedDate": {
            "type": "string",
            "description": "The date the member's account was last modified.",
            "example": "2013-05-29T13:27:24Z"
          },
          "fullName": {
            "type": "string",
            "description": "The member’s name.",
            "example": "Joe Smith"
          },
          "companyName": {
            "type": "string",
            "description": "The member’s company name.",
            "example": "Hootsuite"
          },
          "bio": {
            "type": "string",
            "description": "The member’s bio.",
            "example": "I am Joe Smith"
          },
          "timezone": {
            "type": "string",
            "description": "The member’s time zone. Valid values are defined at http://php.net/manual/en/timezones.php.",
            "example": "America/Vancouver"
          },
          "language": {
            "type": "string",
            "description": "The member’s language.",
            "example": "en",
            "enum": [
              "en",
              "ja",
              "fr",
              "it",
              "es",
              "de",
              "pt_BR",
              "pl",
              "id",
              "zh_CN",
              "zh_HK",
              "zh_TW",
              "nl",
              "ko",
              "ar",
              "ru",
              "th",
              "tr"
            ]
          }
        }
      },
      "TeamMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The member ID.",
            "example": "15240789"
          }
        }
      },
      "TeamResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Team"
          }
        }
      },
      "CreateTeamRequest": {
        "type": "object",
        "required": [
          "teamName"
        ],
        "properties": {
          "teamName": {
            "type": "string",
            "description": "The team name.",
            "example": "North America Support Team"
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The team ID.",
            "example": "359493"
          },
          "name": {
            "type": "string",
            "description": "The team name.",
            "example": "North America Support Team"
          },
          "logoUrl": {
            "type": "string",
            "description": "The team's logo URL.",
            "example": "http://ow.ly/i/logo.png"
          },
          "createdDate": {
            "type": "string",
            "description": "The date the team was created.",
            "example": "2016-01-14T16:27:40Z"
          },
          "createdByMember": {
            "type": "object",
            "description": "The member who created the team.",
            "title": "MemberReference",
            "properties": {
              "id": {
                "type": "string",
                "description": "The member ID.",
                "example": "13892119232"
              }
            }
          },
          "modifiedDate": {
            "type": "string",
            "description": "The date the team was last modified.",
            "example": "2016-01-14T16:27:40Z"
          },
          "modifiedByMember": {
            "type": "object",
            "description": "The member who last modified the team.",
            "title": "MemberReference",
            "properties": {
              "id": {
                "type": "string",
                "description": "The member ID.",
                "example": "13892119232"
              }
            }
          }
        }
      },
      "MessageReviewResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Actions"
          }
        }
      },
      "Actions": {
        "type": "object",
        "description": "An array of the review actions performed on the message.",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewAction"
            }
          }
        }
      },
      "ReviewAction": {
        "type": "object",
        "properties": {
          "actorType": {
            "type": "string",
            "description": "The type of actor who performed this review action.",
            "example": "MEMBER",
            "enum": [
              "MEMBER",
              "SYSTEM",
              "EXTERNAL_REVIEW_V1"
            ]
          },
          "actorId": {
            "type": "string",
            "description": "The ID of the actor that performed this review action.",
            "example": "12345678"
          },
          "actionType": {
            "type": "string",
            "description": "The action performed.",
            "example": "CREATE",
            "enum": [
              "CREATE",
              "APPROVE",
              "REJECT",
              "DELETE",
              "RESET",
              "EDIT",
              "EXPIRE",
              "SEND",
              "SCHEDULE",
              "SENDFAIL",
              "SCHEDULEFAIL"
            ]
          },
          "timestamp": {
            "type": "string",
            "description": "The time the review action was performed. Timezone is UTC.",
            "example": "2017-02-15T18:51:13.000Z"
          }
        }
      },
      "EmptyDataEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "description": "The data response envelope.",
            "type": "object"
          }
        }
      },
      "ErrorsResponseEnvelope": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "The errors response envelope.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ScimErrorResponse": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:api:messages:2.0:Error"
            }
          },
          "status": {
            "type": "string",
            "example": "400"
          },
          "detail": {
            "type": "string",
            "example": "A required value was missing, or the value specified was not compatible with the operation or attribute type."
          },
          "scimType": {
            "type": "string",
            "description": "(optional) The SCIM error type",
            "example": "invalidValue",
            "enum": [
              "invalidSyntax",
              "mutability",
              "invalidValue",
              "uniqueness"
            ]
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "description": "An error code indicating the type of error that occurred.",
            "example": 1234
          },
          "message": {
            "type": "string",
            "description": "A description of error.",
            "example": "An error message"
          },
          "id": {
            "type": "string",
            "description": "A unique error id for tracing purposes",
            "example": "f7d32670-4e6a-48c0-a2a7-87803536a712"
          },
          "resource": {
            "type": "object",
            "description": "A reference to the resource in error",
            "title": "ResourceReference",
            "properties": {
              "type": {
                "type": "string",
                "description": "The resource type.",
                "example": "socialProfile"
              },
              "id": {
                "type": "string",
                "description": "The resource ID.",
                "example": "7534653235"
              }
            }
          }
        }
      },
      "ScimUsers": {
        "type": "object",
        "description": "",
        "properties": {
          "Resources": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/ScimUser"
            }
          },
          "totalResults": {
            "type": "number",
            "description": "The total number of users found",
            "example": 8
          },
          "startIndex": {
            "type": "number",
            "description": "The current offset used for result paging",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "description": "The page size used for paging",
            "example": 10
          },
          "schemas": {
            "type": "array",
            "description": "",
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            }
          }
        }
      },
      "ScimPatchUser": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "description": "Must contain the URI value of \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"",
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:api:messages:2.0:PatchOp"
            }
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScimPatchUserOperation"
            }
          }
        }
      },
      "ScimPatchUserOperation": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to perform: can be `add`, `replace` or `remove`",
            "example": "replace"
          },
          "path": {
            "type": "string",
            "description": "Contains an attribute path describing the target of the operation. OPTIONAL for `add` and `replace`",
            "example": "emails[type eq \"work\"]"
          },
          "value": {
            "type": "object",
            "example": "new_value",
            "description": "New value if add/replace, or name of target for remove",
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnyValue"
              }
            ]
          }
        }
      },
      "ScimSchemas": {
        "type": "array",
        "description": "Required SCIM schemas",
        "items": {
          "type": "string"
        },
        "example": [
          "urn:ietf:params:scim:schemas:core:2.0:User"
        ]
      },
      "CreateReplaceScimUser": {
        "type": "object",
        "required": [
          "displayName",
          "userName",
          "active"
        ],
        "properties": {
          "schemas": {
            "$ref": "#/components/schemas/ScimSchemas"
          },
          "userName": {
            "type": "string",
            "description": "",
            "example": "joe.smith@hootsuite.com"
          },
          "name": {
            "type": "object",
            "description": "",
            "properties": {
              "givenName": {
                "type": "string",
                "description": "",
                "example": "joe.smith"
              },
              "familyName": {
                "type": "string",
                "description": "",
                "example": "joe.smith"
              }
            }
          },
          "emails": {
            "type": "array",
            "description": "",
            "items": {
              "required": [
                "primary"
              ],
              "type": "object",
              "description": "",
              "properties": {
                "primary": {
                  "type": "boolean",
                  "description": "",
                  "example": true
                },
                "value": {
                  "type": "string",
                  "description": "",
                  "example": "joe.smith@hootsuite.com"
                },
                "type": {
                  "type": "string",
                  "description": "",
                  "example": "work"
                }
              }
            }
          },
          "displayName": {
            "type": "string",
            "description": "",
            "example": "Joe Smith"
          },
          "timezone": {
            "type": "string",
            "description": "The user's time zone. If not provided it will default to \"America/Vancouver\". Valid values are defined at http://php.net/manual/en/timezones.php.",
            "example": "America/Vancouver"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "The user's language.",
            "example": "en",
            "enum": [
              "en",
              "ja",
              "fr",
              "it",
              "es",
              "de",
              "pt_BR",
              "pl",
              "id",
              "zh_CN",
              "zh_HK",
              "zh_TW",
              "nl",
              "ko",
              "ar",
              "ru",
              "th",
              "tr"
            ]
          },
          "title": {
            "type": "string",
            "description": "",
            "example": "Manager"
          },
          "groups": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/GroupRef"
            }
          },
          "active": {
            "type": "boolean",
            "description": "",
            "example": true
          }
        }
      },
      "ScimUser": {
        "type": "object",
        "properties": {
          "schemas": {
            "$ref": "#/components/schemas/ScimSchemas"
          },
          "id": {
            "type": "string",
            "description": "",
            "example": "3918310"
          },
          "meta": {
            "type": "object",
            "description": "",
            "properties": {
              "resourceType": {
                "type": "string",
                "description": "",
                "example": "User"
              },
              "created": {
                "type": "string",
                "description": "",
                "example": "2012-05-07T15:36:18.000Z"
              },
              "lastModified": {
                "type": "string",
                "description": "",
                "example": "2015-04-21T21:25:40.000Z"
              }
            }
          },
          "userName": {
            "type": "string",
            "description": "",
            "example": "joe.smith@hootsuite.com"
          },
          "name": {
            "type": "object",
            "description": "",
            "properties": {
              "givenName": {
                "type": "string",
                "description": "",
                "example": "joe.smith"
              },
              "familyName": {
                "type": "string",
                "description": "",
                "example": "joe.smith"
              }
            }
          },
          "emails": {
            "type": "array",
            "description": "",
            "items": {
              "type": "object",
              "description": "",
              "properties": {
                "primary": {
                  "type": "boolean",
                  "description": "",
                  "example": true
                },
                "value": {
                  "type": "string",
                  "description": "",
                  "example": "joe.smith@hootsuite.com"
                },
                "type": {
                  "type": "string",
                  "description": "",
                  "example": "work"
                }
              }
            }
          },
          "displayName": {
            "type": "string",
            "description": "",
            "example": "Joe Smith"
          },
          "timezone": {
            "type": "string",
            "description": "The user's time zone. If not provided it will default to \"America/Vancouver\". Valid values are defined at http://php.net/manual/en/timezones.php.",
            "example": "America/Vancouver"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "The user's language.",
            "example": "en",
            "enum": [
              "en",
              "ja",
              "fr",
              "it",
              "es",
              "de",
              "pt_BR",
              "pl",
              "id",
              "zh_CN",
              "zh_HK",
              "zh_TW",
              "nl",
              "ko",
              "ar",
              "ru",
              "th",
              "tr"
            ]
          },
          "title": {
            "type": "string",
            "description": "",
            "example": "Manager"
          },
          "groups": {
            "type": "array",
            "description": "",
            "items": {
              "type": "object"
            }
          },
          "active": {
            "type": "boolean",
            "description": "",
            "example": true
          }
        }
      },
      "ScimGroups": {
        "type": "object",
        "description": "",
        "properties": {
          "Resources": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/ScimGroup"
            }
          },
          "totalResults": {
            "type": "number",
            "description": "The total number of groups found",
            "example": 8
          },
          "startIndex": {
            "type": "number",
            "description": "The current offset used for result paging",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "description": "The page size used for paging",
            "example": 10
          },
          "schemas": {
            "type": "array",
            "description": "",
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            }
          }
        }
      },
      "CreateReplaceScimGroup": {
        "type": "object",
        "required": [
          "displayName",
          "schema"
        ],
        "properties": {
          "schemas": {
            "$ref": "#/components/schemas/ScimSchemas"
          },
          "displayName": {
            "type": "string",
            "description": "",
            "example": "Group 1"
          },
          "members": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/MemberRef"
            }
          }
        }
      },
      "ScimPatchGroup": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "description": "Must contain the URI value of \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"",
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:api:messages:2.0:PatchOp"
            }
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScimPatchGroupOperation"
            }
          }
        }
      },
      "ScimPatchGroupOperation": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to perform: can be `add`, `replace` or `remove`",
            "example": "replace"
          },
          "value": {
            "type": "object",
            "example": "new_value",
            "description": "New value to set for attribute",
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnyValue"
              }
            ]
          }
        }
      },
      "ScimResourceTypes": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            }
          },
          "Resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScimResourceInfo"
            }
          }
        }
      },
      "ScimResourceInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "User"
          },
          "schemaExtensions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "schema": {
                  "type": "string",
                  "example": "urn:ietf:params:scim:schemas:core:2.0:User"
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "description": {
            "type": "string",
            "example": "User Account"
          },
          "id": {
            "type": "string",
            "example": "User"
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string",
                "example": "ResourceType"
              },
              "location": {
                "type": "string",
                "example": "/scim/v2/ResourceTypes/User"
              }
            }
          },
          "schema": {
            "type": "string",
            "example": "urn:ietf:params:scim:schemas:core:2.0:User"
          },
          "endpoint": {
            "type": "string",
            "example": "/scim/v2/Users"
          },
          "schemas": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
            }
          }
        }
      },
      "ScimGroup": {
        "type": "object",
        "properties": {
          "schemas": {
            "$ref": "#/components/schemas/ScimSchemas"
          },
          "id": {
            "type": "string",
            "description": "",
            "example": "3918310"
          },
          "meta": {
            "type": "object",
            "description": "",
            "properties": {
              "resourceType": {
                "type": "string",
                "description": "",
                "example": "Group"
              },
              "created": {
                "type": "string",
                "description": "",
                "example": "2012-05-07T15:36:18.000Z"
              },
              "lastModified": {
                "type": "string",
                "description": "",
                "example": "2015-04-21T21:25:40.000Z"
              },
              "location": {
                "type": "string",
                "description": "",
                "example": "https://platform.hootsuite.com/scim/v2/groups/627221"
              }
            }
          },
          "displayName": {
            "type": "string",
            "description": "",
            "example": "team 1"
          },
          "members": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/MemberRef"
            }
          }
        }
      },
      "MemberRef": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "",
            "example": "235836528356"
          },
          "$ref": {
            "type": "string",
            "description": "",
            "example": "https://platform.hootsuite.com/scim/v2/users/21790633"
          },
          "display": {
            "type": "string",
            "description": "",
            "example": "John Doe"
          }
        }
      },
      "GroupRef": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "",
            "example": "5838356"
          },
          "$ref": {
            "type": "string",
            "description": "",
            "example": "https://platform.hootsuite.com/scim/v2/groups/663806"
          },
          "display": {
            "type": "string",
            "description": "",
            "example": "Group 1"
          }
        }
      },
      "TeamMembersResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "The data response envelope.",
            "items": {
              "$ref": "#/components/schemas/TeamMember"
            }
          }
        }
      },
      "OrganizationTeamsResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "The data response envelope.",
            "items": {
              "$ref": "#/components/schemas/Team"
            }
          }
        }
      },
      "OrganizationMembersResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "The data response envelope.",
            "items": {
              "$ref": "#/components/schemas/TeamMember"
            }
          }
        }
      },
      "OrganizationMemberTeamsResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "The data response envelope.",
            "items": {
              "$ref": "#/components/schemas/Teams"
            }
          }
        }
      },
      "OrganizationMemberTeamPermissionsResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TeamPermissions"
          }
        }
      },
      "OrganizationMemberSocialProfilesResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "The data response envelope.",
            "items": {
              "$ref": "#/components/schemas/MemberSocialProfiles"
            }
          }
        }
      },
      "OrganizationMemberSocialProfilePermissionsResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SocialProfilePermissions"
          }
        }
      },
      "OrganizationMemberOrganizationPermissionsResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OrganizationPermissions"
          }
        }
      },
      "OrganizationTeamSocialProfilesResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "The data response envelope.",
            "items": {
              "$ref": "#/components/schemas/TeamSocialProfiles"
            }
          }
        }
      },
      "TeamSocialProfiles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The social profile ID.",
            "example": "115185509"
          }
        }
      },
      "Teams": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The team ID.",
            "example": "359493"
          }
        }
      },
      "MemberSocialProfiles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The social profile ID.",
            "example": "115185509"
          }
        }
      },
      "SocialProfilePermissions": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "description": "The organization member's social profile permissions.",
            "items": {
              "type": "string",
              "description": "The permission.",
              "example": "BASIC_USAGE"
            }
          },
          "permissionPreset": {
            "type": "string",
            "description": "The permission preset.",
            "example": "EDITOR"
          }
        }
      },
      "OrganizationPermissions": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "description": "The organization member's organization permissions.",
            "items": {
              "type": "string",
              "description": "The permission.",
              "example": "ORG_MANAGE_MEMBER"
            }
          },
          "permissionPreset": {
            "type": "string",
            "description": "The permission preset.",
            "example": "CUSTOM"
          }
        }
      },
      "TeamPermissions": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "description": "The organization member's team permissions.",
            "items": {
              "type": "string",
              "description": "The permission.",
              "example": "ORG_MANAGE_TEAM"
            }
          },
          "permissionPreset": {
            "type": "string",
            "description": "The permission preset.",
            "example": "CUSTOM"
          }
        }
      },
      "MemberOrganizationsResponseEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "The data response envelope.",
            "items": {
              "$ref": "#/components/schemas/MemberOrganizations"
            }
          }
        }
      },
      "MemberOrganizations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The organization ID",
            "example": "626731"
          }
        }
      },
      "OAuth2BearerToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The access token.",
            "example": "e9a90a81-xf2d-dgh3-cfsd-23jhvn76"
          },
          "token_Type": {
            "type": "string",
            "description": "The access token type.",
            "example": "Bearer"
          },
          "expires_in": {
            "type": "number",
            "description": "The number of seconds until expiry",
            "example": 2592000
          },
          "refresh_token": {
            "type": "string",
            "description": "The refresh token.",
            "example": "82d82cf4-76gf-gfds-nt3k-lzpo12jg"
          },
          "scope": {
            "type": "string",
            "description": "The scopes granted to this token.",
            "example": "offline"
          }
        }
      },
      "AppToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The access token.",
            "example": "ce11c0ca-6213-424f-abfd-5d0f43922e90"
          },
          "expires_in": {
            "type": "number",
            "description": "The number of seconds until expiry",
            "example": 2592000
          }
        }
      },
      "AppTokenRequest": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "description": "The ID of the member to grant a token for. Provide either the member or organization ID, not both",
            "example": "15240789"
          },
          "organizationId": {
            "type": "string",
            "description": "The ID of the organization to grant a token for. Provide either the member or organization ID, not both.",
            "example": "626731"
          }
        }
      },
      "ApproveMessageRequest": {
        "type": "object",
        "required": [
          "sequenceNumber"
        ],
        "properties": {
          "sequenceNumber": {
            "type": "integer",
            "description": "The sequence number of the message being approved.",
            "example": 11
          },
          "reviewerType": {
            "type": "string",
            "description": "The actor that will be approving the message. Leaving this field empty will use \"EXTERNAL\" by default.\n\nUsing \"MEMBER\" requires that you use a member token to approve a message that is pending approval by that member.\n",
            "enum": [
              "EXTERNAL",
              "MEMBER"
            ]
          }
        }
      },
      "ApproveCommentRequest": {
        "type": "object",
        "required": [
          "sequenceNumber"
        ],
        "properties": {
          "sequenceNumber": {
            "type": "integer",
            "description": "The sequence number of the comment being approved.",
            "example": 11
          },
          "reviewerType": {
            "type": "string",
            "description": "The actor that will be approving the comment. Leaving this field empty will use \"EXTERNAL\" by default.\n\nUsing \"MEMBER\" requires that you use a member token to approve a comment that is pending approval by that member.\n",
            "enum": [
              "EXTERNAL",
              "MEMBER"
            ]
          }
        }
      },
      "RejectMessageRequest": {
        "type": "object",
        "required": [
          "reason",
          "sequenceNumber"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "description": "The rejection reason to be displayed to the creator of the message.",
            "example": "Message contains profanity"
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "The sequence number of the message being rejected.",
            "example": 11
          },
          "reviewerType": {
            "type": "string",
            "description": "The actor that will be rejecting the message. Leaving this field empty will use \"EXTERNAL\" by default.\n\nUsing \"MEMBER\" requires that you use a member token to reject a message that is pending approval by that member.\n",
            "enum": [
              "EXTERNAL",
              "MEMBER"
            ]
          }
        }
      },
      "RejectCommentRequest": {
        "type": "object",
        "required": [
          "reason",
          "sequenceNumber"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "description": "The rejection reason to be displayed to the creator of the comment.",
            "example": "Message contains profanity"
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "The sequence number of the comment being rejected.",
            "example": 11
          },
          "reviewerType": {
            "type": "string",
            "description": "The actor that will be rejecting the comment. Leaving this field empty will use \"EXTERNAL\" by default.\n\nUsing \"MEMBER\" requires that you use a member token to reject a comment that is pending approval by that member.\n",
            "enum": [
              "EXTERNAL",
              "MEMBER"
            ]
          }
        }
      },
      "InteractionsGetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "interactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InteractionsInteraction"
                }
              },
              "metadata": {
                "$ref": "#/components/schemas/InteractionsMetadata"
              }
            }
          }
        }
      },
      "InteractionsMetadata": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "object",
            "properties": {
              "next": {
                "type": "string",
                "example": "12345",
                "description": "A cursor to the next page of results."
              },
              "previous": {
                "type": "string",
                "example": "12345",
                "description": "A cursor to the previous page of results."
              }
            }
          }
        }
      },
      "InteractionsInteraction": {
        "type": "object",
        "properties": {
          "fromSocialNetworkId": {
            "type": "string",
            "example": "129458073",
            "description": "The sender of the interaction, eg&#58; the user who sent the DM"
          },
          "toSocialNetworkId": {
            "type": "string",
            "example": "11204584",
            "description": "The receiver of the interaction, eg&#58; the user the DM was sent to"
          },
          "socialNetworkType": {
            "type": "string",
            "example": "TWITTER",
            "description": "Valid options are 'TWITTER' and 'FACEBOOK'"
          },
          "externalMessageId": {
            "type": "string",
            "example": "214590243384",
            "description": "Used to fetch the actual interaction from the social network."
          },
          "type": {
            "type": "string",
            "example": "PRIVATE_MESSAGE",
            "description": "Valid responses are:\n\nTwitter:\n- MENTION\n- QUOTE (Deprecated, but still may be returned)\n- DIRECT_MESSAGE\n- RETWEET (Deprecated, but still may be returned)\n- FAVORITE (Deprecated, but still may be returned)\n\nFacebook:\n- COMMENT\n- REPLY\n- POST\n- POST_LIKE\n- COMMENT_LIKE\n- REPLY_LIKE\n"
          }
        }
      },
      "OAuthError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "An error code indicating the type of error that occurred. Should be used in conjunction with HTTP status.",
            "enum": [
              "request_unauthorized",
              "request_forbidden",
              "invalid_request",
              "unauthorized_client",
              "access_denied",
              "unsupported_response_type",
              "invalid_scope",
              "server_error",
              "temporarily_unavailable",
              "unsupported_grant_type",
              "invalid_grant",
              "invalid_client",
              "unknown_error",
              "not_found",
              "invalid_state",
              "misconfiguration",
              "insufficient_entropy",
              "invalid_token",
              "token_signature_mismatch",
              "token_expired",
              "scope_not_granted",
              "token_claim",
              "token_inactive"
            ]
          },
          "error_description": {
            "type": "string",
            "description": "A description of error.",
            "example": "An error message"
          },
          "error_hint": {
            "type": "string",
            "description": "A helpful hint about the error.",
            "example": "\"Make sure that the various parameters are correct, be aware of case sensitivity and trim your parameters."
          },
          "status_code": {
            "type": "number",
            "description": "The status code",
            "example": 400
          }
        }
      }
    }
  }
}