{
  "openapi": "3.0.0",
  "info": {
    "title": "ManyChat API",
    "description": "Help article is available [here](https://support.manychat.com/support/solutions/articles/36000070776-manychat-api)",
    "version": "beta"
  },
  "servers": [
    {
      "url": ""
    }
  ],
  "paths": {
    "/fb/page/getInfo": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second",
        "operationId": "5579c9e501f1325620d1a9e28e02af7a",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Page"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/createTag": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "ae6633478376e245f25408f463bf4c0c",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My tag"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "properties": {
                        "tag": {
                          "$ref": "#/components/schemas/Tag"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/getTags": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second",
        "operationId": "0a583433666638a1ef9577218bbacef3",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/removeTag": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second.<br>\n     Removes specified tag from the page and the page's subscribers.<br>\n     This action can not be undone.",
        "operationId": "4a3c2650c1e0a840fe2a1b8f4fe0d78c",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "tag_id"
                ],
                "properties": {
                  "tag_id": {
                    "type": "integer",
                    "example": "123"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/removeTagByName": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second.<br>\n     Removes specified tag from the page and the page's subscribers.<br>\n     This action can not be undone.",
        "operationId": "6a426bb8b2da3e1772d5d4d9179be69f",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "tag_name"
                ],
                "properties": {
                  "tag_name": {
                    "type": "string",
                    "example": "MyTagName"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/getWidgets": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second.<br>\n     Use getGrowthTools instead.",
        "operationId": "292fbeb875c99b86ba9e998503fc2298",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Growth Tools"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/createCustomField": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "370186bd1e92506a55f32b09ffe81e21",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "caption",
                  "type"
                ],
                "properties": {
                  "caption": {
                    "type": "string",
                    "example": "My custom field name"
                  },
                  "type": {
                    "description": "Value from list: text, number, date, datetime, boolean",
                    "type": "string",
                    "example": "text"
                  },
                  "description": {
                    "type": "string",
                    "example": "This field store my custom field name"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "field": {
                      "$ref": "#/components/schemas/Custom Field"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/getGrowthTools": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second",
        "operationId": "6317337307985209f4af9f528ea18ea9",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Growth Tools"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/getFlows": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "ea6b40155b0f3a4527bc45d367152ba9",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "properties": {
                        "flows": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Flow"
                          }
                        },
                        "folders": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Folder"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/getCustomFields": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second",
        "operationId": "e731626dfeac1b75b62c693d0fb024aa",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Custom Field"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/getOtnTopics": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second",
        "operationId": "2ea5517d21a29f2fef5e7cffda7dd1aa",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Otn Topic"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/getBotFields": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second",
        "operationId": "6f533048beb9da83035aa618ee050640",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bot Field"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/createBotField": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "480b8b71d5e363e2b2c2f4870fd8dd0a",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My bot name"
                  },
                  "type": {
                    "description": "Value from list: text, number, date, datetime, boolean",
                    "type": "string",
                    "example": "text"
                  },
                  "description": {
                    "type": "string",
                    "example": "This field store my bot name"
                  },
                  "value": {
                    "description": "string, integer or boolean (see method description for setBotField)",
                    "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "field": {
                      "$ref": "#/components/schemas/Bot Field"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/setBotField": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "0c00cbc0e6e07de7dcfd3a93864d3849",
        "requestBody": {
          "description": "Depending on the type of Bot Field you will need to use one of the following type of data for \"field_value\".<br>\n     ***For example:***<br>\n    Text: \"text\" (string)<br>\n    Number: 123 or 1.23 (integer or float)<br>\n    Boolean: true or false (boolean)<br>\n    Date: \"2018-07-18\" (string)<br>\n    Date and time: \"2018-07-02T00:00:00+00:00\" (string)<br>\n    <br>\n    Data and time format for this API method is YYYY-MM-DDTHH:MM:SSP.  Where P is user’s timezone. For example May 1st 2018 06:30:24 UTC+3:00 should be formatted as 2018-05-01T06:30:24+03:00",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "field_id",
                  "field_value"
                ],
                "properties": {
                  "field_id": {
                    "type": "integer"
                  },
                  "field_value": {
                    "description": "string, integer or boolean (see method description)",
                    "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/setBotFieldByName": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "544f39d8c2ce76c70e7b9f798257ae82",
        "requestBody": {
          "description": "Depending on the type of Bot Field you will need to use one of the following type of data for \"field_value\".<br>\n     ***For example:***<br>\n    Text: \"text\" (string)<br>\n    Number: 123 or 1.23 (integer or float)<br>\n    Boolean: true or false (boolean)<br>\n    Date: \"2018-07-18\" (string)<br>\n    Date and time: \"2018-07-02T00:00:00+00:00\" (string)<br>\n    <br>\n    Data and time format for this API method is YYYY-MM-DDTHH:MM:SSP.  Where P is user’s timezone. For example May 1st 2018 06:30:24 UTC+3:00 should be formatted as 2018-05-01T06:30:24+03:00",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "field_name",
                  "field_value"
                ],
                "properties": {
                  "field_name": {
                    "type": "string"
                  },
                  "field_value": {
                    "description": "string, integer or boolean (see method description)",
                    "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/page/setBotFields": {
      "post": {
        "tags": [
          "Page"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "6c53813507f3c4a219cc0ce9fa3672f5",
        "requestBody": {
          "description": "Set multiple bot fields.<br>\n    The number of bot fields is limited to 20 for one request.<br>\n    Use **field_id** OR **field_name** to specify the field.<br>\n    ***For example:***<br>\n    <br>\n    ```\"fields\": [\n        {\n            \"field_id\": 77777777,\n            \"field_value\": 555\n        },\n        {\n            \"field_name\": \"count\",\n            \"field_value\": 12\n        }\n    ]```\n    ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "fields"
                ],
                "properties": {
                  "fields": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "field_id": {
                          "type": "integer"
                        },
                        "field_name": {
                          "type": "integer"
                        },
                        "field_value": {
                          "description": "string, integer or boolean (see method description)",
                          "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/sending/sendContent": {
      "post": {
        "tags": [
          "Sending"
        ],
        "summary": "Send content to subscriber",
        "description": "***Limit:*** 25 queries per second",
        "operationId": "020d6a8fcf94c2de70e277500c19038e",
        "requestBody": {
          "description": "Data format: <https://manychat.github.io/dynamic_block_docs/><br>\n    Supported message tags: <https://developers.facebook.com/docs/messenger-platform/send-messages/message-tags#supported_tags><br>\n    More about message tags in ManyChat: <https://support.manychat.com/support/solutions/articles/36000195552-message-tags><br>\n    <br>\n    **Attention! After March 4, 2020 requests without message tag may cause error**",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "data"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "data": {
                    "type": "object"
                  },
                  "message_tag": {
                    "type": "string",
                    "example": "ACCOUNT_UPDATE"
                  },
                  "otn_topic_name": {
                    "type": "string",
                    "example": "Сhannel news"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "Possible error codes:<br>\n                    3011 - Content can’t be sent to subscriber without message tag. Subscriber’s last interaction was over 24h ago.<br>\n                    3021 - Content can’t be sent to subscriber. The subscriber has no One-Time Notification tokens for the selected topic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error With Code"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/sending/sendContentByUserRef": {
      "post": {
        "tags": [
          "Sending"
        ],
        "summary": "Send content to user ref",
        "description": "***Limit:*** 25 queries per second",
        "operationId": "ff457637d0d4939450268dd0ffa1b6fc",
        "requestBody": {
          "description": "Attention! The method doesn't process actions<br>\n     Data format <https://manychat.github.io/dynamic_block_docs/>",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "user_ref",
                  "data"
                ],
                "properties": {
                  "user_ref": {
                    "type": "integer"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/sending/sendFlow": {
      "post": {
        "tags": [
          "Sending"
        ],
        "summary": "Send flow to subscriber",
        "description": "***Limit:*** 25 queries per second",
        "operationId": "f070381ad87facfa53de9cb3afff9e0d",
        "requestBody": {
          "description": "Supported message tags: <https://developers.facebook.com/docs/messenger-platform/send-messages/message-tags#supported_tags>",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "flow_ns"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "flow_ns": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/getInfo": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "a01034848877f1f9748a1215a64b246a",
        "parameters": [
          {
            "name": "subscriber_id",
            "in": "query",
            "description": "Get subscriber info.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Subscriber"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/findByName": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second.<br>\n     This API method search subscribers by full name.<br>\n     List is limited by 100 subscribers.",
        "operationId": "0478f6f02daf0f8ae42bb10e938714ec",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subscriber"
                      },
                      "maximum": "100"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/getInfoByUserRef": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "operationId": "e79f8b161a6eb39c4ec66c0c6247bd54",
        "parameters": [
          {
            "name": "user_ref",
            "in": "query",
            "description": "Ref of subscriber",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Subscriber"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Possible error codes:<br>\n                  2011 - User_ref isn't registered<br>\n                  2012 - User_ref has not been linked with subscriber_id\n     *          ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error With Code"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/findByCustomField": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second.<br>\n     This API method only works with Text and Number types of Custom User Fields.<br>\n     Results are sorted by last Custom User Field value update for a specific user.<br>\n     List is limited by 100 elements.",
        "operationId": "21874958035a61e789d829ebd7909e43",
        "parameters": [
          {
            "name": "field_id",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "field_value",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subscriber"
                      },
                      "maximum": "100"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/findBySystemField": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "description": "***Limit:*** 100 queries per second.<br>\n     Set one parameter: Email OR Phone.",
        "operationId": "d424e2ed9dffa24f1c5798f1459226a5",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "E-Mail (example: test@manychat.com)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Phone number (example: +15400000000)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Subscriber"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/addTag": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Add tag to subscriber",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "5b21fff323861571fd0e3390f05e9d31",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "tag_id"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "tag_id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/addTagByName": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Add tag to subscriber",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "089c29fc850d5810f532fc9dee1ed75d",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "tag_name"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "tag_name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/removeTag": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Remove tag from subscriber",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "0838038c992e9b3c114d327850d7d398",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "tag_id"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "tag_id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/removeTagByName": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Remove tag from subscriber",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "bab42dc17c2d86a65c0f5280e3a6220d",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "tag_name"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "tag_name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/setCustomField": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "03a2c0a63a2e57f8d99c2ad13f98b22f",
        "requestBody": {
          "description": "Depending on the type of Custom User Field you will need to use one of the following type of data for \"field_value\".<br>\n     ***For example:***<br>\n    Text: \"text\" (string)<br>\n    Number: 123 or 1.23 (integer or float)<br>\n    Boolean: true or false (boolean)<br>\n    Date: \"2018-07-18\" (string)<br>\n    Date and time: \"2018-07-02T00:00:00+00:00\" (string)<br>\n    <br>\n    Data and time format for this API method is YYYY-MM-DDTHH:MM:SSP.  Where P is user’s timezone. For example May 1st 2018 06:30:24 UTC+3:00 should be formatted as 2018-05-01T06:30:24+03:00",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "field_id",
                  "field_value"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "field_id": {
                    "type": "integer"
                  },
                  "field_value": {
                    "description": "string, integer or boolean (see method description)",
                    "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/setCustomFields": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "521da887ae60dec856db215ff0cee44e",
        "requestBody": {
          "description": "Set multiple custom fields for a single subscriber.<br>\n     The number of custom fields is limited to 20 for one request.<br>\n     Use **field_id** OR **field_name** to specify the field.<br>\n     ***For example:***<br>\n     <br>\n     ```\"fields\": [\n        {\n            \"field_id\": 77777777,\n            \"field_value\": 555\n        },\n        {\n            \"field_name\": \"count\",\n            \"field_value\": 12\n        }\n     ]```\n                ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "fields"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "field_id": {
                          "type": "integer"
                        },
                        "field_name": {
                          "type": "integer"
                        },
                        "field_value": {
                          "description": "string, integer or boolean (see method description)",
                          "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/setCustomFieldByName": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "ee3086d0cbba8e9f2722d7de68332a83",
        "requestBody": {
          "description": "Depending on the type of Custom User Field you will need to use one of the following type of data for \"field_value\".<br>\n     ***For example:***<br>\n    Text: \"text\" (string)<br>\n    Number: 123 or 1.23 (integer or float)<br>\n    Boolean: true or false (boolean)<br>\n    Date: \"2018-07-18\" (string)<br>\n    Date and time: \"2018-07-02T00:00:00+00:00\" (string)<br>\n    <br>\n    Data and time format for this API method is YYYY-MM-DDTHH:MM:SSP.  Where P is user’s timezone. For example May 1st 2018 06:30:24 UTC+3:00 should be formatted as 2018-05-01T06:30:24+03:00",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "field_name",
                  "field_value"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "field_name": {
                    "description": "not case sensitive",
                    "type": "string"
                  },
                  "field_value": {
                    "description": "string, integer or boolean (see method description)",
                    "example": "'string', 123, true, '2018-07-18', '2018-07-02T00:00:00+00:00'"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Success"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/verifyBySignedRequest": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "8620e14de68b801c0b7fe621b0e00267",
        "requestBody": {
          "description": "<https://developers.facebook.com/docs/messenger-platform/webview/>",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id",
                  "signed_request"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "signed_request": {
                    "type": "string",
                    "example": "_1SXnOuwXiUrcDRxI1D6Dvr55aiNusDNMxyHb8PQe7Y.eyJhbGdvcml0aG0iOiJIT2FDLVNIQTI1NiIsImNvbW11bml0eV9pZCI6bnVsbCwiaXNzdWVkX2F0IjoxNTU5MjE8NTQxLCJtZXRhZGF0YSI6bnVsbCwicGFnZV9pZCI6MjI4NjkwMDEyNDk2MTgxOSwicHNpZCI6IjIxNzI0OTkwNDI4Njc2MjIiLCJ0aHJlYWRfcGFydGljaXBhbnRfaWRzIjpudWxsLCJ0aHJlYWRfdHlwZSI6IlVTRVJfVE9fUEFHRSIsInRpZCI1IjIxNzI0OTkwNDI4Njc2MjIifQ"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/createSubscriber": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Create a Unified or a WhatsApp subscriber",
        "description": "***Limit:*** 10 queries per second <br>\n     *     If a WhatsApp phone is passed, only WhatsApp subscriber will be created",
        "operationId": "8233538d18052fcc2bc69d2a15516832",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "first_name": {
                    "description": "First Name",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Last Name",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Phone Number is required if Email and Whatsapp Phone properties are empty",
                    "type": "string"
                  },
                  "whatsapp_phone": {
                    "description": "Whatsapp Phone Number is required to create WhatsApp Contact",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email is required if Phone Number and Whatsapp Phone properties are empty",
                    "type": "string"
                  },
                  "gender": {
                    "description": "Gender",
                    "type": "string"
                  },
                  "has_opt_in_sms": {
                    "description": "Has opt-in SMS is required if property Phone Number is not empty",
                    "type": "boolean"
                  },
                  "has_opt_in_email": {
                    "description": "Has opt-in Email is required if property Email is not empty",
                    "type": "boolean"
                  },
                  "consent_phrase": {
                    "description": "Consent phrase is required if property Has Opt In equal true",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subscriber"
                      },
                      "maximum": "100"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/fb/subscriber/updateSubscriber": {
      "post": {
        "tags": [
          "Subscriber"
        ],
        "summary": "",
        "description": "***Limit:*** 10 queries per second",
        "operationId": "f04cdc2d7499f428bae04c55a60ba146",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "subscriber_id"
                ],
                "properties": {
                  "subscriber_id": {
                    "type": "integer"
                  },
                  "first_name": {
                    "description": "First Name",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Last Name",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Phone Number",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email",
                    "type": "string"
                  },
                  "gender": {
                    "description": "Gender",
                    "type": "string"
                  },
                  "has_opt_in_sms": {
                    "description": "Has opt-in SMS is required if property Phone Number is not empty",
                    "type": "boolean"
                  },
                  "has_opt_in_email": {
                    "description": "Has opt-in Email is required if property Email is not empty",
                    "type": "boolean"
                  },
                  "consent_phrase": {
                    "description": "Consent phrase is required if property Has Opt In SMS equal true",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subscriber"
                      },
                      "maximum": "100"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Response Success": {
        "description": "",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          }
        },
        "type": "object"
      },
      "Response Error": {
        "description": "",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Response Error With Code": {
        "description": "",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "message": {
            "type": "string"
          },
          "error_code": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Custom Field": {
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "number",
              "date",
              "datetime",
              "boolean"
            ]
          },
          "description": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Bot Field": {
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "number",
              "date",
              "datetime",
              "boolean"
            ]
          },
          "description": {
            "type": "string"
          },
          "value": {
            "description": "string, integer or boolean",
            "type": "mixed",
            "example": "'string', 123, true, '2018-07-18', '2018-07-02T07:45:00+03:00'"
          }
        },
        "type": "object"
      },
      "Page": {
        "description": "",
        "properties": {
          "id": {
            "description": "This is Facebook Page ID",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "avatar_link": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "about": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_pro": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Subscriber Custom Field": {
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "number",
              "date",
              "datetime",
              "boolean"
            ]
          },
          "description": {
            "type": "string"
          },
          "value": {
            "description": "string, integer or boolean",
            "type": "mixed",
            "example": "'string', 123, true, '2018-07-18', '2018-07-02T07:45:00+03:00'"
          }
        },
        "type": "object"
      },
      "Subscriber Ref Field": {
        "description": "",
        "properties": {
          "user_ref": {
            "type": "string",
            "example": "-1543835812530302162"
          },
          "opted_in": {
            "type": "datetime in W3C format",
            "example": "2018-12-03T11:17:54+00:00"
          }
        },
        "type": "object"
      },
      "Tag": {
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Growth Tools": {
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Flow": {
        "description": "",
        "properties": {
          "ns": {
            "description": "Flow namespace - unique flow ID",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "folder_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Folder": {
        "description": "",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parent_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Otn Topic": {
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Subscriber": {
        "description": "",
        "properties": {
          "id": {
            "type": "string"
          },
          "page_id": {
            "description": "This is Facebook Page ID",
            "type": "string"
          },
          "user_refs": {
            "description": "array with ref of subscriber; can be empty",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscriber Ref Field"
            },
            "example": "[{ 'user_ref':'-1543835812530302162', 'opted_in':'2018-12-03T11:17:54+00:00' }]"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "profile_pic": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "live_chat_url": {
            "type": "string"
          },
          "last_input_text": {
            "type": "string"
          },
          "optin_phone": {
            "type": "boolean"
          },
          "phone": {
            "type": "string"
          },
          "optin_email": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "subscribed": {
            "description": "datetime in W3C format",
            "type": "string",
            "example": "'2018-07-02T00:00:00+02:00'"
          },
          "last_interaction": {
            "description": "datetime in W3C format",
            "type": "string",
            "example": "'2018-07-02T00:00:00+02:00'"
          },
          "last_seen": {
            "description": "datetime in W3C format",
            "type": "string",
            "example": "'2018-07-02T00:00:00+03:00'"
          },
          "is_followup_enabled": {
            "type": "boolean",
            "example": "true"
          },
          "ig_username": {
            "type": "string",
            "example": "user_name"
          },
          "ig_id": {
            "type": "integer",
            "example": "6384638"
          },
          "whatsapp_phone": {
            "type": "string"
          },
          "optin_whatsapp": {
            "type": "boolean",
            "example": "true"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscriber Custom Field"
            }
          },
          "shopify_fields": {
            "$ref": "#/components/schemas/Shopify Field"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        },
        "type": "object"
      },
      "Shopify Field": {
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "total_spent": {
            "type": "string"
          },
          "orders_count": {
            "type": "integer"
          },
          "accepts_marketing": {
            "type": "boolean"
          },
          "last_order_id": {
            "type": "integer"
          },
          "last_order_created_at": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_checkout_id": {
            "type": "integer"
          },
          "last_checkout_price": {
            "type": "string"
          },
          "last_checkout_created_at": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer"
      }
    }
  }
}