{
  "components": {
    "schemas": {
      "ActivitySourceBean": {
        "properties": {
          "sourceDate": {
            "type": "string"
          },
          "sourceId": {
            "type": "string"
          },
          "sourceType": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "targetType": {
            "type": "string"
          },
          "worklogId": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ActivitySourceSearchParams": {
        "properties": {
          "planIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sourceTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "worklogIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AnalyticsBean": {
        "properties": {
          "analyticsBeanValid": {
            "type": "boolean"
          },
          "context": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "event": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "eventValid": {
            "type": "boolean"
          },
          "properties": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "traits": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "typeScreen": {
            "type": "boolean"
          },
          "typeTrack": {
            "type": "boolean"
          },
          "typeValid": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ApplicationProperties": {
        "properties": {
          "contentType": {
            "type": "string"
          },
          "defaultKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "defaultLocale": {
            "properties": {
              "country": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              },
              "iso3Country": {
                "type": "string"
              },
              "iso3Language": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              },
              "unicodeLocaleKeys": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              },
              "variant": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "encoding": {
            "type": "string"
          },
          "keys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mailEncoding": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChangedSavedReportBean": {
        "properties": {
          "name": {
            "type": "string"
          },
          "settings": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Configuration": {
        "properties": {
          "key": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "value": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "CreatedByInputBean": {
        "properties": {
          "key": {
            "example": "johnDoe",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "username": {
            "example": "johnDoe",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "DataCenterBean": {
        "type": "object"
      },
      "DayScheduleBean": {
        "properties": {
          "date": {
            "description": "Date",
            "example": "yyyy-MM-dd",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "holiday": {
            "$ref": "#/components/schemas/HolidayBean"
          },
          "requiredSeconds": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "enum": [
              "WORKING_DAY",
              "NON_WORKING_DAY",
              "HOLIDAY",
              "HOLIDAY_AND_NON_WORKING_DAY"
            ],
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "day-schedule"
        }
      },
      "DayScheduleBeanV2Wrapper": {
        "properties": {
          "days": {
            "items": {
              "$ref": "#/components/schemas/DayScheduleV2Bean"
            },
            "type": "array"
          },
          "numberOfWorkingDays": {
            "description": "Number of Working Days",
            "example": 1,
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "requiredSeconds": {
            "description": "Required Seconds",
            "example": 3600,
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "day-schedule-wrapper"
        }
      },
      "DayScheduleBeanWrapper": {
        "properties": {
          "days": {
            "items": {
              "$ref": "#/components/schemas/DayScheduleBean"
            },
            "type": "array"
          },
          "numberOfWorkingDays": {
            "description": "Number of Working Days",
            "example": 1,
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "requiredSeconds": {
            "description": "Required Seconds",
            "example": 3600,
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "DayScheduleV2Bean": {
        "properties": {
          "date": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "holiday": {
            "$ref": "#/components/schemas/HolidayV2Bean"
          },
          "requiredSeconds": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "enum": [
              "WORKING_DAY",
              "NON_WORKING_DAY",
              "HOLIDAY",
              "HOLIDAY_AND_NON_WORKING_DAY"
            ],
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "day-schedule"
        }
      },
      "Expense": {
        "properties": {
          "amount": {
            "description": "Amount",
            "example": 10,
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "created_by": {
            "$ref": "#/components/schemas/UserBean"
          },
          "date": {
            "description": "Formatted Expense Date",
            "format": "date",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "description": "Expense Description",
            "example": "This is a description.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "expenseCategory": {
            "$ref": "#/components/schemas/ExpenseCategory"
          },
          "id": {
            "description": "Expense ID",
            "example": 12345,
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "scope": {
            "$ref": "#/components/schemas/ScopeBean"
          },
          "scopeId": {
            "description": "Scope ID",
            "example": 12345,
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "scopeType": {
            "enum": [
              "ISSUE"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "expense"
        }
      },
      "ExpenseCategory": {
        "properties": {
          "id": {
            "description": "Required when creating expense, not required when creating expense category",
            "example": 12345,
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "description": "Expense Category Name",
            "example": "Category Name",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "expense-category"
        }
      },
      "ExpenseCategoryInputBean": {
        "description": "Information on Expense Category",
        "properties": {
          "id": {
            "example": 12345,
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "ExpenseInputBean": {
        "properties": {
          "amount": {
            "example": 10,
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "createdBy": {
            "$ref": "#/components/schemas/CreatedByInputBean"
          },
          "date": {
            "format": "date",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "example": "This is a description.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "expenseCategory": {
            "$ref": "#/components/schemas/ExpenseCategoryInputBean"
          },
          "scope": {
            "$ref": "#/components/schemas/ScopeBean"
          }
        },
        "type": "object"
      },
      "FilterBean": {
        "properties": {
          "favourite": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "jql": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "HeaderBean": {
        "type": "object",
        "xml": {
          "name": "header"
        }
      },
      "HolidayBean": {
        "properties": {
          "description": {
            "example": "This is a national holiday of this country.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "durationSeconds": {
            "example": 3600,
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "example": "National Holiday",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "holiday"
        }
      },
      "HolidayMoveMembersBean": {
        "properties": {
          "schemeId": {
            "description": "Holiday scheme Id",
            "example": 12345,
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "userKeys": {
            "description": "User keys of the members",
            "example": "johndoe123",
            "items": {
              "description": "User keys of the members",
              "example": "johndoe123",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HolidaySchemeBean": {
        "properties": {
          "defaultScheme": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "memberCount": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "holidayscheme"
        }
      },
      "HolidaySchemeV2Bean": {
        "properties": {
          "defaultScheme": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "memberCount": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "holidayscheme"
        }
      },
      "HolidayV2Bean": {
        "properties": {
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "durationSeconds": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "holiday"
        }
      },
      "IssueActivityActionsBean": {
        "properties": {
          "canDelete": {
            "type": "boolean",
            "writeOnly": true
          },
          "canEdit": {
            "type": "boolean",
            "writeOnly": true
          }
        },
        "type": "object",
        "xml": {
          "name": "actions"
        }
      },
      "IssueActivityBean": {
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/IssueActivityActionsBean"
          },
          "anonymous": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "assignee": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dateTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "activity"
        }
      },
      "IssueActivitySummaryBean": {
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/IssueActivityBean"
            },
            "type": "array"
          },
          "pageNumber": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "totalCount": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "totalPageCount": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "typeCounts": {
            "additionalProperties": {
              "format": "int32",
              "type": "integer"
            },
            "type": "object"
          }
        },
        "type": "object",
        "xml": {
          "name": "activity-summary"
        }
      },
      "IssueBean": {
        "properties": {
          "isInternal": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "issue"
        }
      },
      "Item": {
        "type": "object"
      },
      "JiraUserBean": {
        "properties": {
          "active": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "avatarUrls": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "displayName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "locale": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "timeZone": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "NewSavedReportBean": {
        "properties": {
          "name": {
            "type": "string"
          },
          "settings": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PermissionBean": {
        "properties": {
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "groupNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "weight": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "permission"
        }
      },
      "PluginBean": {
        "properties": {
          "dateInstalled": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "documentationUrl": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "licensed": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "pluginKey": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "PluginInfoBean": {
        "properties": {
          "jiraVersion": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "JIRAVersion"
            }
          },
          "plugins": {
            "items": {
              "$ref": "#/components/schemas/PluginBean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProjectBean": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "ProjectConfigBean": {
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectBean"
          },
          "projectColor": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "Result": {
        "properties": {
          "footer": {
            "type": "string",
            "writeOnly": true
          }
        },
        "type": "object",
        "xml": {
          "name": "results"
        }
      },
      "SavedReportDraftBean": {
        "properties": {
          "settings": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ScopeBean": {
        "properties": {
          "scopeId": {
            "description": "Scope ID",
            "example": 12345,
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "scopeType": {
            "description": "Scope Type",
            "enum": [
              "ISSUE"
            ],
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "SearchBean": {
        "properties": {
          "keys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "StaticListValue": {
        "description": "Static List Values.  Omit if work attribute is not a STATIC_LIST",
        "properties": {
          "id": {
            "description": "Static List Value ID",
            "example": 12345,
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "description": "Static List Value Name",
            "example": "myStaticListValueName",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "removed": {
            "description": "Is Removed",
            "example": true,
            "readOnly": true,
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "sequence": {
            "description": "Sequence",
            "example": 1,
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "description": "Static List Value",
            "example": "value",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "workAttributeId": {
            "description": "Work Attribute ID",
            "example": 12345,
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "static-list-value"
        }
      },
      "UserBean": {
        "properties": {
          "displayName": {
            "description": "Display Name",
            "example": "John Doe",
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "description": "User Key",
            "example": "johnDoe",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "username": {
            "description": "Username",
            "example": "johnDoe",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "required": [
          "displayName",
          "username"
        ],
        "type": "object"
      },
      "UserScheduleV2Bean": {
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/DayScheduleBeanV2Wrapper"
          },
          "user": {
            "$ref": "#/components/schemas/UserBean"
          }
        },
        "type": "object",
        "xml": {
          "name": "user-schedule"
        }
      },
      "UserSchedulesRequestBean": {
        "properties": {
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "usernames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserSchedulesRequestV2Bean": {
        "properties": {
          "from": {
            "description": "Date From",
            "example": "yyyy-MM-dd",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "to": {
            "description": "Date To",
            "example": "yyyy-MM-dd",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "userKeys": {
            "items": {
              "description": "User keys",
              "example": "johndoe123",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UsersBean": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/UserBean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkAttribute": {
        "properties": {
          "externalUrl": {
            "description": "External Url",
            "example": "http://www.example.com",
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "description": "Work Attribute ID",
            "example": 12345,
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "description": "Work Attribute Key",
            "example": "_abc_",
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "description": "Work Attribute Name",
            "example": "abc",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "required": {
            "description": "Is Required",
            "example": true,
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "sequence": {
            "description": "Sequence",
            "example": 1,
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "staticListValues": {
            "items": {
              "$ref": "#/components/schemas/StaticListValue"
            },
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/WorkAttributeType"
          }
        },
        "type": "object",
        "xml": {
          "name": "work-attribute"
        }
      },
      "WorkAttributeType": {
        "description": "Work Attribute Type",
        "properties": {
          "name": {
            "description": "Type Name",
            "example": "ACCOUNT, BILLABLE_SECONDS, CHECKBOX, DYNAMIC_DROPDOWN, INPUT_FIELD, INPUT_NUMERIC, STATIC_LIST",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "systemType": {
            "description": "Is System Type",
            "example": true,
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "description": "Type Value",
            "enum": [
              "ACCOUNT",
              "BILLABLE_SECONDS",
              "CHECKBOX",
              "DYNAMIC_DROPDOWN",
              "INPUT_FIELD",
              "INPUT_NUMERIC",
              "STATIC_LIST"
            ],
            "example": "ACCOUNT",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "work-attribute-type"
        }
      },
      "WorkloadMoveMembersBean": {
        "properties": {
          "schemeId": {
            "description": "Workload scheme Id",
            "example": 12345,
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "userKeys": {
            "description": "User keys of the members",
            "example": "johndoe123",
            "items": {
              "description": "User keys of the members",
              "example": "johndoe123",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkloadSchemeBean": {
        "properties": {
          "days": {
            "items": {
              "$ref": "#/components/schemas/WorkloadSchemeDay"
            },
            "type": "array"
          },
          "defaultScheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "memberCount": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "workload"
        }
      },
      "WorkloadSchemeDay": {
        "properties": {
          "day": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "requiredSeconds": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "seconds"
            }
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "externalDocs": {
    "description": "Contact Tempo Customer Support.",
    "url": "https://tempo-io.atlassian.net/servicedesk/customer/portal/6"
  },
  "info": {
    "description": "Welcome to Tempo Core API Documentation. Use this REST API to programmatically transfer data to or from Tempo Core in order to integrate with other business components. REST being based on open standards, you are free to use any web development language to access the API.",
    "termsOfService": "https://www.tempo.io/terms-of-use",
    "title": "Tempo Core",
    "version": "1.0",
    "x-logo": {
      "altText": "Tempo Software",
      "href": "https://www.tempo.io/server-api-documentation/",
      "url": "https://cdn2.hubspot.net/hubfs/2814970/openApi/TEMPO_OpenAPI.png"
    }
  },
  "openapi": "3.0.3",
  "paths": {
    "/tempo-core/1/expense": {
      "get": {
        "description": "Get expenses for a given scope between two dates or all existing expenses if no parameters are given.",
        "operationId": "getExpenses",
        "parameters": [
          {
            "description": "the type of scope",
            "in": "query",
            "name": "scopeType",
            "schema": {
              "enum": [
                "ISSUE"
              ],
              "type": "string"
            }
          },
          {
            "description": "the id of the scope",
            "example": 12345,
            "in": "query",
            "name": "scopeId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the from date",
            "example": "yyyy-MM-dd",
            "in": "query",
            "name": "dateFrom",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the to date",
            "example": "yyyy-MM-dd",
            "in": "query",
            "name": "dateTo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Expense"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Get expenses for a given scope between two dates",
        "tags": [
          "Expense"
        ],
        "x-public": true
      },
      "post": {
        "description": "Creates a new expense.",
        "operationId": "createExpense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseInputBean"
              }
            }
          },
          "description": "Create a new expense",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Creates a new expense",
        "tags": [
          "Expense"
        ],
        "x-public": true
      }
    },
    "/tempo-core/1/expense/category": {
      "get": {
        "description": "Get expense categories, filtered by a query.",
        "operationId": "getExpenseCategories",
        "parameters": [
          {
            "description": "the text to filter by",
            "example": "To Do",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "determines whether expenses are returned with the expense categories",
            "example": false,
            "in": "query",
            "name": "includeExpenses",
            "schema": {
              "default": "false",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExpenseCategory"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Get expense categories",
        "tags": [
          "Expense"
        ],
        "x-public": true
      },
      "post": {
        "description": "Create a new expense category.",
        "operationId": "createExpenseCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseCategory"
              }
            }
          },
          "description": "Create a new expense category",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Create a new expense category",
        "tags": [
          "Expense"
        ],
        "x-public": true
      }
    },
    "/tempo-core/1/expense/category/{id}": {
      "delete": {
        "description": "Delete an expense category by ID.",
        "operationId": "deleteExpenseCategory",
        "parameters": [
          {
            "description": "expense category ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": true,
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Delete an expense category by ID",
        "tags": [
          "Expense"
        ],
        "x-public": true
      },
      "put": {
        "description": "Update expense category by ID.",
        "operationId": "updateExpenseCategory",
        "parameters": [
          {
            "description": "expense category ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseCategory"
              }
            }
          },
          "description": "Update an existing expense category",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Update expense category by ID",
        "tags": [
          "Expense"
        ],
        "x-public": true
      }
    },
    "/tempo-core/1/expense/{id}": {
      "delete": {
        "description": "Delete expense by ID.",
        "operationId": "deleteExpense",
        "parameters": [
          {
            "description": "expense ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": true,
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Delete expense by ID",
        "tags": [
          "Expense"
        ],
        "x-public": true
      },
      "get": {
        "description": "Get expense by ID.",
        "operationId": "getExpense",
        "parameters": [
          {
            "description": "expense ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Get expense by ID",
        "tags": [
          "Expense"
        ],
        "x-public": true
      },
      "put": {
        "description": "Update expense by ID.",
        "operationId": "updateExpense",
        "parameters": [
          {
            "description": "expense ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseInputBean"
              }
            }
          },
          "description": "Update an existing expense",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Update expense by ID",
        "tags": [
          "Expense"
        ],
        "x-public": true
      }
    },
    "/tempo-core/1/user/schedule": {
      "get": {
        "description": "Get userSchedule for user on specific dates, defaults to loggedInUser and today if query parameters are omitted.",
        "operationId": "getUserSchedule",
        "parameters": [
          {
            "description": "Username",
            "example": "johnDoe",
            "in": "query",
            "name": "user",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date From",
            "example": "yyyy-MM-dd",
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date To",
            "example": "yyyy-MM-dd",
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayScheduleBeanWrapper"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Get userSchedule for user on specific dates",
        "tags": [
          "User Schedule V1"
        ],
        "x-public": true
      }
    },
    "/tempo-core/1/work-attribute": {
      "get": {
        "description": "Optionally filtered by key or type. If no parameters are provided, all work attributes are returned.",
        "operationId": "getWorkAttributes",
        "parameters": [
          {
            "description": "the unique key of the work attribute to search by",
            "example": "_abc_",
            "in": "query",
            "name": "key",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the name of the type to filter by",
            "in": "query",
            "name": "type",
            "schema": {
              "enum": [
                "ACCOUNT",
                "BILLABLE_SECONDS",
                "CHECKBOX",
                "DYNAMIC_DROPDOWN",
                "INPUT_FIELD",
                "INPUT_NUMERIC",
                "STATIC_LIST"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkAttribute"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Gets work attributes, optionally filtered by type.",
        "tags": [
          "Work Attribute"
        ],
        "x-public": true
      },
      "post": {
        "description": "Create a new work attribute. This operation requires Tempo Administrator permission.",
        "operationId": "createWorkAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkAttribute"
              }
            }
          },
          "description": "Create a new work attribute",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkAttribute"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Create a new work attribute.",
        "tags": [
          "Work Attribute"
        ],
        "x-public": true
      }
    },
    "/tempo-core/1/work-attribute/type": {
      "get": {
        "description": "Gets all available (and non-system) work attribute types.",
        "operationId": "getWorkAttributeTypes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkAttributeType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Get all available (and non-system) work attribute types",
        "tags": [
          "Work Attribute"
        ],
        "x-public": true
      }
    },
    "/tempo-core/1/work-attribute/{id}": {
      "delete": {
        "description": "Delete an existing work attribute. This operation requires Tempo Administrator permission.",
        "operationId": "deleteWorkAttribute",
        "parameters": [
          {
            "description": "Work Attribute ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": true,
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Delete an existing work attribute",
        "tags": [
          "Work Attribute"
        ],
        "x-public": true
      },
      "get": {
        "description": "Gets a specific work attribute.",
        "operationId": "getWorkAttribute",
        "parameters": [
          {
            "description": "Work Attribute ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkAttribute"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Gets a specific work attribute",
        "tags": [
          "Work Attribute"
        ],
        "x-public": true
      },
      "put": {
        "description": "Update an existing work attribute. This operation requires Tempo Administrator permission.",
        "operationId": "updateWorkAttribute",
        "parameters": [
          {
            "description": "Work Attribute ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkAttribute"
              }
            }
          },
          "description": "Work Attribute Bean",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkAttribute"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Update an existing work attribute",
        "tags": [
          "Work Attribute"
        ],
        "x-public": true
      }
    },
    "/tempo-core/1/work-attribute/{id}/static-list-value": {
      "get": {
        "description": "Gets all static list values for a specific work attribute. If no work attribute id is provided, the service returns an error.",
        "operationId": "getStaticListValuesByWorkAttribute",
        "parameters": [
          {
            "description": "Work Attribute ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StaticListValue"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Get all static list values for a specific work attribute",
        "tags": [
          "Work Attribute"
        ],
        "x-public": true
      },
      "post": {
        "description": "Create a new static list value for a work attribute. This operation requires Tempo Administrator permission",
        "operationId": "createStaticListValueForWorkAttribute",
        "parameters": [
          {
            "description": "Work Attribute ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaticListValue"
              }
            }
          },
          "description": "Static List Value Bean",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaticListValue"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Creates a static list value for a work attribute",
        "tags": [
          "Work Attribute"
        ],
        "x-public": true
      }
    },
    "/tempo-core/1/work-attribute/{id}/static-list-value/{staticListValueId}": {
      "put": {
        "description": "Update an existing static list value. This operation requires Tempo Administrator permission.",
        "operationId": "updateStaticListValue",
        "parameters": [
          {
            "description": "Work Attribute ID",
            "example": 12345,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Static List Value ID",
            "example": 12345,
            "in": "path",
            "name": "staticListValueId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaticListValue"
              }
            }
          },
          "description": "Static List Value Bean",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaticListValue"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Update an existing static list value for a work attribute",
        "tags": [
          "Work Attribute"
        ],
        "x-public": true
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://{JIRA_BASE_URL}/rest",
      "variables": {
        "JIRA_BASE_URL": {
          "default": "JIRA_BASE_URL"
        }
      }
    }
  ]
}