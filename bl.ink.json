{
  "openapi": "3.0.0",
  "info": {
    "title": "Version 4 of the BL.INK API",
    "description": "# Introduction\nThis is version 4 of the BL.INK API. It follows common REST patterns.\n**NOTE: This version of tha API is exactly like v3 with responses that are more consistent.\nDocs for v3 can be found at: https://developers.bl.ink/api-v3.html\nEndpoints that have changed include Get Link, Create Link, and Update Link, and Validate Link, and Create Tag.\n Please test the responses before using in production systems.**\n\nAPI PRIMARY BASE URL\n\nhttps://app.bl.ink/api/v4\n\nNote: Enterprise customers must use the admin panel domain in place of https://app.bl.ink.\nPlease use SSL (https) for all requests.\nAll API calls are subject to a rate limit of 5 connections per second per IP address. All requests exceeding that limitation will receive an HTTP 533, HTTP 544, or HTTP 503 (Service Temporarily Unavailable).\n# Authentication\nAll endpoints require a valid access token for authentication:\n1. Invoke the ```POST /access_token``` endpoint to get a new access_token\n1. Add the following header to all endpoint requests:\n ```Authorization: Bearer <access_token>```\nIf you see a refresh token in your BL.INK UI, use that to get a new access_token\n\nThere are two types of tokens, access and refresh token. An access token is used with each api call to verify the user. A user requests an access token with either their username and password, or their username and their refresh token. An access token expires after 24 hours. Our api end point to retrieve an access token will always return a valid access token so the user doesn't need to keep track of expiration.\n\nIf you would rather not supply your password to receive an access token, you may use the refresh token instead..\n# Client\nTo generate client SDK code:\n\n1. Download the OpenApi specification file (above)\n1. Follow these instructions: [Swagger Code Generation](https://swagger.io/docs/swagger-tools/#swagger-codegen-documentation-9)",
    "contact": {
      "name": "API Support",
      "url": "https://help.bl.ink",
      "email": "help@bl.ink"
    },
    "version": "4.0.0",
    "x-logo": {
      "url": "/includes/img/blink-60.png"
    }
  },
  "servers": [
    {
      "url": "https://{instance}.bl.ink/api/v4",
      "variables": {
        "instance": {
          "default": "app",
          "description": "Subdomain that an instance of BL.INK has been installed on."
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication"
    },
    {
      "name": "Validate Login",
      "description": "Validate Customer Login Credentials"
    },
    {
      "name": "Access Token",
      "description": "Create Access Token"
    },
    {
      "name": "Links",
      "description": "Links"
    },
    {
      "name": "Create Link",
      "description": "Create Branded Link or BL.INK Link"
    },
    {
      "name": "Update Link",
      "description": "Update Link"
    },
    {
      "name": "List Links",
      "description": "List Links"
    },
    {
      "name": "List Clicked Links",
      "description": "List Clicked Links"
    },
    {
      "name": "Get Link By Alias",
      "description": "Searches to find a link with a given alias."
    },
    {
      "name": "Domains",
      "description": "Domains"
    },
    {
      "name": "List Domains",
      "description": "List Domains"
    },
    {
      "name": "Get Domain by ID",
      "description": "Get Domain by ID"
    },
    {
      "name": "Get Domain by domain name",
      "description": "Get Domain by domain name"
    },
    {
      "name": "Create Domain",
      "description": "Create Domain"
    },
    {
      "name": "Update Domain",
      "description": "Update Domain"
    },
    {
      "name": "Delete Domain",
      "description": "Delete Domain"
    },
    {
      "name": "UTM Templates",
      "description": "UTM Templates"
    },
    {
      "name": "List UTM Templates",
      "description": "List UTM Templates"
    },
    {
      "name": "Domain Click Count Per Day",
      "description": "List link count per day"
    },
    {
      "name": "Domain Click Count Per Country",
      "description": "List link count per country"
    },
    {
      "name": "Domain Click Count Per Region",
      "description": "List link count per region"
    },
    {
      "name": "Domain Click Count Per City",
      "description": "List link count per city"
    },
    {
      "name": "Domain Click Count Per Device",
      "description": "List link count per device"
    },
    {
      "name": "Domain Click Count Per Referrer",
      "description": "List link count per referrer"
    },
    {
      "name": "Link Click Count",
      "description": "List link count(s)"
    },
    {
      "name": "Link Click Count Per Hour",
      "description": "List link count per hour"
    },
    {
      "name": "Link Click Count Per Day",
      "description": "List link count per day"
    },
    {
      "name": "Link Click Count Per Country",
      "description": "List link count per country"
    },
    {
      "name": "Link Click Count Per Region",
      "description": "List link count per region"
    },
    {
      "name": "Link Click Count Per City",
      "description": "List link count per city"
    },
    {
      "name": "Link Click Count Per Device",
      "description": "List link count per device"
    },
    {
      "name": "Link Click Count Per Referrer",
      "description": "List link count per referrer"
    },
    {
      "name": "Misc",
      "description": "Miscellaneous"
    },
    {
      "name": "Error Codes",
      "description": "List of all the error codes that can be returned"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Authentication",
      "tags": [
        "Validate Login",
        "Access Token"
      ]
    },
    {
      "name": "Domains",
      "tags": [
        "List Domains",
        "Get Domain by ID",
        "Get Domain by Domain Name",
        "Create Domain",
        "Update Domain",
        "Delete Domain"
      ]
    },
    {
      "name": "Links",
      "tags": [
        "Get Link",
        "Create Link",
        "Update Link",
        "Validate Link",
        "List Links",
        "List Clicked Links",
        "Get Link By Alias"
      ]
    },
    {
      "name": "UTM Templates",
      "tags": [
        "List UTM Templates"
      ]
    },
    {
      "name": "Domain Analytics",
      "tags": [
        "Domain Click Count Per Day",
        "Domain Click Count Per Country",
        "Domain Click Count Per Region",
        "Domain Click Count Per City",
        "Domain Click Count Per Device",
        "Domain Click Count Per Referrer"
      ]
    },
    {
      "name": "Link Analytics",
      "tags": [
        "Link Click Count",
        "Link Click Count Per Hour",
        "Link Click Count Per Day",
        "Link Click Count Per Country",
        "Link Click Count Per Region",
        "Link Click Count Per City",
        "Link Click Count Per Device",
        "Link Click Count Per Referrer"
      ]
    },
    {
      "name": "Misc",
      "tags": [
        "Error Codes"
      ]
    }
  ],
  "paths": {
    "/validate_login": {
      "post": {
        "summary": "Validates login information",
        "tags": [
          "Validate Login"
        ],
        "description": "Validates login information",
        "responses": {
          "200": {
            "description": "Successfully validated that the username and password are correct",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "integer",
                      "example": 1
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "integer",
                          "example": 2
                        },
                        "nickname": {
                          "type": "string",
                          "example": "Bud"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "bud@smartlinker.email"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The input auth data was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidAuthError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsEmailPassword"
              }
            }
          }
        }
      }
    },
    "/access_token": {
      "post": {
        "summary": "Returns a valid authentication token",
        "tags": [
          "Access Token"
        ],
        "description": " Returns a valid authentication token. When requesting a token it will return an existing not-expired token. If an existing expired token exists, it will generate a new token and return that.\nThis will accept either a password for the account or a refresh token.",
        "responses": {
          "200": {
            "description": "A valid token should have been returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "integer",
                      "example": 1
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "integer",
                          "example": 2
                        },
                        "nickname": {
                          "type": "string",
                          "example": "Bud"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "bud@smartlinker.email"
                        }
                      }
                    },
                    "access_token": {
                      "type": "string",
                      "example": "8Am4WSbKTBvZtDRq48f7"
                    },
                    "expires": {
                      "type": "integer",
                      "description": "GMT Unix timestamp defining the date when the access_token expires",
                      "example": 1918085162
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The input auth data was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidAuthError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CredentialsEmailPassword"
                  },
                  {
                    "$ref": "#/components/schemas/CredentialsEmailRefreshToken"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links": {
      "parameters": [
        {
          "name": "domain_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "summary": "Will take the passed in URL and create a new shortened link.",
        "tags": [
          "Create Link"
        ],
        "description": "Will take the passed in URL and create a new shortened link based on the parameters that are passed in.",
        "responses": {
          "200": {
            "description": "Successfully created the short link using passed in parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "This is the link's id, and corresponds to the {link_id} in other API endpoints"
                          },
                          "url": {
                            "type": "string"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The URI portion of the short link. Will be autogenerated if not defined by client"
                          },
                          "short_link": {
                            "type": "string"
                          },
                          "redirect_url": {
                            "type": "string"
                          },
                          "created": {
                            "type": "integer"
                          },
                          "modified": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "domain_id": {
                            "type": "integer"
                          },
                          "click_count": {
                            "type": "integer"
                          },
                          "notify_on_click": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "redirect_type": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string"
                          },
                          "template_id": {
                            "type": "integer"
                          },
                          "delete_on": {
                            "type": "integer"
                          },
                          "archive_on": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "new_link": {
                      "type": "int"
                    }
                  }
                }
              }
            },
            "links": {
              "GetDomainByDomainId": {
                "$ref": "#/components/links/GetDomainByDomainId"
              }
            }
          },
          "400": {
            "description": "The input data was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidDataError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "url"
                ],
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The long link. The URL protocol is optional."
                  },
                  "alias": {
                    "description": "Short string that will be used at the end of the domain to build your short link. Alias",
                    "type": "string"
                  },
                  "rand_alias_length": {
                    "description": "The length of the randomly generated alias when one is not specified. It is ignored when an alias is specified.",
                    "type": "integer"
                  },
                  "dupe_check": {
                    "description": "When set to 1, BL.INK will search for BL.INKs matching the url to be shortened. If one or more existing BL.INKs exist BL.INK will return the first already existing BL.INK. Otherwise it will create and return a new BL.INK",
                    "type": "integer"
                  },
                  "notes": {
                    "description": "Notes to attach onto the link.",
                    "type": "string"
                  },
                  "notify_on_click": {
                    "description": "When set to 1, the user will be notified by email when this link has been clicked. The default is 0 no notification",
                    "type": "integer"
                  },
                  "override_404_check": {
                    "description": "When set to 1, creation will proceed without checking that the long URL returns a 404 response",
                    "type": "integer"
                  },
                  "tags": {
                    "description": "Array of objects defining tags to be attached to the link",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The tag name",
                          "type": "string"
                        },
                        "shared": {
                          "description": "Indicates if this tag is shared with other users",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "utm_template_id": {
                    "type": "integer"
                  },
                  "utm_fields": {
                    "type": "object",
                    "description": "Object defining key-value pairs for builder fields",
                    "example": {
                      "field_1": "value1",
                      "field_2": "value2",
                      "field_3": "value c"
                    }
                  },
                  "archive_on": {
                    "description": "GMT Unix timestamp defining the date to archive the link",
                    "type": "integer"
                  },
                  "delete_on": {
                    "description": "GMT Unix timestamp defining the date to delete the link",
                    "type": "integer"
                  },
                  "redirect_type": {
                    "type": "integer",
                    "enum": [
                      301,
                      307
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "long URL to search links by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders results differently. Possible values 'oldest' or 'latest'.  Defaults to 'oldest'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "users",
            "in": "query",
            "description": "A flag for privileged users (domain admins or account admins) to specify returning all links  from corresponding domain instead of just links they created. Example users=all",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Returns a list of user's links filtering by query params",
        "tags": [
          "List Links"
        ],
        "description": "Searches for all links matching the query parameters that belong to the API user",
        "responses": {
          "200": {
            "description": "Successfully return a list of links",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of links found by query"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of links returned in the `objects` array"
                    },
                    "click_count": {
                      "type": "integer",
                      "description": "Total number of clicks for all links found not just the ones returned."
                    },
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "This is the link's id, and corresponds to the {link_id} in other API endpoints"
                          },
                          "url": {
                            "type": "string"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The URI portion of the short link. Will be autogenerated if not defined by client"
                          },
                          "short_link": {
                            "type": "string"
                          },
                          "redirect_url": {
                            "type": "string"
                          },
                          "created": {
                            "type": "integer"
                          },
                          "modified": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "domain_id": {
                            "type": "integer"
                          },
                          "click_count": {
                            "type": "integer"
                          },
                          "notify_on_click": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "redirect_type": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string"
                          },
                          "template_id": {
                            "type": "integer"
                          },
                          "delete_on": {
                            "type": "integer"
                          },
                          "archive_on": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input data was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidDataError"
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/clicked": {
      "get": {
        "summary": "Returns links clicked on within a specified time range as well as the number of clicks (lifetime and within range)",
        "tags": [
          "List Clicked Links"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the links that have been clicked within a specified timeframe. A user with elevated privileges automatically queries all user's links under the domain and must use the 'from_user'  flag to specify themselves. See request parameters. A user without these privileges will only be able to query their own links. A domain ID must be specified in the URL. You may provide a timestamp range as well as a page number. The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will return any links clicked from a week ago til today. If only the starting timestamp is set, the result will be the  clicked links from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. The page  defaults to 1 with a max number of results set to a predefined number 50. **The click count  is retrieved from a cached instance and therefore does not represent the real-time total**. Results are sorted by most clicked.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_user",
            "in": "query",
            "required": false,
            "description": "An optional parameter. Valid value 'me' is allowed to only query for your links.",
            "schema": [
              {
                "type": "string"
              }
            ]
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results. Defaults to 1.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per referrer for a given domain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "This is the link's id, and corresponds to the {link_id} in other API endpoints"
                          },
                          "url": {
                            "type": "string"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The URI portion of the short link. Will be autogenerated if not defined by client"
                          },
                          "short_link": {
                            "type": "string"
                          },
                          "redirect_url": {
                            "type": "string"
                          },
                          "created": {
                            "type": "integer"
                          },
                          "modified": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "domain_id": {
                            "type": "integer"
                          },
                          "click_count": {
                            "type": "integer"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "redirect_type": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string"
                          },
                          "template_id": {
                            "type": "integer"
                          },
                          "delete_on": {
                            "type": "integer"
                          },
                          "archive_on": {
                            "type": "integer"
                          },
                          "lifetime_count": {
                            "type": "integer"
                          },
                          "last_clicked": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/links/validate": {
      "post": {
        "summary": "Will take the passed in URL and validate it.",
        "tags": [
          "Validate Link"
        ],
        "description": "Will take the passed in URL and validate it.",
        "responses": {
          "200": {
            "description": "The URL is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input data was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidDataError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "url"
                ],
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL encoded URL. It's a URL"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/{link_id}": {
      "parameters": [
        {
          "name": "domain_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "link_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Returns a short link",
        "tags": [
          "Get Link"
        ],
        "description": "Returns a short link. Each short link has a corresponding domain it belongs to and and individual id.",
        "responses": {
          "200": {
            "description": "Successfully returned a short link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "url": {
                            "type": "string"
                          },
                          "alias": {
                            "type": "string"
                          },
                          "short_link": {
                            "type": "string"
                          },
                          "redirect_url": {
                            "type": "string"
                          },
                          "created": {
                            "type": "integer"
                          },
                          "modified": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "domain_id": {
                            "type": "integer"
                          },
                          "click_count": {
                            "type": "integer"
                          },
                          "notify_on_click": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "redirect_type": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string"
                          },
                          "template_id": {
                            "type": "integer"
                          },
                          "delete_on": {
                            "type": "integer"
                          },
                          "archive_on": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Takes a series of change operations and applies them to the link",
        "tags": [
          "Update Link"
        ],
        "description": "Will take an array of objects defining operations to be performed. This is based on the JSON patch format as defined in [RFC 6902](https://tools.ietf.org/html/rfc6902).\n\n# Supported Operations:\n- replace\n\n# Supported paths:\n- /alias\n- /url\n- /notes\n- /notify_on_click\n- /delete_on\n- /archive_on",
        "responses": {
          "200": {
            "description": "Successfully modified the link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "This is the link's id, and corresponds to the {link_id} in other API endpoints"
                          },
                          "url": {
                            "type": "string"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The URI portion of the short link. Will be autogenerated if not defined by client"
                          },
                          "short_link": {
                            "type": "string"
                          },
                          "redirect_url": {
                            "type": "string"
                          },
                          "created": {
                            "type": "integer"
                          },
                          "modified": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "domain_id": {
                            "type": "integer"
                          },
                          "click_count": {
                            "type": "integer"
                          },
                          "notify_on_click": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "redirect_type": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string"
                          },
                          "template_id": {
                            "type": "integer"
                          },
                          "delete_on": {
                            "type": "integer"
                          },
                          "archive_on": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input data was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidDataError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "op": {
                      "type": "string",
                      "default": "replace",
                      "enum": [
                        "replace"
                      ]
                    },
                    "path": {
                      "type": "string",
                      "enum": [
                        "/alias",
                        "/notes",
                        "/notify_on_click",
                        "/url",
                        "/delete_on",
                        "/archive_on"
                      ],
                      "description": "The path property accepts string values for all paths with the exception of notify_on_click  which accepts only a 0 or 1. However, for the archive on and delete on paths a unix timestamp  integer value can be accepted as an integer or string."
                    },
                    "value": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/exists?alias={alias}": {
      "parameters": [
        {
          "name": "domain_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "alias",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Returns a short link by the given alias",
        "tags": [
          "Get Link By Alias"
        ],
        "description": "Returns a short link. Each short link has a corresponding domain it belongs to and the provided.",
        "responses": {
          "200": {
            "description": "Successfully returned a short link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "url": {
                            "type": "string"
                          },
                          "alias": {
                            "type": "string"
                          },
                          "short_link": {
                            "type": "string"
                          },
                          "redirect_url": {
                            "type": "string"
                          },
                          "created": {
                            "type": "integer"
                          },
                          "modified": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "domain_id": {
                            "type": "integer"
                          },
                          "click_count": {
                            "type": "integer"
                          },
                          "notify_on_click": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "redirect_type": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string"
                          },
                          "template_id": {
                            "type": "integer"
                          },
                          "delete_on": {
                            "type": "integer"
                          },
                          "archive_on": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/clicks/daily": {
      "get": {
        "summary": "Returns the domain click count for each day.",
        "tags": [
          "Domain Click Count Per Day"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a domain grouped by days. A domain ID must be specified in the URL. Optionally, you may provide a timestamp range as well as a page number. The timestamp is assumed to be in UTC format and follow unix standards. The max time period allowed to query is a year. If no  timestamp range is set, the output will be the total count from a week ago til today. If only  the starting timestamp is set, the result will be the counts from a year ahead of starting  timestamp. The ending timestamp cannot be specified on its own without a starting timestamp.  The range cannot exceed a year at a time. The page defaults to 1 with a max number of results set to a predefined number 50. The counts are retrieved from a cached instance and therefore does not  represent the real-time total but comes close. Result are sorted by day.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return the daily total clicks for a given domain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "description": "The UTC date in YYYY-MM-DD format"
                          },
                          "unix_date": {
                            "type": "integer",
                            "description": "The UTC unix timestamp of the start of the date"
                          },
                          "count": {
                            "type": "integer",
                            "description": "The count associated with the date."
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/clicks/country": {
      "get": {
        "summary": "Returns the total click count per country.",
        "tags": [
          "Domain Click Count Per Country"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a domain grouped by country. A  domain ID must be specified in the url with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. The page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by country.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "description": "The country to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per country for a given domain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/clicks/region": {
      "get": {
        "summary": "Returns the total click count per region.",
        "tags": [
          "Domain Click Count Per Region"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a domain grouped by region. A  domain ID must be specified in the url with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. TThe page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by country and region.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "description": "The country to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "description": "The region to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per region for a given domain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string"
                          },
                          "region": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/clicks/city": {
      "get": {
        "summary": "Returns the total click count per city.",
        "tags": [
          "Domain Click Count Per City"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a domain grouped by city. A domain ID must be specified in the url with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. The page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by country, region, and city.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "description": "The country to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "description": "The region to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "description": "The city to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per city for a given domain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string"
                          },
                          "region": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/clicks/device": {
      "get": {
        "summary": "Returns the total click count per device.",
        "tags": [
          "Domain Click Count Per Device"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a domain grouped by device. A  domain ID must be specified in the url with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. The page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by device.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device",
            "in": "query",
            "required": false,
            "description": "The device to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per device for a given domain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "device": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/clicks/referrer": {
      "get": {
        "summary": "Returns the total click count per referrer.",
        "tags": [
          "Domain Click Count Per Referrer"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a domain grouped by referrer. A domain ID must be specified in the url with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. The page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by referrer.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "description": "The unique link identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referrer",
            "in": "query",
            "required": false,
            "description": "The referrer to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results. Defaults to 1.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per referrer for a given domain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "referrer": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/{link_id}/clicks": {
      "get": {
        "summary": "Returns the total and total unique click counts without filters or the time-based filtered count.",
        "tags": [
          "Link Click Count"
        ],
        "description": "This endpoint retrieves the total and total unique clicks made on a link. A unique click is a click that comes from an individual IP address. If a person clicks twice from the same internet device  that has a corresponding IP address the latter click will not be counted in the total unique clicks  result. The total count and the total unique count are only displayed when no filter is applied,  however the filtered count is only present when a timestamp is set. A link ID and domain ID must  be specified in the url parameters with the option to set a timestamp range. The timestamp is  assumed to be in UTC format and follow unix standards. The max time period allowed to query is a  year. If no timestamp range is set, the output will be the total unique and total counts. If only  the starting timestamp is set, the result will be the counts from a year ahead of starting timestamp.  The ending timestamp cannot be specified on its own without a starting timestamp. The range cannot  exceed a year at a time.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "description": "The unique link identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return the unique and total clicks for a given link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Only shows when there is a time based filter"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Only shows when there is no time based filter"
                    },
                    "unique": {
                      "type": "integer",
                      "description": "Only shows when there is no time based filter"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/{link_id}/clicks/daily": {
      "get": {
        "summary": "Returns the link click count for each day.",
        "tags": [
          "Link Click Count Per Day"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a domain link grouped by days. A domain ID and link ID must be specified in the URL. Optionally, you may provide a timestamp range as well as a page number. The timestamp is assumed to be in UTC format and follow unix standards. The max time period allowed to query is a year. If no  timestamp range is set, the output will be the total count from a week ago til today. If only  the starting timestamp is set, the result will be the counts from a year ahead of starting  timestamp. The ending timestamp cannot be specified on its own without a starting timestamp.  The range cannot exceed a year at a time. The page defaults to 1 with a max number of results set to a predefined number 50. The counts are retrieved from a cached instance and therefore does not  represent the real-time total but comes close. Result are sorted by day.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "description": "The unique link identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return the daily total clicks for a given domain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "description": "The UTC date in YYYY-MM-DD format"
                          },
                          "unix_date": {
                            "type": "integer",
                            "description": "The UTC unix timestamp of the start of the date"
                          },
                          "count": {
                            "type": "integer",
                            "description": "The count associated with the date."
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/{link_id}/clicks/hourly": {
      "get": {
        "summary": "Returns the link click count for each hour.",
        "tags": [
          "Link Click Count Per Hour"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a link grouped by hours. The hours are in the  military time range from 0 - 23. Over a span of days this response reports the total clicks on a link for each hour. For example if a link has 5 clicks yesterday at 5pm and 2 clicks at 5pm  today and if the range is set for only those days. The report for hour:17 is 7 clicks; the sum  of the clicks for that hour between the two days. A link ID and domain ID must be specified in  the url parameters with the option to set a timestamp range. The timestamp is assumed to be in  UTC format and follow unix standards. The max time period allowed to query is a year. If no  timestamp range is set, the output will be the total count from a week ago til today. If only  the starting timestamp is set, the result will be the counts from a year ahead of starting  timestamp. The ending timestamp cannot be specified on its own without a starting timestamp.  The range cannot exceed a year at a time. Result are sorted by hour.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "description": "The unique link identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return the unique and total clicks for a given link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hour": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/{link_id}/clicks/country": {
      "get": {
        "summary": "Returns the total click count per country.",
        "tags": [
          "Link Click Count Per Country"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a link grouped by country. A link ID and  domain ID must be specified in the url parameters with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. The page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by country.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "description": "The unique link identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "description": "The country to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per country for a given link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/{link_id}/clicks/region": {
      "get": {
        "summary": "Returns the total click count per region.",
        "tags": [
          "Link Click Count Per Region"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a link grouped by region. A link ID and  domain ID must be specified in the url parameters with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. TThe page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by country and region.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "description": "The unique link identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "description": "The country to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "description": "The region to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per region for a given link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string"
                          },
                          "region": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/{link_id}/clicks/city": {
      "get": {
        "summary": "Returns the total click count per city.",
        "tags": [
          "Link Click Count Per City"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a link grouped by city. A link ID and  domain ID must be specified in the url parameters with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. The page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by country, region, and city.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "description": "The unique link identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "description": "The country to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "description": "The region to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "description": "The city to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per city for a given link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string"
                          },
                          "region": {
                            "type": "string"
                          },
                          "city": {
                            "type": "city"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/{link_id}/clicks/device": {
      "get": {
        "summary": "Returns the total click count per device.",
        "tags": [
          "Link Click Count Per Device"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a link grouped by device. A link ID and  domain ID must be specified in the url parameters with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. The page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by device.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "description": "The unique link identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device",
            "in": "query",
            "required": false,
            "description": "The device to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per device for a given link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "device": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domain_id}/links/{link_id}/clicks/referrer": {
      "get": {
        "summary": "Returns the total click count per referrer.",
        "tags": [
          "Link Click Count Per Referrer"
        ],
        "description": "(**Team, Business, and Enterprise Only**) This endpoint retrieves the total clicks made on a link grouped by referrer. A link ID and  domain ID must be specified in the url parameters with the option to set a timestamp range  and a page to retrieve the paginated results. If the timestamp range exceeds a day the hour  The timestamp is assumed to be in UTC format and follow unix standards. The max time period  allowed to query is a year. If no timestamp range is set, the output will be the total count  from a week ago til today. If only the starting timestamp is set, the result will be the  counts from a year ahead of starting timestamp. The ending timestamp cannot be specified on  its own without a starting timestamp. The range cannot exceed a year at a time. The page  defaults to 1 with a max number of results set to a predefined number 50. The count  is retrieved from a cached instance and therefore does not represent the real-time total. Results are sorted by popularity then by referrer.",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "The unique domain identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "description": "The unique link identifier.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values after this date.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "to_unix",
            "in": "query",
            "required": false,
            "description": "The UTC unix timestamp, query returns values before this date. Required if from_unix is specified.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the user's ID to query. Elevated privileges are required to specify another. Defaults to current user. Valid value 'all' is allowed for users of elevated privileges.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "label_id",
            "in": "query",
            "required": false,
            "description": "An optional parameter containing the label's ID to query.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search link alias, notes, and redirect url for keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referrer",
            "in": "query",
            "required": false,
            "description": "The referrer to query the values",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of to query the values from the paginated results. Defaults to 1.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return total clicks per referrer for a given link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "referrer": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "description": "The link to the first page."
                        },
                        "last": {
                          "type": "string",
                          "description": "The link to the last page."
                        },
                        "previous": {
                          "type": "string",
                          "description": "The link to the previous page, can be null if on first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "The link to the next page, can be null if on last page."
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "A set of meta data unrelated to the query but useful in various API scenarios.",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "The current page number."
                        },
                        "previous_page": {
                          "type": "integer",
                          "description": "The previous page number, can be null if on first page."
                        },
                        "next_page": {
                          "type": "integer",
                          "description": "The next page number, can be null if on last page."
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "The last page number."
                        },
                        "from": {
                          "type": "integer",
                          "description": "The first record of the current page"
                        },
                        "to": {
                          "type": "integer",
                          "description": "The last record of the current page"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The items per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total number of records in all pages. Unrelated to count or sum queries."
                        },
                        "path": {
                          "type": "string",
                          "description": "The base API endpoint for the current request."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "summary": "Returns a list of tags.",
        "tags": [
          "Tags"
        ],
        "description": "Returns a list of tags. domain_id is required",
        "parameters": [
          {
            "description": "Domain ID to query by",
            "name": "domain_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Tag name to query by",
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return a list of tags",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "domain_id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "created": {
                            "type": "integer"
                          },
                          "modified": {
                            "type": "integer"
                          },
                          "shared": {
                            "type": "boolean"
                          },
                          "notes": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new tag",
        "description": "Creates a new tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "domain_id": {
                    "type": "integer"
                  },
                  "shared": {
                    "type": "boolean"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create a new tag.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "domain_id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "created": {
                            "type": "integer"
                          },
                          "modified": {
                            "type": "integer"
                          },
                          "shared": {
                            "type": "boolean"
                          },
                          "notes": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input data was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidDataError"
                }
              }
            }
          }
        }
      }
    },
    "/domains": {
      "get": {
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Returns a list of the user's active domains",
        "tags": [
          "List Domains"
        ],
        "description": "Returns a list of the user's active domains",
        "responses": {
          "200": {
            "description": "Successfully returned a list of active domains.\n# `type` field\nWhen set to `shared-readonly` it denotes that the domain is a BL.INK domain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domains"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new domain on the user's account",
        "tags": [
          "Create Domain"
        ],
        "description": "Creates a domain and returns the domain object as part of the response",
        "responses": {
          "200": {
            "description": "Successfully created and returned a new domain.\nurl_404 in the response object denotes the address the client will be redirected to in the case of a 404 error. homepage in the response object denotes the address the client will be redirected to when visiting the domain without an alias.\nboth url_404 and homepage have defaults if none are provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domains"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "domain"
                ],
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "the domain name"
                  },
                  "default": {
                    "description": "boolean denoting whether this domain should be the user's default domain",
                    "type": "boolean"
                  },
                  "url_404": {
                    "description": "The address you would like 404 errors to redirect to. Must be a valid URL including protocol e.g. 'https://'",
                    "type": "string"
                  },
                  "homepage": {
                    "description": "The address you would like to redirect users to when they visit your domain without an alias. Must be a valid URL including protocol e.g. 'https://'",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domains?domain_name={domain_name}": {
      "get": {
        "parameters": [
          {
            "name": "domain_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Returns a list of the user's requested domain",
        "tags": [
          "Get Domain by Domain Name"
        ],
        "description": "Returns a list of the user's requested domain",
        "responses": {
          "200": {
            "description": "Successfully returned a list of requested domains.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domains"
                }
              }
            }
          }
        }
      }
    },
    "/domains/{domain_id}": {
      "get": {
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Returns a list of the user's requested domain",
        "tags": [
          "Get Domain by ID"
        ],
        "description": "Returns a list of the user's requested domain",
        "responses": {
          "200": {
            "description": "Successfully returned a list of requested domains.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domains"
                }
              }
            }
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Updates the domain in question",
        "tags": [
          "Update Domain"
        ],
        "description": "Creates a domain and returns the domain object as part of the response",
        "responses": {
          "200": {
            "description": "Successfully created and returned a new domain\nurl_404 in the response object denotes the address the client will be redirected to in the case of a 404 error. homepage in the response object denotes the address the client will be redirected to when visiting the domain without an alias.\nboth url_404 and homepage have defaults if none are provided. When provided, they must be a valid URL including protocol e.g. https://",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domains"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "op": {
                    "type": "string",
                    "description": "The operation to be performed. Currently only replace is supported",
                    "enum": [
                      "replace"
                    ]
                  },
                  "path": {
                    "description": "Path or property you want updated",
                    "type": "string",
                    "enum": [
                      "status",
                      "homepage",
                      "url_404"
                    ]
                  },
                  "value": {
                    "description": "The new value you want the path/property to take.\nWhen path is status, only 'active' and 'disabled' are permitted.\nWhen path is homepage or url_404, they must be a valid URL including protocol e.g. 'https://'",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Delete the domain in question including all its links",
        "tags": [
          "Delete Domain"
        ],
        "description": "Deletes a domain and all its links",
        "responses": {
          "200": {
            "description": "Deletes a domain and all its links",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          }
        }
      }
    },
    "/utm_templates": {
      "get": {
        "summary": "Returns a list of available UTM templates",
        "tags": [
          "List UTM Templates"
        ],
        "description": "Returns a list of available UTM templates",
        "parameters": [
          {
            "description": "Domain ID to query by",
            "name": "domain_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returns a list of UTM templates available to the user on the domain passed in through query.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "array",
                            "description": "Contains a list of fields that the parent UTM template contains.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "type": "string"
                                },
                                "field_code": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/error_codes": {
      "get": {
        "summary": "List Error Codes",
        "tags": [
          "Error Codes"
        ],
        "description": "Returns a list of available error codes. The code is guaranteed to stay the same. The message and description may change.",
        "responses": {
          "200": {
            "description": "Successfully returns a list of error codes that can be returned as part of error responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      },
                      "example": [
                        {
                          "code": 10000,
                          "description": "auth invalid token",
                          "message": "invalid token"
                        },
                        {
                          "code": 10001,
                          "description": "auth user may not be registered",
                          "message": "%1$s may not be registered"
                        },
                        {
                          "code": 10100,
                          "description": "link url invalid",
                          "message": "url is invalid"
                        },
                        {
                          "code": 10101,
                          "description": "link domain id invalid",
                          "message": "domain_id is invalid"
                        },
                        {
                          "code": 10102,
                          "description": "link alias invalid",
                          "message": "alias is invalid"
                        },
                        {
                          "code": 10103,
                          "description": "link alias too long",
                          "message": "alias too long"
                        },
                        {
                          "code": 10104,
                          "description": "link alias not allowed",
                          "message": "alias is not allowed"
                        },
                        {
                          "code": 10105,
                          "description": "link notes invalid",
                          "message": "notes invalid"
                        },
                        {
                          "code": 10106,
                          "description": "link notes too long",
                          "message": "notes too long"
                        },
                        {
                          "code": 10107,
                          "description": "link tags invalid",
                          "message": "One or more of your tags are invalid"
                        },
                        {
                          "code": 10108,
                          "description": "link utm template id invalid",
                          "message": "utm_template_id is invalid"
                        },
                        {
                          "code": 10109,
                          "description": "link utm template not found",
                          "message": "UTM template not found"
                        },
                        {
                          "code": 10110,
                          "description": "link utm template item invalid",
                          "message": "One or more of your utm field keys/values are invalid"
                        },
                        {
                          "code": 10111,
                          "description": "link delete on invalid",
                          "message": "delete_on is invalid"
                        },
                        {
                          "code": 10112,
                          "description": "link delete on in the past",
                          "message": "delete_on must be after current time"
                        },
                        {
                          "code": 10113,
                          "description": "link archive on invalid",
                          "message": "archive_on is invalid"
                        },
                        {
                          "code": 10114,
                          "description": "link archive on in the past",
                          "message": "archive_on must be after current time"
                        },
                        {
                          "code": 10115,
                          "description": "link redirect type invalid",
                          "message": "redirect_type is invalid"
                        },
                        {
                          "code": 10116,
                          "description": "link archive on and delete on mutually exclusive",
                          "message": "setting both archive_on and delete_on is not allowed"
                        },
                        {
                          "code": 10120,
                          "description": "link search page invalid",
                          "message": "page is invalid"
                        },
                        {
                          "code": 10121,
                          "description": "link search keyword invalid",
                          "message": "keyword is invalid"
                        },
                        {
                          "code": 10122,
                          "description": "link search url invalid",
                          "message": "url is invalid"
                        },
                        {
                          "code": 10123,
                          "description": "link search order invalid",
                          "message": "order is invalid"
                        },
                        {
                          "code": 10130,
                          "description": "link modify operation invalid",
                          "message": "Operation %1$s not supported"
                        },
                        {
                          "code": 10131,
                          "description": "link modify path invalid",
                          "message": "Modifying path %1$s not supported"
                        },
                        {
                          "code": 10132,
                          "description": "link modify url invalid",
                          "message": "/url value invalid"
                        },
                        {
                          "code": 10133,
                          "description": "link modify alias invalid",
                          "message": "/alias value invalid"
                        },
                        {
                          "code": 10134,
                          "description": "link modify notes invalid",
                          "message": "/notes value invalid"
                        },
                        {
                          "code": 10135,
                          "description": "link modify notes too long",
                          "message": "/notes value too long"
                        },
                        {
                          "code": 10140,
                          "description": "link modify alias not available",
                          "message": "%1$s"
                        },
                        {
                          "code": 10141,
                          "description": "link modify save failed",
                          "message": "%1$s"
                        },
                        {
                          "code": 10142,
                          "description": "link create save failed",
                          "message": "%1$s"
                        },
                        {
                          "code": 10143,
                          "description": "link suggestions not found",
                          "message": "%1$s"
                        },
                        {
                          "code": 10144,
                          "description": "You have exhausted the maximum number of Links, Dynamic Links, or Pages you can create on your current plan.",
                          "message": "You have exhausted the limits of your current plan"
                        },
                        {
                          "code": 10200,
                          "description": "utm domain id missing",
                          "message": "domain_id is required"
                        },
                        {
                          "code": 10201,
                          "description": "utm domain id invalid",
                          "message": "domain_id is invalid"
                        },
                        {
                          "code": 10300,
                          "description": "tags domain id missing",
                          "message": "domain_id is required"
                        },
                        {
                          "code": 10301,
                          "description": "tags domain id invalid",
                          "message": "domain_id is invalid"
                        },
                        {
                          "code": 10302,
                          "description": "tags search parameter invalid",
                          "message": "search parameter is invalid"
                        },
                        {
                          "code": 10303,
                          "description": "tags name missing",
                          "message": "tag name is required"
                        },
                        {
                          "code": 10304,
                          "description": "tags name invalid",
                          "message": "tag name is invalid"
                        },
                        {
                          "code": 10305,
                          "description": "tags shared invalid",
                          "message": "shared is invalid"
                        },
                        {
                          "code": 10306,
                          "description": "tags notes invalid",
                          "message": "notes is invalid"
                        },
                        {
                          "code": 10307,
                          "description": "tags notes too long",
                          "message": "notes too long"
                        },
                        {
                          "code": 10308,
                          "description": "tags name already exists",
                          "message": "tag name already exists"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InvalidDataError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "minimum": 10000,
                  "maximum": 10999
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "InvalidAuthError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "integer",
            "example": 0
          },
          "error_code": {
            "type": "integer",
            "example": 401
          },
          "error_message": {
            "type": "string",
            "example": "Not valid"
          }
        }
      },
      "CredentialsEmailPassword": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "bud@smartlinker.email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "CredentialsEmailRefreshToken": {
        "type": "object",
        "required": [
          "email",
          "refresh_token"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "bud@smartlinker.email"
          },
          "refresh_token": {
            "type": "string",
            "format": "string",
            "example": "sdafkjsdfhkwerohfkdsfhgkjhdsgfk"
          }
        }
      },
      "domains": {
        "type": "object",
        "properties": {
          "objects": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "domain": {
                  "type": "string"
                },
                "created": {
                  "type": "integer"
                },
                "modified": {
                  "type": "integer"
                },
                "default": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string"
                },
                "url_404": {
                  "type": "string"
                },
                "homepage": {
                  "type": "string"
                },
                "has_ssl": {
                  "type": "boolean"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "current_page": {
                "type": "integer"
              },
              "previous_page": {
                "type": "integer"
              },
              "next_page": {
                "type": "integer"
              },
              "last_page": {
                "type": "integer"
              },
              "from": {
                "type": "integer"
              },
              "to": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "path": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "links": {
      "GetDomainByDomainId": {
        "description": "The `id` value returned in the response can be used as the `domain_id` parameter in `GET /{domain_id}/links`.\n",
        "operationId": "getUser",
        "parameters": {
          "userId": "$response.body#/id"
        }
      }
    }
  }
}