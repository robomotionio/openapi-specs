{
  "openapi": "3.0.0",
  "info": {
    "title": "Website API",
    "description": "Simple REST API to retrieve and manage contacts, form messages, store products, orders or webhooks.",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://your-domain/api/site",
      "variables": {}
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "List All Contacts",
        "description": "Get a paginated list of all contacts created in your website. Optionally filter by created date.",
        "operationId": "ListAllContacts",
        "parameters": [
          {
            "name": "created_at_min",
            "in": "query",
            "description": "List only contacts created after the specified timestamp (inclusive, in seconds since the Unix epoch)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1573251649
            }
          },
          {
            "name": "created_at_max",
            "in": "query",
            "description": "List only contacts created before the specified timestamp (inclusive, in seconds since the Unix epoch)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1573251649
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of contacts to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 25
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllContactsresponse"
                },
                "example": {
                  "items": [
                    {
                      "id": 123,
                      "name": "John Doe",
                      "email": "john@doe.com",
                      "phone": "+123456789",
                      "note": "Contact Note",
                      "address": "address",
                      "city": "city",
                      "state": "state",
                      "zip": "zip",
                      "country": "country",
                      "companyName": "Company Name",
                      "createdOn": 1573240303,
                      "properties": [
                        {
                          "name": "lead_status",
                          "value": "contacted"
                        },
                        {
                          "name": "custom_property",
                          "value": "property value"
                        }
                      ],
                      "tags": [
                        "tag1",
                        "tag2"
                      ],
                      "memberId": 487,
                      "subscribed": true,
                      "subscriberLists": [
                        0,
                        87647751
                      ]
                    },
                    {
                      "id": 99,
                      "name": "Another Contact Name",
                      "email": "contact2@email.com",
                      "phone": "+123456789",
                      "note": "Contact Note",
                      "address": "address",
                      "city": "city",
                      "state": "state",
                      "zip": "zip",
                      "country": "country",
                      "companyName": "Company Name",
                      "createdOn": 1573240303,
                      "properties": [
                        {
                          "name": "lead_status",
                          "value": "pending"
                        }
                      ],
                      "tags": [
                        "tag1",
                        "tag2"
                      ],
                      "subscribed": false,
                      "subscriberLists": []
                    }
                  ],
                  "totalCount": 2,
                  "limit": 25,
                  "skip": 0
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create New Contact",
        "description": "Create a contact. If a contact with the supplied email already exists, it will be updated. Only supplied parameters are set.",
        "operationId": "CreateNewContact",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at_min",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at_max",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewContactrequest"
              },
              "example": {
                "name": "John Doe",
                "email": "john@doe.com",
                "phone": "+123456789",
                "properties": [
                  {
                    "name": "lead_status",
                    "value": "pending"
                  }
                ],
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewContactresponse"
                },
                "example": {
                  "id": 123,
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "phone": "+123456789",
                  "properties": [
                    {
                      "name": "lead_status",
                      "value": "pending"
                    }
                  ],
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/search-by-email": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Search by email",
        "description": "Look for a contact by email",
        "operationId": "Searchbyemail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The email address to look for.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "john@doe.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Searchbyemailresponse"
                },
                "example": {
                  "id": 123,
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "phone": "+123456789",
                  "note": "Contact Note",
                  "address": "address",
                  "city": "city",
                  "state": "state",
                  "zip": "zip",
                  "country": "country",
                  "companyName": "Company Name",
                  "createdOn": 1573240303,
                  "properties": [
                    {
                      "name": "lead_status",
                      "value": "contacted"
                    },
                    {
                      "name": "custom_property",
                      "value": "property value"
                    }
                  ],
                  "tags": [
                    "tag1",
                    "tag2"
                  ],
                  "memberId": 487,
                  "subscribed": true,
                  "subscriberLists": [
                    0,
                    87647751
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Searchbyemailresponse1"
                },
                "example": {
                  "success": false,
                  "message": "Contact not found"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve Contact",
        "description": "Retrieve a single contact.",
        "operationId": "RetrieveContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the contact",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveContactresponse"
                },
                "example": {
                  "id": 123,
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "phone": "+123456789",
                  "note": "Contact Note",
                  "address": "address",
                  "city": "city",
                  "state": "state",
                  "zip": "zip",
                  "country": "country",
                  "companyName": "Company Name",
                  "createdOn": 1573240303,
                  "properties": [
                    {
                      "name": "lead_status",
                      "value": "contacted"
                    },
                    {
                      "name": "custom_property",
                      "value": "property value"
                    }
                  ],
                  "tags": [
                    "tag1",
                    "tag2"
                  ],
                  "memberId": 478,
                  "subscribed": true,
                  "subscriberLists": [
                    0,
                    87647751
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveContactresponse1"
                },
                "example": {
                  "success": false,
                  "message": "Contact not found"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update Contact",
        "description": "Update a single contact. Only non-empty fields are set.",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the contact",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactrequest"
              },
              "example": {
                "name": "John Doe",
                "email": "john@doe.com",
                "phone": "+123456789",
                "properties": [
                  {
                    "name": "lead_status",
                    "value": "pending"
                  }
                ],
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactresponse"
                },
                "example": {
                  "id": 123,
                  "name": "Contact Name",
                  "email": "contact@email.com",
                  "phone": "+123456789",
                  "note": "Contact Note",
                  "address": "address",
                  "city": "city",
                  "state": "state",
                  "zip": "zip",
                  "country": "country",
                  "companyName": "Company Name",
                  "createdOn": 1573240303,
                  "properties": [
                    {
                      "name": "lead_status",
                      "value": "contacted"
                    },
                    {
                      "name": "custom_property",
                      "value": "property value"
                    }
                  ],
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactresponse1"
                },
                "example": {
                  "success": false,
                  "message": "Contact not found"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete Contact",
        "description": "Deletes the contact and all data associated with it.",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the contact",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactresponse"
                },
                "example": {
                  "success": true,
                  "message": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/members": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "List All Members",
        "description": "Get a paginated list of all members in your website. Optionally filter by group id.",
        "operationId": "ListAllMembers",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "description": "List only members in the specified group",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 12
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of members to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 25
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllMembersresponse"
                },
                "example": {
                  "items": [
                    {
                      "id": 123,
                      "name": "John Doe",
                      "email": "john@doe.com",
                      "registeredOn": 1587489771,
                      "groups": [
                        59,
                        98
                      ],
                      "approved": true,
                      "contactId": 147,
                      "billingAddress": {
                        "companyName": "",
                        "companyId": "",
                        "country": "US",
                        "state": "VA",
                        "city": "Williamsburg",
                        "zipCode": "23185",
                        "address": "10 Capitol Landing Rd",
                        "address2": ""
                      },
                      "shippingAddress": {
                        "companyName": "",
                        "companyId": "",
                        "country": "US",
                        "state": "VA",
                        "city": "Williamsburg",
                        "zipCode": "23185",
                        "address": "10 Capitol Landing Rd",
                        "address2": ""
                      }
                    }
                  ],
                  "totalCount": 1,
                  "limit": 30,
                  "skip": 0
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "Create New Member",
        "description": "Create new member.\n\nIf password is provided, the member will be created with the provided password. \nOtherwise the member will be created with a random password and a password-reset email will be sent to the member.",
        "operationId": "CreateNewMember",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewMemberrequest"
              },
              "example": {
                "name": "John Doe",
                "email": "john@doe.com",
                "password": "my-password",
                "groups": [
                  14
                ],
                "approved": true,
                "billingAddress": {
                  "companyName": "",
                  "companyId": "",
                  "country": "US",
                  "state": "VA",
                  "city": "Williamsburg",
                  "zipCode": "23185",
                  "address": "10 Capitol Landing Rd",
                  "address2": ""
                },
                "shippingAddress": {
                  "companyName": "",
                  "companyId": "",
                  "country": "US",
                  "state": "VA",
                  "city": "Williamsburg",
                  "zipCode": "23185",
                  "address": "10 Capitol Landing Rd",
                  "address2": ""
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewMemberresponse"
                },
                "example": {
                  "id": 157,
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "groups": [
                    14
                  ],
                  "contactId": 48,
                  "approved": true,
                  "registeredOn": 1587489771,
                  "billingAddress": {
                    "companyName": "",
                    "companyId": "",
                    "country": "US",
                    "state": "VA",
                    "city": "Williamsburg",
                    "zipCode": "23185",
                    "address": "10 Capitol Landing Rd",
                    "address2": ""
                  },
                  "shippingAddress": {
                    "companyName": "",
                    "companyId": "",
                    "country": "US",
                    "state": "VA",
                    "city": "Williamsburg",
                    "zipCode": "23185",
                    "address": "10 Capitol Landing Rd",
                    "address2": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/members/{id}": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Retrieve Member",
        "description": "Retrieve a single member.",
        "operationId": "RetrieveMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the member",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 111
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMemberresponse"
                },
                "example": {
                  "id": 123,
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "registeredOn": 1587489771000,
                  "groups": [
                    59,
                    98
                  ],
                  "approved": false,
                  "contactId": 147,
                  "billingAddress": {
                    "companyName": "",
                    "companyId": "",
                    "country": "US",
                    "state": "VA",
                    "city": "Williamsburg",
                    "zipCode": "23185",
                    "address": "10 Capitol Landing Rd",
                    "address2": ""
                  },
                  "shippingAddress": {
                    "companyName": "",
                    "companyId": "",
                    "country": "US",
                    "state": "VA",
                    "city": "Williamsburg",
                    "zipCode": "23185",
                    "address": "10 Capitol Landing Rd",
                    "address2": ""
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMemberresponse1"
                },
                "example": {
                  "success": false,
                  "message": "Member not found"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Members"
        ],
        "summary": "Update Member",
        "description": "Update a single member. Only non-empty fields are set. The member password will NOT be updated.",
        "operationId": "UpdateMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the member",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 111
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberrequest"
              },
              "example": {
                "groups": [
                  66,
                  99
                ],
                "approved": true,
                "shippingAddress": {
                  "companyName": "",
                  "companyId": "",
                  "country": "US",
                  "state": "VA",
                  "city": "Williamsburg",
                  "zipCode": "23185",
                  "address": "22 Capitol Landing Rd",
                  "address2": ""
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMemberresponse"
                },
                "example": {
                  "id": 111,
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "registeredOn": 1587489771,
                  "groups": [
                    66,
                    99
                  ],
                  "approved": true,
                  "contactId": 147,
                  "billingAddress": {
                    "companyName": "",
                    "companyId": "",
                    "country": "US",
                    "state": "VA",
                    "city": "Williamsburg",
                    "zipCode": "23185",
                    "address": "10 Capitol Landing Rd",
                    "address2": ""
                  },
                  "shippingAddress": {
                    "name": "John Doe",
                    "phone": "",
                    "companyName": "",
                    "companyId": "",
                    "country": "US",
                    "state": "VA",
                    "city": "Williamsburg",
                    "zipCode": "23185",
                    "address": "22 Capitol Landing Rd",
                    "address2": ""
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMemberresponse1"
                },
                "example": {
                  "success": false,
                  "message": "Member not found"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "summary": "Delete Member",
        "description": "Delete the member.",
        "operationId": "DeleteMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the member",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 111
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMemberresponse"
                },
                "example": {
                  "success": true,
                  "message": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/members/start-session": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "Start Session",
        "description": "If you already have your own authentication mechanism in your app / website, Single-Sign-On allows your authenticated members to directly access the member area without logging in again.\n\nTo initiate a session, call the `Start Session` endpoint from your backend and redirect the members to the `accessUrl` from the response.\nOptionally, pass the `path` attribute in the request to direct members to a specific page.\n\nThe `accessUrl` is valid for 15 minutes.",
        "operationId": "StartSession",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartSessionrequest"
              },
              "example": {
                "email": "john@doe.com",
                "path": "/protected-member-only-page"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartSessionresponse"
                },
                "example": {
                  "token": "xxxxx.xxxxx.xxxxx",
                  "accessUrl": "https://your-domain/api/site/members/session/xxxxx.xxxxx.xxxxx",
                  "createdAt": 1605283421,
                  "expiresAt": 1605284321
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/member-groups": {
      "get": {
        "tags": [
          "Member groups"
        ],
        "summary": "List All Member Groups",
        "description": "Get a list of all member groups in your website.",
        "operationId": "ListAllMemberGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllMemberGroupsresponse"
                  },
                  "description": "",
                  "example": [
                    {
                      "id": 1,
                      "name": "Basic Members",
                      "link": ""
                    },
                    {
                      "id": 2,
                      "name": "Group 1",
                      "link": ""
                    }
                  ]
                },
                "example": [
                  {
                    "id": 1,
                    "name": "Basic Members",
                    "link": ""
                  },
                  {
                    "id": 2,
                    "name": "Group 1",
                    "link": ""
                  }
                ]
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Member groups"
        ],
        "summary": "Create New Member Group",
        "description": "Creates new member group",
        "operationId": "CreateNewMemberGroup",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewMemberGrouprequest"
              },
              "example": {
                "name": "New group",
                "link": ""
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewMemberGroupresponse"
                },
                "example": {
                  "id": 223,
                  "name": "New group",
                  "link": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/member-groups/{id}": {
      "get": {
        "tags": [
          "Member groups"
        ],
        "summary": "Retrieve Member Group",
        "description": "Retrieve a single member group",
        "operationId": "RetrieveMemberGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the member group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 111
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMemberGroupresponse"
                },
                "example": {
                  "id": 111,
                  "name": "My new group",
                  "link": ""
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Member groups"
        ],
        "summary": "Update Member Group",
        "description": "Create new member group",
        "operationId": "UpdateMemberGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the member group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 111
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberGrouprequest"
              },
              "example": {
                "name": "My new group",
                "link": ""
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMemberGroupresponse"
                },
                "example": {
                  "id": 111,
                  "name": "My new group",
                  "link": ""
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Member groups"
        ],
        "summary": "Delete Member Group",
        "description": "Delete a member group",
        "operationId": "DeleteMemberGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the member group",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 111
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMemberGroupresponse"
                },
                "example": {
                  "success": true,
                  "message": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "List All Products",
        "description": "Get a paginated list of all products in your website. Optionally filter by category or product name.",
        "operationId": "ListAllProducts",
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "List only products in the specified category (includes all products in the subcategories, if any).",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 12
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "List only products containing the specified string in their title.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "shirt"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of products to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 25
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllProductsresponse"
                },
                "example": {
                  "items": [
                    {
                      "id": 123,
                      "type": "physical",
                      "title": "Running Shoes",
                      "description": "Great Running Shoes!",
                      "url": "running-shoes",
                      "hidden": false,
                      "options": [],
                      "categories": [
                        {
                          "id": 1,
                          "name": "Shoes",
                          "url": "shoes",
                          "parentCategory": 0
                        }
                      ],
                      "images": [
                        "https://path-to-image.jpg",
                        "https://path-to-another-image.jpg"
                      ],
                      "variants": [
                        {
                          "options": [],
                          "sku": "SH-123",
                          "quantity": 10,
                          "price": 69.99,
                          "regularPrice": null,
                          "onSale": false
                        }
                      ]
                    }
                  ],
                  "totalCount": 1,
                  "limit": 25,
                  "skip": 0
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create New Product",
        "description": "Create a product. (This example creates a product with 3 options - 2 of them advanced). \nSet `update_existing_product_by_url` to `true` to find existing products with the same URL and update them instead",
        "operationId": "CreateNewProduct",
        "parameters": [
          {
            "name": "update_existing_product_by_url",
            "in": "query",
            "description": "If set to true and a product with the same URL exists, the existing product will be updated instead",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewProductrequest"
              },
              "example": {
                "type": "physical",
                "title": "Interior Door",
                "description": "Beautiful Interior Door",
                "url": "interior-door",
                "hidden": false,
                "categories": [
                  {
                    "id": 1,
                    "name": "Shoes",
                    "url": "shoes",
                    "parentCategory": 0
                  }
                ],
                "images": [
                  "https://path-to-image.jpg",
                  "https://path-to-another-image.jpg"
                ],
                "options": [
                  {
                    "name": "Material",
                    "values": [
                      "Wood",
                      "Glass"
                    ],
                    "advanced": true
                  },
                  {
                    "name": "Size",
                    "values": [
                      "Single",
                      "Double"
                    ],
                    "advanced": true
                  },
                  {
                    "name": "Finish",
                    "values": [
                      "Matte",
                      "Glossy"
                    ],
                    "advanced": false
                  }
                ],
                "variants": [
                  {
                    "options": [
                      "Wood",
                      "Single"
                    ],
                    "sku": "D-001",
                    "price": 199
                  },
                  {
                    "options": [
                      "Wood",
                      "Double"
                    ],
                    "sku": "D-002",
                    "price": 345
                  },
                  {
                    "options": [
                      "Glass",
                      "Single"
                    ],
                    "sku": "D-003",
                    "price": 145
                  },
                  {
                    "options": [
                      "Glass",
                      "Double"
                    ],
                    "sku": "D-004",
                    "price": 249
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewProductresponse"
                },
                "example": {
                  "id": 111,
                  "type": "physical",
                  "title": "Interior Door",
                  "description": "Beautiful Interior Door",
                  "url": "interior-door",
                  "hidden": false,
                  "categories": [
                    {
                      "id": 1,
                      "name": "Shoes",
                      "url": "shoes",
                      "parentCategory": 0
                    }
                  ],
                  "images": [
                    "https://path-to-image.jpg",
                    "https://path-to-another-image.jpg"
                  ],
                  "options": [
                    {
                      "name": "Material",
                      "values": [
                        "Wood",
                        "Glass"
                      ],
                      "advanced": true
                    },
                    {
                      "name": "Size",
                      "values": [
                        "Single",
                        "Double"
                      ],
                      "advanced": true
                    },
                    {
                      "name": "Finish",
                      "values": [
                        "Matte",
                        "Glossy"
                      ],
                      "advanced": false
                    }
                  ],
                  "variants": [
                    {
                      "options": [
                        "Wood",
                        "Single"
                      ],
                      "sku": "D-001",
                      "price": 199,
                      "salePrice": null,
                      "onSale": false,
                      "quantity": null,
                      "weight": null
                    },
                    {
                      "options": [
                        "Wood",
                        "Double"
                      ],
                      "sku": "D-002",
                      "price": 345,
                      "salePrice": null,
                      "onSale": false,
                      "quantity": null,
                      "weight": null
                    },
                    {
                      "options": [
                        "Glass",
                        "Single"
                      ],
                      "sku": "D-003",
                      "price": 145,
                      "salePrice": null,
                      "onSale": false,
                      "quantity": null,
                      "weight": null
                    },
                    {
                      "options": [
                        "Glass",
                        "Double"
                      ],
                      "sku": "D-004",
                      "price": 249,
                      "salePrice": null,
                      "onSale": false,
                      "quantity": null,
                      "weight": null
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve Product",
        "description": "Retrieve a single product.",
        "operationId": "RetrieveProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 111
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveProductresponse"
                },
                "example": {
                  "id": 111,
                  "type": "physical",
                  "title": "Interior Door",
                  "description": "Beautiful Interior Door",
                  "url": "interior-door",
                  "hidden": false,
                  "categories": [
                    {
                      "id": 1,
                      "name": "Shoes",
                      "url": "shoes",
                      "parentCategory": 0
                    }
                  ],
                  "images": [
                    "https://path-to-image.jpg",
                    "https://path-to-another-image.jpg"
                  ],
                  "options": [
                    {
                      "name": "Material",
                      "values": [
                        "Wood",
                        "Glass"
                      ],
                      "advanced": true
                    },
                    {
                      "name": "Size",
                      "values": [
                        "Single",
                        "Double"
                      ],
                      "advanced": true
                    },
                    {
                      "name": "Finish",
                      "values": [
                        "Matte",
                        "Glossy"
                      ],
                      "advanced": false
                    }
                  ],
                  "variants": [
                    {
                      "options": [
                        "Wood",
                        "Single"
                      ],
                      "sku": "D-001",
                      "price": 199,
                      "salePrice": null,
                      "onSale": false,
                      "quantity": null,
                      "weight": null
                    },
                    {
                      "options": [
                        "Wood",
                        "Double"
                      ],
                      "sku": "D-002",
                      "price": 345,
                      "salePrice": null,
                      "onSale": false,
                      "quantity": null,
                      "weight": null
                    },
                    {
                      "options": [
                        "Glass",
                        "Single"
                      ],
                      "sku": "D-003",
                      "price": 145,
                      "salePrice": null,
                      "onSale": false,
                      "quantity": null,
                      "weight": null
                    },
                    {
                      "options": [
                        "Glass",
                        "Double"
                      ],
                      "sku": "D-004",
                      "price": 249,
                      "salePrice": null,
                      "onSale": false,
                      "quantity": null,
                      "weight": null
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveProductresponse1"
                },
                "example": {
                  "success": false,
                  "message": "Product not found"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update Product",
        "description": "Update a single product. Only non-empty fields or provided variants are set.",
        "operationId": "UpdateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 111
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductresponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductresponse1"
                },
                "example": {
                  "success": false,
                  "message": "Product not found"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete Product",
        "description": "Deletes the product.",
        "operationId": "DeleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 111
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProductresponse"
                },
                "example": {
                  "success": true,
                  "message": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/products/categories": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "List all categories",
        "description": "Get a list of all categories in the store",
        "operationId": "Listallcategories",
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "List only direct sub-categories of the provided parent",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Listallcategoriesresponse"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "List All Orders",
        "description": "Get a paginated list of all contacts created in your website. Optionally filter by created date.",
        "operationId": "ListAllOrders",
        "parameters": [
          {
            "name": "created_at_min",
            "in": "query",
            "description": "List only orders created after the specified timestamp (inclusive, in seconds since the Unix epoch)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1573251649
            }
          },
          {
            "name": "created_at_max",
            "in": "query",
            "description": "List only orders created before the specified timestamp (inclusive, in seconds since the Unix epoch)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1573251649
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of orders to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 25
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllOrdersresponse"
                },
                "example": {
                  "items": [
                    {
                      "id": 1234,
                      "invoiceNo": 15,
                      "created": 1573397217,
                      "customerName": "John Doe",
                      "customerEmail": "john@email.com",
                      "billingAddress": {
                        "name": "John Doe",
                        "phone": "",
                        "companyName": "",
                        "companyId": "",
                        "country": "US",
                        "state": "VA",
                        "city": "Williamsburg",
                        "zipCode": "23185",
                        "address": "10 Capitol Landing Rd",
                        "address2": ""
                      },
                      "shippingAddress": {
                        "name": "John Doe",
                        "phone": "",
                        "companyName": "",
                        "companyId": "",
                        "country": "US",
                        "state": "VA",
                        "city": "Williamsburg",
                        "zipCode": "23185",
                        "address": "10 Capitol Landing Rd",
                        "address2": ""
                      },
                      "shippingRequired": true,
                      "weight": 0,
                      "weightUnit": "kg",
                      "subTotal": 49,
                      "total": 49,
                      "discountCode": null,
                      "discountType": null,
                      "shippingAmount": 0,
                      "shippingName": "",
                      "paid": true,
                      "paymentMethod": "stripe",
                      "status": "completed",
                      "discountAmount": 0,
                      "taxes": [],
                      "items": [
                        {
                          "id": 123,
                          "name": "Running Shoes",
                          "url": "running-shoes",
                          "productId": 24,
                          "sku": null,
                          "quantity": 1,
                          "weight": 0,
                          "total": 49,
                          "type": "physical",
                          "shippingRequired": true,
                          "images": [
                            "https://path-to-image.jpg"
                          ],
                          "variation": [
                            {
                              "name": "Color",
                              "value": "Blue"
                            }
                          ],
                          "additions": []
                        }
                      ]
                    }
                  ],
                  "totalCount": 1,
                  "limit": 25,
                  "skip": 0
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve Order",
        "description": "Retrieve a single order.",
        "operationId": "RetrieveOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1234
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveOrderresponse"
                },
                "example": {
                  "id": 1234,
                  "invoiceNo": 15,
                  "created": 1573397217,
                  "customerName": "John Doe",
                  "customerEmail": "john@email.com",
                  "billingAddress": {
                    "name": "John Doe",
                    "phone": "",
                    "companyName": "",
                    "companyId": "",
                    "country": "US",
                    "state": "VA",
                    "city": "Williamsburg",
                    "zipCode": "23185",
                    "address": "10 Capitol Landing Rd",
                    "address2": ""
                  },
                  "shippingAddress": {
                    "name": "John Doe",
                    "phone": "",
                    "companyName": "",
                    "companyId": "",
                    "country": "US",
                    "state": "VA",
                    "city": "Williamsburg",
                    "zipCode": "23185",
                    "address": "10 Capitol Landing Rd",
                    "address2": ""
                  },
                  "shippingRequired": true,
                  "weight": 0,
                  "weightUnit": "kg",
                  "subTotal": 49,
                  "total": 49,
                  "discountCode": null,
                  "discountType": null,
                  "shippingAmount": 0,
                  "shippingName": "",
                  "paid": true,
                  "paymentMethod": "stripe",
                  "status": "completed",
                  "discountAmount": 0,
                  "taxes": [],
                  "items": [
                    {
                      "id": 123,
                      "name": "Running Shoes",
                      "url": "running-shoes",
                      "productId": 24,
                      "sku": null,
                      "quantity": 1,
                      "weight": 0,
                      "total": 49,
                      "type": "physical",
                      "shippingRequired": true,
                      "images": [
                        "https://path-to-image.jpg"
                      ],
                      "variation": [
                        {
                          "name": "Color",
                          "value": "Blue"
                        }
                      ],
                      "additions": []
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveOrderresponse1"
                },
                "example": {
                  "success": false,
                  "message": "Order not found"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/form-submissions": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get All Form Submissions",
        "description": "Get a paginated list of all form submissions in the website",
        "operationId": "GetAllFormSubmissions",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "List only form submissions created after the specified timestamp (inclusive, in seconds since the Unix epoch)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1573251649
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "List only form submissions created before the specified timestamp (inclusive, in seconds since the Unix epoch)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1573251649
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 50
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllFormSubmissionsresponse"
                },
                "example": {
                  "items": [
                    {
                      "name": "Contact form",
                      "received": 1573120479,
                      "fields": [
                        {
                          "name": "Your Name",
                          "value": "John Doe"
                        },
                        {
                          "name": "Your Email",
                          "value": "john@doe.com"
                        }
                      ]
                    },
                    {
                      "name": "Contact form",
                      "received": 1573120453,
                      "fields": [
                        {
                          "name": "Your Name",
                          "value": "Bill"
                        },
                        {
                          "name": "Email",
                          "value": "bill@site.com"
                        }
                      ]
                    }
                  ],
                  "totalCount": 2,
                  "limit": 50,
                  "skip": 0
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/bookings": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "Get All Bookings",
        "description": "Get a paginated list of booked sessions in the website / funnel.",
        "operationId": "GetAllBookings",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "List only bookings starting after the specified timestamp (inclusive, in seconds since the Unix epoch)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1573251649
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "List only bookings starting before the specified timestamp (inclusive, in seconds since the Unix epoch)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1573251649
            }
          },
          {
            "name": "eventId",
            "in": "query",
            "description": "List only bookings with the selected id",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 50
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBookingsresponse"
                },
                "example": {
                  "items": [
                    {
                      "id": 206,
                      "eventId": 98146,
                      "contactId": 41,
                      "name": "Jane Doe",
                      "email": "jane@doe.com",
                      "start": 1587936600,
                      "end": 1587938400,
                      "eventData": {
                        "name": "My event",
                        "location": "Skype"
                      },
                      "operator": {
                        "id": 51215,
                        "name": "John Doe",
                        "email": "john@doe.com"
                      },
                      "fromAnswers": [
                        {
                          "field": "Name",
                          "value": "Jane Doe"
                        },
                        {
                          "field": "Email",
                          "value": "jane@doe.com"
                        }
                      ]
                    }
                  ],
                  "totalCount": 1,
                  "limit": 50,
                  "skip": 0
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriber-lists": {
      "get": {
        "tags": [
          "Subscriber lists"
        ],
        "summary": "Get All Subscriber Lists",
        "description": "Get a list of all subscriber lists in the website / funnel.",
        "operationId": "GetAllSubscriberLists",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllSubscriberListsresponse"
                  },
                  "description": "",
                  "example": [
                    {
                      "id": 0,
                      "name": "Default list",
                      "created": 1606476754,
                      "subscribers": 44,
                      "opens": 0.75,
                      "clicks": 0.25
                    },
                    {
                      "id": 87647751,
                      "name": "My list",
                      "created": 1613384738,
                      "subscribers": 25,
                      "opens": 0.85,
                      "clicks": 0.41
                    }
                  ]
                },
                "example": [
                  {
                    "id": 0,
                    "name": "Default list",
                    "created": 1606476754,
                    "subscribers": 44,
                    "opens": 0.75,
                    "clicks": 0.25
                  },
                  {
                    "id": 87647751,
                    "name": "My list",
                    "created": 1613384738,
                    "subscribers": 25,
                    "opens": 0.85,
                    "clicks": 0.41
                  }
                ]
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Subscriber lists"
        ],
        "summary": "Create New Subscriber LIst",
        "description": "Create a subscriber list for email marketing purposes.",
        "operationId": "CreateNewSubscriberLIst",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewSubscriberLIstrequest"
              },
              "example": {
                "name": "New List"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewSubscriberLIstresponse"
                },
                "example": {
                  "id": 87647899,
                  "name": "New List",
                  "created": 1613384844,
                  "subscribers": 0,
                  "opens": 0,
                  "clicks": 0
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriber-lists/{id}": {
      "get": {
        "tags": [
          "Subscriber lists"
        ],
        "summary": "Retrieve Subscriber List",
        "description": "Retrieve a single email marketing list.",
        "operationId": "RetrieveSubscriberList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the contact",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 87647751
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveSubscriberListresponse"
                },
                "example": {
                  "id": 87647751,
                  "name": "My list",
                  "created": 1613384738,
                  "subscribers": 25,
                  "opens": 0.85,
                  "clicks": 0.41
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveSubscriberListresponse1"
                },
                "example": {
                  "success": false,
                  "message": "List not found"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Subscriber lists"
        ],
        "summary": "Update Subscriber List",
        "description": "Update a single email marketing list.",
        "operationId": "UpdateSubscriberList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the contact",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 87647751
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriberListrequest"
              },
              "example": {
                "name": "New Name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubscriberListresponse"
                },
                "example": {
                  "id": 87647751,
                  "name": "New Name",
                  "created": 1613384738,
                  "subscribers": 25,
                  "opens": 0.85,
                  "clicks": 0.41
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubscriberListresponse1"
                },
                "example": {
                  "success": false,
                  "message": "List not found"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Subscriber lists"
        ],
        "summary": "Delete Subscriber List",
        "description": "Delete a subscriber list.",
        "operationId": "DeleteSubscriberList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the contact",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 87647751
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSubscriberListresponse"
                },
                "example": {
                  "success": true,
                  "message": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List All Webhooks",
        "description": "Get a list of all webhooks in your website.",
        "operationId": "ListAllWebhooks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListAllWebhooksresponse"
                  },
                  "description": "",
                  "example": [
                    {
                      "id": "rh_24488493954",
                      "target": "https://your-target.com/some-path",
                      "secret": "41pweL23Yuy8NB11",
                      "events": [
                        "order_created",
                        "order_updated"
                      ]
                    },
                    {
                      "id": "rh_244adc93954",
                      "target": "https://your-target.com/another-path",
                      "secret": "1234eL23zac8NB11",
                      "events": [
                        "contact_updated"
                      ]
                    }
                  ]
                },
                "example": [
                  {
                    "id": "rh_24488493954",
                    "target": "https://your-target.com/some-path",
                    "secret": "41pweL23Yuy8NB11",
                    "events": [
                      "order_created",
                      "order_updated"
                    ]
                  },
                  {
                    "id": "rh_244adc93954",
                    "target": "https://your-target.com/another-path",
                    "secret": "1234eL23zac8NB11",
                    "events": [
                      "contact_updated"
                    ]
                  }
                ]
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create New Webhook",
        "description": "Create a webhook.",
        "operationId": "CreateNewWebhook",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewWebhookrequest"
              },
              "example": {
                "target": "https://your-target.com/some-path",
                "secret": "your-secret",
                "events": [
                  "order_created",
                  "order_updated"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewWebhookresponse"
                },
                "example": {
                  "id": "rh_4ac124dde21",
                  "target": "https://your-target.com/some-path",
                  "secret": "your-secret",
                  "events": [
                    "order_created",
                    "order_updated"
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/{id}": {
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete Webhook",
        "description": "Deletes the webhook",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the webhook",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "rh_4ac124dde21"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWebhookresponse"
                },
                "example": {
                  "success": true,
                  "message": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "ListAllContactsresponse": {
        "title": "ListAllContactsresponse",
        "required": [
          "items",
          "totalCount",
          "limit",
          "skip"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "items": [
            {
              "id": 123,
              "name": "John Doe",
              "email": "john@doe.com",
              "phone": "+123456789",
              "note": "Contact Note",
              "address": "address",
              "city": "city",
              "state": "state",
              "zip": "zip",
              "country": "country",
              "companyName": "Company Name",
              "createdOn": 1573240303,
              "properties": [
                {
                  "name": "lead_status",
                  "value": "contacted"
                },
                {
                  "name": "custom_property",
                  "value": "property value"
                }
              ],
              "tags": [
                "tag1",
                "tag2"
              ],
              "memberId": 487,
              "subscribed": true,
              "subscriberLists": [
                0,
                87647751
              ]
            },
            {
              "id": 99,
              "name": "Another Contact Name",
              "email": "contact2@email.com",
              "phone": "+123456789",
              "note": "Contact Note",
              "address": "address",
              "city": "city",
              "state": "state",
              "zip": "zip",
              "country": "country",
              "companyName": "Company Name",
              "createdOn": 1573240303,
              "properties": [
                {
                  "name": "lead_status",
                  "value": "pending"
                }
              ],
              "tags": [
                "tag1",
                "tag2"
              ],
              "subscribed": false,
              "subscriberLists": []
            }
          ],
          "totalCount": 2,
          "limit": 25,
          "skip": 0
        }
      },
      "Item": {
        "title": "Item",
        "required": [
          "id",
          "name",
          "email",
          "phone",
          "note",
          "address",
          "city",
          "state",
          "zip",
          "country",
          "companyName",
          "createdOn",
          "properties",
          "tags",
          "subscribed",
          "subscriberLists"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "createdOn": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "subscribed": {
            "type": "boolean"
          },
          "subscriberLists": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "description": ""
          }
        },
        "example": {
          "id": 123,
          "name": "John Doe",
          "email": "john@doe.com",
          "phone": "+123456789",
          "note": "Contact Note",
          "address": "address",
          "city": "city",
          "state": "state",
          "zip": "zip",
          "country": "country",
          "companyName": "Company Name",
          "createdOn": 1573240303,
          "properties": [
            {
              "name": "lead_status",
              "value": "contacted"
            },
            {
              "name": "custom_property",
              "value": "property value"
            }
          ],
          "tags": [
            "tag1",
            "tag2"
          ],
          "memberId": 487,
          "subscribed": true,
          "subscriberLists": [
            0,
            87647751
          ]
        }
      },
      "Property": {
        "title": "Property",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "example": {
          "name": "lead_status",
          "value": "contacted"
        }
      },
      "CreateNewContactrequest": {
        "title": "CreateNewContactrequest",
        "required": [
          "name",
          "email",
          "phone",
          "properties",
          "tags"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "name": "John Doe",
          "email": "john@doe.com",
          "phone": "+123456789",
          "properties": [
            {
              "name": "lead_status",
              "value": "pending"
            }
          ],
          "tags": [
            "tag1",
            "tag2"
          ]
        }
      },
      "CreateNewContactresponse": {
        "title": "CreateNewContactresponse",
        "required": [
          "id",
          "name",
          "email",
          "phone",
          "properties",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": 123,
          "name": "John Doe",
          "email": "john@doe.com",
          "phone": "+123456789",
          "properties": [
            {
              "name": "lead_status",
              "value": "pending"
            }
          ],
          "tags": [
            "tag1",
            "tag2"
          ]
        }
      },
      "Searchbyemailresponse": {
        "title": "Searchbyemailresponse",
        "required": [
          "id",
          "name",
          "email",
          "phone",
          "note",
          "address",
          "city",
          "state",
          "zip",
          "country",
          "companyName",
          "createdOn",
          "properties",
          "tags",
          "memberId",
          "subscribed",
          "subscriberLists"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "createdOn": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "subscribed": {
            "type": "boolean"
          },
          "subscriberLists": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          }
        },
        "example": {
          "id": 123,
          "name": "John Doe",
          "email": "john@doe.com",
          "phone": "+123456789",
          "note": "Contact Note",
          "address": "address",
          "city": "city",
          "state": "state",
          "zip": "zip",
          "country": "country",
          "companyName": "Company Name",
          "createdOn": 1573240303,
          "properties": [
            {
              "name": "lead_status",
              "value": "contacted"
            },
            {
              "name": "custom_property",
              "value": "property value"
            }
          ],
          "tags": [
            "tag1",
            "tag2"
          ],
          "memberId": 487,
          "subscribed": true,
          "subscriberLists": [
            0,
            87647751
          ]
        }
      },
      "Searchbyemailresponse1": {
        "title": "Searchbyemailresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "Contact not found"
        }
      },
      "RetrieveContactresponse": {
        "title": "RetrieveContactresponse",
        "required": [
          "id",
          "name",
          "email",
          "phone",
          "note",
          "address",
          "city",
          "state",
          "zip",
          "country",
          "companyName",
          "createdOn",
          "properties",
          "tags",
          "memberId",
          "subscribed",
          "subscriberLists"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "createdOn": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "subscribed": {
            "type": "boolean"
          },
          "subscriberLists": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          }
        },
        "example": {
          "id": 123,
          "name": "John Doe",
          "email": "john@doe.com",
          "phone": "+123456789",
          "note": "Contact Note",
          "address": "address",
          "city": "city",
          "state": "state",
          "zip": "zip",
          "country": "country",
          "companyName": "Company Name",
          "createdOn": 1573240303,
          "properties": [
            {
              "name": "lead_status",
              "value": "contacted"
            },
            {
              "name": "custom_property",
              "value": "property value"
            }
          ],
          "tags": [
            "tag1",
            "tag2"
          ],
          "memberId": 478,
          "subscribed": true,
          "subscriberLists": [
            0,
            87647751
          ]
        }
      },
      "RetrieveContactresponse1": {
        "title": "RetrieveContactresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "Contact not found"
        }
      },
      "UpdateContactrequest": {
        "title": "UpdateContactrequest",
        "required": [
          "name",
          "email",
          "phone",
          "properties",
          "tags"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "name": "John Doe",
          "email": "john@doe.com",
          "phone": "+123456789",
          "properties": [
            {
              "name": "lead_status",
              "value": "pending"
            }
          ],
          "tags": [
            "tag1",
            "tag2"
          ]
        }
      },
      "UpdateContactresponse": {
        "title": "UpdateContactresponse",
        "required": [
          "id",
          "name",
          "email",
          "phone",
          "note",
          "address",
          "city",
          "state",
          "zip",
          "country",
          "companyName",
          "createdOn",
          "properties",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "createdOn": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": 123,
          "name": "Contact Name",
          "email": "contact@email.com",
          "phone": "+123456789",
          "note": "Contact Note",
          "address": "address",
          "city": "city",
          "state": "state",
          "zip": "zip",
          "country": "country",
          "companyName": "Company Name",
          "createdOn": 1573240303,
          "properties": [
            {
              "name": "lead_status",
              "value": "contacted"
            },
            {
              "name": "custom_property",
              "value": "property value"
            }
          ],
          "tags": [
            "tag1",
            "tag2"
          ]
        }
      },
      "UpdateContactresponse1": {
        "title": "UpdateContactresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "Contact not found"
        }
      },
      "DeleteContactresponse": {
        "title": "DeleteContactresponse",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "message": ""
        }
      },
      "ListAllMembersresponse": {
        "title": "ListAllMembersresponse",
        "required": [
          "items",
          "totalCount",
          "limit",
          "skip"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item1"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "items": [
            {
              "id": 123,
              "name": "John Doe",
              "email": "john@doe.com",
              "registeredOn": 1587489771,
              "groups": [
                59,
                98
              ],
              "approved": true,
              "contactId": 147,
              "billingAddress": {
                "companyName": "",
                "companyId": "",
                "country": "US",
                "state": "VA",
                "city": "Williamsburg",
                "zipCode": "23185",
                "address": "10 Capitol Landing Rd",
                "address2": ""
              },
              "shippingAddress": {
                "companyName": "",
                "companyId": "",
                "country": "US",
                "state": "VA",
                "city": "Williamsburg",
                "zipCode": "23185",
                "address": "10 Capitol Landing Rd",
                "address2": ""
              }
            }
          ],
          "totalCount": 1,
          "limit": 30,
          "skip": 0
        }
      },
      "Item1": {
        "title": "Item1",
        "required": [
          "id",
          "name",
          "email",
          "registeredOn",
          "groups",
          "approved",
          "contactId",
          "billingAddress",
          "shippingAddress"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "registeredOn": {
            "type": "integer",
            "format": "int32"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "approved": {
            "type": "boolean"
          },
          "contactId": {
            "type": "integer",
            "format": "int32"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress"
          }
        },
        "example": {
          "id": 123,
          "name": "John Doe",
          "email": "john@doe.com",
          "registeredOn": 1587489771,
          "groups": [
            59,
            98
          ],
          "approved": true,
          "contactId": 147,
          "billingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          },
          "shippingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          }
        }
      },
      "BillingAddress": {
        "title": "BillingAddress",
        "required": [
          "companyName",
          "companyId",
          "country",
          "state",
          "city",
          "zipCode",
          "address",
          "address2"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          }
        },
        "example": {
          "companyName": "",
          "companyId": "",
          "country": "US",
          "state": "VA",
          "city": "Williamsburg",
          "zipCode": "23185",
          "address": "10 Capitol Landing Rd",
          "address2": ""
        }
      },
      "ShippingAddress": {
        "title": "ShippingAddress",
        "required": [
          "companyName",
          "companyId",
          "country",
          "state",
          "city",
          "zipCode",
          "address",
          "address2"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          }
        },
        "example": {
          "companyName": "",
          "companyId": "",
          "country": "US",
          "state": "VA",
          "city": "Williamsburg",
          "zipCode": "23185",
          "address": "10 Capitol Landing Rd",
          "address2": ""
        }
      },
      "CreateNewMemberrequest": {
        "title": "CreateNewMemberrequest",
        "required": [
          "name",
          "email",
          "password",
          "groups",
          "approved",
          "billingAddress",
          "shippingAddress"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "approved": {
            "type": "boolean"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress"
          }
        },
        "example": {
          "name": "John Doe",
          "email": "john@doe.com",
          "password": "my-password",
          "groups": [
            14
          ],
          "approved": true,
          "billingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          },
          "shippingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          }
        }
      },
      "CreateNewMemberresponse": {
        "title": "CreateNewMemberresponse",
        "required": [
          "id",
          "name",
          "email",
          "groups",
          "contactId",
          "approved",
          "registeredOn",
          "billingAddress",
          "shippingAddress"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "contactId": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "boolean"
          },
          "registeredOn": {
            "type": "integer",
            "format": "int32"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress"
          }
        },
        "example": {
          "id": 157,
          "name": "John Doe",
          "email": "john@doe.com",
          "groups": [
            14
          ],
          "contactId": 48,
          "approved": true,
          "registeredOn": 1587489771,
          "billingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          },
          "shippingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          }
        }
      },
      "RetrieveMemberresponse": {
        "title": "RetrieveMemberresponse",
        "required": [
          "id",
          "name",
          "email",
          "registeredOn",
          "groups",
          "approved",
          "contactId",
          "billingAddress",
          "shippingAddress"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "registeredOn": {
            "type": "integer",
            "format": "int64"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "approved": {
            "type": "boolean"
          },
          "contactId": {
            "type": "integer",
            "format": "int32"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress"
          }
        },
        "example": {
          "id": 123,
          "name": "John Doe",
          "email": "john@doe.com",
          "registeredOn": 1587489771000,
          "groups": [
            59,
            98
          ],
          "approved": false,
          "contactId": 147,
          "billingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          },
          "shippingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          }
        }
      },
      "RetrieveMemberresponse1": {
        "title": "RetrieveMemberresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "Member not found"
        }
      },
      "UpdateMemberrequest": {
        "title": "UpdateMemberrequest",
        "required": [
          "groups",
          "approved",
          "shippingAddress"
        ],
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "approved": {
            "type": "boolean"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress"
          }
        },
        "example": {
          "groups": [
            66,
            99
          ],
          "approved": true,
          "shippingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "22 Capitol Landing Rd",
            "address2": ""
          }
        }
      },
      "UpdateMemberresponse": {
        "title": "UpdateMemberresponse",
        "required": [
          "id",
          "name",
          "email",
          "registeredOn",
          "groups",
          "approved",
          "contactId",
          "billingAddress",
          "shippingAddress"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "registeredOn": {
            "type": "integer",
            "format": "int32"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "approved": {
            "type": "boolean"
          },
          "contactId": {
            "type": "integer",
            "format": "int32"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress5"
          }
        },
        "example": {
          "id": 111,
          "name": "John Doe",
          "email": "john@doe.com",
          "registeredOn": 1587489771,
          "groups": [
            66,
            99
          ],
          "approved": true,
          "contactId": 147,
          "billingAddress": {
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          },
          "shippingAddress": {
            "name": "John Doe",
            "phone": "",
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "22 Capitol Landing Rd",
            "address2": ""
          }
        }
      },
      "ShippingAddress5": {
        "title": "ShippingAddress5",
        "required": [
          "name",
          "phone",
          "companyName",
          "companyId",
          "country",
          "state",
          "city",
          "zipCode",
          "address",
          "address2"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          }
        },
        "example": {
          "name": "John Doe",
          "phone": "",
          "companyName": "",
          "companyId": "",
          "country": "US",
          "state": "VA",
          "city": "Williamsburg",
          "zipCode": "23185",
          "address": "22 Capitol Landing Rd",
          "address2": ""
        }
      },
      "UpdateMemberresponse1": {
        "title": "UpdateMemberresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "Member not found"
        }
      },
      "DeleteMemberresponse": {
        "title": "DeleteMemberresponse",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "message": ""
        }
      },
      "StartSessionrequest": {
        "title": "StartSessionrequest",
        "required": [
          "email",
          "path"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "example": {
          "email": "john@doe.com",
          "path": "/protected-member-only-page"
        }
      },
      "StartSessionresponse": {
        "title": "StartSessionresponse",
        "required": [
          "token",
          "accessUrl",
          "createdAt",
          "expiresAt"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "accessUrl": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int32"
          },
          "expiresAt": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "token": "xxxxx.xxxxx.xxxxx",
          "accessUrl": "https://your-domain/api/site/members/session/xxxxx.xxxxx.xxxxx",
          "createdAt": 1605283421,
          "expiresAt": 1605284321
        }
      },
      "ListAllMemberGroupsresponse": {
        "title": "ListAllMemberGroupsresponse",
        "required": [
          "id",
          "name",
          "link"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "example": {
          "id": 1,
          "name": "Basic Members",
          "link": ""
        }
      },
      "CreateNewMemberGrouprequest": {
        "title": "CreateNewMemberGrouprequest",
        "required": [
          "name",
          "link"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "example": {
          "name": "New group",
          "link": ""
        }
      },
      "CreateNewMemberGroupresponse": {
        "title": "CreateNewMemberGroupresponse",
        "required": [
          "id",
          "name",
          "link"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "example": {
          "id": 223,
          "name": "New group",
          "link": ""
        }
      },
      "RetrieveMemberGroupresponse": {
        "title": "RetrieveMemberGroupresponse",
        "required": [
          "id",
          "name",
          "link"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "example": {
          "id": 111,
          "name": "My new group",
          "link": ""
        }
      },
      "UpdateMemberGrouprequest": {
        "title": "UpdateMemberGrouprequest",
        "required": [
          "name",
          "link"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "example": {
          "name": "My new group",
          "link": ""
        }
      },
      "UpdateMemberGroupresponse": {
        "title": "UpdateMemberGroupresponse",
        "required": [
          "id",
          "name",
          "link"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "example": {
          "id": 111,
          "name": "My new group",
          "link": ""
        }
      },
      "DeleteMemberGroupresponse": {
        "title": "DeleteMemberGroupresponse",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "message": ""
        }
      },
      "ListAllProductsresponse": {
        "title": "ListAllProductsresponse",
        "required": [
          "items",
          "totalCount",
          "limit",
          "skip"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item2"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "items": [
            {
              "id": 123,
              "type": "physical",
              "title": "Running Shoes",
              "description": "Great Running Shoes!",
              "url": "running-shoes",
              "hidden": false,
              "options": [],
              "categories": [
                {
                  "id": 1,
                  "name": "Shoes",
                  "url": "shoes",
                  "parentCategory": 0
                }
              ],
              "images": [
                "https://path-to-image.jpg",
                "https://path-to-another-image.jpg"
              ],
              "variants": [
                {
                  "options": [],
                  "sku": "SH-123",
                  "quantity": 10,
                  "price": 69.99,
                  "regularPrice": null,
                  "onSale": false
                }
              ]
            }
          ],
          "totalCount": 1,
          "limit": 25,
          "skip": 0
        }
      },
      "Item2": {
        "title": "Item2",
        "required": [
          "id",
          "type",
          "title",
          "description",
          "url",
          "hidden",
          "options",
          "categories",
          "images",
          "variants"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "description": ""
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variant"
            },
            "description": ""
          }
        },
        "example": {
          "id": 123,
          "type": "physical",
          "title": "Running Shoes",
          "description": "Great Running Shoes!",
          "url": "running-shoes",
          "hidden": false,
          "options": [],
          "categories": [
            {
              "id": 1,
              "name": "Shoes",
              "url": "shoes",
              "parentCategory": 0
            }
          ],
          "images": [
            "https://path-to-image.jpg",
            "https://path-to-another-image.jpg"
          ],
          "variants": [
            {
              "options": [],
              "sku": "SH-123",
              "quantity": 10,
              "price": 69.99,
              "regularPrice": null,
              "onSale": false
            }
          ]
        }
      },
      "Category": {
        "title": "Category",
        "required": [
          "id",
          "name",
          "url",
          "parentCategory"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "parentCategory": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": 1,
          "name": "Shoes",
          "url": "shoes",
          "parentCategory": 0
        }
      },
      "Variant": {
        "title": "Variant",
        "required": [
          "options",
          "sku",
          "quantity",
          "price",
          "regularPrice",
          "onSale"
        ],
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "sku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number"
          },
          "regularPrice": {
            "type": "string",
            "nullable": true
          },
          "onSale": {
            "type": "boolean"
          }
        },
        "example": {
          "options": [],
          "sku": "SH-123",
          "quantity": 10,
          "price": 69.99,
          "regularPrice": null,
          "onSale": false
        }
      },
      "CreateNewProductrequest": {
        "title": "CreateNewProductrequest",
        "required": [
          "type",
          "title",
          "description",
          "url",
          "hidden",
          "categories",
          "images",
          "options",
          "variants"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "description": ""
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Option"
            },
            "description": ""
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variant1"
            },
            "description": ""
          }
        },
        "example": {
          "type": "physical",
          "title": "Interior Door",
          "description": "Beautiful Interior Door",
          "url": "interior-door",
          "hidden": false,
          "categories": [
            {
              "id": 1,
              "name": "Shoes",
              "url": "shoes",
              "parentCategory": 0
            }
          ],
          "images": [
            "https://path-to-image.jpg",
            "https://path-to-another-image.jpg"
          ],
          "options": [
            {
              "name": "Material",
              "values": [
                "Wood",
                "Glass"
              ],
              "advanced": true
            },
            {
              "name": "Size",
              "values": [
                "Single",
                "Double"
              ],
              "advanced": true
            },
            {
              "name": "Finish",
              "values": [
                "Matte",
                "Glossy"
              ],
              "advanced": false
            }
          ],
          "variants": [
            {
              "options": [
                "Wood",
                "Single"
              ],
              "sku": "D-001",
              "price": 199
            },
            {
              "options": [
                "Wood",
                "Double"
              ],
              "sku": "D-002",
              "price": 345
            },
            {
              "options": [
                "Glass",
                "Single"
              ],
              "sku": "D-003",
              "price": 145
            },
            {
              "options": [
                "Glass",
                "Double"
              ],
              "sku": "D-004",
              "price": 249
            }
          ]
        }
      },
      "Option": {
        "title": "Option",
        "required": [
          "name",
          "values",
          "advanced"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "advanced": {
            "type": "boolean"
          }
        },
        "example": {
          "name": "Material",
          "values": [
            "Wood",
            "Glass"
          ],
          "advanced": true
        }
      },
      "Variant1": {
        "title": "Variant1",
        "required": [
          "options",
          "sku",
          "price"
        ],
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "sku": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "options": [
            "Wood",
            "Single"
          ],
          "sku": "D-001",
          "price": 199
        }
      },
      "CreateNewProductresponse": {
        "title": "CreateNewProductresponse",
        "required": [
          "id",
          "type",
          "title",
          "description",
          "url",
          "hidden",
          "categories",
          "images",
          "options",
          "variants"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "description": ""
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Option"
            },
            "description": ""
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variant2"
            },
            "description": ""
          }
        },
        "example": {
          "id": 111,
          "type": "physical",
          "title": "Interior Door",
          "description": "Beautiful Interior Door",
          "url": "interior-door",
          "hidden": false,
          "categories": [
            {
              "id": 1,
              "name": "Shoes",
              "url": "shoes",
              "parentCategory": 0
            }
          ],
          "images": [
            "https://path-to-image.jpg",
            "https://path-to-another-image.jpg"
          ],
          "options": [
            {
              "name": "Material",
              "values": [
                "Wood",
                "Glass"
              ],
              "advanced": true
            },
            {
              "name": "Size",
              "values": [
                "Single",
                "Double"
              ],
              "advanced": true
            },
            {
              "name": "Finish",
              "values": [
                "Matte",
                "Glossy"
              ],
              "advanced": false
            }
          ],
          "variants": [
            {
              "options": [
                "Wood",
                "Single"
              ],
              "sku": "D-001",
              "price": 199,
              "salePrice": null,
              "onSale": false,
              "quantity": null,
              "weight": null
            },
            {
              "options": [
                "Wood",
                "Double"
              ],
              "sku": "D-002",
              "price": 345,
              "salePrice": null,
              "onSale": false,
              "quantity": null,
              "weight": null
            },
            {
              "options": [
                "Glass",
                "Single"
              ],
              "sku": "D-003",
              "price": 145,
              "salePrice": null,
              "onSale": false,
              "quantity": null,
              "weight": null
            },
            {
              "options": [
                "Glass",
                "Double"
              ],
              "sku": "D-004",
              "price": 249,
              "salePrice": null,
              "onSale": false,
              "quantity": null,
              "weight": null
            }
          ]
        }
      },
      "Variant2": {
        "title": "Variant2",
        "required": [
          "options",
          "sku",
          "price",
          "salePrice",
          "onSale",
          "quantity",
          "weight"
        ],
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "sku": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "salePrice": {
            "type": "string",
            "nullable": true
          },
          "onSale": {
            "type": "boolean"
          },
          "quantity": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "options": [
            "Wood",
            "Single"
          ],
          "sku": "D-001",
          "price": 199,
          "salePrice": null,
          "onSale": false,
          "quantity": null,
          "weight": null
        }
      },
      "RetrieveProductresponse": {
        "title": "RetrieveProductresponse",
        "required": [
          "id",
          "type",
          "title",
          "description",
          "url",
          "hidden",
          "categories",
          "images",
          "options",
          "variants"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "description": ""
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Option"
            },
            "description": ""
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variant2"
            },
            "description": ""
          }
        },
        "example": {
          "id": 111,
          "type": "physical",
          "title": "Interior Door",
          "description": "Beautiful Interior Door",
          "url": "interior-door",
          "hidden": false,
          "categories": [
            {
              "id": 1,
              "name": "Shoes",
              "url": "shoes",
              "parentCategory": 0
            }
          ],
          "images": [
            "https://path-to-image.jpg",
            "https://path-to-another-image.jpg"
          ],
          "options": [
            {
              "name": "Material",
              "values": [
                "Wood",
                "Glass"
              ],
              "advanced": true
            },
            {
              "name": "Size",
              "values": [
                "Single",
                "Double"
              ],
              "advanced": true
            },
            {
              "name": "Finish",
              "values": [
                "Matte",
                "Glossy"
              ],
              "advanced": false
            }
          ],
          "variants": [
            {
              "options": [
                "Wood",
                "Single"
              ],
              "sku": "D-001",
              "price": 199,
              "salePrice": null,
              "onSale": false,
              "quantity": null,
              "weight": null
            },
            {
              "options": [
                "Wood",
                "Double"
              ],
              "sku": "D-002",
              "price": 345,
              "salePrice": null,
              "onSale": false,
              "quantity": null,
              "weight": null
            },
            {
              "options": [
                "Glass",
                "Single"
              ],
              "sku": "D-003",
              "price": 145,
              "salePrice": null,
              "onSale": false,
              "quantity": null,
              "weight": null
            },
            {
              "options": [
                "Glass",
                "Double"
              ],
              "sku": "D-004",
              "price": 249,
              "salePrice": null,
              "onSale": false,
              "quantity": null,
              "weight": null
            }
          ]
        }
      },
      "RetrieveProductresponse1": {
        "title": "RetrieveProductresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "Product not found"
        }
      },
      "UpdateProductresponse": {
        "title": "UpdateProductresponse",
        "required": [
          "id",
          "type",
          "title",
          "description",
          "url",
          "hidden",
          "categories",
          "images",
          "options",
          "variants"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "description": ""
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Option"
            },
            "description": ""
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variant4"
            },
            "description": ""
          }
        }
      },
      "Variant4": {
        "title": "Variant4",
        "required": [
          "options",
          "sku",
          "price",
          "salePrice",
          "onSale",
          "quantity",
          "weight"
        ],
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "sku": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "salePrice": {
            "type": "string",
            "nullable": true
          },
          "onSale": {
            "type": "boolean"
          },
          "quantity": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              {
                "type": "string",
                "nullable": true
              },
              {
                "nullable": true
              }
            ]
          },
          "weight": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "options": [
            "Wood",
            "Single"
          ],
          "sku": "D-001",
          "price": 179,
          "salePrice": null,
          "onSale": false,
          "quantity": 5,
          "weight": null
        }
      },
      "UpdateProductresponse1": {
        "title": "UpdateProductresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "Product not found"
        }
      },
      "DeleteProductresponse": {
        "title": "DeleteProductresponse",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "message": ""
        }
      },
      "Listallcategoriesresponse": {
        "title": "Listallcategoriesresponse",
        "required": [
          "id",
          "name",
          "url",
          "parentCategory"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "parentCategory": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "integer",
                "format": "int32"
              },
              {
                "nullable": true
              }
            ]
          }
        }
      },
      "ListAllOrdersresponse": {
        "title": "ListAllOrdersresponse",
        "required": [
          "items",
          "totalCount",
          "limit",
          "skip"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item3"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "items": [
            {
              "id": 1234,
              "invoiceNo": 15,
              "created": 1573397217,
              "customerName": "John Doe",
              "customerEmail": "john@email.com",
              "billingAddress": {
                "name": "John Doe",
                "phone": "",
                "companyName": "",
                "companyId": "",
                "country": "US",
                "state": "VA",
                "city": "Williamsburg",
                "zipCode": "23185",
                "address": "10 Capitol Landing Rd",
                "address2": ""
              },
              "shippingAddress": {
                "name": "John Doe",
                "phone": "",
                "companyName": "",
                "companyId": "",
                "country": "US",
                "state": "VA",
                "city": "Williamsburg",
                "zipCode": "23185",
                "address": "10 Capitol Landing Rd",
                "address2": ""
              },
              "shippingRequired": true,
              "weight": 0,
              "weightUnit": "kg",
              "subTotal": 49,
              "total": 49,
              "discountCode": null,
              "discountType": null,
              "shippingAmount": 0,
              "shippingName": "",
              "paid": true,
              "paymentMethod": "stripe",
              "status": "completed",
              "discountAmount": 0,
              "taxes": [],
              "items": [
                {
                  "id": 123,
                  "name": "Running Shoes",
                  "url": "running-shoes",
                  "productId": 24,
                  "sku": null,
                  "quantity": 1,
                  "weight": 0,
                  "total": 49,
                  "type": "physical",
                  "shippingRequired": true,
                  "images": [
                    "https://path-to-image.jpg"
                  ],
                  "variation": [
                    {
                      "name": "Color",
                      "value": "Blue"
                    }
                  ],
                  "additions": []
                }
              ]
            }
          ],
          "totalCount": 1,
          "limit": 25,
          "skip": 0
        }
      },
      "Item3": {
        "title": "Item3",
        "required": [
          "id",
          "invoiceNo",
          "created",
          "customerName",
          "customerEmail",
          "billingAddress",
          "shippingAddress",
          "shippingRequired",
          "weight",
          "weightUnit",
          "subTotal",
          "total",
          "discountCode",
          "discountType",
          "shippingAmount",
          "shippingName",
          "paid",
          "paymentMethod",
          "status",
          "discountAmount",
          "taxes",
          "items"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNo": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string"
          },
          "customerEmail": {
            "type": "string"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/BillingAddress5"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress5"
          },
          "shippingRequired": {
            "type": "boolean"
          },
          "weight": {
            "type": "number"
          },
          "weightUnit": {
            "type": "string"
          },
          "subTotal": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "discountCode": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "nullable": true
          },
          "shippingAmount": {
            "type": "number"
          },
          "shippingName": {
            "type": "string"
          },
          "paid": {
            "type": "boolean"
          },
          "paymentMethod": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "discountAmount": {
            "type": "number"
          },
          "taxes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item4"
            },
            "description": ""
          }
        },
        "example": {
          "id": 1234,
          "invoiceNo": 15,
          "created": 1573397217,
          "customerName": "John Doe",
          "customerEmail": "john@email.com",
          "billingAddress": {
            "name": "John Doe",
            "phone": "",
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          },
          "shippingAddress": {
            "name": "John Doe",
            "phone": "",
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          },
          "shippingRequired": true,
          "weight": 0,
          "weightUnit": "kg",
          "subTotal": 49,
          "total": 49,
          "discountCode": null,
          "discountType": null,
          "shippingAmount": 0,
          "shippingName": "",
          "paid": true,
          "paymentMethod": "stripe",
          "status": "completed",
          "discountAmount": 0,
          "taxes": [],
          "items": [
            {
              "id": 123,
              "name": "Running Shoes",
              "url": "running-shoes",
              "productId": 24,
              "sku": null,
              "quantity": 1,
              "weight": 0,
              "total": 49,
              "type": "physical",
              "shippingRequired": true,
              "images": [
                "https://path-to-image.jpg"
              ],
              "variation": [
                {
                  "name": "Color",
                  "value": "Blue"
                }
              ],
              "additions": []
            }
          ]
        }
      },
      "BillingAddress5": {
        "title": "BillingAddress5",
        "required": [
          "name",
          "phone",
          "companyName",
          "companyId",
          "country",
          "state",
          "city",
          "zipCode",
          "address",
          "address2"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          }
        },
        "example": {
          "name": "John Doe",
          "phone": "",
          "companyName": "",
          "companyId": "",
          "country": "US",
          "state": "VA",
          "city": "Williamsburg",
          "zipCode": "23185",
          "address": "10 Capitol Landing Rd",
          "address2": ""
        }
      },
      "Item4": {
        "title": "Item4",
        "required": [
          "id",
          "name",
          "url",
          "productId",
          "sku",
          "quantity",
          "weight",
          "total",
          "type",
          "shippingRequired",
          "images",
          "variation",
          "additions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "shippingRequired": {
            "type": "boolean"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "variation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variation"
            },
            "description": ""
          },
          "additions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": 123,
          "name": "Running Shoes",
          "url": "running-shoes",
          "productId": 24,
          "sku": null,
          "quantity": 1,
          "weight": 0,
          "total": 49,
          "type": "physical",
          "shippingRequired": true,
          "images": [
            "https://path-to-image.jpg"
          ],
          "variation": [
            {
              "name": "Color",
              "value": "Blue"
            }
          ],
          "additions": []
        }
      },
      "Variation": {
        "title": "Variation",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "example": {
          "name": "Color",
          "value": "Blue"
        }
      },
      "RetrieveOrderresponse": {
        "title": "RetrieveOrderresponse",
        "required": [
          "id",
          "invoiceNo",
          "created",
          "customerName",
          "customerEmail",
          "billingAddress",
          "shippingAddress",
          "shippingRequired",
          "weight",
          "weightUnit",
          "subTotal",
          "total",
          "discountCode",
          "discountType",
          "shippingAmount",
          "shippingName",
          "paid",
          "paymentMethod",
          "status",
          "discountAmount",
          "taxes",
          "items"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNo": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string"
          },
          "customerEmail": {
            "type": "string"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/BillingAddress5"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/ShippingAddress5"
          },
          "shippingRequired": {
            "type": "boolean"
          },
          "weight": {
            "type": "number"
          },
          "weightUnit": {
            "type": "string"
          },
          "subTotal": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "discountCode": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "nullable": true
          },
          "shippingAmount": {
            "type": "number"
          },
          "shippingName": {
            "type": "string"
          },
          "paid": {
            "type": "boolean"
          },
          "paymentMethod": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "discountAmount": {
            "type": "number"
          },
          "taxes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item4"
            },
            "description": ""
          }
        },
        "example": {
          "id": 1234,
          "invoiceNo": 15,
          "created": 1573397217,
          "customerName": "John Doe",
          "customerEmail": "john@email.com",
          "billingAddress": {
            "name": "John Doe",
            "phone": "",
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          },
          "shippingAddress": {
            "name": "John Doe",
            "phone": "",
            "companyName": "",
            "companyId": "",
            "country": "US",
            "state": "VA",
            "city": "Williamsburg",
            "zipCode": "23185",
            "address": "10 Capitol Landing Rd",
            "address2": ""
          },
          "shippingRequired": true,
          "weight": 0,
          "weightUnit": "kg",
          "subTotal": 49,
          "total": 49,
          "discountCode": null,
          "discountType": null,
          "shippingAmount": 0,
          "shippingName": "",
          "paid": true,
          "paymentMethod": "stripe",
          "status": "completed",
          "discountAmount": 0,
          "taxes": [],
          "items": [
            {
              "id": 123,
              "name": "Running Shoes",
              "url": "running-shoes",
              "productId": 24,
              "sku": null,
              "quantity": 1,
              "weight": 0,
              "total": 49,
              "type": "physical",
              "shippingRequired": true,
              "images": [
                "https://path-to-image.jpg"
              ],
              "variation": [
                {
                  "name": "Color",
                  "value": "Blue"
                }
              ],
              "additions": []
            }
          ]
        }
      },
      "RetrieveOrderresponse1": {
        "title": "RetrieveOrderresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "Order not found"
        }
      },
      "GetAllFormSubmissionsresponse": {
        "title": "GetAllFormSubmissionsresponse",
        "required": [
          "items",
          "totalCount",
          "limit",
          "skip"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item6"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "items": [
            {
              "name": "Contact form",
              "received": 1573120479,
              "fields": [
                {
                  "name": "Your Name",
                  "value": "John Doe"
                },
                {
                  "name": "Your Email",
                  "value": "john@doe.com"
                }
              ]
            },
            {
              "name": "Contact form",
              "received": 1573120453,
              "fields": [
                {
                  "name": "Your Name",
                  "value": "Bill"
                },
                {
                  "name": "Email",
                  "value": "bill@site.com"
                }
              ]
            }
          ],
          "totalCount": 2,
          "limit": 50,
          "skip": 0
        }
      },
      "Item6": {
        "title": "Item6",
        "required": [
          "name",
          "received",
          "fields"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "received": {
            "type": "integer",
            "format": "int32"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            },
            "description": ""
          }
        },
        "example": {
          "name": "Contact form",
          "received": 1573120479,
          "fields": [
            {
              "name": "Your Name",
              "value": "John Doe"
            },
            {
              "name": "Your Email",
              "value": "john@doe.com"
            }
          ]
        }
      },
      "Field": {
        "title": "Field",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "example": {
          "name": "Your Name",
          "value": "John Doe"
        }
      },
      "GetAllBookingsresponse": {
        "title": "GetAllBookingsresponse",
        "required": [
          "items",
          "totalCount",
          "limit",
          "skip"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item7"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "items": [
            {
              "id": 206,
              "eventId": 98146,
              "contactId": 41,
              "name": "Jane Doe",
              "email": "jane@doe.com",
              "start": 1587936600,
              "end": 1587938400,
              "eventData": {
                "name": "My event",
                "location": "Skype"
              },
              "operator": {
                "id": 51215,
                "name": "John Doe",
                "email": "john@doe.com"
              },
              "fromAnswers": [
                {
                  "field": "Name",
                  "value": "Jane Doe"
                },
                {
                  "field": "Email",
                  "value": "jane@doe.com"
                }
              ]
            }
          ],
          "totalCount": 1,
          "limit": 50,
          "skip": 0
        }
      },
      "Item7": {
        "title": "Item7",
        "required": [
          "id",
          "eventId",
          "contactId",
          "name",
          "email",
          "start",
          "end",
          "eventData",
          "operator",
          "fromAnswers"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "eventId": {
            "type": "integer",
            "format": "int32"
          },
          "contactId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "end": {
            "type": "integer",
            "format": "int32"
          },
          "eventData": {
            "$ref": "#/components/schemas/EventData"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "fromAnswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FromAnswer"
            },
            "description": ""
          }
        },
        "example": {
          "id": 206,
          "eventId": 98146,
          "contactId": 41,
          "name": "Jane Doe",
          "email": "jane@doe.com",
          "start": 1587936600,
          "end": 1587938400,
          "eventData": {
            "name": "My event",
            "location": "Skype"
          },
          "operator": {
            "id": 51215,
            "name": "John Doe",
            "email": "john@doe.com"
          },
          "fromAnswers": [
            {
              "field": "Name",
              "value": "Jane Doe"
            },
            {
              "field": "Email",
              "value": "jane@doe.com"
            }
          ]
        }
      },
      "EventData": {
        "title": "EventData",
        "required": [
          "name",
          "location"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        },
        "example": {
          "name": "My event",
          "location": "Skype"
        }
      },
      "Operator": {
        "title": "Operator",
        "required": [
          "id",
          "name",
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "id": 51215,
          "name": "John Doe",
          "email": "john@doe.com"
        }
      },
      "FromAnswer": {
        "title": "FromAnswer",
        "required": [
          "field",
          "value"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "example": {
          "field": "Name",
          "value": "Jane Doe"
        }
      },
      "GetAllSubscriberListsresponse": {
        "title": "GetAllSubscriberListsresponse",
        "required": [
          "id",
          "name",
          "created",
          "subscribers",
          "opens",
          "clicks"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int32"
          },
          "subscribers": {
            "type": "integer",
            "format": "int32"
          },
          "opens": {
            "type": "number"
          },
          "clicks": {
            "type": "number"
          }
        },
        "example": {
          "id": 0,
          "name": "Default list",
          "created": 1606476754,
          "subscribers": 44,
          "opens": 0.75,
          "clicks": 0.25
        }
      },
      "CreateNewSubscriberLIstrequest": {
        "title": "CreateNewSubscriberLIstrequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "New List"
        }
      },
      "CreateNewSubscriberLIstresponse": {
        "title": "CreateNewSubscriberLIstresponse",
        "required": [
          "id",
          "name",
          "created",
          "subscribers",
          "opens",
          "clicks"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int32"
          },
          "subscribers": {
            "type": "integer",
            "format": "int32"
          },
          "opens": {
            "type": "integer",
            "format": "int32"
          },
          "clicks": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": 87647899,
          "name": "New List",
          "created": 1613384844,
          "subscribers": 0,
          "opens": 0,
          "clicks": 0
        }
      },
      "RetrieveSubscriberListresponse": {
        "title": "RetrieveSubscriberListresponse",
        "required": [
          "id",
          "name",
          "created",
          "subscribers",
          "opens",
          "clicks"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int32"
          },
          "subscribers": {
            "type": "integer",
            "format": "int32"
          },
          "opens": {
            "type": "number"
          },
          "clicks": {
            "type": "number"
          }
        },
        "example": {
          "id": 87647751,
          "name": "My list",
          "created": 1613384738,
          "subscribers": 25,
          "opens": 0.85,
          "clicks": 0.41
        }
      },
      "RetrieveSubscriberListresponse1": {
        "title": "RetrieveSubscriberListresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "List not found"
        }
      },
      "UpdateSubscriberListrequest": {
        "title": "UpdateSubscriberListrequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "New Name"
        }
      },
      "UpdateSubscriberListresponse": {
        "title": "UpdateSubscriberListresponse",
        "required": [
          "id",
          "name",
          "created",
          "subscribers",
          "opens",
          "clicks"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int32"
          },
          "subscribers": {
            "type": "integer",
            "format": "int32"
          },
          "opens": {
            "type": "number"
          },
          "clicks": {
            "type": "number"
          }
        },
        "example": {
          "id": 87647751,
          "name": "New Name",
          "created": 1613384738,
          "subscribers": 25,
          "opens": 0.85,
          "clicks": 0.41
        }
      },
      "UpdateSubscriberListresponse1": {
        "title": "UpdateSubscriberListresponse1",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": false,
          "message": "List not found"
        }
      },
      "DeleteSubscriberListresponse": {
        "title": "DeleteSubscriberListresponse",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "message": ""
        }
      },
      "ListAllWebhooksresponse": {
        "title": "ListAllWebhooksresponse",
        "required": [
          "id",
          "target",
          "secret",
          "events"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": "rh_24488493954",
          "target": "https://your-target.com/some-path",
          "secret": "41pweL23Yuy8NB11",
          "events": [
            "order_created",
            "order_updated"
          ]
        }
      },
      "CreateNewWebhookrequest": {
        "title": "CreateNewWebhookrequest",
        "required": [
          "target",
          "secret",
          "events"
        ],
        "type": "object",
        "properties": {
          "target": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "target": "https://your-target.com/some-path",
          "secret": "your-secret",
          "events": [
            "order_created",
            "order_updated"
          ]
        }
      },
      "CreateNewWebhookresponse": {
        "title": "CreateNewWebhookresponse",
        "required": [
          "id",
          "target",
          "secret",
          "events"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": "rh_4ac124dde21",
          "target": "https://your-target.com/some-path",
          "secret": "your-secret",
          "events": [
            "order_created",
            "order_updated"
          ]
        }
      },
      "DeleteWebhookresponse": {
        "title": "DeleteWebhookresponse",
        "required": [
          "success",
          "message"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "message": ""
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "**The API** uses **[Bearer Token Authorization](https://tools.ietf.org/html/rfc6750)**\n\n1. You can view your API key in your website > **Website Settings** > **Applications** > **API Key**.\n\n2. You can use your API key to access protected resources in your website only by passing the `Authorization` header:\n\n    `Authorization: Bearer <API KEY>`\n\n3. All API requests must be made over HTTPS"
    },
    {
      "name": "Errors",
      "description": "The API uses conventional HTTP response codes to indicate the success or failure of an API request.\n\nIn general: Codes in the **2xx** range indicate success. Codes in the **4xx** range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a resource was missing, etc.). Codes in the **5xx** range indicate a serer error or an unprocessable entry.\n\nEvery error include a human-readable message:\n\n```\n{\n    success: false,\n    message: \"Error message...\"\n}\n```"
    },
    {
      "name": "Pagination",
      "description": "Most API endpoints returning multiple objects (lists) support pagination. These lists share a common structure and can take at least these two parameters:\n\nParameter   | Description\n  ----------- | -------------\n  limit       | a limit on the number of objects to be returned. Between 1 and 50.  *Optional, default: 30*\n  skip        | a.k.a. **offset** - the number of items to skip. *Optional, default: 0 (i.e. return the first page of results)*\n\nList response format:\n\n```\n{\n    items: [\n        { ... },\n        { ... },\n        { ... }\n    ],\n    totalCount: 10,\n    limit: 25,\n    skip: 0\n}\n```\n\nAttribute  | Description\n  ---------- | -------------\n  items      | an array containing the actual response elements, paginated by any request parameters.\n  totalCount | the total size of the result set, i.e. all available elements in the list request without any pagination\n  limit      | the currently used limit\n  skip       | current offset in the list"
    },
    {
      "name": "Contacts",
      "description": "<a name=\"contact\"></a>\nContacts are all visitors identified by their email in your website\n\n---\n\n**Contact  attributes:**\n\nAttribute       | Type    | Description\n  --------------- | ------- | ------------\n  id              | number  | Unique identifier\n  name            | string  | Contact Name\n  email           | string  | Email address of the contact\n  phone           | string  | Concat phone\n  note            | string  | Private note\n  address         | string  | \n  city            | string  | \n  state           | string  | \n  zip             | string  | \n  country         | string  | \n  companyName     | string  | \n  createdOn       | number  | Timestamp in Unix seconds since epoch.\n  properties      | array   | Array of custom properties, as defined in the CRM section in your website: `{name: \"lead_status\", type: \"string\", value: \"pending\"}`\n  tags            | array   | List of tags assigned to the contact\n  memberId        | number  | Member id if assigned to contact\n  subscribed      | boolean | Whether the contact is a subscriber or not (for email marketing purposes)\n  subscriberLists | array   | Array of subscriber list IDs (email marketing lists)\n\n---"
    },
    {
      "name": "Members",
      "description": "<a name=\"member\"></a>\nMembers are registered users in your website.\n\n---\n\n**Member attributes:**\n\nAttribute       | Type    | Description\n  --------------  | ----    | ---------\n  id              | number  | Unique identifier\n  name            | string  | Member name\n  email           | string  | Email of the member\n  groups          | array   | Member group id(s) to which the member belong\n  registeredOn    | number  | Timestamp in Unix seconds since epoch\n  approved        | boolean | Member approval status\n  contactId       | number  | Contact ID of the member\n  billingAddress  | address | Address object containing the billing information\n  shippingAddress | address | Address object containing the shipping information\n\n---\n\nMember address is described as:\n\n**Address  attributes:**\n\nAttribute     | Type    | Description\n  ----------    | ----    | ---------\n  phone         | string  | Phone\n  companyName   | string  | Company Name\n  companyId     | string  | Company Identification Number\n  country       | string  | Country, 2-letter ISO 3166 code\n  state         | string  | State\n  city          | string  | City\n  zipCode       | string  | Zip / Post Code\n  address       | string  | Street address\n  address2      | string  | Street address, line 2\n\n---"
    },
    {
      "name": "Member groups",
      "description": "<a name=\"member-groups\"></a>\nMember groups are groups which the members belongs to. Access to resources can be restricted to specific member groups only.\n\n---\n\n**Member groups attributes:**\n\nAttribute    | Type   | Description\n  ----------   | ----   | ---------\n  id           | number | Unique identifier\n  name         | string | Name of the member group\n  link         | string | Member group link - optional, the default page where members are redirected to after a successful login.\n\n---"
    },
    {
      "name": "Products",
      "description": "<a name=\"product\"></a>\nProducts are individual items, services or memberships for sale in your store.\n\n---\n\n**Product  attributes:**\n\nAttribute    | Type   | Description\n  ----------   | ----   | ---------\n  id           | number | Unique identifier\n  type         | string | The type of the product - `physical`, `digital`, `service` or `membership`\n  title        | string | The name of the product\n  description  | string | A description of the product. Supports light HTML formatting.\n  url          | string | The product URL (handle) in your store\n  hidden       | boolean| Whether or not the product is visible in your store front.\n  images       | array  | List of image URLs\n  categories   | array  | List of categories this product belongs to.\n  options      | string | List with available options for this product (if any).\n  variants     | string | List with the product variants, determining price, quantity, weight or SKU\n  subscription | Subscription | Subscription details (if this is a subscription product)\n  file         | string | Digital products only - URL of the digital file that's being sold\n---\n\n**Store Category  attributes:**\n\nAttribute      | Type   | Description\n  ----------     | ----   | ---------\n  id             | number | Unique identifier\n  name           | string | The name of the category\n  url            | string | The category URL (handle) in your store\n  parentCategory | number | Parent category ID. 0 if this is the root category.\n\n---\n\nEach product can have multiple options, ex: **Color**, **Size**, **Material**, etc with each option having multiple values, ex: **Size** - Small, Medium, Large.\n\nProduct options are described as:\n\n**Product Option attributes:**\n\nAttribute  | Type    | Description\n  ---------- | ----    | ---------\n  name       | string  | The name of the option (ex: Color, Size, Material)\n  values     | string  | List with all possible values for this option (ex. for Size: Small, Medium, Large, etc)\n  advanced   | boolean | Whether or not different variations of the options have different price, quantity, sku or weight tracked (see below).\n\n---\n\nIf multiple versions of a product (different variants) have different price, quantity, SKU or weight, each product option can be\nmarked as `advanced`. Setting product option as `advanced` will enable custom price / quantity / SKU or weight for each of the option variants.\n\nAll products have at least one variant, described as:\n\n**Product Variant attributes:**\n\nAttribute    | Type    | Description\n  ----------   | ----    | ---------\n  options      | array   | List of strings, identifying this product variant. Example: ``[\"wood\", \"large\"]`` for products with 2 advanced options (Material and Size)\n  price        | number  | The price of this variant.\n  onSale       | boolean | Whether or not this variant is on sale.\n  regularPrice | number  | The regular price of this variant, if on sale.\n  quantity     | number  | Available quantity for this variant (empty if quantity is not tracked).\n  sku          | string  | Variant SKU (if any).\n  weight       | number  | Weight, if tracked.\n\nStore products can have a mix of `advanced` and non-`advanced` options.\n\nFor example, the price can be determined by Material and Size but not by the color of the product with the following options:\n\n```\n{\n  \"name\": \"Material\",\n  \"values\": [\"Metal\", \"Wood\"],\n  \"advanced\": true\n},\n{\n  \"name\": \"Size\",\n  \"values\": [\"Small\", \"Large\"],\n  \"advanced\": true\n},\n{\n  \"name\": \"Color\",\n  \"values\": [\"Green\", \"Blue\"],\n  \"advanced\": false\n}\n```\n\nWhen setting up the product variant, include the value of the advanced options only.\n\nExample for the product variants from above:\n\n```\n{\n    \"options\": [\"Metal\", \"Small\"],\n    \"price\": 10\n},\n{\n    \"options\": [\"Metal\", \"Large\"],\n    \"price\": 10\n},\n{\n    \"options\": [\"Wood\", \"Small\"],\n    \"price\": 10\n},\n{\n    \"options\": [\"Wood\", \"Large\"],\n    \"price\": 10\n},\n```\n\nUse empty array (`[]`) for `options` when there are no advanced variants, setting the price / quantity / sku for the whole product.\n\n**Subscription attributes:**\n\nAttribute  | Type    | Description\n  ---------- | ----    | ---------\n  cycles     | number  | The number of payment cycles. 0 for ongoing payments, positive integer (1, 2, 3,...) for a fixed number of payments\n  period     | number  | Number showing the subscription period. (i.e. every 1 month, 2 months, 1 week, etc)\n  periodUnit | string  | The period unit - either \"WEEKLY\" or \"MONTHLY\"\n\n---\n\nIf multiple versions of a product (different variants) have different price, quantity, SKU or weight, each product option can be\nmarked as `advanced`. Setting product option as `advanced` will enable custom price / quantity / SKU or weight for each of the option variants.\n\nAll products have at least one variant, described as:"
    },
    {
      "name": "Orders",
      "description": "<a name=\"order\"></a>\nAccess orders placed in your website.\n\n---\n\n**Order  attributes:**\n\nAttribute        | Type    | Description\n  ----------       | ----    | ---------\n  id               | number  | Unique identifier.\n  invoiceNo        | number  | Invoice number assigned to the order.\n  created          | number  | Timestamp in Unix seconds since epoch. The time the order was placed.\n  customerName     | string  | The name of the customer\n  customerEmail    | string  | The email of the customer\n  shippingAddress  | address | The shipping address of the order (if set, see below)\n  billingAddress   | address | The billing address of the order (if set, see below)\n  shippingRequired | boolean | Whether or not the order contains physical products requiring shipping\n  weight           | number  | total weight of the order\n  weightUnit       | string  | Weight unit (kg, lb)\n  subTotal         | number  |\n  total            | number  |\n  discountCode     | string  | Used discount code\n  discountType     | string  | Type of discount used: `fixed_discount`, `percent_discount` or `free_shipping`\n  discountAmount   | number  | Discount amount\n  shippingName     | string  | Shipping method used (if any)\n  shippingAmount   | number  | Cost of shipping\n  paid             | boolean | Whether or not the order is paid\n  paymentMethod    | string  | Payment method used to place the order\n  transactionId    | string  | If paid, the payment transaction id\n  status           | string  | Order status. One of: `pending`, `shipped`, `completed`, `canceled`\n  taxes            | array   | List of all taxes applied to the order. List of: `{\"name\": \"Sales Tax\", \"total\": 20, \"applyToShipping\": false}`\n  items            | array   | List of all order items (see below)\n  tags             | array   | List of tags assigned to the order.\n  additionalFields | array   | List of field-value pairs of all additional fields collected with with the order. List of: `{\"field\": \"My Field\", \"value\": \"Some Value\"}`\n\nEach Order consists of one or more order items. Described as:\n\n**Order Item  attributes:**\n\nAttribute        | Type    | Description\n  ----------       | ----    | ---------\n  id               | number  | Unique identifier.\n  name             | string  | Name of the product.\n  url              | string  | URL of the product.\n  productId        | number  | ID of the product.\n  type             | string  | Product type. One of: `physical`, `digital`, `service`, `membership`\n  sku              | string  | SKU of the selected variant\n  quantity         | number  | Purchased quantity\n  total            | number  | Item total\n  weight           | number  | Item weight\n  shippingRequired | boolean | Whether or not this item is a physical product and requires shipping\n  images           | string  | List of product images\n  variation        | array   | Array, containing a name-value pairs describing the selected variant. Example: ``[{\"name\": \"Material\", \"value\": \"Wood\"}, {\"name\": \"Size\", \"value\": \"Large\"}]``\n  additions        | array   | Array, containing a name-value pairs of any extra information asked for this item.\n---\n\nCustomer Addresses are described as:\n\n**Address  attributes:**\n\nAttribute     | Type    | Description\n  ----------    | ----    | ---------\n  name          | string  | Name of customer\n  phone         | string  | Phone\n  companyName   | string  | Company Name\n  companyId     | string  | Company Identification Number\n  country       | string  | Country, 2-letter ISO 3166 code\n  state         | string  | State\n  city          | string  | City\n  zipCode       | string  | Zip / Post Code\n  address       | string  | Street address\n  address2      | string  | Street address, line 2\n---"
    },
    {
      "name": "Forms",
      "description": "Access all form submissions in the website. Each form submission is described as:\n\n---\n\n**Form submission  attributes:**\n\nAttribute   | Type    | Description\n  ----------  | ----    | ---------\n  name        | string  | The name of the submitted form\n  received    | number  | Timestamp in Unix seconds since epoch. The time the form was submitted.\n  fields      | array   | List of name-value pairs of all submitted fields. Example: ``[{\"name\": \"Name\", \"value\": \"John\"},{\"name\": \"Email\",\"value\": \"john@doe.com\"}]``\n---"
    },
    {
      "name": "Bookings",
      "description": "<a name=\"booking\"></a>\n\nAccess the details of all scheduled events via the booking features of each website or funnel.\n\n---\n\n**Booking attributes:**\n\nAttribute   | Type         | Description\n  ----------  | ------------ | ---------\n  id          | number       | Unique booking (session) id\n  eventId     | number       | Unique event id\n  contactId   | number       | Unique Contact id\n  name        | string       | Contact name\n  email       | string       | Contact email\n  start       | number       | Timestamp in Unix seconds since epoch. The time the booking starts.\n  end         | number       | Timestamp in Unix seconds since epoch. The time the booking ends.\n  eventData   | EventDetails | Details about the event\n  operator    | Operator     | Details about the operator\n  service     | Service      | Details about the service\n  formAnswers | array        | List of name-value pairs of all form questions answered by the atended. Example: ``[{\"name\": \"Name\", \"value\": \"John\"},{\"name\": \"Email\",\"value\": \"john@doe.com\"}]``\n---\n\n**EventDetails attributes:**\n\nAttribute   | Type    | Description\n  ----------  | ----    | ---------\n  name        | string  | Event name\n  location    | string  | Event location\n\n---\n\n**Operator attributes:**\n\nAttribute   | Type    | Description\n  ----------  | ----    | ---------\n  id          | number  | Unique operator id\n  name        | string  | Operator name\n  email       | string  | Operator email\n\n---\n\n**Service attributes:**\n\nAttribute   | Type    | Description\n  ----------  | ----    | ---------\n  id          | number  | Unique service id\n  name        | string  | Service name\n\n---"
    },
    {
      "name": "Subscriber lists",
      "description": "<a name=\"subscriber-lists\"></a>\n\nManage email marketing lists.\n\n---\n\n**Subscriber list attributes:**\n\nAttribute   | Type         | Description\n  ----------  | ------------ | ---------\n  id          | number       | Unique list id\n  name        | string       | List name\n  created     | number       | Timestamp in Unix seconds since epoch.\n  subscribers | number       | Total number of subscribers in this list\n  opens       | number       | Open rate (number between 0 and 1 where 0 = 0%, 1 = 100%)\n  clicks      | number       | Click rate (number between 0 and 1)\n\n---"
    },
    {
      "name": "Webhooks",
      "description": "Webhooks are a system of automated notifications indicating that an event has occurred in your website. \nRather than requiring you to pull information via the API, webhooks push information to your destination when important events occur.\n\nYou can create webhooks for:\n\n* New Order (`order_created`) - *fired when a new order is placed on the website*\n\n* Updated Order (`order_updated`) - *fired when an order is updated*\n\n* New Product (`product_created`) - *fired when a new product is created*\n\n* Updated Product (`product_updated`) - *fired when a product is updated*\n\n* New Form Submission (`form_submitted`) - *fired when a form is submitted*\n\n* New Contact Activity (`contact_updated`) - *fired when a new contact is created or existing contact is updated*\n\n* New Booking Created (`booking_created`) - *fired when a new booking is created*\n\nWhen one of the selected events is triggered, we'll send a HTTP POST payload to the webhook's target URL. The payload is a single JSON object and depends on the event:\n\nEvent                | POST Payload\n  ----------           | ---------\n  New Order            | [Order](#order)\n  Updated Order        | [Order](#order)\n  New Product          | [Product](#product)\n  Updated Product      | [Product](#product)\n  New Contact Activity | [Contact](#contact)\n  New Form Submission  | [Form Details](#form)\n  New Booking Created  | [Booking Details](#booking)\n\nEach POST call to your destination URL will include the following headers:\n\nHeader              | Description\n  ----------          | ---------\n  X-Webhook-Id        | The id of the fired webhook.\n  X-Webhook-Topic     | The event that was fired. One of: `order_created`, `order_updated`, `product_created`, `product_updated`, `form_submitted`, `contact_updated`, `booking_created`.\n  X-Webhook-Source    | The URL of the website firing the event.\n  X-Webhook-Signature | The HMAC hex digest of the response body. The HMAC hex digest is generated using the SHA-512 hash function and the secret as the HMAC key.\n\nIf a POST request fail, we'll send an email to the owner of the website to notify them for the failed webhook.\n\nEach request to your destination URL is signed using the webhook secret. The signature is passed in the X-Webhook-Signature header and can be used to verify that the events were sent by us and not by a third party. \nTo verify the signature, generate the HMAC hex digest using the SHA-512 hash function and the webhook secret as the HMAC key. Then compare it with the X-Webhook-Signature from the request.\n\n<a name=\"form\"></a>\nThe POST Payload for New Form Submission is as follows:\n\n```\n{\n    \"website\": \n    {\n        \"id\": 123,\n        \"subdomain\": \"some-subdomain\",\n        \"systemDomain\": \"your-system.subdomain.com\"\n        \"domain\": \"your-primary-domain.com\"\n    },\n    \"contact\": { ... },\n    \"formName\": \"Contact Form\",\n    \"formValues\": [\n        {\"field\": \"Name\", \"value\": \"John\"},\n        {\"field\": \"Email\",\"value\": \"john@doe.com\"}\n    ]\n}\n```\n\nWhere each attribute is:\n\nAttribute    | Type   | Description\n  ----------   | ----   | ---------\n  website      | object | Information about the website where the form was submitted\n  contact      | object | [Contact](#contact) - the visitor who submitted the form\n  formName     | string | The name of the submitted form.\n  formValues   | array  | List of field-value pairs of all submitted fields.\n\n# Managing Webhooks via the API\n\nWebhooks can be created and deleted via this API.\n\nEach webhook is described as:\n\n---\n\n**Webhook  attributes:**\n\nAttribute    | Type   | Description\n  ----------   | ----   | ---------\n  id           | string | Unique identifier\n  target       | string | Your destination URL to push notifications to\n  secret       | string | Webhook secret - use the secret to verify that the events posted to your URL were indeed sent by the website.\n  events       | string | List of events to notify on. One of: `order_created`, `order_updated`, `product_created`, `product_updated`, `form_submitted`, `contact_updated`, `booking_created`\n\n---"
    }
  ]
}