{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.calendly.com"
    }
  ],
  "info": {
    "description": "Calendlyâ€™s API is [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer)-based and has predictable resource-oriented URLs. It uses **JSON** for request and response bodies and standard HTTP methods, authentication, and response codes.<br>\n\n##### OAuth 2.0\n\nTo access Calendly data through the API, you can authenticate with **personal access tokens** or **OAuth 2.0**. To learn more about these authentication methods and when and how to use them, see [Getting Started with the Calendly API](https://developer.calendly.com/getting-started).",
    "version": "2.0.0",
    "title": "Calendly API",
    "contact": {
      "email": "support+developer@calendly.com",
      "name": "Calendly Developer Support",
      "url": "https://developer.calendly.com/get-help"
    },
    "termsOfService": "https://developer.calendly.com/developer-policy"
  },
  "tags": [
    {
      "name": "Users"
    },
    {
      "name": "Event Types"
    },
    {
      "name": "Scheduled Events"
    },
    {
      "name": "Scheduling Links"
    },
    {
      "name": "Organizations"
    },
    {
      "name": "Groups"
    },
    {
      "name": "Webhooks"
    },
    {
      "name": "Data Compliance"
    }
  ],
  "paths": {
    "/scheduled_events/{uuid}/invitees": {
      "get": {
        "summary": "List Event Invitees",
        "tags": [
          "Scheduled Events"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "canceled"
              ]
            },
            "description": "Indicates if the invitee \"canceled\" or still \"active\""
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "created_at:asc"
            },
            "description": "Order results by the **created_at** field and direction specified: ascending (\"asc\") or descending (\"desc\")"
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "email",
              "example": "bob@example.com"
            },
            "description": "Indicates if the results should be filtered by email address"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/Count"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Service response",
                  "properties": {
                    "collection": {
                      "type": "array",
                      "description": "The set of event invitees matching the criteria",
                      "items": {
                        "$ref": "#/components/schemas/Invitee"
                      }
                    },
                    "pagination": {
                      "title": "Pagination",
                      "type": "object",
                      "x-examples": {
                        "Example": {
                          "count": 1,
                          "next_page": "https://api.calendly.com/event_types?count=1&page_token=sNjq4TvMDfUHEl7zHRR0k0E1PCEJWvdi"
                        }
                      },
                      "properties": {
                        "count": {
                          "type": "number",
                          "description": "The number of rows to return",
                          "example": 1
                        },
                        "next_page": {
                          "type": "string",
                          "nullable": true,
                          "format": "uri",
                          "description": "Return the next page of an ordered list (\"null\" indicates no additional results are available)",
                          "example": "https://api.calendly.com/event_types?count=1&page_token=sNjq4TvMDfUHEl7zHRR0k0E1PCEJWvdi"
                        }
                      },
                      "required": [
                        "count",
                        "next_page"
                      ],
                      "x-internal": true
                    }
                  },
                  "required": [
                    "collection",
                    "pagination"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "collection": [
                        {
                          "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
                          "created_at": "2020-11-23T17:51:18.327602Z",
                          "email": "test@example.com",
                          "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
                          "name": "John Doe",
                          "first_name": "John",
                          "last_name": "Doe",
                          "new_invitee": null,
                          "old_invitee": null,
                          "questions_and_answers": [
                            {
                              "answer": "radio button answer",
                              "position": 0,
                              "question": "Question with Radio Buttons answer type"
                            },
                            {
                              "answer": "Multiple line\nAnswer",
                              "position": 1,
                              "question": "Question with Multiple Lines answer type"
                            },
                            {
                              "answer": "Answer 1\nAnswer 2\nAnswer 3",
                              "position": 2,
                              "question": "Question with Checkboxes answer type"
                            }
                          ],
                          "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
                          "rescheduled": false,
                          "status": "active",
                          "text_reminder_number": null,
                          "timezone": "America/New_York",
                          "tracking": {
                            "utm_campaign": null,
                            "utm_source": null,
                            "utm_medium": null,
                            "utm_content": null,
                            "utm_term": null,
                            "salesforce_uuid": null
                          },
                          "updated_at": "2020-11-23T17:51:18.341657Z",
                          "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
                          "canceled": false,
                          "payment": {
                            "external_id": "ch_AAAAAAAAAAAAAAAAAAAAAAAA",
                            "provider": "stripe",
                            "amount": 1234.56,
                            "currency": "USD",
                            "terms": "sample terms of payment (up to 1,024 characters)",
                            "successful": true
                          },
                          "no_show": null
                        }
                      ],
                      "pagination": {
                        "count": 1,
                        "next_page": "https://calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees?count=1&page_token=sNjq4TvMDfUHEl7zHRR0k0E1PCEJWvdi"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Returns a list of Invitees for an event.",
        "operationId": "getInvitees"
      }
    },
    "/scheduled_events": {
      "get": {
        "summary": "List Events",
        "description": "Returns a list of  Events.\n\n* Pass `organization` parameter to return events for that organization (requires admin/owner privilege)\n* Pass `user` parameter to return events for a specific User\n\n**NOTES:**\n* If you are the admin/owner of the organization, you can use both `organization` and `user` to get a list of events for a specific user within your organization.\n\n* `user` can only be used alone when requesting your own personal events. This will return your events within any organization that you are currently in or were a part of in the past.",
        "tags": [
          "Scheduled Events"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uri",
              "example": "https://api.calendly.com/users/EBHAAFHDCAEQTSEZ"
            },
            "description": "Return events that are scheduled with the user associated with this URI"
          },
          {
            "schema": {
              "type": "string",
              "format": "uri",
              "example": "https://api.calendly.com/organizations/EBHAAFHDCAEQTSEZ"
            },
            "in": "query",
            "name": "organization",
            "description": "Return events that are scheduled with the organization associated with this URI"
          },
          {
            "name": "invitee_email",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "email",
              "example": "alice@example.com"
            },
            "description": "Return events that are scheduled with the invitee associated with this email address"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "canceled"
              ]
            },
            "description": "Whether the scheduled event is `active` or `canceled`"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Order results by the specified field and direction. Accepts comma-separated list of {field}:{direction} values.\nSupported fields are: start_time.\nSort direction is specified as: asc, desc.",
            "example": "start_time:asc"
          },
          {
            "name": "min_start_time",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Include events with start times after this time (sample time format: \"2020-01-02T03:04:05.678Z\"). This time should use the UTC timezone.",
            "example": "2020-01-02T12:30:00Z"
          },
          {
            "name": "max_start_time",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Include events with start times prior to this time (sample time format: \"2020-01-02T03:04:05.678Z\"). This time should use the UTC timezone.",
            "example": "2020-01-02T12:30:00Z"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/Count"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Service response",
                  "properties": {
                    "collection": {
                      "type": "array",
                      "description": "The set of scheduled events matching the criteria",
                      "items": {
                        "$ref": "#/components/schemas/Event"
                      }
                    },
                    "pagination": {
                      "$ref": "#/paths/~1scheduled_events~1{uuid}~1invitees/get/responses/200/content/application~1json/schema/properties/pagination"
                    }
                  },
                  "required": [
                    "collection",
                    "pagination"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "collection": [
                        {
                          "uri": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2",
                          "name": "15 Minute Meeting",
                          "status": "active",
                          "start_time": "2019-08-24T14:15:22Z",
                          "end_time": "2019-08-24T14:15:22Z",
                          "event_type": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2",
                          "location": {
                            "type": "physical",
                            "location": "Calendly Office"
                          },
                          "invitees_counter": {
                            "total": 0,
                            "active": 0,
                            "limit": 0
                          },
                          "created_at": "2019-01-02T03:04:05.678Z",
                          "updated_at": "2019-01-02T03:04:05.678Z",
                          "event_memberships": [
                            {
                              "user": "https://api.calendly.com/users/GBGBDCAADAEDCRZ2"
                            }
                          ],
                          "event_guests": [
                            {
                              "email": "user@example.com",
                              "created_at": "2019-08-24T14:15:22Z",
                              "updated_at": "2019-08-24T14:15:22Z"
                            }
                          ]
                        }
                      ],
                      "pagination": {
                        "count": 1,
                        "next_page": "https://api.calendly.com/scheduled_events?count=1&page_token=sNjq4TvMDfUHEl7zHRR0k0E1PCEJWvdi"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "operationId": "getScheduledEvents"
      },
      "parameters": []
    },
    "/event_types": {
      "get": {
        "summary": "List User's Event Types",
        "description": "Returns all Event Types associated with a specified User. Use:\n\n* `organization` to look up all Event Types that belong to the organization\n\n* `user` to look up a user's Event Types in an organization\n\nEither `organization` or `user` are required query params when using this endpoint.",
        "tags": [
          "Event Types"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "name": "active",
            "description": "Return only active event types if true, only inactive if false, or all event types if this parameter is omitted.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "organization",
            "description": "View available personal, team, and organization event types associated with the organization's URI.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "required": false
          },
          {
            "name": "user",
            "description": "View available personal, team, and organization event types associated with the user's URI.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "name:asc"
            },
            "description": "Order results by the specified field and direction. Accepts comma-separated list of {field}:{direction} values.\nSupported fields are: name.\nSort direction is specified as: asc, desc.",
            "examples": {
              "withOmittedDirection": {
                "summary": "Omit direction with fallback to asc by default",
                "value": "name"
              }
            }
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/Count"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Service response",
                  "properties": {
                    "collection": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EventType"
                      }
                    },
                    "pagination": {
                      "$ref": "#/paths/~1scheduled_events~1{uuid}~1invitees/get/responses/200/content/application~1json/schema/properties/pagination"
                    }
                  },
                  "required": [
                    "collection",
                    "pagination"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "collection": [
                        {
                          "uri": "https://api.calendly.com/event_types/AAAAAAAAAAAAAAAA",
                          "name": "15 Minute Meeting",
                          "active": true,
                          "booking_method": "instant",
                          "slug": "acmesales",
                          "scheduling_url": "https://calendly.com/acmesales",
                          "duration": 30,
                          "kind": "solo",
                          "pooling_type": "round_robin",
                          "type": "StandardEventType",
                          "color": "#fff200",
                          "created_at": "2019-01-02T03:04:05.678Z",
                          "updated_at": "2019-08-07T06:05:04.321Z",
                          "internal_note": "Internal note",
                          "description_plain": "15 Minute Meeting",
                          "description_html": "<p>15 Minute Meeting</p>",
                          "profile": {
                            "type": "User",
                            "name": "Tamara Jones",
                            "owner": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
                          },
                          "secret": true,
                          "custom_questions": [
                            {
                              "name": "Company Name",
                              "type": "string",
                              "position": 0,
                              "enabled": true,
                              "required": true,
                              "answer_choices": [],
                              "include_other": false
                            },
                            {
                              "name": "What would you like to discuss?",
                              "type": "text",
                              "position": 0,
                              "enabled": true,
                              "required": true,
                              "answer_choices": [],
                              "include_other": false
                            },
                            {
                              "name": "Number of employees",
                              "answer_choices": [
                                "1",
                                "2-10",
                                "11-20",
                                "20+"
                              ],
                              "enabled": true,
                              "include_other": true,
                              "position": 2,
                              "required": false,
                              "type": "single_select"
                            },
                            {
                              "name": "Multi-Select Question",
                              "answer_choices": [
                                "Answer 1",
                                "Answer 2",
                                "Answer 3",
                                "Answer 4"
                              ],
                              "enabled": true,
                              "include_other": true,
                              "position": 2,
                              "required": false,
                              "type": "multi_select"
                            },
                            {
                              "name": "Phone Number",
                              "type": "phone_number",
                              "position": 0,
                              "enabled": true,
                              "required": true,
                              "answer_choices": [],
                              "include_other": false
                            }
                          ]
                        }
                      ],
                      "pagination": {
                        "count": 1,
                        "next_page": "https://api.calendly.com/event_types?count=1&page_token=sNjq4TvMDfUHEl7zHRR0k0E1PCEJWvdi"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "operationId": "getEventTypes"
      },
      "parameters": []
    },
    "/users/{uuid}": {
      "get": {
        "summary": "Get user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "User unique identifier, or the constant \"me\" to reference the caller",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Service response",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
                        "name": "John Doe",
                        "slug": "acmesales",
                        "email": "test@example.com",
                        "scheduling_url": "https://calendly.com/acmesales",
                        "timezone": "America/New York",
                        "avatar_url": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png",
                        "created_at": "2019-01-02T03:04:05.678Z",
                        "updated_at": "2019-08-07T06:05:04.321Z",
                        "current_organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Returns information about a specified User.",
        "operationId": "getUser"
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get current user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Service response",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
                        "name": "John Doe",
                        "slug": "acmesales",
                        "email": "user@example.com",
                        "scheduling_url": "https://calendly.com/acmesales",
                        "timezone": "America/New York",
                        "avatar_url": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png",
                        "created_at": "2019-01-02T03:04:05.678Z",
                        "updated_at": "2019-08-07T06:05:04.321Z",
                        "current_organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Returns basic information about your user account.",
        "operationId": "getMyUserAccount"
      }
    },
    "/scheduled_events/{event_uuid}/invitees/{invitee_uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "event_uuid",
          "in": "path",
          "required": true,
          "description": "The event's unique identifier"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "invitee_uuid",
          "in": "path",
          "required": true,
          "description": "The invitee's unique identifier"
        }
      ],
      "get": {
        "summary": "Get Event Invitee",
        "tags": [
          "Scheduled Events"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/Invitee"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Invitee": {
                    "value": {
                      "resource": {
                        "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
                        "created_at": "2020-01-01T20:30:00Z",
                        "email": "email@example.com",
                        "rescheduled": false,
                        "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
                        "event": "https://api.calendly.com/scheduled_events/ABCDABCDABCDABCD",
                        "name": "John Doe",
                        "first_name": null,
                        "last_name": null,
                        "new_invitee": null,
                        "old_invitee": null,
                        "status": "active",
                        "text_reminder_number": null,
                        "timezone": "America/New_York",
                        "tracking": {
                          "utm_campaign": null,
                          "utm_source": null,
                          "utm_medium": null,
                          "utm_content": null,
                          "utm_term": null,
                          "salesforce_uuid": null
                        },
                        "updated_at": "2020-01-01T20:30:00Z",
                        "uri": "https://api.calendly.com/api/v2/scheduled_events/ABCDABCDABCDABCD/invitees/ABCDABCDABCDABCD",
                        "questions_and_answers": [
                          {
                            "answer": "radio button answer",
                            "position": 0,
                            "question": "Question with Radio Buttons answer type"
                          },
                          {
                            "answer": "Multiple line\nAnswer",
                            "position": 1,
                            "question": "Question with Multiple Lines answer type"
                          },
                          {
                            "answer": "Answer 1\nAnswer 2\nAnswer 3",
                            "position": 2,
                            "question": "Question with Checkboxes answer type"
                          }
                        ],
                        "canceled": false,
                        "payment": {
                          "external_id": "ch_AAAAAAAAAAAAAAAAAAAAAAAA",
                          "provider": "stripe",
                          "amount": 1234.56,
                          "currency": "USD",
                          "terms": "sample terms of payment (up to 1,024 characters)",
                          "successful": true
                        },
                        "no_show": null
                      }
                    }
                  },
                  "Canceled Invitee": {
                    "value": {
                      "resource": {
                        "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
                        "created_at": "2020-11-23T17:51:18.327602Z",
                        "email": "test@example.com",
                        "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
                        "name": "John Doe",
                        "first_name": null,
                        "last_name": null,
                        "new_invitee": null,
                        "old_invitee": null,
                        "questions_and_answers": [],
                        "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
                        "rescheduled": false,
                        "status": "canceled",
                        "text_reminder_number": null,
                        "timezone": "America/New_York",
                        "tracking": {
                          "utm_campaign": null,
                          "utm_source": null,
                          "utm_medium": null,
                          "utm_content": null,
                          "utm_term": null,
                          "salesforce_uuid": null
                        },
                        "updated_at": "2020-11-23T17:54:22.356897Z",
                        "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
                        "canceled": true,
                        "cancellation": {
                          "canceler_type": "invitee",
                          "canceled_by": "John Doe",
                          "reason": "Meeting Conflict"
                        },
                        "payment": {
                          "external_id": "ch_AAAAAAAAAAAAAAAAAAAAAAAA",
                          "provider": "stripe",
                          "amount": 1234.56,
                          "currency": "USD",
                          "terms": "sample terms of payment (up to 1,024 characters)",
                          "successful": true
                        },
                        "no_show": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "description": "Caller not authorized to view event",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error Response",
                  "type": "object",
                  "description": "Error Object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "parameter": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "title",
                    "message"
                  ],
                  "x-internal": true
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "You do not have permission to view this event"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "operationId": "get-scheduled_events-event_uuid-invitees-invitee_uuid",
        "security": [
          {
            "oauth2": []
          }
        ],
        "description": "Returns information about a specified Invitee (person invited to an event)."
      }
    },
    "/scheduled_events/{uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "required": true,
          "description": "The event's unique identifier"
        }
      ],
      "get": {
        "summary": "Get Event",
        "tags": [
          "Scheduled Events"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/Event"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2",
                        "name": "15 Minute Meeting",
                        "status": "active",
                        "booking_method": "instant",
                        "start_time": "2019-08-24T14:15:22Z",
                        "end_time": "2019-08-24T14:15:22Z",
                        "event_type": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2",
                        "location": {
                          "type": "physical",
                          "location": "Calendly Office"
                        },
                        "invitees_counter": {
                          "total": 0,
                          "active": 0,
                          "limit": 0
                        },
                        "created_at": "2019-01-02T03:04:05.678Z",
                        "updated_at": "2019-01-02T03:04:05.678Z",
                        "event_memberships": [
                          {
                            "user": "https://api.calendly.com/users/GBGBDCAADAEDCRZ2"
                          }
                        ],
                        "event_guests": [
                          {
                            "email": "user@example.com",
                            "created_at": "2019-08-24T14:15:22Z",
                            "updated_at": "2019-08-24T14:15:22Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "operationId": "get-scheduled_events-uuid",
        "security": [
          {
            "oauth2": []
          }
        ],
        "description": "Returns information about a specified Event."
      }
    },
    "/event_types/{uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Event Type",
        "tags": [
          "Event Types"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/EventType"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/event_types/AAAAAAAAAAAAAAAA",
                        "name": "15 Minute Meeting",
                        "active": true,
                        "booking_method": "instant",
                        "slug": "acmesales",
                        "scheduling_url": "https://calendly.com/acmesales",
                        "duration": 30,
                        "kind": "solo",
                        "pooling_type": "round_robin",
                        "type": "StandardEventType",
                        "color": "#fff200",
                        "created_at": "2019-01-02T03:04:05.678Z",
                        "updated_at": "2019-08-07T06:05:04.321Z",
                        "internal_note": "Internal note",
                        "description_plain": "15 Minute Meeting",
                        "description_html": "<p>15 Minute Meeting</p>",
                        "profile": {
                          "type": "User",
                          "name": "Tamara Jones",
                          "owner": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
                        },
                        "secret": true,
                        "custom_questions": [
                          {
                            "name": "Company Name",
                            "type": "string",
                            "position": 0,
                            "enabled": true,
                            "required": true,
                            "answer_choices": [],
                            "include_other": false
                          },
                          {
                            "name": "What would you like to discuss?",
                            "type": "text",
                            "position": 0,
                            "enabled": true,
                            "required": true,
                            "answer_choices": [],
                            "include_other": false
                          },
                          {
                            "name": "Number of employees",
                            "answer_choices": [
                              "1",
                              "2-10",
                              "11-20",
                              "20+"
                            ],
                            "enabled": true,
                            "include_other": true,
                            "position": 2,
                            "required": false,
                            "type": "single_select"
                          },
                          {
                            "name": "Multi-Select Question",
                            "answer_choices": [
                              "Answer 1",
                              "Answer 2",
                              "Answer 3",
                              "Answer 4"
                            ],
                            "enabled": true,
                            "include_other": true,
                            "position": 2,
                            "required": false,
                            "type": "multi_select"
                          },
                          {
                            "name": "Phone Number",
                            "type": "phone_number",
                            "position": 0,
                            "enabled": true,
                            "required": true,
                            "answer_choices": [],
                            "include_other": false
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "operationId": "get-event_types-uuid",
        "security": [
          {
            "oauth2": []
          }
        ],
        "description": "Returns information about a specified Event Type."
      }
    },
    "/organizations/{uuid}/invitations": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "required": true,
          "description": "The organization's unique identifier"
        }
      ],
      "get": {
        "summary": "List Organization Invitations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collection": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrganizationInvitation"
                      }
                    },
                    "pagination": {
                      "$ref": "#/paths/~1scheduled_events~1{uuid}~1invitees/get/responses/200/content/application~1json/schema/properties/pagination"
                    }
                  },
                  "required": [
                    "collection",
                    "pagination"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "collection": [
                        {
                          "uri": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA/invitations/BBBBBBBBBBBBBBBB",
                          "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
                          "email": "test@example.com",
                          "status": "accepted",
                          "created_at": "2019-08-07T06:05:04.321Z",
                          "updated_at": "2019-01-02T03:04:05.678Z",
                          "last_sent_at": "2019-01-02T03:04:05.678Z",
                          "user": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
                        }
                      ],
                      "pagination": {
                        "count": 1,
                        "next_page": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA/invitations?count=1&page_token=sNjq4TvMDfUHEl7zHRR0k0E1PCEJWvdi"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "operationId": "get-organizations-uuid-invitations",
        "description": "Returns a list of Organization Invitations that were sent to the organization's members.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Count"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "schema": {
              "type": "string",
              "default": "created_at:asc"
            },
            "in": "query",
            "name": "sort",
            "description": "Order results by the field name and direction specified (ascending or descending). Returns multiple sets of results in a comma-separated list."
          },
          {
            "schema": {
              "type": "string",
              "format": "email",
              "example": "bob@example.com"
            },
            "in": "query",
            "name": "email",
            "description": "Indicates if the results should be filtered by email address"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "declined"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Indicates if the results should be filtered by status  (\"pending\", \"accepted\", or \"declined\")"
          }
        ],
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "summary": "Invite User to Organization",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/OrganizationInvitation"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Invitation": {
                    "value": {
                      "resource": {
                        "created_at": "2020-01-01T20:30:00Z",
                        "email": "email@example.com",
                        "last_sent_at": "2020-01-01T20:30:00Z",
                        "organization": "https://api.calendly.com/organizations/ABCDABCDABCDABCD",
                        "status": "pending",
                        "updated_at": "2020-01-01T20:30:00Z",
                        "uri": "https://api.calendly.com/organizations/ABCDABCDABCDABCD/invitations/DCBADCBADCBADCBA"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                "examples": {
                  "Email is Invalid": {
                    "value": {
                      "title": "Invalid Email",
                      "message": "invalid_email@example is an invalid email format"
                    }
                  },
                  "Email is Blank": {
                    "value": {
                      "title": "Invalid Argument",
                      "message": "The supplied parameters are invalid.",
                      "details": [
                        {
                          "parameter": "email",
                          "message": "must be filled"
                        }
                      ]
                    }
                  },
                  "Email Exists in Organization": {
                    "value": {
                      "title": "Already Organization Member",
                      "message": "email@example.com is already in the organization"
                    }
                  },
                  "Invitation Already Exists": {
                    "value": {
                      "title": "Already Invited",
                      "message": "email@example.com has already been invited"
                    }
                  },
                  "Race Condition": {
                    "value": {
                      "title": "Race Condition",
                      "message": "A race condition occurred when processing the request.  Please try the request again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "description": "Permission Denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": [
                        "Permission Denied"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "You already sent all the invitations you're allotted based upon the number of seats purchased with your account. Please purchase more seats to send more invitations.",
                        "You already sent all the invitations allotted to you with a trial account.",
                        "You do not have permission",
                        "You cannot perform this action for an organization with SCIM enabled."
                      ]
                    }
                  }
                },
                "examples": {
                  "Quantity Overflow": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "You already sent all the invitations you're allotted based upon the number of seats purchased with your account. Please purchase more seats to send more invitations."
                    }
                  },
                  "Trial Quantity Overflow": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "You already sent all the invitations allotted to you with a trial account."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "operationId": "post-organizations-uuid-invitations",
        "description": "\t\nInvites a user to an organization.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email of the user being invited",
                    "format": "email",
                    "example": "alice@example.com"
                  }
                },
                "required": [
                  "email"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "email": "alice@example.com"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organizations/{org_uuid}/invitations/{uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "org_uuid",
          "in": "path",
          "required": true,
          "description": "The organizationâ€™s unique identifier"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "description": "The organization invitation's unique identifier",
          "required": true
        }
      ],
      "delete": {
        "summary": "Revoke User's Organization Invitation",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                "examples": {
                  "Invitation Already Accepted": {
                    "value": {
                      "title": "Invitation Already Accepted",
                      "message": "The invitation has already been accepted."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "operationId": "revoke-users-organization-invitation",
        "description": "Use this to revoke an Organization Invitation to an organization. Once revoked, the invitation link that was sent to the invitee is no longer valid.",
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "get": {
        "summary": "Get Organization Invitation",
        "operationId": "get-organizations-org_uuid-invitations-uuid",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/OrganizationInvitation"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA/invitations/BBBBBBBBBBBBBBBB",
                        "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
                        "email": "test@example.com",
                        "status": "accepted",
                        "created_at": "2019-08-07T06:05:04.321Z",
                        "updated_at": "2019-01-02T03:04:05.678Z",
                        "last_sent_at": "2019-01-02T03:04:05.678Z",
                        "user": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Returns an Organization Invitation that was sent to the organization's members.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "tags": [
          "Organizations"
        ]
      }
    },
    "/organization_memberships/{uuid}": {
      "get": {
        "summary": "Get Organization Membership",
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/OrganizationMembership"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/organization_memberships/AAAAAAAAAAAAAAAA",
                        "role": "admin",
                        "user": {
                          "uri": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
                          "name": "John Doe",
                          "slug": "acmesales",
                          "email": "test@example.com",
                          "scheduling_url": "https://calendly.com/acmesales",
                          "timezone": "America/New York",
                          "avatar_url": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png",
                          "created_at": "2019-01-02T03:04:05.678Z",
                          "updated_at": "2019-08-07T06:05:04.321Z"
                        },
                        "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
                        "updated_at": "2019-08-07T06:05:04.321Z",
                        "created_at": "2019-01-02T03:04:05.678Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "description": "Caller not authorized to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                "examples": {
                  "User belongs to another organization": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "This user is not in your organization"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Returns information about a user's Organization Membership",
        "operationId": "get-organizations-uuid-memberships"
      },
      "delete": {
        "summary": "Remove User from Organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "delete-organizations-uuid-memberships",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "description": "Caller not authorized to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                "examples": {
                  "Caller's Role is User": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "You do not have permission to perform this action"
                    }
                  },
                  "Member is Owner": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "You can not change owner role"
                    }
                  },
                  "Member is the caller's account": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "You can not remove yourself from organization"
                    }
                  },
                  "Member belongs to another Organization": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "You cannot modify members from another organization"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Removes a user from an organization.\n\nNotes:\n\n* To remove users, the caller must have admin rights for the organization\n\n* An organization owner canâ€™t be removed",
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "required": true,
          "description": "The organization membership's unique identifier"
        }
      ]
    },
    "/organization_memberships": {
      "get": {
        "summary": "List Organization Memberships",
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/Count"
          },
          {
            "schema": {
              "type": "string",
              "format": "email",
              "example": "user@example.com"
            },
            "in": "query",
            "name": "email",
            "description": "Indicates if the results should be filtered by email address"
          },
          {
            "schema": {
              "type": "string",
              "format": "uri",
              "example": "https://api.calendly.com/organizations/012345678901234567890"
            },
            "in": "query",
            "name": "organization",
            "description": "Indicates if the results should be filtered by organization"
          },
          {
            "schema": {
              "type": "string",
              "example": "https://api.calendly.com/users/012345678901234567890",
              "format": "uri"
            },
            "in": "query",
            "name": "user",
            "description": "Indicates if the results should be filtered by user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Service response",
                  "properties": {
                    "collection": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrganizationMembership"
                      }
                    },
                    "pagination": {
                      "$ref": "#/paths/~1scheduled_events~1{uuid}~1invitees/get/responses/200/content/application~1json/schema/properties/pagination"
                    }
                  },
                  "required": [
                    "collection",
                    "pagination"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "collection": [
                        {
                          "uri": "https://api.calendly.com/organization_memberships/AAAAAAAAAAAAAAAA",
                          "role": "admin",
                          "user": {
                            "uri": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
                            "name": "John Doe",
                            "slug": "acmesales",
                            "email": "test@example.com",
                            "scheduling_url": "https://calendly.com/acmesales",
                            "timezone": "America/New York",
                            "avatar_url": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png",
                            "created_at": "2019-01-02T03:04:05.678Z",
                            "updated_at": "2019-08-07T06:05:04.321Z"
                          },
                          "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
                          "updated_at": "2019-08-07T06:05:04.321Z",
                          "created_at": "2019-01-02T03:04:05.678Z"
                        }
                      ],
                      "pagination": {
                        "count": 1,
                        "next_page": "https://api.calendly.com/organization_memberships/AAAAAAAAAAAAAAAA?count=1&page_token=sNjq4TvMDfUHEl7zHRR0k0E1PCEJWvdi"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "description": "Caller not authorized to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                "examples": {
                  "User belongs to another organization": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "This user is not in your organization"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Use this to list the Organization Memberships for all users belonging to an organization, use:\n\n* `user` to look up a user's membership in an organization\n\n* `organization` to look up all users that belong to the organization\n\nThis endpoint can also be used to retrieve your organization URI.",
        "operationId": "get-organization-memberships"
      },
      "parameters": []
    },
    "/webhook_subscriptions": {
      "post": {
        "summary": "Create Webhook Subscription",
        "operationId": "post-users-uuid-webhooks",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/WebhookSubscription"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/webhook_subscriptions/AAAAAAAAAAAAAAAA",
                        "callback_url": "https://blah.foo/bar",
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z",
                        "retry_started_at": "2019-08-24T14:15:22Z",
                        "state": "active",
                        "events": [
                          "invitee.created"
                        ],
                        "scope": "user",
                        "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
                        "user": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
                        "creator": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "description": "Attempt to create a resource that already exists",
            "content": {
              "application/json": {
                "examples": {
                  "URL Already Exists": {
                    "value": {
                      "title": "Already Exists",
                      "message": "Hook with this url already exists"
                    }
                  }
                },
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "enum": [
                            "Already Exists"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Hook with this url already exists"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Create a Webhook Subscription for an Organization or User.",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL where you want to receive POST requests for events you are subscribed to.",
                    "format": "uri"
                  },
                  "events": {
                    "type": "array",
                    "description": "List of user events to subscribe to.",
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "invitee.canceled",
                        "invitee.created"
                      ]
                    }
                  },
                  "organization": {
                    "type": "string",
                    "description": "The unique reference to the organization that the webhook will be tied to.",
                    "format": "uri"
                  },
                  "user": {
                    "type": "string",
                    "description": "The unique reference to the user that the webhook will be tied to.",
                    "format": "uri"
                  },
                  "scope": {
                    "type": "string",
                    "enum": [
                      "organization",
                      "user"
                    ],
                    "description": "Indicates if the webhook subscription scope will be \"organization\" or \"user\""
                  },
                  "signing_key": {
                    "type": "string",
                    "description": "Optional secret key shared between your application and Calendly. See https://developer.calendly.com/api-docs/ZG9jOjM2MzE2MDM4-webhook-signatures for additional information."
                  }
                },
                "required": [
                  "url",
                  "events",
                  "organization",
                  "scope"
                ]
              },
              "examples": {
                "User Scope Webhook": {
                  "value": {
                    "url": "https://blah.foo/bar",
                    "events": [
                      "invitee.created",
                      "invitee.canceled"
                    ],
                    "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
                    "user": "https://api.calendly.com/users/BBBBBBBBBBBBBBBB",
                    "scope": "user",
                    "signing_key": "5mEzn9C-I28UtwOjZJtFoob0sAAFZ95GbZkqj4y3i0I"
                  }
                },
                "Organization Scope Webhook": {
                  "value": {
                    "url": "https://blah.foo/bar",
                    "events": [
                      "invitee.created",
                      "invitee.canceled"
                    ],
                    "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
                    "scope": "organization",
                    "signing_key": "5mEzn9C-I28UtwOjZJtFoob0sAAFZ95GbZkqj4y3i0I"
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "get": {
        "summary": "List Webhook Subscriptions",
        "operationId": "get-webhooks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collection": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebhookSubscription"
                      }
                    },
                    "pagination": {
                      "$ref": "#/paths/~1scheduled_events~1{uuid}~1invitees/get/responses/200/content/application~1json/schema/properties/pagination"
                    }
                  },
                  "required": [
                    "collection",
                    "pagination"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "collection": [
                        {
                          "uri": "https://api.calendly.com/webhook_subscriptions/AAAAAAAAAAAAAAAA",
                          "callback_url": "https://blah.foo/bar",
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "retry_started_at": "2019-08-24T14:15:22Z",
                          "state": "active",
                          "events": [
                            "invitee.created"
                          ],
                          "scope": "user",
                          "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
                          "user": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
                          "creator": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
                        }
                      ],
                      "pagination": {
                        "count": 1,
                        "next_page": "https://api.calendly.com/webhook_subscriptions?count=1&page_token=sNjq4TvMDfUHEl7zHRR0k0E1PCEJWvdi"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "description": "Get a list of Webhook Subscriptions for a specified Organization or User.",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "in": "query",
            "name": "organization",
            "description": "Indicates if the results should be filtered by organization",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "in": "query",
            "name": "user",
            "description": "Indicates if the results should be filtered by user. This parameter is only required if the `scope` parameter is set to `user`."
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/Count"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "description": "Order results by the specified field and direction. Accepts comma-separated list of {field}:{direction} values.\nSupported fields are: created_at.\nSort direction is specified as: asc, desc."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "organization",
                "user"
              ]
            },
            "in": "query",
            "name": "scope",
            "description": "Filter the list by organization or user",
            "required": true
          }
        ]
      }
    },
    "/webhook_subscriptions/{webhook_uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "webhook_uuid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Webhook Subscription",
        "tags": [
          "Webhooks"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/WebhookSubscription"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/webhook_subscriptions/AAAAAAAAAAAAAAAA",
                        "callback_url": "https://blah.foo/bar",
                        "created_at": "2019-08-24T14:15:22Z",
                        "updated_at": "2019-08-24T14:15:22Z",
                        "retry_started_at": "2019-08-24T14:15:22Z",
                        "state": "active",
                        "events": [
                          "invitee.created"
                        ],
                        "scope": "user",
                        "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
                        "user": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
                        "creator": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          }
        },
        "operationId": "get-users-user_uuid-webhooks-webhook_uuid",
        "description": "Get a specified Webhook Subscription.",
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Webhook Subscription",
        "operationId": "delete-users-user_uuid-webhooks-webhook_uuid",
        "description": "Delete a Webhook Subscription.",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/scheduling_links": {
      "post": {
        "tags": [
          "Scheduling Links"
        ],
        "summary": "Create Single-Use Scheduling Link",
        "operationId": "post-scheduling_links",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "required": [
                        "booking_url"
                      ],
                      "properties": {
                        "booking_url": {
                          "type": "string",
                          "description": "Scheduling link url",
                          "format": "uri",
                          "example": "https://calendly.com/d/abcd-brv8/15-minute-meeting"
                        },
                        "owner": {
                          "type": "string",
                          "description": "A link to the resource that owns this Scheduling Link (currently, this is always an Event Type)",
                          "format": "uri",
                          "example": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2"
                        },
                        "owner_type": {
                          "type": "string",
                          "example": "EventType",
                          "enum": [
                            "EventType"
                          ],
                          "description": "Resource type (currently, this is always EventType)"
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "booking_url": "https://calendly.com/d/abcd-brv8/15-minute-meeting",
                        "owner": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2",
                        "owner_type": "EventType"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Creates a single-use scheduling link.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "max_event_count": {
                    "type": "number",
                    "description": "The max number of events that can be scheduled using this scheduling link.",
                    "enum": [
                      1
                    ],
                    "example": 1
                  },
                  "owner": {
                    "type": "string",
                    "description": "A link to the resource that owns this Scheduling Link (currently, this is always an Event Type)",
                    "format": "uri",
                    "example": "https://api.calendly.com/event_types/012345678901234567890"
                  },
                  "owner_type": {
                    "type": "string",
                    "example": "EventType",
                    "enum": [
                      "EventType"
                    ],
                    "description": "Resource type (currently, this is always EventType)"
                  }
                },
                "required": [
                  "max_event_count",
                  "owner",
                  "owner_type"
                ]
              },
              "examples": {
                "Create Single Use Link": {
                  "value": {
                    "max_event_count": 1,
                    "owner": "https://api.calendly.com/event_types/012345678901234567890",
                    "owner_type": "EventType"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/data_compliance/deletion/invitees": {
      "post": {
        "summary": "Delete Invitee Data",
        "security": [
          {
            "oauth2": []
          }
        ],
        "tags": [
          "Data Compliance"
        ],
        "operationId": "post-data-compliance-deletion-invitees",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "email",
                      "example": "test@example.com"
                    }
                  }
                },
                "required": [
                  "emails"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "emails": [
                      "test@example.com"
                    ]
                  }
                }
              }
            }
          },
          "description": ""
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "Example": {
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                "examples": {
                  "Missing Billing Permission": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "Please upgrade your Calendly account to Enterprise."
                    }
                  },
                  "Invalid Data Request Permission": {
                    "value": {
                      "title": "Permission Denied",
                      "message": "You must be an admin/owner with the data requests permission enabled to use this resource. Contact Calendly support and ask them to grant you data requests permission."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "<!-- theme: info -->\n  > This endpoint requires an <strong>Enterprise</strong> subscription.\n\nTo submit a request to remove invitee data from all previously booked events in your organization, use this endpoint. Requests for data deletion can take up to 7 days to complete."
      }
    },
    "/invitee_no_shows/{uuid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "uuid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Invitee No Show",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/InviteeNoShow"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/invitee_no_shows/639fa667-4c1b-4b20-93b5-1b1969d67dc6",
                        "invitee": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2/invitees/7c1dbe46-bd84-42e2-9b97-05e2fb379bfe",
                        "created_at": "2019-01-02T03:04:05.678Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          }
        },
        "operationId": "getInviteeNoShow",
        "description": "Returns information about a specified Invitee No Show.",
        "tags": [
          "Scheduled Events"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-internal": false
      },
      "delete": {
        "summary": "Delete Invitee No Show",
        "operationId": "deleteInviteeNoShow",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Undoes marking an Invitee as a No Show.",
        "tags": [
          "Scheduled Events"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-internal": false
      }
    },
    "/invitee_no_shows": {
      "parameters": [],
      "post": {
        "summary": "Create Invitee No Show",
        "operationId": "postInviteeNoShow",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resource": {
                      "$ref": "#/components/schemas/InviteeNoShow"
                    }
                  },
                  "required": [
                    "resource"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "resource": {
                        "uri": "https://api.calendly.com/invitee_no_shows/639fa667-4c1b-4b20-93b5-1b1969d67dc6",
                        "invitee": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2/invitees/7c1dbe46-bd84-42e2-9b97-05e2fb379bfe",
                        "created_at": "2019-01-02T03:04:05.678Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/INVALID_ARGUMENT"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/PERMISSION_DENIED"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "500": {
            "$ref": "#/components/responses/UNKNOWN"
          }
        },
        "description": "Marks an Invitee as a No Show.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invitee": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2/invitees/7c1dbe46-bd84-42e2-9b97-05e2fb379bfe"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "invitee": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2/invitees/7c1dbe46-bd84-42e2-9b97-05e2fb379bfe"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Scheduled Events"
        ],
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-internal": false
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.calendly.com/oauth/authorize",
            "tokenUrl": "https://auth.calendly.com/oauth/token",
            "scopes": {
              "default": "default scope"
            },
            "refreshUrl": "https://auth.calendly.com/oauth/token"
          }
        },
        "description": "Put the access token in the `Authorization: Bearer <TOKEN>` header"
      }
    },
    "schemas": {
      "User": {
        "x-tags": [
          "Users"
        ],
        "type": "object",
        "description": "Information about the user.",
        "title": "User",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "name": "John Doe",
            "slug": "acmesales",
            "email": "test@example.com",
            "scheduling_url": "https://calendly.com/acmesales",
            "timezone": "America/New York",
            "avatar_url": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png",
            "created_at": "2019-01-02T03:04:05.678Z",
            "updated_at": "2019-08-07T06:05:04.321Z",
            "current_organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical reference (unique identifier) for the user",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          },
          "name": {
            "type": "string",
            "description": "The user's name (human-readable format)",
            "example": "John Doe"
          },
          "slug": {
            "type": "string",
            "description": "The portion of URL for the user's scheduling page (where invitees book sessions), rendered in a human-readable format",
            "example": "acmesales"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address",
            "example": "test@example.com"
          },
          "scheduling_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the user's Calendly landing page (that lists all the user's event types)",
            "example": "https://calendly.com/acmesales"
          },
          "timezone": {
            "type": "string",
            "example": "America/New York",
            "description": "The time zone to use when presenting time to the user"
          },
          "avatar_url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "description": "The URL of the user's avatar (image)",
            "example": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678Z",
            "description": "The moment when the user's record was created (e.g. \"2020-01-02T03:04:05.678Z\")"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321Z",
            "description": "The moment when the user's record was last updated (e.g. \"2020-01-02T03:04:05.678Z\")"
          },
          "current_organization": {
            "type": "string",
            "description": "A unique reference to the user's current organization",
            "format": "uri",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          }
        },
        "required": [
          "uri",
          "name",
          "slug",
          "email",
          "scheduling_url",
          "timezone",
          "avatar_url",
          "created_at",
          "updated_at",
          "current_organization"
        ]
      },
      "EventType": {
        "x-tags": [
          "Event Types"
        ],
        "type": "object",
        "description": "A configuration for an Event",
        "title": "Event Type",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/event_types/AAAAAAAAAAAAAAAA",
            "name": "15 Minute Meeting",
            "active": true,
            "booking_method": "instant",
            "slug": "acmesales",
            "scheduling_url": "https://calendly.com/acmesales",
            "duration": 30,
            "kind": "solo",
            "pooling_type": "round_robin",
            "type": "StandardEventType",
            "color": "#fff200",
            "created_at": "2019-01-02T03:04:05.678Z",
            "updated_at": "2019-08-07T06:05:04.321Z",
            "internal_note": "Event type note",
            "description_plain": "Event type description",
            "description_html": "<p>Event type description</p>",
            "profile": {
              "type": "User",
              "name": "Tamara Jones",
              "owner": "https://api.calendly.com/users/ABC123"
            },
            "secret": true,
            "custom_questions": [
              {
                "name": "Company Name",
                "type": "string",
                "position": 0,
                "enabled": true,
                "required": true,
                "answer_choices": null,
                "include_other": false
              },
              {
                "name": "What would you like to discuss?",
                "type": "text",
                "position": 0,
                "enabled": true,
                "required": true,
                "answer_choices": null,
                "include_other": false
              },
              {
                "name": "Number of employees",
                "answer_choices": [
                  "1",
                  "2-10",
                  "11-20",
                  "20+"
                ],
                "enabled": true,
                "include_other": true,
                "position": 2,
                "required": false,
                "type": "single_select"
              },
              {
                "name": "Multi-Select Question",
                "answer_choices": [
                  "Answer 1",
                  "Answer 2",
                  "Answer 3",
                  "Answer 4"
                ],
                "enabled": true,
                "include_other": true,
                "position": 2,
                "required": false,
                "type": "multi_select"
              },
              {
                "name": "Phone Number",
                "type": "phone_number",
                "position": 0,
                "enabled": true,
                "required": true,
                "answer_choices": null,
                "include_other": false
              }
            ]
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "description": "Canonical reference (unique identifier) for the event type",
            "format": "uri",
            "example": "https://api.calendly.com/event_types/AAAAAAAAAAAAAAAA"
          },
          "name": {
            "type": "string",
            "description": "The event type name (in human-readable format)",
            "example": "15 Minute Meeting",
            "nullable": true
          },
          "active": {
            "description": "Indicates if the event is active or not.",
            "type": "boolean"
          },
          "slug": {
            "type": "string",
            "description": "The portion of the event type's URL that identifies a specific web page (in a human-readable format)",
            "example": "acmesales",
            "nullable": true
          },
          "scheduling_url": {
            "type": "string",
            "description": "The URL of the userâ€™s scheduling site where invitees book this event type",
            "format": "uri",
            "example": "https://calendly.com/acmesales"
          },
          "duration": {
            "description": "The length of sessions booked with this event type",
            "type": "number",
            "example": 30
          },
          "kind": {
            "description": "Indicates if the event type is \"solo\" (belongs to an individual user) or \"group\"",
            "type": "string",
            "enum": [
              "solo",
              "group"
            ]
          },
          "pooling_type": {
            "description": "Indicates if the event type is \"round robin\" (alternates between hosts) or \"collective\" (invitees pick a time when all participants are available) or \"null\" (the event type doesnâ€™t consider the availability of a group participants)",
            "type": "string",
            "enum": [
              "round_robin",
              "collective"
            ],
            "nullable": true
          },
          "type": {
            "description": "Indicates if the event type is \"AdhocEventType\" (ad hoc event) or \"StandardEventType\" (standard event type)",
            "type": "string",
            "enum": [
              "StandardEventType",
              "AdhocEventType"
            ]
          },
          "color": {
            "description": "The hexadecimal color value of the event type's scheduling page",
            "type": "string",
            "pattern": "^#[a-f\\d]{6}$",
            "example": "#fff200"
          },
          "created_at": {
            "description": "The moment the event type was created (e.g. \"2020-01-02T03:04:05.678Z\")",
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678Z"
          },
          "updated_at": {
            "description": "The moment the event type was last updated (e.g. \"2020-01-02T03:04:05.678Z\")",
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321Z"
          },
          "internal_note": {
            "type": "string",
            "description": "Contents of a note that may be associated with the event type",
            "example": "Internal note",
            "nullable": true
          },
          "description_plain": {
            "type": "string",
            "description": "The event type's description (in non formatted text)",
            "example": "15 Minute Meeting",
            "nullable": true
          },
          "description_html": {
            "type": "string",
            "description": "The event type's description (formatted with HTML)",
            "example": "<p>15 Minute Meeting</p>",
            "nullable": true
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "secret": {
            "type": "boolean",
            "description": "Indicates if the event type is hidden on the owner's main scheduling page"
          },
          "booking_method": {
            "type": "string",
            "enum": [
              "instant",
              "poll"
            ],
            "example": "poll",
            "description": "Indicates if the event type is for a poll or an instant booking"
          },
          "custom_questions": {
            "type": "array",
            "items": {
              "x-tags": [
                "Event Types"
              ],
              "title": "EventTypeCustomQuestion",
              "type": "object",
              "x-examples": {
                "String": {
                  "name": "Company Name",
                  "type": "string",
                  "position": 0,
                  "enabled": true,
                  "required": true,
                  "answer_choices": [],
                  "include_other": false
                },
                "Text": {
                  "name": "What would you like to discuss?",
                  "type": "text",
                  "position": 0,
                  "enabled": true,
                  "required": true,
                  "answer_choices": [],
                  "include_other": false
                },
                "Single-Select": {
                  "name": "Number of employees",
                  "answer_choices": [
                    "1",
                    "2-10",
                    "11-20",
                    "20+"
                  ],
                  "enabled": true,
                  "include_other": true,
                  "position": 2,
                  "required": false,
                  "type": "single_select"
                },
                "Multi-Select": {
                  "name": "Multi-Select Question",
                  "answer_choices": [
                    "Answer 1",
                    "Answer 2",
                    "Answer 3",
                    "Answer 4"
                  ],
                  "enabled": true,
                  "include_other": true,
                  "position": 2,
                  "required": false,
                  "type": "multi_select"
                },
                "Phone Number": {
                  "name": "Phone Number",
                  "type": "phone_number",
                  "position": 0,
                  "enabled": true,
                  "required": true,
                  "answer_choices": [],
                  "include_other": false
                }
              },
              "description": "",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The custom question that the host created for the event type."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "string",
                    "text",
                    "phone_number",
                    "single_select",
                    "multi_select"
                  ],
                  "description": "The type of response that the invitee provides to the custom question; can be one or multiple lines of text, a phone number, or single- or multiple-select."
                },
                "position": {
                  "type": "number",
                  "description": "The numerical position of the question on the event booking page after the name and email address fields."
                },
                "enabled": {
                  "type": "boolean",
                  "description": "true if the question created by the host is turned ON and visible on the event booking page; false if turned OFF and invisible on the event booking page."
                },
                "required": {
                  "type": "boolean",
                  "description": "true if a response to the question created by the host is required for invitees to book the event type; false if not required."
                },
                "answer_choices": {
                  "type": "array",
                  "description": "The inviteeâ€™s option(s) for single_select or multi_select type of responses.",
                  "items": {
                    "type": "string"
                  }
                },
                "include_other": {
                  "type": "boolean",
                  "description": "true if the custom question lets invitees record a written response in addition to single-select or multiple-select type of responses; false if it doesnâ€™t."
                }
              },
              "required": [
                "name",
                "type",
                "position",
                "enabled",
                "required",
                "answer_choices",
                "include_other"
              ],
              "x-internal": true
            }
          }
        },
        "required": [
          "uri",
          "name",
          "active",
          "slug",
          "scheduling_url",
          "duration",
          "kind",
          "pooling_type",
          "type",
          "color",
          "created_at",
          "updated_at",
          "internal_note",
          "description_plain",
          "description_html",
          "profile",
          "secret",
          "booking_method",
          "custom_questions"
        ]
      },
      "Profile": {
        "x-tags": [
          "Event Types"
        ],
        "type": "object",
        "nullable": true,
        "description": "The publicly visible profile of a User or a Team that's associated with the Event Type (note: some Event Types don't have profiles)",
        "title": "Profile",
        "properties": {
          "type": {
            "type": "string",
            "description": "Indicates if the profile belongs to a \"user\" (individual) or \"team\"",
            "enum": [
              "User",
              "Team"
            ],
            "example": "User"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for the profile of the user that's associated with the event type",
            "example": "Tamara Jones"
          },
          "owner": {
            "type": "string",
            "description": "The unique reference to the user associated with the profile",
            "format": "uri",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        },
        "required": [
          "type",
          "name",
          "owner"
        ],
        "x-examples": {
          "Example": {
            "type": "User",
            "name": "Tamara Jones",
            "owner": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        }
      },
      "Event": {
        "x-tags": [
          "Scheduled Events"
        ],
        "type": "object",
        "description": "Information about a scheduled meeting",
        "title": "Event",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2",
            "name": "15 Minute Meeting",
            "status": "active",
            "start_time": "2019-08-24T14:15:22Z",
            "end_time": "2019-08-24T14:15:22Z",
            "event_type": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2",
            "location": {
              "type": "physical",
              "location": "string"
            },
            "invitees_counter": {
              "total": 0,
              "active": 0,
              "limit": 0
            },
            "created_at": "2019-01-02T03:04:05.678Z",
            "updated_at": "2019-01-02T03:04:05.678Z",
            "event_memberships": [
              {
                "user": "https://api.calendly.com/users/GBGBDCAADAEDCRZ2"
              }
            ],
            "event_guests": [
              {
                "email": "user@example.com",
                "created_at": "2019-08-24T14:15:22Z",
                "updated_at": "2019-08-24T14:15:22Z"
              }
            ]
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical reference (unique identifier) for the resource",
            "example": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2"
          },
          "name": {
            "type": "string",
            "description": "The event name",
            "example": "15 Minute Meeting",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "canceled"
            ],
            "description": "Indicates if the event is \"active\" or \"canceled\""
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The moment the event was scheduled to start in UTC time (e.g. \"2020-01-02T03:04:05.678Z\")."
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "The moment the event was scheduled to end in UTC time (e.g. \"2020-01-02T03:04:05.678Z\")"
          },
          "event_type": {
            "type": "string",
            "description": "The event type associated with this event",
            "format": "uri",
            "example": "https://api.calendly.com/event_types/GBGBDCAADAEDCRZ2"
          },
          "location": {
            "type": "object",
            "x-tags": [
              "Scheduled Events"
            ],
            "description": "The polymorphic base type for an event location that Calendly supports",
            "nullable": true,
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "physical": "#/components/schemas/InPersonMeeting",
                "outbound_call": "#/components/schemas/OutboundCall",
                "inbound_call": "#/components/schemas/InboundCall",
                "google_conference": "#/components/schemas/GoogleConference",
                "zoom_conference": "#/components/schemas/ZoomConference",
                "gotomeeting_conference": "#/components/schemas/GotoMeetingConference",
                "microsoft_teams_conference": "#/components/schemas/MicrosoftTeamsConference",
                "custom": "#/components/schemas/CustomLocation",
                "ask_invitee": "#/components/schemas/InviteeSpecifiedLocation"
              }
            },
            "oneOf": [
              {
                "x-tags": [
                  "Scheduled Events"
                ],
                "description": "Information about the physical (in-person) event location",
                "type": "object",
                "title": "In-Person Meeting",
                "x-examples": {
                  "Example": {
                    "type": "physical",
                    "location": "Calendly Office"
                  }
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "physical"
                    ],
                    "description": "Indicates that the event will be an in-person meeting."
                  },
                  "location": {
                    "type": "string",
                    "description": "The physical location specified by the event host (publisher)",
                    "example": "Calendly Office"
                  }
                },
                "required": [
                  "type",
                  "location"
                ],
                "x-internal": true
              },
              {
                "x-tags": [
                  "Scheduled Events"
                ],
                "description": "Meeting publisher will call the Invitee",
                "type": "object",
                "title": "Outbound Call",
                "x-examples": {},
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "outbound_call"
                    ],
                    "description": "Indicates that the event host (publisher) will call the invitee",
                    "example": "outbound_call"
                  },
                  "location": {
                    "type": "string",
                    "nullable": true,
                    "description": "The phone number the event host (publisher) will use to call the invitee"
                  }
                },
                "required": [
                  "type",
                  "location"
                ],
                "x-internal": true
              },
              {
                "x-tags": [
                  "Scheduled Events"
                ],
                "description": "Invitee will call meeting publisher at the specified phone number",
                "type": "object",
                "title": "Inbound Call",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "inbound_call"
                    ],
                    "description": "\t\nIndicates that the invitee will call the event host"
                  },
                  "location": {
                    "description": "The phone number the invitee will use to call the event host (publisher)",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "location"
                ],
                "x-internal": true
              },
              {
                "x-tags": [
                  "Scheduled Events"
                ],
                "description": "Details about an Event that will take place using a Google Meet / Hangout conference",
                "type": "object",
                "title": "Google Conference",
                "x-examples": {
                  "Pushed status": {
                    "type": "google_conference",
                    "status": "pushed",
                    "join_url": "https://calendly.com/events/ABCDABCDABCDABCD/google_meet"
                  },
                  "Processing status": {
                    "type": "google_conference",
                    "status": "processing",
                    "join_url": null
                  },
                  "Failed status": {
                    "type": "google_conference",
                    "status": "failed",
                    "join_url": "https://calendly.com/events/ABCDABCDABCDABCD/google_meet"
                  },
                  "Initiated status": {
                    "type": "google_conference",
                    "status": "initiated",
                    "join_url": "https://calendly.com/events/ABCDABCDABCDABCD/google_meet"
                  }
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "google_conference"
                    ],
                    "description": "The event location is a Google Meet or Hangouts conference"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "initiated",
                      "processing",
                      "pushed",
                      "failed"
                    ],
                    "description": "Indicates the current status of the Google conference"
                  },
                  "join_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "Google conference meeting url",
                    "format": "uri"
                  }
                },
                "required": [
                  "type",
                  "status",
                  "join_url"
                ],
                "x-internal": true
              },
              {
                "x-tags": [
                  "Scheduled Events"
                ],
                "description": "Meeting will take place in a Zoom conference",
                "type": "object",
                "title": "Zoom Conference",
                "x-examples": {
                  "Pushed status": {
                    "type": "zoom",
                    "join_url": "https://zoom.us/123456",
                    "status": "pushed",
                    "data": {
                      "id": 123456789,
                      "settings": {
                        "global_dial_in_numbers": [
                          {
                            "number": "+1 1234567890",
                            "country": "US",
                            "type": "toll"
                          },
                          {
                            "number": "+1 0987654321",
                            "country": "US",
                            "type": "toll"
                          }
                        ]
                      },
                      "extra": {
                        "intl_numbers_url": "https://zoom.us/123456"
                      },
                      "password": "123456"
                    }
                  },
                  "Failed status": {
                    "type": "zoom",
                    "join_url": null,
                    "status": "failed",
                    "data": null
                  },
                  "Processing status": {
                    "type": "zoom",
                    "join_url": null,
                    "status": "processing",
                    "data": null
                  },
                  "Initiated status": {
                    "type": "zoom",
                    "join_url": null,
                    "status": "initiated",
                    "data": null
                  }
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "zoom_conference"
                    ],
                    "description": "The event location is a Zoom conference"
                  },
                  "status": {
                    "type": "string",
                    "description": "Indicates the current status of the Zoom conference",
                    "enum": [
                      "initiated",
                      "processing",
                      "pushed",
                      "failed"
                    ]
                  },
                  "join_url": {
                    "nullable": true,
                    "type": "string",
                    "description": "Zoom meeting url",
                    "format": "uri"
                  },
                  "data": {
                    "description": "The conference metadata supplied by Zoom",
                    "nullable": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The conference ID provided by Zoom",
                        "type": "string"
                      },
                      "settings": {
                        "type": "object",
                        "properties": {
                          "global_dial_in_numbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "type": "string",
                                  "description": "Phone number"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "Country code"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "country_name": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "extra": {
                        "description": "",
                        "type": "object",
                        "properties": {
                          "intl_numbers_url": {
                            "type": "string",
                            "description": "Zoom International Dial-in Numbers URL",
                            "format": "uri"
                          }
                        }
                      },
                      "password": {
                        "type": "string",
                        "description": "Zoom meeting password",
                        "format": "password"
                      }
                    }
                  }
                },
                "required": [
                  "type",
                  "status",
                  "join_url",
                  "data"
                ],
                "x-internal": true
              },
              {
                "x-tags": [
                  "Scheduled Events"
                ],
                "description": "Details about an Event that will take place using a GotoMeeting conference",
                "type": "object",
                "title": "GoToMeeting Conference",
                "x-examples": {
                  "Pushed status": {
                    "type": "gotomeeting",
                    "status": "pushed",
                    "join_url": "https://www.gotomeeting.com/join/123456",
                    "data": {
                      "uniqueMeetingId": 123456,
                      "conferenceCallInfo": "US: +1 (123) 456-789\nAccess Code: 123-456-789"
                    }
                  },
                  "Failed status": {
                    "type": "gotomeeting",
                    "status": "failed",
                    "join_url": null,
                    "data": null
                  },
                  "Processing status": {
                    "type": "gotomeeting",
                    "status": "processing",
                    "join_url": null,
                    "data": null
                  },
                  "Initiated status": {
                    "type": "gotomeeting",
                    "status": "initiated",
                    "join_url": null,
                    "data": null
                  }
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The event location is a GoToMeeting conference",
                    "enum": [
                      "gotomeeting"
                    ]
                  },
                  "status": {
                    "description": "Indicates the current status of the GoToMeeting conference",
                    "type": "string",
                    "enum": [
                      "initiated",
                      "processing",
                      "pushed",
                      "failed"
                    ]
                  },
                  "join_url": {
                    "nullable": true,
                    "type": "string",
                    "description": "GoToMeeting conference meeting url",
                    "format": "uri"
                  },
                  "data": {
                    "nullable": true,
                    "description": "The conference metadata supplied by GoToMeeting",
                    "type": "object",
                    "properties": {
                      "uniqueMeetingId": {
                        "type": "number",
                        "description": "Canonical reference (unique identifier) for the GoToMeeting conference"
                      },
                      "conferenceCallInfo": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "type",
                  "status",
                  "join_url",
                  "data"
                ],
                "x-internal": true
              },
              {
                "x-tags": [
                  "Scheduled Events"
                ],
                "description": "Meeting will take place in a Microsoft Teams conference",
                "type": "object",
                "title": "Microsoft Teams Conference",
                "x-examples": {
                  "Pushed status": {
                    "type": "microsoft_teams_conference",
                    "join_url": "https://teams.microsoft.com/l/meetup-join/123",
                    "status": "pushed",
                    "data": {
                      "id": "123456",
                      "audioConferencing": {
                        "conferenceId": "123456",
                        "dialinUrl": "https://dialin.teams.microsoft.com/22f12fa0-499f-435b-bc69-b8de580ba330?id=2425999",
                        "tollNumber": "+12525634478"
                      }
                    }
                  },
                  "Failed status": {
                    "type": "microsoft_teams_conference",
                    "join_url": null,
                    "status": "failed",
                    "data": null
                  },
                  "Processing status": {
                    "type": "microsoft_teams_conference",
                    "join_url": null,
                    "status": "processing",
                    "data": null
                  },
                  "Initiated status": {
                    "type": "microsoft_teams_conference",
                    "join_url": null,
                    "status": "initiated",
                    "data": null
                  }
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The event location is a Zoom conference",
                    "enum": [
                      "microsoft_teams_conference"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "description": "Indicates the current status of the Microsoft Teams conference",
                    "enum": [
                      "initiated",
                      "processing",
                      "pushed",
                      "failed"
                    ]
                  },
                  "join_url": {
                    "nullable": true,
                    "type": "string",
                    "description": "Microsoft Teams meeting url",
                    "format": "uri"
                  },
                  "data": {
                    "description": "The conference metadata supplied by Microsoft Teams",
                    "nullable": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The conference ID provided by Microsoft Teams",
                        "type": "string"
                      },
                      "audioConferencing": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "conferenceId": {
                            "type": "string"
                          },
                          "dialinUrl": {
                            "type": "string",
                            "format": "uri"
                          },
                          "tollNumber": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type",
                  "status",
                  "join_url",
                  "data"
                ],
                "x-internal": true
              },
              {
                "x-tags": [
                  "Scheduled Events"
                ],
                "description": "Use this to describe an existing Calendly-supported event location.",
                "type": "object",
                "title": "Custom Location",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "custom"
                    ],
                    "description": "The event location doesn't fall into a standard category defined by the event host (publisher)"
                  },
                  "location": {
                    "nullable": true,
                    "description": "The location description provided by the event host (publisher)",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "location"
                ],
                "x-internal": true
              },
              {
                "x-tags": [
                  "Scheduled Events"
                ],
                "description": "Information about an event location thatâ€™s specified by the invitee.",
                "type": "object",
                "title": "Invitee Specified Location",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "ask_invitee"
                    ],
                    "description": "The event location selected by the invitee"
                  },
                  "location": {
                    "description": "The event location description provided by the invitee",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "location"
                ],
                "x-examples": {
                  "Example": {
                    "type": "ask_invitee",
                    "location": "string"
                  }
                },
                "x-internal": true
              }
            ],
            "title": "Location",
            "x-examples": {
              "Example": {
                "type": "physical",
                "location": "string"
              }
            },
            "x-internal": true
          },
          "invitees_counter": {
            "type": "object",
            "required": [
              "total",
              "active",
              "limit"
            ],
            "properties": {
              "total": {
                "type": "number",
                "description": "Total invitees for an event, including invitees that have canceled"
              },
              "active": {
                "type": "number",
                "description": "Total invitees for an event that have not canceled"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of active invitees that can book the event"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The moment when the event was created (e.g. \"2020-01-02T03:04:05.678Z\")",
            "example": "2019-01-02T03:04:05.678Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The moment when the event was last updated (e.g. \"2020-01-02T03:04:05.678Z\")",
            "example": "2019-01-02T03:04:05.678Z"
          },
          "event_memberships": {
            "type": "array",
            "description": "Event membership list",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "format": "uri",
                  "description": "Canonical reference (unique identifier) for the user",
                  "example": "https://api.calendly.com/users/GBGBDCAADAEDCRZ2"
                }
              },
              "required": [
                "user"
              ]
            }
          },
          "event_guests": {
            "type": "array",
            "description": "Additional people added to an event by an invitee",
            "items": {
              "$ref": "#/components/schemas/Guest"
            }
          },
          "cancellation": {
            "type": "object",
            "description": "Provides data pertaining to the cancellation of the Event",
            "properties": {
              "canceled_by": {
                "type": "string"
              },
              "reason": {
                "type": "string",
                "nullable": true
              },
              "canceler_type": {
                "type": "string",
                "enum": [
                  "host",
                  "invitee"
                ]
              }
            },
            "required": [
              "canceled_by",
              "reason",
              "canceler_type"
            ]
          }
        },
        "required": [
          "uri",
          "name",
          "status",
          "start_time",
          "end_time",
          "event_type",
          "location",
          "invitees_counter",
          "created_at",
          "updated_at",
          "event_memberships",
          "event_guests"
        ]
      },
      "Invitee": {
        "x-tags": [
          "Scheduled Events"
        ],
        "type": "object",
        "description": "An individual who has been invited to meet with a Calendly member",
        "title": "Invitee",
        "x-examples": {
          "Invitee": {
            "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
            "created_at": "2020-11-23T17:51:18.327602Z",
            "email": "test@example.com",
            "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
            "first_name": "John",
            "last_name": "Doe",
            "name": "John Doe",
            "new_invitee": null,
            "old_invitee": null,
            "questions_and_answers": [],
            "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
            "rescheduled": false,
            "status": "active",
            "text_reminder_number": null,
            "timezone": "America/New_York",
            "tracking": {
              "utm_campaign": null,
              "utm_source": null,
              "utm_medium": null,
              "utm_content": null,
              "utm_term": null,
              "salesforce_uuid": null
            },
            "updated_at": "2020-11-23T17:51:18.341657Z",
            "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
            "canceled": false,
            "payment": {
              "external_id": "ch_AAAAAAAAAAAAAAAAAAAAAAAA",
              "provider": "stripe",
              "amount": 1234.56,
              "currency": "USD",
              "terms": "sample terms of payment (up to 1,024 characters)",
              "successful": true
            },
            "no_show": {
              "uri": "https://api.calendly.com/invitee_no_shows/6ee96ed4-83a3-4966-a278-cd19b3c02e09",
              "created_at": "2020-11-23T17:51:18.341657Z"
            }
          },
          "Canceled Invitee": {
            "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
            "created_at": "2020-11-23T17:51:18.327602Z",
            "email": "test@example.com",
            "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
            "first_name": "John",
            "last_name": "Doe",
            "name": "John Doe",
            "new_invitee": null,
            "old_invitee": null,
            "questions_and_answers": [],
            "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
            "rescheduled": false,
            "status": "canceled",
            "text_reminder_number": null,
            "timezone": "America/New_York",
            "tracking": {
              "utm_campaign": null,
              "utm_source": null,
              "utm_medium": null,
              "utm_content": null,
              "utm_term": null,
              "salesforce_uuid": null
            },
            "updated_at": "2020-11-23T17:54:22.356897Z",
            "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
            "canceled": true,
            "cancellation": {
              "canceled_by": "John Doe",
              "reason": "Meeting Conflict"
            },
            "payment": {
              "external_id": "ch_AAAAAAAAAAAAAAAAAAAAAAAA",
              "provider": "stripe",
              "amount": 1234.56,
              "currency": "USD",
              "terms": "sample terms of payment (up to 1,024 characters)",
              "successful": true
            }
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical reference (unique identifier) for the invitee",
            "example": "https://calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The inviteeâ€™s email address",
            "example": "test@example.com"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the invitee who booked the event when the event type is configured to use separate fields for first name and last name. Null when event type is configured to use a single field for name.",
            "example": "John",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the invitee who booked the event when the event type is configured to use separate fields for first name and last name. Null when event type is configured to use a single field for name.",
            "example": "Doe",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The inviteeâ€™s name (in human-readable format)",
            "example": "John Doe"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "canceled"
            ],
            "description": "Indicates if the invitee is \"active\" or \"canceled\""
          },
          "questions_and_answers": {
            "type": "array",
            "description": "A collection of the invitee's responses to questions on the event booking confirmation form",
            "minItems": 0,
            "uniqueItems": true,
            "items": {
              "x-tags": [
                "Scheduled Events"
              ],
              "title": "Invitee Question and Answer",
              "type": "object",
              "x-examples": {
                "Checkbox Answer Type": {
                  "answer": "Answer 1\nAnswer 2\nAnswer 3",
                  "position": 0,
                  "question": "Question 1"
                },
                "Multiple Lines Answer Type": {
                  "answer": "Multiple line\nAnswer",
                  "position": 1,
                  "question": "Question 2"
                },
                "Phone Number Answer Type": {
                  "answer": "+1 234-567-8910",
                  "position": 2,
                  "question": "Question 3"
                }
              },
              "description": "A response to a question on a booking page form",
              "properties": {
                "question": {
                  "type": "string",
                  "description": "A question on the invitee's booking form"
                },
                "answer": {
                  "type": "string",
                  "description": "The invitee's answer to the question"
                },
                "position": {
                  "type": "number",
                  "description": "The position of the question in relation to others on the booking form"
                }
              },
              "required": [
                "question",
                "answer",
                "position"
              ],
              "x-internal": true
            }
          },
          "timezone": {
            "type": "string",
            "description": "Time zone to use when displaying time to the invitee",
            "nullable": true
          },
          "event": {
            "type": "string",
            "format": "uri",
            "description": "A reference to the event",
            "example": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678Z",
            "description": "The moment when the event was created (e.g. \"2020-01-02T03:04:05.678Z\")"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321Z",
            "description": "The moment when the event was last updated (e.g. \"2020-01-02T03:04:05.678Z\")"
          },
          "tracking": {
            "x-tags": [
              "Scheduled Events"
            ],
            "title": "Invitee Tracking",
            "type": "object",
            "x-examples": {
              "InviteeTracking": {
                "utm_campaign": "UTM Campaign",
                "utm_source": "UTM Source",
                "utm_medium": "UTM Medium",
                "utm_content": "UTM Content",
                "utm_term": "UTM Term",
                "salesforce_uuid": "5003000000D8cuIQAA"
              }
            },
            "description": "The UTM and Salesforce tracking parameters associated with an Invitee",
            "properties": {
              "utm_campaign": {
                "type": "string",
                "nullable": true,
                "description": "The UTM parameter used to track a campaign"
              },
              "utm_source": {
                "type": "string",
                "nullable": true,
                "description": "The UTM parameter that identifies the source (platform where the traffic originates)"
              },
              "utm_medium": {
                "type": "string",
                "nullable": true,
                "description": "The UTM parameter that identifies the type of input (e.g. Cost Per Click (CPC), social media, affiliate or QR code)"
              },
              "utm_content": {
                "type": "string",
                "nullable": true,
                "description": "UTM content tracking parameter"
              },
              "utm_term": {
                "type": "string",
                "nullable": true,
                "description": "The UTM parameter used to track keywords"
              },
              "salesforce_uuid": {
                "type": "string",
                "nullable": true,
                "description": "The Salesforce record unique identifier"
              }
            },
            "required": [
              "utm_campaign",
              "utm_source",
              "utm_medium",
              "utm_content",
              "utm_term",
              "salesforce_uuid"
            ],
            "x-internal": true
          },
          "text_reminder_number": {
            "type": "string",
            "example": "+1 404-555-1234",
            "description": "The phone number to use when sending text (SMS) reminders",
            "nullable": true
          },
          "rescheduled": {
            "type": "boolean",
            "description": "Indicates if this invitee has rescheduled. If `true`, a reference to the new Invitee instance is provided in the `new_invitee` field."
          },
          "old_invitee": {
            "type": "string",
            "format": "uri",
            "description": "Reference to old Invitee instance that got rescheduled",
            "nullable": true
          },
          "new_invitee": {
            "type": "string",
            "format": "uri",
            "description": "Link to new invitee, after reschedule",
            "nullable": true
          },
          "cancel_url": {
            "type": "string",
            "format": "uri",
            "description": "Link to cancelling the event for the invitee"
          },
          "reschedule_url": {
            "type": "string",
            "format": "uri",
            "description": "Link to rescheduling the event for the invitee"
          },
          "cancellation": {
            "type": "object",
            "description": "Provides data pertaining to the cancellation of the Invitee",
            "properties": {
              "canceled_by": {
                "type": "string",
                "description": "Name of the person whom canceled"
              },
              "reason": {
                "type": "string",
                "description": "Reason that the cancellation occurred",
                "nullable": true
              },
              "canceler_type": {
                "type": "string",
                "enum": [
                  "host",
                  "invitee"
                ]
              }
            },
            "required": [
              "canceled_by",
              "reason",
              "canceler_type"
            ]
          },
          "payment": {
            "description": "Invitee payment",
            "type": "object",
            "required": [
              "external_id",
              "provider",
              "amount",
              "currency",
              "terms",
              "successful"
            ],
            "nullable": true,
            "properties": {
              "external_id": {
                "type": "string",
                "description": "Unique identifier for the payment"
              },
              "provider": {
                "type": "string",
                "description": "Payment provider",
                "enum": [
                  "stripe",
                  "paypal"
                ],
                "example": "stripe"
              },
              "amount": {
                "type": "number",
                "description": "The amount of the payment",
                "format": "float"
              },
              "currency": {
                "type": "string",
                "description": "The currency format that the payment is in.",
                "enum": [
                  "AUD",
                  "CAD",
                  "EUR",
                  "GBP",
                  "USD"
                ]
              },
              "terms": {
                "type": "string",
                "description": "Terms of the payment",
                "example": "sample terms of payment (up to 1,024 characters)",
                "nullable": true
              },
              "successful": {
                "type": "boolean",
                "description": "Indicates whether the payment was successfully processed"
              }
            }
          },
          "no_show": {
            "description": "Provides data pertaining to the associated no show for the Invitee",
            "required": [
              "uri",
              "created_at"
            ],
            "type": "object",
            "nullable": true,
            "properties": {
              "uri": {
                "type": "string",
                "description": "Canonical reference (unique identifier) for the no show"
              },
              "created_at": {
                "type": "string",
                "example": "2019-01-02T03:04:05.678Z",
                "format": "date-time",
                "description": "The moment when the no show was created"
              }
            }
          }
        },
        "required": [
          "uri",
          "email",
          "first_name",
          "last_name",
          "name",
          "status",
          "questions_and_answers",
          "timezone",
          "event",
          "created_at",
          "updated_at",
          "tracking",
          "text_reminder_number",
          "rescheduled",
          "old_invitee",
          "new_invitee",
          "cancel_url",
          "reschedule_url",
          "payment",
          "no_show"
        ]
      },
      "Guest": {
        "x-tags": [
          "Scheduled Events"
        ],
        "title": "Guest",
        "type": "object",
        "description": "An individual whom an invitee has invited to be a guest attendee to an event",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "email",
          "created_at",
          "updated_at"
        ],
        "x-examples": {
          "Example": {
            "email": "user@example.com",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        }
      },
      "Organization": {
        "x-tags": [
          "Organizations"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical resource reference",
            "example": "https://api.calendly.com/organizations/012345678901234567890"
          }
        }
      },
      "OrganizationMembership": {
        "x-tags": [
          "Organizations"
        ],
        "type": "object",
        "title": "Organization Membership",
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "Canonical reference (unique identifier) for the membership",
            "example": "https://api.calendly.com/organization_memberships/AAAAAAAAAAAAAAAA"
          },
          "role": {
            "type": "string",
            "description": "The user's role in the organization",
            "enum": [
              "user",
              "admin",
              "owner"
            ],
            "example": "admin"
          },
          "user": {
            "type": "object",
            "description": "Information about the user.",
            "required": [
              "uri",
              "name",
              "slug",
              "email",
              "scheduling_url",
              "timezone",
              "avatar_url",
              "created_at",
              "updated_at"
            ],
            "properties": {
              "uri": {
                "type": "string",
                "format": "uri",
                "description": "Canonical reference (unique identifier) for the user",
                "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
              },
              "name": {
                "type": "string",
                "description": "The user's name (human-readable format)",
                "example": "John Doe"
              },
              "slug": {
                "type": "string",
                "description": "The portion of URL for the user's scheduling page (where invitees book sessions), rendered in a human-readable format",
                "example": "acmesales"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "The user's email address",
                "example": "test@example.com"
              },
              "scheduling_url": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the user's Calendly landing page (that lists all the user's event types)",
                "example": "https://calendly.com/acmesales"
              },
              "timezone": {
                "type": "string",
                "example": "America/New York",
                "description": "The time zone to use when presenting time to the user"
              },
              "avatar_url": {
                "type": "string",
                "nullable": true,
                "format": "uri",
                "description": "The URL of the user's avatar (image)",
                "example": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2019-01-02T03:04:05.678Z",
                "description": "The moment when the user's record was created (e.g. \"2020-01-02T03:04:05.678Z\")"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2019-08-07T06:05:04.321Z",
                "description": "The moment when the user's record was last updated (e.g. \"2020-01-02T03:04:05.678Z\")"
              }
            }
          },
          "organization": {
            "type": "string",
            "format": "uri",
            "description": "A unique reference to the organization",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321Z",
            "description": "The moment when the membership record was last updated (e.g. \"2020-01-02T03:04:05.678Z\")"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678Z",
            "description": "The moment when the membership record was created (e.g. \"2020-01-02T03:04:05.678Z\")"
          }
        },
        "required": [
          "uri",
          "role",
          "user",
          "organization",
          "updated_at",
          "created_at"
        ],
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/organization_memberships/AAAAAAAAAAAAAAAA",
            "role": "admin",
            "user": {
              "uri": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
              "name": "John Doe",
              "slug": "acmesales",
              "email": "test@example.com",
              "scheduling_url": "https://calendly.com/acmesales",
              "timezone": "America/New York",
              "avatar_url": "https://01234567890.cloudfront.net/uploads/user/avatar/0123456/a1b2c3d4.png",
              "created_at": "2019-01-02T03:04:05.678Z",
              "updated_at": "2019-08-07T06:05:04.321Z"
            },
            "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
            "updated_at": "2019-08-07T06:05:04.321Z",
            "created_at": "2019-01-02T03:04:05.678Z"
          }
        }
      },
      "OrganizationInvitation": {
        "title": "Organization Invitation",
        "type": "object",
        "x-tags": [
          "Organizations"
        ],
        "description": "Organization Invitation object",
        "properties": {
          "uri": {
            "type": "string",
            "description": "Canonical reference (unique identifier) for the organization invitation",
            "format": "uri",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA/invitations/BBBBBBBBBBBBBBBB"
          },
          "organization": {
            "type": "string",
            "description": "Canonical reference (unique identifier) for the organization",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          },
          "email": {
            "type": "string",
            "description": "The email address of the person who was invited to join the organization",
            "format": "email",
            "example": "test@example.com"
          },
          "status": {
            "type": "string",
            "description": "The status of the invitation (\"pending\", \"accepted\", or \"declined\")",
            "enum": [
              "pending",
              "accepted",
              "declined"
            ],
            "example": "accepted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-08-07T06:05:04.321Z",
            "description": "The moment the invitation was created (e.g. â€œ2020-01-02T03:04:05.678Z\")"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678Z",
            "description": "The moment the invitation was last updated (e.g. \"2020-01-02T03:04:05.678Z\")"
          },
          "last_sent_at": {
            "type": "string",
            "nullable": true,
            "description": "The moment the invitation was last sent (e.g. \"2020-01-02T03:04:05.678Z\")",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678Z"
          },
          "user": {
            "type": "string",
            "format": "uri",
            "description": "When the invitation is accepted, a reference to the user who accepted the invitation",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        },
        "required": [
          "uri",
          "organization",
          "email",
          "status",
          "created_at",
          "updated_at",
          "last_sent_at"
        ],
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA/invitations/BBBBBBBBBBBBBBBB",
            "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
            "email": "test@example.com",
            "status": "accepted",
            "created_at": "2019-08-07T06:05:04.321Z",
            "updated_at": "2019-01-02T03:04:05.678Z",
            "last_sent_at": "2019-01-02T03:04:05.678Z",
            "user": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        }
      },
      "WebhookPayload": {
        "x-tags": [
          "Webhooks"
        ],
        "title": "Webhook Payload",
        "type": "object",
        "description": "Webhook Payload Object",
        "properties": {
          "event": {
            "type": "string",
            "enum": [
              "invitee.created",
              "invitee.canceled"
            ],
            "description": "The event that caused the webhook to fire"
          },
          "created_at": {
            "type": "string",
            "description": "The moment when the event was created (e.g. \"2020-01-02T03:04:05.678Z\")",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "description": "The user who created the webhook",
            "format": "uri",
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          },
          "payload": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Invitee"
              }
            ],
            "description": "The payload for the webhook event. The data in the payload depends on the event.\n\nFor example, an `invitee.*` event produces an `Invitee` object in the payload."
          }
        },
        "required": [
          "event",
          "created_at",
          "created_by",
          "payload"
        ],
        "x-examples": {
          "Invitee Created": {
            "created_at": "2020-11-23T17:51:19.000000Z",
            "created_by": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "event": "invitee.created",
            "payload": {
              "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
              "created_at": "2020-11-23T17:51:18.327602Z",
              "email": "test@example.com",
              "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
              "name": "John Doe",
              "new_invitee": null,
              "old_invitee": null,
              "questions_and_answers": [],
              "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
              "rescheduled": false,
              "status": "active",
              "text_reminder_number": null,
              "timezone": "America/New_York",
              "tracking": {
                "utm_campaign": null,
                "utm_source": null,
                "utm_medium": null,
                "utm_content": null,
                "utm_term": null,
                "salesforce_uuid": null
              },
              "updated_at": "2020-11-23T17:51:18.341657Z",
              "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
              "canceled": false
            }
          },
          "Invitee Canceled": {
            "created_at": "2020-11-23T17:54:22.000000Z",
            "created_by": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "event": "invitee.canceled",
            "payload": {
              "cancel_url": "https://calendly.com/cancellations/AAAAAAAAAAAAAAAA",
              "created_at": "2020-11-23T17:51:18.327602Z",
              "email": "test@example.com",
              "event": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA",
              "name": "John Doe",
              "new_invitee": null,
              "old_invitee": null,
              "questions_and_answers": [],
              "reschedule_url": "https://calendly.com/reschedulings/AAAAAAAAAAAAAAAA",
              "rescheduled": false,
              "status": "canceled",
              "text_reminder_number": null,
              "timezone": "America/New_York",
              "tracking": {
                "utm_campaign": null,
                "utm_source": null,
                "utm_medium": null,
                "utm_content": null,
                "utm_term": null,
                "salesforce_uuid": null
              },
              "updated_at": "2020-11-23T17:54:22.356897Z",
              "uri": "https://api.calendly.com/scheduled_events/AAAAAAAAAAAAAAAA/invitees/AAAAAAAAAAAAAAAA",
              "canceled": true,
              "cancellation": {
                "canceled_by": "John Doe",
                "reason": "Meeting Conflict"
              }
            }
          }
        }
      },
      "WebhookSubscription": {
        "x-tags": [
          "Webhooks"
        ],
        "title": "Webhook Subscription",
        "type": "object",
        "description": "Webhook Subscription Object",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/webhook_subscriptions/AAAAAAAAAAAAAAAA",
            "callback_url": "https://blah.foo/bar",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "retry_started_at": "2019-08-24T14:15:22Z",
            "state": "active",
            "events": [
              "invitee.created"
            ],
            "scope": "user",
            "organization": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA",
            "user": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA",
            "creator": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        },
        "properties": {
          "uri": {
            "type": "string",
            "description": "Canonical reference (unique identifier) for the webhook",
            "format": "uri",
            "example": "https://api.calendly.com/webhook_subscriptions/AAAAAAAAAAAAAAAA"
          },
          "callback_url": {
            "type": "string",
            "description": "The callback URL to use when the event is triggered",
            "format": "uri",
            "example": "https://blah.foo/bar"
          },
          "created_at": {
            "type": "string",
            "description": "The moment when the webhook subscription was created (e.g. \"2020-01-02T03:04:05.678Z\")",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The moment when the webhook subscription was last updated (e.g. \"2020-01-02T03:04:05.678Z\")",
            "format": "date-time"
          },
          "retry_started_at": {
            "type": "string",
            "description": "The date and time the webhook subscription is retried",
            "format": "date-time",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Indicates if the webhook subscription is \"active\" or \"disabled\"",
            "enum": [
              "active",
              "disabled"
            ]
          },
          "events": {
            "type": "array",
            "description": "A list of events to which the webhook is subscribed",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "invitee.created",
                "invitee.canceled"
              ]
            }
          },
          "scope": {
            "type": "string",
            "enum": [
              "user",
              "organization"
            ],
            "description": "The scope of the webhook subscription",
            "example": "user"
          },
          "organization": {
            "type": "string",
            "description": "The URI of the organization that's associated with the webhook subscription",
            "format": "uri",
            "example": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
          },
          "user": {
            "type": "string",
            "description": "The URI of the user that's associated with the webhook subscription",
            "format": "uri",
            "nullable": true,
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          },
          "creator": {
            "type": "string",
            "format": "uri",
            "description": "The URI of the user who created the webhook subscription",
            "nullable": true,
            "example": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
          }
        },
        "required": [
          "uri",
          "callback_url",
          "created_at",
          "updated_at",
          "retry_started_at",
          "state",
          "events",
          "scope",
          "organization",
          "user",
          "creator"
        ]
      },
      "InviteeNoShow": {
        "title": "InviteeNoShow",
        "type": "object",
        "description": "Information about an invitees no show.",
        "x-examples": {
          "Example": {
            "uri": "https://api.calendly.com/no_shows/40a3cb54-e45c-4f34-b100-bd346220a5bb",
            "invitee": "https://api.calendly.com/scheduled_events/GBGBDCAADAEDCRZ2/invitees/7c1dbe46-bd84-42e2-9b97-05e2fb379bfe",
            "created_at": "2019-01-02T03:04:05.678Z"
          }
        },
        "x-tags": [
          "Scheduled Events"
        ],
        "x-internal": false,
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/invitee_no_shows/6ee96ed4-83a3-4966-a278-cd19b3c02e09",
            "description": "Canonical reference (unique identifier) for the no show"
          },
          "invitee": {
            "type": "string",
            "format": "uri",
            "example": "https://api.calendly.com/scheduled_events/e7cb69b9-8f2a-4008-99b5-22ddbc02a2bc/invitees/e5fdc32a-e2e3-4bcf-82d3-ecf098280aaa",
            "description": "Canonical reference (unique identifier) for the associated Invitee"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-01-02T03:04:05.678Z",
            "description": "The moment when the no show was created"
          }
        },
        "required": [
          "uri",
          "invitee",
          "created_at"
        ]
      }
    },
    "responses": {
      "INVALID_ARGUMENT": {
        "description": "Request is not valid",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": [
                        "Invalid Argument"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "The supplied parameters are invalid."
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "UNAUTHENTICATED": {
        "description": "Cannot authenticate caller",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": [
                        "Unauthenticated"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "The access token is invalid",
                        "The access token expired",
                        "The access token was revoked"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "PERMISSION_DENIED": {
        "description": "Caller not authorized to perform this action",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": [
                        "Permission Denied"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "This user is not in your organization",
                        "You do not have permission",
                        "You do not have permission to access this resource.",
                        "You are not allowed to view this event",
                        "Please upgrade your Calendly account to Professional",
                        "Please also specify organization when requesting events for a user within your organization.",
                        "Unauthorized",
                        "You cannot perform this action for an organization with SCIM enabled."
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "NOT_FOUND": {
        "description": "Requested resource not found",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": [
                        "Resource Not Found"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "The server could not find the requested resource."
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "example-1": {
                "value": {
                  "title": "Resource Not Found",
                  "message": "The server could not find the requested resource.",
                  "details": [
                    {
                      "parameter": "string",
                      "message": "string"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "UNKNOWN": {
        "description": "An error has occurred on the server",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": [
                        "Internal Server Error"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "The server encountered an unexpected condition that prevented it from fulfilling the request."
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "ALREADY_EXISTS": {
        "description": "Attempt to create a resource that already exists",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/paths/~1scheduled_events~1{event_uuid}~1invitees~1{invitee_uuid}/get/responses/403/content/application~1json/schema"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "enum": [
                        "Already Exists"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "The resource already exists"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "Count": {
        "name": "count",
        "description": "The number of rows to return",
        "in": "query",
        "schema": {
          "type": "number",
          "default": 20,
          "minimum": 1,
          "maximum": 100
        }
      },
      "PageToken": {
        "name": "page_token",
        "description": "The token to pass to get the next portion of the collection",
        "in": "query",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ]
}