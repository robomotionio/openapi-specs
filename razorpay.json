{
  "openapi": "3.0.0",
  "info": {
    "title": "Razorpay APIs",
    "description": "Razorpay is an Indian payments solution provider that allows businesses to accept, process and disburse payments with its product suite. Razorpay APIs are completely RESTful and all our responses are returned in JSON.\n\n\n# API Authentication\n\nAll Razorpay APIs are authenticated using **Basic Auth**. Basic auth requires the following:\n\n- [YOUR_KEY_ID]\n- [YOUR_KEY_SECRET]\n\nBasic auth expects an Authorization header for each request in the Basic base64token format. Here, base64token is a base64 encoded string of YOUR_KEY_ID:YOUR_KEY_SECRET.\n\n<table>\n<b>Watch Out!</b> <br>\nThe Authorization header value should strictly adhere to the format mentioned above. Invalid formats will result in authentication failures. Few examples of invalid headers are:\n\n- BASIC base64token\n- basic base64token\n- Basic \"base64token\"\n- Basic $base64token\n</table>\n\n# Generate API Key\n\nYou can use Razorpay APIs in two modes, Test and Live. The API key is different for each mode.\n\nTo generate the API keys:\n1. Log into the <a href=\"https://dashboard.razorpay.com/app/dashboard\" target=\"_blank\">Razorpay Dashboard</a>.\n2. Select the mode (Test or Live) for which you want to generate the API key.\n<br>- Test Mode: The test mode is a simulation mode that you can use to test your integration flow. Your customers will not be able to make payments in this mode.\n<br>- Live Mode: When your integration is complete, in the Dashboard, switch to the live mode and generate live mode API keys. Replace test mode keys with live mode keys in the integration to accept payments from customers.\n3. Navigate to Settings → API Keys → Generate Key to generate key for the selected mode.\n\n# Errors\nAll successful responses are returned with HTTP Status code 204. In case of failure, API returns a JSON error response with the parameters that contain the failure reason.\n\n# Understanding Error Response\n\nThe error response contains `code`, `description`, `field`, `source`, `step`, and `reason` parameters to understand and troubleshoot the error.\n\nLet us take an example where a merchant tries to add new allowed payer accounts when the overall limit is exceeded.\n\n```json: Sample Error Response\n{\n  \"error\": {\n    \"code\": \"BAD_REQUEST_ERROR\",\n    \"description\": \"Authentication failed due to incorrect otp\",\n    \"field\": null,\n    \"source\": \"customer\",\n    \"step\": \"payment_authentication\",\n    \"reason\": \"invalid_otp\",\n    \"metadata\": {\n      \"payment_id\": \"pay_EDNBKIP31Y4jl8\",\n      \"order_id\": \"order_DBJKIP31Y4jl8\"\n    }\n  }\n}\n```\n\n### Response Parameters\n\n`error`\n: `object` The error object.\n\n`code`\n: `string` Type of the error.\n\n`description`\n: `string` Description of the error.\n\n`field`\n: `string` Name of the parameter in the API request that caused the error.\n\n`source`\n: `string` The point of failure in the specific operation (payment in this case). For example, customer, business\n\n`step`\n: `string` The stage where the transaction failure occurred. The stages can vary depending on the payment method used to complete the transaction.\n\n`reason`\n: `string` The exact error reason. It can be handled programmatically.\n\n`metadata`\n: `object` Contains additional information about the request.\n\n    `payment_id`\n    : `string` Unique identifier of the payment.\n\n    `order_id`\n    : `string` Unique identifier of the order associated with the payment.\n\nKnow more about <a href=\"/docs/errors/error-codes\" target=\"_blank\">Error Codes</a>.",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.razorpay.com",
      "variables": {}
    },
    {
      "url": "http:",
      "variables": {}
    }
  ],
  "paths": {
    "/v1/customers": {
      "post": {
        "tags": [
          "Customers APIs"
        ],
        "summary": "Create a Customer",
        "description": "Create a customer using the Create a Customer API. You can add your customer's name, email and contact number. In the response, you will receive a customer_id.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/customers/#create-a-customer\" target=\"_blank\">Create a Customer API</a>.",
        "operationId": "CreateaCustomer",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaCustomerRequest"
              },
              "example": {
                "name": "Gaurav Kumar",
                "email": "gaurav.kumar@example.com",
                "contact": "9123456780",
                "fail_existing": "1",
                "gstin": "12ABCDE2356F7GH",
                "notes": {
                  "notes_key_1": "Tea, Earl Grey, Hot",
                  "notes_key_2": "Tea, Earl Grey… decaf."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Customers APIs"
        ],
        "summary": "Fetch all Customers",
        "description": "Retrieve details of all customers using the Fetch all Customers API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/customers/#fetch-all-customers\" target=\"_blank\">Fetch all Customers API</a>.",
        "operationId": "FetchallCustomers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/customers/{cust_id}": {
      "get": {
        "tags": [
          "Customers APIs"
        ],
        "summary": "Fetch Customer by ID",
        "description": "Retrieve details of a specific customer using the Fetch a Customer by ID API. You can send the customer_id as a path parameter to retrieve the customer details.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/customers/#fetch-customer-by-id\" target=\"_blank\">Fetch a Customer by ID API</a>.",
        "operationId": "FetchCustomerbyID",
        "parameters": [
          {
            "name": "cust_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Customers APIs"
        ],
        "summary": "Edit a Customer",
        "description": "Update details of a specific customer using the Edit a Customer API. You can send the customer_id as a path parameter to access and edit the customer details.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/customers/#edit-customer-details\" target=\"_blank\">Edit a Customer API</a>.",
        "operationId": "EditaCustomer",
        "parameters": [
          {
            "name": "cust_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditaCustomerRequest"
              },
              "example": {
                "name": "Saurav Kumar",
                "email": "saurav.kumar@example.com",
                "contact": "9876543210"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/orders": {
      "post": {
        "tags": [
          "Orders APIs"
        ],
        "summary": "Create an Order",
        "description": "Create an order using this API. Amount and currency are mandatory parameters.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/orders/#create-an-order\" target=\"_blank\">Create an Order API</a>.",
        "operationId": "CreateanOrder",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateanOrderRequest"
              },
              "example": {
                "amount": 1000000,
                "currency": "INR",
                "receipt": "Receipt no. 1",
                "notes": {
                  "notes_key_1": "Tea, Earl Grey, Hot",
                  "notes_key_2": "Tea, Earl Grey… decaf."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Orders APIs"
        ],
        "summary": "Fetch Orders",
        "description": "Fetch all orders created on your account using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/orders/#fetch-orders\" target=\"_blank\">Fetch all Orders API</a>.",
        "operationId": "FetchOrders",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/orders/{order_id}": {
      "get": {
        "tags": [
          "Orders APIs"
        ],
        "summary": "Fetch Orders by ID",
        "description": "Fetch a particular order with the order_id using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/orders/#fetch-an-order-with-id\" target=\"_blank\">Fetch Orders by ID API</a>.",
        "operationId": "FetchOrdersbyID",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Orders APIs"
        ],
        "summary": "Update Order",
        "description": "Update a particular order using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/orders/#update-order\" target=\"_blank\">Update an Order API</a>.",
        "operationId": "UpdateOrder",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              },
              "example": {
                "notes": {
                  "notes_key_1": "Beam me up Scotty",
                  "notes_key_2": "Engage"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/orders/{order_id}/payments": {
      "get": {
        "tags": [
          "Orders APIs"
        ],
        "summary": "Fetch Payments by Order",
        "description": "Fetch payments made for a particular order using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/orders/#fetch-an-order-with-id\" target=\"_blank\">Fetch Payments For an Orders API</a>.",
        "operationId": "FetchPaymentsbyOrder",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/downtimes": {
      "get": {
        "tags": [
          "Payment Downtime API"
        ],
        "summary": "Fetch Payment Downtime Details",
        "description": "Fetch details of all payment downtimes using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/payments/downtime/#fetch-payment-downtime-details\" target=\"_blank\">Fetch Payment Downtime Details API</a>",
        "operationId": "FetchPaymentDowntimeDetails",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/downtimes/down_F1cxDoHWD4fkQt": {
      "get": {
        "tags": [
          "Payment Downtime API"
        ],
        "summary": "Fetch Payment Downtime Details by ID",
        "description": "Fetch details of particular payment downtime using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/payments/downtime/#fetch-payment-downtime-details-by-id\" target=\"_blank\">Fetch Payment Downtime Details by ID API</a>",
        "operationId": "FetchPaymentDowntimeDetailsbyID",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments": {
      "get": {
        "tags": [
          "Payments APIs"
        ],
        "summary": "Fetch all Payments",
        "description": "Fetch all payments made to your account using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/payments/#fetch-multiple-payments\" target=\"_blank\">Fetch all Payments API</a>.",
        "operationId": "FetchallPayments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/{pay_id}": {
      "get": {
        "tags": [
          "Payments APIs"
        ],
        "summary": "Fetch Payment by ID",
        "description": "Fetch the details of a particular payment using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/payments/#fetch-a-payment\" target=\"_blank\">Fetch a Payment by ID API</a>.",
        "operationId": "FetchPaymentbyID",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Payments APIs"
        ],
        "summary": "Update Payment",
        "description": "Update the details of a specific payment using the API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/payments/#update-the-payment\" target=\"_blank\">Update a Payment API</a>.",
        "operationId": "UpdatePayment",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              },
              "example": {
                "note": {
                  "notes_key_1": "Beam me up Scotty",
                  "notes_key_2": "Engage"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/{pay_id}/card": {
      "get": {
        "tags": [
          "Payments APIs"
        ],
        "summary": "Fetch Card Details for a Payment",
        "description": "Fetch the details of the card used to make a payment using the API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/payments/#fetch-card-details-of-a-payment\" target=\"_blank\">Fetch Card Details of a Payment API</a>.",
        "operationId": "FetchCardDetailsforaPayment",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/{pay_id}/capture": {
      "post": {
        "tags": [
          "Payments APIs"
        ],
        "summary": "Capture a Payment",
        "description": "Change the status of payment from `authorized` to `captured` using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/payments/#capture-a-payment\" target=\"_blank\">Capture a Payment API</a>.",
        "operationId": "CaptureaPayment",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CaptureaPaymentRequest"
              },
              "example": {
                "amount": 1000,
                "currency": "INR"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/{pay_id}/refund": {
      "post": {
        "tags": [
          "Refunds APIs"
        ],
        "summary": "Create a Normal Refund",
        "description": "Create a normal refund using this API. You can refund the entire amount or a partial amount. For example, for payment of INR100, you can refund the entire INR100 or INR50. \n\nKnow more about the <a href=\"https://razorpay.com/docs/api/refunds/#create-a-normal-refund\" target=\"_blank\">Create a Normal Refund API.</a>",
        "operationId": "CreateaNormalRefund",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaNormalRefundRequest"
              },
              "example": {
                "amount": 10000
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/refunds": {
      "get": {
        "tags": [
          "Refunds APIs"
        ],
        "summary": "Fetch Refunds",
        "description": "Fetch all refunds created by you using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/refunds/#fetch-all-refunds\" target=\"_blank\">Fetch all Refunds API.</a>",
        "operationId": "FetchRefunds",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/refunds/{rfnd_id}": {
      "get": {
        "tags": [
          "Refunds APIs"
        ],
        "summary": "Fetch Refund by ID",
        "description": "Fetch a specific refund created by you using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/refunds/#fetch-refund-by-id\" target=\"_blank\">Fetch a Refund API.</a>",
        "operationId": "FetchRefundbyID",
        "parameters": [
          {
            "name": "rfnd_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Refunds APIs"
        ],
        "summary": "Update Refund",
        "description": "Update a specific refund using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/refunds/#update-refund\" target=\"_blank\">Update a Refund API</a>.",
        "operationId": "UpdateRefund",
        "parameters": [
          {
            "name": "rfnd_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRefundRequest"
              },
              "example": {
                "notes": {
                  "notes_key_1": "Beam me up Scotty.",
                  "notes_key_2": "Engage"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/{pay_id}/refunds/{rfnd_id}": {
      "get": {
        "tags": [
          "Refunds APIs"
        ],
        "summary": "Fetch a Specific Refund for a Payment",
        "description": "Fetch a specific refund for a specific payment using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/refunds/#fetch-a-specific-refund-for-a-payment\" target=\"_blank\">Fetch a Specific Refund for a Specific Payment API.</a>",
        "operationId": "FetchaSpecificRefundforaPayment",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rfnd_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/{pay_id}/refunds": {
      "get": {
        "tags": [
          "Refunds APIs"
        ],
        "summary": "Fetch All Refunds for a Payment",
        "description": "Fetch multiple refunds for a specific payment using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/refunds/#fetch-multiple-refunds-for-a-payment\" target=\"_blank\">Fetch all Refunds for a Payment API</a>.",
        "operationId": "FetchAllRefundsforaPayment",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/settlements/ondemand": {
      "post": {
        "tags": [
          "Instant Settlements"
        ],
        "summary": "Create Instant Settlement",
        "description": "Create an on-demand settlement using this API. Here, `amount` is a mandatory parameter.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/settlements/#create-an-on-demand-settlement\" target=\"_blank\">Create an On-demand Settlement API</a>.",
        "operationId": "CreateInstantSettlement",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstantSettlementRequest"
              },
              "example": {
                "amount": 50000,
                "max_balance": 0,
                "description": "Need this to make vendor payouts",
                "notes": {
                  "notes_key_1": "Tea, Earl Grey, Hot",
                  "notes_key_2": "Tea, Earl Grey… decaf."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Instant Settlements"
        ],
        "summary": "Fetch all Instant Settlements",
        "description": "Fetch all on-demand settlements created by you using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/settlements/#fetch-all-on-demand-settlements\" target=\"_blank\">Fetch all On-demand Settlements API</a>.",
        "operationId": "FetchallInstantSettlements",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/settlements/ondemand/{sod_id}": {
      "get": {
        "tags": [
          "Instant Settlements"
        ],
        "summary": "Fetch Instant Settlement by ID",
        "description": "Fetch a specific on-demand settlement created by you using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/settlements/#fetch-on-demand-settlements-by-id\" target=\"_blank\">Fetch On-demand Settlements by ID API</a>.",
        "operationId": "FetchInstantSettlementbyID",
        "parameters": [
          {
            "name": "sod_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/settlements/recon/combined": {
      "get": {
        "tags": [
          "Settlements APIs"
        ],
        "summary": "Settlements Recon",
        "description": "Fetch a list of all transactions such as payments, refunds, transfers and adjustments that have been settled to you for a particular day or month, using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/settlements/#settlement-recon\" target=\"_blank\">Settlement Recon API</a>.",
        "operationId": "SettlementsRecon",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2019
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "09"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/settlements/{setl_id}": {
      "get": {
        "tags": [
          "Settlements APIs"
        ],
        "summary": "Fetch Settlement by ID",
        "description": "Fetch details of a particular settlement using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/settlements/#fetch-settlement-using-id\" target=\"_blank\">Fetch Settlement by ID API</a>.",
        "operationId": "FetchSettlementbyID",
        "parameters": [
          {
            "name": "setl_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/settlements": {
      "get": {
        "tags": [
          "Settlements APIs"
        ],
        "summary": "Fetch All Settlements",
        "description": "Fetch details of all settlements using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/settlements/#fetch-all-settlements\" target=\"_blank\">Fetch All Settlements API</a>.",
        "operationId": "FetchAllSettlements",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/disputes": {
      "get": {
        "tags": [
          "Disputes APIs"
        ],
        "summary": "Fetch All Disputes",
        "description": "Fetch the list of all disputes using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/disputes/#fetch-all-disputes\" target=\"_blank\">Fetch All Disputes API</a>.",
        "operationId": "FetchAllDisputes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/invoices": {
      "post": {
        "tags": [
          "Invoices APIs"
        ],
        "summary": "Create an Invoice",
        "description": "Create an Invoice using the Create an Invoice API.\n\nSome points to note. You can:\n- Create a blank invoice (with no details at all) in draft state.\n- Update it with necessary information.\n- Issue it at a later time with the Issue Invoice API. Only after the invoice is issued, you will get a short URL. Also, only after the invoice is issued, it can be sent to customers and the corresponding payment can be made against it.\n- Use <a href=\"https://razorpay.com/docs/api/items/\" target=\"_blank\">Items APIs</a> to create items which you can later use as a template to create line items in an invoice.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/invoices/#create-an-invoice\" target=\"_blank\">Create an Invoice API</a>.",
        "operationId": "CreateanInvoice",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateanInvoiceRequest"
              },
              "example": {
                "type": "invoice",
                "description": "Domestic invoice for Gaurav Kumar.",
                "partial_payment": true,
                "customer": {
                  "name": "Gaurav Kumar",
                  "contact": "9876543210",
                  "email": "gaurav.kumar@example.com",
                  "billing_address": {
                    "line1": "Ground FLoor, Millennium Tower, 1st Avenue",
                    "line2": "1st Avenue",
                    "zipcode": "560001",
                    "city": "Bangalore",
                    "state": "Karnataka",
                    "country": "India"
                  },
                  "shipping_address": {
                    "line1": "3rd FLoor, Nakamura Tower, Bomaye Boulevard",
                    "line2": "Baker Street",
                    "zipcode": "560001",
                    "city": "Bangalore",
                    "state": "Karnataka",
                    "country": "in"
                  }
                },
                "line_items": [
                  {
                    "name": "Crate of sea weed",
                    "description": "Crate of sea weed.",
                    "amount": 20000,
                    "currency": "INR",
                    "quantity": 1
                  },
                  {
                    "item_id": "{item_id}"
                  }
                ],
                "sms_notify": 1,
                "email_notify": 1,
                "draft": "1",
                "date": 1588076279,
                "expire_by": 1924991999,
                "receipt": "Receipt No. 1",
                "comment": "Fresh sea weed mowed this morning",
                "terms": "No Returns; No Refunds",
                "notes": {
                  "notes_key_1": "Tea, Earl Grey, Hot",
                  "notes_key_2": "Tea, Earl Grey… decaf."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Invoices APIs"
        ],
        "summary": "Fetch Invoices",
        "description": "Fetch all invoices created by you using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/invoices/#fetch-multiple-invoices\" target=\"_blank\">Fetch all Invoices API</a>.",
        "operationId": "FetchInvoices",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "invoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/invoices/{inv_id}": {
      "get": {
        "tags": [
          "Invoices APIs"
        ],
        "summary": "Fetch Invoice by Id",
        "description": "Fetch an invoice created by you using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/invoices/#fetch-an-invoice\" target=\"_blank\">Fetch an Invoice API</a>.",
        "operationId": "FetchInvoicebyId",
        "parameters": [
          {
            "name": "inv_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Invoices APIs"
        ],
        "summary": "Update an Invoice",
        "description": "Update an invoice using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/invoices/#update-an-invoice\" target=\"_blank\">Update an Invoice API</a>.",
        "operationId": "UpdateanInvoice",
        "parameters": [
          {
            "name": "inv_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateanInvoiceRequest"
              },
              "example": {
                "partial_payment": true,
                "customer": {
                  "name": "Saurav Kumar",
                  "contact": "9123456789",
                  "email": "saurav.kumar@example.com"
                },
                "line_items": [
                  {
                    "name": "Crate of Red Herbs",
                    "description": "Red Herbs from Resident Evil",
                    "amount": 50000,
                    "currency": "INR",
                    "quantity": 5
                  },
                  {
                    "item_id": "{item_id}"
                  }
                ],
                "sms_notify": 1,
                "email_notify": 1,
                "draft": "1",
                "date": 1588076279,
                "expire_by": 1924991999,
                "receipt": "Receipt No. 1",
                "comment": "Fresh herbs mowed this morning",
                "terms": "No Returns; No Refunds",
                "notes": {
                  "notes_key_1": "Beam me up Scotty.",
                  "notes_key_2": "Engage"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Invoices APIs"
        ],
        "summary": "Delete an Invoice",
        "description": "Delete an invoice using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/invoices/#delete-an-invoice\" target=\"_blank\">Delete an Invoice API</a>.",
        "operationId": "DeleteanInvoice",
        "parameters": [
          {
            "name": "inv_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/invoices/{inv_id}/issue": {
      "post": {
        "tags": [
          "Invoices APIs"
        ],
        "summary": "Issue an Invoice",
        "description": "Issue an invoice using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/invoices/#issue-an-invoice\" target=\"_blank\">Issue an Invoice API</a>.",
        "operationId": "IssueanInvoice",
        "parameters": [
          {
            "name": "inv_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/invoices/{inv_id}/notify_by/{medium}": {
      "post": {
        "tags": [
          "Invoices APIs"
        ],
        "summary": "Send or Resend Notification",
        "description": "Send or resend an invoice notification using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/invoices/#send-notifications\" target=\"_blank\">Send/Resend a Notification API</a>.",
        "operationId": "SendorResendNotification",
        "parameters": [
          {
            "name": "inv_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "medium",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/invoices/{inv_id}/cancel": {
      "post": {
        "tags": [
          "Invoices APIs"
        ],
        "summary": "Cancel an Invoice",
        "description": "Cancel an invoice using this API.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/invoices/#cancel-an-invoice\" target=\"_blank\">Cancel an Invoice API</a>.",
        "operationId": "CancelanInvoice",
        "parameters": [
          {
            "name": "inv_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/plans": {
      "post": {
        "tags": [
          "Step 1 - Plans"
        ],
        "summary": "Create Plan",
        "description": "You must create a plan before creating a subscription via the Checkout or using the Subscription Link feature.\n\nKnow more about the <a href=\"https://razorpay.com/docs/api/subscriptions/#create-a-plan\" target=\"_blank\">Create a Plan</a> API.",
        "operationId": "CreatePlan",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanRequest"
              },
              "example": {
                "period": "weekly",
                "interval": 1,
                "item": {
                  "name": "Test plan - Weekly",
                  "amount": 69900,
                  "currency": "INR",
                  "description": "Description for the test plan - Weekly"
                },
                "notes": {
                  "notes_key_1": "Tea, Earl Grey, Hot",
                  "notes_key_2": "Tea, Earl Grey… decaf."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Step 1 - Plans"
        ],
        "summary": "Fetch All Plans",
        "description": "You can fetch all the plans created by you.\nKnow more about the <a href=\"https://razorpay.com/docs/api/subscriptions/#fetch-all-plans\" target=\"_blank\">Fetch all Plans</a> API.",
        "operationId": "FetchAllPlans",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/plans/{plan_id}": {
      "get": {
        "tags": [
          "Step 1 - Plans"
        ],
        "summary": "Fetch Plans by ID",
        "description": "You can fetch a particular plan using its ID.\nKnow more about the <a href=\"https://razorpay.com/docs/api/subscriptions/#fetch-a-plan-by-id\" target=\"_blank\">Fetch a Plan</a> API.",
        "operationId": "FetchPlansbyID",
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/subscriptions": {
      "post": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Create Subscription",
        "description": "You can create a subscription using the a <a href=\"https://razorpay.com/docs/api/subscriptions/#create-a-subscription\" target=\"_blank\">Create a Subscription API</a>.",
        "operationId": "CreateSubscription",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              },
              "example": {
                "plan_id": "{plan_id}",
                "total_count": 6,
                "quantity": 1,
                "start_at": 1735689600,
                "expire_by": 1893456000,
                "customer_notify": 1,
                "addons": [
                  {
                    "item": {
                      "name": "Delivery charges",
                      "amount": 30000,
                      "currency": "INR"
                    }
                  }
                ],
                "offer_id": "{offer_id}",
                "notes": {
                  "notes_key_1": "Tea, Earl Grey, Hot",
                  "notes_key_2": "Tea, Earl Grey… decaf."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Fetch All Subscriptions",
        "description": "You can fetch all the subscriptions created by you using the <a href=\"https://razorpay.com/docs/api/subscriptions/#fetch-all-subscriptions\" target=\"_blank\">Fetch All Subscriptions API</a>.",
        "operationId": "FetchAllSubscriptions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/subscriptions/{sub_id}": {
      "get": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Fetch Subscriptions by ID",
        "description": "You can fetch a specific subscription created by you using the <a href=\"https://razorpay.com/docs/api/subscriptions/#fetch-subscription-by-id\" target=\"_blank\">Fetch a Subscription API</a>.",
        "operationId": "FetchSubscriptionsbyID",
        "parameters": [
          {
            "name": "sub_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Update Subscription",
        "description": "You can update a specific subscription created by you using the <a href=\"https://razorpay.com/docs/api/subscriptions/#update-a-subscription\" target=\"_blank\">Update a Subscription API</a>.",
        "operationId": "UpdateSubscription",
        "parameters": [
          {
            "name": "sub_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequest"
              },
              "example": {
                "plan_id": "{plan_id}",
                "quantity": 3,
                "remaining_count": 6,
                "schedule_change_at": "now",
                "customer_notify": 1,
                "offer_id": "{offer_id}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/subscriptions/{sub_id}/cancel": {
      "post": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Cancel Subscription",
        "description": "You can cancel a specific subscription created by you using the <a href=\"https://razorpay.com/docs/api/subscriptions/#cancel-a-subscription\" target=\"_blank\">Cancel a Subscription API</a>.",
        "operationId": "CancelSubscription",
        "parameters": [
          {
            "name": "sub_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSubscriptionRequest"
              },
              "example": {
                "cancel_at_cycle_end": 0
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/subscriptions/{sub_id}/retrieve_scheduled_changes": {
      "get": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Fetch Details of a Pending Update",
        "description": "You can fetch the details of a pending update using the <a href=\"https://razorpay.com/docs/api/subscriptions/#fetch-details-of-a-pending-update\" target=\"_blank\">Fetch details of a pending update API</a>.",
        "operationId": "FetchDetailsofaPendingUpdate",
        "parameters": [
          {
            "name": "sub_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/subscriptions/{sub_id}/cancel_scheduled_changes": {
      "post": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Cancel Pending Update",
        "description": "You can cancel a pending update using the <a href=\"https://razorpay.com/docs/api/subscriptions/#cancel-an-update\" target=\"_blank\">Cancel a pending update API</a>.",
        "operationId": "CancelPendingUpdate",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "sub_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/subscriptions/{sub_id}/pause": {
      "post": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Pause a Subscription",
        "description": "You can pause a subscription using the <a href=\"https://razorpay.com/docs/api/subscriptions/#pause-a-subscription\" target=\"_blank\">Pause a Subscription API</a>.",
        "operationId": "PauseaSubscription",
        "parameters": [
          {
            "name": "sub_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseaSubscriptionRequest"
              },
              "example": {
                "pause_at": "now"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/subscriptions/{sub_id}/resume": {
      "post": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Resume a Subscription",
        "description": "You can resume a paused subscription using the <a href=\"https://razorpay.com/docs/api/subscriptions/#resume-a-subscription\" target=\"_blank\">Resume a Subscription API</a>.",
        "operationId": "ResumeaSubscription",
        "parameters": [
          {
            "name": "sub_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeaSubscriptionRequest"
              },
              "example": {
                "resume_at": "now"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/subscriptions/{sub_id}/{offer_id}": {
      "delete": {
        "tags": [
          "Step 2 - Subscriptions"
        ],
        "summary": "Delete an Offer Linked to a Subscription",
        "description": "You can delete an offer linked to a subscription using the <a href=\"https://razorpay.com/docs/subscriptions/offers/link-offer-subscription/#delete-an-offer-linked-to-a-subscription\" target=\"_blank\">Delete an offer linked to a Subscription API</a>.",
        "operationId": "DeleteanOfferLinkedtoaSubscription",
        "parameters": [
          {
            "name": "sub_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http:",
            "variables": {}
          }
        ]
      }
    },
    "/v1/subscriptions/{sub_id}/addons": {
      "post": {
        "tags": [
          "Add-ons"
        ],
        "summary": "Create Add-on",
        "description": "You can create an add-on using the <a href=\"https://razorpay.com/docs/api/subscriptions/#create-an-add-on\" target=\"_blank\">Create an Add-on API</a>.",
        "operationId": "CreateAdd-on",
        "parameters": [
          {
            "name": "sub_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdd-onRequest"
              },
              "example": {
                "item": {
                  "name": "Extra appala (papadum)",
                  "amount": 30000,
                  "currency": "INR",
                  "description": "1 extra oil fried appala with meals"
                },
                "quantity": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/addons": {
      "get": {
        "tags": [
          "Add-ons"
        ],
        "summary": "Fetch All Add-ons",
        "description": "You can fetch all add-ons created by you using the <a href=\"https://razorpay.com/docs/api/subscriptions/#fetch-all-add-ons\" target=\"_blank\">Fetch all Add-ons API</a>.",
        "operationId": "FetchAllAdd-ons",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/addons/{ao_id}": {
      "get": {
        "tags": [
          "Add-ons"
        ],
        "summary": "Fetch Add-on by ID",
        "description": "You can fetch a particular add-on created by you using the <a href=\"https://razorpay.com/docs/api/subscriptions/#fetch-an-add-on-by-id\" target=\"_blank\">Fetch an Add-on API</a>.",
        "operationId": "FetchAdd-onbyID",
        "parameters": [
          {
            "name": "ao_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Add-ons"
        ],
        "summary": "Delete Add-on",
        "description": "You can delete a particular add-on created by you using the <a href=\"https://razorpay.com/docs/api/subscriptions/#delete-an-add-on\" target=\"_blank\">Delete an Add-on API</a>.",
        "operationId": "DeleteAdd-on",
        "parameters": [
          {
            "name": "ao_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payment_links": {
      "post": {
        "tags": [
          "Standard Payment Links"
        ],
        "summary": "Create a Payment Link",
        "description": "You can create a payment link using the <a href=\"https://razorpay.com/docs/api/payment-links/#create-payment-link\" target=\"_blank\">Create a Payment Link API</a>.",
        "operationId": "CreateaPaymentLink",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaPaymentLinkRequest"
              },
              "example": {
                "amount": 1000,
                "currency": "INR",
                "accept_partial": true,
                "first_min_partial_amount": 100,
                "expire_by": 1691097057,
                "reference_id": "TSsd1989",
                "description": "Payment for policy no #23456",
                "customer": {
                  "name": "Gaurav Kumar",
                  "contact": "+919999999999",
                  "email": "gaurav.kumar@example.com"
                },
                "notify": {
                  "sms": true,
                  "email": true
                },
                "reminder_enable": true,
                "notes": {
                  "policy_name": "Jeevan Bima"
                },
                "callback_url": "https://example-callback-url.com/",
                "callback_method": "get"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Standard Payment Links"
        ],
        "summary": "Fetch all Payment Links",
        "description": "You can fetch all payment links using the <a href=\"https://razorpay.com/docs/api/payment-links/#all-payment-links\" target=\"_blank\">Fetch all Payment Links API</a>.",
        "operationId": "FetchallPaymentLinks",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payment_links/{plink_id}": {
      "patch": {
        "tags": [
          "Standard Payment Links"
        ],
        "summary": "Update a Payment Link",
        "description": "You can update a specific payment link using the <a href=\"https://razorpay.com/docs/api/payment-links/#update-payment-link\" target=\"_blank\">Update a Payment Link API</a>.",
        "operationId": "UpdateaPaymentLink",
        "parameters": [
          {
            "name": "plink_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaPaymentLinkRequest"
              },
              "example": {
                "notes": {
                  "policy_name": "Jivan Asha"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Standard Payment Links"
        ],
        "summary": "Fetch a Payment Link",
        "description": "You can fetch a specific payment link using the <a href=\"https://razorpay.com/docs/api/payment-links/#specific-payment-links-by-id\" target=\"_blank\">Fetch a Payment Link API</a>.",
        "operationId": "FetchaPaymentLink",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "plink_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payment_links/{plink_id}/cancel": {
      "post": {
        "tags": [
          "Standard Payment Links"
        ],
        "summary": "Cancel a Payment Link",
        "description": "You can cancel a specific payment link using the <a href=\"https://razorpay.com/docs/api/payment-links/#cancel-payment-link\" target=\"_blank\">Cancel a Payment Link</a> API.",
        "operationId": "CancelaPaymentLink",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "plink_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payment_links/{plink_id}/notify_by/sms": {
      "post": {
        "tags": [
          "Standard Payment Links"
        ],
        "summary": "Resend a Payment Link",
        "description": "You can resend a specific payment link using the <a href=\"https://razorpay.com/docs/api/payment-links/#send-or-resend-notifications\" target=\"_blank\">Resend a Payment Link</a> API.",
        "operationId": "ResendaPaymentLink",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "plink_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/virtual_accounts/{va_id}": {
      "get": {
        "tags": [
          "Fetch Operations"
        ],
        "summary": "Fetch a Virtual Account By ID",
        "description": "You can use <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#fetch-a-virtual-account-by-id\" target=\"_blank\">this API</a> to fetch a specific virtual account using its ID.",
        "operationId": "FetchaVirtualAccountByID",
        "parameters": [
          {
            "name": "va_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/virtual_accounts": {
      "get": {
        "tags": [
          "Fetch Operations"
        ],
        "summary": "Fetch All Virtual Accounts",
        "description": "You can use <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#fetch-all-virtual-accounts\" target=\"_blank\">this API</a> to fetch all the virtual accounts.",
        "operationId": "FetchAllVirtualAccounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Smart Collect -TPV"
        ],
        "summary": "Create a Virtual Account",
        "description": "You can create a virtual account using this <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#create-virtual-account\" target=\"_blank\">API</a>.",
        "operationId": "CreateaVirtualAccount",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaVirtualAccountRequest"
              },
              "example": {
                "receivers": {
                  "types": [
                    "bank_account"
                  ]
                },
                "allowed_payers": [
                  {
                    "type": "bank_account",
                    "bank_account": {
                      "ifsc": "UTIB0000013",
                      "account_number": "914010012345679"
                    }
                  },
                  {
                    "type": "bank_account",
                    "bank_account": {
                      "ifsc": "UTIB0000014",
                      "account_number": "914010012345680"
                    }
                  }
                ],
                "description": "Virtual Account created for Raftar Soft",
                "customer_id": "cust_CaVDm8eDRSXYME",
                "close_by": 1981615838,
                "notes": {
                  "project_name": "Banking Software"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/virtual_accounts/{va_id}/payments": {
      "get": {
        "tags": [
          "Fetch Operations"
        ],
        "summary": "Fetch Payments Made to a Virtual Account",
        "description": "You can use this <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#fetch-payments-for-a-virtual-account\" target=\"_blank\">API</a> to retrieve payments made to a specific virtual account.",
        "operationId": "FetchPaymentsMadetoaVirtualAccount",
        "parameters": [
          {
            "name": "va_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/{pay_id}/bank_transfer": {
      "get": {
        "tags": [
          "Fetch Operations"
        ],
        "summary": "Method is Bank Transfer",
        "description": "You can use this <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#fetch-payment-details-using-id-and-transfer-method\" target=\"_blank\">API</a> to retrieve details of payments using the Payment ID and transfer method.",
        "operationId": "MethodisBankTransfer",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/virtual_accounts/{va_id}/close": {
      "post": {
        "tags": [
          "Smart Collect -TPV"
        ],
        "summary": "Close a Virtual Account",
        "description": "Use this <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#close-a-virtual-account\" target=\"_blank\">API</a> to close a virtual account.",
        "operationId": "CloseaVirtualAccount",
        "parameters": [
          {
            "name": "va_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/virtual_accounts/{va_id}/receiver": {
      "post": {
        "tags": [
          "Smart Collect -TPV"
        ],
        "summary": "Update a Virtual Account",
        "description": "You can add a receiver to a virtual account using this API.",
        "operationId": "UpdateaVirtualAccount",
        "parameters": [
          {
            "name": "va_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaVirtualAccountRequest"
              },
              "example": {
                "receivers": {
                  "types": [
                    "vpa"
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/virtual_accounts/{va_id}/allowed_payers": {
      "post": {
        "tags": [
          "Smart Collect -TPV"
        ],
        "summary": "Add an Allowed Payer Account",
        "description": "You can add an allowed payer to a virtual account using this <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#add-an-allowed-payer-account\" target=\"_blank\">API</a>.",
        "operationId": "AddanAllowedPayerAccount",
        "parameters": [
          {
            "name": "va_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddanAllowedPayerAccountRequest"
              },
              "example": {
                "type": "bank_account",
                "bank_account": {
                  "ifsc": "UTIB0000013",
                  "account_number": "914010012345679"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/virtual_accounts/va_DlGmm7jInLudH9/allowed_payers/ba_DlGmm9mSj8fjRM": {
      "delete": {
        "tags": [
          "Smart Collect -TPV"
        ],
        "summary": "Delete an Allowed Payer Account",
        "description": "You can delete an allowed payer from a virtual account using this <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#delete-an-allowed-payer-account\" target=\"_blank\">API</a>.",
        "operationId": "DeleteanAllowedPayerAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/{pay_id}/upi_transfer": {
      "get": {
        "tags": [
          "Fetch Payment Details using ID and Transfer Method"
        ],
        "summary": "Method is UPI Transfer",
        "description": "Use this [API](https://razorpay.com/docs/api/smart-collect/#upi) to retrieve details of a payment using the Payment ID and transfer method.",
        "operationId": "MethodisUPITransfer",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/virtual_accounts/{va_id}/receivers": {
      "post": {
        "tags": [
          "Smart Collect"
        ],
        "summary": "Update a Virtual Account",
        "description": "You can use this [API](https://razorpay.com/docs/api/smart-collect/#add-receiver-to-an-existing-virtual-account) to add a receiver to a virtual account.",
        "operationId": "PostUpdateaVirtualAccount",
        "parameters": [
          {
            "name": "va_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaVirtualAccountRequest1"
              },
              "example": {
                "types": [
                  "vpa"
                ],
                "vpa": {
                  "descriptor": "gaurikumar"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payments/{pay_id}/transfers": {
      "post": {
        "tags": [
          "Transfers API"
        ],
        "summary": "Transfer via Payments",
        "description": "You can use this [API](https://razorpay.com/docs/api/route/#create-transfers-from-payments) to transfer a `captured` payment to one or more linked accounts using `account_id`. A response will be generated on a successful transfer with a collection of transfer entities created for the payment.",
        "operationId": "TransferviaPayments",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferviaPaymentsRequest"
              },
              "example": {
                "transfers": [
                  {
                    "account": "acc_id",
                    "amount": 100,
                    "currency": "INR",
                    "notes": {
                      "name": "Gaurav Kumar",
                      "roll_no": "IEC2011025"
                    },
                    "linked_account_notes": [
                      "roll_no"
                    ],
                    "on_hold": true,
                    "on_hold_until": 1671222870
                  },
                  {
                    "account": "acc_id",
                    "amount": 100,
                    "currency": "INR",
                    "notes": {
                      "name": "Saurav Kumar",
                      "roll_no": "IEC2011026"
                    },
                    "linked_account_notes": [
                      "roll_no"
                    ],
                    "on_hold": false
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Fetch Details"
        ],
        "summary": "Fetch Transfers for a Payment",
        "description": "Use this [API](https://razorpay.com/docs/api/route/#fetch-transfers-for-a-payment) to fetch the collection of all transfers created on a specific Payment ID.",
        "operationId": "FetchTransfersforaPayment",
        "parameters": [
          {
            "name": "pay_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/transfers": {
      "post": {
        "tags": [
          "Transfers API"
        ],
        "summary": "Direct Transfer",
        "description": "You can transfer funds to your linked accounts directly from your account balance using the Direct Transfers [API](https://razorpay.com/docs/api/route/#direct-transfers).",
        "operationId": "DirectTransfer",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectTransferRequest"
              },
              "example": {
                "account": "acc_id",
                "amount": 100,
                "currency": "INR"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Fetch Details"
        ],
        "summary": "Fetch Transfers for a Settlement",
        "description": "Use this [API](https://razorpay.com/docs/api/route/#fetch-transfers-for-a-settlement) to retrieve the collection of all transfers made for a particular `recipient_settlement_id`.",
        "operationId": "FetchTransfersforaSettlement",
        "parameters": [
          {
            "name": "recipient_settlement_id",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{setl_id}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/transfers/{trf_id}": {
      "get": {
        "tags": [
          "Fetch Details"
        ],
        "summary": "Fetch a Transfer",
        "description": "Use this [API](https://razorpay.com/docs/api/route/#fetch-a-transfer) to fetch details of a specific transfer.",
        "operationId": "FetchaTransfer",
        "parameters": [
          {
            "name": "trf_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Linked Account Settlements"
        ],
        "summary": "Modify Transfer Settlement Hold",
        "description": "Use this [API](https://razorpay.com/docs/api/route/#modify-settlement-hold-for-transfers) to modify the settlement configuration for a particular `transfer_id`. On a successful request, the API responds with the modified transfer entity.",
        "operationId": "ModifyTransferSettlementHold",
        "parameters": [
          {
            "name": "trf_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyTransferSettlementHoldRequest"
              },
              "example": {
                "on_hold": 1,
                "on_hold_until": 1979691505
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/transfers/{trf_id}/reversals": {
      "post": {
        "tags": [
          "Refunds and Reversals"
        ],
        "summary": "Transfer Reversals",
        "operationId": "TransferReversals",
        "parameters": [
          {
            "name": "trf_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferReversalsRequest"
              },
              "example": {
                "amount": 100
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/items": {
      "post": {
        "tags": [
          "Items APIs"
        ],
        "summary": "Create an Item",
        "operationId": "CreateanItem",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateanItemRequest"
              },
              "example": {
                "name": "Yellow Herb",
                "description": "Yellow herb from Resident Evil",
                "amount": 50000,
                "currency": "INR"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Items APIs"
        ],
        "summary": "Fetch Items",
        "description": "Use this [API](https://razorpay.com/docs/api/items/#fetch-multiple-items) to fetch multiple items.",
        "operationId": "FetchItems",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/items/{item_id}": {
      "get": {
        "tags": [
          "Items APIs"
        ],
        "summary": "Fetch Item by ID",
        "description": "Use this [API](https://razorpay.com/docs/api/items/#fetch-an-item) to fetch a specific item.",
        "operationId": "FetchItembyID",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Items APIs"
        ],
        "summary": "Update an Item",
        "description": "Use this [API](https://razorpay.com/docs/api/items/#update-an-item) to update a specific item.",
        "operationId": "UpdateanItem",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateanItemRequest"
              },
              "example": {
                "name": "Green Herb",
                "description": "Green herb from Resident Evil",
                "amount": 70000,
                "currency": "INR"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Items APIs"
        ],
        "summary": "Delete an Item",
        "description": "Use this [API](https://razorpay.com/docs/api/items/#delete-an-item) to delete a specific item.",
        "operationId": "DeleteanItem",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/contacts": {
      "post": {
        "tags": [
          "Step 1 - Contacts"
        ],
        "summary": "Create Contact",
        "description": "A contact is an entity to whom payouts can be made through supported modes such as UPI, IMPS, NEFT and RTGS.\n\nUse this [API](https://razorpay.com/docs/api/razorpayx/contacts/#create-a-contact) to create a contact.",
        "operationId": "CreateContact",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactRequest"
              },
              "example": {
                "name": "Gaurav Kumar",
                "email": "gauravkumar@example.com",
                "contact": 9123456789,
                "type": "employee",
                "reference_id": "Acme Contact ID 12345",
                "notes": {
                  "random_key_1": "Make it so.",
                  "random_key_2": "Tea. Earl Grey. Hot."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Step 1 - Contacts"
        ],
        "summary": "Fetch all Contacts",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/contacts/#fetch-all-contacts) to fetch all contacts.",
        "operationId": "FetchallContacts",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/contacts/{cont_id}": {
      "get": {
        "tags": [
          "Step 1 - Contacts"
        ],
        "summary": "Fetch Contact by ID",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/contacts/#fetch-a-contact-by-id) to fetch the details of a specific contact.",
        "operationId": "FetchContactbyID",
        "parameters": [
          {
            "name": "cont_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Step 1 - Contacts"
        ],
        "summary": "Update Contact",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/contacts/#update-a-contact) to update a particular contact.",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "name": "cont_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactRequest"
              },
              "example": {
                "name": "Gaurav Kumar Updated",
                "email": "gaurav.kumar@example.com",
                "contact": 9876543210,
                "type": "self",
                "reference_id": "Acme Contact ID 12345 Updated",
                "notes": {
                  "random_key_1": "Tea. Earl Grey. Hot.",
                  "random_key_2": "Tea. Earl Grey. Decaf..."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/fund_accounts": {
      "post": {
        "tags": [
          "Step 2 - Fund Accounts"
        ],
        "summary": "Create Fund Account - Bank Account",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/fund-accounts/#bank-account) to create a Fund Account with Bank Account details",
        "operationId": "CreateFundAccount-BankAccount",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFundAccount-BankAccountRequest"
              },
              "example": {
                "contact_id": "{cont_id}",
                "account_type": "bank_account",
                "bank_account": {
                  "name": "Gaurav Kumar",
                  "ifsc": "HDFC0009107",
                  "account_number": "50100102283912"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Step 2 - Fund Accounts"
        ],
        "summary": "Fetch all Fund Accounts",
        "operationId": "FetchallFundAccounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/fund_accounts/{fa_id}": {
      "get": {
        "tags": [
          "Step 2 - Fund Accounts"
        ],
        "summary": "Fetch Fund Account by ID",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/fund-accounts/#fetch-fund-account-details-by-id) to fetch a specific fund account.",
        "operationId": "FetchFundAccountbyID",
        "parameters": [
          {
            "name": "fa_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payouts": {
      "post": {
        "tags": [
          "Step 3 - Payouts"
        ],
        "summary": "Create Payout-Bank Account",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/payouts/#bank-accounts) to create a payout to a bank account.",
        "operationId": "CreatePayout-BankAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{apiPrivateAuth}}"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayout-BankAccountRequest"
              },
              "example": {
                "account_number": "7878780080316316",
                "fund_account_id": "fa_00000000000001",
                "amount": 1000000,
                "currency": "INR",
                "mode": "IMPS",
                "purpose": "refund",
                "queue_if_low_balance": true,
                "reference_id": "Acme Transaction ID 12345",
                "narration": "Acme Corp Fund Transfer",
                "notes": {
                  "notes_key_1": "Tea, Earl Grey, Hot",
                  "notes_key_2": "Tea, Earl Grey… decaf."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Step 3 - Payouts"
        ],
        "summary": "Fetch all Payouts",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/payouts/#fetch-all-payouts) to fetch all the payouts created by you.",
        "operationId": "FetchallPayouts",
        "parameters": [
          {
            "name": "account_number",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{account_number}"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payouts/{pout_id}": {
      "get": {
        "tags": [
          "Step 3 - Payouts"
        ],
        "summary": "Fetch Payout by ID",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/payouts/#fetch-a-payout-by-id) to fetch a specific payout created by you.",
        "operationId": "FetchPayoutbyID",
        "parameters": [
          {
            "name": "pout_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payouts/{pout_id}/cancel": {
      "post": {
        "tags": [
          "Step 3 - Payouts"
        ],
        "summary": "Cancel Queued Payouts",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/payouts/#cancel-a-queued-payout) to cancel a specific payout created by you.\n\n**Handy Tips**:  \nYou can only cancel payouts that are in the `queued` state. It is not possible to cancel payouts that have any other status.",
        "operationId": "CancelQueuedPayouts",
        "parameters": [
          {
            "name": "pout_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payout-links": {
      "post": {
        "tags": [
          "Payout Links"
        ],
        "summary": "Create Payout Link (using customer details)",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/payout-links/#create-a-payout-link) to create a Payout Link.",
        "operationId": "CreatePayoutLink(usingcustomerdetails)",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayoutLinkusingcustomerdetailsRequest"
              },
              "example": {
                "account_number": "account_number",
                "contact": {
                  "name": "Gaurav Kumar",
                  "type": "customer",
                  "contact": "912345678",
                  "email": "gaurav.kumar@example.com"
                },
                "amount": 1000,
                "currency": "INR",
                "purpose": "refund",
                "description": "Payout link for Gaurav Kumar",
                "receipt": "Receipt No. 1",
                "notes": {
                  "random_key_1": "Make it so.",
                  "random_key_2": "Tea. Earl Grey. Hot."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Payout Links"
        ],
        "summary": "Fetch Payout Links",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/payout-links/#fetch-all-payout-links) to fetch all Payout Links.",
        "operationId": "FetchPayoutLinks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payout-links/{poutlk_id}": {
      "get": {
        "tags": [
          "Payout Links"
        ],
        "summary": "Fetch Payout Link by ID",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/payout-links/#fetch-payout-link-by-id) to fetch a specific Payout Link.",
        "operationId": "FetchPayoutLinkbyID",
        "parameters": [
          {
            "name": "poutlk_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/payout-links/{poutlk_id}/cancel": {
      "post": {
        "tags": [
          "Payout Links"
        ],
        "summary": "Cancel Payout Link",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/payout-links/#cancel-a-payout-link) to cancel a payout link.",
        "operationId": "CancelPayoutLink",
        "parameters": [
          {
            "name": "poutlk_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/transactions": {
      "get": {
        "tags": [
          "Transaction Statements"
        ],
        "summary": "Fetch all Transactions",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/transactions/#fetch-all-transactions) to fetch details of all transactions.",
        "operationId": "FetchallTransactions",
        "parameters": [
          {
            "name": "account_number",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{account_number}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/transactions/{txn_id}": {
      "get": {
        "tags": [
          "Transaction Statements"
        ],
        "summary": "Fetch Transaction by ID",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/transactions/#fetch-transaction-by-id) to fetch details of a specific transaction.",
        "operationId": "FetchTransactionbyID",
        "parameters": [
          {
            "name": "txn_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/fund_accounts/validations": {
      "post": {
        "tags": [
          "Account Validation"
        ],
        "summary": "Validate Fund Account",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/account-validation/#validate-bank-account) to create an account validation transaction.",
        "operationId": "ValidateFundAccount",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateFundAccountRequest"
              },
              "example": {
                "account_number": "{account_number}",
                "fund_account": {
                  "id": "{fund_account_id}"
                },
                "amount": 100,
                "currency": "INR",
                "notes": {
                  "random_key_1": "Make it so.",
                  "random_key_2": "Tea. Earl Grey. Hot."
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Account Validation"
        ],
        "summary": "Fetch  all Account Validation Transactions",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/account-validation/#fetch-all-account-validation-transactions) to fetch all account validation transactions.",
        "operationId": "FetchallAccountValidationTransactions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v1/fund_accounts/validations/{fav_id}": {
      "get": {
        "tags": [
          "Account Validation"
        ],
        "summary": "Fetch  Account Validation Transactions by ID",
        "description": "Use this [API](https://razorpay.com/docs/api/razorpayx/account-validation/#fetch-account-validation-transaction-by-id) to fetch details of a specific account validation transaction.",
        "operationId": "FetchAccountValidationTransactionsbyID",
        "parameters": [
          {
            "name": "fav_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts": {
      "post": {
        "tags": [
          "Account APIs"
        ],
        "summary": "Create an Account",
        "operationId": "CreateanAccount",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateanAccountRequest"
              },
              "example": {
                "email": "gauriagain.kumar@example.org",
                "phone": "9999999999",
                "legal_business_name": "Acme Corp",
                "business_type": "partnership",
                "customer_facing_business_name": "Example",
                "profile": {
                  "category": "healthcare",
                  "subcategory": "clinic",
                  "addresses": {
                    "operation": {
                      "street1": "507, Koramangala 6th block",
                      "street2": "Kormanagala",
                      "city": "Bengaluru",
                      "state": "Karnataka",
                      "postal_code": 560047,
                      "country": "IN"
                    },
                    "registered": {
                      "street1": "507, Koramangala 1st block",
                      "street2": "MG Road",
                      "city": "Bengaluru",
                      "state": "Karnataka",
                      "postal_code": 560034,
                      "country": "IN"
                    }
                  },
                  "business_model": "Healthcare E-commerce platform"
                },
                "legal_info": {
                  "pan": "AAACL1234C",
                  "gst": "18AABCU9603R1ZM"
                },
                "brand": {
                  "color": "FFFFFF"
                },
                "notes": {
                  "internal_ref_id": "123123"
                },
                "tos_acceptance": {
                  "date": null,
                  "ip": null,
                  "user_agent": null
                },
                "contact_info": {
                  "chargeback": {
                    "email": "cb@example.org"
                  },
                  "refund": {
                    "email": "cb@example.org"
                  },
                  "support": {
                    "email": "support@example.org",
                    "phone": "9999999998",
                    "policy_url": "https://www.google.com"
                  }
                },
                "apps": {
                  "websites": [
                    "https://www.example.org"
                  ],
                  "android": [
                    {
                      "url": "playstore.example.org",
                      "name": "Example"
                    }
                  ],
                  "ios": [
                    {
                      "url": "appstore.example.org",
                      "name": "Example"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts/{account_id}": {
      "get": {
        "tags": [
          "Account APIs"
        ],
        "summary": "Fetch an Account",
        "description": "Use this API to fetch the details of an account.\n\nKnow more about the [Fetch an Account API](https://razorpay.com/docs/api/partners/account-onboarding/#fetch-an-account).",
        "operationId": "FetchanAccount",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Account APIs"
        ],
        "summary": "Update an Account",
        "description": "Use this API to update the details of an account.\n\nKnow more about the [Update an Account](https://razorpay.com/docs/api/partners/account-onboarding/#update-an-account) API.",
        "operationId": "UpdateanAccount",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateanAccountRequest"
              },
              "example": {
                "customer_facing_business_name": "ABCD Ltd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Account APIs"
        ],
        "summary": "Delete an Account",
        "description": "Use this API to delete an account.\n\nKnow more about the [Delete an Account API](https://razorpay.com/docs/api/partners/account-onboarding/#delete-an-account).",
        "operationId": "DeleteanAccount",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts/{account_id}/stakeholders": {
      "post": {
        "tags": [
          "Stakeholder APIs"
        ],
        "summary": "Create a Stakeholder",
        "description": "Use this API to create a stakeholder.\n\nKnow more about the [Create a Stakeholder API](https://razorpay.com/docs/api/partners/stakeholder/#create-a-stakeholder).",
        "operationId": "CreateaStakeholder",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaStakeholderRequest"
              },
              "example": {
                "percentage_ownership": 10,
                "name": "Gaurav Kumar",
                "email": "gaurav.kumar@example.com",
                "relationship": {
                  "director": true,
                  "executive": false
                },
                "phone": {
                  "primary": "7474747474",
                  "secondary": "7474747474"
                },
                "addresses": {
                  "residential": {
                    "street": "506, Koramangala 1st block",
                    "city": "Bengaluru",
                    "state": "Karnataka",
                    "postal_code": "560034",
                    "country": "IN"
                  }
                },
                "kyc": {
                  "pan": "AVOPB1111K"
                },
                "notes": {
                  "random_key_by_partner": "random_value"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Stakeholder APIs"
        ],
        "summary": "Fetch all Stakeholders",
        "description": "Use this API to fetch all stakeholders.\n\nKnow more about the [Fetch all Stakeholders API](https://razorpay.com/docs/api/partners/stakeholder/#fetch-all-stakeholders).",
        "operationId": "FetchallStakeholders",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts/{account_id}/stakeholders/{stakeholder_id}": {
      "get": {
        "tags": [
          "Stakeholder APIs"
        ],
        "summary": "Fetch a Stakeholder",
        "description": "Use this API to fetch a stakeholder.\n\nKnow more about the [Fetch a Stakeholder API](https://razorpay.com/docs/api/partners/stakeholder/#fetch-a-stakeholder).",
        "operationId": "FetchaStakeholder",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stakeholder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Stakeholder APIs"
        ],
        "summary": "Update a Stakeholder",
        "description": "Use this API to update a stakeholder.\n\nKnow more about the [Update a Stakeholder API](https://razorpay.com/docs/api/partners/stakeholder/#update-a-stakeholder).",
        "operationId": "UpdateaStakeholder",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stakeholder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaStakeholderRequest"
              },
              "example": {
                "percentage_ownership": 20,
                "name": "Gauri Kumar",
                "email": "gauri.kumar@example.com",
                "relationship": {
                  "director": false,
                  "executive": true
                },
                "phone": {
                  "primary": "9898989898",
                  "secondary": "9898989898"
                },
                "addresses": {
                  "residential": {
                    "street": "507, Koramangala 1st block",
                    "city": "Bangalore",
                    "state": "Karnataka",
                    "postal_code": "560035",
                    "country": "IN"
                  }
                },
                "kyc": {
                  "pan": "AVOPB1111J"
                },
                "notes": {
                  "random_key_by_partner": "random_value2"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "//api.razorpay.in/v2/accounts/{account_id}/stakeholders/{stakeholder_id}/documents": {
      "post": {
        "tags": [
          "Documents API"
        ],
        "summary": "Upload Stakeholder Documents",
        "description": "Use the API to upload signatory documents for a stakeholder.\n\nKnow more about the [Upload Stakeholder Documents API](https://razorpay.com/docs/api/partners/upload-document/#upload-stakeholder-documents).",
        "operationId": "UploadStakeholderDocuments",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stakeholder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "file",
                  "document_type"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "example": "@/Users/your_name/Downloads/sample_uploaded.jpeg"
                  },
                  "document_type": {
                    "type": "string",
                    "example": "aadhar_front"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http:",
            "variables": {}
          }
        ]
      }
    },
    "//api.razorpay.in/v2/accounts/{account_id}/documents": {
      "post": {
        "tags": [
          "Documents API"
        ],
        "summary": "Upload Account Documents",
        "description": "Use the API to upload business documents for a sub-merchant's account.\n\nKnow more about the [Upload Account Documents API](https://razorpay.com/docs/api/partners/upload-document/#upload-account-documents).",
        "operationId": "UploadAccountDocuments",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "file",
                  "document_type"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "example": "@/Users/your_name/Downloads/sample_uploaded.jpeg"
                  },
                  "document_type": {
                    "type": "string",
                    "example": "business_proof_url"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http:",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Documents API"
        ],
        "summary": "Fetch Account Documents",
        "description": "Use the API to fetch business documents for a sub-merchant's account.\n\nKnow more about the [Fetch Account Documents API](https://razorpay.com/docs/api/partners/upload-document/#fetch-account-documents).",
        "operationId": "FetchAccountDocuments",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http:",
            "variables": {}
          }
        ]
      }
    },
    "//api.razorpay.in/v2/accounts/{account_id}/stakeholders/{stakeholders_id}/documents": {
      "get": {
        "tags": [
          "Documents API"
        ],
        "summary": "Fetch Stakeholders Documents",
        "description": "Use the API to fetch the files uploaded for a stakeholder.\n\nKnow more about the [Fetch Stakeholders Documents API](https://razorpay.com/docs/api/partners/upload-document/#fetch-stakeholder-documents).",
        "operationId": "FetchStakeholdersDocuments",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stakeholders_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http:",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts/{account_id}/products": {
      "post": {
        "tags": [
          "Product Configuration Request APIs"
        ],
        "summary": "Request a Product Configuration",
        "description": "Use this API to request a product configuration. You can also use this API to accept terms and conditions for a product.\n\nKnow more about the [Request a Product Configuration API](https://razorpay.com/docs/api/partners/product-configuration/#request-a-product-configuration).",
        "operationId": "RequestaProductConfiguration",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestaProductConfigurationRequest"
              },
              "example": {
                "product_name": "payment_gateway",
                "tnc_accepted": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts/{account_id}/products/{product_id}": {
      "patch": {
        "tags": [
          "Product Configuration Request APIs"
        ],
        "summary": "Update a Product Configuration",
        "description": "Use this API to update a product configuration. You can also use this API to accept terms and conditions.\n\nKnow more about the [Update a Product Configuration API](https://razorpay.com/docs/api/partners/product-configuration/#update-a-product-configuration).",
        "operationId": "UpdateaProductConfiguration",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaProductConfigurationRequest"
              },
              "example": {
                "notifications": {
                  "email": [
                    "gaurav.kumar@example.com",
                    "acd@gmail.com"
                  ]
                },
                "checkout": {
                  "theme_color": "#528FFF"
                },
                "refund": {
                  "default_refund_speed": "optimum"
                },
                "settlements": {
                  "account_number": "1234567890",
                  "ifsc_code": "HDFC0000317",
                  "beneficiary_name": "Gaurav Kumar"
                },
                "tnc_accepted": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Product Configuration Request APIs"
        ],
        "summary": "Fetch a Product Configuration",
        "description": "Use this API to retrieve the details of a product for a given sub-merchant's account.\n\nKnow more about the [Fetch a Product Configuration API](https://razorpay.com/docs/api/partners/product-configuration/#fetch-a-product-configuration).",
        "operationId": "FetchaProductConfiguration",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts/{account_id}/webhooks": {
      "post": {
        "tags": [
          "Webhooks API"
        ],
        "summary": "Create a Webhook",
        "description": "Use this API to create a webhook.\n\nKnow more about the [Create a Webhook](https://razorpay.com/docs/api/partners/webhooks/#create-a-webhook) API.",
        "operationId": "CreateaWebhook",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaWebhookRequest"
              },
              "example": {
                "url": "https://en1mwkqoqioct.x.pipedream.net",
                "alert_email": "gaurav.kumar@example.com",
                "secret": "12345",
                "events": [
                  "payment.authorized",
                  "payment.failed",
                  "payment.captured",
                  "payment.dispute.created",
                  "refund.failed",
                  "refund.created"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Webhooks API"
        ],
        "summary": "Fetch all Webhooks",
        "description": "Use this API to fetch all webhooks.\n\nKnow more about the [Fetch all Webhooks](https://razorpay.com/docs/api/partners/webhooks/#fetch-all-webhooks) API.",
        "operationId": "FetchallWebhooks",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts/{account_id}/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "Webhooks API"
        ],
        "summary": "Fetch a Webhook",
        "description": "Use this API to fetch a webhook.\n\nKnow more about the [Fetch a Webhook](https://razorpay.com/docs/api/partners/webhooks/#fetch-a-webhook) API.",
        "operationId": "FetchaWebhook",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts/{account_id}/webhooks/{webhooks_id}": {
      "patch": {
        "tags": [
          "Webhooks API"
        ],
        "summary": "Update a Webhook",
        "description": "Use this API to update a webhook.\n\nKnow more about the [Update a Webhook](https://razorpay.com/docs/api/partners/webhooks/#update-a-webhook) API.",
        "operationId": "UpdateaWebhook",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhooks_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaWebhookRequest"
              },
              "example": {
                "url": "https://www.linkedin.com",
                "events": [
                  "refund.created"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhooks API"
        ],
        "summary": "Delete a Webhook",
        "description": "Use this API to delete a webhook.\n\nKnow more about the [Delete a Webhook](https://razorpay.com/docs/api/partners/webhooks/#delete-a-webhook) API.",
        "operationId": "DeleteaWebhook",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhooks_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/accounts/{account_id}/tnc": {
      "post": {
        "tags": [
          "Terms and Conditions API"
        ],
        "summary": "[Deprecated] Accept Terms and Conditions",
        "description": "**Deprecation Notice**\n\nWe deprecated this API in February 2022. We do not support this API anymore.\n\nUse the [Product Configuration APIs](https://razorpay.com/docs/api/partners/product-configuration/) to accept terms and conditions.",
        "operationId": "[Deprecated]AcceptTermsandConditions",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedAcceptTermsandConditionsRequest"
              },
              "example": {
                "accepted": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    },
    "/v2/products/{product_name}/tnc": {
      "post": {
        "tags": [
          "Terms and Conditions API"
        ],
        "summary": "Fetch Terms and Conditions for a Sub-merchant",
        "description": "Use this API to accept the terms and conditions for a merchant.\n\nKnow more about the [Fetch Terms and Conditions API](https://razorpay.com/docs/api/partners/terms-conditions/#fetch-terms-and-conditions-for-a-sub-merchant).",
        "operationId": "FetchTermsandConditionsforaSub-merchant",
        "parameters": [
          {
            "name": "product_name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.razorpay.com",
            "variables": {}
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateaCustomerRequest": {
        "title": "CreateaCustomerRequest",
        "required": [
          "name",
          "email",
          "contact",
          "fail_existing",
          "gstin",
          "notes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "fail_existing": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "name": "Gaurav Kumar",
          "email": "gaurav.kumar@example.com",
          "contact": "9123456780",
          "fail_existing": "1",
          "gstin": "12ABCDE2356F7GH",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "Notes": {
        "title": "Notes",
        "required": [
          "notes_key_1",
          "notes_key_2"
        ],
        "type": "object",
        "properties": {
          "notes_key_1": {
            "type": "string"
          },
          "notes_key_2": {
            "type": "string"
          }
        },
        "example": {
          "notes_key_1": "Tea, Earl Grey, Hot",
          "notes_key_2": "Tea, Earl Grey… decaf."
        }
      },
      "EditaCustomerRequest": {
        "title": "EditaCustomerRequest",
        "required": [
          "name",
          "email",
          "contact"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          }
        },
        "example": {
          "name": "Saurav Kumar",
          "email": "saurav.kumar@example.com",
          "contact": "9876543210"
        }
      },
      "CreateanOrderRequest": {
        "title": "CreateanOrderRequest",
        "required": [
          "amount",
          "currency",
          "receipt",
          "notes"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "receipt": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "amount": 1000000,
          "currency": "INR",
          "receipt": "Receipt no. 1",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "UpdateOrderRequest": {
        "title": "UpdateOrderRequest",
        "required": [
          "notes"
        ],
        "type": "object",
        "properties": {
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "notes": {
            "notes_key_1": "Beam me up Scotty",
            "notes_key_2": "Engage"
          }
        }
      },
      "UpdatePaymentRequest": {
        "title": "UpdatePaymentRequest",
        "required": [
          "note"
        ],
        "type": "object",
        "properties": {
          "note": {
            "$ref": "#/components/schemas/Note"
          }
        },
        "example": {
          "note": {
            "notes_key_1": "Beam me up Scotty",
            "notes_key_2": "Engage"
          }
        }
      },
      "Note": {
        "title": "Note",
        "required": [
          "notes_key_1",
          "notes_key_2"
        ],
        "type": "object",
        "properties": {
          "notes_key_1": {
            "type": "string"
          },
          "notes_key_2": {
            "type": "string"
          }
        },
        "example": {
          "notes_key_1": "Beam me up Scotty",
          "notes_key_2": "Engage"
        }
      },
      "CaptureaPaymentRequest": {
        "title": "CaptureaPaymentRequest",
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR"
        }
      },
      "CreateaNormalRefundRequest": {
        "title": "CreateaNormalRefundRequest",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "amount": 10000
        }
      },
      "CreateanInstantRefundRequest": {
        "title": "CreateanInstantRefundRequest",
        "required": [
          "amount",
          "receipt",
          "notes"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "receipt": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "amount": 20000,
          "receipt": "Receipt No. 2",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "UpdateRefundRequest": {
        "title": "UpdateRefundRequest",
        "required": [
          "notes"
        ],
        "type": "object",
        "properties": {
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "notes": {
            "notes_key_1": "Beam me up Scotty.",
            "notes_key_2": "Engage"
          }
        }
      },
      "CreateInstantSettlementRequest": {
        "title": "CreateInstantSettlementRequest",
        "required": [
          "amount",
          "max_balance",
          "description",
          "notes"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "max_balance": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "amount": 50000,
          "max_balance": 0,
          "description": "Need this to make vendor payouts",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "CreateanInvoiceRequest": {
        "title": "CreateanInvoiceRequest",
        "required": [
          "type",
          "description",
          "partial_payment",
          "customer",
          "line_items",
          "sms_notify",
          "email_notify",
          "draft",
          "date",
          "expire_by",
          "receipt",
          "comment",
          "terms",
          "notes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "partial_payment": {
            "type": "boolean"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            },
            "description": ""
          },
          "sms_notify": {
            "type": "integer",
            "format": "int32"
          },
          "email_notify": {
            "type": "integer",
            "format": "int32"
          },
          "draft": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int32"
          },
          "expire_by": {
            "type": "integer",
            "format": "int32"
          },
          "receipt": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "terms": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "type": "invoice",
          "description": "Domestic invoice for Gaurav Kumar.",
          "partial_payment": true,
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "9876543210",
            "email": "gaurav.kumar@example.com",
            "billing_address": {
              "line1": "Ground FLoor, Millennium Tower, 1st Avenue",
              "line2": "1st Avenue",
              "zipcode": "560001",
              "city": "Bangalore",
              "state": "Karnataka",
              "country": "India"
            },
            "shipping_address": {
              "line1": "3rd FLoor, Nakamura Tower, Bomaye Boulevard",
              "line2": "Baker Street",
              "zipcode": "560001",
              "city": "Bangalore",
              "state": "Karnataka",
              "country": "in"
            }
          },
          "line_items": [
            {
              "name": "Crate of sea weed",
              "description": "Crate of sea weed.",
              "amount": 20000,
              "currency": "INR",
              "quantity": 1
            },
            {
              "item_id": "{item_id}"
            }
          ],
          "sms_notify": 1,
          "email_notify": 1,
          "draft": "1",
          "date": 1588076279,
          "expire_by": 1924991999,
          "receipt": "Receipt No. 1",
          "comment": "Fresh sea weed mowed this morning",
          "terms": "No Returns; No Refunds",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "Customer": {
        "title": "Customer",
        "required": [
          "name",
          "contact",
          "email",
          "billing_address",
          "shipping_address"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "billing_address": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/ShippingAddress"
          }
        },
        "example": {
          "name": "Gaurav Kumar",
          "contact": "9876543210",
          "email": "gaurav.kumar@example.com",
          "billing_address": {
            "line1": "Ground FLoor, Millennium Tower, 1st Avenue",
            "line2": "1st Avenue",
            "zipcode": "560001",
            "city": "Bangalore",
            "state": "Karnataka",
            "country": "India"
          },
          "shipping_address": {
            "line1": "3rd FLoor, Nakamura Tower, Bomaye Boulevard",
            "line2": "Baker Street",
            "zipcode": "560001",
            "city": "Bangalore",
            "state": "Karnataka",
            "country": "in"
          }
        }
      },
      "BillingAddress": {
        "title": "BillingAddress",
        "required": [
          "line1",
          "line2",
          "zipcode",
          "city",
          "state",
          "country"
        ],
        "type": "object",
        "properties": {
          "line1": {
            "type": "string"
          },
          "line2": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "example": {
          "line1": "Ground FLoor, Millennium Tower, 1st Avenue",
          "line2": "1st Avenue",
          "zipcode": "560001",
          "city": "Bangalore",
          "state": "Karnataka",
          "country": "India"
        }
      },
      "ShippingAddress": {
        "title": "ShippingAddress",
        "required": [
          "line1",
          "line2",
          "zipcode",
          "city",
          "state",
          "country"
        ],
        "type": "object",
        "properties": {
          "line1": {
            "type": "string"
          },
          "line2": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "example": {
          "line1": "3rd FLoor, Nakamura Tower, Bomaye Boulevard",
          "line2": "Baker Street",
          "zipcode": "560001",
          "city": "Bangalore",
          "state": "Karnataka",
          "country": "in"
        }
      },
      "LineItem": {
        "title": "LineItem",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "item_id": {
            "type": "string"
          }
        },
        "example": {
          "name": "Crate of sea weed",
          "description": "Crate of sea weed.",
          "amount": 20000,
          "currency": "INR",
          "quantity": 1
        }
      },
      "UpdateanInvoiceRequest": {
        "title": "UpdateanInvoiceRequest",
        "required": [
          "partial_payment",
          "customer",
          "line_items",
          "sms_notify",
          "email_notify",
          "draft",
          "date",
          "expire_by",
          "receipt",
          "comment",
          "terms",
          "notes"
        ],
        "type": "object",
        "properties": {
          "partial_payment": {
            "type": "boolean"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            },
            "description": ""
          },
          "sms_notify": {
            "type": "integer",
            "format": "int32"
          },
          "email_notify": {
            "type": "integer",
            "format": "int32"
          },
          "draft": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int32"
          },
          "expire_by": {
            "type": "integer",
            "format": "int32"
          },
          "receipt": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "terms": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "partial_payment": true,
          "customer": {
            "name": "Saurav Kumar",
            "contact": "9123456789",
            "email": "saurav.kumar@example.com"
          },
          "line_items": [
            {
              "name": "Crate of Red Herbs",
              "description": "Red Herbs from Resident Evil",
              "amount": 50000,
              "currency": "INR",
              "quantity": 5
            },
            {
              "item_id": "{item_id}"
            }
          ],
          "sms_notify": 1,
          "email_notify": 1,
          "draft": "1",
          "date": 1588076279,
          "expire_by": 1924991999,
          "receipt": "Receipt No. 1",
          "comment": "Fresh herbs mowed this morning",
          "terms": "No Returns; No Refunds",
          "notes": {
            "notes_key_1": "Beam me up Scotty.",
            "notes_key_2": "Engage"
          }
        }
      },
      "Customer1": {
        "title": "Customer1",
        "required": [
          "name",
          "contact",
          "email"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "name": "Saurav Kumar",
          "contact": "9123456789",
          "email": "saurav.kumar@example.com"
        }
      },
      "CreatePlanRequest": {
        "title": "CreatePlanRequest",
        "required": [
          "period",
          "interval",
          "item",
          "notes"
        ],
        "type": "object",
        "properties": {
          "period": {
            "type": "string"
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "period": "weekly",
          "interval": 1,
          "item": {
            "name": "Test plan - Weekly",
            "amount": 69900,
            "currency": "INR",
            "description": "Description for the test plan - Weekly"
          },
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "Item": {
        "title": "Item",
        "required": [
          "name",
          "amount",
          "currency",
          "description"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "name": "Test plan - Weekly",
          "amount": 69900,
          "currency": "INR",
          "description": "Description for the test plan - Weekly"
        }
      },
      "CreateSubscriptionRequest": {
        "title": "CreateSubscriptionRequest",
        "required": [
          "plan_id",
          "total_count",
          "quantity",
          "start_at",
          "expire_by",
          "customer_notify",
          "addons",
          "offer_id",
          "notes"
        ],
        "type": "object",
        "properties": {
          "plan_id": {
            "type": "string"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "start_at": {
            "type": "integer",
            "format": "int32"
          },
          "expire_by": {
            "type": "integer",
            "format": "int32"
          },
          "customer_notify": {
            "type": "integer",
            "format": "int32"
          },
          "addons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Addon"
            },
            "description": ""
          },
          "offer_id": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "plan_id": "{plan_id}",
          "total_count": 6,
          "quantity": 1,
          "start_at": 1735689600,
          "expire_by": 1893456000,
          "customer_notify": 1,
          "addons": [
            {
              "item": {
                "name": "Delivery charges",
                "amount": 30000,
                "currency": "INR"
              }
            }
          ],
          "offer_id": "{offer_id}",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "Addon": {
        "title": "Addon",
        "required": [
          "item"
        ],
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Item1"
          }
        },
        "example": {
          "item": {
            "name": "Delivery charges",
            "amount": 30000,
            "currency": "INR"
          }
        }
      },
      "Item1": {
        "title": "Item1",
        "required": [
          "name",
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          }
        },
        "example": {
          "name": "Delivery charges",
          "amount": 30000,
          "currency": "INR"
        }
      },
      "CreateSubscriptionLinkRequest": {
        "title": "CreateSubscriptionLinkRequest",
        "required": [
          "plan_id",
          "total_count",
          "quantity",
          "start_at",
          "expire_by",
          "customer_notify",
          "addons",
          "notes",
          "offer_id",
          "notify_info"
        ],
        "type": "object",
        "properties": {
          "plan_id": {
            "type": "string"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "start_at": {
            "type": "integer",
            "format": "int32"
          },
          "expire_by": {
            "type": "integer",
            "format": "int32"
          },
          "customer_notify": {
            "type": "integer",
            "format": "int32"
          },
          "addons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Addon"
            },
            "description": ""
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "offer_id": {
            "type": "string"
          },
          "notify_info": {
            "$ref": "#/components/schemas/NotifyInfo"
          }
        },
        "example": {
          "plan_id": "{plan_id}",
          "total_count": 12,
          "quantity": 1,
          "start_at": 1735689600,
          "expire_by": 1893456000,
          "customer_notify": 1,
          "addons": [
            {
              "item": {
                "name": "Delivery charges",
                "amount": 30000,
                "currency": "INR"
              }
            }
          ],
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          },
          "offer_id": "{offer_id}",
          "notify_info": {
            "notify_phone": "9123456789",
            "notify_email": "gaurav.kumar@example.com"
          }
        }
      },
      "NotifyInfo": {
        "title": "NotifyInfo",
        "required": [
          "notify_phone",
          "notify_email"
        ],
        "type": "object",
        "properties": {
          "notify_phone": {
            "type": "string"
          },
          "notify_email": {
            "type": "string"
          }
        },
        "example": {
          "notify_phone": "9123456789",
          "notify_email": "gaurav.kumar@example.com"
        }
      },
      "CancelSubscriptionRequest": {
        "title": "CancelSubscriptionRequest",
        "required": [
          "cancel_at_cycle_end"
        ],
        "type": "object",
        "properties": {
          "cancel_at_cycle_end": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "cancel_at_cycle_end": 0
        }
      },
      "UpdateSubscriptionRequest": {
        "title": "UpdateSubscriptionRequest",
        "required": [
          "plan_id",
          "quantity",
          "remaining_count",
          "schedule_change_at",
          "customer_notify",
          "offer_id"
        ],
        "type": "object",
        "properties": {
          "plan_id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "remaining_count": {
            "type": "integer",
            "format": "int32"
          },
          "schedule_change_at": {
            "type": "string"
          },
          "customer_notify": {
            "type": "integer",
            "format": "int32"
          },
          "offer_id": {
            "type": "string"
          }
        },
        "example": {
          "plan_id": "{plan_id}",
          "quantity": 3,
          "remaining_count": 6,
          "schedule_change_at": "now",
          "customer_notify": 1,
          "offer_id": "{offer_id}"
        }
      },
      "PauseaSubscriptionRequest": {
        "title": "PauseaSubscriptionRequest",
        "required": [
          "pause_at"
        ],
        "type": "object",
        "properties": {
          "pause_at": {
            "type": "string"
          }
        },
        "example": {
          "pause_at": "now"
        }
      },
      "ResumeaSubscriptionRequest": {
        "title": "ResumeaSubscriptionRequest",
        "required": [
          "resume_at"
        ],
        "type": "object",
        "properties": {
          "resume_at": {
            "type": "string"
          }
        },
        "example": {
          "resume_at": "now"
        }
      },
      "CreateAdd-onRequest": {
        "title": "CreateAdd-onRequest",
        "required": [
          "item",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Item"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "item": {
            "name": "Extra appala (papadum)",
            "amount": 30000,
            "currency": "INR",
            "description": "1 extra oil fried appala with meals"
          },
          "quantity": 2
        }
      },
      "CreateaPaymentLinkRequest": {
        "title": "CreateaPaymentLinkRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "first_min_partial_amount",
          "expire_by",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "notes",
          "callback_url",
          "callback_method"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "first_min_partial_amount": {
            "type": "integer",
            "format": "int32"
          },
          "expire_by": {
            "type": "integer",
            "format": "int32"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes11"
          },
          "callback_url": {
            "type": "string"
          },
          "callback_method": {
            "type": "string"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR",
          "accept_partial": true,
          "first_min_partial_amount": 100,
          "expire_by": 1691097057,
          "reference_id": "TSsd1989",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "notes": {
            "policy_name": "Jeevan Bima"
          },
          "callback_url": "https://example-callback-url.com/",
          "callback_method": "get"
        }
      },
      "Notify": {
        "title": "Notify",
        "required": [
          "sms",
          "email"
        ],
        "type": "object",
        "properties": {
          "sms": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          }
        },
        "example": {
          "sms": true,
          "email": true
        }
      },
      "Notes11": {
        "title": "Notes11",
        "required": [
          "policy_name"
        ],
        "type": "object",
        "properties": {
          "policy_name": {
            "type": "string"
          }
        },
        "example": {
          "policy_name": "Jeevan Bima"
        }
      },
      "UpdateaPaymentLinkRequest": {
        "title": "UpdateaPaymentLinkRequest",
        "required": [
          "notes"
        ],
        "type": "object",
        "properties": {
          "notes": {
            "$ref": "#/components/schemas/Notes11"
          }
        },
        "example": {
          "notes": {
            "policy_name": "Jivan Asha"
          }
        }
      },
      "ImplementThematicChangesinCheckoutRequest": {
        "title": "ImplementThematicChangesinCheckoutRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "first_min_partial_amount",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "first_min_partial_amount": {
            "type": "integer",
            "format": "int32"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR",
          "accept_partial": true,
          "first_min_partial_amount": 100,
          "reference_id": "#423212",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "options": {
            "checkout": {
              "theme": {
                "hide_topbar": true
              }
            }
          }
        }
      },
      "Options": {
        "title": "Options",
        "required": [
          "checkout"
        ],
        "type": "object",
        "properties": {
          "checkout": {
            "$ref": "#/components/schemas/Checkout"
          }
        },
        "example": {
          "checkout": {
            "theme": {
              "hide_topbar": true
            }
          }
        }
      },
      "Checkout": {
        "title": "Checkout",
        "required": [
          "theme"
        ],
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/Theme"
          }
        },
        "example": {
          "theme": {
            "hide_topbar": true
          }
        }
      },
      "Theme": {
        "title": "Theme",
        "required": [
          "hide_topbar"
        ],
        "type": "object",
        "properties": {
          "hide_topbar": {
            "type": "boolean"
          }
        },
        "example": {
          "hide_topbar": true
        }
      },
      "ChangeMerchantNameandDescriptionRequest": {
        "title": "ChangeMerchantNameandDescriptionRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "first_min_partial_amount",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "first_min_partial_amount": {
            "type": "integer",
            "format": "int32"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options1"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR",
          "accept_partial": true,
          "first_min_partial_amount": 100,
          "reference_id": "#2234542",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "options": {
            "checkout": {
              "name": "Lacme Corp"
            }
          }
        }
      },
      "Options1": {
        "title": "Options1",
        "required": [
          "checkout"
        ],
        "type": "object",
        "properties": {
          "checkout": {
            "$ref": "#/components/schemas/Checkout1"
          }
        },
        "example": {
          "checkout": {
            "name": "Lacme Corp"
          }
        }
      },
      "Checkout1": {
        "title": "Checkout1",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "Lacme Corp"
        }
      },
      "PrefillCheckoutFieldsRequest": {
        "title": "PrefillCheckoutFieldsRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "first_min_partial_amount",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "first_min_partial_amount": {
            "type": "integer",
            "format": "int32"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options2"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR",
          "accept_partial": true,
          "first_min_partial_amount": 100,
          "reference_id": "#419",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "options": {
            "checkout": {
              "prefill": {
                "select_partial": true
              }
            }
          }
        }
      },
      "Options2": {
        "title": "Options2",
        "required": [
          "checkout"
        ],
        "type": "object",
        "properties": {
          "checkout": {
            "$ref": "#/components/schemas/Checkout2"
          }
        },
        "example": {
          "checkout": {
            "prefill": {
              "select_partial": true
            }
          }
        }
      },
      "Checkout2": {
        "title": "Checkout2",
        "required": [
          "prefill"
        ],
        "type": "object",
        "properties": {
          "prefill": {
            "$ref": "#/components/schemas/Prefill"
          }
        },
        "example": {
          "prefill": {
            "select_partial": true
          }
        }
      },
      "Prefill": {
        "title": "Prefill",
        "required": [
          "select_partial"
        ],
        "type": "object",
        "properties": {
          "select_partial": {
            "type": "boolean"
          }
        },
        "example": {
          "select_partial": true
        }
      },
      "SetCheckoutFieldsasRead-OnlyRequest": {
        "title": "SetCheckoutFieldsasRead-OnlyRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "first_min_partial_amount",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "first_min_partial_amount": {
            "type": "integer",
            "format": "int32"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options3"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR",
          "accept_partial": true,
          "first_min_partial_amount": 100,
          "reference_id": "#20",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "options": {
            "checkout": {
              "readonly": {
                "email": true,
                "contact": true
              }
            }
          }
        }
      },
      "Options3": {
        "title": "Options3",
        "required": [
          "checkout"
        ],
        "type": "object",
        "properties": {
          "checkout": {
            "$ref": "#/components/schemas/Checkout3"
          }
        },
        "example": {
          "checkout": {
            "readonly": {
              "email": true,
              "contact": true
            }
          }
        }
      },
      "Checkout3": {
        "title": "Checkout3",
        "required": [
          "readonly"
        ],
        "type": "object",
        "properties": {
          "readonly": {
            "$ref": "#/components/schemas/Readonly"
          }
        },
        "example": {
          "readonly": {
            "email": true,
            "contact": true
          }
        }
      },
      "Readonly": {
        "title": "Readonly",
        "required": [
          "email",
          "contact"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "boolean"
          },
          "contact": {
            "type": "boolean"
          }
        },
        "example": {
          "email": true,
          "contact": true
        }
      },
      "RenameLabelsinPaymentDetailsSectionRequest": {
        "title": "RenameLabelsinPaymentDetailsSectionRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "first_min_partial_amount",
          "reference_id",
          "description",
          "expire_by",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "first_min_partial_amount": {
            "type": "integer",
            "format": "int32"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "expire_by": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options4"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR",
          "accept_partial": true,
          "first_min_partial_amount": 100,
          "reference_id": "#412232",
          "description": "Payment for policy no #23456",
          "expire_by": 1599193801,
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "options": {
            "hosted_page": {
              "label": {
                "receipt": "Ref No.",
                "description": "Course Name",
                "amount_payable": "Course Fee Payable",
                "amount_paid": "Course Fee Paid",
                "partial_amount_due": "Fee Installment Due",
                "partial_amount_paid": "Fee Installment Paid",
                "expire_by": "Pay Before",
                "expired_on": "Link Expired. Please contact Admin",
                "amount_due": "Course Fee Due"
              },
              "show_preferences": {
                "issued_to": false
              }
            }
          }
        }
      },
      "Options4": {
        "title": "Options4",
        "required": [
          "hosted_page"
        ],
        "type": "object",
        "properties": {
          "hosted_page": {
            "$ref": "#/components/schemas/HostedPage"
          }
        },
        "example": {
          "hosted_page": {
            "label": {
              "receipt": "Ref No.",
              "description": "Course Name",
              "amount_payable": "Course Fee Payable",
              "amount_paid": "Course Fee Paid",
              "partial_amount_due": "Fee Installment Due",
              "partial_amount_paid": "Fee Installment Paid",
              "expire_by": "Pay Before",
              "expired_on": "Link Expired. Please contact Admin",
              "amount_due": "Course Fee Due"
            },
            "show_preferences": {
              "issued_to": false
            }
          }
        }
      },
      "HostedPage": {
        "title": "HostedPage",
        "required": [
          "label",
          "show_preferences"
        ],
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/Label"
          },
          "show_preferences": {
            "$ref": "#/components/schemas/ShowPreferences"
          }
        },
        "example": {
          "label": {
            "receipt": "Ref No.",
            "description": "Course Name",
            "amount_payable": "Course Fee Payable",
            "amount_paid": "Course Fee Paid",
            "partial_amount_due": "Fee Installment Due",
            "partial_amount_paid": "Fee Installment Paid",
            "expire_by": "Pay Before",
            "expired_on": "Link Expired. Please contact Admin",
            "amount_due": "Course Fee Due"
          },
          "show_preferences": {
            "issued_to": false
          }
        }
      },
      "Label": {
        "title": "Label",
        "required": [
          "receipt",
          "description",
          "amount_payable",
          "amount_paid",
          "partial_amount_due",
          "partial_amount_paid",
          "expire_by",
          "expired_on",
          "amount_due"
        ],
        "type": "object",
        "properties": {
          "receipt": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount_payable": {
            "type": "string"
          },
          "amount_paid": {
            "type": "string"
          },
          "partial_amount_due": {
            "type": "string"
          },
          "partial_amount_paid": {
            "type": "string"
          },
          "expire_by": {
            "type": "string"
          },
          "expired_on": {
            "type": "string"
          },
          "amount_due": {
            "type": "string"
          }
        },
        "example": {
          "receipt": "Ref No.",
          "description": "Course Name",
          "amount_payable": "Course Fee Payable",
          "amount_paid": "Course Fee Paid",
          "partial_amount_due": "Fee Installment Due",
          "partial_amount_paid": "Fee Installment Paid",
          "expire_by": "Pay Before",
          "expired_on": "Link Expired. Please contact Admin",
          "amount_due": "Course Fee Due"
        }
      },
      "ShowPreferences": {
        "title": "ShowPreferences",
        "required": [
          "issued_to"
        ],
        "type": "object",
        "properties": {
          "issued_to": {
            "type": "boolean"
          }
        },
        "example": {
          "issued_to": false
        }
      },
      "NetbankingRequest": {
        "title": "NetbankingRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "first_min_partial_amount",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "first_min_partial_amount": {
            "type": "integer",
            "format": "int32"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options5"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR",
          "accept_partial": true,
          "first_min_partial_amount": 100,
          "reference_id": "#4sds25",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "options": {
            "order": {
              "method": "netbanking",
              "bank_account": {
                "account_number": "04300040049999",
                "name": "Gaurav Kumar",
                "ifsc": "KKBK0000430"
              }
            }
          }
        }
      },
      "Options5": {
        "title": "Options5",
        "required": [
          "order"
        ],
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          }
        },
        "example": {
          "order": {
            "method": "netbanking",
            "bank_account": {
              "account_number": "04300040049999",
              "name": "Gaurav Kumar",
              "ifsc": "KKBK0000430"
            }
          }
        }
      },
      "Order": {
        "title": "Order",
        "required": [
          "method",
          "bank_account"
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string"
          },
          "bank_account": {
            "$ref": "#/components/schemas/BankAccount"
          }
        },
        "example": {
          "method": "netbanking",
          "bank_account": {
            "account_number": "04300040049999",
            "name": "Gaurav Kumar",
            "ifsc": "KKBK0000430"
          }
        }
      },
      "BankAccount": {
        "title": "BankAccount",
        "required": [
          "account_number",
          "name",
          "ifsc"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ifsc": {
            "type": "string"
          }
        },
        "example": {
          "account_number": "04300040049999",
          "name": "Gaurav Kumar",
          "ifsc": "KKBK0000430"
        }
      },
      "UPIREQUEST": {
        "title": "UPIREQUEST",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "first_min_partial_amount",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "first_min_partial_amount": {
            "type": "integer",
            "format": "int32"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options5"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR",
          "accept_partial": true,
          "first_min_partial_amount": 100,
          "reference_id": "#42226",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "options": {
            "order": {
              "method": "upi",
              "bank_account": {
                "account_number": "04300040049999",
                "name": "Gaurav Kumar",
                "ifsc": "KKBK0000430"
              }
            }
          }
        }
      },
      "EitherRequest": {
        "title": "EitherRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "first_min_partial_amount",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "first_min_partial_amount": {
            "type": "integer",
            "format": "int32"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options7"
          }
        },
        "example": {
          "amount": 1000,
          "currency": "INR",
          "accept_partial": true,
          "first_min_partial_amount": 100,
          "reference_id": "#qw427",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "options": {
            "order": {
              "bank_account": {
                "account_number": "04300050077634",
                "name": "Gaurav Kumar",
                "ifsc": "KKBK0000430"
              }
            }
          }
        }
      },
      "Options7": {
        "title": "Options7",
        "required": [
          "order"
        ],
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order2"
          }
        },
        "example": {
          "order": {
            "bank_account": {
              "account_number": "04300050077634",
              "name": "Gaurav Kumar",
              "ifsc": "KKBK0000430"
            }
          }
        }
      },
      "Order2": {
        "title": "Order2",
        "required": [
          "bank_account"
        ],
        "type": "object",
        "properties": {
          "bank_account": {
            "$ref": "#/components/schemas/BankAccount"
          }
        },
        "example": {
          "bank_account": {
            "account_number": "04300050077634",
            "name": "Gaurav Kumar",
            "ifsc": "KKBK0000430"
          }
        }
      },
      "TransferPaymentLinkAmounttoLinkedAccountRequest": {
        "title": "TransferPaymentLinkAmounttoLinkedAccountRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options8"
          }
        },
        "example": {
          "amount": 1500,
          "currency": "INR",
          "accept_partial": false,
          "reference_id": "#aasasw8",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": true,
          "options": {
            "order": {
              "transfers": [
                {
                  "account": "acc_CPRsN1LkFccllA",
                  "amount": 500,
                  "currency": "INR",
                  "notes": {
                    "branch": "Acme Corp Bangalore North",
                    "name": "Bhairav Kumar"
                  },
                  "linked_account_notes": [
                    "branch"
                  ]
                },
                {
                  "account": "acc_CNo3jSI8OkFJJJ",
                  "amount": 500,
                  "currency": "INR",
                  "notes": {
                    "branch": "Acme Corp Bangalore South",
                    "name": "Saurav Kumar"
                  },
                  "linked_account_notes": [
                    "branch"
                  ]
                }
              ]
            }
          }
        }
      },
      "Options8": {
        "title": "Options8",
        "required": [
          "order"
        ],
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order3"
          }
        },
        "example": {
          "order": {
            "transfers": [
              {
                "account": "acc_CPRsN1LkFccllA",
                "amount": 500,
                "currency": "INR",
                "notes": {
                  "branch": "Acme Corp Bangalore North",
                  "name": "Bhairav Kumar"
                },
                "linked_account_notes": [
                  "branch"
                ]
              },
              {
                "account": "acc_CNo3jSI8OkFJJJ",
                "amount": 500,
                "currency": "INR",
                "notes": {
                  "branch": "Acme Corp Bangalore South",
                  "name": "Saurav Kumar"
                },
                "linked_account_notes": [
                  "branch"
                ]
              }
            ]
          }
        }
      },
      "Order3": {
        "title": "Order3",
        "required": [
          "transfers"
        ],
        "type": "object",
        "properties": {
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transfer"
            },
            "description": ""
          }
        },
        "example": {
          "transfers": [
            {
              "account": "acc_CPRsN1LkFccllA",
              "amount": 500,
              "currency": "INR",
              "notes": {
                "branch": "Acme Corp Bangalore North",
                "name": "Bhairav Kumar"
              },
              "linked_account_notes": [
                "branch"
              ]
            },
            {
              "account": "acc_CNo3jSI8OkFJJJ",
              "amount": 500,
              "currency": "INR",
              "notes": {
                "branch": "Acme Corp Bangalore South",
                "name": "Saurav Kumar"
              },
              "linked_account_notes": [
                "branch"
              ]
            }
          ]
        }
      },
      "Transfer": {
        "title": "Transfer",
        "required": [
          "account",
          "amount",
          "currency",
          "notes",
          "linked_account_notes"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes13"
          },
          "linked_account_notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "account": "acc_CPRsN1LkFccllA",
          "amount": 500,
          "currency": "INR",
          "notes": {
            "branch": "Acme Corp Bangalore North",
            "name": "Bhairav Kumar"
          },
          "linked_account_notes": [
            "branch"
          ]
        }
      },
      "Notes13": {
        "title": "Notes13",
        "required": [
          "branch",
          "name"
        ],
        "type": "object",
        "properties": {
          "branch": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "branch": "Acme Corp Bangalore North",
          "name": "Bhairav Kumar"
        }
      },
      "OffersonPaymentLinksRequest": {
        "title": "OffersonPaymentLinksRequest",
        "required": [
          "amount",
          "currency",
          "accept_partial",
          "reference_id",
          "description",
          "customer",
          "notify",
          "reminder_enable",
          "options"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "accept_partial": {
            "type": "boolean"
          },
          "reference_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer1"
          },
          "notify": {
            "$ref": "#/components/schemas/Notify"
          },
          "reminder_enable": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options9"
          }
        },
        "example": {
          "amount": 3400,
          "currency": "INR",
          "accept_partial": false,
          "reference_id": "#425",
          "description": "Payment for policy no #23456",
          "customer": {
            "name": "Gaurav Kumar",
            "contact": "+919999999999",
            "email": "gaurav.kumar@example.com"
          },
          "notify": {
            "sms": true,
            "email": true
          },
          "reminder_enable": false,
          "options": {
            "order": {
              "offers": [
                "offer_F4WMTC3pwFKnzq",
                "offer_F4WJHqvGzw8dWF"
              ]
            }
          }
        }
      },
      "Options9": {
        "title": "Options9",
        "required": [
          "order"
        ],
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order4"
          }
        },
        "example": {
          "order": {
            "offers": [
              "offer_F4WMTC3pwFKnzq",
              "offer_F4WJHqvGzw8dWF"
            ]
          }
        }
      },
      "Order4": {
        "title": "Order4",
        "required": [
          "offers"
        ],
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "offers": [
            "offer_F4WMTC3pwFKnzq",
            "offer_F4WJHqvGzw8dWF"
          ]
        }
      },
      "RefundPaymentsMadetoaVirtualAccountRequest": {
        "title": "RefundPaymentsMadetoaVirtualAccountRequest",
        "required": [
          "amount",
          "notes"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes14"
          }
        },
        "example": {
          "amount": 100,
          "notes": {
            "key_1": "value1",
            "key_2": "value2"
          }
        }
      },
      "Notes14": {
        "title": "Notes14",
        "required": [
          "key_1",
          "key_2"
        ],
        "type": "object",
        "properties": {
          "key_1": {
            "type": "string"
          },
          "key_2": {
            "type": "string"
          }
        },
        "example": {
          "key_1": "value1",
          "key_2": "value2"
        }
      },
      "UpdateaVirtualAccountRequest": {
        "title": "UpdateaVirtualAccountRequest",
        "required": [
          "receivers"
        ],
        "type": "object",
        "properties": {
          "receivers": {
            "$ref": "#/components/schemas/Receivers"
          }
        },
        "example": {
          "receivers": {
            "types": [
              "vpa"
            ]
          }
        }
      },
      "Receivers": {
        "title": "Receivers",
        "required": [
          "types"
        ],
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "types": [
            "vpa"
          ]
        }
      },
      "CreateaVirtualAccountRequest": {
        "title": "CreateaVirtualAccountRequest",
        "required": [
          "receivers",
          "allowed_payers",
          "description",
          "customer_id",
          "close_by",
          "notes"
        ],
        "type": "object",
        "properties": {
          "receivers": {
            "$ref": "#/components/schemas/Receivers"
          },
          "allowed_payers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedPayer"
            },
            "description": ""
          },
          "description": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "close_by": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes15"
          }
        },
        "example": {
          "receivers": {
            "types": [
              "bank_account"
            ]
          },
          "allowed_payers": [
            {
              "type": "bank_account",
              "bank_account": {
                "ifsc": "UTIB0000013",
                "account_number": "914010012345679"
              }
            },
            {
              "type": "bank_account",
              "bank_account": {
                "ifsc": "UTIB0000014",
                "account_number": "914010012345680"
              }
            }
          ],
          "description": "Virtual Account created for Raftar Soft",
          "customer_id": "cust_CaVDm8eDRSXYME",
          "close_by": 1981615838,
          "notes": {
            "project_name": "Banking Software"
          }
        }
      },
      "AllowedPayer": {
        "title": "AllowedPayer",
        "required": [
          "type",
          "bank_account"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "bank_account": {
            "$ref": "#/components/schemas/BankAccount3"
          }
        },
        "example": {
          "type": "bank_account",
          "bank_account": {
            "ifsc": "UTIB0000013",
            "account_number": "914010012345679"
          }
        }
      },
      "BankAccount3": {
        "title": "BankAccount3",
        "required": [
          "ifsc",
          "account_number"
        ],
        "type": "object",
        "properties": {
          "ifsc": {
            "type": "string"
          },
          "account_number": {
            "type": "string"
          }
        },
        "example": {
          "ifsc": "UTIB0000013",
          "account_number": "914010012345679"
        }
      },
      "Notes15": {
        "title": "Notes15",
        "required": [
          "project_name"
        ],
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string"
          }
        },
        "example": {
          "project_name": "Banking Software"
        }
      },
      "AddanAllowedPayerAccountRequest": {
        "title": "AddanAllowedPayerAccountRequest",
        "required": [
          "type",
          "bank_account"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "bank_account": {
            "$ref": "#/components/schemas/BankAccount3"
          }
        },
        "example": {
          "type": "bank_account",
          "bank_account": {
            "ifsc": "UTIB0000013",
            "account_number": "914010012345679"
          }
        }
      },
      "CreateaVirtualAccountRequest1": {
        "title": "CreateaVirtualAccountRequest1",
        "required": [
          "receivers",
          "description",
          "customer_id",
          "close_by",
          "notes"
        ],
        "type": "object",
        "properties": {
          "receivers": {
            "$ref": "#/components/schemas/Receivers"
          },
          "description": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "close_by": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes15"
          }
        },
        "example": {
          "receivers": {
            "types": [
              "bank_account"
            ]
          },
          "description": "Virtual Account created for Raftar Soft",
          "customer_id": "cust_id",
          "close_by": 1681615838,
          "notes": {
            "project_name": "Banking Software"
          }
        }
      },
      "CreateaVPARequest": {
        "title": "CreateaVPARequest",
        "required": [
          "receivers",
          "description",
          "customer_id",
          "close_by"
        ],
        "type": "object",
        "properties": {
          "receivers": {
            "$ref": "#/components/schemas/Receivers"
          },
          "description": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "close_by": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "receivers": {
            "types": [
              "vpa"
            ]
          },
          "description": "Receive payment instalment from Gaurav Kumar- Flat No 105",
          "customer_id": "cust_id",
          "close_by": 1681615838
        }
      },
      "CreateVirtualAccountandVPARequest": {
        "title": "CreateVirtualAccountandVPARequest",
        "required": [
          "receivers",
          "description",
          "customer_id",
          "close_by"
        ],
        "type": "object",
        "properties": {
          "receivers": {
            "$ref": "#/components/schemas/Receivers"
          },
          "description": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "close_by": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "receivers": {
            "types": [
              "vpa",
              "bank_account"
            ]
          },
          "description": "Receive payment instalment from Gaurav Kumar- Flat No 105",
          "customer_id": "cust_id",
          "close_by": 1681615838
        }
      },
      "UpdateaVirtualAccountRequest1": {
        "title": "UpdateaVirtualAccountRequest1",
        "required": [
          "types",
          "vpa"
        ],
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "vpa": {
            "$ref": "#/components/schemas/Vpa"
          }
        },
        "example": {
          "types": [
            "vpa"
          ],
          "vpa": {
            "descriptor": "gaurikumar"
          }
        }
      },
      "Vpa": {
        "title": "Vpa",
        "required": [
          "descriptor"
        ],
        "type": "object",
        "properties": {
          "descriptor": {
            "type": "string"
          }
        },
        "example": {
          "descriptor": "gaurikumar"
        }
      },
      "TransferviaOrdersRequest": {
        "title": "TransferviaOrdersRequest",
        "required": [
          "amount",
          "payment_capture",
          "currency",
          "transfers"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "payment_capture": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transfer1"
            },
            "description": ""
          }
        }
      },
      "Transfer1": {
        "title": "Transfer1",
        "required": [
          "account",
          "amount",
          "currency",
          "notes",
          "linked_account_notes",
          "on_hold",
          "on_hold_until"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes13"
          },
          "linked_account_notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "on_hold": {
            "type": "boolean"
          },
          "on_hold_until": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              {
                "type": "string",
                "nullable": true
              },
              {
                "nullable": true
              }
            ]
          }
        },
        "example": {
          "account": "acc_id",
          "amount": 100,
          "currency": "INR",
          "notes": {
            "branch": "Acme Corp Bangalore North",
            "name": "Gaurav Kumar"
          },
          "linked_account_notes": [
            "branch"
          ],
          "on_hold": true,
          "on_hold_until": 1691222870
        }
      },
      "TransferviaPaymentsRequest": {
        "title": "TransferviaPaymentsRequest",
        "required": [
          "transfers"
        ],
        "type": "object",
        "properties": {
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transfer2"
            },
            "description": ""
          }
        },
        "example": {
          "transfers": [
            {
              "account": "acc_id",
              "amount": 100,
              "currency": "INR",
              "notes": {
                "name": "Gaurav Kumar",
                "roll_no": "IEC2011025"
              },
              "linked_account_notes": [
                "roll_no"
              ],
              "on_hold": true,
              "on_hold_until": 1671222870
            },
            {
              "account": "acc_id",
              "amount": 100,
              "currency": "INR",
              "notes": {
                "name": "Saurav Kumar",
                "roll_no": "IEC2011026"
              },
              "linked_account_notes": [
                "roll_no"
              ],
              "on_hold": false
            }
          ]
        }
      },
      "Transfer2": {
        "title": "Transfer2",
        "required": [
          "account",
          "amount",
          "currency",
          "notes",
          "linked_account_notes",
          "on_hold"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes19"
          },
          "linked_account_notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "on_hold": {
            "type": "boolean"
          },
          "on_hold_until": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "account": "acc_id",
          "amount": 100,
          "currency": "INR",
          "notes": {
            "name": "Gaurav Kumar",
            "roll_no": "IEC2011025"
          },
          "linked_account_notes": [
            "roll_no"
          ],
          "on_hold": true,
          "on_hold_until": 1671222870
        }
      },
      "Notes19": {
        "title": "Notes19",
        "required": [
          "name",
          "roll_no"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "roll_no": {
            "type": "string"
          }
        },
        "example": {
          "name": "Gaurav Kumar",
          "roll_no": "IEC2011025"
        }
      },
      "DirectTransferRequest": {
        "title": "DirectTransferRequest",
        "required": [
          "account",
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          }
        },
        "example": {
          "account": "acc_id",
          "amount": 100,
          "currency": "INR"
        }
      },
      "ModifyTransferSettlementHoldRequest": {
        "title": "ModifyTransferSettlementHoldRequest",
        "required": [
          "on_hold",
          "on_hold_until"
        ],
        "type": "object",
        "properties": {
          "on_hold": {
            "type": "integer",
            "format": "int32"
          },
          "on_hold_until": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "on_hold": 1,
          "on_hold_until": 1979691505
        }
      },
      "HoldSettlementsForTransfersRequest": {
        "title": "HoldSettlementsForTransfersRequest",
        "required": [
          "transfers"
        ],
        "type": "object",
        "properties": {
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transfer3"
            },
            "description": ""
          }
        },
        "example": {
          "transfers": [
            {
              "amount": 100,
              "account": "acc_id",
              "currency": "INR",
              "on_hold": 1
            }
          ]
        }
      },
      "Transfer3": {
        "title": "Transfer3",
        "required": [
          "amount",
          "account",
          "currency",
          "on_hold"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "account": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "on_hold": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "amount": 100,
          "account": "acc_id",
          "currency": "INR",
          "on_hold": 1
        }
      },
      "RefundsRequest": {
        "title": "RefundsRequest",
        "required": [
          "amount",
          "reverse_all"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "reverse_all": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "amount": 100,
          "reverse_all": 1
        }
      },
      "TransferReversalsRequest": {
        "title": "TransferReversalsRequest",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "amount": 100
        }
      },
      "CreateanItemRequest": {
        "title": "CreateanItemRequest",
        "required": [
          "name",
          "description",
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          }
        },
        "example": {
          "name": "Yellow Herb",
          "description": "Yellow herb from Resident Evil",
          "amount": 50000,
          "currency": "INR"
        }
      },
      "UpdateanItemRequest": {
        "title": "UpdateanItemRequest",
        "required": [
          "name",
          "description",
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          }
        },
        "example": {
          "name": "Green Herb",
          "description": "Green herb from Resident Evil",
          "amount": 70000,
          "currency": "INR"
        }
      },
      "CreateContactRequest": {
        "title": "CreateContactRequest",
        "required": [
          "name",
          "email",
          "contact",
          "type",
          "reference_id",
          "notes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "contact": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "reference_id": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes20"
          }
        },
        "example": {
          "name": "Gaurav Kumar",
          "email": "gauravkumar@example.com",
          "contact": 9123456789,
          "type": "employee",
          "reference_id": "Acme Contact ID 12345",
          "notes": {
            "random_key_1": "Make it so.",
            "random_key_2": "Tea. Earl Grey. Hot."
          }
        }
      },
      "Notes20": {
        "title": "Notes20",
        "required": [
          "random_key_1",
          "random_key_2"
        ],
        "type": "object",
        "properties": {
          "random_key_1": {
            "type": "string"
          },
          "random_key_2": {
            "type": "string"
          }
        },
        "example": {
          "random_key_1": "Make it so.",
          "random_key_2": "Tea. Earl Grey. Hot."
        }
      },
      "UpdateContactRequest": {
        "title": "UpdateContactRequest",
        "required": [
          "name",
          "email",
          "contact",
          "type",
          "reference_id",
          "notes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "contact": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "reference_id": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes20"
          }
        },
        "example": {
          "name": "Gaurav Kumar Updated",
          "email": "gaurav.kumar@example.com",
          "contact": 9876543210,
          "type": "self",
          "reference_id": "Acme Contact ID 12345 Updated",
          "notes": {
            "random_key_1": "Tea. Earl Grey. Hot.",
            "random_key_2": "Tea. Earl Grey. Decaf..."
          }
        }
      },
      "ActivateorDeactivateaContactRequest": {
        "title": "ActivateorDeactivateaContactRequest",
        "required": [
          "active"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          }
        },
        "example": {
          "active": false
        }
      },
      "CreateFundAccount-BankAccountRequest": {
        "title": "CreateFundAccount-BankAccountRequest",
        "required": [
          "contact_id",
          "account_type",
          "bank_account"
        ],
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "bank_account": {
            "$ref": "#/components/schemas/BankAccount"
          }
        },
        "example": {
          "contact_id": "{cont_id}",
          "account_type": "bank_account",
          "bank_account": {
            "name": "Gaurav Kumar",
            "ifsc": "HDFC0009107",
            "account_number": "50100102283912"
          }
        }
      },
      "CreateFundAccount-CardRequest": {
        "title": "CreateFundAccount-CardRequest",
        "required": [
          "contact_id",
          "account_type",
          "card"
        ],
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          }
        },
        "example": {
          "contact_id": "{cont_id}",
          "account_type": "card",
          "card": {
            "name": "Gaurav Kumar",
            "number": "5104015555555558"
          }
        }
      },
      "Card": {
        "title": "Card",
        "required": [
          "name",
          "number"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "example": {
          "name": "Gaurav Kumar",
          "number": "5104015555555558"
        }
      },
      "Create-FundAccount-VPARequest": {
        "title": "Create-FundAccount-VPARequest",
        "required": [
          "contact_id",
          "account_type",
          "vpa"
        ],
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "vpa": {
            "$ref": "#/components/schemas/Vpa1"
          }
        },
        "example": {
          "contact_id": "{cont_id}",
          "account_type": "vpa",
          "vpa": {
            "address": "gaurav.kumar@exampleupi"
          }
        }
      },
      "Vpa1": {
        "title": "Vpa1",
        "required": [
          "address"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        },
        "example": {
          "address": "gaurav.kumar@exampleupi"
        }
      },
      "CreatePayout-BankAccountRequest": {
        "title": "CreatePayout-BankAccountRequest",
        "required": [
          "account_number",
          "fund_account_id",
          "amount",
          "currency",
          "mode",
          "purpose",
          "queue_if_low_balance",
          "reference_id",
          "narration",
          "notes"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "fund_account_id": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "queue_if_low_balance": {
            "type": "boolean"
          },
          "reference_id": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "account_number": "7878780080316316",
          "fund_account_id": "fa_00000000000001",
          "amount": 1000000,
          "currency": "INR",
          "mode": "IMPS",
          "purpose": "refund",
          "queue_if_low_balance": true,
          "reference_id": "Acme Transaction ID 12345",
          "narration": "Acme Corp Fund Transfer",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "CreatePayout-VPARequest": {
        "title": "CreatePayout-VPARequest",
        "required": [
          "account_number",
          "fund_account_id",
          "amount",
          "currency",
          "mode",
          "purpose",
          "queue_if_low_balance",
          "reference_id",
          "narration",
          "notes"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "fund_account_id": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "queue_if_low_balance": {
            "type": "boolean"
          },
          "reference_id": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "account_number": "7878780080316316",
          "fund_account_id": "fa_00000000000001",
          "amount": 1000000,
          "currency": "INR",
          "mode": "UPI",
          "purpose": "refund",
          "queue_if_low_balance": true,
          "reference_id": "Acme Transaction ID 12345",
          "narration": "Acme Corp Fund Transfer",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "CompositeAPI-BankAccountRequest": {
        "title": "CompositeAPI-BankAccountRequest",
        "required": [
          "account_number",
          "amount",
          "currency",
          "mode",
          "purpose",
          "fund_account",
          "queue_if_low_balance",
          "reference_id",
          "narration",
          "notes"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "fund_account": {
            "$ref": "#/components/schemas/FundAccount"
          },
          "queue_if_low_balance": {
            "type": "boolean"
          },
          "reference_id": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "account_number": "account_number",
          "amount": 100,
          "currency": "INR",
          "mode": "NEFT",
          "purpose": "refund",
          "fund_account": {
            "account_type": "bank_account",
            "bank_account": {
              "name": "Gaurav Kumar",
              "ifsc": "HDFC0001234",
              "account_number": "1121431121541121"
            },
            "contact": {
              "name": "Gaurav Kumar",
              "email": "gaurav.kumar@example.com",
              "contact": "9876543210",
              "type": "employee",
              "reference_id": "Acme Contact ID 12345",
              "notes": {
                "notes_key_1": "Tea, Earl Grey, Hot",
                "notes_key_2": "Tea, Earl Grey… decaf."
              }
            }
          },
          "queue_if_low_balance": true,
          "reference_id": "Acme Transaction ID 12345",
          "narration": "Acme Corp Fund Transfer",
          "notes": {
            "notes_key_1": "Beam me up Scotty",
            "notes_key_2": "Engage"
          }
        }
      },
      "FundAccount": {
        "title": "FundAccount",
        "required": [
          "account_type",
          "bank_account",
          "contact"
        ],
        "type": "object",
        "properties": {
          "account_type": {
            "type": "string"
          },
          "bank_account": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "example": {
          "account_type": "bank_account",
          "bank_account": {
            "name": "Gaurav Kumar",
            "ifsc": "HDFC0001234",
            "account_number": "1121431121541121"
          },
          "contact": {
            "name": "Gaurav Kumar",
            "email": "gaurav.kumar@example.com",
            "contact": "9876543210",
            "type": "employee",
            "reference_id": "Acme Contact ID 12345",
            "notes": {
              "notes_key_1": "Tea, Earl Grey, Hot",
              "notes_key_2": "Tea, Earl Grey… decaf."
            }
          }
        }
      },
      "Contact": {
        "title": "Contact",
        "required": [
          "name",
          "email",
          "contact",
          "type",
          "reference_id",
          "notes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "reference_id": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "name": "Gaurav Kumar",
          "email": "gaurav.kumar@example.com",
          "contact": "9876543210",
          "type": "employee",
          "reference_id": "Acme Contact ID 12345",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "CompositeAPI-VPARequest": {
        "title": "CompositeAPI-VPARequest",
        "required": [
          "account_number",
          "amount",
          "currency",
          "mode",
          "purpose",
          "fund_account",
          "queue_if_low_balance",
          "reference_id",
          "narration",
          "notes"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "fund_account": {
            "$ref": "#/components/schemas/FundAccount1"
          },
          "queue_if_low_balance": {
            "type": "boolean"
          },
          "reference_id": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "account_number": "account_number",
          "amount": 10000,
          "currency": "INR",
          "mode": "UPI",
          "purpose": "refund",
          "fund_account": {
            "account_type": "vpa",
            "vpa": {
              "address": "gauravkumar@exampleupi"
            },
            "contact": {
              "name": "Gaurav Kumar",
              "email": "gaurav.kumar@example.com",
              "contact": "9876543210",
              "type": "employee",
              "reference_id": "Acme Contact ID 12345",
              "notes": {
                "notes_key_1": "Tea, Earl Grey, Hot",
                "notes_key_2": "Tea, Earl Grey… decaf."
              }
            }
          },
          "queue_if_low_balance": true,
          "reference_id": "Acme Transaction ID 12345",
          "narration": "Acme Corp Fund Transfer",
          "notes": {
            "notes_key_1": "Beam me up Scotty",
            "notes_key_2": "Engage"
          }
        }
      },
      "FundAccount1": {
        "title": "FundAccount1",
        "required": [
          "account_type",
          "vpa",
          "contact"
        ],
        "type": "object",
        "properties": {
          "account_type": {
            "type": "string"
          },
          "vpa": {
            "$ref": "#/components/schemas/Vpa1"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "example": {
          "account_type": "vpa",
          "vpa": {
            "address": "gauravkumar@exampleupi"
          },
          "contact": {
            "name": "Gaurav Kumar",
            "email": "gaurav.kumar@example.com",
            "contact": "9876543210",
            "type": "employee",
            "reference_id": "Acme Contact ID 12345",
            "notes": {
              "notes_key_1": "Tea, Earl Grey, Hot",
              "notes_key_2": "Tea, Earl Grey… decaf."
            }
          }
        }
      },
      "CompositeAPI-CardRequest": {
        "title": "CompositeAPI-CardRequest",
        "required": [
          "account_number",
          "amount",
          "currency",
          "mode",
          "purpose",
          "fund_account",
          "queue_if_low_balance",
          "reference_id",
          "narration",
          "notes"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "fund_account": {
            "$ref": "#/components/schemas/FundAccount2"
          },
          "queue_if_low_balance": {
            "type": "boolean"
          },
          "reference_id": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "account_number": "account_number",
          "amount": 10000,
          "currency": "INR",
          "mode": "IMPS",
          "purpose": "refund",
          "fund_account": {
            "account_type": "card",
            "card": {
              "number": "4550386024962002",
              "name": "Gaurav Kumar"
            },
            "contact": {
              "name": "Gaurav Kumar",
              "email": "gaurav.kumar@example.com",
              "contact": "9876543210",
              "type": "employee",
              "reference_id": "Acme Contact ID 12345",
              "notes": {
                "notes_key_1": "Tea, Earl Grey, Hot",
                "notes_key_2": "Tea, Earl Grey… decaf."
              }
            }
          },
          "queue_if_low_balance": true,
          "reference_id": "Acme Transaction ID 12345",
          "narration": "Acme Corp Fund Transfer",
          "notes": {
            "notes_key_1": "Beam me up Scotty",
            "notes_key_2": "Engage"
          }
        }
      },
      "FundAccount2": {
        "title": "FundAccount2",
        "required": [
          "account_type",
          "card",
          "contact"
        ],
        "type": "object",
        "properties": {
          "account_type": {
            "type": "string"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "example": {
          "account_type": "card",
          "card": {
            "number": "4550386024962002",
            "name": "Gaurav Kumar"
          },
          "contact": {
            "name": "Gaurav Kumar",
            "email": "gaurav.kumar@example.com",
            "contact": "9876543210",
            "type": "employee",
            "reference_id": "Acme Contact ID 12345",
            "notes": {
              "notes_key_1": "Tea, Earl Grey, Hot",
              "notes_key_2": "Tea, Earl Grey… decaf."
            }
          }
        }
      },
      "CreatePayoutLinkusingcustomerdetailsRequest": {
        "title": "CreatePayoutLinkusingcustomerdetailsRequest",
        "required": [
          "account_number",
          "contact",
          "amount",
          "currency",
          "purpose",
          "description",
          "receipt",
          "notes"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact3"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "receipt": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes20"
          }
        },
        "example": {
          "account_number": "account_number",
          "contact": {
            "name": "Gaurav Kumar",
            "type": "customer",
            "contact": "912345678",
            "email": "gaurav.kumar@example.com"
          },
          "amount": 1000,
          "currency": "INR",
          "purpose": "refund",
          "description": "Payout link for Gaurav Kumar",
          "receipt": "Receipt No. 1",
          "notes": {
            "random_key_1": "Make it so.",
            "random_key_2": "Tea. Earl Grey. Hot."
          }
        }
      },
      "Contact3": {
        "title": "Contact3",
        "required": [
          "name",
          "type",
          "contact",
          "email"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "name": "Gaurav Kumar",
          "type": "customer",
          "contact": "912345678",
          "email": "gaurav.kumar@example.com"
        }
      },
      "CreatePayoutLinkusingcustomer_idRequest": {
        "title": "CreatePayoutLinkusingcustomer_idRequest",
        "required": [
          "account_number",
          "contact",
          "amount",
          "currency",
          "purpose",
          "description",
          "receipt",
          "notes"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact4"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "receipt": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes20"
          }
        },
        "example": {
          "account_number": "account_number",
          "contact": {
            "id": "{cont_id}"
          },
          "amount": 1000,
          "currency": "INR",
          "purpose": "refund",
          "description": "Payout link for Gaurav Kumar",
          "receipt": "Receipt No. 1",
          "notes": {
            "random_key_1": "Make it so.",
            "random_key_2": "Tea. Earl Grey. Hot."
          }
        }
      },
      "Contact4": {
        "title": "Contact4",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "example": {
          "id": "{cont_id}"
        }
      },
      "CreateContactRequest1": {
        "title": "CreateContactRequest1",
        "required": [
          "name",
          "email",
          "contact",
          "type",
          "reference_id",
          "notes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "reference_id": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes32"
          }
        },
        "example": {
          "name": "Test",
          "email": "test@example.com",
          "contact": "9876543210",
          "type": "vendor",
          "reference_id": "12345",
          "notes": {
            "note_key": "Beam me up Scotty Updated"
          }
        }
      },
      "Notes32": {
        "title": "Notes32",
        "required": [
          "note_key"
        ],
        "type": "object",
        "properties": {
          "note_key": {
            "type": "string"
          }
        },
        "example": {
          "note_key": "Beam me up Scotty Updated"
        }
      },
      "ValidateFundAccountRequest": {
        "title": "ValidateFundAccountRequest",
        "required": [
          "account_number",
          "fund_account",
          "amount",
          "currency",
          "notes"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "fund_account": {
            "$ref": "#/components/schemas/FundAccount3"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes20"
          }
        },
        "example": {
          "account_number": "{account_number}",
          "fund_account": {
            "id": "{fund_account_id}"
          },
          "amount": 100,
          "currency": "INR",
          "notes": {
            "random_key_1": "Make it so.",
            "random_key_2": "Tea. Earl Grey. Hot."
          }
        }
      },
      "FundAccount3": {
        "title": "FundAccount3",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "example": {
          "id": "{fund_account_id}"
        }
      },
      "IdempotentRequestRequest": {
        "title": "IdempotentRequestRequest",
        "required": [
          "account_number",
          "fund_account_id",
          "amount",
          "currency",
          "mode",
          "purpose",
          "queue_if_low_balance",
          "reference_id",
          "narration",
          "notes"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "fund_account_id": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "queue_if_low_balance": {
            "type": "boolean"
          },
          "reference_id": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes"
          }
        },
        "example": {
          "account_number": "7878780080316316",
          "fund_account_id": "fa_00000000000001",
          "amount": 1000000,
          "currency": "INR",
          "mode": "IMPS",
          "purpose": "refund",
          "queue_if_low_balance": true,
          "reference_id": "Acme Transaction ID 12345",
          "narration": "Acme Corp Fund Transfer",
          "notes": {
            "notes_key_1": "Tea, Earl Grey, Hot",
            "notes_key_2": "Tea, Earl Grey… decaf."
          }
        }
      },
      "CreateanAccountRequest": {
        "title": "CreateanAccountRequest",
        "required": [
          "email",
          "phone",
          "legal_business_name",
          "business_type",
          "customer_facing_business_name",
          "profile",
          "legal_info",
          "brand",
          "notes",
          "tos_acceptance",
          "contact_info",
          "apps"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "legal_business_name": {
            "type": "string"
          },
          "business_type": {
            "type": "string"
          },
          "customer_facing_business_name": {
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "legal_info": {
            "$ref": "#/components/schemas/LegalInfo"
          },
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes35"
          },
          "tos_acceptance": {
            "$ref": "#/components/schemas/TosAcceptance"
          },
          "contact_info": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "apps": {
            "$ref": "#/components/schemas/Apps"
          }
        },
        "example": {
          "email": "gauriagain.kumar@example.org",
          "phone": "9999999999",
          "legal_business_name": "Acme Corp",
          "business_type": "partnership",
          "customer_facing_business_name": "Example",
          "profile": {
            "category": "healthcare",
            "subcategory": "clinic",
            "addresses": {
              "operation": {
                "street1": "507, Koramangala 6th block",
                "street2": "Kormanagala",
                "city": "Bengaluru",
                "state": "Karnataka",
                "postal_code": 560047,
                "country": "IN"
              },
              "registered": {
                "street1": "507, Koramangala 1st block",
                "street2": "MG Road",
                "city": "Bengaluru",
                "state": "Karnataka",
                "postal_code": 560034,
                "country": "IN"
              }
            },
            "business_model": "Healthcare E-commerce platform"
          },
          "legal_info": {
            "pan": "AAACL1234C",
            "gst": "18AABCU9603R1ZM"
          },
          "brand": {
            "color": "FFFFFF"
          },
          "notes": {
            "internal_ref_id": "123123"
          },
          "tos_acceptance": {
            "date": null,
            "ip": null,
            "user_agent": null
          },
          "contact_info": {
            "chargeback": {
              "email": "cb@example.org"
            },
            "refund": {
              "email": "cb@example.org"
            },
            "support": {
              "email": "support@example.org",
              "phone": "9999999998",
              "policy_url": "https://www.google.com"
            }
          },
          "apps": {
            "websites": [
              "https://www.example.org"
            ],
            "android": [
              {
                "url": "playstore.example.org",
                "name": "Example"
              }
            ],
            "ios": [
              {
                "url": "appstore.example.org",
                "name": "Example"
              }
            ]
          }
        }
      },
      "Profile": {
        "title": "Profile",
        "required": [
          "category",
          "subcategory",
          "addresses",
          "business_model"
        ],
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "subcategory": {
            "type": "string"
          },
          "addresses": {
            "$ref": "#/components/schemas/Addresses"
          },
          "business_model": {
            "type": "string"
          }
        },
        "example": {
          "category": "healthcare",
          "subcategory": "clinic",
          "addresses": {
            "operation": {
              "street1": "507, Koramangala 6th block",
              "street2": "Kormanagala",
              "city": "Bengaluru",
              "state": "Karnataka",
              "postal_code": 560047,
              "country": "IN"
            },
            "registered": {
              "street1": "507, Koramangala 1st block",
              "street2": "MG Road",
              "city": "Bengaluru",
              "state": "Karnataka",
              "postal_code": 560034,
              "country": "IN"
            }
          },
          "business_model": "Healthcare E-commerce platform"
        }
      },
      "Addresses": {
        "title": "Addresses",
        "required": [
          "operation",
          "registered"
        ],
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/Operation"
          },
          "registered": {
            "$ref": "#/components/schemas/Registered"
          }
        },
        "example": {
          "operation": {
            "street1": "507, Koramangala 6th block",
            "street2": "Kormanagala",
            "city": "Bengaluru",
            "state": "Karnataka",
            "postal_code": 560047,
            "country": "IN"
          },
          "registered": {
            "street1": "507, Koramangala 1st block",
            "street2": "MG Road",
            "city": "Bengaluru",
            "state": "Karnataka",
            "postal_code": 560034,
            "country": "IN"
          }
        }
      },
      "Operation": {
        "title": "Operation",
        "required": [
          "street1",
          "street2",
          "city",
          "state",
          "postal_code",
          "country"
        ],
        "type": "object",
        "properties": {
          "street1": {
            "type": "string"
          },
          "street2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "integer",
            "format": "int32"
          },
          "country": {
            "type": "string"
          }
        },
        "example": {
          "street1": "507, Koramangala 6th block",
          "street2": "Kormanagala",
          "city": "Bengaluru",
          "state": "Karnataka",
          "postal_code": 560047,
          "country": "IN"
        }
      },
      "Registered": {
        "title": "Registered",
        "required": [
          "street1",
          "street2",
          "city",
          "state",
          "postal_code",
          "country"
        ],
        "type": "object",
        "properties": {
          "street1": {
            "type": "string"
          },
          "street2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "integer",
            "format": "int32"
          },
          "country": {
            "type": "string"
          }
        },
        "example": {
          "street1": "507, Koramangala 1st block",
          "street2": "MG Road",
          "city": "Bengaluru",
          "state": "Karnataka",
          "postal_code": 560034,
          "country": "IN"
        }
      },
      "LegalInfo": {
        "title": "LegalInfo",
        "required": [
          "pan",
          "gst"
        ],
        "type": "object",
        "properties": {
          "pan": {
            "type": "string"
          },
          "gst": {
            "type": "string"
          }
        },
        "example": {
          "pan": "AAACL1234C",
          "gst": "18AABCU9603R1ZM"
        }
      },
      "Brand": {
        "title": "Brand",
        "required": [
          "color"
        ],
        "type": "object",
        "properties": {
          "color": {
            "type": "string"
          }
        },
        "example": {
          "color": "FFFFFF"
        }
      },
      "Notes35": {
        "title": "Notes35",
        "required": [
          "internal_ref_id"
        ],
        "type": "object",
        "properties": {
          "internal_ref_id": {
            "type": "string"
          }
        },
        "example": {
          "internal_ref_id": "123123"
        }
      },
      "TosAcceptance": {
        "title": "TosAcceptance",
        "required": [
          "date",
          "ip",
          "user_agent"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "user_agent": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "date": null,
          "ip": null,
          "user_agent": null
        }
      },
      "ContactInfo": {
        "title": "ContactInfo",
        "required": [
          "chargeback",
          "refund",
          "support"
        ],
        "type": "object",
        "properties": {
          "chargeback": {
            "$ref": "#/components/schemas/Chargeback"
          },
          "refund": {
            "$ref": "#/components/schemas/Refund"
          },
          "support": {
            "$ref": "#/components/schemas/Support"
          }
        },
        "example": {
          "chargeback": {
            "email": "cb@example.org"
          },
          "refund": {
            "email": "cb@example.org"
          },
          "support": {
            "email": "support@example.org",
            "phone": "9999999998",
            "policy_url": "https://www.google.com"
          }
        }
      },
      "Chargeback": {
        "title": "Chargeback",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "example": {
          "email": "cb@example.org"
        }
      },
      "Refund": {
        "title": "Refund",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "example": {
          "email": "cb@example.org"
        }
      },
      "Support": {
        "title": "Support",
        "required": [
          "email",
          "phone",
          "policy_url"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "policy_url": {
            "type": "string"
          }
        },
        "example": {
          "email": "support@example.org",
          "phone": "9999999998",
          "policy_url": "https://www.google.com"
        }
      },
      "Apps": {
        "title": "Apps",
        "required": [
          "websites",
          "android",
          "ios"
        ],
        "type": "object",
        "properties": {
          "websites": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "android": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Android"
            },
            "description": ""
          },
          "ios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Io"
            },
            "description": ""
          }
        },
        "example": {
          "websites": [
            "https://www.example.org"
          ],
          "android": [
            {
              "url": "playstore.example.org",
              "name": "Example"
            }
          ],
          "ios": [
            {
              "url": "appstore.example.org",
              "name": "Example"
            }
          ]
        }
      },
      "Android": {
        "title": "Android",
        "required": [
          "url",
          "name"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "url": "playstore.example.org",
          "name": "Example"
        }
      },
      "Io": {
        "title": "Io",
        "required": [
          "url",
          "name"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "url": "appstore.example.org",
          "name": "Example"
        }
      },
      "UpdateanAccountRequest": {
        "title": "UpdateanAccountRequest",
        "required": [
          "customer_facing_business_name"
        ],
        "type": "object",
        "properties": {
          "customer_facing_business_name": {
            "type": "string"
          }
        },
        "example": {
          "customer_facing_business_name": "ABCD Ltd"
        }
      },
      "CreateaStakeholderRequest": {
        "title": "CreateaStakeholderRequest",
        "required": [
          "percentage_ownership",
          "name",
          "email",
          "relationship",
          "phone",
          "addresses",
          "kyc",
          "notes"
        ],
        "type": "object",
        "properties": {
          "percentage_ownership": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "relationship": {
            "$ref": "#/components/schemas/Relationship"
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "addresses": {
            "$ref": "#/components/schemas/Addresses1"
          },
          "kyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes36"
          }
        },
        "example": {
          "percentage_ownership": 10,
          "name": "Gaurav Kumar",
          "email": "gaurav.kumar@example.com",
          "relationship": {
            "director": true,
            "executive": false
          },
          "phone": {
            "primary": "7474747474",
            "secondary": "7474747474"
          },
          "addresses": {
            "residential": {
              "street": "506, Koramangala 1st block",
              "city": "Bengaluru",
              "state": "Karnataka",
              "postal_code": "560034",
              "country": "IN"
            }
          },
          "kyc": {
            "pan": "AVOPB1111K"
          },
          "notes": {
            "random_key_by_partner": "random_value"
          }
        }
      },
      "Relationship": {
        "title": "Relationship",
        "required": [
          "director",
          "executive"
        ],
        "type": "object",
        "properties": {
          "director": {
            "type": "boolean"
          },
          "executive": {
            "type": "boolean"
          }
        },
        "example": {
          "director": true,
          "executive": false
        }
      },
      "Phone": {
        "title": "Phone",
        "required": [
          "primary",
          "secondary"
        ],
        "type": "object",
        "properties": {
          "primary": {
            "type": "string"
          },
          "secondary": {
            "type": "string"
          }
        },
        "example": {
          "primary": "7474747474",
          "secondary": "7474747474"
        }
      },
      "Addresses1": {
        "title": "Addresses1",
        "required": [
          "residential"
        ],
        "type": "object",
        "properties": {
          "residential": {
            "$ref": "#/components/schemas/Residential"
          }
        },
        "example": {
          "residential": {
            "street": "506, Koramangala 1st block",
            "city": "Bengaluru",
            "state": "Karnataka",
            "postal_code": "560034",
            "country": "IN"
          }
        }
      },
      "Residential": {
        "title": "Residential",
        "required": [
          "street",
          "city",
          "state",
          "postal_code",
          "country"
        ],
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "example": {
          "street": "506, Koramangala 1st block",
          "city": "Bengaluru",
          "state": "Karnataka",
          "postal_code": "560034",
          "country": "IN"
        }
      },
      "Kyc": {
        "title": "Kyc",
        "required": [
          "pan"
        ],
        "type": "object",
        "properties": {
          "pan": {
            "type": "string"
          }
        },
        "example": {
          "pan": "AVOPB1111K"
        }
      },
      "Notes36": {
        "title": "Notes36",
        "required": [
          "random_key_by_partner"
        ],
        "type": "object",
        "properties": {
          "random_key_by_partner": {
            "type": "string"
          }
        },
        "example": {
          "random_key_by_partner": "random_value"
        }
      },
      "UpdateaStakeholderRequest": {
        "title": "UpdateaStakeholderRequest",
        "required": [
          "percentage_ownership",
          "name",
          "email",
          "relationship",
          "phone",
          "addresses",
          "kyc",
          "notes"
        ],
        "type": "object",
        "properties": {
          "percentage_ownership": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "relationship": {
            "$ref": "#/components/schemas/Relationship"
          },
          "phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "addresses": {
            "$ref": "#/components/schemas/Addresses1"
          },
          "kyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "notes": {
            "$ref": "#/components/schemas/Notes36"
          }
        },
        "example": {
          "percentage_ownership": 20,
          "name": "Gauri Kumar",
          "email": "gauri.kumar@example.com",
          "relationship": {
            "director": false,
            "executive": true
          },
          "phone": {
            "primary": "9898989898",
            "secondary": "9898989898"
          },
          "addresses": {
            "residential": {
              "street": "507, Koramangala 1st block",
              "city": "Bangalore",
              "state": "Karnataka",
              "postal_code": "560035",
              "country": "IN"
            }
          },
          "kyc": {
            "pan": "AVOPB1111J"
          },
          "notes": {
            "random_key_by_partner": "random_value2"
          }
        }
      },
      "RequestaProductConfigurationRequest": {
        "title": "RequestaProductConfigurationRequest",
        "required": [
          "product_name",
          "tnc_accepted"
        ],
        "type": "object",
        "properties": {
          "product_name": {
            "type": "string"
          },
          "tnc_accepted": {
            "type": "boolean"
          }
        },
        "example": {
          "product_name": "payment_gateway",
          "tnc_accepted": true
        }
      },
      "UpdateaProductConfigurationRequest": {
        "title": "UpdateaProductConfigurationRequest",
        "required": [
          "notifications",
          "checkout",
          "refund",
          "settlements",
          "tnc_accepted"
        ],
        "type": "object",
        "properties": {
          "notifications": {
            "$ref": "#/components/schemas/Notifications"
          },
          "checkout": {
            "$ref": "#/components/schemas/Checkout4"
          },
          "refund": {
            "$ref": "#/components/schemas/Refund1"
          },
          "settlements": {
            "$ref": "#/components/schemas/Settlements"
          },
          "tnc_accepted": {
            "type": "boolean"
          }
        },
        "example": {
          "notifications": {
            "email": [
              "gaurav.kumar@example.com",
              "acd@gmail.com"
            ]
          },
          "checkout": {
            "theme_color": "#528FFF"
          },
          "refund": {
            "default_refund_speed": "optimum"
          },
          "settlements": {
            "account_number": "1234567890",
            "ifsc_code": "HDFC0000317",
            "beneficiary_name": "Gaurav Kumar"
          },
          "tnc_accepted": true
        }
      },
      "Notifications": {
        "title": "Notifications",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "email": [
            "gaurav.kumar@example.com",
            "acd@gmail.com"
          ]
        }
      },
      "Checkout4": {
        "title": "Checkout4",
        "required": [
          "theme_color"
        ],
        "type": "object",
        "properties": {
          "theme_color": {
            "type": "string"
          }
        },
        "example": {
          "theme_color": "#528FFF"
        }
      },
      "Refund1": {
        "title": "Refund1",
        "required": [
          "default_refund_speed"
        ],
        "type": "object",
        "properties": {
          "default_refund_speed": {
            "type": "string"
          }
        },
        "example": {
          "default_refund_speed": "optimum"
        }
      },
      "Settlements": {
        "title": "Settlements",
        "required": [
          "account_number",
          "ifsc_code",
          "beneficiary_name"
        ],
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string"
          },
          "ifsc_code": {
            "type": "string"
          },
          "beneficiary_name": {
            "type": "string"
          }
        },
        "example": {
          "account_number": "1234567890",
          "ifsc_code": "HDFC0000317",
          "beneficiary_name": "Gaurav Kumar"
        }
      },
      "CreateaWebhookRequest": {
        "title": "CreateaWebhookRequest",
        "required": [
          "url",
          "alert_email",
          "secret",
          "events"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "alert_email": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "url": "https://en1mwkqoqioct.x.pipedream.net",
          "alert_email": "gaurav.kumar@example.com",
          "secret": "12345",
          "events": [
            "payment.authorized",
            "payment.failed",
            "payment.captured",
            "payment.dispute.created",
            "refund.failed",
            "refund.created"
          ]
        }
      },
      "UpdateaWebhookRequest": {
        "title": "UpdateaWebhookRequest",
        "required": [
          "url",
          "events"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "url": "https://www.linkedin.com",
          "events": [
            "refund.created"
          ]
        }
      },
      "DeleteaWebhookRequest": {
        "title": "DeleteaWebhookRequest",
        "required": [
          "url",
          "events"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "url": "https://www.linkedin.com",
          "events": [
            "refund.created"
          ]
        }
      },
      "DeprecatedAcceptTermsandConditionsRequest": {
        "title": "DeprecatedAcceptTermsandConditionsRequest",
        "required": [
          "accepted"
        ],
        "type": "object",
        "properties": {
          "accepted": {
            "type": "boolean"
          }
        },
        "example": {
          "accepted": true
        }
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": []
    }
  ],
  "tags": [
    {
      "name": "Customers APIs",
      "description": "You can create customers with basic details such as name and contact details and use them for various Razorpay solution offerings.\n\n## List of APIs:\n- <a href=\"https://razorpay.com/docs/api/customers/#create-a-customer\" target=\"_blank\">Create a Customer</a>\n- <a href=\"https://razorpay.com/docs/api/customers/#edit-customer-details\" target=\"_blank\">Edit Customer Details</a>\n- <a href=\"https://razorpay.com/docs/api/customers/#fetch-all-customers\" target=\"_blank\">Fetch all Customers</a>\n- <a href=\"https://razorpay.com/docs/api/customers/#fetch-customer-by-id\" target=\"_blank\">Fetch Customer by ID</a>"
    },
    {
      "name": "Orders APIs",
      "description": "Order is an important step in the payment process. Orders and payments go hand-in-hand. For every payment, an order needs to be created. You can create orders using the Orders API.\n\n## List of APIs:\n- <a href=\"https://razorpay.com/docs/api/orders/#create-an-order\" target=\"_blank\">Create an Order</a>\n- <a href=\"https://razorpay.com/docs/api/orders/#fetch-orders\" target=\"_blank\">Fetch Orders</a>\n- <a href=\"https://razorpay.com/docs/api/orders/#fetch-an-order-with-id\" target=\"_blank\">Fetch an Order With Id</a>\n- <a href=\"https://razorpay.com/docs/api/orders/#fetch-payments-for-an-order\" target=\"_blank\">Fetch Payments for an Order</a>\n- <a href=\"https://razorpay.com/docs/api/orders/#update-order\" target=\"_blank\">Update Order</a>"
    },
    {
      "name": "Payment Downtime API",
      "description": "Usually, downtime webhook payloads are delivered within few seconds of the event. However, in some cases, this can be delayed by few minutes due to various reasons.\n\nIf you have not received any webhook notifications due to some technical issues, you can use the Fetch Payment Downtime API to fetch the downtime status.\n\nList of APIs:\n- <a href=\"https://razorpay.com/docs/api/payments/downtime/#fetch-payment-downtime-details\" target=\"_blank\">Fetch Payment Downtime Details</a>\n- <a href=\"https://razorpay.com/docs/api/payments/downtime/#fetch-payment-downtime-details-by-id\" target=\"_blank\">Fetch Payment Downtime Details by ID</a>"
    },
    {
      "name": "Payments APIs",
      "description": "You can create payments using the Razorpay Standard Checkout. https://razorpay.com/docs/payment-gateway/.\n\nThe Payments APIs help you to capture payments and fetch them only.\n\n## List of APIs\n- <a href=\"https://razorpay.com/docs/api/payments/#capture-a-payment\" target=\"_blank\">Capture a Payment</a>\n- <a href=\"https://razorpay.com/docs/api/payments/#fetch-a-payment\" target=\"_blank\">Fetch a Payment</a>\n- <a href=\"https://razorpay.com/docs/api/payments/#fetch-multiple-payments\" target=\"_blank\">Fetch Multiple Payments</a>\n- <a href=\"https://razorpay.com/docs/api/payments/#fetch-expanded-card-or-emi-details-for-payments\" target=\"_blank\">Fetch Expanded Card or EMI Details for Payments</a>\n- <a href=\"https://razorpay.com/docs/api/payments/#fetch-payments-based-on-orders\" target=\"_blank\">Fetch Payments Based on Orders</a>\n- <a href=\"https://razorpay.com/docs/api/payments/#fetch-card-details-of-a-payment\" target=\"_blank\">Fetch Card Details of a Payment</a>\n- <a href=\"https://razorpay.com/docs/api/payments/#update-the-payment\" target=\"_blank\">Update the Payment</a>"
    },
    {
      "name": "Refunds APIs",
      "description": "You can make full or partial refunds to customers. While issuing refunds, you can choose to process the refunds instantly or at normal speed (within 5-7 working days). Razorpay provides you real-time tracking of the processing speed and the status of the initiated refund.\n\n<table>\n<b>Refunds Can be Made Only on Captured Payments</b> <br>\nYou can initiate refunds only on those payments that are in captured state. A payment in authorized state is auto-refunded if not captured within 5 days of creation.\n</table>\n\n## List of APIs\n- <a href=\"https://razorpay.com/docs/api/refunds/#create-a-normal-refund\" target=\"_blank\">Create a Normal Refund</a>\n- <a href=\"https://razorpay.com/docs/api/refunds/#create-an-instant-refund\" target=\"_blank\">Create an Instant Refund</a>\n- <a href=\"https://razorpay.com/docs/api/refunds/#fetch-multiple-refunds-for-a-payment\" target=\"_blank\">Fetch Multiple Refunds for a Payment</a>\n- <a href=\"https://razorpay.com/docs/api/refunds/#fetch-a-specific-refund-for-a-payment\" target=\"_blank\">Fetch a Specific Refund for a Payment</a>\n- <a href=\"https://razorpay.com/docs/api/refunds/#fetch-all-refunds\" target=\"_blank\">Fetch All Refunds</a>\n- <a href=\"https://razorpay.com/docs/api/refunds/#fetch-refund-by-id\" target=\"_blank\">Fetch Refund by ID</a>\n- <a href=\"https://razorpay.com/docs/api/refunds/#update-refund\" target=\"_blank\">Update Refund</a>"
    },
    {
      "name": "Instant Settlements",
      "description": "Razorpay On-demand Settlements helps you reduce your settlement period from T+2 days (default settlement cycle) to a few minutes (from the time of the transaction), thus enabling your business to avoid cash-flow challenges and prepare better for working capital requirements.\n\nList of APIs:\n- <a href=\"https://razorpay.com/docs/api/settlements/#create-an-on-demand-settlement\" target=\"_blank\">Create an On-demand Settlement</a>\n- <a href=\"https://razorpay.com/docs/api/settlements/#fetch-all-on-demand-settlements\" target=\"_blank\">Fetch All On-demand Settlements</a>\n- <a href=\"https://razorpay.com/docs/api/settlements/#fetch-on-demand-settlements-by-id\" target=\"_blank\">Fetch On-demand Settlements by ID</a>"
    },
    {
      "name": "Settlements APIs",
      "description": "Settlement is the process in which the money received from your customers is settled to your bank account. Settlements are made to the bank account, the details of which you submitted to us as a part of KYC verification.\n\nSettlements for all payments are done in INR (Indian Rupees), irrespective of the currency in which the payment was made. After Razorpay receives the amount, it is settled to your bank account, after fees deduction. Know more about settlements.\n\n## Settlement Cycle\nBy default, the complete process takes a time of T+2 business days for domestic transactions and T+7 days for international transactions, T being the date of capture of payment. This is called the settlement cycle. The settlement cycle is subject to bank approval and can vary based on your business vertical, risk factors and so on.\n\n## List of APIs\n- <a href=\"https://razorpay.com/docs/api/settlements/#fetch-all-settlements\" target=\"_blank\">Fetch All Settlements</a>\n- <a href=\"https://razorpay.com/docs/api/settlements/#fetch-settlement-using-id\" target=\"_blank\">Fetch Settlement Using ID</a>\n- <a href=\"https://razorpay.com/docs/api/settlements/#settlement-recon\" target=\"_blank\">Settlement Recon</a>"
    },
    {
      "name": "Disputes APIs",
      "description": "A dispute arises when your customer or the issuing bank questions the validity of a payment. It can be raised due to reasons such as unauthorised charges, failure to deliver promised merchandise or excessive charges levied by you. The chargeback raised by your customer can be filed as a dispute with Razorpay.\n\nManage customer disputes using the Razorpay Disputes APIs.\n\n## List of APIs\n\n*   <a href=\"https://razorpay.com/docs/api/disputes/#fetch-all-disputes\">Fetch all Disputes</a>\n*   <a href=\"https://razorpay.com/docs/api/disputes/#fetch-a-dispute\">Fetch a Dispute by ID</a>"
    },
    {
      "name": "Invoices APIs",
      "description": "Razorpay Invoices enables you to send invoices to your customers and accept payments instantly.\n\nThe invoice contains information regarding the sale such as the name of the ordered products or services, quantity, billing cycle, price breakup, receipt number and customer information.\n\nYou can create, update, cancel and delete invoices using our Invoices APIs.\n\n## List of APIs\n\n- <a href=\"https://razorpay.com/docs/api/invoices/#create-an-invoice\" target=\"_blank\">Create an Invoice</a>\n- <a href=\"https://razorpay.com/docs/api/invoices/#fetch-multiple-invoices\" target=\"_blank\">Fetch Invoices</a>\n- <a href=\"https://razorpay.com/docs/api/invoices/#fetch-an-invoice\" target=\"_blank\">Fetch Invoice by ID</a>\n- <a href=\"https://razorpay.com/docs/api/invoices/#update-an-invoice\" target=\"_blank\">Update an Invoice</a>\n- <a href=\"https://razorpay.com/docs/api/invoices/#issue-an-invoice\" target=\"_blank\">Issue an Invoice</a>\n- <a href=\"https://razorpay.com/docs/api/invoices/#send-notifications\" target=\"_blank\">Send or Resend Notification</a>\n- <a href=\"https://razorpay.com/docs/api/invoices/#cancel-an-invoice\" target=\"_blank\">Cancel an Invoice</a>\n- <a href=\"https://razorpay.com/docs/api/invoices/#delete-an-invoice\" target=\"_blank\">Delete an Invoice</a>"
    },
    {
      "name": "Step 1 - Plans",
      "description": "A plan is a foundation on which a subscription is built. It acts as a reusable template and contains details of the goods or services offered, the amount to be charged and the frequency at which the customer should be charged (billing cycle). Depending upon your business, you can create multiple plans with different billing cycles and pricing.\n\n## List of APIs\n\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-a-plan-by-id)[Create a Plan](https://razorpay.com/docs/api/subscriptions/#create-a-plan)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-a-plan-by-id)[Fetch all Plans](https://razorpay.com/docs/api/subscriptions/#fetch-all-plans)\n*   [Fetch a Plan by ID](https://razorpay.com/docs/api/subscriptions/#fetch-a-plan-by-id)"
    },
    {
      "name": "Step 2 - Subscriptions",
      "description": "Subscriptions allow you to charge a customer's card periodically. A subscription ties a customer to a particular plan you have created. It contains details like the plan, the start date, total number of billing cycles, free trial period (if any) and upfront amount to be collected.\n\nKnow more about <a href=\"https://razorpay.com/docs/api/subscriptions/#subscriptions\">Subscriptions APIs</a>.\n\n## List of APIs\n\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Create a Subscription](https://razorpay.com/docs/api/subscriptions/#create-a-subscription)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Create a Subscription Link](https://razorpay.com/docs/api/subscriptions/#create-a-subscription-link)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Fetch All Subscriptions](https://razorpay.com/docs/api/subscriptions/#fetch-all-subscriptions)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Fetch Subscription by ID](https://razorpay.com/docs/api/subscriptions/#fetch-subscription-by-id)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Cancel a Subscription](https://razorpay.com/docs/api/subscriptions/#cancel-a-subscription)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Update a Subscription](https://razorpay.com/docs/api/subscriptions/#update-a-subscription)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Fetch Details of a Pending Update](https://razorpay.com/docs/api/subscriptions/#fetch-details-of-a-pending-update)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Cancel an Update](https://razorpay.com/docs/api/subscriptions/#cancel-an-update)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Pause a Subscription](https://razorpay.com/docs/api/subscriptions/#pause-a-subscription)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Resume a Subscription](https://razorpay.com/docs/api/subscriptions/#resume-a-subscription)\n*   [](https://betasite.razorpay.com/docs/postman-api-change/razorpay/api/subscriptions/#fetch-all-invoices-for-a-subscription)[Fetch All Invoices for a Subscription](https://razorpay.com/docs/api/subscriptions/#fetch-all-invoices-for-a-subscription)"
    },
    {
      "name": "Add-ons",
      "description": "You can create add-ons to charge the customer an extra amount for a particular billing cycle. Once you create an add-on for a subscription, it is added to the next invoice that is generated. On the next scheduled charge, the customer is charged the add-on amount in addition to their regular subscription amount.\n\nKnow more about <a href=\"https://razorpay.com/docs/api/subscriptions/#add-on\">Add-on APIs</a>.\n\n## List of APIs\n\n*   [Create an Add-on](https://razorpay.com/docs/api/subscriptions/#create-an-add-on)\n*   [Fetch all Add-ons](https://razorpay.com/docs/api/subscriptions/#fetch-all-add-ons)\n*   [Fetch an Add-on by ID](https://razorpay.com/docs/api/subscriptions/#fetch-an-add-on-by-id)\n*   [Delete an Add-on](https://razorpay.com/docs/api/subscriptions/#delete-an-add-on)"
    },
    {
      "name": "Standard Payment Links",
      "description": "Standard Payment Links are normal, non-customized Payment Links, which are not customized as per your business preferences. Know more about these [APIs](https://razorpay.com/docs/api/payment-links/).\n\n## List of APIs\n\n*   [Create a Payment Link](https://razorpay.com/docs/api/payment-links/#create-payment-link)\n*   [Update a Payment Link](https://razorpay.com/docs/api/payment-links/#update-payment-link)\n*   [Cancel a Payment Link](https://razorpay.com/docs/api/payment-links/#cancel-payment-link)\n*   [Fetch all Payment Links](https://razorpay.com/docs/api/payment-links/#all-payment-links)\n*   [Fetch a Payment Link](https://razorpay.com/docs/api/payment-links/#specific-payment-links-by-id)\n*   [Resend a Payment Link](https://razorpay.com/docs/api/payment-links/#send-or-resend-notifications)"
    },
    {
      "name": "Custom Payment Links",
      "description": "You can send standard payment links to customers via email and SMS. When customers click on the payment link, they are redirected to a page hosted by us where they can complete the payment.\n\nThe payment request page consists of two sections:\n\n*   Payment Details: Displays details about the payment description, expiry date, payable amount and in case of partial payments, partial amount paid and due.\n*   Checkout: Displays the Phone and Email fields and list the various payment methods available.\n    \n\nYou can customize this hosted page as per your brand and business requirements. For example, you may display only specific payment methods, change the colour of Checkout, and so on.\n\nKnow more about - <a href=\"https://razorpay.com/docs/api/payment-links/customise\">Custom Payment Links</a>.\n\n## **List of APIs**\n\n*   <a href=\"https://razorpay.com/docs/api/payment-links/customise/checkout-theme/\">Implement Thematic Changes in Payment Links Checkout Section</a>\n*   <a href=\"https://razorpay.com/docs/api/payment-links/customise/merchant-details/\">Change Business Name</a>\n*   <a href=\"https://razorpay.com/docs/api/payment-links/customise/payment-methods/\">Customize Payment Methods</a>\n*   <a href=\"https://razorpay.com/docs/api/payment-links/customise/prefill/\">Prefill Checkout Fields</a>\n*   <a href=\"https://razorpay.com/docs/api/payment-links/customise/read-only/\">Set Checkout Fields as Read-Only</a>\n*   <a href=\"https://razorpay.com/docs/api/payment-links/customise/rename-checkout-labels/\">Rename Labels in Checkout Section</a>\n*   <a href=\"https://razorpay.com/docs/api/payment-links/customise/rename-payment-details-labels/\">Rename Labels in Payment Details Section</a>"
    },
    {
      "name": "Third Party Validation using Netbanking and UPI",
      "description": "Third-party validation is a process using which you can ensure that customers make payments using only those bank accounts that they had provided at the time of registration.\n\nKnow more about third-party validation using  <a href=\"https://razorpay.com/docs/api/payment-links/advanced-options/third-party-validation/\" target=\"_blank\">Payment Links API</a>."
    },
    {
      "name": "Advanced Options",
      "description": "You can perform advanced configuration on Payment Links to help achieve your business requirements:\n\n1.  You can set up Payment Links so that payments made against the link are automatically transferred to a linked account. This saves you the additional step of making a Transfer API call later.\n2.  To attract and retain customers, you can provide promotional offers on Payment Links such as discounts and cashback. Customers can avail these offers while making payments using Payment Links.\n3.  You can use Razorpay Payment Links to perform third-party validation of bank accounts provided by your customers.\n    \n\n## List of APIs\n\n*   [Transfer Payments Received Using Payment Links](https://razorpay.com/docs/api/payment-links/advanced-options/transfers/)\n*   [Offers on Payment Links](https://razorpay.com/docs/api/payment-links/advanced-options/offers/)\n*   [Third-party Validation on Payment Links](https://razorpay.com/docs/api/payment-links/advanced-options/third-party-validation/)"
    },
    {
      "name": "Fetch Operations"
    },
    {
      "name": "Smart Collect -TPV",
      "description": "Using Razorpay Smart Collect API, you can comply with the regulatory guidelines to ensure that the customers make payments only from their registered bank accounts (TPV). If payments are made from the unregistered accounts (non-TPV), they are automatically refunded to the customers.\n\nWhen you create a virtual account, send the allowed_payers array with the customer's bank account_number and ifsc. This helps to identify TPV transactions and automatically refund non-TPV transactions.\n\nKnow more about <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/\" target=\"_blank\">third-party validation</a>.\n\n<b>List of APIs</b>:\n- <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#create-virtual-account\" target=\"_blank\">Create Virtual Account</a>\n- <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#add-an-allowed-payer-account\" target=\"_blank\">Add an Allowed Payer Account</a>\n- <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#fetch-a-virtual-account-by-id\" target=\"_blank\">Fetch a Virtual Account by ID</a>\n- <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#fetch-all-virtual-accounts\" target=\"_blank\">Fetch all Virtual Accounts</a>\n- <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#fetch-payments-for-a-virtual-account\" target=\"_blank\">Fetch Payments for a Virtual Account</a>\n- <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#fetch-payment-details-using-id-and-transfer-method\" target=\"_blank\">Fetch Payment Details using ID and Transfer Method</a>\n- <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#delete-an-allowed-payer-account\" target=\"_blank\">Delete an Allowed Payer Account</a>\n- <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#refund-payments-made-to-a-virtual-account\" target=\"_blank\">Refund Payments made to a Virtual Account</a>\n- <a href=\"https://razorpay.com/docs/api/smart-collect-tpv/#close-a-virtual-account\" target=\"_blank\">Close a Virtual Account</a>"
    },
    {
      "name": "Create Virtual Accounts and VPAs"
    },
    {
      "name": "Fetch Payment Details using ID and Transfer Method"
    },
    {
      "name": "Smart Collect",
      "description": "This is the standard version of <a href=\"https://razorpay.com/docs/api/smart-collect\">Smart Collect APIs</a>.\n\n## List of APIs\n\n*   [Create Virtual Account](https://razorpay.com/docs/api/smart-collect/#create-virtual-account)\n*   [Fetch a Virtual Account by ID](https://razorpay.com/docs/api/smart-collect/#fetch-a-virtual-account-by-id)\n*   [Fetch all Virtual Accounts](https://razorpay.com/docs/api/smart-collect/#fetch-all-virtual-accounts)\n*   [Fetch Payments for a Virtual Account](https://razorpay.com/docs/api/smart-collect/#fetch-payments-for-a-virtual-account)\n*   [Fetch Payment Details using ID and Transfer Method](https://razorpay.com/docs/api/smart-collect/#fetch-payment-details-using-id-and-transfer-method)\n    *   [Bank Transfer](https://razorpay.com/docs/api/smart-collect/#bank-transfer)\n    *   [UPI](https://razorpay.com/docs/api/smart-collect/#upi)\n*   [Refund Payments made to a Virtual Account](https://razorpay.com/docs/api/smart-collect/#refund-payments-made-to-a-virtual-account)\n*   [Add Receiver to an Existing Virtual Account](https://razorpay.com/docs/api/smart-collect/#add-receiver-to-an-existing-virtual-account)\n*   [Close a Virtual Account](https://razorpay.com/docs/api/smart-collect/#close-a-virtual-account)"
    },
    {
      "name": "Transfers API",
      "description": "You can transfer funds to your linked accounts using the Razorpay Route Transfer APIs. Know more about [transfers and related fees](https://razorpay.com/docs/route/transfer-example).\n\n## [Transfer Requirements🔗](https://razorpay.com/docs/api/route/#transfer-requirements)\n\nBelow are the requirements to initiate a transfer:\n\n*   Your account must have sufficient funds to process the transfer to the linked account. The transfer will fail in case of insufficient funds.\n*   You can only transfer the `captured` payments.\n*   You can create more than one transfer on a `payment_id`. However, the total transfer amount should not exceed the captured payment amount.\n*   You cannot request a transfer on payment once a refund has been initiated.\n    \n\n## [Types of Transfers🔗](https://razorpay.com/docs/api/route/#types-of-transfers)\n\nYou can transfer funds to linked accounts using one of the following methods:\n\n*   [Transfer via Orders](https://razorpay.com/docs/api/route/#create-transfers-from-orders) - You can set up a transfer at the time of order creation.\n*   [Transfer via Payments](https://razorpay.com/docs/api/route/#create-transfers-from-payments) - You can initiate a transfer once the payment has been received from the customer.\n*   [Direct Transfer](https://razorpay.com/docs/api/route/#direct-transfers) - You can initiate a transfer directly from existing funds in your Razorpay account."
    },
    {
      "name": "Fetch Details",
      "description": "Know how to fetch details of transfers and settlements using APIs."
    },
    {
      "name": "Linked Account Settlements",
      "description": "Know how to hold transfer settlements and modify them using APIs."
    },
    {
      "name": "Refunds and Reversals",
      "description": "Know how to refund payments to customers and reverse transfers from linked accounts."
    },
    {
      "name": "Items APIs",
      "description": "Items are products or services that you bill customers for by adding them to an invoice. You can create an item using APIs. When an item is created, it will appear on the list of items in the Dashboard.\n\nKnow more about [Items APIs](https://razorpay.com/docs/api/items/).\n\n## **List of APIs**\n\n*   [Create an Item](https://razorpay.com/docs/api/items/#create-an-item)\n*   [Fetch an Item](https://razorpay.com/docs/api/items/#fetch-an-item)\n*   [Fetch Multiple Items](https://razorpay.com/docs/api/items/#fetch-multiple-items)\n*   [Update an Item](https://razorpay.com/docs/api/items/#update-an-item)\n*   [Delete an Item](https://razorpay.com/docs/api/items/#delete-an-item)"
    },
    {
      "name": "Step 1 - Contacts",
      "description": "A contact is an entity to whom payouts can be made through supported modes such as UPI, IMPS, NEFT and RTGS.\n\nSome important points:\n\n*   A new contact is created if any combination of the following details is unique: name, email, contact, type and reference_id.\n*   If all the above details match the details of an existing contact, the API returns details of the existing contact.\n*   Use the Update Contact API if you want to make changes to an existing contact.\n    \n\n## **List of APIs**\n\n*   [Create a Contact](https://razorpay.com/docs/api/razorpayx/contacts/#create-a-contact)\n*   [Update a Contact](https://razorpay.com/docs/api/razorpayx/contacts/#update-a-contact)\n*   [Activate or Deactivate a Contact](https://razorpay.com/docs/api/razorpayx/contacts/#activate-or-deactivate-a-contact)\n*   [Fetch all Contacts](https://razorpay.com/docs/api/razorpayx/contacts/#fetch-all-contacts)\n*   [Fetch a Contact by ID](https://razorpay.com/docs/api/razorpayx/contacts/#fetch-a-contact-by-id)"
    },
    {
      "name": "Step 2 - Fund Accounts",
      "description": "Fund accounts are accounts associated with a contact. Payouts are made to fund accounts.\n\nCurrently, RazorpayX supports 4 types of fund accounts:\n\n*   `bank_account`: Make payouts to a beneficiary's bank account via bank transfer using one of the available such as NEFT, IMPS or RTGS.\n*   `vpa` (Virtual Payment Address): Make payouts to a beneficiary's UPI ID via a UPI transfer.\n*   `cards`: Make payouts directly to a beneficiary's card via a bank transfer using one of the available such as NEFT or IMPS.\n*   `wallet`: Make payouts directly to a beneficiary's wallet. Currently, you can make payouts to a beneficiary via an Amazon Pay Gift Card.\n    \n\nKnow more about [Fund Accounts](https://razorpay.com/docs/api/razorpayx/fund-accounts/).\n\n## **List of APIs**\n\n*   [Create a Fund Account](https://razorpay.com/docs/api/razorpayx/fund-accounts/#create-a-fund-account)\n    *   [Bank Account](https://razorpay.com/docs/api/razorpayx/fund-accounts/#bank-account)\n    *   [VPA (UPI ID)](https://razorpay.com/docs/api/razorpayx/fund-accounts/#vpa-upi-id)\n*   [Activate or Deactivate a Fund Account](https://razorpay.com/docs/api/razorpayx/fund-accounts/#activate-or-deactivate-a-fund-account)[](https://razorpay.com/docs/api/razorpayx/fund-accounts/#path-parameters)\n*   [Fetch All Fund Accounts](https://razorpay.com/docs/api/razorpayx/fund-accounts/#fetch-all-fund-accounts)\n*   [Fetch Fund Account Details by ID](https://razorpay.com/docs/api/razorpayx/fund-accounts/#fetch-fund-account-details-by-id)"
    },
    {
      "name": "Step 3 - Payouts",
      "description": "A payout is the transfer of funds from your business account to a contact's fund account.\n\nKnow more about [Payouts](https://razorpay.com/docs/razorpayx/payouts/payout-overview/).\n\n## **List of APIs**\n\n*   [Create a Payout](https://razorpay.com/docs/api/razorpayx/payouts/#create-a-payout)\n    *   [Bank Accounts](https://razorpay.com/docs/api/razorpayx/payouts/#bank-accounts)\n    *   [VPA (UPI ID)](https://razorpay.com/docs/api/razorpayx/payouts/#vpa-upi-id)\n*   [Fetch All Payouts](https://razorpay.com/docs/api/razorpayx/payouts/#fetch-all-payouts)\n*   [Fetch a Payout by ID](https://razorpay.com/docs/api/razorpayx/payouts/#fetch-a-payout-by-id)\n*   [Cancel a Queued Payout](https://razorpay.com/docs/api/razorpayx/payouts/#cancel-a-queued-payout)"
    },
    {
      "name": "Composite API",
      "description": "The composite API allows you to make a payout using a single API call. This reduces the number of calls you would otherwise need to make to create a payout. The composite API also gives you the flexibility to either create a new contact and fund account or use existing contact and fund account details (contact_id and fund_account_id) to make a payout.\n\n  \nKnow more about the [Composite API](https://razorpay.com/docs/api/razorpayx/composite-api/)."
    },
    {
      "name": "Payout Links",
      "description": "Payout Links enable you to make payouts to those contacts whose fund accounts details are not readily available with you. You can use these links to collect the customer's fund account details and then process refunds, reimbursement and cashback to them without additional follow up.\n\nKnow more about [Payout Links API](https://razorpay.com/docs/api/razorpayx/payout-links/).\n\n## **List of APIs**\n\n*   [Create a Payout Link](https://razorpay.com/docs/api/razorpayx/payout-links/#create-a-payout-link)\n*   [Fetch All Payout Links](https://razorpay.com/docs/api/razorpayx/payout-links/#fetch-all-payout-links)\n*   [Fetch Payout Link by ID](https://razorpay.com/docs/api/razorpayx/payout-links/#fetch-payout-link-by-id)\n*   [Cancel a Payout Link](https://razorpay.com/docs/api/razorpayx/payout-links/#cancel-a-payout-link)"
    },
    {
      "name": "Transaction Statements",
      "description": "The inflow of funds to your business account, payouts to a contact's fund account and reversals are all recorded as transactions against your business account. You can fetch details of a particular transaction or details of all transactions via [APIs](https://razorpay.com/docs/api/razorpayx/transactions/).\n\n## **List of APIs**\n\n*   [Fetch all Transactions](https://razorpay.com/docs/api/razorpayx/transactions/#fetch-all-transactions)\n*   [Fetch Transaction by ID](https://razorpay.com/docs/api/razorpayx/transactions/#fetch-transaction-by-id)"
    },
    {
      "name": "Account Validation",
      "description": "Account validation is the process of validating your contact's bank account details or virtual payment address (VPA). Know more about this [API](https://razorpay.com/docs/api/razorpayx/account-validation/).\n\n## List of APIs\n\n*   [Validate a Bank Account](https://razorpay.com/docs/api/razorpayx/account-validation/#validate-a-bank-account)\n    *   [Create a Contact](https://razorpay.com/docs/api/razorpayx/account-validation/#create-a-contact)\n    *   [Create Fund Account](https://razorpay.com/docs/api/razorpayx/account-validation/#create-fund-account)\n    *   [Validate Bank Account](https://razorpay.com/docs/api/razorpayx/account-validation/#validate-bank-account)\n*   [Validate a VPA](https://razorpay.com/docs/api/razorpayx/account-validation/#validate-a-vpa)\n    *   [Create a Contact](https://razorpay.com/docs/api/razorpayx/account-validation/#create-a-contact-1)\n    *   [Create Fund Account](https://razorpay.com/docs/api/razorpayx/account-validation/#create-fund-account-1)\n    *   [Validate VPA](https://razorpay.com/docs/api/razorpayx/account-validation/#validate-vpa)\n*   [Fetch all Account Validation Transactions](https://razorpay.com/docs/api/razorpayx/account-validation/#fetch-all-account-validation-transactions)\n*   [Fetch Account Validation Transaction by ID](https://razorpay.com/docs/api/razorpayx/account-validation/#fetch-account-validation-transaction-by-id)"
    },
    {
      "name": "RazorpayX APIs",
      "description": "RazorpayX supercharges your business banking experience. We help business owners and finance teams automate manual, repetitive financial tasks and provide insights into money flow.\n\nUsing RazorpayX, you can process:\n\n*   Refunds for customers.\n*   Salary payouts with automated statutory payments such as PF and TDS.\n*   Vendor payouts with automated TDS payments.\n    \n\nYou can make timely payouts on RazorpayX using our developer-friendly [APIs](https://razorpay.com/docs/api/razorpayx/).\n\n## **List of APIs**\n\n*   [Account Validation](https://razorpay.com/docs/api/razorpayx/account-validation/)\n*   [Contacts](https://razorpay.com/docs/api/razorpayx/contacts/)\n*   [Fund Accounts](https://razorpay.com/docs/api/razorpayx/fund-accounts/)\n*   [Payouts](https://razorpay.com/docs/api/razorpayx/payouts/)\n*   [Payout to Cards](https://razorpay.com/docs/api/razorpayx/payouts-cards/)\n*   [Payouts - Composite API](https://razorpay.com/docs/api/razorpayx/composite-api/)\n*   [Payout Idempotency](https://razorpay.com/docs/api/razorpayx/idempotency/)\n*   [Payout Links](https://razorpay.com/docs/api/razorpayx/payout-links/)\n*   [Account Statement](https://razorpay.com/docs/api/razorpayx/transactions/)"
    },
    {
      "name": "Account APIs",
      "description": "You can use the Account APIs to create a sub-merchant account. After an account gets created, an `account_id` is assigned.\n\nYou can create, fetch, and update a sub-merchant account using these APIs."
    },
    {
      "name": "Stakeholder APIs",
      "description": "You can use the Stakeholders APIs to add a stakeholder for an account. Each stakeholder will have their KYC.\n\n**Handy Tip**  \n  \nA stakeholder can be a signatory or an owner of the business.\n\nYou can create, fetch and update stakeholders using [these](https://razorpay.com/docs/api/partners/stakeholder/) APIs."
    },
    {
      "name": "Documents API",
      "description": "Use the Document APIs to upload and fetch documents for the KYC verification process.\n\n**Watch Out!**\n\n*   The maximum supported file size for a JPG/PNG is 4MB.\n*   The maximum supported file size for a PDF is 2MB.\n*   Do not pass file URLs instead of uploading documents.\n*   If you have uploaded the document but mandatory field-level  \n    parameters are not passed in the API, you need to re-execute the  \n    Documents API with the same document and pass the fields.\n    \n\nKnow more about [Documents APIs.](https://razorpay.com/docs/api/partners/upload-document/)"
    },
    {
      "name": "Product Configuration Request APIs",
      "description": "You can use the Product Configuration APIs to configure and activate Razorpay products for a sub-merchant account according to their requirements. For example, if you need our Payment Gateway product for all sub-merchants or Payment Gateway for one sub-merchant and Payment Link product for another sub-merchant, you can do so using this API. You can also accept terms and conditions using this API.\n\nYou can create, fetch and update product configuration requests using these APIs.\n\nKnow more about the [Product Configuration APIs](https://razorpay.com/docs/api/partners/product-configuration/)."
    },
    {
      "name": "Webhooks API",
      "description": "You can use the Webhooks APIs to receive event notifications or subscribe to events happening in a sub-merchant's account for the integration installed.\n\nYou can create, fetch, update and delete webhooks using these APIs.\n\nKnow more about [Webhook Events](https://razorpay.com/docs/partners/api/#subscribe-to-webhooks) and check the [sample payloads](https://razorpay.com/docs/webhooks/payloads/partners) for Sub-Merchant Onboarding Events."
    },
    {
      "name": "Terms and Conditions API",
      "description": "You can use the Terms and Conditions APIs to accept and fetch terms and conditions for a sub-merchant.\n\n# [Workflow🔗](https://razorpay.com/docs/api/partners/terms-conditions/#workflow)\n\nGiven below is the workflow:\n\n1\\. As a partner, it is your responsibility to show respective terms and conditions to the sub-merchants before you start onboarding to a product. The APIs used for it will be [Fetch Product Terms and Conditions API.](https://razorpay.com/docs/api/partners/terms-conditions/#fetch-terms-and-conditions-for-a-sub-merchant)\n\n2\\. You should display these web pages to your sub-merchants on your interface.\n\n3\\. Record the acceptance of terms and transmit that to Razorpay using either [Request a Product Configuration API](https://razorpay.com/docs/api/partners/product-configuration/#request-a-product-configuration) or [Update a Product Configuration API](https://razorpay.com/docs/api/partners/product-configuration/#update-a-product-configuration)."
    }
  ]
}