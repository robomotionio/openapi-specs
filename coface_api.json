{
  "openapi": "3.0.0",
  "info": {
    "description": "COFACE API",
    "version": "1.0.0",
    "title": "ICON Business Information REST API",
    "x-logo": {
      "url": "https://www.cofacecentraleurope.com/extension/cofaweb/design/cofaweb/images/logo_coface_2_1_1.png"
    }
  },
  "tags": [
    {
      "name": "Countries",
      "description": "Lists of covered countries and associated identifiers.\n",
      "x-displayName": "Countries"
    },
    {
      "name": "Company Identification",
      "description": "Identify the company you wish to order.\n",
      "x-displayName": "Company Identification"
    },
    {
      "name": "Order",
      "description": "Place an order for a product (e.g. credit report).\n",
      "x-displayName": "Order"
    },
    {
      "name": "Notifications",
      "description": "Download notifications of monitored companies\n",
      "x-displayName": "Monitoring Notifications"
    },
    {
      "name": "Misc",
      "description": "Miscellaneous methods.\n",
      "x-displayName": "Misc"
    }
  ],
  "security": [
    {
      "api_key_security": []
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "tags": [
          "Misc"
        ],
        "description": "Returns the server status - you can use it as a health check to  ensure that the REST endpoint is active.",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Description of the server status."
                    }
                  },
                  "x-swagger-router-model": "ServerStatus"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\"  -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/ping"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/ping\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/ping\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "description": "List the countries in which you can order reports on companies.",
        "operationId": "getCountries",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "iso_code": {
                        "type": "string",
                        "example": "PL",
                        "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
                      },
                      "name": {
                        "type": "string",
                        "example": "Poland",
                        "description": "name of the country (for instance \"Poland\")"
                      },
                      "offline_orders": {
                        "type": "boolean",
                        "description": "offline orders can be placed for companies in this country. An offline order is an order for a company which will be researched if an up-to-date report is not available."
                      },
                      "online_orders": {
                        "type": "boolean",
                        "description": "online orders can be placed for companies in this country. An online order is an order where a report is available immediately."
                      }
                    },
                    "x-swagger-router-model": "AvailableCountry"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/countries"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/countries\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/countries\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/country/{country_iso_code}/identifiers": {
      "get": {
        "tags": [
          "Countries"
        ],
        "description": "Lists the available identifiers for the country (some company identifiers are country-specific).",
        "operationId": "getIdentifiers",
        "parameters": [
          {
            "name": "country_iso_code",
            "in": "path",
            "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "type": "boolean",
                      "description": "the unique identifier of the company"
                    },
                    "icon_number": {
                      "type": "boolean",
                      "description": "the ICON number of the company"
                    },
                    "easy_number": {
                      "type": "boolean",
                      "description": "the EASY number of the company"
                    },
                    "national_identifier_types": {
                      "type": "array",
                      "description": "the types of national identifiers available",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "example": 120,
                            "description": "the national identifier"
                          },
                          "name": {
                            "type": "string",
                            "example": "VAT Number",
                            "description": "the national identifier"
                          }
                        },
                        "x-swagger-router-model": "NationalIdentifierType"
                      }
                    }
                  },
                  "x-swagger-router-model": "AvailableCompanyIdentifiers"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/country/PL/identifiers"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/country/PL/identifiers\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/country/PL/identifiers\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Company Identification"
        ],
        "description": "Search for companies using name or other identifiers.\n\nTips for searching:\n* If you have a unique identifier for the company (i.e. you want exactly one result), use identifyCompany instead.\n* You don't need to include the legal form in the name (e.g. if the company is called PRINT Solutions Ltd, just search for PRINT Solutions).\n\nAllowed combinations:\n* full_text_query\n* full_text_query with country_iso_code\n* company_name and/or zip_code and/or city together with country_iso_code\n",
        "operationId": "findCompany",
        "parameters": [
          {
            "name": "full_text_query",
            "in": "query",
            "description": "A flexible free-text search query (as you would use in a search engine). Company names, addresses and company identifieres are searched. Results are ordered by relevance",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_iso_code",
            "in": "query",
            "description": "country where the company is registered (ISO 3166-1 alpha-2 code)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_name",
            "in": "query",
            "description": "name (or partial name) of the company",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_name_phonetic",
            "in": "query",
            "description": "If set to true, the company name will be searched using a phonetic algorithm",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "zip_code",
            "in": "query",
            "description": "the postal code of the company",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city_phonetic",
            "in": "query",
            "description": "If set to true, the city will be searched using a phonetic algorithm",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "starting point within paged results (the X-Total-Count header of the response indicates the total number of results found)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "number of results to fetch starting from offset (the X-Total-Count header of the response indicates the total number of results found)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Total-Count": {
                "description": "total count of search results",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Countries-Searched": {
                "description": "list of countries which have been searched in",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "company_id": {
                        "type": "string",
                        "description": "the unique identifier of the company"
                      },
                      "company_name": {
                        "type": "string",
                        "description": "the name of the company"
                      },
                      "registration_country": {
                        "type": "string",
                        "description": "ISO 3166-1 alpha-2 country code (for instance \"PL\" for Poland)"
                      },
                      "icon_number": {
                        "type": "integer",
                        "description": "a system company identifier"
                      },
                      "easy_number": {
                        "type": "string",
                        "description": "EASY number of the company"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string",
                            "example": "PL",
                            "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
                          },
                          "zip_code": {
                            "type": "string",
                            "description": "postal code in which the company is located"
                          },
                          "city": {
                            "type": "string",
                            "description": "city in which the company is located"
                          },
                          "address_lines": {
                            "type": "array",
                            "description": "address of the company",
                            "items": {
                              "type": "string"
                            }
                          },
                          "telephone": {
                            "type": "string",
                            "description": "telephone number of the company"
                          }
                        },
                        "x-swagger-router-model": "Address"
                      },
                      "national_identifiers": {
                        "type": "array",
                        "description": "national identifiers for the company (VAT ID etc)",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "example": 120,
                                  "description": "the national identifier"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "VAT Number",
                                  "description": "the national identifier"
                                }
                              },
                              "x-swagger-router-model": "NationalIdentifierType"
                            },
                            "value": {
                              "type": "string",
                              "example": "R12312323",
                              "description": "the national identifier"
                            }
                          },
                          "x-swagger-router-model": "NationalIdentifier"
                        }
                      }
                    },
                    "x-swagger-router-model": "CompanySearchResult"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" \"https://test.cofacecentraleurope.com/api/bi/v1/companies?company_name=Budowlane&country_iso_code=PL\""
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/companies?company_name=Budowlane&country_iso_code=PL\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/companies?company_name=Budowlane&country_iso_code=PL\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/companies/demo": {
      "get": {
        "tags": [
          "Company Identification"
        ],
        "description": "Lists the available demo companies\n",
        "operationId": "getDemoCompanies",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "company_id": {
                        "type": "string",
                        "example": "string",
                        "description": "unique identifier of the company"
                      },
                      "icon_number": {
                        "type": "integer",
                        "description": "system-specific identifier of the company"
                      },
                      "easy_number": {
                        "type": "string",
                        "description": "EASY number of the company"
                      },
                      "company_name": {
                        "type": "string",
                        "description": "name of the company"
                      },
                      "registration_country": {
                        "type": "string",
                        "description": "ISO 3166-1 alpha-2 country code (for instance \"PL\" for Poland)"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string",
                            "example": "PL",
                            "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
                          },
                          "zip_code": {
                            "type": "string",
                            "description": "postal code in which the company is located"
                          },
                          "city": {
                            "type": "string",
                            "description": "city in which the company is located"
                          },
                          "address_lines": {
                            "type": "array",
                            "description": "address of the company",
                            "items": {
                              "type": "string"
                            }
                          },
                          "telephone": {
                            "type": "string",
                            "description": "telephone number of the company"
                          }
                        },
                        "x-swagger-router-model": "Address"
                      },
                      "national_identifiers": {
                        "type": "array",
                        "description": "national identifiers of the company (e.g VAT ID)",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "example": 120,
                                  "description": "the national identifier"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "VAT Number",
                                  "description": "the national identifier"
                                }
                              },
                              "x-swagger-router-model": "NationalIdentifierType"
                            },
                            "value": {
                              "type": "string",
                              "example": "R12312323",
                              "description": "the national identifier"
                            }
                          },
                          "x-swagger-router-model": "NationalIdentifier"
                        }
                      },
                      "activities": {
                        "type": "array",
                        "description": "the activities which the company conducts",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": "72",
                              "description": "A NACE Rev2 code"
                            },
                            "text": {
                              "type": "string",
                              "example": "Growing of non-perennial crops"
                            }
                          },
                          "x-swagger-router-model": "Nace"
                        }
                      },
                      "legalform": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "300",
                            "description": "A coded value of type CC0040, for a list of all available legal forms see /codedvalues/CC0040"
                          },
                          "text": {
                            "type": "string",
                            "example": "Limited liability company"
                          }
                        },
                        "x-swagger-router-model": "Legalform"
                      },
                      "as_of_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the validity date of the company information"
                      },
                      "date_of_last_balance_sheet": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date of the last balance sheet"
                      }
                    },
                    "x-swagger-router-model": "Company"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" \"https://test.cofacecentraleurope.com/api/bi/v1/companies/demo\""
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/companies/demo\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n   public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/companies/demo\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/company": {
      "get": {
        "tags": [
          "Company Identification"
        ],
        "description": "Find a company using a unique identifier (returns exactly 1 or 0 results).\n\nTips for finding a company:\n* If you are searching using national identifiers, provide the country (via the country_iso_code)\n* You don't need to include the legal form in the name (e.g. if the company is called PRINT Solutions Ltd, just search for PRINT Solutions).\n",
        "operationId": "identifyCompany",
        "parameters": [
          {
            "name": "country_iso_code",
            "in": "query",
            "description": "country to search in (ISO 3166-1 alpha-2 code)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "company_id",
            "in": "query",
            "description": "unique id of the company",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "icon_number",
            "in": "query",
            "description": "ICON number of the company",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "easy_number",
            "in": "query",
            "description": "EASY number of the company",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier_type",
            "in": "query",
            "description": "the type of the national identifier to search for (use getIdentifiers to find out which identifiers are available per country)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "identifier_value",
            "in": "query",
            "description": "the national identifier to search for",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_available_creditreport_products",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "show_available_monitoring_products",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "company": {
                      "type": "object",
                      "properties": {
                        "company_id": {
                          "type": "string",
                          "example": "string",
                          "description": "unique identifier of the company"
                        },
                        "icon_number": {
                          "type": "integer",
                          "description": "system-specific identifier of the company"
                        },
                        "easy_number": {
                          "type": "string",
                          "description": "EASY number of the company"
                        },
                        "company_name": {
                          "type": "string",
                          "description": "name of the company"
                        },
                        "registration_country": {
                          "type": "string",
                          "description": "ISO 3166-1 alpha-2 country code (for instance \"PL\" for Poland)"
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "country": {
                              "type": "string",
                              "example": "PL",
                              "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
                            },
                            "zip_code": {
                              "type": "string",
                              "description": "postal code in which the company is located"
                            },
                            "city": {
                              "type": "string",
                              "description": "city in which the company is located"
                            },
                            "address_lines": {
                              "type": "array",
                              "description": "address of the company",
                              "items": {
                                "type": "string"
                              }
                            },
                            "telephone": {
                              "type": "string",
                              "description": "telephone number of the company"
                            }
                          },
                          "x-swagger-router-model": "Address"
                        },
                        "national_identifiers": {
                          "type": "array",
                          "description": "national identifiers of the company (e.g VAT ID)",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "integer",
                                    "example": 120,
                                    "description": "the national identifier"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "VAT Number",
                                    "description": "the national identifier"
                                  }
                                },
                                "x-swagger-router-model": "NationalIdentifierType"
                              },
                              "value": {
                                "type": "string",
                                "example": "R12312323",
                                "description": "the national identifier"
                              }
                            },
                            "x-swagger-router-model": "NationalIdentifier"
                          }
                        },
                        "activities": {
                          "type": "array",
                          "description": "the activities which the company conducts",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "72",
                                "description": "A NACE Rev2 code"
                              },
                              "text": {
                                "type": "string",
                                "example": "Growing of non-perennial crops"
                              }
                            },
                            "x-swagger-router-model": "Nace"
                          }
                        },
                        "legalform": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": "300",
                              "description": "A coded value of type CC0040, for a list of all available legal forms see /codedvalues/CC0040"
                            },
                            "text": {
                              "type": "string",
                              "example": "Limited liability company"
                            }
                          },
                          "x-swagger-router-model": "Legalform"
                        },
                        "as_of_date": {
                          "type": "string",
                          "format": "date-time",
                          "description": "the validity date of the company information"
                        },
                        "date_of_last_balance_sheet": {
                          "type": "string",
                          "format": "date-time",
                          "description": "the date of the last balance sheet"
                        }
                      },
                      "x-swagger-router-model": "Company"
                    },
                    "creditreport_products": {
                      "type": "array",
                      "description": "available products for this company",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_code": {
                            "type": "string",
                            "description": "product code (a value from code table CC8800)"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the product"
                          },
                          "availability": {
                            "type": "string",
                            "enum": [
                              "available_on_order",
                              "available_immediately"
                            ]
                          },
                          "format": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "html",
                                "pdf",
                                "xml",
                                "txt",
                                "json"
                              ]
                            }
                          },
                          "countries": {
                            "type": "string",
                            "description": "list of iso country codes for which this product is available"
                          }
                        },
                        "x-swagger-router-model": "CreditReportProduct"
                      }
                    },
                    "monitoring_products": {
                      "type": "array",
                      "description": "available products for this company",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_code": {
                            "type": "string",
                            "description": "product code (a value from code table CC8800)"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the product"
                          },
                          "availability": {
                            "type": "string",
                            "enum": [
                              "can_be_monitored",
                              "requires_a_research"
                            ]
                          },
                          "format": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "html",
                                "pdf",
                                "xml",
                                "txt",
                                "json"
                              ]
                            }
                          },
                          "countries": {
                            "type": "string",
                            "description": "list of iso country codes for which this product is available"
                          }
                        },
                        "x-swagger-router-model": "MonitoringProduct"
                      }
                    }
                  },
                  "x-swagger-router-model": "CompanyDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" \"https://test.cofacecentraleurope.com/api/bi/v1/company?identifier_type=120&identifier_value=6551640402&country_iso_code=PL\""
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/company?identifier_type=120&identifier_value=6551640402&country_iso_code=PL\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/company?identifier_type=120&identifier_value=6551640402&country_iso_code=PL\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/orders/creditreport": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Order a credit report on a company.\n\nYou will need to specify at least:\n* the company to order (either with the company_id if the company has already been uniquely identified or with company_unidentified).\n* the product to order (product_details).\n  * product_code: 200 for a standard credit report (values from code table CC8800).\n  * language: the language of the report (e.g en for english).\n  * format: xml, json, pdf, html or txt.\n* if you're using the demo API key, restrict your order to the company_id of a demo company.\n",
        "operationId": "placeOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "product_details"
                ],
                "properties": {
                  "customer_reference": {
                    "type": "string",
                    "description": "your own identifier for the order which was given when you placed the order"
                  },
                  "company_id": {
                    "type": "string",
                    "description": "unique id of the company"
                  },
                  "company_unidentified": {
                    "type": "object",
                    "description": "Fill this out if you have not yet uniquely identified the company (using findCompany or identifyCompany)",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Smith Sheet Metal Inc.",
                        "description": "name of the company"
                      },
                      "registration_country": {
                        "type": "string",
                        "example": "PL",
                        "description": "ISO 3166-1 alpha-2 code"
                      },
                      "national_identifiers": {
                        "type": "array",
                        "description": "a list of national identifiers for the company (e.g. VAT ID)",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "example": 120,
                                  "description": "the national identifier"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "VAT Number",
                                  "description": "the national identifier"
                                }
                              },
                              "x-swagger-router-model": "NationalIdentifierType"
                            },
                            "value": {
                              "type": "string",
                              "example": "R12312323",
                              "description": "the national identifier"
                            }
                          },
                          "x-swagger-router-model": "NationalIdentifier"
                        }
                      },
                      "city": {
                        "type": "string",
                        "description": "city where the company is located"
                      },
                      "zip_code": {
                        "type": "string",
                        "description": "postal code of company address"
                      },
                      "address_lines": {
                        "type": "array",
                        "description": "company address",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "registration_country"
                    ],
                    "x-swagger-router-model": "CompanyUnidentified"
                  },
                  "product_details": {
                    "type": "object",
                    "properties": {
                      "product_code": {
                        "type": "string",
                        "format": "integer",
                        "description": "product code (a value from code table CC8800)"
                      },
                      "language": {
                        "type": "string",
                        "description": "ISO ISO 639-1 language code (for instance \"en\")"
                      },
                      "format": {
                        "type": "string",
                        "description": "file format",
                        "enum": [
                          "html",
                          "pdf",
                          "xml",
                          "txt",
                          "json"
                        ]
                      }
                    },
                    "required": [
                      "format",
                      "language",
                      "product_code"
                    ],
                    "x-swagger-router-model": "ProductDetails"
                  },
                  "credit_report_details": {
                    "type": "object",
                    "properties": {
                      "research_instructions": {
                        "type": "string",
                        "enum": [
                          "immediate_no_research",
                          "immediate_if_available_research_otherwise",
                          "research_no_immediate"
                        ],
                        "default": "immediate_if_available_research_otherwise"
                      },
                      "research_callback_url": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://mycompany.com/credit-report-orders/order-complete?our_ref=AB788823",
                        "description": "a URL which ICON will call when the order is ready"
                      },
                      "research_delivery_speed": {
                        "type": "string",
                        "enum": [
                          "normal",
                          "express",
                          "flash"
                        ],
                        "default": "normal"
                      },
                      "max_credit_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "the maxiumum credit to be granted to the company"
                      },
                      "max_credit_currency": {
                        "type": "string",
                        "description": "the currency of the maxiumum credit"
                      },
                      "question": {
                        "type": "string",
                        "example": "Is this company actually doing business at the registered address?",
                        "description": "if you want a researcher to answer one or more specific questions about the company, include them here"
                      }
                    },
                    "x-swagger-router-model": "RequestedCreditReportDetails"
                  }
                },
                "x-swagger-router-model": "RequestedOrderDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b84b4972-5567-40f8-be93-cb049f9d3c76",
                      "description": "the unique id of the order"
                    },
                    "order_status": {
                      "type": "string",
                      "enum": [
                        "in_preparation",
                        "open",
                        "cancelled",
                        "finished",
                        "monitoring_inactive",
                        "monitoring_active"
                      ]
                    },
                    "status_text": {
                      "type": "string"
                    },
                    "order_details": {
                      "type": "object",
                      "properties": {
                        "coface_reference": {
                          "type": "string"
                        },
                        "customer_reference": {
                          "type": "string",
                          "description": "unique id of the company"
                        },
                        "order_type": {
                          "type": "string",
                          "enum": [
                            "credit_report",
                            "monitoring"
                          ]
                        },
                        "product_code": {
                          "type": "string",
                          "description": "product code (a value from code table CC8800)"
                        },
                        "company_id": {
                          "type": "string"
                        },
                        "ordered": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date and time when the order was placed"
                        },
                        "requested_delivery": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date and time when delivery was requested"
                        },
                        "delivered": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date and time when order was delivered"
                        },
                        "your_question": {
                          "type": "string",
                          "description": "the question asked when the order was placed."
                        },
                        "our_answer": {
                          "type": "string",
                          "description": "the answer provided by the researcher."
                        },
                        "negative_reason": {
                          "type": "string",
                          "description": "If the order could not be fulfilled, this is the reason."
                        },
                        "negative_comment": {
                          "type": "string",
                          "description": "If the order could not be fulfilled, this is the comment from the researcher."
                        }
                      },
                      "x-swagger-router-model": "OrderDetails"
                    },
                    "report_documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "file_name": {
                            "type": "string",
                            "description": "Document file name."
                          },
                          "mime_type": {
                            "type": "string",
                            "description": "Mime-type of the document."
                          }
                        },
                        "x-swagger-router-model": "ReportDocument"
                      }
                    }
                  },
                  "x-swagger-router-model": "OrderStatus"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X POST -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"company_id\":5606280,\"product_details\":{\"product_code\":200,\"language\":\"en\",\"format\":\"pdf\"}}' \"https://test.cofacecentraleurope.com/api/bi/v1/orders/creditreport\""
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"content-type\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\ndata = json.dumps(\n    {\n        \"company_id\": \"5415240\",\n        \"product_details\": {\n            \"product_code\": \"200\",\n            \"language\": \"EN\",\n            \"format\": \"html\",\n        },\n        \"credit_report_details\": {\n            \"research_instructions\": \"immediate_no_research\"\n        },\n    })\nresponse = requests.post(\"https://test.cofacecentraleurope.com/api/bi/v1/orders/creditreport\", headers=headers, data=data)\nif (response.status_code == 202):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                string url = \"https://test.cofacecentraleurope.com/api/bi/v1/orders/creditreport\";\n                string payload = \"{\\\"company_id\\\": \\\"5415240\\\",\\\"product_details\\\": {\\\"product_code\\\": \\\"200\\\",\\\"language\\\": \\\"EN\\\",\\\"format\\\": \\\"html\\\"},\\\"credit_report_details\\\": {\\\"research_instructions\\\": \\\"immediate_no_research\\\"}}\";\n                HttpContent content = new StringContent(payload, System.Text.Encoding.UTF8, \"application/json\");\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.PostAsync(new Uri(url), content).Result;\n                Console.WriteLine(response.ToString());\n                Console.WriteLine(response.Content.ReadAsStringAsync().Result);\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/orders/monitoring": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Monitor a company to receive notifications when updated company data becomes available.\n\nYou will need to specify at least:\n* the company to monitor (company_id)\n* the monitoring product to order (product_details).\n  * product_code: 9002 for the standard CCE Risk monitor (values from code table CC8800).\n  * language: the language of notification (e.g en for english).\n  * format: xml, json, pdf, html or txt.\n* if you're using the demo API key, you cannot place a new monitoring order (you can check for notitifcations though)\n",
        "operationId": "placeMonitoringOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "company_id",
                  "product_details"
                ],
                "properties": {
                  "company_id": {
                    "type": "string",
                    "description": "unique id of the company"
                  },
                  "customer_reference": {
                    "type": "string",
                    "description": "your own identifier for the order which was given when you placed the order"
                  },
                  "product_details": {
                    "type": "object",
                    "properties": {
                      "product_code": {
                        "type": "string",
                        "format": "integer",
                        "description": "product code (a value from code table CC8800)"
                      },
                      "language": {
                        "type": "string",
                        "description": "ISO ISO 639-1 language code (for instance \"en\")"
                      },
                      "format": {
                        "type": "string",
                        "description": "file format",
                        "enum": [
                          "html",
                          "pdf",
                          "xml",
                          "txt",
                          "json"
                        ]
                      }
                    },
                    "required": [
                      "format",
                      "language",
                      "product_code"
                    ],
                    "x-swagger-router-model": "ProductDetails"
                  },
                  "monitoring_details": {
                    "type": "object",
                    "properties": {
                      "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date when monitoring should start. If omitted, today's date is assumed."
                      },
                      "duration_months": {
                        "type": "integer",
                        "description": "the number of months to monitor the company"
                      },
                      "notification_callback_url": {
                        "type": "string",
                        "description": "When a change notification is created, this URL will be called"
                      }
                    },
                    "x-swagger-router-model": "RequestedMonitoringDetails"
                  }
                },
                "x-swagger-router-model": "RequestedMonitoringOrderDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b84b4972-5567-40f8-be93-cb049f9d3c76",
                      "description": "the unique id of the order"
                    },
                    "order_status": {
                      "type": "string",
                      "enum": [
                        "in_preparation",
                        "open",
                        "cancelled",
                        "finished",
                        "monitoring_inactive",
                        "monitoring_active"
                      ]
                    },
                    "status_text": {
                      "type": "string"
                    },
                    "order_details": {
                      "type": "object",
                      "properties": {
                        "coface_reference": {
                          "type": "string"
                        },
                        "customer_reference": {
                          "type": "string",
                          "description": "unique id of the company"
                        },
                        "order_type": {
                          "type": "string",
                          "enum": [
                            "credit_report",
                            "monitoring"
                          ]
                        },
                        "product_code": {
                          "type": "string",
                          "description": "product code (a value from code table CC8800)"
                        },
                        "company_id": {
                          "type": "string"
                        },
                        "ordered": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date and time when the order was placed"
                        },
                        "requested_delivery": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date and time when delivery was requested"
                        },
                        "delivered": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date and time when order was delivered"
                        },
                        "your_question": {
                          "type": "string",
                          "description": "the question asked when the order was placed."
                        },
                        "our_answer": {
                          "type": "string",
                          "description": "the answer provided by the researcher."
                        },
                        "negative_reason": {
                          "type": "string",
                          "description": "If the order could not be fulfilled, this is the reason."
                        },
                        "negative_comment": {
                          "type": "string",
                          "description": "If the order could not be fulfilled, this is the comment from the researcher."
                        }
                      },
                      "x-swagger-router-model": "OrderDetails"
                    },
                    "report_documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "file_name": {
                            "type": "string",
                            "description": "Document file name."
                          },
                          "mime_type": {
                            "type": "string",
                            "description": "Mime-type of the document."
                          }
                        },
                        "x-swagger-router-model": "ReportDocument"
                      }
                    }
                  },
                  "x-swagger-router-model": "OrderStatus"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X POST -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"company_id\":5606280,\"product_details\":{\"product_code\":200,\"language\":\"en\",\"format\":\"pdf\"},\"monitoring_details\":{\"start_date\":\"2018-03-09\",\"duration_months\":12}}' \"https://test.cofacecentraleurope.com/api/bi/v1/orders/monitoring\""
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\ndata = json.dumps({\n    \"company_id\": 102296980,\n    \"product_details\": {\n        \"product_code\": 200,\n        \"language\": \"en\",\n        \"format\": \"pdf\"\n    },\n    \"monitoring_details\": {\n        \"start_date\": \"2018-03-09\",\n        \"duration_months\": 12\n    }\n})\nresponse = requests.post(\"https://test.cofacecentraleurope.com/api/bi/v1/orders/monitoring\", headers=headers, data=data)\nif (response.status_code == 202):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                string url = \"https://test.cofacecentraleurope.com/api/bi/v1/orders/monitoring\";\n                string payload = \"{\\\"company_id\\\": \\\"102296980\\\",\\\"product_details\\\": {\\\"product_code\\\": \\\"200\\\",\\\"language\\\": \\\"en\\\",\\\"format\\\": \\\"pdf\\\"},\\\"monitoring_details\\\": {\\\"start_date\\\": \\\"2018-03-09\\\",\\\"duration_months\\\": \\\"12\\\"}}\";\n                HttpContent content = new StringContent(payload, System.Text.Encoding.UTF8, \"application/json\");\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.PostAsync(new Uri(url), content).Result;\n                Console.WriteLine(response.ToString());\n                Console.WriteLine(response.Content.ReadAsStringAsync().Result);\n\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Find an order in your order history.",
        "operationId": "getOrders",
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "customer_reference",
            "in": "query",
            "description": "your own identifier for the order which you provided when you placed the order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coface_order_reference",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "credit_report",
                  "monitoring"
                ]
              }
            }
          },
          {
            "name": "product_code",
            "in": "query",
            "description": "product code (a value from code table CC8800)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ordered_from",
            "in": "query",
            "description": "the earliest order date for which to get orders",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ordered_to",
            "in": "query",
            "description": "the latest order date for which to get orders",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "delivered_from",
            "in": "query",
            "description": "the earliest delivery date for which to get orders",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "delivered_to",
            "in": "query",
            "description": "the latest delivery date for which to get orders",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "starting point within paged results (the X-Total-Count header of the response indicates the total number of results found)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "number of results to fetch starting from offset (the X-Total-Count header of the response indicates the total number of results found)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Total-Count": {
                "description": "total count of search results",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "b84b4972-5567-40f8-be93-cb049f9d3c76",
                        "description": "the unique id of the order"
                      },
                      "order_status": {
                        "type": "string",
                        "enum": [
                          "in_preparation",
                          "open",
                          "cancelled",
                          "finished",
                          "monitoring_inactive",
                          "monitoring_active"
                        ]
                      },
                      "status_text": {
                        "type": "string"
                      },
                      "order_details": {
                        "type": "object",
                        "properties": {
                          "coface_reference": {
                            "type": "string"
                          },
                          "customer_reference": {
                            "type": "string",
                            "description": "unique id of the company"
                          },
                          "order_type": {
                            "type": "string",
                            "enum": [
                              "credit_report",
                              "monitoring"
                            ]
                          },
                          "product_code": {
                            "type": "string",
                            "description": "product code (a value from code table CC8800)"
                          },
                          "company_id": {
                            "type": "string"
                          },
                          "ordered": {
                            "type": "string",
                            "format": "date-time",
                            "description": "date and time when the order was placed"
                          },
                          "requested_delivery": {
                            "type": "string",
                            "format": "date-time",
                            "description": "date and time when delivery was requested"
                          },
                          "delivered": {
                            "type": "string",
                            "format": "date-time",
                            "description": "date and time when order was delivered"
                          },
                          "your_question": {
                            "type": "string",
                            "description": "the question asked when the order was placed."
                          },
                          "our_answer": {
                            "type": "string",
                            "description": "the answer provided by the researcher."
                          },
                          "negative_reason": {
                            "type": "string",
                            "description": "If the order could not be fulfilled, this is the reason."
                          },
                          "negative_comment": {
                            "type": "string",
                            "description": "If the order could not be fulfilled, this is the comment from the researcher."
                          }
                        },
                        "x-swagger-router-model": "OrderDetails"
                      },
                      "report_documents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "file_name": {
                              "type": "string",
                              "description": "Document file name."
                            },
                            "mime_type": {
                              "type": "string",
                              "description": "Mime-type of the document."
                            }
                          },
                          "x-swagger-router-model": "ReportDocument"
                        }
                      }
                    },
                    "x-swagger-router-model": "OrderStatus"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/orders"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/orders?limit=5\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/orders?limit=5\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Retrieve the details of an order.",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the unique id of the order (returned from placeOrder)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "b84b4972-5567-40f8-be93-cb049f9d3c76",
                      "description": "the unique id of the order"
                    },
                    "order_status": {
                      "type": "string",
                      "enum": [
                        "in_preparation",
                        "open",
                        "cancelled",
                        "finished",
                        "monitoring_inactive",
                        "monitoring_active"
                      ]
                    },
                    "status_text": {
                      "type": "string"
                    },
                    "order_details": {
                      "type": "object",
                      "properties": {
                        "coface_reference": {
                          "type": "string"
                        },
                        "customer_reference": {
                          "type": "string",
                          "description": "unique id of the company"
                        },
                        "order_type": {
                          "type": "string",
                          "enum": [
                            "credit_report",
                            "monitoring"
                          ]
                        },
                        "product_code": {
                          "type": "string",
                          "description": "product code (a value from code table CC8800)"
                        },
                        "company_id": {
                          "type": "string"
                        },
                        "ordered": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date and time when the order was placed"
                        },
                        "requested_delivery": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date and time when delivery was requested"
                        },
                        "delivered": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date and time when order was delivered"
                        },
                        "your_question": {
                          "type": "string",
                          "description": "the question asked when the order was placed."
                        },
                        "our_answer": {
                          "type": "string",
                          "description": "the answer provided by the researcher."
                        },
                        "negative_reason": {
                          "type": "string",
                          "description": "If the order could not be fulfilled, this is the reason."
                        },
                        "negative_comment": {
                          "type": "string",
                          "description": "If the order could not be fulfilled, this is the comment from the researcher."
                        }
                      },
                      "x-swagger-router-model": "OrderDetails"
                    },
                    "report_documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "file_name": {
                            "type": "string",
                            "description": "Document file name."
                          },
                          "mime_type": {
                            "type": "string",
                            "description": "Mime-type of the document."
                          }
                        },
                        "x-swagger-router-model": "ReportDocument"
                      }
                    }
                  },
                  "x-swagger-router-model": "OrderStatus"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/order/1234"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\norder_id = \"603f5ea2-b869-46c3-a85e-ed2677c1e4ed\"\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/order/{0}\".format(order_id), headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/order/8842ace2-e377-48d9-b129-f952950ea535\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/order/{id}/comment": {
      "put": {
        "tags": [
          "Order"
        ],
        "description": "Submit a comment to an order.",
        "operationId": "submitComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the unique id of the order (returned from placeOrder) to which the comment should be submitted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customer_reference": {
                    "type": "string",
                    "example": "OUR TRACKING NUMBER #34234",
                    "description": "the reference provided by the customer when the order was placed."
                  },
                  "contact_name": {
                    "type": "string",
                    "example": "Tom Smith",
                    "description": "an optional contact name to identify the person updating the order."
                  },
                  "contact_email": {
                    "type": "string",
                    "example": "tom@smith.com",
                    "description": "an optional contact email address for the person updating the order."
                  },
                  "contact_telephone": {
                    "type": "string",
                    "example": "+43-1-62552-410",
                    "description": "an optional telephone number for the person updating the order."
                  },
                  "contact_fax": {
                    "type": "string",
                    "example": "+43-1-62552-444",
                    "description": "an optional fax number for the person updating the order."
                  },
                  "comment": {
                    "type": "string",
                    "example": "Please ensure that you include all directors of this company",
                    "description": "a comment to the order (for instance \"please ensure that you include all directors of this company\")."
                  }
                },
                "x-swagger-router-model": "UpdatedOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X PUT -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"comment\":\"my comment\"}' \"https://test.cofacecentraleurope.com/api/bi/v1/order/b61d46a2-f23f-4ca0-a954-d5cd2c70cfac/comment\""
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\norder_id = \"603f5ea2-b869-46c3-a85e-ed2677c1e4ed\"\ncomment = \"any comment\"\nheaders = {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\ndata = json.dumps({\"comment\": comment})\nresponse = requests.put(\"https://test.cofacecentraleurope.com/api/bi/v1/order/{0}/comment\".format(order_id), headers=headers, data=data)\nif (response.status_code == 202):\n    print(\"OK\")\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                string url = \"https://test.cofacecentraleurope.com/api/bi/v1/order/603f5ea2-b869-46c3-a85e-ed2677c1e4ed/comment\";\n                string payload = \"{\\\"comment\\\": \\\"some comment\\\"}\";\n                HttpContent content = new StringContent(payload, System.Text.Encoding.UTF8, \"application/json\");\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.PutAsync(new Uri(url), content).Result;\n                Console.WriteLine(response.ToString());\n                Console.WriteLine(response.Content.ReadAsStringAsync().Result);\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/order/{id}/status": {
      "put": {
        "tags": [
          "Order"
        ],
        "description": "Request an update to the status of a previously submitted order.",
        "operationId": "updateStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the unique id of the order (returned from placeOrder).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "example": "cancel",
                    "description": "the action which you request on the order",
                    "enum": [
                      "stop_monitoring",
                      "undo_stop_monitoring",
                      "cancel"
                    ]
                  },
                  "cancel_reason": {
                    "type": "string",
                    "example": "Order placed by mistake, please cancel.",
                    "description": "Required when the order is requested to be cancelled."
                  }
                },
                "x-swagger-router-model": "UpdatedStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X PUT -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -d '{\"action\":\"cancel\",\"cancel_reason\":\"placed by mistake\"}' \"https://test.cofacecentraleurope.com/api/bi/v1/order/b61d46a2-f23f-4ca0-a954-d5cd2c70cfac/status\""
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\norder_id = \"603f5ea2-b869-46c3-a85e-ed2677c1e4ed\"\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\", \"Content-Type\": \"application/json\"}\ndata = json.dumps({\"action\": \"cancel\", \"cancel_reason\": \"order placed by mistake\"})\nresponse = requests.put(\"https://test.cofacecentraleurope.com/api/bi/v1/order/{0}/status\".format(order_id), headers=headers, data=data)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                string url = \"https://test.cofacecentraleurope.com/api/bi/v1/order/603f5ea2-b869-46c3-a85e-ed2677c1e4ed/status\";\n                string payload = \"{\\\"action\\\": \\\"cancel\\\",\\\"cancel_reason\\\": \\\"order placed by mistake\\\"}\";\n                HttpContent content = new StringContent(payload, System.Text.Encoding.UTF8, \"application/json\");\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.PutAsync(new Uri(url), content).Result;\n                Console.WriteLine(response.ToString());\n                Console.WriteLine(response.Content.ReadAsStringAsync().Result);\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/order/{id}/documents": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Lists the documents (e.g. reports) associated with an order.",
        "operationId": "getOrderDocumentList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the unique id of the order (returned from placeOrder) to which the comment should be submitted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "file_name": {
                        "type": "string",
                        "description": "Document file name."
                      },
                      "mime_type": {
                        "type": "string",
                        "description": "Mime-type of the document."
                      }
                    },
                    "x-swagger-router-model": "ReportDocument"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/order/1234/documents"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\norder_id = \"cc4b853d-f059-48e0-97cc-ef3785315213\"\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/order/{0}/documents\".format(order_id), headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/order/cc4b853d-f059-48e0-97cc-ef3785315213/documents\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/order/{id}/document/{file_name}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Retrieve a document (e.g. a report) associated with a finished order. The document may take some time to be created, so you need to check that the order status is \"finished\" before you retrieve the document (see GET '/order/{id}/status' above). You can see an example of this workflow at https://github.com/coface/business-information-api/blob/master/python/complete-workflows/search-order-download.py",
        "operationId": "getOrderDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the unique id of the order (returned from placeOrder) to which the comment should be submitted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_name",
            "in": "path",
            "description": "the file name if the document (as returned from getOrderDocumentList).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/html": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.ms-excel": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/msword": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/vnd.ms-excel": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/msword": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/order/1234/document/report.html"
          },
          {
            "lang": "Python",
            "source": "\n\nimport requests\nimport json\n\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\norder_id = \"cc4b853d-f059-48e0-97cc-ef3785315213\"\nfilename = \"report.html\"\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/order/{0}/document/{1}\".format(order_id, filename), headers=headers)\nif (response.status_code == 200):\n    print(response.text)\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\n// note: you need to check that the status of the order is \"finished\" before retrieving the document\n// see https://github.com/coface/business-information-api/blob/master/C%23/complete-workflows/search-order-download.cs for the full sequence\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/order/cc4b853d-f059-48e0-97cc-ef3785315213/document/report.html\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "description": "Get a list of available monitoring notifications.",
        "operationId": "getNotifications",
        "parameters": [
          {
            "name": "notification_timestamp_from",
            "in": "query",
            "description": "Lower limit (inclusive) for the date of retrieved notifications",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "notification_timestamp_to",
            "in": "query",
            "description": "Upper limit (inclusive) for the date of retrieved notifications",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "starting point within paged results (the X-Total-Count header of the response indicates the total number of results found)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "number of results to fetch starting from offset (the X-Total-Count header of the response indicates the total number of results found)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Total-Count": {
                "description": "total count of search results",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1029390,
                        "description": "the unique id of the notification (which can be used to retrieve the documents associated with the notification)."
                      },
                      "order_id": {
                        "type": "string",
                        "example": "62a50848-e9de-45bd-9e07-b2b1d8cc7cb0",
                        "description": "the monitoring order's id to which the notification belongs to"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-03-06T11:19:07Z",
                        "description": "the time at which the notification was created."
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "company_id": {
                            "type": "string",
                            "example": "string",
                            "description": "unique identifier of the company"
                          },
                          "icon_number": {
                            "type": "integer",
                            "description": "system-specific identifier of the company"
                          },
                          "easy_number": {
                            "type": "string",
                            "description": "EASY number of the company"
                          },
                          "company_name": {
                            "type": "string",
                            "description": "name of the company"
                          },
                          "registration_country": {
                            "type": "string",
                            "description": "ISO 3166-1 alpha-2 country code (for instance \"PL\" for Poland)"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "country": {
                                "type": "string",
                                "example": "PL",
                                "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
                              },
                              "zip_code": {
                                "type": "string",
                                "description": "postal code in which the company is located"
                              },
                              "city": {
                                "type": "string",
                                "description": "city in which the company is located"
                              },
                              "address_lines": {
                                "type": "array",
                                "description": "address of the company",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "telephone": {
                                "type": "string",
                                "description": "telephone number of the company"
                              }
                            },
                            "x-swagger-router-model": "Address"
                          },
                          "national_identifiers": {
                            "type": "array",
                            "description": "national identifiers of the company (e.g VAT ID)",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 120,
                                      "description": "the national identifier"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "VAT Number",
                                      "description": "the national identifier"
                                    }
                                  },
                                  "x-swagger-router-model": "NationalIdentifierType"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "R12312323",
                                  "description": "the national identifier"
                                }
                              },
                              "x-swagger-router-model": "NationalIdentifier"
                            }
                          },
                          "activities": {
                            "type": "array",
                            "description": "the activities which the company conducts",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "example": "72",
                                  "description": "A NACE Rev2 code"
                                },
                                "text": {
                                  "type": "string",
                                  "example": "Growing of non-perennial crops"
                                }
                              },
                              "x-swagger-router-model": "Nace"
                            }
                          },
                          "legalform": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "300",
                                "description": "A coded value of type CC0040, for a list of all available legal forms see /codedvalues/CC0040"
                              },
                              "text": {
                                "type": "string",
                                "example": "Limited liability company"
                              }
                            },
                            "x-swagger-router-model": "Legalform"
                          },
                          "as_of_date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the validity date of the company information"
                          },
                          "date_of_last_balance_sheet": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the date of the last balance sheet"
                          }
                        },
                        "x-swagger-router-model": "Company"
                      },
                      "changes": {
                        "type": "array",
                        "description": "For details see https://github.com/coface/business-information-api/wiki/Monitoring-Notifications",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "example": "300",
                                  "description": "A coded value of type CC8821, for a list of all available legal forms see /codedvalues/CC8821"
                                },
                                "text": {
                                  "type": "string",
                                  "example": "Financial Information"
                                }
                              },
                              "x-swagger-router-model": "MonitoredParameterType"
                            },
                            "type2": {
                              "type": "string",
                              "description": "Depending on the type, describes the change further."
                            },
                            "type3": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Depending on the type and type2 describes the change further"
                              }
                            }
                          },
                          "x-swagger-router-model": "Change"
                        }
                      }
                    },
                    "x-swagger-router-model": "Notification"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/notifications"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/notifications\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/notifications\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/notification/{id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "description": "Retrieves a monitoring notification (the main notification content). If the notification might include multiple documents then use the method /notification/{id}/documents to retrieve all documents.",
        "operationId": "getNotificationDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/html": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/notification/1234"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nnotification_id = 55\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/notification/{0}\".format(notification_id), headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/notification/55\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/notification/{id}/documents": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "description": "Lists the documents (e.g. the main notification content and possible notification attachments or the notification content in a different format) associated with a notification.",
        "operationId": "getNotificationDocumentsList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "file_name": {
                        "type": "string",
                        "description": "Document file name."
                      },
                      "mime_type": {
                        "type": "string",
                        "description": "Mime-type of the document."
                      }
                    },
                    "x-swagger-router-model": "ReportDocument"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/notification/1234/documents"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\norder_id = \"cc4b853d-f059-48e0-97cc-ef3785315213\"\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/notification/{0}/documents\".format(order_id), headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/notification/cc4b853d-f059-48e0-97cc-ef3785315213/documents\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/notification/{id}/document/{file_name}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "description": "Retrieve a document (e.g. the main notification or a notification attachment) associated with a notification.",
        "operationId": "getSpecificNotificationDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the unique id of the notification",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "file_name",
            "in": "path",
            "description": "the file name if the document (as returned from getNotificationDocumentList).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/html": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.ms-excel": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/msword": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/vnd.ms-excel": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/msword": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/notification/1234/document/notification.json"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\nimport json\n\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\norder_id = \"cc4b853d-f059-48e0-97cc-ef3785315213\"\nfilename = \"notification.json\"\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/notification/{0}/document/{1}\".format(order_id, filename), headers=headers)\nif (response.status_code == 200):\n    print(response.text)\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/notification/cc4b853d-f059-48e0-97cc-ef3785315213/document/notification.json\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/codedvalues": {
      "get": {
        "tags": [
          "Misc"
        ],
        "description": "Retrieves the list of possible code names (i.e. legal forms, activities etc.)",
        "operationId": "getCodetables",
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-Total-Count": {
                "description": "total count of search results",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code_name": {
                        "type": "string",
                        "example": "CC8800",
                        "description": "code table name."
                      },
                      "description": {
                        "type": "string",
                        "example": "Products",
                        "description": "description of the code table."
                      }
                    },
                    "x-swagger-router-model": "CodeTable"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/codedvalues"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/codedvalues\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/codedvalues\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    },
    "/codedvalues/{code_name}": {
      "get": {
        "tags": [
          "Misc"
        ],
        "description": "Retrieves the list of possible code values (i.e. legal forms, activities etc.)",
        "operationId": "getCodetableValues",
        "parameters": [
          {
            "name": "code_name",
            "in": "path",
            "description": "the code table name (e.g. CC0040 for legal forms)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code_value": {
                        "type": "string",
                        "example": "200",
                        "description": "a numeric or alphanumeric code value."
                      },
                      "code_name": {
                        "type": "string",
                        "example": "CC8800",
                        "description": "name of the code table to which this code belongs."
                      },
                      "text": {
                        "type": "string",
                        "example": "CREDIT REPORT",
                        "description": "text associated with this code."
                      },
                      "language": {
                        "type": "string",
                        "description": "The language of the text"
                      }
                    },
                    "x-swagger-router-model": "CodedValue"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500,
                      "description": "numeric error code (http status 4xx-5xx)."
                    },
                    "message": {
                      "type": "string",
                      "description": "textual error message."
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-swagger-router-model": "ErrorResponse"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl -X GET -H \"api_key: 8842ace2-e377-48d9-b129-f952950ea535\" -H \"Accept: application/json\" https://test.cofacecentraleurope.com/api/bi/v1/codedvalues/CC0040"
          },
          {
            "lang": "Python",
            "source": "import requests\nimport json\nheaders = {\"Accept\": \"application/json\", \"api_key\": \"8842ace2-e377-48d9-b129-f952950ea535\"}\nresponse = requests.get(\"https://test.cofacecentraleurope.com/api/bi/v1/codedvalues/CC0040\", headers=headers)\nif (response.status_code == 200):\n    print(json.dumps(response.json(), indent=2))\nelse:\n    raise ValueError(\"server returned http status %d (%s)\" % (response.status_code, response.text))"
          },
          {
            "lang": "C#",
            "source": "using System;\nusing System.Net.Http;\n\nnamespace ConsoleProgram\n{\n    public class Class1\n    {\n        private const string url = \"https://test.cofacecentraleurope.com/api/bi/v1/codedvalues/CC0040\";\n\n        static void Main(string[] args)\n        {\n            using (var httpClient = new HttpClient())\n            {\n                httpClient.DefaultRequestHeaders.Add(\"api_key\", \"8842ace2-e377-48d9-b129-f952950ea535\");\n                var response = httpClient.GetStringAsync(new Uri(url)).Result;\n                Console.WriteLine(response.ToString());\n            }\n        }\n    }\n}"
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://b2b.cofacecentraleurope.com:443/api/bi/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "api_key_security": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "schemas": {
      "RequestedOrderDetails": {
        "required": [
          "product_details"
        ],
        "properties": {
          "customer_reference": {
            "type": "string",
            "description": "your own identifier for the order which was given when you placed the order"
          },
          "company_id": {
            "type": "string",
            "description": "unique id of the company"
          },
          "company_unidentified": {
            "type": "object",
            "description": "Fill this out if you have not yet uniquely identified the company (using findCompany or identifyCompany)",
            "properties": {
              "name": {
                "type": "string",
                "example": "Smith Sheet Metal Inc.",
                "description": "name of the company"
              },
              "registration_country": {
                "type": "string",
                "example": "PL",
                "description": "ISO 3166-1 alpha-2 code"
              },
              "national_identifiers": {
                "type": "array",
                "description": "a list of national identifiers for the company (e.g. VAT ID)",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 120,
                          "description": "the national identifier"
                        },
                        "name": {
                          "type": "string",
                          "example": "VAT Number",
                          "description": "the national identifier"
                        }
                      },
                      "x-swagger-router-model": "NationalIdentifierType"
                    },
                    "value": {
                      "type": "string",
                      "example": "R12312323",
                      "description": "the national identifier"
                    }
                  },
                  "x-swagger-router-model": "NationalIdentifier"
                }
              },
              "city": {
                "type": "string",
                "description": "city where the company is located"
              },
              "zip_code": {
                "type": "string",
                "description": "postal code of company address"
              },
              "address_lines": {
                "type": "array",
                "description": "company address",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "registration_country"
            ],
            "x-swagger-router-model": "CompanyUnidentified"
          },
          "product_details": {
            "type": "object",
            "properties": {
              "product_code": {
                "type": "string",
                "format": "integer",
                "description": "product code (a value from code table CC8800)"
              },
              "language": {
                "type": "string",
                "description": "ISO ISO 639-1 language code (for instance \"en\")"
              },
              "format": {
                "type": "string",
                "description": "file format",
                "enum": [
                  "html",
                  "pdf",
                  "xml",
                  "txt",
                  "json"
                ]
              }
            },
            "required": [
              "format",
              "language",
              "product_code"
            ],
            "x-swagger-router-model": "ProductDetails"
          },
          "credit_report_details": {
            "type": "object",
            "properties": {
              "research_instructions": {
                "type": "string",
                "enum": [
                  "immediate_no_research",
                  "immediate_if_available_research_otherwise",
                  "research_no_immediate"
                ],
                "default": "immediate_if_available_research_otherwise"
              },
              "research_callback_url": {
                "type": "string",
                "format": "uri",
                "example": "https://mycompany.com/credit-report-orders/order-complete?our_ref=AB788823",
                "description": "a URL which ICON will call when the order is ready"
              },
              "research_delivery_speed": {
                "type": "string",
                "enum": [
                  "normal",
                  "express",
                  "flash"
                ],
                "default": "normal"
              },
              "max_credit_amount": {
                "type": "integer",
                "format": "int64",
                "description": "the maxiumum credit to be granted to the company"
              },
              "max_credit_currency": {
                "type": "string",
                "description": "the currency of the maxiumum credit"
              },
              "question": {
                "type": "string",
                "example": "Is this company actually doing business at the registered address?",
                "description": "if you want a researcher to answer one or more specific questions about the company, include them here"
              }
            },
            "x-swagger-router-model": "RequestedCreditReportDetails"
          }
        }
      },
      "RequestedMonitoringOrderDetails": {
        "required": [
          "company_id",
          "product_details"
        ],
        "properties": {
          "company_id": {
            "type": "string",
            "description": "unique id of the company"
          },
          "customer_reference": {
            "type": "string",
            "description": "your own identifier for the order which was given when you placed the order"
          },
          "product_details": {
            "type": "object",
            "properties": {
              "product_code": {
                "type": "string",
                "format": "integer",
                "description": "product code (a value from code table CC8800)"
              },
              "language": {
                "type": "string",
                "description": "ISO ISO 639-1 language code (for instance \"en\")"
              },
              "format": {
                "type": "string",
                "description": "file format",
                "enum": [
                  "html",
                  "pdf",
                  "xml",
                  "txt",
                  "json"
                ]
              }
            },
            "required": [
              "format",
              "language",
              "product_code"
            ],
            "x-swagger-router-model": "ProductDetails"
          },
          "monitoring_details": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "format": "date-time",
                "description": "The date when monitoring should start. If omitted, today's date is assumed."
              },
              "duration_months": {
                "type": "integer",
                "description": "the number of months to monitor the company"
              },
              "notification_callback_url": {
                "type": "string",
                "description": "When a change notification is created, this URL will be called"
              }
            },
            "x-swagger-router-model": "RequestedMonitoringDetails"
          }
        }
      },
      "RequestedCreditReportDetails": {
        "properties": {
          "research_instructions": {
            "type": "string",
            "enum": [
              "immediate_no_research",
              "immediate_if_available_research_otherwise",
              "research_no_immediate"
            ],
            "default": "immediate_if_available_research_otherwise"
          },
          "research_callback_url": {
            "type": "string",
            "format": "uri",
            "example": "https://mycompany.com/credit-report-orders/order-complete?our_ref=AB788823",
            "description": "a URL which ICON will call when the order is ready"
          },
          "research_delivery_speed": {
            "type": "string",
            "enum": [
              "normal",
              "express",
              "flash"
            ],
            "default": "normal"
          },
          "max_credit_amount": {
            "type": "integer",
            "format": "int64",
            "description": "the maxiumum credit to be granted to the company"
          },
          "max_credit_currency": {
            "type": "string",
            "description": "the currency of the maxiumum credit"
          },
          "question": {
            "type": "string",
            "example": "Is this company actually doing business at the registered address?",
            "description": "if you want a researcher to answer one or more specific questions about the company, include them here"
          }
        }
      },
      "RequestedMonitoringDetails": {
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date when monitoring should start. If omitted, today's date is assumed."
          },
          "duration_months": {
            "type": "integer",
            "description": "the number of months to monitor the company"
          },
          "notification_callback_url": {
            "type": "string",
            "description": "When a change notification is created, this URL will be called"
          }
        }
      },
      "ProductDetails": {
        "required": [
          "format",
          "language",
          "product_code"
        ],
        "properties": {
          "product_code": {
            "type": "string",
            "format": "integer",
            "description": "product code (a value from code table CC8800)"
          },
          "language": {
            "type": "string",
            "description": "ISO ISO 639-1 language code (for instance \"en\")"
          },
          "format": {
            "type": "string",
            "description": "file format",
            "enum": [
              "html",
              "pdf",
              "xml",
              "txt",
              "json"
            ]
          }
        }
      },
      "CompanyUnidentified": {
        "required": [
          "registration_country"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Smith Sheet Metal Inc.",
            "description": "name of the company"
          },
          "registration_country": {
            "type": "string",
            "example": "PL",
            "description": "ISO 3166-1 alpha-2 code"
          },
          "national_identifiers": {
            "type": "array",
            "description": "a list of national identifiers for the company (e.g. VAT ID)",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 120,
                      "description": "the national identifier"
                    },
                    "name": {
                      "type": "string",
                      "example": "VAT Number",
                      "description": "the national identifier"
                    }
                  },
                  "x-swagger-router-model": "NationalIdentifierType"
                },
                "value": {
                  "type": "string",
                  "example": "R12312323",
                  "description": "the national identifier"
                }
              },
              "x-swagger-router-model": "NationalIdentifier"
            }
          },
          "city": {
            "type": "string",
            "description": "city where the company is located"
          },
          "zip_code": {
            "type": "string",
            "description": "postal code of company address"
          },
          "address_lines": {
            "type": "array",
            "description": "company address",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Fill this out if you have not yet uniquely identified the company (using findCompany or identifyCompany)"
      },
      "OrderStatus": {
        "properties": {
          "id": {
            "type": "string",
            "example": "b84b4972-5567-40f8-be93-cb049f9d3c76",
            "description": "the unique id of the order"
          },
          "order_status": {
            "type": "string",
            "enum": [
              "in_preparation",
              "open",
              "cancelled",
              "finished",
              "monitoring_inactive",
              "monitoring_active"
            ]
          },
          "status_text": {
            "type": "string"
          },
          "order_details": {
            "type": "object",
            "properties": {
              "coface_reference": {
                "type": "string"
              },
              "customer_reference": {
                "type": "string",
                "description": "unique id of the company"
              },
              "order_type": {
                "type": "string",
                "enum": [
                  "credit_report",
                  "monitoring"
                ]
              },
              "product_code": {
                "type": "string",
                "description": "product code (a value from code table CC8800)"
              },
              "company_id": {
                "type": "string"
              },
              "ordered": {
                "type": "string",
                "format": "date-time",
                "description": "date and time when the order was placed"
              },
              "requested_delivery": {
                "type": "string",
                "format": "date-time",
                "description": "date and time when delivery was requested"
              },
              "delivered": {
                "type": "string",
                "format": "date-time",
                "description": "date and time when order was delivered"
              },
              "your_question": {
                "type": "string",
                "description": "the question asked when the order was placed."
              },
              "our_answer": {
                "type": "string",
                "description": "the answer provided by the researcher."
              },
              "negative_reason": {
                "type": "string",
                "description": "If the order could not be fulfilled, this is the reason."
              },
              "negative_comment": {
                "type": "string",
                "description": "If the order could not be fulfilled, this is the comment from the researcher."
              }
            },
            "x-swagger-router-model": "OrderDetails"
          },
          "report_documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file_name": {
                  "type": "string",
                  "description": "Document file name."
                },
                "mime_type": {
                  "type": "string",
                  "description": "Mime-type of the document."
                }
              },
              "x-swagger-router-model": "ReportDocument"
            }
          }
        }
      },
      "OrderDetails": {
        "properties": {
          "coface_reference": {
            "type": "string"
          },
          "customer_reference": {
            "type": "string",
            "description": "unique id of the company"
          },
          "order_type": {
            "type": "string",
            "enum": [
              "credit_report",
              "monitoring"
            ]
          },
          "product_code": {
            "type": "string",
            "description": "product code (a value from code table CC8800)"
          },
          "company_id": {
            "type": "string"
          },
          "ordered": {
            "type": "string",
            "format": "date-time",
            "description": "date and time when the order was placed"
          },
          "requested_delivery": {
            "type": "string",
            "format": "date-time",
            "description": "date and time when delivery was requested"
          },
          "delivered": {
            "type": "string",
            "format": "date-time",
            "description": "date and time when order was delivered"
          },
          "your_question": {
            "type": "string",
            "description": "the question asked when the order was placed."
          },
          "our_answer": {
            "type": "string",
            "description": "the answer provided by the researcher."
          },
          "negative_reason": {
            "type": "string",
            "description": "If the order could not be fulfilled, this is the reason."
          },
          "negative_comment": {
            "type": "string",
            "description": "If the order could not be fulfilled, this is the comment from the researcher."
          }
        }
      },
      "ReportDocument": {
        "properties": {
          "file_name": {
            "type": "string",
            "description": "Document file name."
          },
          "mime_type": {
            "type": "string",
            "description": "Mime-type of the document."
          }
        }
      },
      "ServerStatus": {
        "properties": {
          "status": {
            "type": "string",
            "description": "Description of the server status."
          }
        }
      },
      "Company": {
        "properties": {
          "company_id": {
            "type": "string",
            "example": "string",
            "description": "unique identifier of the company"
          },
          "icon_number": {
            "type": "integer",
            "description": "system-specific identifier of the company"
          },
          "easy_number": {
            "type": "string",
            "description": "EASY number of the company"
          },
          "company_name": {
            "type": "string",
            "description": "name of the company"
          },
          "registration_country": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code (for instance \"PL\" for Poland)"
          },
          "address": {
            "type": "object",
            "properties": {
              "country": {
                "type": "string",
                "example": "PL",
                "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
              },
              "zip_code": {
                "type": "string",
                "description": "postal code in which the company is located"
              },
              "city": {
                "type": "string",
                "description": "city in which the company is located"
              },
              "address_lines": {
                "type": "array",
                "description": "address of the company",
                "items": {
                  "type": "string"
                }
              },
              "telephone": {
                "type": "string",
                "description": "telephone number of the company"
              }
            },
            "x-swagger-router-model": "Address"
          },
          "national_identifiers": {
            "type": "array",
            "description": "national identifiers of the company (e.g VAT ID)",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 120,
                      "description": "the national identifier"
                    },
                    "name": {
                      "type": "string",
                      "example": "VAT Number",
                      "description": "the national identifier"
                    }
                  },
                  "x-swagger-router-model": "NationalIdentifierType"
                },
                "value": {
                  "type": "string",
                  "example": "R12312323",
                  "description": "the national identifier"
                }
              },
              "x-swagger-router-model": "NationalIdentifier"
            }
          },
          "activities": {
            "type": "array",
            "description": "the activities which the company conducts",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "72",
                  "description": "A NACE Rev2 code"
                },
                "text": {
                  "type": "string",
                  "example": "Growing of non-perennial crops"
                }
              },
              "x-swagger-router-model": "Nace"
            }
          },
          "legalform": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "300",
                "description": "A coded value of type CC0040, for a list of all available legal forms see /codedvalues/CC0040"
              },
              "text": {
                "type": "string",
                "example": "Limited liability company"
              }
            },
            "x-swagger-router-model": "Legalform"
          },
          "as_of_date": {
            "type": "string",
            "format": "date-time",
            "description": "the validity date of the company information"
          },
          "date_of_last_balance_sheet": {
            "type": "string",
            "format": "date-time",
            "description": "the date of the last balance sheet"
          }
        }
      },
      "MonitoredParameterType": {
        "properties": {
          "code": {
            "type": "string",
            "example": "300",
            "description": "A coded value of type CC8821, for a list of all available legal forms see /codedvalues/CC8821"
          },
          "text": {
            "type": "string",
            "example": "Financial Information"
          }
        }
      },
      "Legalform": {
        "properties": {
          "code": {
            "type": "string",
            "example": "300",
            "description": "A coded value of type CC0040, for a list of all available legal forms see /codedvalues/CC0040"
          },
          "text": {
            "type": "string",
            "example": "Limited liability company"
          }
        }
      },
      "Nace": {
        "properties": {
          "code": {
            "type": "string",
            "example": "72",
            "description": "A NACE Rev2 code"
          },
          "text": {
            "type": "string",
            "example": "Growing of non-perennial crops"
          }
        }
      },
      "CompanyDetails": {
        "properties": {
          "company": {
            "type": "object",
            "properties": {
              "company_id": {
                "type": "string",
                "example": "string",
                "description": "unique identifier of the company"
              },
              "icon_number": {
                "type": "integer",
                "description": "system-specific identifier of the company"
              },
              "easy_number": {
                "type": "string",
                "description": "EASY number of the company"
              },
              "company_name": {
                "type": "string",
                "description": "name of the company"
              },
              "registration_country": {
                "type": "string",
                "description": "ISO 3166-1 alpha-2 country code (for instance \"PL\" for Poland)"
              },
              "address": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "example": "PL",
                    "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
                  },
                  "zip_code": {
                    "type": "string",
                    "description": "postal code in which the company is located"
                  },
                  "city": {
                    "type": "string",
                    "description": "city in which the company is located"
                  },
                  "address_lines": {
                    "type": "array",
                    "description": "address of the company",
                    "items": {
                      "type": "string"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "description": "telephone number of the company"
                  }
                },
                "x-swagger-router-model": "Address"
              },
              "national_identifiers": {
                "type": "array",
                "description": "national identifiers of the company (e.g VAT ID)",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 120,
                          "description": "the national identifier"
                        },
                        "name": {
                          "type": "string",
                          "example": "VAT Number",
                          "description": "the national identifier"
                        }
                      },
                      "x-swagger-router-model": "NationalIdentifierType"
                    },
                    "value": {
                      "type": "string",
                      "example": "R12312323",
                      "description": "the national identifier"
                    }
                  },
                  "x-swagger-router-model": "NationalIdentifier"
                }
              },
              "activities": {
                "type": "array",
                "description": "the activities which the company conducts",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "72",
                      "description": "A NACE Rev2 code"
                    },
                    "text": {
                      "type": "string",
                      "example": "Growing of non-perennial crops"
                    }
                  },
                  "x-swagger-router-model": "Nace"
                }
              },
              "legalform": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "300",
                    "description": "A coded value of type CC0040, for a list of all available legal forms see /codedvalues/CC0040"
                  },
                  "text": {
                    "type": "string",
                    "example": "Limited liability company"
                  }
                },
                "x-swagger-router-model": "Legalform"
              },
              "as_of_date": {
                "type": "string",
                "format": "date-time",
                "description": "the validity date of the company information"
              },
              "date_of_last_balance_sheet": {
                "type": "string",
                "format": "date-time",
                "description": "the date of the last balance sheet"
              }
            },
            "x-swagger-router-model": "Company"
          },
          "creditreport_products": {
            "type": "array",
            "description": "available products for this company",
            "items": {
              "type": "object",
              "properties": {
                "product_code": {
                  "type": "string",
                  "description": "product code (a value from code table CC8800)"
                },
                "name": {
                  "type": "string",
                  "description": "name of the product"
                },
                "availability": {
                  "type": "string",
                  "enum": [
                    "available_on_order",
                    "available_immediately"
                  ]
                },
                "format": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "html",
                      "pdf",
                      "xml",
                      "txt",
                      "json"
                    ]
                  }
                },
                "countries": {
                  "type": "string",
                  "description": "list of iso country codes for which this product is available"
                }
              },
              "x-swagger-router-model": "CreditReportProduct"
            }
          },
          "monitoring_products": {
            "type": "array",
            "description": "available products for this company",
            "items": {
              "type": "object",
              "properties": {
                "product_code": {
                  "type": "string",
                  "description": "product code (a value from code table CC8800)"
                },
                "name": {
                  "type": "string",
                  "description": "name of the product"
                },
                "availability": {
                  "type": "string",
                  "enum": [
                    "can_be_monitored",
                    "requires_a_research"
                  ]
                },
                "format": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "html",
                      "pdf",
                      "xml",
                      "txt",
                      "json"
                    ]
                  }
                },
                "countries": {
                  "type": "string",
                  "description": "list of iso country codes for which this product is available"
                }
              },
              "x-swagger-router-model": "MonitoringProduct"
            }
          }
        }
      },
      "CompanySearchResult": {
        "properties": {
          "company_id": {
            "type": "string",
            "description": "the unique identifier of the company"
          },
          "company_name": {
            "type": "string",
            "description": "the name of the company"
          },
          "registration_country": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code (for instance \"PL\" for Poland)"
          },
          "icon_number": {
            "type": "integer",
            "description": "a system company identifier"
          },
          "easy_number": {
            "type": "string",
            "description": "EASY number of the company"
          },
          "address": {
            "type": "object",
            "properties": {
              "country": {
                "type": "string",
                "example": "PL",
                "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
              },
              "zip_code": {
                "type": "string",
                "description": "postal code in which the company is located"
              },
              "city": {
                "type": "string",
                "description": "city in which the company is located"
              },
              "address_lines": {
                "type": "array",
                "description": "address of the company",
                "items": {
                  "type": "string"
                }
              },
              "telephone": {
                "type": "string",
                "description": "telephone number of the company"
              }
            },
            "x-swagger-router-model": "Address"
          },
          "national_identifiers": {
            "type": "array",
            "description": "national identifiers for the company (VAT ID etc)",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 120,
                      "description": "the national identifier"
                    },
                    "name": {
                      "type": "string",
                      "example": "VAT Number",
                      "description": "the national identifier"
                    }
                  },
                  "x-swagger-router-model": "NationalIdentifierType"
                },
                "value": {
                  "type": "string",
                  "example": "R12312323",
                  "description": "the national identifier"
                }
              },
              "x-swagger-router-model": "NationalIdentifier"
            }
          }
        }
      },
      "CreditReportProduct": {
        "properties": {
          "product_code": {
            "type": "string",
            "description": "product code (a value from code table CC8800)"
          },
          "name": {
            "type": "string",
            "description": "name of the product"
          },
          "availability": {
            "type": "string",
            "enum": [
              "available_on_order",
              "available_immediately"
            ]
          },
          "format": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "html",
                "pdf",
                "xml",
                "txt",
                "json"
              ]
            }
          },
          "countries": {
            "type": "string",
            "description": "list of iso country codes for which this product is available"
          }
        }
      },
      "MonitoringProduct": {
        "properties": {
          "product_code": {
            "type": "string",
            "description": "product code (a value from code table CC8800)"
          },
          "name": {
            "type": "string",
            "description": "name of the product"
          },
          "availability": {
            "type": "string",
            "enum": [
              "can_be_monitored",
              "requires_a_research"
            ]
          },
          "format": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "html",
                "pdf",
                "xml",
                "txt",
                "json"
              ]
            }
          },
          "countries": {
            "type": "string",
            "description": "list of iso country codes for which this product is available"
          }
        }
      },
      "Address": {
        "properties": {
          "country": {
            "type": "string",
            "example": "PL",
            "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
          },
          "zip_code": {
            "type": "string",
            "description": "postal code in which the company is located"
          },
          "city": {
            "type": "string",
            "description": "city in which the company is located"
          },
          "address_lines": {
            "type": "array",
            "description": "address of the company",
            "items": {
              "type": "string"
            }
          },
          "telephone": {
            "type": "string",
            "description": "telephone number of the company"
          }
        }
      },
      "AvailableCompanyIdentifiers": {
        "properties": {
          "company_id": {
            "type": "boolean",
            "description": "the unique identifier of the company"
          },
          "icon_number": {
            "type": "boolean",
            "description": "the ICON number of the company"
          },
          "easy_number": {
            "type": "boolean",
            "description": "the EASY number of the company"
          },
          "national_identifier_types": {
            "type": "array",
            "description": "the types of national identifiers available",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 120,
                  "description": "the national identifier"
                },
                "name": {
                  "type": "string",
                  "example": "VAT Number",
                  "description": "the national identifier"
                }
              },
              "x-swagger-router-model": "NationalIdentifierType"
            }
          }
        }
      },
      "NationalIdentifierType": {
        "properties": {
          "code": {
            "type": "integer",
            "example": 120,
            "description": "the national identifier"
          },
          "name": {
            "type": "string",
            "example": "VAT Number",
            "description": "the national identifier"
          }
        }
      },
      "NationalIdentifier": {
        "properties": {
          "type": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "example": 120,
                "description": "the national identifier"
              },
              "name": {
                "type": "string",
                "example": "VAT Number",
                "description": "the national identifier"
              }
            },
            "x-swagger-router-model": "NationalIdentifierType"
          },
          "value": {
            "type": "string",
            "example": "R12312323",
            "description": "the national identifier"
          }
        }
      },
      "AvailableCountry": {
        "properties": {
          "iso_code": {
            "type": "string",
            "example": "PL",
            "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
          },
          "name": {
            "type": "string",
            "example": "Poland",
            "description": "name of the country (for instance \"Poland\")"
          },
          "offline_orders": {
            "type": "boolean",
            "description": "offline orders can be placed for companies in this country. An offline order is an order for a company which will be researched if an up-to-date report is not available."
          },
          "online_orders": {
            "type": "boolean",
            "description": "online orders can be placed for companies in this country. An online order is an order where a report is available immediately."
          }
        }
      },
      "UpdatedOrder": {
        "properties": {
          "customer_reference": {
            "type": "string",
            "example": "OUR TRACKING NUMBER #34234",
            "description": "the reference provided by the customer when the order was placed."
          },
          "contact_name": {
            "type": "string",
            "example": "Tom Smith",
            "description": "an optional contact name to identify the person updating the order."
          },
          "contact_email": {
            "type": "string",
            "example": "tom@smith.com",
            "description": "an optional contact email address for the person updating the order."
          },
          "contact_telephone": {
            "type": "string",
            "example": "+43-1-62552-410",
            "description": "an optional telephone number for the person updating the order."
          },
          "contact_fax": {
            "type": "string",
            "example": "+43-1-62552-444",
            "description": "an optional fax number for the person updating the order."
          },
          "comment": {
            "type": "string",
            "example": "Please ensure that you include all directors of this company",
            "description": "a comment to the order (for instance \"please ensure that you include all directors of this company\")."
          }
        }
      },
      "UpdatedStatus": {
        "properties": {
          "action": {
            "type": "string",
            "example": "cancel",
            "description": "the action which you request on the order",
            "enum": [
              "stop_monitoring",
              "undo_stop_monitoring",
              "cancel"
            ]
          },
          "cancel_reason": {
            "type": "string",
            "example": "Order placed by mistake, please cancel.",
            "description": "Required when the order is requested to be cancelled."
          }
        }
      },
      "Notification": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 1029390,
            "description": "the unique id of the notification (which can be used to retrieve the documents associated with the notification)."
          },
          "order_id": {
            "type": "string",
            "example": "62a50848-e9de-45bd-9e07-b2b1d8cc7cb0",
            "description": "the monitoring order's id to which the notification belongs to"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2018-03-06T11:19:07Z",
            "description": "the time at which the notification was created."
          },
          "company": {
            "type": "object",
            "properties": {
              "company_id": {
                "type": "string",
                "example": "string",
                "description": "unique identifier of the company"
              },
              "icon_number": {
                "type": "integer",
                "description": "system-specific identifier of the company"
              },
              "easy_number": {
                "type": "string",
                "description": "EASY number of the company"
              },
              "company_name": {
                "type": "string",
                "description": "name of the company"
              },
              "registration_country": {
                "type": "string",
                "description": "ISO 3166-1 alpha-2 country code (for instance \"PL\" for Poland)"
              },
              "address": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "example": "PL",
                    "description": "ISO 3166-1 alpha-2 code (for instance \"PL\" for Poland)"
                  },
                  "zip_code": {
                    "type": "string",
                    "description": "postal code in which the company is located"
                  },
                  "city": {
                    "type": "string",
                    "description": "city in which the company is located"
                  },
                  "address_lines": {
                    "type": "array",
                    "description": "address of the company",
                    "items": {
                      "type": "string"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "description": "telephone number of the company"
                  }
                },
                "x-swagger-router-model": "Address"
              },
              "national_identifiers": {
                "type": "array",
                "description": "national identifiers of the company (e.g VAT ID)",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 120,
                          "description": "the national identifier"
                        },
                        "name": {
                          "type": "string",
                          "example": "VAT Number",
                          "description": "the national identifier"
                        }
                      },
                      "x-swagger-router-model": "NationalIdentifierType"
                    },
                    "value": {
                      "type": "string",
                      "example": "R12312323",
                      "description": "the national identifier"
                    }
                  },
                  "x-swagger-router-model": "NationalIdentifier"
                }
              },
              "activities": {
                "type": "array",
                "description": "the activities which the company conducts",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "72",
                      "description": "A NACE Rev2 code"
                    },
                    "text": {
                      "type": "string",
                      "example": "Growing of non-perennial crops"
                    }
                  },
                  "x-swagger-router-model": "Nace"
                }
              },
              "legalform": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "300",
                    "description": "A coded value of type CC0040, for a list of all available legal forms see /codedvalues/CC0040"
                  },
                  "text": {
                    "type": "string",
                    "example": "Limited liability company"
                  }
                },
                "x-swagger-router-model": "Legalform"
              },
              "as_of_date": {
                "type": "string",
                "format": "date-time",
                "description": "the validity date of the company information"
              },
              "date_of_last_balance_sheet": {
                "type": "string",
                "format": "date-time",
                "description": "the date of the last balance sheet"
              }
            },
            "x-swagger-router-model": "Company"
          },
          "changes": {
            "type": "array",
            "description": "For details see https://github.com/coface/business-information-api/wiki/Monitoring-Notifications",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "300",
                      "description": "A coded value of type CC8821, for a list of all available legal forms see /codedvalues/CC8821"
                    },
                    "text": {
                      "type": "string",
                      "example": "Financial Information"
                    }
                  },
                  "x-swagger-router-model": "MonitoredParameterType"
                },
                "type2": {
                  "type": "string",
                  "description": "Depending on the type, describes the change further."
                },
                "type3": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Depending on the type and type2 describes the change further"
                  }
                }
              },
              "x-swagger-router-model": "Change"
            }
          }
        }
      },
      "Change": {
        "properties": {
          "type": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "300",
                "description": "A coded value of type CC8821, for a list of all available legal forms see /codedvalues/CC8821"
              },
              "text": {
                "type": "string",
                "example": "Financial Information"
              }
            },
            "x-swagger-router-model": "MonitoredParameterType"
          },
          "type2": {
            "type": "string",
            "description": "Depending on the type, describes the change further."
          },
          "type3": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Depending on the type and type2 describes the change further"
            }
          }
        }
      },
      "CodedValue": {
        "properties": {
          "code_value": {
            "type": "string",
            "example": "200",
            "description": "a numeric or alphanumeric code value."
          },
          "code_name": {
            "type": "string",
            "example": "CC8800",
            "description": "name of the code table to which this code belongs."
          },
          "text": {
            "type": "string",
            "example": "CREDIT REPORT",
            "description": "text associated with this code."
          },
          "language": {
            "type": "string",
            "description": "The language of the text"
          }
        }
      },
      "CodeTable": {
        "properties": {
          "code_name": {
            "type": "string",
            "example": "CC8800",
            "description": "code table name."
          },
          "description": {
            "type": "string",
            "example": "Products",
            "description": "description of the code table."
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "example": 500,
            "description": "numeric error code (http status 4xx-5xx)."
          },
          "message": {
            "type": "string",
            "description": "textual error message."
          }
        }
      }
    }
  }
}