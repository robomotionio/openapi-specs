{
  "openapi": "3.0.1",
  "info": {
    "title": "Sage100cloud",
    "description": "Connecteur Sage 100cloud",
    "version": "v7.00",
    "x-logo": {
      "url": "https://logo.clearbit.com/sage.com"
    }
  },
  "servers": [
    {
      "url": "https://sage100cloud.sage.com/Sage100cApi"
    }
  ],
  "security": [
    {
      "oauth2_auth": []
    }
  ],
  "paths": {
    "/api/v1/{datasetId}/articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Liste de tous les articles",
        "description": "Liste des articles",
        "operationId": "Articles_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListArticle"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListArticle"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListArticle"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListArticle"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Product.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/articles('{id}')": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Retourne un article par son Id",
        "description": "Retourne un article par son Id",
        "operationId": "Articles_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "key: id"
            },
            "x-ms-summary": "key: id"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Product.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/statistiquesArticles(anneeDebut={anneeDebut},moisDebut={moisDebut},jourDebut={jourDebut})": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Statistiques des ventes articles",
        "description": "Statistiques des ventes articles",
        "operationId": "Articles_StatistiquesArticlesByAnneedebutAndMoisdebutAndJourdebutAndDatasetid",
        "parameters": [
          {
            "name": "anneeDebut",
            "in": "path",
            "description": "Année de début",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Année de début"
            },
            "x-ms-summary": "Année de début"
          },
          {
            "name": "moisDebut",
            "in": "path",
            "description": "Mois de début",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Mois de début"
            },
            "x-ms-summary": "Mois de début"
          },
          {
            "name": "jourDebut",
            "in": "path",
            "description": "Jour de début",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Jour de début"
            },
            "x-ms-summary": "Jour de début"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListStatistiqueArticle"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListStatistiqueArticle"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListStatistiqueArticle"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListStatistiqueArticle"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Product.Read.All",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/articles('{key}')/stocks": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Liste des stocks de l'article",
        "description": "Liste des stocks de l'article",
        "operationId": "Articles_GetStocksByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de l'article",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'article"
            },
            "x-ms-summary": "Identifiant de l'article"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListStockArticle"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListStockArticle"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListStockArticle"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListStockArticle"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Product.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/articles('{key}')/stocks('{id}')": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Stock de l'article",
        "description": "Stock de l'article",
        "operationId": "Articles_GetStocksByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de l'article",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'article"
            },
            "x-ms-summary": "Identifiant de l'article"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du stock",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du stock"
            },
            "x-ms-summary": "Identifiant du stock"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockArticle"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/StockArticle"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/StockArticle"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/StockArticle"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Product.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/articles('{key}')/enumeresGamme1": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Liste des énumérés de gamme 1 de l'article",
        "description": "Liste des énumérés de gamme 1 de l'article",
        "operationId": "Articles_GetEnumeresGamme1ByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de l'article",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'article"
            },
            "x-ms-summary": "Identifiant de l'article"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEnumereGamme"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListEnumereGamme"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListEnumereGamme"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListEnumereGamme"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Product.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/articles('{key}')/enumeresGamme1('{id}')": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Enuméré de gamme 1 de l'article",
        "description": "Enuméré de gamme 1 de l'article",
        "operationId": "Articles_GetEnumeresGamme1ByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de l'article",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'article"
            },
            "x-ms-summary": "Identifiant de l'article"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'énuméré de gamme 1",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'énuméré de gamme 1"
            },
            "x-ms-summary": "Identifiant de l'énuméré de gamme 1"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnumereGamme"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/EnumereGamme"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/EnumereGamme"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/EnumereGamme"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Product.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/articles('{key}')/enumeresGamme2": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Liste des énumérés de gamme 2 de l'article",
        "description": "Liste des énumérés de gamme 2 de l'article",
        "operationId": "Articles_GetEnumeresGamme2ByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de l'article",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'article"
            },
            "x-ms-summary": "Identifiant de l'article"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEnumereGamme"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListEnumereGamme"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListEnumereGamme"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListEnumereGamme"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Product.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/articles('{key}')/enumeresGamme2('{id}')": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Enuméré de gamme 2 de l'article",
        "description": "Enuméré de gamme 2 de l'article",
        "operationId": "Articles_GetEnumeresGamme2ByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de l'article",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'article"
            },
            "x-ms-summary": "Identifiant de l'article"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'énuméré de gamme 2",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'énuméré de gamme 2"
            },
            "x-ms-summary": "Identifiant de l'énuméré de gamme 2"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnumereGamme"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/EnumereGamme"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/EnumereGamme"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/EnumereGamme"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Product.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/bonsAPayer": {
      "get": {
        "tags": [
          "BonsAPayer"
        ],
        "summary": "Liste des bons à payer",
        "description": "Liste des bons à payer",
        "operationId": "BonsAPayer_GetByDATASETID",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBonAPayer"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListBonAPayer"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListBonAPayer"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListBonAPayer"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/bonsAPayer('{id}')": {
      "get": {
        "tags": [
          "BonsAPayer"
        ],
        "summary": "Retourne un bon à payer par son Id",
        "description": "Retourne un bon à payer par son Id",
        "operationId": "BonsAPayer_GetByIdAndDATASETID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du bon à payer",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon à payer"
            },
            "x-ms-summary": "Identifiant du bon à payer"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BonAPayer"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/BonAPayer"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/BonAPayer"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/BonAPayer"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/bonsAPayer('{id}')/rejeter": {
      "post": {
        "tags": [
          "BonsAPayer"
        ],
        "summary": "Rejeter le bon à payer (statut non conforme)",
        "description": "Rejeter le bon à payer (statut non conforme)",
        "operationId": "BonsAPayer_RejeterByDatasetidAndID",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du bon à payer",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon à payer"
            },
            "x-ms-summary": "Identifiant du bon à payer"
          }
        ],
        "requestBody": {
          "description": "upn, commentaire",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "upn"
                ],
                "type": "object",
                "properties": {
                  "upn": {
                    "type": "string",
                    "description": "Adresse upn du collaborateur"
                  },
                  "commentaire": {
                    "type": "string",
                    "description": "Commentaire du bon à payer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "parameters"
      }
    },
    "/api/v1/{datasetId}/bonsAPayer('{id}')/accepter": {
      "post": {
        "tags": [
          "BonsAPayer"
        ],
        "summary": "Accepter le bon à payer (statut conforme)",
        "description": "Accepter le bon à payer (statut conforme)",
        "operationId": "BonsAPayer_AccepterByDatasetidAndID",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du bon à payer",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon à payer"
            },
            "x-ms-summary": "Identifiant du bon à payer"
          }
        ],
        "requestBody": {
          "description": "upn, commentaire",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "upn"
                ],
                "type": "object",
                "properties": {
                  "upn": {
                    "type": "string",
                    "description": "Adresse upn du collaborateur"
                  },
                  "commentaire": {
                    "type": "string",
                    "description": "Commentaire du bon à payer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "parameters"
      }
    },
    "/api/v1/{datasetId}/bonsAPayer('{id}')/bloquer": {
      "post": {
        "tags": [
          "BonsAPayer"
        ],
        "summary": "Bloquer le bon à payer (statut en attente)",
        "description": "Bloquer le bon à payer (statut en attente)",
        "operationId": "BonsAPayer_BloquerByDatasetidAndID",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du bon à payer",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon à payer"
            },
            "x-ms-summary": "Identifiant du bon à payer"
          }
        ],
        "requestBody": {
          "description": "upn, commentaire",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "upn"
                ],
                "type": "object",
                "properties": {
                  "upn": {
                    "type": "string",
                    "description": "Adresse upn du collaborateur"
                  },
                  "commentaire": {
                    "type": "string",
                    "description": "Commentaire du bon à payer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "parameters"
      }
    },
    "/api/v1/{datasetId}/bonsAPayer('{id}')/payer": {
      "post": {
        "tags": [
          "BonsAPayer"
        ],
        "summary": "Payer le bon à payer (statut bon à payer)",
        "description": "Payer le bon à payer (statut bon à payer)",
        "operationId": "BonsAPayer_PayerByDatasetidAndID",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du bon à payer",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon à payer"
            },
            "x-ms-summary": "Identifiant du bon à payer"
          }
        ],
        "requestBody": {
          "description": "upn, commentaire",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "upn"
                ],
                "type": "object",
                "properties": {
                  "upn": {
                    "type": "string",
                    "description": "Adresse upn du collaborateur"
                  },
                  "commentaire": {
                    "type": "string",
                    "description": "Commentaire du bon à payer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "parameters"
      }
    },
    "/api/v1/{datasetId}/bonsAPayer('{key}')/collaborateur": {
      "get": {
        "tags": [
          "BonsAPayer"
        ],
        "summary": "Collaborateur du bon à payer",
        "description": "Collaborateur du bon à payer",
        "operationId": "BonsAPayer_GetCollaborateurByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon à payer",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon à payer"
            },
            "x-ms-summary": "Identifiant du bon à payer"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/bonsAPayer('{key}')/ecriture": {
      "get": {
        "tags": [
          "BonsAPayer"
        ],
        "summary": "Ecriture comptable du bon à payer",
        "description": "Ecriture comptable du bon à payer",
        "operationId": "BonsAPayer_GetEcritureByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon à payer",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon à payer"
            },
            "x-ms-summary": "Identifiant du bon à payer"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ecriture"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Ecriture"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Ecriture"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Ecriture"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Liste de tous les clients",
        "description": "Liste de tous les clients",
        "operationId": "Clients_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListClient"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListClient"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListClient"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListClient"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Ajout d'un client",
        "description": "Ajout d'un client",
        "operationId": "Clients_PostByDatasetid",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "requestBody": {
          "description": "Client",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "client"
      }
    },
    "/api/v1/{datasetId}/clients('{id}')": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Retourne un client par son Id",
        "description": "Retourne un client par son Id",
        "operationId": "Clients_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Clients"
        ],
        "summary": "Modification d'un client (patch)",
        "description": "Modification d'un client (patch)",
        "operationId": "Clients_PatchByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "requestBody": {
          "description": "Client",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "client"
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/proposer": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Créer une proposition commerciale",
        "description": "Créer une proposition commerciale",
        "operationId": "Clients_ProposerByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          }
        ],
        "requestBody": {
          "description": "Proposition commerciale",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "propositionCommercialeLigne"
                ],
                "type": "object",
                "properties": {
                  "datePrevisionnelle": {
                    "type": "string",
                    "description": "Date prévisionnelle",
                    "format": "date-time",
                    "x-ms-summary": "Date prévisionnelle"
                  },
                  "propositionCommercialeLigne": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/propositionCommercialeLigne"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "parameters"
      }
    },
    "/api/v1/{datasetId}/statistiquesClients(anneeDebut={anneeDebut},moisDebut={moisDebut},jourDebut={jourDebut})": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Statistiques des ventes clients",
        "description": "Statistiques des ventes clients",
        "operationId": "Clients_StatistiquesClientsByAnneedebutAndMoisdebutAndJourdebutAndDatasetid",
        "parameters": [
          {
            "name": "anneeDebut",
            "in": "path",
            "description": "Année de début",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Année de début"
            },
            "x-ms-summary": "Année de début"
          },
          {
            "name": "moisDebut",
            "in": "path",
            "description": "Mois de début",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Mois de début"
            },
            "x-ms-summary": "Mois de début"
          },
          {
            "name": "jourDebut",
            "in": "path",
            "description": "Jour de début",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Jour de début"
            },
            "x-ms-summary": "Jour de début"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "datasetId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "datasetId"
            },
            "x-ms-summary": "datasetId"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListStatistiqueClient"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListStatistiqueClient"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListStatistiqueClient"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListStatistiqueClient"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/clients('{id}')/solde": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Solde d'un client",
        "description": "Solde d'un client",
        "operationId": "Clients_SoldeByDatasetidAndID",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/contacts": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Contacts du client",
        "description": "Contacts du client",
        "operationId": "Clients_GetContactsByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du Client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du Client"
            },
            "x-ms-summary": "Identifiant du Client"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactTiers"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactTiers"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactTiers"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactTiers"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Ajout d'un contact au client",
        "description": "Ajout d'un contact au client",
        "operationId": "Clients_PostContactsByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du Client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du Client"
            },
            "x-ms-summary": "Identifiant du Client"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "requestBody": {
          "description": "Contact à ajouter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactTiers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "contact"
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/contacts('{id}')": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Contact du client",
        "description": "Contact du client",
        "operationId": "Clients_GetContactsByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du Client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du Client"
            },
            "x-ms-summary": "Identifiant du Client"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du contact",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du contact"
            },
            "x-ms-summary": "Identifiant du contact"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Suppression d'un contact du client",
        "description": "Suppression d'un contact du client",
        "operationId": "Clients_DeleteContactsByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du Client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du Client"
            },
            "x-ms-summary": "Identifiant du Client"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du contact",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du contact"
            },
            "x-ms-summary": "Identifiant du contact"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Write.All"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Clients"
        ],
        "summary": "Modification d'un contact du client (patch)",
        "description": "Modification d'un contact du client (patch)",
        "operationId": "Clients_PatchContactsByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du Client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du Client"
            },
            "x-ms-summary": "Identifiant du Client"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du contact",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du contact"
            },
            "x-ms-summary": "Identifiant du contact"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "requestBody": {
          "description": "Contact",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactTiers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "contact"
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/contacts('{id}')/service": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Service du contact d'un client",
        "description": "Service du contact d'un client",
        "operationId": "Clients_GetContactsServiceByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du Client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du Client"
            },
            "x-ms-summary": "Identifiant du Client"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du contact",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du contact"
            },
            "x-ms-summary": "Identifiant du contact"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceContact"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceContact"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceContact"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceContact"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/derniersReglements": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Derniers règlements du client",
        "description": "Derniers règlements du client",
        "operationId": "Clients_GetDerniersReglementsByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExtraitEcriture"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListExtraitEcriture"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListExtraitEcriture"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListExtraitEcriture"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/derniersReglements('{id}')": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Règlement du client",
        "description": "Règlement du client",
        "operationId": "Clients_GetDerniersReglementsByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du règlement",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du règlement"
            },
            "x-ms-summary": "Identifiant du règlement"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraitEcriture"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraitEcriture"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraitEcriture"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraitEcriture"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/derniersDocuments": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Derniers documents du client",
        "description": "Derniers documents du client",
        "operationId": "Clients_GetDerniersDocumentsByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExtraitDocument"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListExtraitDocument"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListExtraitDocument"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListExtraitDocument"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/derniersDocuments('{id}')": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Document du client",
        "description": "Document du client",
        "operationId": "Clients_GetDerniersDocumentsByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du document",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du document"
            },
            "x-ms-summary": "Identifiant du document"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraitDocument"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraitDocument"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraitDocument"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraitDocument"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/representant": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Représentant d'un client",
        "description": "Représentant d'un client",
        "operationId": "Clients_GetRepresentantByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/clients('{key}')/representant/$ref": {
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Modification représentant d'un client (put)",
        "description": "Modification représentant d'un client (put)",
        "operationId": "Clients_CreateRefToRepresentantByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du client"
            },
            "x-ms-summary": "Identifiant du client"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "requestBody": {
          "description": "Référence représentant",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "link"
      }
    },
    "/api/v1/{datasetId}/collaborateurs": {
      "get": {
        "tags": [
          "Collaborateurs"
        ],
        "summary": "Liste des collaborateurs",
        "description": "Liste des collaborateurs",
        "operationId": "Collaborateurs_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollaborateur"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollaborateur"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollaborateur"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollaborateur"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Collaborator.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/collaborateurs('{id}')": {
      "get": {
        "tags": [
          "Collaborateurs"
        ],
        "summary": "Retourne un collaborateur par son Id",
        "description": "Retourne un collaborateur par son Id",
        "operationId": "Collaborateurs_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du collaborateur",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du collaborateur"
            },
            "x-ms-summary": "Identifiant du collaborateur"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborateur"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Collaborator.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Liste des sociétés",
        "description": "Liste des sociétés",
        "operationId": "Companies_Get",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompany"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompany"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompany"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompany"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/comptes": {
      "get": {
        "tags": [
          "Comptes"
        ],
        "summary": "Liste des comptes",
        "description": "Liste des comptes",
        "operationId": "Comptes_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompte"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompte"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompte"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompte"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Account.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/comptes('{id}')": {
      "get": {
        "tags": [
          "Comptes"
        ],
        "summary": "Retourne un compte par son Id",
        "description": "Retourne un compte par son Id",
        "operationId": "Comptes_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du compte général",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du compte général"
            },
            "x-ms-summary": "Identifiant du compte général"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Compte"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Compte"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Compte"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Compte"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Account.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/mouvementsComptes(anneeDebut={anneeDebut},moisDebut={moisDebut},anneeFin={anneeFin},moisFin={moisFin})": {
      "get": {
        "tags": [
          "Comptes"
        ],
        "summary": "Mouvements comptables des comptes généraux",
        "description": "Mouvements comptables des comptes généraux",
        "operationId": "Comptes_MouvementsComptesByAnneedebutAndMoisdebutAndAnneefinAndMoisfinAndDatasetid",
        "parameters": [
          {
            "name": "anneeDebut",
            "in": "path",
            "description": "Année de début",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Année de début"
            },
            "x-ms-summary": "Année de début"
          },
          {
            "name": "moisDebut",
            "in": "path",
            "description": "Mois de début",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Mois de début"
            },
            "x-ms-summary": "Mois de début"
          },
          {
            "name": "anneeFin",
            "in": "path",
            "description": "Année de fin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Année de fin"
            },
            "x-ms-summary": "Année de fin"
          },
          {
            "name": "moisFin",
            "in": "path",
            "description": "Mois de fin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Mois de fin"
            },
            "x-ms-summary": "Mois de fin"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "datasetId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "datasetId"
            },
            "x-ms-summary": "datasetId"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMouvementCompte"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListMouvementCompte"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListMouvementCompte"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListMouvementCompte"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Account.Read.All",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteCommande": {
      "get": {
        "tags": [
          "DocumentsVenteCommande"
        ],
        "summary": "Liste des commandes",
        "description": "Liste des commandes",
        "operationId": "DocumentsVenteCommande_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteCommande"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteCommande"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteCommande"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteCommande"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteCommande('{id}')": {
      "get": {
        "tags": [
          "DocumentsVenteCommande"
        ],
        "summary": "Retourne une commande par son Id",
        "description": "Retourne une commande par son Id",
        "operationId": "DocumentsVenteCommande_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de la commande",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la commande"
            },
            "x-ms-summary": "Identifiant de la commande"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteCommande"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteCommande"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteCommande"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteCommande"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteCommande('{key}')/acomptes": {
      "get": {
        "tags": [
          "DocumentsVenteCommande"
        ],
        "summary": "Acomptes du bon de commande",
        "description": "Acomptes du bon de commande",
        "operationId": "DocumentsVenteCommande_GetAcomptesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de commande",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DocumentsVenteCommande"
        ],
        "summary": "Ajout d'un acompte au bon de commande",
        "description": "Ajout d'un acompte au bon de commande",
        "operationId": "DocumentsVenteCommande_PostAcomptesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de commande",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Acompte à ajouter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcompteVente"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "acompte"
      }
    },
    "/api/v1/{datasetId}/documentsVenteCommande('{key}')/acomptes('{id}')": {
      "patch": {
        "tags": [
          "DocumentsVenteCommande"
        ],
        "summary": "Modification d'un acompte du bon de commande (patch)",
        "description": "Modification d'un acompte du bon de commande (patch)",
        "operationId": "DocumentsVenteCommande_PatchAcomptesByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de commande",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'acompte",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Acompte",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcompteVente"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "acompte"
      }
    },
    "/api/v1/{datasetId}/documentsVenteCommande('{key}')/acomptes('{id}')/modeReglement/$ref": {
      "put": {
        "tags": [
          "DocumentsVenteCommande"
        ],
        "summary": "Modification du mode de règlement de l'acompte du bon de commande (put)",
        "description": "Modification du mode de règlement de l'acompte du bon de commande\n(put)",
        "operationId": "DocumentsVenteCommande_CreateRefToAcomptesModeReglementByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de commande",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'acompte",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Référence modeReglement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "link"
      }
    },
    "/api/v1/{datasetId}/documentsVenteCommande('{key}')/saisir": {
      "post": {
        "tags": [
          "DocumentsVenteCommande"
        ],
        "summary": "Affecter le statut Saisi",
        "description": "Affecter le statut Saisi",
        "operationId": "DocumentsVenteCommande_SaisirByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la commande",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la commande"
            },
            "x-ms-summary": "Identifiant de la commande"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteCommande('{key}')/confirmer": {
      "post": {
        "tags": [
          "DocumentsVenteCommande"
        ],
        "summary": "Affecter le statut Confirmé",
        "description": "Affecter le statut Confirmé",
        "operationId": "DocumentsVenteCommande_ConfirmerByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la commande",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la commande"
            },
            "x-ms-summary": "Identifiant de la commande"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteCommande('{key}')/aPreparer": {
      "post": {
        "tags": [
          "DocumentsVenteCommande"
        ],
        "summary": "Affecter le statut A Préparer",
        "description": "Affecter le statut A Préparer",
        "operationId": "DocumentsVenteCommande_APreparerByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la commande",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la commande"
            },
            "x-ms-summary": "Identifiant de la commande"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteLivraison": {
      "get": {
        "tags": [
          "DocumentsVenteLivraison"
        ],
        "summary": "Liste des bons de livraison",
        "description": "Liste des bons de livraison",
        "operationId": "DocumentsVenteLivraison_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteLivraison"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteLivraison"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteLivraison"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteLivraison"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteLivraison('{id}')": {
      "get": {
        "tags": [
          "DocumentsVenteLivraison"
        ],
        "summary": "Retourne un bon de livraison par son Id",
        "description": "Retourne un bon de livraison par son Id",
        "operationId": "DocumentsVenteLivraison_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du bon de livraison",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon de livraison"
            },
            "x-ms-summary": "Identifiant du bon de livraison"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteLivraison"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteLivraison"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteLivraison"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteLivraison"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteLivraison('{key}')/acomptes": {
      "get": {
        "tags": [
          "DocumentsVenteLivraison"
        ],
        "summary": "Acomptes du bon de livraison",
        "description": "Acomptes du bon de livraison",
        "operationId": "DocumentsVenteLivraison_GetAcomptesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de livraison",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DocumentsVenteLivraison"
        ],
        "summary": "Ajout d'un acompte au bon de livraison",
        "description": "Ajout d'un acompte au bon de livraison",
        "operationId": "DocumentsVenteLivraison_PostAcomptesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de livraison",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Acompte à ajouter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcompteVente"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "acompte"
      }
    },
    "/api/v1/{datasetId}/documentsVenteLivraison('{key}')/acomptes('{id}')": {
      "patch": {
        "tags": [
          "DocumentsVenteLivraison"
        ],
        "summary": "Modification d'un acompte du bon de livraison (patch)",
        "description": "Modification d'un acompte du bon de livraison (patch)",
        "operationId": "DocumentsVenteLivraison_PatchAcomptesByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de livraison",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'acompte",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Acompte",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcompteVente"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "acompte"
      }
    },
    "/api/v1/{datasetId}/documentsVenteLivraison('{key}')/acomptes('{id}')/modeReglement/$ref": {
      "put": {
        "tags": [
          "DocumentsVenteLivraison"
        ],
        "summary": "Modification du mode de règlement de l'acompte du bon de livraison\n(put)",
        "description": "Modification du mode de règlement de l'acompte du bon de livraison\n(put)",
        "operationId": "DocumentsVenteLivraison_CreateRefToAcomptesModeReglementByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de livraison",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'acompte",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Référence modeReglement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "link"
      }
    },
    "/api/v1/{datasetId}/documentsVenteLivraison('{key}')/saisir": {
      "post": {
        "tags": [
          "DocumentsVenteLivraison"
        ],
        "summary": "Affecter le statut Saisi",
        "description": "Affecter le statut Saisi",
        "operationId": "DocumentsVenteLivraison_SaisirByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de livraison",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon de livraison"
            },
            "x-ms-summary": "Identifiant du bon de livraison"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteLivraison('{key}')/confirmer": {
      "post": {
        "tags": [
          "DocumentsVenteLivraison"
        ],
        "summary": "Affecter le statut Confirmé",
        "description": "Affecter le statut Confirmé",
        "operationId": "DocumentsVenteLivraison_ConfirmerByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de livraison",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon de livraison"
            },
            "x-ms-summary": "Identifiant du bon de livraison"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteLivraison('{key}')/aFacturer": {
      "post": {
        "tags": [
          "DocumentsVenteLivraison"
        ],
        "summary": "Affecter le statut A Facturer",
        "description": "Affecter le statut A Facturer",
        "operationId": "DocumentsVenteLivraison_AFacturerByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du bon de livraison",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du bon de livraison"
            },
            "x-ms-summary": "Identifiant du bon de livraison"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteFacture": {
      "get": {
        "tags": [
          "DocumentsVenteFacture"
        ],
        "summary": "Liste des factures",
        "description": "Liste des factures",
        "operationId": "DocumentsVenteFacture_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteFacture"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteFacture"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteFacture"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteFacture"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteFacture('{id}')": {
      "get": {
        "tags": [
          "DocumentsVenteFacture"
        ],
        "summary": "Retourne une facture par son Id",
        "description": "Retourne une facture par son Id",
        "operationId": "DocumentsVenteFacture_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de la facture",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la facture"
            },
            "x-ms-summary": "Identifiant de la facture"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteFacture"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteFacture"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteFacture"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteFacture"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteFacture('{key}')/acomptes": {
      "get": {
        "tags": [
          "DocumentsVenteFacture"
        ],
        "summary": "Acomptes de la facture",
        "description": "Acomptes de la facture",
        "operationId": "DocumentsVenteFacture_GetAcomptesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la facture",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DocumentsVenteFacture"
        ],
        "summary": "Ajout d'un acompte à la facture",
        "description": "Ajout d'un acompte à la facture",
        "operationId": "DocumentsVenteFacture_PostAcomptesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la facture",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Acompte à ajouter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcompteVente"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "acompte"
      }
    },
    "/api/v1/{datasetId}/documentsVenteFacture('{key}')/acomptes('{id}')": {
      "patch": {
        "tags": [
          "DocumentsVenteFacture"
        ],
        "summary": "Modification d'un acompte de la facture (patch)",
        "description": "Modification d'un acompte de la facture (patch)",
        "operationId": "DocumentsVenteFacture_PatchAcomptesByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la facture",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'acompte",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Acompte",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcompteVente"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "acompte"
      }
    },
    "/api/v1/{datasetId}/documentsVenteFacture('{key}')/acomptes('{id}')/modeReglement/$ref": {
      "put": {
        "tags": [
          "DocumentsVenteFacture"
        ],
        "summary": "Modification du mode de règlement de l'acompte de la facture (put)",
        "description": "Modification du mode de règlement de l'acompte de la facture (put)",
        "operationId": "DocumentsVenteFacture_CreateRefToAcomptesModeReglementByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la facture",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'acompte",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Référence modeReglement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "link"
      }
    },
    "/api/v1/{datasetId}/documentsVenteFacture('{key}')/saisir": {
      "post": {
        "tags": [
          "DocumentsVenteFacture"
        ],
        "summary": "Affecter le statut Saisi",
        "description": "Affecter le statut Saisi",
        "operationId": "DocumentsVenteFacture_SaisirByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la facture",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la facture"
            },
            "x-ms-summary": "Identifiant de la facture"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteFacture('{key}')/confirmer": {
      "post": {
        "tags": [
          "DocumentsVenteFacture"
        ],
        "summary": "Affecter le statut Confirmé",
        "description": "Affecter le statut Confirmé",
        "operationId": "DocumentsVenteFacture_ConfirmerByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la facture",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la facture"
            },
            "x-ms-summary": "Identifiant de la facture"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteFacture('{key}')/aComptabiliser": {
      "post": {
        "tags": [
          "DocumentsVenteFacture"
        ],
        "summary": "Affecter le statut A Comptabiliser",
        "description": "Affecter le statut A Comptabiliser",
        "operationId": "DocumentsVenteFacture_AComptabiliserByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de la facture",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la facture"
            },
            "x-ms-summary": "Identifiant de la facture"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis": {
      "get": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Liste des devis",
        "description": "Liste des devis",
        "operationId": "DocumentsVenteDevis_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteDevis"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteDevis"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteDevis"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsVenteDevis"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis('{id}')": {
      "get": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Retourne un devis par son Id",
        "description": "Retourne un devis par son Id",
        "operationId": "DocumentsVenteDevis_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du devis"
            },
            "x-ms-summary": "Identifiant du devis"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteDevis"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteDevis"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteDevis"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsVenteDevis"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis('{key}')/acomptes": {
      "get": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Acomptes du devis",
        "description": "Acomptes du devis",
        "operationId": "DocumentsVenteDevis_GetAcomptesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListAcompteVente"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Read.All"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Ajout d'un acompte au devis",
        "description": "Ajout d'un acompte au devis",
        "operationId": "DocumentsVenteDevis_PostAcomptesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Acompte à ajouter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcompteVente"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "acompte"
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis('{key}')/acomptes('{id}')": {
      "patch": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Modification d'un acompte du devis (patch)",
        "description": "Modification d'un acompte du devis (patch)",
        "operationId": "DocumentsVenteDevis_PatchAcomptesByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'acompte",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Acompte",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcompteVente"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "acompte"
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis('{key}')/acomptes('{id}')/modeReglement/$ref": {
      "put": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Modification du mode de règlement de l'acompte du devis (put)",
        "description": "Modification du mode de règlement de l'acompte du devis (put)",
        "operationId": "DocumentsVenteDevis_CreateRefToAcomptesModeReglementByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'acompte",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Référence modeReglement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "link"
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis('{key}')/saisir": {
      "post": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Affecter le statut Saisi",
        "description": "Affecter le statut Saisi",
        "operationId": "DocumentsVenteDevis_SaisirByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du devis"
            },
            "x-ms-summary": "Identifiant du devis"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis('{key}')/confirmer": {
      "post": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Affecter le statut Confirmé",
        "description": "Affecter le statut Confirmé",
        "operationId": "DocumentsVenteDevis_ConfirmerByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du devis"
            },
            "x-ms-summary": "Identifiant du devis"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis('{key}')/accepter": {
      "post": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Affecter le statut Accepté",
        "description": "Affecter le statut Accepté",
        "operationId": "DocumentsVenteDevis_AccepterByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du devis"
            },
            "x-ms-summary": "Identifiant du devis"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis('{key}')/perdre": {
      "post": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Affecter le statut Perdu",
        "description": "Affecter le statut Perdu",
        "operationId": "DocumentsVenteDevis_PerdreByDatasetidAndKeyAndKeyMotifDevis",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du devis"
            },
            "x-ms-summary": "Identifiant du devis"
          }
        ],
        "requestBody": {
          "description": "intituleMotifDevis",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "intituleMotifDevis"
                ],
                "type": "object",
                "properties": {
                  "intituleMotifDevis": {
                    "type": "string",
                    "description": "Intitule du motif de refus du devis"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "parameters"
      }
    },
    "/api/v1/{datasetId}/documentsVenteDevis('{key}')/archiver": {
      "post": {
        "tags": [
          "DocumentsVenteDevis"
        ],
        "summary": "Affecter le statut Archivé",
        "description": "Affecter le statut Archivé",
        "operationId": "DocumentsVenteDevis_ArchiverByDatasetidAndKey",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du devis",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du devis"
            },
            "x-ms-summary": "Identifiant du devis"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Commercial.Write.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/dossier": {
      "get": {
        "tags": [
          "Dossier"
        ],
        "summary": "Dossier de la société",
        "description": "Dossier de la société",
        "operationId": "Dossier_GetByDATASETID",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dossier"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Dossier"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Dossier"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Dossier"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Company.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/dossier/exercices": {
      "get": {
        "tags": [
          "Dossier"
        ],
        "summary": "Liste des exercices du dossier",
        "description": "Liste des exercices du dossier",
        "operationId": "Dossier_GetExercicesByDATASETID",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition"
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results"
            },
            "x-ms-summary": "Sorts the results"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results"
            },
            "x-ms-summary": "Returns only the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results"
            },
            "x-ms-summary": "Skips the first n results"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response"
            },
            "x-ms-summary": "Includes a count of the matching results in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExercice"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListExercice"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListExercice"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListExercice"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Company.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/ecritures": {
      "get": {
        "tags": [
          "Ecritures"
        ],
        "summary": "Liste des écritures comptables",
        "description": "Liste des écritures comptables",
        "operationId": "Ecritures_GetByDATASETID",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEcriture"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListEcriture"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListEcriture"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListEcriture"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/ecritures('{id}')": {
      "get": {
        "tags": [
          "Ecritures"
        ],
        "summary": "Retourne une écriture comptable par son Id",
        "description": "Retourne une écriture comptable par son Id",
        "operationId": "Ecritures_GetByIdAndDATASETID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'écriture",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'écriture"
            },
            "x-ms-summary": "Identifiant de l'écriture"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ecriture"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Ecriture"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Ecriture"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Ecriture"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/ecritures('{id}')/soumettreAPayer": {
      "post": {
        "tags": [
          "Ecritures"
        ],
        "summary": "Soumettre le bon à payer",
        "description": "Soumettre le bon à payer",
        "operationId": "Ecritures_SoumettreAPayerByDatasetidAndID",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant de l'écriture",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'écriture"
            },
            "x-ms-summary": "Identifiant de l'écriture"
          }
        ],
        "requestBody": {
          "description": "upn, commentaire",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "upn"
                ],
                "type": "object",
                "properties": {
                  "upn": {
                    "type": "string"
                  },
                  "commentaire": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Write.All"
            ]
          }
        ],
        "x-codegen-request-body-name": "parameters"
      }
    },
    "/api/v1/{datasetId}/ecritures('{key}')/bonAPayer": {
      "get": {
        "tags": [
          "Ecritures"
        ],
        "summary": "Bon à payer de l'écriture comptable",
        "description": "Bon à payer de l'écriture comptable",
        "operationId": "Ecritures_GetBonAPayerByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant de l'écriture",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de l'écriture"
            },
            "x-ms-summary": "Identifiant de l'écriture"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BonAPayer"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/BonAPayer"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/BonAPayer"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/BonAPayer"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/familles": {
      "get": {
        "tags": [
          "Familles"
        ],
        "summary": "Liste de toutes les familles",
        "description": "Liste de toutes les familles",
        "operationId": "Familles_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFamille"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListFamille"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListFamille"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListFamille"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "ProductFamily.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/familles('{id}')": {
      "get": {
        "tags": [
          "Familles"
        ],
        "summary": "Retourne une famille par son Id",
        "description": "Retourne une famille par son Id",
        "operationId": "Familles_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "key: id"
            },
            "x-ms-summary": "key: id"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Famille"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Famille"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Famille"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Famille"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "ProductFamily.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/fournisseurs": {
      "get": {
        "tags": [
          "Fournisseurs"
        ],
        "summary": "Liste de tous les fournisseurs",
        "description": "Liste de tous les fournisseurs",
        "operationId": "Fournisseurs_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFournisseur"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListFournisseur"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListFournisseur"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListFournisseur"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/fournisseurs('{id}')": {
      "get": {
        "tags": [
          "Fournisseurs"
        ],
        "summary": "Retourne un fournisseur par son Id",
        "description": "Retourne un fournisseur par son Id",
        "operationId": "Fournisseurs_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du fournisseur",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du fournisseur"
            },
            "x-ms-summary": "Identifiant du fournisseur"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fournisseur"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Fournisseur"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Fournisseur"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Fournisseur"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "Information sur l'utilisateur courant",
        "description": "Information sur l'utilisateur courant",
        "operationId": "Me_Get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/depots": {
      "get": {
        "tags": [
          "Depots"
        ],
        "summary": "Liste des dépôts",
        "description": "Liste des dépôts",
        "operationId": "Depots_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDepot"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListDepot"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListDepot"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListDepot"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Depot.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/depots('{id}')": {
      "get": {
        "tags": [
          "Depots"
        ],
        "summary": "Retourne un dépôt par son Id",
        "description": "Retourne un dépôt par son Id",
        "operationId": "Depots_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du dépôt",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du dépôt"
            },
            "x-ms-summary": "Identifiant du dépôt"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Depot"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Depot"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Depot"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Depot"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Depot.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/tiers": {
      "get": {
        "tags": [
          "Tiers"
        ],
        "summary": "Liste de tous les tiers",
        "description": "Liste de tous les tiers",
        "operationId": "Tiers_GetTiersByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTiers"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListTiers"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListTiers"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListTiers"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/tiers('{id}')": {
      "get": {
        "tags": [
          "Tiers"
        ],
        "summary": "Retourne un tiers par son Id",
        "description": "Retourne un tiers par son Id",
        "operationId": "Tiers_GetTiersByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du tiers",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du tiers"
            },
            "x-ms-summary": "Identifiant du tiers"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tiers"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Tiers"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Tiers"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Tiers"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/tiers('{id}')/solde": {
      "get": {
        "tags": [
          "Tiers"
        ],
        "summary": "Solde d'un tiers",
        "description": "Solde d'un tiers",
        "operationId": "Tiers_SoldeByDatasetidAndID",
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du tiers",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du tiers"
            },
            "x-ms-summary": "Identifiant du tiers"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All",
              "History.Accounting.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/tiers('{key}')/contacts": {
      "get": {
        "tags": [
          "Tiers"
        ],
        "summary": "Contacts du tiers",
        "description": "Contacts du tiers",
        "operationId": "Tiers_GetContactsByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du tiers",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du tiers"
            },
            "x-ms-summary": "Identifiant du tiers"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactTiers"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactTiers"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactTiers"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactTiers"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/tiers('{key}')/contacts('{id}')": {
      "get": {
        "tags": [
          "Tiers"
        ],
        "summary": "Contact du tiers",
        "description": "Contact du tiers",
        "operationId": "Tiers_GetContactsByKeyAndIdAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du tiers",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du tiers"
            },
            "x-ms-summary": "Identifiant du tiers"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du contact",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du contact"
            },
            "x-ms-summary": "Identifiant du contact"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTiers"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/catalogues": {
      "get": {
        "tags": [
          "Catalogues"
        ],
        "summary": "Liste des catalogues",
        "description": "Liste des catalogues",
        "operationId": "Catalogues_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogue"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogue"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogue"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogue"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/catalogues('{id}')": {
      "get": {
        "tags": [
          "Catalogues"
        ],
        "summary": "Retourne un catalogue par son Id",
        "description": "Retourne un catalogue par son Id",
        "operationId": "Catalogues_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant du catalogue",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du catalogue"
            },
            "x-ms-summary": "Identifiant du catalogue"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogue"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogue"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogue"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogue"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/catalogues('{key}')/sousCatalogues": {
      "get": {
        "tags": [
          "Catalogues"
        ],
        "summary": "Sous catalogues du catalogue",
        "description": "Sous catalogues du catalogue",
        "operationId": "Catalogues_GetSousCataloguesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du Catalogue",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du Catalogue"
            },
            "x-ms-summary": "Identifiant du Catalogue"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogue"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogue"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogue"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogue"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/catalogues('{key}')/articles": {
      "get": {
        "tags": [
          "Catalogues"
        ],
        "summary": "Articles du catalogue",
        "description": "Articles du catalogue",
        "operationId": "Catalogues_GetArticlesByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du Catalogue",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du Catalogue"
            },
            "x-ms-summary": "Identifiant du Catalogue"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition."
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results."
            },
            "x-ms-summary": "Sorts the results."
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results."
            },
            "x-ms-summary": "Returns only the first n results."
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results."
            },
            "x-ms-summary": "Skips the first n results."
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response."
            },
            "x-ms-summary": "Includes a count of the matching results in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListArticle"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListArticle"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListArticle"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListArticle"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Tiers.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/catalogues('{key}')/parent": {
      "get": {
        "tags": [
          "Catalogues"
        ],
        "summary": "Catalogue parent du catalogue",
        "description": "Catalogue parent du catalogue",
        "operationId": "Catalogues_GetParentByKeyAndDATASETID",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Identifiant du catalogue",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant du catalogue"
            },
            "x-ms-summary": "Identifiant du catalogue"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline."
            },
            "x-ms-summary": "Expands related entities inline."
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response."
            },
            "x-ms-summary": "Selects which properties to include in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogue"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogue"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogue"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogue"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/journaux": {
      "get": {
        "tags": [
          "Journaux"
        ],
        "summary": "Liste des journaux",
        "description": "Liste des journaux",
        "operationId": "Journaux_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition"
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results"
            },
            "x-ms-summary": "Sorts the results"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results"
            },
            "x-ms-summary": "Returns only the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results"
            },
            "x-ms-summary": "Skips the first n results"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response"
            },
            "x-ms-summary": "Includes a count of the matching results in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListJournal"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListJournal"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListJournal"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListJournal"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Journal.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/journaux('{id}')": {
      "get": {
        "tags": [
          "Journaux"
        ],
        "summary": "Retourne un journal par son Id",
        "description": "Retourne un journal par son Id",
        "operationId": "Journaux_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "key: id"
            },
            "x-ms-summary": "key: id"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Journal.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/modesReglement": {
      "get": {
        "tags": [
          "ModesReglement"
        ],
        "summary": "Liste des modes de règlement",
        "description": "Liste des modes de règlement",
        "operationId": "ModesReglement_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition"
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results"
            },
            "x-ms-summary": "Sorts the results"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results"
            },
            "x-ms-summary": "Returns only the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results"
            },
            "x-ms-summary": "Skips the first n results"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response"
            },
            "x-ms-summary": "Includes a count of the matching results in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListModeReglement"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListModeReglement"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListModeReglement"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListModeReglement"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/modesReglement('{id}')": {
      "get": {
        "tags": [
          "ModesReglement"
        ],
        "summary": "Retourne un mode de règlement par son Id",
        "description": "Retourne un mode de règlement par son Id",
        "operationId": "ModesReglement_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "key: id"
            },
            "x-ms-summary": "key: id"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModeReglement"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ModeReglement"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ModeReglement"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ModeReglement"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/periodesRappel": {
      "get": {
        "tags": [
          "PeriodesRappel"
        ],
        "summary": "Liste des périodes de rappel",
        "description": "Liste des périodes de rappel",
        "operationId": "PeriodesRappel_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition"
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results"
            },
            "x-ms-summary": "Sorts the results"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results"
            },
            "x-ms-summary": "Returns only the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results"
            },
            "x-ms-summary": "Skips the first n results"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response"
            },
            "x-ms-summary": "Includes a count of the matching results in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPeriodeRappel"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListPeriodeRappel"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListPeriodeRappel"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListPeriodeRappel"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/periodesRappel('{id}')": {
      "get": {
        "tags": [
          "PeriodesRappel"
        ],
        "summary": "Retourne une période de rappel par son Id",
        "description": "Retourne une période de rappel par son Id",
        "operationId": "PeriodesRappel_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "key: id"
            },
            "x-ms-summary": "key: id"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodeRappel"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodeRappel"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodeRappel"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodeRappel"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/historiquesRappel": {
      "get": {
        "tags": [
          "HistoriquesRappel"
        ],
        "summary": "Liste des historiques de rappel",
        "description": "Liste des historiques de rappel",
        "operationId": "HistoriquesRappel_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition"
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results"
            },
            "x-ms-summary": "Sorts the results"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results"
            },
            "x-ms-summary": "Returns only the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results"
            },
            "x-ms-summary": "Skips the first n results"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response"
            },
            "x-ms-summary": "Includes a count of the matching results in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListHistoriqueRappel"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListHistoriqueRappel"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListHistoriqueRappel"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListHistoriqueRappel"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Reminder.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/historiquesRappel('{id}')": {
      "get": {
        "tags": [
          "HistoriquesRappel"
        ],
        "summary": "Retourne un historique de rappel par son Id",
        "description": "Retourne un historique de rappel par son Id",
        "operationId": "HistoriquesRappel_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "key: id"
            },
            "x-ms-summary": "key: id"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueRappel"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueRappel"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueRappel"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/HistoriqueRappel"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "History.Reminder.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/motifsDevis": {
      "get": {
        "tags": [
          "MotifsDevis"
        ],
        "summary": "Liste des motifs de refus des devis",
        "description": "Liste des motifs de refus des devis",
        "operationId": "MotifsDevis_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition"
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results"
            },
            "x-ms-summary": "Sorts the results"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results"
            },
            "x-ms-summary": "Returns only the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results"
            },
            "x-ms-summary": "Skips the first n results"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response"
            },
            "x-ms-summary": "Includes a count of the matching results in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMotifDevis"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListMotifDevis"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListMotifDevis"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListMotifDevis"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/motifsDevis('{id}')": {
      "get": {
        "tags": [
          "MotifsDevis"
        ],
        "summary": "Retourne un motif de refus de devis par son Id",
        "description": "Retourne une motif de refus de devis par son Id",
        "operationId": "MotifsDevis_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "key: id"
            },
            "x-ms-summary": "key: id"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MotifDevis"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/MotifDevis"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/MotifDevis"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/MotifDevis"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/gammes": {
      "get": {
        "tags": [
          "Gammes"
        ],
        "summary": "Liste des gammes",
        "description": "Liste des gammes",
        "operationId": "Gammes_GetByDatasetid",
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition",
            "schema": {
              "type": "string",
              "x-ms-summary": "Filters the results, based on a Boolean condition"
            },
            "x-ms-summary": "Filters the results, based on a Boolean condition"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results",
            "schema": {
              "type": "string",
              "x-ms-summary": "Sorts the results"
            },
            "x-ms-summary": "Sorts the results"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Returns only the first n results"
            },
            "x-ms-summary": "Returns only the first n results"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-ms-summary": "Skips the first n results"
            },
            "x-ms-summary": "Skips the first n results"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response",
            "schema": {
              "type": "boolean",
              "x-ms-summary": "Includes a count of the matching results in the response"
            },
            "x-ms-summary": "Includes a count of the matching results in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListGamme"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ListGamme"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ListGamme"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ListGamme"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    },
    "/api/v1/{datasetId}/gammes('{id}')": {
      "get": {
        "tags": [
          "Gammes"
        ],
        "summary": "Retourne une gamme par son Id",
        "description": "Retourne une gamme par son Id",
        "operationId": "Gammes_GetByIdAndDatasetid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "key: id",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-summary": "key: id"
            },
            "x-ms-summary": "key: id"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline",
            "schema": {
              "type": "string",
              "x-ms-summary": "Expands related entities inline"
            },
            "x-ms-summary": "Expands related entities inline"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response",
            "schema": {
              "type": "string",
              "x-ms-summary": "Selects which properties to include in the response"
            },
            "x-ms-summary": "Selects which properties to include in the response"
          },
          {
            "name": "datasetId",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-ms-summary": "Identifiant de la société"
            },
            "x-ms-summary": "Identifiant de la société"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gamme"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Gamme"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Gamme"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Gamme"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "oauth2_auth": [
              "user_impersonation",
              "Parameter.Read.All"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "LinkReference": {
        "required": [
          "@odata.id"
        ],
        "type": "object",
        "properties": {
          "@odata.id": {
            "title": "linkReference.linkId",
            "type": "string",
            "description": "Url de référence",
            "x-ms-visibility": ""
          }
        }
      },
      "ListArticle": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Article"
            }
          }
        }
      },
      "Article": {
        "type": "object",
        "properties": {
          "famille": {
            "$ref": "#/components/schemas/Famille"
          },
          "gamme1": {
            "$ref": "#/components/schemas/Gamme"
          },
          "gamme2": {
            "$ref": "#/components/schemas/Gamme"
          },
          "enumeresGamme1": {
            "$ref": "#/components/schemas/EnumereGamme"
          },
          "enumeresGamme2": {
            "$ref": "#/components/schemas/EnumereGamme"
          },
          "intitule": {
            "title": "article.intitule",
            "type": "string",
            "description": "Intitulé de l'article",
            "x-ms-visibility": ""
          },
          "reference": {
            "title": "article.reference",
            "type": "string",
            "description": "Référence de l'article",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "article.dateModification",
            "type": "string",
            "description": "Date de modification de l'article",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "article.dateCreation",
            "type": "string",
            "description": "Date de création de l'article",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "article.id",
            "type": "string",
            "description": "Identifiant de l'article",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "prixVente": {
            "title": "article.prixVente",
            "type": "number",
            "description": "Prix de vente de l'article",
            "format": "double",
            "x-ms-visibility": ""
          },
          "codeBarres": {
            "title": "article.codeBarres",
            "type": "string",
            "description": "Code barres de l'article",
            "x-ms-visibility": ""
          },
          "suiviStock": {
            "title": "article.suiviStock",
            "type": "string",
            "description": "Suivi de stock de l'article",
            "enum": [
              "Aucun",
              "Serie",
              "Cmup",
              "Fifo",
              "Lifo",
              "Lot"
            ],
            "x-ms-visibility": ""
          },
          "prixAchat": {
            "title": "article.prixAchat",
            "type": "number",
            "description": "Prix d'achat de l'article",
            "format": "double",
            "x-ms-visibility": ""
          },
          "poidsNet": {
            "title": "article.poidsNet",
            "type": "number",
            "description": "Poids net de l'article",
            "format": "double",
            "x-ms-visibility": ""
          },
          "poidsBrut": {
            "title": "article.poidsBrut",
            "type": "number",
            "description": "Poids brut de l'article",
            "format": "double",
            "x-ms-visibility": ""
          },
          "unitePoids": {
            "title": "article.unitePoids",
            "type": "string",
            "description": "Unité de poids de l'article",
            "enum": [
              "Tonne",
              "Quintal",
              "Kilogramme",
              "Gramme",
              "Milligramme"
            ],
            "x-ms-visibility": ""
          },
          "sommeil": {
            "title": "article.sommeil",
            "type": "boolean",
            "description": "Mise en sommeil de l'article",
            "x-ms-visibility": ""
          },
          "catalogue": {
            "$ref": "#/components/schemas/Catalogue"
          },
          "depotPrincipal": {
            "$ref": "#/components/schemas/Depot"
          },
          "uniteVente": {
            "$ref": "#/components/schemas/UniteAchatVente"
          },
          "type": {
            "title": "article.type",
            "type": "string",
            "description": "Type de l'article",
            "enum": [
              "Standard",
              "Gamme",
              "RessourceUnitaire",
              "RessourceMultiple"
            ],
            "x-ms-visibility": ""
          },
          "typeNomenclature": {
            "title": "article.typeNomenclature",
            "type": "string",
            "description": "Type de nomenclature",
            "enum": [
              "Aucune",
              "Fabrication",
              "CommercialeCompose",
              "CommercialeComposant",
              "ArticleLie"
            ],
            "x-ms-visibility": ""
          }
        }
      },
      "ListFamille": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Famille"
            }
          }
        }
      },
      "Famille": {
        "type": "object",
        "properties": {
          "type": {
            "title": "famille.type",
            "type": "string",
            "description": "Type de la famille",
            "enum": [
              "Detail",
              "Total",
              "Centralisation"
            ],
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "famille.intitule",
            "type": "string",
            "description": "Intitulé de la famille",
            "x-ms-visibility": ""
          },
          "code": {
            "title": "famille.code",
            "type": "string",
            "description": "Code de la famille",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "famille.dateModification",
            "type": "string",
            "description": "Date de modification de la famille",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "famille.dateCreation",
            "type": "string",
            "description": "Date de création de la famille",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "famille.id",
            "type": "string",
            "description": "Identifiant de la famille",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListStatistiqueArticle": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatistiqueArticle"
            }
          }
        }
      },
      "StatistiqueArticle": {
        "type": "object",
        "properties": {
          "remise": {
            "title": "statistiqueArticle.remise",
            "type": "number",
            "description": "Remise",
            "format": "double",
            "x-ms-visibility": ""
          },
          "marge": {
            "title": "statistiqueArticle.marge",
            "type": "number",
            "description": "Marge",
            "format": "double",
            "x-ms-visibility": ""
          },
          "caHT": {
            "title": "statistiqueArticle.caHT",
            "type": "number",
            "description": "Chiffre d'affaire hors taxes",
            "format": "double",
            "x-ms-visibility": ""
          },
          "quantite": {
            "title": "statistiqueArticle.quantite",
            "type": "number",
            "description": "Quantité",
            "format": "double",
            "x-ms-visibility": ""
          },
          "periode": {
            "title": "statistiqueArticle.periode",
            "type": "string",
            "description": "Période",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "articleId": {
            "title": "statistiqueArticle.articleId",
            "type": "string",
            "description": "Identifiant de l'article",
            "x-ms-visibility": ""
          },
          "familleId": {
            "title": "statistiqueArticle.familleId",
            "type": "string",
            "description": "Identifiant de la famille de l'article",
            "x-ms-visibility": ""
          }
        }
      },
      "ListBonAPayer": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BonAPayer"
            }
          }
        }
      },
      "BonAPayer": {
        "type": "object",
        "properties": {
          "collaborateur": {
            "$ref": "#/components/schemas/Collaborateur"
          },
          "ecriture": {
            "$ref": "#/components/schemas/Ecriture"
          },
          "retourFournisseur": {
            "title": "bonAPayer.retourFournisseur",
            "type": "boolean",
            "description": "Bon à payer issu d'un retour fournisseur",
            "x-ms-visibility": ""
          },
          "montantTTC": {
            "title": "bonAPayer.montantTTC",
            "type": "number",
            "description": "Montant TTC du bon à payer",
            "format": "double",
            "x-ms-visibility": ""
          },
          "commentaire": {
            "title": "bonAPayer.commentaire",
            "type": "string",
            "description": "Commentaire du bon à payer",
            "x-ms-visibility": ""
          },
          "statut": {
            "title": "bonAPayer.statut",
            "type": "string",
            "description": "Statut du bon à payer",
            "enum": [
              "Aucun",
              "AValider",
              "NonConforme",
              "Conforme",
              "EnAttente",
              "BonAPayer"
            ],
            "x-ms-visibility": ""
          },
          "date": {
            "title": "bonAPayer.date",
            "type": "string",
            "description": "Date du bon à payer",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "bonAPayer.dateModification",
            "type": "string",
            "description": "Date de modification du bon à payer",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "bonAPayer.dateCreation",
            "type": "string",
            "description": "Date de création du bon à payer",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "bonAPayer.id",
            "type": "string",
            "description": "Identifiant du bon à payer",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "Collaborateur": {
        "type": "object",
        "properties": {
          "upn": {
            "title": "collaborateur.upn",
            "type": "string",
            "description": "Adresse upn du collaborateur",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "financier": {
            "title": "collaborateur.financier",
            "type": "boolean",
            "description": "Collaborateur profil responsable financier",
            "x-ms-visibility": ""
          },
          "skype": {
            "title": "collaborateur.skype",
            "type": "string",
            "description": "Compte Skype du collaborateur",
            "x-ms-visibility": ""
          },
          "linkedIn": {
            "title": "collaborateur.linkedIn",
            "type": "string",
            "description": "Compte LinkedIn du collaborateur",
            "x-ms-visibility": ""
          },
          "facebook": {
            "title": "collaborateur.facebook",
            "type": "string",
            "description": "Compte Facebook du collaborateur",
            "x-ms-visibility": ""
          },
          "matricule": {
            "title": "collaborateur.matricule",
            "type": "string",
            "description": "Matricule du collaborateur",
            "x-ms-visibility": ""
          },
          "telecom": {
            "$ref": "#/components/schemas/CollaborateurTelecom"
          },
          "chargeRecouvrement": {
            "title": "collaborateur.chargeRecouvrement",
            "type": "boolean",
            "description": "Collaborateur profil chargé de recouvrement",
            "x-ms-visibility": ""
          },
          "receptionnaire": {
            "title": "collaborateur.receptionnaire",
            "type": "boolean",
            "description": "Collaborateur profil réceptionnaire",
            "x-ms-visibility": ""
          },
          "acheteur": {
            "title": "collaborateur.acheteur",
            "type": "boolean",
            "description": "Collaborateur profil acheteur",
            "x-ms-visibility": ""
          },
          "caissier": {
            "title": "collaborateur.caissier",
            "type": "boolean",
            "description": "Collaborateur profil caissier",
            "x-ms-visibility": ""
          },
          "vendeur": {
            "title": "collaborateur.vendeur",
            "type": "boolean",
            "description": "Collaborateur profil vendeur",
            "x-ms-visibility": ""
          },
          "service": {
            "title": "collaborateur.service",
            "type": "string",
            "description": "Service du collaborateur",
            "x-ms-visibility": ""
          },
          "adresse": {
            "$ref": "#/components/schemas/CollaborateurAdresse"
          },
          "fonction": {
            "title": "collaborateur.fonction",
            "type": "string",
            "description": "Fonction du collaborateur",
            "x-ms-visibility": ""
          },
          "prenom": {
            "title": "collaborateur.prenom",
            "type": "string",
            "description": "Prénom du collaborateur",
            "x-ms-visibility": ""
          },
          "nom": {
            "title": "collaborateur.nom",
            "type": "string",
            "description": "Nom du collaborateur",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "collaborateur.dateModification",
            "type": "string",
            "description": "Date de modification du collaborateur",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "collaborateur.dateCreation",
            "type": "string",
            "description": "Date de création du collaborateur",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "collaborateur.id",
            "type": "string",
            "description": "Identifiant du collaborateur",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "Ecriture": {
        "type": "object",
        "properties": {
          "bonAPayer": {
            "$ref": "#/components/schemas/BonAPayer"
          },
          "tiers": {
            "$ref": "#/components/schemas/Tiers"
          },
          "compte": {
            "$ref": "#/components/schemas/Compte"
          },
          "sens": {
            "title": "ecriture.sens",
            "type": "string",
            "description": "Sens de l'écriture",
            "enum": [
              "Debit",
              "Credit"
            ],
            "x-ms-visibility": ""
          },
          "montant": {
            "title": "ecriture.montant",
            "type": "number",
            "description": "Montant de l'écriture",
            "format": "double",
            "x-ms-visibility": ""
          },
          "echeance": {
            "title": "ecriture.echeance",
            "type": "string",
            "description": "Date d'écheance de l'écriture",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "piece": {
            "title": "ecriture.piece",
            "type": "string",
            "description": "Numéro de pièce de l'écriture",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "ecriture.intitule",
            "type": "string",
            "description": "Intitulé de l'écriture",
            "x-ms-visibility": ""
          },
          "date": {
            "title": "ecriture.date",
            "type": "string",
            "description": "Date de l'écriture",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "dateSaisie": {
            "title": "ecriture.dateSaisie",
            "type": "string",
            "description": "Date de saisie de l'écriture",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "numeroFacture": {
            "title": "ecriture.numeroFacture",
            "type": "string",
            "description": "Numéro de facture de l'écriture",
            "x-ms-visibility": ""
          },
          "reference": {
            "title": "ecriture.reference",
            "type": "string",
            "description": "Référence de l'écriture",
            "x-ms-visibility": ""
          },
          "codeLettrage": {
            "title": "ecriture.codeLettrage",
            "type": "string",
            "description": "Code lettrage de l'écriture",
            "x-ms-visibility": ""
          },
          "estLettree": {
            "title": "ecriture.estLettree",
            "type": "boolean",
            "description": "Lettrage de l'écriture",
            "x-ms-visibility": ""
          },
          "journal": {
            "$ref": "#/components/schemas/Journal"
          },
          "modeReglement": {
            "$ref": "#/components/schemas/ModeReglement"
          },
          "dateModification": {
            "title": "ecriture.dateModification",
            "type": "string",
            "description": "Date de modification de l'écriture",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "ecriture.dateCreation",
            "type": "string",
            "description": "Date de création de l'écriture",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "ecriture.id",
            "type": "string",
            "description": "Identifiant de l'écriture",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "CollaborateurTelecom": {
        "type": "object",
        "properties": {
          "eMail": {
            "title": "collaborateurTelecom.eMail",
            "type": "string",
            "description": "Adresse eMail du collaborateur",
            "x-ms-visibility": ""
          },
          "portable": {
            "title": "collaborateurTelecom.portable",
            "type": "string",
            "description": "Portable du collaborateur",
            "x-ms-visibility": ""
          },
          "telecopie": {
            "title": "collaborateurTelecom.telecopie",
            "type": "string",
            "description": "Télécopie du collaborateur",
            "x-ms-visibility": ""
          },
          "telephone": {
            "title": "collaborateurTelecom.telephone",
            "type": "string",
            "description": "Téléphone du collaborateur",
            "x-ms-visibility": ""
          }
        }
      },
      "CollaborateurAdresse": {
        "type": "object",
        "properties": {
          "pays": {
            "title": "collaborateurAdresse.pays",
            "type": "string",
            "description": "Pays du collaborateur",
            "x-ms-visibility": ""
          },
          "codeRegion": {
            "title": "collaborateurAdresse.codeRegion",
            "type": "string",
            "description": "Code région du collaborateur",
            "x-ms-visibility": ""
          },
          "ville": {
            "title": "collaborateurAdresse.ville",
            "type": "string",
            "description": "Ville du collaborateur",
            "x-ms-visibility": ""
          },
          "codePostal": {
            "title": "collaborateurAdresse.codePostal",
            "type": "string",
            "description": "Code postal du collaborateur",
            "x-ms-visibility": ""
          },
          "complement": {
            "title": "collaborateurAdresse.complement",
            "type": "string",
            "description": "Complément d'adresse du collaborateur",
            "x-ms-visibility": ""
          },
          "adresse": {
            "title": "collaborateurAdresse.adresse",
            "type": "string",
            "description": "Adresse du collaborateur",
            "x-ms-visibility": ""
          }
        }
      },
      "Tiers": {
        "type": "object",
        "properties": {
          "note": {
            "title": "tiers.note",
            "type": "string",
            "description": "Bloc-notes du tiers",
            "x-ms-visibility": ""
          },
          "linkedIn": {
            "title": "tiers.linkedIn",
            "type": "string",
            "description": "Compte LinkedIn du tiers",
            "x-ms-visibility": ""
          },
          "facebook": {
            "title": "tiers.facebook",
            "type": "string",
            "description": "Compte Facebook du tiers",
            "x-ms-visibility": ""
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "contacts": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContactTiers"
            }
          },
          "comptes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Compte"
            }
          },
          "comptePrincipal": {
            "$ref": "#/components/schemas/Compte"
          },
          "adresse": {
            "$ref": "#/components/schemas/TiersAdresse"
          },
          "telecom": {
            "$ref": "#/components/schemas/TiersTelecom"
          },
          "notRappel": {
            "title": "tiers.notRappel",
            "type": "boolean",
            "description": "Exclure des rappels/relevés le tiers",
            "x-ms-visibility": ""
          },
          "sommeil": {
            "title": "tiers.sommeil",
            "type": "boolean",
            "description": "Mise en sommeil du tiers",
            "x-ms-visibility": ""
          },
          "validEch": {
            "title": "tiers.validEch",
            "type": "boolean",
            "description": "Automatiser les écritures multi-échéances pour le tiers",
            "x-ms-visibility": ""
          },
          "lettrage": {
            "title": "tiers.lettrage",
            "type": "boolean",
            "description": "Autoriser le lettrage automatique pour le tiers",
            "x-ms-visibility": ""
          },
          "sautPage": {
            "title": "tiers.sautPage",
            "type": "boolean",
            "description": "Réaliser un saut de page pour le tiers",
            "x-ms-visibility": ""
          },
          "sautLigne": {
            "title": "tiers.sautLigne",
            "type": "integer",
            "description": "Nombre de ligne(s) pour le tiers",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "ediCode": {
            "title": "tiers.ediCode",
            "type": "string",
            "description": "Code edi du tiers",
            "x-ms-visibility": ""
          },
          "ediCodeType": {
            "title": "tiers.ediCodeType",
            "type": "string",
            "description": "Type de code edi du tiers",
            "enum": [
              "GLN",
              "DUNS",
              "EDIFACT"
            ],
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "tiers.langue",
            "type": "string",
            "description": "Langue du tiers",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "commentaire": {
            "title": "tiers.commentaire",
            "type": "string",
            "description": "Commentaire du tiers",
            "x-ms-visibility": ""
          },
          "statistiques": {
            "type": "array",
            "items": {
              "title": "tiers.statistiques",
              "type": "string",
              "description": "Champs statistiques du tiers",
              "x-ms-visibility": ""
            }
          },
          "siret": {
            "title": "tiers.siret",
            "type": "string",
            "description": "Siret du tiers",
            "x-ms-visibility": ""
          },
          "identifiant": {
            "title": "tiers.identifiant",
            "type": "string",
            "description": "Identifiant TVA du tiers",
            "x-ms-visibility": ""
          },
          "ape": {
            "title": "tiers.ape",
            "type": "string",
            "description": "Code NAF du tiers",
            "x-ms-visibility": ""
          },
          "raccourci": {
            "title": "tiers.raccourci",
            "type": "string",
            "description": "Raccourci du tiers",
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "tiers.contact",
            "type": "string",
            "description": "Contact du tiers",
            "x-ms-visibility": ""
          },
          "classement": {
            "title": "tiers.classement",
            "type": "string",
            "description": "Classement du tiers",
            "x-ms-visibility": ""
          },
          "qualite": {
            "title": "tiers.qualite",
            "type": "string",
            "description": "Qualité du tiers",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "tiers.intitule",
            "type": "string",
            "description": "Intitulé du tiers",
            "x-ms-visibility": ""
          },
          "type": {
            "title": "tiers.type",
            "type": "string",
            "description": "Type du tiers",
            "readOnly": true,
            "enum": [
              "Client",
              "Fournisseur",
              "Salarie",
              "Autre"
            ],
            "x-ms-visibility": ""
          },
          "numero": {
            "title": "tiers.numero",
            "type": "string",
            "description": "Numéro du tiers",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "tiers.dateModification",
            "type": "string",
            "description": "Date de modification du tiers",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "tiers.dateCreation",
            "type": "string",
            "description": "Date de création du tiers",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "tiers.id",
            "type": "string",
            "description": "Identifiant du tiers",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "Compte": {
        "type": "object",
        "properties": {
          "note": {
            "title": "compte.note",
            "type": "string",
            "description": "Bloc-notes du compte général",
            "x-ms-visibility": ""
          },
          "sommeil": {
            "title": "compte.sommeil",
            "type": "boolean",
            "description": "Mise en sommeil du compte général",
            "x-ms-visibility": ""
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "optDevise": {
            "title": "compte.optDevise",
            "type": "boolean",
            "description": "Saisir la devise pour le compte général",
            "x-ms-visibility": ""
          },
          "optTiers": {
            "title": "compte.optTiers",
            "type": "boolean",
            "description": "Saisir le tiers pour le compte général",
            "x-ms-visibility": ""
          },
          "optLettrage": {
            "title": "compte.optLettrage",
            "type": "boolean",
            "description": "Autoriser le lettrage automatique pour le compte général",
            "x-ms-visibility": ""
          },
          "optQuantite": {
            "title": "compte.optQuantite",
            "type": "boolean",
            "description": "Saisir une quantité pour le compte général",
            "x-ms-visibility": ""
          },
          "optEcheance": {
            "title": "compte.optEcheance",
            "type": "boolean",
            "description": "Saisir la date d'échéance pour le compte général",
            "x-ms-visibility": ""
          },
          "reportAnalytique": {
            "title": "compte.reportAnalytique",
            "type": "boolean",
            "description": "Autoriser le report analytique pour le compte général",
            "x-ms-visibility": ""
          },
          "optAnalytique": {
            "title": "compte.optAnalytique",
            "type": "boolean",
            "description": "Autoriser la saisie analytique pour le compte général",
            "x-ms-visibility": ""
          },
          "optRegroupement": {
            "title": "compte.optRegroupement",
            "type": "boolean",
            "description": "Effectuer le regroupement mensuel des écritures pour le compte\ngénéral",
            "x-ms-visibility": ""
          },
          "sautPage": {
            "title": "compte.sautPage",
            "type": "boolean",
            "description": "Réaliser un saut de page pour le compte général",
            "x-ms-visibility": ""
          },
          "sautLigne": {
            "title": "compte.sautLigne",
            "type": "integer",
            "description": "Nombre de ligne(s) pour le compte général",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "raccourci": {
            "title": "compte.raccourci",
            "type": "string",
            "description": "Raccourci du compte général",
            "x-ms-visibility": ""
          },
          "report": {
            "title": "compte.report",
            "type": "string",
            "description": "Type de report à nouveau pour le compte général",
            "enum": [
              "Aucun",
              "Solde",
              "Detail"
            ],
            "x-ms-visibility": ""
          },
          "classement": {
            "title": "compte.classement",
            "type": "string",
            "description": "Classement du compte général",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "compte.intitule",
            "type": "string",
            "description": "Intitulé du compte général",
            "x-ms-visibility": ""
          },
          "type": {
            "title": "compte.type",
            "type": "string",
            "description": "Type de compte général",
            "enum": [
              "Detail",
              "Total"
            ],
            "x-ms-visibility": ""
          },
          "numero": {
            "title": "compte.numero",
            "type": "string",
            "description": "Numéro de compte général",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "compte.dateModification",
            "type": "string",
            "description": "Date de modification du compte général",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "compte.dateCreation",
            "type": "string",
            "description": "Date de création du compte général",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "compte.id",
            "type": "string",
            "description": "Identifiant du compte général",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "Devise": {
        "type": "object",
        "properties": {
          "deviseAncienneCotation": {
            "title": "devise.deviseAncienneCotation",
            "type": "object",
            "description": "Devise d'ancienne cotation de la devise",
            "x-ms-visibility": ""
          },
          "modeAncienneCotation": {
            "title": "devise.modeAncienneCotation",
            "type": "string",
            "description": "Mode de cotation de la devise (Ancienne Cotation)",
            "enum": [
              "Certain",
              "Incertain"
            ],
            "x-ms-visibility": ""
          },
          "coursAncienneCotation": {
            "title": "devise.coursAncienneCotation",
            "type": "number",
            "description": "Cours de la devise (Ancienne Cotation)",
            "format": "double",
            "x-ms-visibility": ""
          },
          "dateLimiteAncienneCotation": {
            "title": "devise.dateLimiteAncienneCotation",
            "type": "string",
            "description": "Date limite de la devise (Ancienne Cotation)",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "coursCloture": {
            "title": "devise.coursCloture",
            "type": "number",
            "description": "Cours clôture de la devise",
            "format": "double",
            "x-ms-visibility": ""
          },
          "coursPeriode": {
            "title": "devise.coursPeriode",
            "type": "number",
            "description": "Cours période de la devise",
            "format": "double",
            "x-ms-visibility": ""
          },
          "deviseCotationActuelle": {
            "title": "devise.deviseCotationActuelle",
            "type": "object",
            "description": "Devise de cotation actuelle de la devise",
            "x-ms-visibility": ""
          },
          "modeCotationActuel": {
            "title": "devise.modeCotationActuel",
            "type": "string",
            "description": "Mode de cotation de la devise (Cotation Actuelle)",
            "enum": [
              "Certain",
              "Incertain"
            ],
            "x-ms-visibility": ""
          },
          "coursActuel": {
            "title": "devise.coursActuel",
            "type": "number",
            "description": "Cours de la devise (Cotation Actuelle)",
            "format": "double",
            "x-ms-visibility": ""
          },
          "zoneEuro": {
            "title": "devise.zoneEuro",
            "type": "boolean",
            "description": "Zone euro de la devise",
            "x-ms-visibility": ""
          },
          "sigle": {
            "title": "devise.sigle",
            "type": "string",
            "description": "Sigle de la devise",
            "x-ms-visibility": ""
          },
          "format": {
            "title": "devise.format",
            "type": "string",
            "description": "Format de la devise",
            "x-ms-visibility": ""
          },
          "sousUnite": {
            "title": "devise.sousUnite",
            "type": "string",
            "description": "Sous unité de la devise",
            "x-ms-visibility": ""
          },
          "unite": {
            "title": "devise.unite",
            "type": "string",
            "description": "Unité de la devise",
            "x-ms-visibility": ""
          },
          "codeISONum": {
            "title": "devise.codeISONum",
            "type": "string",
            "description": "Code ISO numérique de la devise",
            "x-ms-visibility": ""
          },
          "codeISO": {
            "title": "devise.codeISO",
            "type": "string",
            "description": "Code ISO de la devise",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "devise.intitule",
            "type": "string",
            "description": "Intitulé de la devise",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "devise.id",
            "type": "string",
            "description": "Identifiant de la devise",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ContactTiers": {
        "type": "object",
        "properties": {
          "telecom": {
            "$ref": "#/components/schemas/ContactTiersTelecom"
          },
          "civilite": {
            "title": "contactTiers.civilite",
            "type": "string",
            "description": "Civilité du contact du tiers",
            "enum": [
              "Monsieur",
              "Madame",
              "Mademoiselle"
            ],
            "x-ms-visibility": ""
          },
          "fonction": {
            "title": "contactTiers.fonction",
            "type": "string",
            "description": "Fonction du contact du tiers",
            "x-ms-visibility": ""
          },
          "prenom": {
            "title": "contactTiers.prenom",
            "type": "string",
            "description": "Prénom du contact du tiers",
            "x-ms-visibility": ""
          },
          "nom": {
            "title": "contactTiers.nom",
            "type": "string",
            "description": "Nom du contact du tiers",
            "x-ms-visibility": ""
          },
          "facebook": {
            "title": "contactTiers.facebook",
            "type": "string",
            "description": "Compte Facebook du contact du tiers",
            "x-ms-visibility": ""
          },
          "linkedIn": {
            "title": "contactTiers.linkedIn",
            "type": "string",
            "description": "Compte LinkedIn du contact du tiers",
            "x-ms-visibility": ""
          },
          "service": {
            "$ref": "#/components/schemas/ServiceContact"
          },
          "dateModification": {
            "title": "contactTiers.dateModification",
            "type": "string",
            "description": "Date de modification du contact du tiers",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "contactTiers.dateCreation",
            "type": "string",
            "description": "Date de création du contact du tiers",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "contactTiers.id",
            "type": "string",
            "description": "Identifiant du contact du tiers",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "TiersAdresse": {
        "type": "object",
        "properties": {
          "pays": {
            "title": "tiersAdresse.pays",
            "type": "string",
            "description": "Pays du tiers",
            "x-ms-visibility": ""
          },
          "codeRegion": {
            "title": "tiersAdresse.codeRegion",
            "type": "string",
            "description": "Code région du tiers",
            "x-ms-visibility": ""
          },
          "ville": {
            "title": "tiersAdresse.ville",
            "type": "string",
            "description": "Ville du tiers",
            "x-ms-visibility": ""
          },
          "codePostal": {
            "title": "tiersAdresse.codePostal",
            "type": "string",
            "description": "Code postal du tiers",
            "x-ms-visibility": ""
          },
          "complement": {
            "title": "tiersAdresse.complement",
            "type": "string",
            "description": "Complément d'adresse du tiers",
            "x-ms-visibility": ""
          },
          "adresse": {
            "title": "tiersAdresse.adresse",
            "type": "string",
            "description": "Adresse du tiers",
            "x-ms-visibility": ""
          }
        }
      },
      "TiersTelecom": {
        "type": "object",
        "properties": {
          "site": {
            "title": "tiersTelecom.site",
            "type": "string",
            "description": "Site web du tiers",
            "x-ms-visibility": ""
          },
          "eMail": {
            "title": "tiersTelecom.eMail",
            "type": "string",
            "description": "Adresse eMail du tiers",
            "x-ms-visibility": ""
          },
          "telecopie": {
            "title": "tiersTelecom.telecopie",
            "type": "string",
            "description": "Télécopie du tiers",
            "x-ms-visibility": ""
          },
          "telephone": {
            "title": "tiersTelecom.telephone",
            "type": "string",
            "description": "Téléphone du tiers",
            "x-ms-visibility": ""
          }
        }
      },
      "ContactTiersTelecom": {
        "type": "object",
        "properties": {
          "portable": {
            "title": "contactTiersTelecom.portable",
            "type": "string",
            "description": "Portable du contact du tiers",
            "x-ms-visibility": ""
          },
          "eMail": {
            "title": "contactTiersTelecom.eMail",
            "type": "string",
            "description": "Adresse eMail du contact du tiers",
            "x-ms-visibility": ""
          },
          "telecopie": {
            "title": "contactTiersTelecom.telecopie",
            "type": "string",
            "description": "Télécopie du contact du tiers",
            "x-ms-visibility": ""
          },
          "telephone": {
            "title": "contactTiersTelecom.telephone",
            "type": "string",
            "description": "Téléphone du contact du tiers",
            "x-ms-visibility": ""
          }
        }
      },
      "ListCategorieTarif": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategorieTarif"
            }
          }
        }
      },
      "CategorieTarif": {
        "type": "object",
        "properties": {
          "prixTTC": {
            "title": "categorieTarif.prixTTC",
            "type": "boolean",
            "description": "Le prix de la catégorie tarifaire est TTC",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "categorieTarif.intitule",
            "type": "string",
            "description": "Intitulé de la catégorie tarifaire",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "categorieTarif.id",
            "type": "string",
            "description": "Identifiant de la catégorie tarifaire",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListClient": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "representant": {
            "$ref": "#/components/schemas/Collaborateur"
          },
          "categorieTarif": {
            "$ref": "#/components/schemas/CategorieTarif"
          },
          "codeRisque": {
            "$ref": "#/components/schemas/CodeRisque"
          },
          "derniersReglements": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ExtraitEcriture"
            }
          },
          "derniersDocuments": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ExtraitDocument"
            }
          },
          "encoursMaximum": {
            "title": "client.encoursMaximum",
            "type": "number",
            "description": "Encours maximum du client",
            "format": "double",
            "x-ms-visibility": ""
          },
          "note": {
            "title": "client.note",
            "type": "string",
            "description": "Bloc-notes du client",
            "x-ms-visibility": ""
          },
          "linkedIn": {
            "title": "client.linkedIn",
            "type": "string",
            "description": "Compte LinkedIn du client",
            "x-ms-visibility": ""
          },
          "facebook": {
            "title": "client.facebook",
            "type": "string",
            "description": "Compte Facebook du client",
            "x-ms-visibility": ""
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "contacts": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContactTiers"
            }
          },
          "comptes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Compte"
            }
          },
          "comptePrincipal": {
            "$ref": "#/components/schemas/Compte"
          },
          "adresse": {
            "$ref": "#/components/schemas/TiersAdresse"
          },
          "telecom": {
            "$ref": "#/components/schemas/TiersTelecom"
          },
          "notRappel": {
            "title": "client.notRappel",
            "type": "boolean",
            "description": "Exclure des rappels/relevés le client",
            "x-ms-visibility": ""
          },
          "sommeil": {
            "title": "client.sommeil",
            "type": "boolean",
            "description": "Mise en sommeil du client",
            "x-ms-visibility": ""
          },
          "validEch": {
            "title": "client.validEch",
            "type": "boolean",
            "description": "Automatiser les écritures multi-échéances pour le client",
            "x-ms-visibility": ""
          },
          "lettrage": {
            "title": "client.lettrage",
            "type": "boolean",
            "description": "Autoriser le lettrage automatique pour le client",
            "x-ms-visibility": ""
          },
          "sautPage": {
            "title": "client.sautPage",
            "type": "boolean",
            "description": "Réaliser un saut de page pour le client",
            "x-ms-visibility": ""
          },
          "sautLigne": {
            "title": "client.sautLigne",
            "type": "integer",
            "description": "Nombre de ligne(s) pour le client",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "ediCode": {
            "title": "client.ediCode",
            "type": "string",
            "description": "Code edi du client",
            "x-ms-visibility": ""
          },
          "ediCodeType": {
            "title": "client.ediCodeType",
            "type": "string",
            "description": "Type de code edi du client",
            "enum": [
              "GLN",
              "DUNS",
              "EDIFACT"
            ],
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "client.langue",
            "type": "string",
            "description": "Langue du client",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "commentaire": {
            "title": "client.commentaire",
            "type": "string",
            "description": "Commentaire du client",
            "x-ms-visibility": ""
          },
          "statistiques": {
            "type": "array",
            "items": {
              "title": "client.statistiques",
              "type": "string",
              "description": "Champs statistiques du client",
              "x-ms-visibility": ""
            }
          },
          "siret": {
            "title": "client.siret",
            "type": "string",
            "description": "Siret du client",
            "x-ms-visibility": ""
          },
          "identifiant": {
            "title": "client.identifiant",
            "type": "string",
            "description": "Identifiant TVA du client",
            "x-ms-visibility": ""
          },
          "ape": {
            "title": "client.ape",
            "type": "string",
            "description": "Code NAF du client",
            "x-ms-visibility": ""
          },
          "raccourci": {
            "title": "client.raccourci",
            "type": "string",
            "description": "Raccourci du client",
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "client.contact",
            "type": "string",
            "description": "Contact du client",
            "x-ms-visibility": ""
          },
          "classement": {
            "title": "client.classement",
            "type": "string",
            "description": "Classement du client",
            "x-ms-visibility": ""
          },
          "qualite": {
            "title": "client.qualite",
            "type": "string",
            "description": "Qualité du client",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "client.intitule",
            "type": "string",
            "description": "Intitulé du client",
            "x-ms-visibility": ""
          },
          "type": {
            "title": "client.type",
            "type": "string",
            "description": "Type du client",
            "readOnly": true,
            "enum": [
              "Client",
              "Fournisseur",
              "Salarie",
              "Autre"
            ],
            "x-ms-visibility": ""
          },
          "numero": {
            "title": "client.numero",
            "type": "string",
            "description": "Numéro du client",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "client.dateModification",
            "type": "string",
            "description": "Date de modification du client",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "client.dateCreation",
            "type": "string",
            "description": "Date de création du client",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "client.id",
            "type": "string",
            "description": "Identifiant du client",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "prospect": {
            "title": "client.prospect",
            "type": "boolean",
            "description": "Client Prospect",
            "x-ms-visibility": ""
          }
        }
      },
      "CodeRisque": {
        "type": "object",
        "properties": {
          "maximum": {
            "title": "codeRisque.maximum",
            "type": "number",
            "description": "Montant maximum de dépassement d'encours du code risque",
            "format": "double",
            "x-ms-visibility": ""
          },
          "minimum": {
            "title": "codeRisque.minimum",
            "type": "number",
            "description": "Montant minimum de dépassement d'encours du code risque",
            "format": "double",
            "x-ms-visibility": ""
          },
          "type": {
            "title": "codeRisque.type",
            "type": "string",
            "description": "Action du code risque",
            "enum": [
              "Livrer",
              "Surveiller",
              "Bloquer"
            ],
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "codeRisque.intitule",
            "type": "string",
            "description": "Intitulé du code risque",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "codeRisque.id",
            "type": "string",
            "description": "Identifiant du code risque",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ExtraitEcriture": {
        "type": "object",
        "properties": {
          "montant": {
            "title": "extraitEcriture.montant",
            "type": "number",
            "description": "Montant de l'écriture",
            "format": "double",
            "x-ms-visibility": ""
          },
          "reference": {
            "title": "extraitEcriture.reference",
            "type": "string",
            "description": "Référence de l'écriture",
            "x-ms-visibility": ""
          },
          "piece": {
            "title": "extraitEcriture.piece",
            "type": "string",
            "description": "Numéro de pièce de l'écriture",
            "x-ms-visibility": ""
          },
          "date": {
            "title": "extraitEcriture.date",
            "type": "string",
            "description": "Date de l'écriture",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "extraitEcriture.dateModification",
            "type": "string",
            "description": "Date de modification de l'écriture",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "extraitEcriture.dateCreation",
            "type": "string",
            "description": "Date de création de l'écriture",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "extraitEcriture.id",
            "type": "string",
            "description": "Identifiant de l'écriture",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ExtraitDocument": {
        "type": "object",
        "properties": {
          "netAPayer": {
            "title": "extraitDocument.netAPayer",
            "type": "number",
            "description": "Montant net à payer du document",
            "format": "double",
            "x-ms-visibility": ""
          },
          "montantTTC": {
            "title": "extraitDocument.montantTTC",
            "type": "number",
            "description": "Montant TTC du document",
            "format": "double",
            "x-ms-visibility": ""
          },
          "reference": {
            "title": "extraitDocument.reference",
            "type": "string",
            "description": "Référence du document",
            "x-ms-visibility": ""
          },
          "piece": {
            "title": "extraitDocument.piece",
            "type": "string",
            "description": "Numéro de pièce du document",
            "x-ms-visibility": ""
          },
          "date": {
            "title": "extraitDocument.date",
            "type": "string",
            "description": "Date du document",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "extraitDocument.dateModification",
            "type": "string",
            "description": "Date de modification du document",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "extraitDocument.dateCreation",
            "type": "string",
            "description": "Date de création du document",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "extraitDocument.id",
            "type": "string",
            "description": "Identifiant du document",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "TiersPartenaire": {
        "type": "object",
        "properties": {
          "derniersReglements": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ExtraitEcriture"
            }
          },
          "derniersDocuments": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ExtraitDocument"
            }
          },
          "encoursMaximum": {
            "title": "tiersPartenaire.encoursMaximum",
            "type": "number",
            "description": "Encours maximum du tiers partenaire",
            "format": "double",
            "x-ms-visibility": ""
          },
          "tiersPayeur": {
            "$ref": "#/components/schemas/TiersPartenaire"
          },
          "note": {
            "title": "tiersPartenaire.note",
            "type": "string",
            "description": "Bloc-note du tiers partenaire",
            "x-ms-visibility": ""
          },
          "linkedIn": {
            "title": "tiersPartenaire.linkedIn",
            "type": "string",
            "description": "Compte LinkedIn du tiers partenaire",
            "x-ms-visibility": ""
          },
          "facebook": {
            "title": "tiersPartenaire.facebook",
            "type": "string",
            "description": "Compte Facebook du tiers partenaire",
            "x-ms-visibility": ""
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "contacts": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContactTiers"
            }
          },
          "comptes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Compte"
            }
          },
          "comptePrincipal": {
            "$ref": "#/components/schemas/Compte"
          },
          "adresse": {
            "$ref": "#/components/schemas/TiersAdresse"
          },
          "telecom": {
            "$ref": "#/components/schemas/TiersTelecom"
          },
          "notRappel": {
            "title": "tiersPartenaire.notRappel",
            "type": "boolean",
            "description": "Exclure des rappels/relevés le tiers partenaire",
            "x-ms-visibility": ""
          },
          "sommeil": {
            "title": "tiersPartenaire.sommeil",
            "type": "boolean",
            "description": "Mise en sommeil du tiers partenaire",
            "x-ms-visibility": ""
          },
          "validEch": {
            "title": "tiersPartenaire.validEch",
            "type": "boolean",
            "description": "Automatiser les écritures multi-échéances pour le tiers partenaire",
            "x-ms-visibility": ""
          },
          "lettrage": {
            "title": "tiersPartenaire.lettrage",
            "type": "boolean",
            "description": "Autoriser le lettrage automatique pour le tiers partenaire",
            "x-ms-visibility": ""
          },
          "sautPage": {
            "title": "tiersPartenaire.sautPage",
            "type": "boolean",
            "description": "Réaliser un saut de page pour le tiers partenaire",
            "x-ms-visibility": ""
          },
          "sautLigne": {
            "title": "tiersPartenaire.sautLigne",
            "type": "integer",
            "description": "Nombre de ligne(s) pour le tiers partenaire",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "ediCode": {
            "title": "tiersPartenaire.ediCode",
            "type": "string",
            "description": "Code edi du tiers partenaire",
            "x-ms-visibility": ""
          },
          "ediCodeType": {
            "title": "tiersPartenaire.ediCodeType",
            "type": "string",
            "description": "Type de code edi pour le tiers partenaire",
            "enum": [
              "GLN",
              "DUNS",
              "EDIFACT"
            ],
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "tiersPartenaire.langue",
            "type": "string",
            "description": "Langue du tiers partenaire",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "commentaire": {
            "title": "tiersPartenaire.commentaire",
            "type": "string",
            "description": "Commentaire du tiers partenaire",
            "x-ms-visibility": ""
          },
          "statistiques": {
            "type": "array",
            "items": {
              "title": "tiersPartenaire.statistiques",
              "type": "string",
              "description": "Champs statistiques du tiers partenaire",
              "x-ms-visibility": ""
            }
          },
          "siret": {
            "title": "tiersPartenaire.siret",
            "type": "string",
            "description": "Siret du tiers partenaire",
            "x-ms-visibility": ""
          },
          "identifiant": {
            "title": "tiersPartenaire.identifiant",
            "type": "string",
            "description": "Identifiant TVA du tiers partenaire",
            "x-ms-visibility": ""
          },
          "ape": {
            "title": "tiersPartenaire.ape",
            "type": "string",
            "description": "Code NAF du tiers partenaire",
            "x-ms-visibility": ""
          },
          "raccourci": {
            "title": "tiersPartenaire.raccourci",
            "type": "string",
            "description": "Raccourci du tiers partenaire",
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "tiersPartenaire.contact",
            "type": "string",
            "description": "Contact du tiers partenaire",
            "x-ms-visibility": ""
          },
          "classement": {
            "title": "tiersPartenaire.classement",
            "type": "string",
            "description": "Classement du tiers partenaire",
            "x-ms-visibility": ""
          },
          "qualite": {
            "title": "tiersPartenaire.qualite",
            "type": "string",
            "description": "Qualité du tiers partenaire",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "tiersPartenaire.intitule",
            "type": "string",
            "description": "Intitulé du tiers partenaire",
            "x-ms-visibility": ""
          },
          "type": {
            "title": "tiersPartenaire.type",
            "type": "string",
            "description": "Type du tiers partenaire",
            "readOnly": true,
            "enum": [
              "Client",
              "Fournisseur",
              "Salarie",
              "Autre"
            ],
            "x-ms-visibility": ""
          },
          "numero": {
            "title": "tiersPartenaire.numero",
            "type": "string",
            "description": "Numéro du tiers partenaire",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "tiersPartenaire.dateModification",
            "type": "string",
            "description": "Date de modification du tiers partenaire",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "tiersPartenaire.dateCreation",
            "type": "string",
            "description": "Date de création du tiers partenaire",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "tiersPartenaire.id",
            "type": "string",
            "description": "Identifiant du tiers partenaire",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListStatistiqueClient": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatistiqueClient"
            }
          }
        }
      },
      "StatistiqueClient": {
        "type": "object",
        "properties": {
          "caHT": {
            "title": "statistiqueClient.caHT",
            "type": "number",
            "description": "Chiffre d'affaires hors taxe",
            "format": "double",
            "x-ms-visibility": ""
          },
          "periode": {
            "title": "statistiqueClient.periode",
            "type": "string",
            "description": "Période",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "collaborateurId": {
            "title": "statistiqueClient.collaborateurId",
            "type": "string",
            "description": "Identifiant du collaborateur",
            "x-ms-visibility": ""
          },
          "clientId": {
            "title": "statistiqueClient.clientId",
            "type": "string",
            "description": "Identifiant du client",
            "x-ms-visibility": ""
          }
        }
      },
      "ListCompte": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Compte"
            }
          }
        }
      },
      "ListContactTiers": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactTiers"
            }
          }
        }
      },
      "ListExtraitEcriture": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtraitEcriture"
            }
          }
        }
      },
      "ListExtraitDocument": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtraitDocument"
            }
          }
        }
      },
      "ListCodeRisque": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeRisque"
            }
          }
        }
      },
      "ListCollaborateur": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Collaborateur"
            }
          }
        }
      },
      "ListCompany": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company"
            }
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "version": {
            "title": "company.version",
            "type": "integer",
            "description": "Version de la société",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "name": {
            "title": "company.name",
            "type": "string",
            "description": "Nom de la société",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "company.id",
            "type": "string",
            "description": "Identifiant de la société",
            "format": "uuid",
            "readOnly": true,
            "example": "00000000-0000-0000-0000-000000000000",
            "x-ms-visibility": ""
          }
        }
      },
      "ListMouvementCompte": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MouvementCompte"
            }
          }
        }
      },
      "MouvementCompte": {
        "type": "object",
        "properties": {
          "compteId": {
            "title": "mouvementCompte.compteId",
            "type": "string",
            "description": "Identifiant du compte",
            "x-ms-visibility": ""
          },
          "totalCredit": {
            "title": "mouvementCompte.totalCredit",
            "type": "number",
            "description": "Total crédit du compte",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalDebit": {
            "title": "mouvementCompte.totalDebit",
            "type": "number",
            "description": "Total débit du compte",
            "format": "double",
            "x-ms-visibility": ""
          },
          "type": {
            "title": "mouvementCompte.type",
            "type": "string",
            "description": "Type de mouvement",
            "enum": [
              "ANouveaux",
              "Standard"
            ],
            "x-ms-visibility": ""
          },
          "periode": {
            "title": "mouvementCompte.periode",
            "type": "string",
            "description": "Période",
            "format": "date-time",
            "x-ms-visibility": ""
          }
        }
      },
      "ServiceContact": {
        "type": "object",
        "properties": {
          "abrege": {
            "title": "serviceContact.abrege",
            "type": "string",
            "description": "Abrégé du service contact",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "serviceContact.intitule",
            "type": "string",
            "description": "Intitulé du service contact",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "serviceContact.id",
            "type": "string",
            "description": "Identifiant du service contact",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListDevise": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Devise"
            }
          }
        }
      },
      "ListDocumentsVenteCommande": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentsVenteCommande"
            }
          }
        }
      },
      "DocumentsVenteCommande": {
        "type": "object",
        "properties": {
          "id": {
            "title": "documentsVenteCommande.id",
            "type": "string",
            "description": "Identifiant de la commande",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "documentsVenteCommande.contact",
            "type": "string",
            "description": "Contact de la commande",
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "documentsVenteCommande.langue",
            "type": "string",
            "description": "Langue de la commande",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "cours": {
            "title": "documentsVenteCommande.cours",
            "type": "number",
            "description": "Cours de la commande",
            "format": "double",
            "x-ms-visibility": ""
          },
          "interdireRegroupement": {
            "title": "documentsVenteCommande.interdireRegroupement",
            "type": "boolean",
            "description": "Interdire le regroupement en transformation",
            "x-ms-visibility": ""
          },
          "nbColis": {
            "title": "documentsVenteCommande.nbColis",
            "type": "number",
            "description": "Nombre de colis de la commande",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "coordonnees": {
            "title": "documentsVenteCommande.coordonnees",
            "type": "array",
            "description": "Coordonées de la commande",
            "items": {
              "type": "string"
            },
            "x-ms-visibility": ""
          },
          "transaction": {
            "title": "documentsVenteCommande.transaction",
            "type": "number",
            "description": "Transaction de la commande",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "regime": {
            "title": "documentsVenteCommande.regime",
            "type": "number",
            "description": "Régime de la commande",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "nbCopieFacture": {
            "title": "documentsVenteCommande.nbCopieFacture",
            "type": "number",
            "description": "Nombre de copie facture de la commande",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "date": {
            "title": "documentsVenteCommande.date",
            "type": "string",
            "description": "Date de la commande",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "piece": {
            "title": "documentsVenteCommande.piece",
            "type": "string",
            "description": "Numéro de pièce de la commande",
            "x-ms-visibility": ""
          },
          "statut": {
            "title": "documentsVenteCommande.statut",
            "type": "string",
            "description": "Statut de la commande",
            "enum": [
              "Saisi",
              "Confirme",
              "APreparer"
            ],
            "x-ms-visibility": ""
          },
          "dateLivraisonPrevue": {
            "title": "documentsVenteCommande.dateLivraisonPrevue",
            "type": "string",
            "description": "Date de livraison prévue de la commande",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "reference": {
            "title": "documentsVenteCommande.reference",
            "type": "string",
            "description": "Référence de la commande",
            "x-ms-visibility": ""
          },
          "tauxEscompte": {
            "title": "documentsVenteCommande.tauxEscompte",
            "type": "number",
            "description": "Taux d'escompte de la commande",
            "format": "double",
            "x-ms-visibility": ""
          },
          "fraisExpedition": {
            "title": "documentsVenteCommande.fraisExpedition",
            "type": "number",
            "description": "Frais de port HT de la commande",
            "format": "double",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "documentsVenteCommande.dateModification",
            "type": "string",
            "description": "Date de modification de la commande",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "documentsVenteCommande.dateCreation",
            "type": "string",
            "description": "Date de création de la commande",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "netAPayer": {
            "title": "documentsVenteCommande.netAPayer",
            "type": "number",
            "description": "Montant net à payer de la commande",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalHT": {
            "title": "documentsVenteCommande.totalHT",
            "type": "number",
            "description": "Total HT de la commande",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalHTNet": {
            "title": "documentsVenteCommande.totalHTNet",
            "type": "number",
            "description": "Total HT net de la commande",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalTTC": {
            "title": "documentsVenteCommande.totalTTC",
            "type": "number",
            "description": "Total TTC de la commande",
            "format": "double",
            "x-ms-visibility": ""
          },
          "imprime": {
            "title": "documentsVenteCommande.imprime",
            "type": "boolean",
            "description": "Document imprimé",
            "x-ms-visibility": ""
          },
          "reliquat": {
            "title": "documentsVenteCommande.reliquat",
            "type": "boolean",
            "description": "Document en reliquat",
            "x-ms-visibility": ""
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot"
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "lieuLivraison": {
            "$ref": "#/components/schemas/Livraison"
          },
          "categorieTarifaire": {
            "$ref": "#/components/schemas/CategorieTarif"
          },
          "representant": {
            "$ref": "#/components/schemas/Collaborateur"
          },
          "compteGeneral": {
            "$ref": "#/components/schemas/Compte"
          },
          "periodicite": {
            "$ref": "#/components/schemas/Periodicite"
          },
          "acompte": {
            "$ref": "#/components/schemas/AcompteVente"
          }
        }
      },
      "ListDocumentsVenteLivraison": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentsVenteLivraison"
            }
          }
        }
      },
      "DocumentsVenteLivraison": {
        "type": "object",
        "properties": {
          "id": {
            "title": "documentsVenteLivraison.id",
            "type": "string",
            "description": "Identifiant du bon de livraison",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "documentsVenteLivraison.contact",
            "type": "string",
            "description": "Contact du bon de livraison",
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "documentsVenteLivraison.langue",
            "type": "string",
            "description": "Langue du bon de livraison",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "cours": {
            "title": "documentsVenteLivraison.cours",
            "type": "number",
            "description": "Cours du bon de livraison",
            "format": "double",
            "x-ms-visibility": ""
          },
          "interdireRegroupement": {
            "title": "documentsVenteLivraison.interdireRegroupement",
            "type": "boolean",
            "description": "Interdire le regroupement en transformation",
            "x-ms-visibility": ""
          },
          "nbColis": {
            "title": "documentsVenteLivraison.nbColis",
            "type": "number",
            "description": "Nombre de colis du bon de livraison",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "coordonnees": {
            "title": "documentsVenteLivraison.coordonnees",
            "type": "array",
            "description": "Coordonées du bon de livraison",
            "items": {
              "type": "string"
            },
            "x-ms-visibility": ""
          },
          "transaction": {
            "title": "documentsVenteLivraison.transaction",
            "type": "number",
            "description": "Transaction du bon de livraison",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "regime": {
            "title": "documentsVenteLivraison.regime",
            "type": "number",
            "description": "Régime du bon de livraison",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "nbCopieFacture": {
            "title": "documentsVenteLivraison.nbCopieFacture",
            "type": "number",
            "description": "Nombre de copie facture du bon de livraison",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "date": {
            "title": "documentsVenteLivraison.date",
            "type": "string",
            "description": "Date du bon de livraison",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "piece": {
            "title": "documentsVenteLivraison.piece",
            "type": "string",
            "description": "Numéro de pièce du bon de livraison",
            "x-ms-visibility": ""
          },
          "statut": {
            "title": "documentsVenteLivraison.statut",
            "type": "string",
            "description": "Statut du bon de livraison",
            "enum": [
              "Saisi",
              "Confirme",
              "AFacturer"
            ],
            "x-ms-visibility": ""
          },
          "dateLivraisonPrevue": {
            "title": "documentsVenteLivraison.dateLivraisonPrevue",
            "type": "string",
            "description": "Date de livraison prévue du bon de livraison",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "reference": {
            "title": "documentsVenteLivraison.reference",
            "type": "string",
            "description": "Référence du bon de livraison",
            "x-ms-visibility": ""
          },
          "tauxEscompte": {
            "title": "documentsVenteLivraison.tauxEscompte",
            "type": "number",
            "description": "Taux d'escompte du bon de livraison",
            "format": "double",
            "x-ms-visibility": ""
          },
          "fraisExpedition": {
            "title": "documentsVenteLivraison.fraisExpedition",
            "type": "number",
            "description": "Frais de port HT du bon de livraison",
            "format": "double",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "documentsVenteLivraison.dateModification",
            "type": "string",
            "description": "Date de modification du bon de livraison",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "documentsVenteLivraison.dateCreation",
            "type": "string",
            "description": "Date de création du bon de livraison",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "netAPayer": {
            "title": "documentsVenteLivraison.netAPayer",
            "type": "number",
            "description": "Montant net à payer du bon de livraison",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalHT": {
            "title": "documentsVenteLivraison.totalHT",
            "type": "number",
            "description": "Total HT du bon de livraison",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalHTNet": {
            "title": "documentsVenteLivraison.totalHTNet",
            "type": "number",
            "description": "Total HT net du bon de livraison",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalTTC": {
            "title": "documentsVenteLivraison.totalTTC",
            "type": "number",
            "description": "Total TTC du bon de livraison",
            "format": "double",
            "x-ms-visibility": ""
          },
          "imprime": {
            "title": "documentsVenteLivraison.imprime",
            "type": "boolean",
            "description": "Document imprimé",
            "x-ms-visibility": ""
          },
          "reliquat": {
            "title": "documentsVenteLivraison.reliquat",
            "type": "boolean",
            "description": "Document en reliquat",
            "x-ms-visibility": ""
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot"
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "lieuLivraison": {
            "$ref": "#/components/schemas/Livraison"
          },
          "categorieTarifaire": {
            "$ref": "#/components/schemas/CategorieTarif"
          },
          "representant": {
            "$ref": "#/components/schemas/Collaborateur"
          },
          "compteGeneral": {
            "$ref": "#/components/schemas/Compte"
          },
          "periodicite": {
            "$ref": "#/components/schemas/Periodicite"
          },
          "acompte": {
            "$ref": "#/components/schemas/AcompteVente"
          }
        }
      },
      "ListDocumentsVenteFacture": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentsVenteFacture"
            }
          }
        }
      },
      "DocumentsVenteFacture": {
        "type": "object",
        "properties": {
          "id": {
            "title": "documentsVenteFacture.id",
            "type": "string",
            "description": "Identifiant de la facture",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "documentsVenteFacture.contact",
            "type": "string",
            "description": "Contact de la facture",
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "documentsVenteFacture.langue",
            "type": "string",
            "description": "Langue de la facture",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "cours": {
            "title": "documentsVenteFacture.cours",
            "type": "number",
            "description": "Cours de la facture",
            "format": "double",
            "x-ms-visibility": ""
          },
          "interdireRegroupement": {
            "title": "documentsVenteFacture.interdireRegroupement",
            "type": "boolean",
            "description": "Interdire le regroupement en transformation",
            "x-ms-visibility": ""
          },
          "nbColis": {
            "title": "documentsVenteFacture.nbColis",
            "type": "number",
            "description": "Nombre de colis de la facture",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "coordonnees": {
            "title": "documentsVenteFacture.coordonnees",
            "type": "array",
            "description": "Coordonées de la facture",
            "items": {
              "type": "string"
            },
            "x-ms-visibility": ""
          },
          "transaction": {
            "title": "documentsVenteFacture.transaction",
            "type": "number",
            "description": "Transaction de la facture",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "regime": {
            "title": "documentsVenteFacture.regime",
            "type": "number",
            "description": "Régime de la facture",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "nbCopieFacture": {
            "title": "documentsVenteFacture.nbCopieFacture",
            "type": "number",
            "description": "Nombre de copie facture de la facture",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "date": {
            "title": "documentsVenteFacture.date",
            "type": "string",
            "description": "Date de la facture",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "piece": {
            "title": "documentsVenteFacture.piece",
            "type": "string",
            "description": "Numéro de pièce de la facture",
            "x-ms-visibility": ""
          },
          "statut": {
            "title": "documentsVenteFacture.statut",
            "type": "string",
            "description": "Statut de la facture",
            "enum": [
              "Saisi",
              "Confirme",
              "AComptabiliser"
            ],
            "x-ms-visibility": ""
          },
          "dateLivraisonPrevue": {
            "title": "documentsVenteFacture.dateLivraisonPrevue",
            "type": "string",
            "description": "Date de livraison prévue de la facture",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "dateLivraisonRealisee": {
            "title": "documentsVenteFacture.dateLivraisonRealisee",
            "type": "string",
            "description": "Date de livraison réalisée de la facture",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "reference": {
            "title": "documentsVenteFacture.reference",
            "type": "string",
            "description": "Référence de la facture",
            "x-ms-visibility": ""
          },
          "tauxEscompte": {
            "title": "documentsVenteFacture.tauxEscompte",
            "type": "number",
            "description": "Taux d'escompte de la facture",
            "format": "double",
            "x-ms-visibility": ""
          },
          "fraisExpedition": {
            "title": "documentsVenteFacture.fraisExpedition",
            "type": "number",
            "description": "Frais de port HT de la facture",
            "format": "double",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "documentsVenteFacture.dateModification",
            "type": "string",
            "description": "Date de modification de la facture",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "documentsVenteFacture.dateCreation",
            "type": "string",
            "description": "Date de création de la facture",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "netAPayer": {
            "title": "documentsVenteFacture.netAPayer",
            "type": "number",
            "description": "Montant net à payer de la facture",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalHT": {
            "title": "documentsVenteFacture.totalHT",
            "type": "number",
            "description": "Total HT de la facture",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalHTNet": {
            "title": "documentsVenteFacture.totalHTNet",
            "type": "number",
            "description": "Total HT net de la facture",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalTTC": {
            "title": "documentsVenteFacture.totalTTC",
            "type": "number",
            "description": "Total TTC de la facture",
            "format": "double",
            "x-ms-visibility": ""
          },
          "imprime": {
            "title": "documentsVenteFacture.imprime",
            "type": "boolean",
            "description": "Document imprimé",
            "x-ms-visibility": ""
          },
          "reliquat": {
            "title": "documentsVenteFacture.reliquat",
            "type": "boolean",
            "description": "Document en reliquat",
            "x-ms-visibility": ""
          },
          "comptabilise": {
            "title": "documentsVenteFacture.comptabilise",
            "type": "boolean",
            "description": "Facture comptabilisée",
            "x-ms-visibility": ""
          },
          "valide": {
            "title": "documentsVenteFacture.valide",
            "type": "boolean",
            "description": "Facture validée",
            "x-ms-visibility": ""
          },
          "provenance": {
            "title": "documentsVenteFacture.provenance",
            "type": "string",
            "description": "Provenance de la facture",
            "enum": [
              "Avoir",
              "Normale",
              "Retour"
            ],
            "x-ms-visibility": ""
          },
          "montantRegle": {
            "title": "documentsVenteFacture.montantRegle",
            "type": "number",
            "description": "Montant réglé",
            "format": "double",
            "x-ms-visibility": ""
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot"
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "lieuLivraison": {
            "$ref": "#/components/schemas/Livraison"
          },
          "categorieTarifaire": {
            "$ref": "#/components/schemas/CategorieTarif"
          },
          "representant": {
            "$ref": "#/components/schemas/Collaborateur"
          },
          "compteGeneral": {
            "$ref": "#/components/schemas/Compte"
          },
          "periodicite": {
            "$ref": "#/components/schemas/Periodicite"
          },
          "acompte": {
            "$ref": "#/components/schemas/AcompteVente"
          }
        }
      },
      "ListDocumentsVenteDevis": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentsVenteDevis"
            }
          }
        }
      },
      "DocumentsVenteDevis": {
        "type": "object",
        "properties": {
          "id": {
            "title": "documentsVenteDevis.id",
            "type": "string",
            "description": "Identifiant du devis",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "documentsVenteDevis.contact",
            "type": "string",
            "description": "Contact du devis",
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "documentsVenteDevis.langue",
            "type": "string",
            "description": "Langue du devis",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "cours": {
            "title": "documentsVenteDevis.cours",
            "type": "number",
            "description": "Cours du devis",
            "format": "double",
            "x-ms-visibility": ""
          },
          "interdireRegroupement": {
            "title": "documentsVenteDevis.interdireRegroupement",
            "type": "boolean",
            "description": "Interdire le regroupement en transformation",
            "x-ms-visibility": ""
          },
          "nbColis": {
            "title": "documentsVenteDevis.nbColis",
            "type": "number",
            "description": "Nombre de colis du devis",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "coordonnees": {
            "title": "documentsVenteDevis.coordonnees",
            "type": "array",
            "description": "Coordonées du devis",
            "items": {
              "type": "string"
            },
            "x-ms-visibility": ""
          },
          "transaction": {
            "title": "documentsVenteDevis.transaction",
            "type": "number",
            "description": "Transaction du devis",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "regime": {
            "title": "documentsVenteDevis.regime",
            "type": "number",
            "description": "Régime du devis",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "nbCopieFacture": {
            "title": "documentsVenteDevis.nbCopieFacture",
            "type": "number",
            "description": "Nombre de copie facture du devis",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "date": {
            "title": "documentsVenteDevis.date",
            "type": "string",
            "description": "Date du devis",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "piece": {
            "title": "documentsVenteDevis.piece",
            "type": "string",
            "description": "Numéro de pièce du devis",
            "x-ms-visibility": ""
          },
          "statut": {
            "title": "documentsVenteDevis.statut",
            "type": "string",
            "description": "Statut du devis",
            "enum": [
              "Saisi",
              "Confirme",
              "Accepte",
              "Perdu",
              "Archive"
            ],
            "x-ms-visibility": ""
          },
          "dateLivraisonPrevue": {
            "title": "documentsVenteDevis.dateLivraisonPrevue",
            "type": "string",
            "description": "Date de livraison prévue du devis",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "reference": {
            "title": "documentsVenteDevis.reference",
            "type": "string",
            "description": "Référence du devis",
            "x-ms-visibility": ""
          },
          "tauxEscompte": {
            "title": "documentsVenteDevis.tauxEscompte",
            "type": "number",
            "description": "Taux d'escompte du devis",
            "format": "double",
            "x-ms-visibility": ""
          },
          "fraisExpedition": {
            "title": "documentsVenteDevis.fraisExpedition",
            "type": "number",
            "description": "Frais de port HT du devis",
            "format": "double",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "documentsVenteDevis.dateModification",
            "type": "string",
            "description": "Date de modification du devis",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "documentsVenteDevis.dateCreation",
            "type": "string",
            "description": "Date de création du devis",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "netAPayer": {
            "title": "documentsVenteDevis.netAPayer",
            "type": "number",
            "description": "Montant net à payer du devis",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalHT": {
            "title": "documentsVenteDevis.totalHT",
            "type": "number",
            "description": "Total HT du devis",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalHTNet": {
            "title": "documentsVenteDevis.totalHTNet",
            "type": "number",
            "description": "Total HT net du devis",
            "format": "double",
            "x-ms-visibility": ""
          },
          "totalTTC": {
            "title": "documentsVenteDevis.totalTTC",
            "type": "number",
            "description": "Total TTC du devis",
            "format": "double",
            "x-ms-visibility": ""
          },
          "imprime": {
            "title": "documentsVenteDevis.imprime",
            "type": "boolean",
            "description": "Document imprimé",
            "x-ms-visibility": ""
          },
          "reliquat": {
            "title": "documentsVenteDevis.reliquat",
            "type": "boolean",
            "description": "Document en reliquat",
            "x-ms-visibility": ""
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot"
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "lieuLivraison": {
            "$ref": "#/components/schemas/Livraison"
          },
          "categorieTarifaire": {
            "$ref": "#/components/schemas/CategorieTarif"
          },
          "representant": {
            "$ref": "#/components/schemas/Collaborateur"
          },
          "compteGeneral": {
            "$ref": "#/components/schemas/Compte"
          },
          "periodicite": {
            "$ref": "#/components/schemas/Periodicite"
          },
          "motifDevis": {
            "$ref": "#/components/schemas/MotifDevis"
          },
          "acompte": {
            "$ref": "#/components/schemas/AcompteVente"
          }
        }
      },
      "Dossier": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContactDossier"
            }
          },
          "deviseEquivalence": {
            "$ref": "#/components/schemas/Devise"
          },
          "telecom": {
            "$ref": "#/components/schemas/DossierTelecom"
          },
          "deviseCompte": {
            "$ref": "#/components/schemas/Devise"
          },
          "adresse": {
            "$ref": "#/components/schemas/DossierAdresse"
          },
          "utilisationElementsEnSommeil": {
            "title": "dossier.utilisationElementsEnSommeil",
            "type": "boolean",
            "description": "Interdire l'utilisation des éléments mis en sommeil pour la\nsociété",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "siret": {
            "title": "dossier.siret",
            "type": "string",
            "description": "Siret de la société",
            "x-ms-visibility": ""
          },
          "protectionPiece": {
            "title": "dossier.protectionPiece",
            "type": "boolean",
            "description": "Protéger la zone numéro de pièce pour la société",
            "x-ms-visibility": ""
          },
          "profession": {
            "title": "dossier.profession",
            "type": "string",
            "description": "Activité de la société",
            "x-ms-visibility": ""
          },
          "numeroDossier": {
            "title": "dossier.numeroDossier",
            "type": "string",
            "description": "Numéro de dossier pour la société",
            "x-ms-visibility": ""
          },
          "longueurCompte": {
            "title": "dossier.longueurCompte",
            "type": "integer",
            "description": "Longueur des comptes généraux pour la société",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "longueurSection": {
            "title": "dossier.longueurSection",
            "type": "integer",
            "description": "Longueur des sections analytiques pour la société",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "identifiant": {
            "title": "dossier.identifiant",
            "type": "string",
            "description": "Identifiant TVA de la société",
            "x-ms-visibility": ""
          },
          "formatQuantite": {
            "title": "dossier.formatQuantite",
            "type": "string",
            "description": "Format quantité pour la société",
            "x-ms-visibility": ""
          },
          "expert": {
            "title": "dossier.expert",
            "type": "string",
            "description": "Expert de la société",
            "x-ms-visibility": ""
          },
          "emailExpert": {
            "title": "dossier.emailExpert",
            "type": "string",
            "description": "Email de l'expert de la société",
            "x-ms-visibility": ""
          },
          "emailClient": {
            "title": "dossier.emailClient",
            "type": "string",
            "description": "Email client de la société",
            "x-ms-visibility": ""
          },
          "commentaire": {
            "title": "dossier.commentaire",
            "type": "string",
            "description": "Commentaire de la société",
            "x-ms-visibility": ""
          },
          "periodeCloturee": {
            "title": "dossier.periodeCloturee",
            "type": "string",
            "description": "Période clôturée sur la société",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "periodeArchivee": {
            "title": "dossier.periodeArchivee",
            "type": "string",
            "description": "Période archivée sur la société",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "ape": {
            "title": "dossier.ape",
            "type": "string",
            "description": "Code NAF de la société",
            "x-ms-visibility": ""
          },
          "raisonSociale": {
            "title": "dossier.raisonSociale",
            "type": "string",
            "description": "Raison sociale de la société",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "dossier.id",
            "type": "string",
            "description": "Identifiant de la société",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "depotPrincipal": {
            "$ref": "#/components/schemas/Depot"
          },
          "exercices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Exercice"
            }
          }
        }
      },
      "DossierTelecom": {
        "type": "object",
        "properties": {
          "site": {
            "title": "dossierTelecom.site",
            "type": "string",
            "description": "Site web de la société",
            "x-ms-visibility": ""
          },
          "eMail": {
            "title": "dossierTelecom.eMail",
            "type": "string",
            "description": "Email de la société",
            "x-ms-visibility": ""
          },
          "telecopie": {
            "title": "dossierTelecom.telecopie",
            "type": "string",
            "description": "Télécopie de la société",
            "x-ms-visibility": ""
          },
          "telephone": {
            "title": "dossierTelecom.telephone",
            "type": "string",
            "description": "Téléphone de la société",
            "x-ms-visibility": ""
          }
        }
      },
      "DossierAdresse": {
        "type": "object",
        "properties": {
          "pays": {
            "title": "dossierAdresse.pays",
            "type": "string",
            "description": "Pays de la société",
            "x-ms-visibility": ""
          },
          "codeRegion": {
            "title": "dossierAdresse.codeRegion",
            "type": "string",
            "description": "Code région de la société",
            "x-ms-visibility": ""
          },
          "ville": {
            "title": "dossierAdresse.ville",
            "type": "string",
            "description": "Ville de la société",
            "x-ms-visibility": ""
          },
          "codePostal": {
            "title": "dossierAdresse.codePostal",
            "type": "string",
            "description": "Code postal de la société",
            "x-ms-visibility": ""
          },
          "complement": {
            "title": "dossierAdresse.complement",
            "type": "string",
            "description": "Complément d'adresse de la société",
            "x-ms-visibility": ""
          },
          "adresse": {
            "title": "dossierAdresse.adresse",
            "type": "string",
            "description": "Adresse de la société",
            "x-ms-visibility": ""
          }
        }
      },
      "ContactDossier": {
        "type": "object",
        "properties": {
          "adresse": {
            "$ref": "#/components/schemas/ContactDossierAdresse"
          },
          "telecom": {
            "$ref": "#/components/schemas/ContactDossierTelecom"
          },
          "civilite": {
            "title": "contactDossier.civilite",
            "type": "string",
            "description": "Civilité du contact de la société",
            "enum": [
              "Monsieur",
              "Madame",
              "Mademoiselle"
            ],
            "x-ms-visibility": ""
          },
          "fonction": {
            "title": "contactDossier.fonction",
            "type": "string",
            "description": "Fonction du contact de la société",
            "x-ms-visibility": ""
          },
          "prenom": {
            "title": "contactDossier.prenom",
            "type": "string",
            "description": "Prénom du contact de la société",
            "x-ms-visibility": ""
          },
          "nom": {
            "title": "contactDossier.nom",
            "type": "string",
            "description": "Nom du contact de la société",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "contactDossier.dateModification",
            "type": "string",
            "description": "Date de modification du contact de la société",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "contactDossier.dateCreation",
            "type": "string",
            "description": "Date de création du contact de la société",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "contactDossier.id",
            "type": "string",
            "description": "Identifiant du contact de la société",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ContactDossierAdresse": {
        "type": "object",
        "properties": {
          "pays": {
            "title": "contactDossierAdresse.pays",
            "type": "string",
            "description": "Pays du contact de la société",
            "x-ms-visibility": ""
          },
          "codeRegion": {
            "title": "contactDossierAdresse.codeRegion",
            "type": "string",
            "description": "Code région du contact de la société",
            "x-ms-visibility": ""
          },
          "ville": {
            "title": "contactDossierAdresse.ville",
            "type": "string",
            "description": "Ville du contact de la société",
            "x-ms-visibility": ""
          },
          "codePostal": {
            "title": "contactDossierAdresse.codePostal",
            "type": "string",
            "description": "Code postal du contact de la société",
            "x-ms-visibility": ""
          },
          "complement": {
            "title": "contactDossierAdresse.complement",
            "type": "string",
            "description": "Complément d'adresse du contact de la société",
            "x-ms-visibility": ""
          },
          "adresse": {
            "title": "contactDossierAdresse.adresse",
            "type": "string",
            "description": "Adresse du contact de la société",
            "x-ms-visibility": ""
          }
        }
      },
      "ContactDossierTelecom": {
        "type": "object",
        "properties": {
          "portable": {
            "title": "contactDossierTelecom.portable",
            "type": "string",
            "description": "Portable du contact de la société",
            "x-ms-visibility": ""
          },
          "eMail": {
            "title": "contactDossierTelecom.eMail",
            "type": "string",
            "description": "Email du contact de la société",
            "x-ms-visibility": ""
          },
          "telecopie": {
            "title": "contactDossierTelecom.telecopie",
            "type": "string",
            "description": "Télécopie du contact de la société",
            "x-ms-visibility": ""
          },
          "telephone": {
            "title": "contactDossierTelecom.telephone",
            "type": "string",
            "description": "Téléphone du contact de la société",
            "x-ms-visibility": ""
          }
        }
      },
      "ListEcriture": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ecriture"
            }
          }
        }
      },
      "ListFournisseur": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fournisseur"
            }
          }
        }
      },
      "Fournisseur": {
        "type": "object",
        "properties": {
          "acheteur": {
            "$ref": "#/components/schemas/Collaborateur"
          },
          "derniersReglements": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ExtraitEcriture"
            }
          },
          "derniersDocuments": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ExtraitDocument"
            }
          },
          "encoursMaximum": {
            "title": "fournisseur.encoursMaximum",
            "type": "number",
            "description": "Encours maximum du fournisseur",
            "format": "double",
            "x-ms-visibility": ""
          },
          "tiersPayeur": {
            "$ref": "#/components/schemas/TiersPartenaire"
          },
          "note": {
            "title": "fournisseur.note",
            "type": "string",
            "description": "Bloc-notes du fournisseur",
            "x-ms-visibility": ""
          },
          "linkedIn": {
            "title": "fournisseur.linkedIn",
            "type": "string",
            "description": "Compte LinkedIn du fournisseur",
            "x-ms-visibility": ""
          },
          "facebook": {
            "title": "fournisseur.facebook",
            "type": "string",
            "description": "Compte Facebook du fournisseur",
            "x-ms-visibility": ""
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "contacts": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContactTiers"
            }
          },
          "comptes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Compte"
            }
          },
          "comptePrincipal": {
            "$ref": "#/components/schemas/Compte"
          },
          "adresse": {
            "$ref": "#/components/schemas/TiersAdresse"
          },
          "telecom": {
            "$ref": "#/components/schemas/TiersTelecom"
          },
          "notRappel": {
            "title": "fournisseur.notRappel",
            "type": "boolean",
            "description": "Exclure des rappels/relevés le fournisseur",
            "x-ms-visibility": ""
          },
          "sommeil": {
            "title": "fournisseur.sommeil",
            "type": "boolean",
            "description": "Mise en sommeil du fournisseur",
            "x-ms-visibility": ""
          },
          "validEch": {
            "title": "fournisseur.validEch",
            "type": "boolean",
            "description": "Automatiser les écritures multi-échéances pour le fournisseur",
            "x-ms-visibility": ""
          },
          "lettrage": {
            "title": "fournisseur.lettrage",
            "type": "boolean",
            "description": "Autoriser le lettrage automatique pour le fournisseur",
            "x-ms-visibility": ""
          },
          "sautPage": {
            "title": "fournisseur.sautPage",
            "type": "boolean",
            "description": "Réaliser un saut de page pour le fournisseur",
            "x-ms-visibility": ""
          },
          "sautLigne": {
            "title": "fournisseur.sautLigne",
            "type": "integer",
            "description": "Nombre de ligne(s) pour le fournisseur",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "ediCode": {
            "title": "fournisseur.ediCode",
            "type": "string",
            "description": "Code edi du fournisseur",
            "x-ms-visibility": ""
          },
          "ediCodeType": {
            "title": "fournisseur.ediCodeType",
            "type": "string",
            "description": "Type de code edi du fournisseur",
            "enum": [
              "GLN",
              "DUNS",
              "EDIFACT"
            ],
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "fournisseur.langue",
            "type": "string",
            "description": "Langue du fournisseur",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "commentaire": {
            "title": "fournisseur.commentaire",
            "type": "string",
            "description": "Commentaire du fournisseur",
            "x-ms-visibility": ""
          },
          "statistiques": {
            "type": "array",
            "items": {
              "title": "fournisseur.statistiques",
              "type": "string",
              "description": "Champs statistiques du fournisseur",
              "x-ms-visibility": ""
            }
          },
          "siret": {
            "title": "fournisseur.siret",
            "type": "string",
            "description": "Siret du fournisseur",
            "x-ms-visibility": ""
          },
          "identifiant": {
            "title": "fournisseur.identifiant",
            "type": "string",
            "description": "Identifiant TVA du fournisseur",
            "x-ms-visibility": ""
          },
          "ape": {
            "title": "fournisseur.ape",
            "type": "string",
            "description": "Code NAF du fournisseur",
            "x-ms-visibility": ""
          },
          "raccourci": {
            "title": "fournisseur.raccourci",
            "type": "string",
            "description": "Raccourci du fournisseur",
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "fournisseur.contact",
            "type": "string",
            "description": "Contact du fournisseur",
            "x-ms-visibility": ""
          },
          "classement": {
            "title": "fournisseur.classement",
            "type": "string",
            "description": "Classement du fournisseur",
            "x-ms-visibility": ""
          },
          "qualite": {
            "title": "fournisseur.qualite",
            "type": "string",
            "description": "Qualité du fournisseur",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "fournisseur.intitule",
            "type": "string",
            "description": "Intitulé du fournisseur",
            "x-ms-visibility": ""
          },
          "type": {
            "title": "fournisseur.type",
            "type": "string",
            "description": "Type de fournisseur",
            "readOnly": true,
            "enum": [
              "Client",
              "Fournisseur",
              "Salarie",
              "Autre"
            ],
            "x-ms-visibility": ""
          },
          "numero": {
            "title": "fournisseur.numero",
            "type": "string",
            "description": "Numéro du fournisseur",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "fournisseur.dateModification",
            "type": "string",
            "description": "Date de modification du fournisseur",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "fournisseur.dateCreation",
            "type": "string",
            "description": "Date de création du fournisseur",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "fournisseur.id",
            "type": "string",
            "description": "Identifiant du fournisseur",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "Me": {
        "type": "object",
        "properties": {
          "id": {
            "title": "me.id",
            "type": "string",
            "description": "Identifiant d'utilisateur (UserID AAD)",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user": {
            "title": "me.user",
            "type": "string",
            "description": "Nom d'utilisateur"
          },
          "name": {
            "title": "me.name",
            "type": "string",
            "description": "Nom complet de l'utilisateur"
          },
          "firstName": {
            "title": "me.firstName",
            "type": "string",
            "description": "Prénom"
          },
          "lastName": {
            "title": "me.lastName",
            "type": "string",
            "description": "Nom"
          }
        },
        "description": "Utilisateur courant"
      },
      "ListLivraison": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Livraison"
            }
          }
        }
      },
      "Livraison": {
        "type": "object",
        "properties": {
          "id": {
            "title": "livraison.id",
            "type": "string",
            "description": "Identifiant de la livraison",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "livraison.intitule",
            "type": "string",
            "description": "Intitulé de la livraison",
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "livraison.contact",
            "type": "string",
            "description": "Contact de la livraison",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "livraison.dateModification",
            "type": "string",
            "description": "Date de modification de la livraison",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "livraison.dateCreation",
            "type": "string",
            "description": "Date de création de la livraison",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "telecom": {
            "$ref": "#/components/schemas/LivraisonTelecom"
          },
          "adresse": {
            "$ref": "#/components/schemas/LivraisonAdresse"
          }
        }
      },
      "LivraisonAdresse": {
        "type": "object",
        "properties": {
          "pays": {
            "title": "livraisonAdresse.pays",
            "type": "string",
            "description": "Pays de la livraison",
            "x-ms-visibility": ""
          },
          "codeRegion": {
            "title": "livraisonAdresse.codeRegion",
            "type": "string",
            "description": "Code région de la livraison",
            "x-ms-visibility": ""
          },
          "ville": {
            "title": "livraisonAdresse.ville",
            "type": "string",
            "description": "Ville de la livraison",
            "x-ms-visibility": ""
          },
          "codePostal": {
            "title": "livraisonAdresse.codePostal",
            "type": "string",
            "description": "Code postal de la livraison",
            "x-ms-visibility": ""
          },
          "complement": {
            "title": "livraisonAdresse.complement",
            "type": "string",
            "description": "Complément d'adresse de la livraison",
            "x-ms-visibility": ""
          },
          "adresse": {
            "title": "livraisonAdresse.adresse",
            "type": "string",
            "description": "Adresse de la livraison",
            "x-ms-visibility": ""
          }
        }
      },
      "LivraisonTelecom": {
        "type": "object",
        "properties": {
          "eMail": {
            "title": "livraisonTelecom.eMail",
            "type": "string",
            "description": "Adresse eMail de la livraison",
            "x-ms-visibility": ""
          },
          "telecopie": {
            "title": "livraisonTelecom.telecopie",
            "type": "string",
            "description": "Télécopie de la livraison",
            "x-ms-visibility": ""
          },
          "telephone": {
            "title": "livraisonTelecom.telephone",
            "type": "string",
            "description": "Téléphone de la livraison",
            "x-ms-visibility": ""
          }
        }
      },
      "ListMotifDevis": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MotifDevis"
            }
          }
        }
      },
      "MotifDevis": {
        "type": "object",
        "properties": {
          "intitule": {
            "title": "motifdevis.intitule",
            "type": "string",
            "description": "Intitule du motif de refus du devis",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "motifdevis.id",
            "type": "string",
            "description": "Identifiant du motif de refus du devis",
            "x-ms-visibility": ""
          }
        }
      },
      "ListDepot": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Depot"
            }
          }
        }
      },
      "Depot": {
        "type": "object",
        "properties": {
          "id": {
            "title": "depot.id",
            "type": "string",
            "description": "Identifiant du dépôt",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "depot.intitule",
            "type": "string",
            "description": "Intitulé du dépôt",
            "x-ms-visibility": ""
          },
          "code": {
            "title": "depot.code",
            "type": "string",
            "description": "Code du dépôt",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "depot.dateModification",
            "type": "string",
            "description": "Date de modification du dépôt",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "depot.dateCreation",
            "type": "string",
            "description": "Date de création du dépôt",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "responsable": {
            "title": "depot.responsable",
            "type": "string",
            "description": "Responsable du dépôt",
            "x-ms-visibility": ""
          },
          "exclureReappro": {
            "title": "depot.exclureReappro",
            "type": "boolean",
            "description": "Exclure le dépôt du réapprovisionnement",
            "x-ms-visibility": ""
          },
          "telecom": {
            "$ref": "#/components/schemas/DepotTelecom"
          },
          "adresse": {
            "$ref": "#/components/schemas/DepotAdresse"
          },
          "contacts": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContactDepot"
            }
          }
        }
      },
      "DepotAdresse": {
        "type": "object",
        "properties": {
          "pays": {
            "title": "depotAdresse.pays",
            "type": "string",
            "description": "Pays du dépôt",
            "x-ms-visibility": ""
          },
          "codeRegion": {
            "title": "depotAdresse.codeRegion",
            "type": "string",
            "description": "Code région du dépôt",
            "x-ms-visibility": ""
          },
          "ville": {
            "title": "depotAdresse.ville",
            "type": "string",
            "description": "Ville du dépôt",
            "x-ms-visibility": ""
          },
          "codePostal": {
            "title": "depotAdresse.codePostal",
            "type": "string",
            "description": "Code postal du dépôt",
            "x-ms-visibility": ""
          },
          "complement": {
            "title": "depotAdresse.complement",
            "type": "string",
            "description": "Complément d'adresse du dépôt",
            "x-ms-visibility": ""
          },
          "adresse": {
            "title": "depotAdresse.adresse",
            "type": "string",
            "description": "Adresse du dépôt",
            "x-ms-visibility": ""
          }
        }
      },
      "DepotTelecom": {
        "type": "object",
        "properties": {
          "eMail": {
            "title": "depotTelecom.eMail",
            "type": "string",
            "description": "Adresse eMail du dépôt",
            "x-ms-visibility": ""
          },
          "telecopie": {
            "title": "depotTelecom.telecopie",
            "type": "string",
            "description": "Télécopie du dépôt",
            "x-ms-visibility": ""
          },
          "telephone": {
            "title": "depotTelecom.telephone",
            "type": "string",
            "description": "Téléphone du dépôt",
            "x-ms-visibility": ""
          }
        }
      },
      "ListContactDepot": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactDepot"
            }
          }
        }
      },
      "ContactDepot": {
        "type": "object",
        "properties": {
          "telecom": {
            "$ref": "#/components/schemas/ContactDepotTelecom"
          },
          "civilite": {
            "title": "contactDepot.civilite",
            "type": "string",
            "description": "Civilité du contact du dépôt",
            "enum": [
              "Monsieur",
              "Madame",
              "Mademoiselle"
            ],
            "x-ms-visibility": ""
          },
          "fonction": {
            "title": "contactDepot.fonction",
            "type": "string",
            "description": "Fonction du contact du dépôt",
            "x-ms-visibility": ""
          },
          "prenom": {
            "title": "contactDepot.prenom",
            "type": "string",
            "description": "Prénom du contact du dépôt",
            "x-ms-visibility": ""
          },
          "nom": {
            "title": "contactDepot.nom",
            "type": "string",
            "description": "Nom du contact du dépôt",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "contactDepot.dateModification",
            "type": "string",
            "description": "Date de modification du contact du dépôt",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "contactDepot.dateCreation",
            "type": "string",
            "description": "Date de création du contact du dépôt",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "contactDepot.id",
            "type": "string",
            "description": "Identifiant du contact du dépôt",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "skype": {
            "title": "contactDepot.skype",
            "type": "string",
            "description": "Skype du contact du dépôt",
            "x-ms-visibility": ""
          },
          "facebook": {
            "title": "contactDepot.facebook",
            "type": "string",
            "description": "Facebook du contact du dépôt",
            "x-ms-visibility": ""
          },
          "linkedin": {
            "title": "contactDepot.linkedin",
            "type": "string",
            "description": "Linkedin du contact du dépôt",
            "x-ms-visibility": ""
          }
        }
      },
      "ContactDepotTelecom": {
        "type": "object",
        "properties": {
          "portable": {
            "title": "contactDepotTelecom.portable",
            "type": "string",
            "description": "Portable du contact du dépôt",
            "x-ms-visibility": ""
          },
          "eMail": {
            "title": "contactDepotTelecom.eMail",
            "type": "string",
            "description": "Adresse eMail du contact du dépôt",
            "x-ms-visibility": ""
          },
          "telecopie": {
            "title": "contactDepotTelecom.telecopie",
            "type": "string",
            "description": "Télécopie du contact du dépôt",
            "x-ms-visibility": ""
          },
          "telephone": {
            "title": "contactDepotTelecom.telephone",
            "type": "string",
            "description": "Téléphone du contact du dépôt",
            "x-ms-visibility": ""
          }
        }
      },
      "ListPeriodicite": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Periodicite"
            }
          }
        }
      },
      "Periodicite": {
        "type": "object",
        "properties": {
          "intitule": {
            "title": "periodicite.intitule",
            "type": "string",
            "description": "Intitule de la periodicite",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "periodicite.id",
            "type": "string",
            "description": "Identifiant de la periodicite",
            "x-ms-visibility": ""
          }
        }
      },
      "ListServiceContact": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceContact"
            }
          }
        }
      },
      "ListTiers": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tiers"
            }
          }
        }
      },
      "ListTiersAutre": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TiersAutre"
            }
          }
        }
      },
      "TiersAutre": {
        "type": "object",
        "properties": {
          "note": {
            "title": "tiersAutre.note",
            "type": "string",
            "description": "Bloc-notes du tiers autre",
            "x-ms-visibility": ""
          },
          "linkedIn": {
            "title": "tiersAutre.linkedIn",
            "type": "string",
            "description": "Compte LinkedIn du tiers autre",
            "x-ms-visibility": ""
          },
          "facebook": {
            "title": "tiersAutre.facebook",
            "type": "string",
            "description": "Compte Facebook du tiers autre",
            "x-ms-visibility": ""
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "contacts": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContactTiers"
            }
          },
          "comptes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Compte"
            }
          },
          "comptePrincipal": {
            "$ref": "#/components/schemas/Compte"
          },
          "adresse": {
            "$ref": "#/components/schemas/TiersAdresse"
          },
          "telecom": {
            "$ref": "#/components/schemas/TiersTelecom"
          },
          "notRappel": {
            "title": "tiersAutre.notRappel",
            "type": "boolean",
            "description": "Exclure des rappels/relevés le tiers autre",
            "x-ms-visibility": ""
          },
          "sommeil": {
            "title": "tiersAutre.sommeil",
            "type": "boolean",
            "description": "Mise en sommeil du tiers autre",
            "x-ms-visibility": ""
          },
          "validEch": {
            "title": "tiersAutre.validEch",
            "type": "boolean",
            "description": "Automatiser les écritures multi-échéances pour le tiers autre",
            "x-ms-visibility": ""
          },
          "lettrage": {
            "title": "tiersAutre.lettrage",
            "type": "boolean",
            "description": "Autoriser le lettrage automatique pour le tiers autre",
            "x-ms-visibility": ""
          },
          "sautPage": {
            "title": "tiersAutre.sautPage",
            "type": "boolean",
            "description": "Réaliser un saut de page pour le tiers autre",
            "x-ms-visibility": ""
          },
          "sautLigne": {
            "title": "tiersAutre.sautLigne",
            "type": "integer",
            "description": "Nombre de ligne(s) pour le tiers autre",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "ediCode": {
            "title": "tiersAutre.ediCode",
            "type": "string",
            "description": "Code edi du tiers autre",
            "x-ms-visibility": ""
          },
          "ediCodeType": {
            "title": "tiersAutre.ediCodeType",
            "type": "string",
            "description": "Type de code edi pour le tiers autre",
            "enum": [
              "GLN",
              "DUNS",
              "EDIFACT"
            ],
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "tiersAutre.langue",
            "type": "string",
            "description": "Langue du tiers autre",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "commentaire": {
            "title": "tiersAutre.commentaire",
            "type": "string",
            "description": "Commentaire du tiers autre",
            "x-ms-visibility": ""
          },
          "statistiques": {
            "type": "array",
            "items": {
              "title": "tiersAutre.statistiques",
              "type": "string",
              "description": "Champs statistiques du tiers autre",
              "x-ms-visibility": ""
            }
          },
          "siret": {
            "title": "tiersAutre.siret",
            "type": "string",
            "description": "Siret du tiers autre",
            "x-ms-visibility": ""
          },
          "identifiant": {
            "title": "tiersAutre.identifiant",
            "type": "string",
            "description": "Identifiant TVA du tiers autre",
            "x-ms-visibility": ""
          },
          "ape": {
            "title": "tiersAutre.ape",
            "type": "string",
            "description": "Code NAF du tiers autre",
            "x-ms-visibility": ""
          },
          "raccourci": {
            "title": "tiersAutre.raccourci",
            "type": "string",
            "description": "Raccourci du tiers autre",
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "tiersAutre.contact",
            "type": "string",
            "description": "Contact du tiers autre",
            "x-ms-visibility": ""
          },
          "classement": {
            "title": "tiersAutre.classement",
            "type": "string",
            "description": "Classement du tiers autre",
            "x-ms-visibility": ""
          },
          "qualite": {
            "title": "tiersAutre.qualite",
            "type": "string",
            "description": "Qualité du tiers autre",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "tiersAutre.intitule",
            "type": "string",
            "description": "Intitulé du tiers autre",
            "x-ms-visibility": ""
          },
          "type": {
            "title": "tiersAutre.type",
            "type": "string",
            "description": "Type du tiers autre",
            "readOnly": true,
            "enum": [
              "Client",
              "Fournisseur",
              "Salarie",
              "Autre"
            ],
            "x-ms-visibility": ""
          },
          "numero": {
            "title": "tiersAutre.numero",
            "type": "string",
            "description": "Numéro du tiers autre",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "tiersAutre.dateModification",
            "type": "string",
            "description": "Date de modification du tiers autre",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "tiersAutre.dateCreation",
            "type": "string",
            "description": "Date de création du tiers autre",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "tiersAutre.id",
            "type": "string",
            "description": "Identifiant du tiers autre",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListTiersSalarie": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TiersSalarie"
            }
          }
        }
      },
      "TiersSalarie": {
        "type": "object",
        "properties": {
          "note": {
            "title": "tiersSalarie.note",
            "type": "string",
            "description": "Bloc-notes du tiers salarié",
            "x-ms-visibility": ""
          },
          "linkedIn": {
            "title": "tiersSalarie.linkedIn",
            "type": "string",
            "description": "Compte LinkedIn du tiers salarié",
            "x-ms-visibility": ""
          },
          "facebook": {
            "title": "tiersSalarie.facebook",
            "type": "string",
            "description": "Compte Facebook du tiers salarié",
            "x-ms-visibility": ""
          },
          "devise": {
            "$ref": "#/components/schemas/Devise"
          },
          "contacts": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContactTiers"
            }
          },
          "comptes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Compte"
            }
          },
          "comptePrincipal": {
            "$ref": "#/components/schemas/Compte"
          },
          "adresse": {
            "$ref": "#/components/schemas/TiersAdresse"
          },
          "telecom": {
            "$ref": "#/components/schemas/TiersTelecom"
          },
          "notRappel": {
            "title": "tiersSalarie.notRappel",
            "type": "boolean",
            "description": "Exclure des rappels/relevé le tiers salarié",
            "x-ms-visibility": ""
          },
          "sommeil": {
            "title": "tiersSalarie.sommeil",
            "type": "boolean",
            "description": "Mise en sommeil du tiers salarié",
            "x-ms-visibility": ""
          },
          "validEch": {
            "title": "tiersSalarie.validEch",
            "type": "boolean",
            "description": "Automatiser les écritures multi-échéances pour le tiers salarié",
            "x-ms-visibility": ""
          },
          "lettrage": {
            "title": "tiersSalarie.lettrage",
            "type": "boolean",
            "description": "Autoriser le lettrage automatique pour le tiers salarié",
            "x-ms-visibility": ""
          },
          "sautPage": {
            "title": "tiersSalarie.sautPage",
            "type": "boolean",
            "description": "Réaliser un saut de page pour le tiers salarié",
            "x-ms-visibility": ""
          },
          "sautLigne": {
            "title": "tiersSalarie.sautLigne",
            "type": "integer",
            "description": "Nombre de ligne(s) pour le tiers salarié",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "ediCode": {
            "title": "tiersSalarie.ediCode",
            "type": "string",
            "description": "Code edi du tiers salarié",
            "x-ms-visibility": ""
          },
          "ediCodeType": {
            "title": "tiersSalarie.ediCodeType",
            "type": "string",
            "description": "Type de code edi pour le tiers salarié",
            "enum": [
              "GLN",
              "DUNS",
              "EDIFACT"
            ],
            "x-ms-visibility": ""
          },
          "langue": {
            "title": "tiersSalarie.langue",
            "type": "string",
            "description": "Langue du tiers salarié",
            "enum": [
              "Aucune",
              "Langue1",
              "Langue2"
            ],
            "x-ms-visibility": ""
          },
          "commentaire": {
            "title": "tiersSalarie.commentaire",
            "type": "string",
            "description": "Commentaire du tiers salarié",
            "x-ms-visibility": ""
          },
          "statistiques": {
            "type": "array",
            "items": {
              "title": "tiersSalarie.statistiques",
              "type": "string",
              "description": "Champs statistiques du tiers salarié",
              "x-ms-visibility": ""
            }
          },
          "siret": {
            "title": "tiersSalarie.siret",
            "type": "string",
            "description": "Siret du tiers salarié",
            "x-ms-visibility": ""
          },
          "identifiant": {
            "title": "tiersSalarie.identifiant",
            "type": "string",
            "description": "Identifiant TVA du tiers salarié",
            "x-ms-visibility": ""
          },
          "ape": {
            "title": "tiersSalarie.ape",
            "type": "string",
            "description": "Code NAF du tiers salarié",
            "x-ms-visibility": ""
          },
          "raccourci": {
            "title": "tiersSalarie.raccourci",
            "type": "string",
            "description": "Raccourci du tiers salarié",
            "x-ms-visibility": ""
          },
          "contact": {
            "title": "tiersSalarie.contact",
            "type": "string",
            "description": "Contact du tiers salarié",
            "x-ms-visibility": ""
          },
          "classement": {
            "title": "tiersSalarie.classement",
            "type": "string",
            "description": "Classement du tiers salarié",
            "x-ms-visibility": ""
          },
          "qualite": {
            "title": "tiersSalarie.qualite",
            "type": "string",
            "description": "Qualité du tiers salarié",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "tiersSalarie.intitule",
            "type": "string",
            "description": "Intitulé du tiers salarié",
            "x-ms-visibility": ""
          },
          "type": {
            "title": "tiersSalarie.type",
            "type": "string",
            "description": "Type du tiers salarié",
            "readOnly": true,
            "enum": [
              "Client",
              "Fournisseur",
              "Salarie",
              "Autre"
            ],
            "x-ms-visibility": ""
          },
          "numero": {
            "title": "tiersSalarie.numero",
            "type": "string",
            "description": "Numéro du tiers salarié",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "tiersSalarie.dateModification",
            "type": "string",
            "description": "Date de modification du tiers salarié",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "tiersSalarie.dateCreation",
            "type": "string",
            "description": "Date de création du tiers salarié",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "tiersSalarie.id",
            "type": "string",
            "description": "Identifiant du tiers salarié",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListUniteAchatVente": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UniteAchatVente"
            }
          }
        }
      },
      "UniteAchatVente": {
        "type": "object",
        "properties": {
          "intitule": {
            "title": "uniteAchatVente.intitule",
            "type": "string",
            "description": "Intitulé de l'unité d'achat/vente",
            "x-ms-visibility": ""
          },
          "gestionPlanning": {
            "title": "uniteAchatVente.correspondancePlanning",
            "type": "boolean",
            "description": "Unité de type planning",
            "x-ms-visibility": ""
          },
          "uniteTempsType": {
            "title": "uniteAchatVente.uniteTempsType",
            "type": "string",
            "description": "Type d'unité de temps",
            "readOnly": true,
            "enum": [
              "Aucune",
              "Minute",
              "Heure",
              "Jour",
              "Mois",
              "Trimestre",
              "Semestre",
              "Annee"
            ],
            "x-ms-visibility": ""
          },
          "uniteTempsNombre": {
            "title": "uniteAchatVente.uniteTempsNombre",
            "type": "integer",
            "description": "Nombre d'unité de temps",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "uniteAchatVente.id",
            "type": "string",
            "description": "Identifiant de l'unité d'achat/vente",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListCatalogue": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Catalogue"
            }
          }
        }
      },
      "Catalogue": {
        "type": "object",
        "properties": {
          "parent": {
            "title": "catalogue.parent",
            "type": "object",
            "description": "Catalogue parent du catalogue",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "catalogue.intitule",
            "type": "string",
            "description": "Intitulé du catalogue",
            "x-ms-visibility": ""
          },
          "code": {
            "title": "catalogue.code",
            "type": "string",
            "description": "Code du catalogue",
            "x-ms-visibility": ""
          },
          "gestionStock": {
            "title": "catalogue.gestionStock",
            "type": "boolean",
            "description": "Gérer le stock des articles pour cette catégorie",
            "x-ms-visibility": ""
          },
          "sousCatalogues": {
            "title": "catalogue.sousCatalogues",
            "type": "array",
            "description": "Sous catalogues du catalogue",
            "items": {
              "$ref": "#/components/schemas/Catalogue"
            },
            "x-ms-visibility": ""
          },
          "articles": {
            "title": "catalogue.articles",
            "type": "array",
            "description": "Articles du catalogue",
            "items": {
              "$ref": "#/components/schemas/Article"
            },
            "x-ms-visibility": ""
          },
          "id": {
            "title": "catalogue.id",
            "type": "string",
            "description": "Identifiant du catalogue",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListStockArticle": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockArticle"
            }
          }
        }
      },
      "StockArticle": {
        "type": "object",
        "properties": {
          "depot": {
            "$ref": "#/components/schemas/Depot"
          },
          "qteMini": {
            "title": "stockArticle.qteMini",
            "type": "number",
            "description": "Stock minimum",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "qteMaxi": {
            "title": "stockArticle.qteMaxi",
            "type": "number",
            "description": "Stock maximum",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "qteReelle": {
            "title": "stockArticle.qteReelle",
            "type": "number",
            "description": "Stock réel",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "qteDisponible": {
            "title": "stockArticle.qteDisponible",
            "type": "number",
            "description": "Stock disponible",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "qteCommandee": {
            "title": "stockArticle.qteCommandee",
            "type": "number",
            "description": "Stock commandé",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "qteReservee": {
            "title": "stockArticle.qteReservee",
            "type": "number",
            "description": "Stock réservé",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "qteATerme": {
            "title": "stockArticle.qteATerme",
            "type": "number",
            "description": "Stock à terme",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "valeur": {
            "title": "stockArticle.valeur",
            "type": "number",
            "description": "Valeur du stock à la date du jour",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "cmup": {
            "title": "stockArticle.cmup",
            "type": "number",
            "description": "CMUP",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "stockArticle.id",
            "type": "string",
            "description": "Identifiant du dépôt article",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "stockArticle.dateModification",
            "type": "string",
            "description": "Date de modification du dépôt article",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "stockArticle.dateCreation",
            "type": "string",
            "description": "Date de création du dépôt article",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListExercice": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Exercice"
            }
          }
        }
      },
      "Exercice": {
        "type": "object",
        "properties": {
          "exercice": {
            "title": "exercice.exercice",
            "type": "string",
            "description": "Nom de l'exercice",
            "x-ms-visibility": ""
          },
          "dateDebut": {
            "title": "exercice.dateDebut",
            "type": "string",
            "description": "Date de début de l'exercice",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "dateFin": {
            "title": "exercice.dateFin",
            "type": "string",
            "description": "Date de fin de l'exercice",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "cloture": {
            "title": "exercice.cloture",
            "type": "boolean",
            "description": "Exercice clôturé",
            "x-ms-visibility": ""
          },
          "courant": {
            "title": "exercice.courant",
            "type": "boolean",
            "description": "Exercice pour lequel la date du jour appartient à l'exercice",
            "x-ms-visibility": ""
          }
        }
      },
      "ListJournal": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Journal"
            }
          }
        }
      },
      "Journal": {
        "type": "object",
        "properties": {
          "sommeil": {
            "title": "journal.sommeil",
            "type": "boolean",
            "description": "Mise en sommeil du journal",
            "x-ms-visibility": ""
          },
          "saisieAnalytique": {
            "title": "journal.saisieAnalytique",
            "type": "boolean",
            "description": "Autoriser la saisie analytique",
            "x-ms-visibility": ""
          },
          "typeNumerotation": {
            "title": "journal.typeNumerotation",
            "type": "string",
            "description": "Type de numérotation du journal",
            "enum": [
              "Manuelle",
              "ContinueJournal",
              "ContinueFichier",
              "Mensuelle"
            ],
            "x-ms-visibility": ""
          },
          "type": {
            "title": "journal.type",
            "type": "string",
            "description": "Type du journal",
            "enum": [
              "Achat",
              "Vente",
              "Tresorerie",
              "General",
              "Situation"
            ],
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "journal.intitule",
            "type": "string",
            "description": "Intitulé du journal",
            "x-ms-visibility": ""
          },
          "code": {
            "title": "journal.code",
            "type": "string",
            "description": "Code du journal",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "journal.dateModification",
            "type": "string",
            "description": "Date de modification du journal",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "journal.dateCreation",
            "type": "string",
            "description": "Date de création du journal",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "journal.id",
            "type": "string",
            "description": "Identifiant du journal",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListModeReglement": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModeReglement"
            }
          }
        }
      },
      "ModeReglement": {
        "type": "object",
        "properties": {
          "journalClient": {
            "$ref": "#/components/schemas/Journal"
          },
          "journalFournisseur": {
            "$ref": "#/components/schemas/Journal"
          },
          "type": {
            "title": "modeReglement.type",
            "type": "string",
            "description": "Type du mode de règlement",
            "enum": [
              "Aucun",
              "BonAchat",
              "Carte",
              "Cheque",
              "Espece"
            ],
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "modeReglement.intitule",
            "type": "string",
            "description": "Intitulé du mode de règlement",
            "x-ms-visibility": ""
          },
          "code": {
            "title": "modeReglement.code",
            "type": "string",
            "description": "Code du mode de règlement",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "modeReglement.id",
            "type": "string",
            "description": "Identifiant du mode de règlement",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListPeriodeRappel": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PeriodeRappel"
            }
          }
        }
      },
      "PeriodeRappel": {
        "type": "object",
        "properties": {
          "nbJoursMini": {
            "title": "periodeRappel.nbJoursMini",
            "type": "integer",
            "description": "Nombre de jours minimum entre l'envoi de deux rappels",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "nbJoursRetardA": {
            "title": "periodeRappel.nbJoursRetardA",
            "type": "integer",
            "description": "Nombre de jours de retard à",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "nbJoursRetardDe": {
            "title": "periodeRappel.nbJoursRetardDe",
            "type": "integer",
            "description": "Nombre de jours de retard de",
            "format": "int32",
            "x-ms-visibility": ""
          },
          "intitule": {
            "title": "periodeRappel.intitule",
            "type": "string",
            "description": "Intitulé de la période de rappel",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "periodeRappel.id",
            "type": "string",
            "description": "Identifiant de la période de rappel",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListHistoriqueRappel": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoriqueRappel"
            }
          }
        }
      },
      "HistoriqueRappel": {
        "type": "object",
        "properties": {
          "tiers": {
            "$ref": "#/components/schemas/Tiers"
          },
          "modeReglement": {
            "$ref": "#/components/schemas/ModeReglement"
          },
          "periodeRappel": {
            "$ref": "#/components/schemas/PeriodeRappel"
          },
          "soldeRelance": {
            "title": "historiqueRappel.soldeRelance",
            "type": "number",
            "description": "Solde de relance",
            "format": "double",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "comptabilisation": {
            "title": "historiqueRappel.comptabilisation",
            "type": "boolean",
            "description": "Historique comptabilisé",
            "x-ms-visibility": ""
          },
          "echeance": {
            "title": "historiqueRappel.echeance",
            "type": "string",
            "description": "Date d'écheance",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "penalites": {
            "title": "historiqueRappel.penalites",
            "type": "number",
            "description": "Pénalités de retard",
            "format": "double",
            "x-ms-visibility": ""
          },
          "fraisImpayes": {
            "title": "historiqueRappel.fraisImpayes",
            "type": "number",
            "description": "Frais impayés",
            "format": "double",
            "x-ms-visibility": ""
          },
          "traitement": {
            "title": "historiqueRappel.traitement",
            "type": "string",
            "description": "Type de traitement",
            "enum": [
              "Imputation",
              "Decalage",
              "Rappel"
            ],
            "x-ms-visibility": ""
          },
          "date": {
            "title": "historiqueRappel.date",
            "type": "string",
            "description": "Date de l'historique de rappel",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "historiqueRappel.dateModification",
            "type": "string",
            "description": "Date de modification de l'historique de rappel",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "historiqueRappel.dateCreation",
            "type": "string",
            "description": "Date de création de l'historique de rappel",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "historiqueRappel.id",
            "type": "string",
            "description": "Identifiant de l'historique de rappel",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListGamme": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Gamme"
            }
          }
        }
      },
      "Gamme": {
        "type": "object",
        "properties": {
          "intitule": {
            "title": "gamme.intitule",
            "type": "string",
            "description": "Intitulé de la gamme",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "gamme.id",
            "type": "string",
            "description": "Identifiant de la gamme",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "ListEnumereGamme": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumereGamme"
            }
          }
        }
      },
      "EnumereGamme": {
        "type": "object",
        "properties": {
          "enumere": {
            "title": "enumereGamme.enumere",
            "type": "string",
            "description": "Enuméré de gamme",
            "x-ms-visibility": ""
          },
          "id": {
            "title": "enumereGamme.id",
            "type": "string",
            "description": "Identifiant de l'énuméré de gamme",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      },
      "propositionCommercialeLigne": {
        "type": "object",
        "properties": {
          "articleId": {
            "title": "propositionCommercialeLigne.articleId",
            "type": "string",
            "description": "Identifiant de l'article",
            "x-ms-visibility": ""
          },
          "description": {
            "title": "propositionCommercialeLigne.description",
            "type": "string",
            "description": "Description de la ligne",
            "x-ms-visibility": ""
          },
          "enumereGamme1Id": {
            "title": "propositionCommercialeLigne.enumereGamme1Id",
            "type": "string",
            "description": "Identifiant de l'énuméré de gamme 1",
            "x-ms-visibility": ""
          },
          "enumereGamme2Id": {
            "title": "propositionCommercialeLigne.enumereGamme2Id",
            "type": "string",
            "description": "Identifiant de l'énuméré de gamme 2",
            "x-ms-visibility": ""
          },
          "quantite": {
            "title": "propositionCommercialeLigne.quantite",
            "type": "number",
            "description": "Quantité de la ligne",
            "format": "double",
            "x-ms-visibility": ""
          },
          "prixHT": {
            "title": "propositionCommercialeLigne.prixHT",
            "type": "number",
            "description": "Prix HT",
            "format": "double",
            "x-ms-visibility": ""
          },
          "remise": {
            "title": "propositionCommercialeLigne.remise",
            "type": "number",
            "description": "Remise",
            "format": "double",
            "x-ms-visibility": ""
          }
        }
      },
      "ListAcompteVente": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string"
          },
          "@odata.count": {
            "type": "number"
          },
          "@odata.nextLink": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AcompteVente"
            }
          }
        }
      },
      "AcompteVente": {
        "type": "object",
        "properties": {
          "montantDevise": {
            "title": "acompteVente.montantDevise",
            "type": "number",
            "description": "Montant en devise",
            "format": "double",
            "x-ms-visibility": ""
          },
          "montant": {
            "title": "acompteVente.montant",
            "type": "number",
            "description": "Montant en monnaie de tenue de compte",
            "format": "double",
            "x-ms-visibility": ""
          },
          "libelle": {
            "title": "acompteVente.libelle",
            "type": "string",
            "description": "Libellé",
            "x-ms-visibility": ""
          },
          "date": {
            "title": "acompteVente.date",
            "type": "string",
            "description": "Date de l'acompte",
            "format": "date-time",
            "x-ms-visibility": ""
          },
          "dateModification": {
            "title": "acompteVente.dateModification",
            "type": "string",
            "description": "Date de modification de l'acompte",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "dateCreation": {
            "title": "acompteVente.dateCreation",
            "type": "string",
            "description": "Date de création de l'acompte",
            "format": "date-time",
            "readOnly": true,
            "x-ms-visibility": ""
          },
          "id": {
            "title": "acompteVente.id",
            "type": "string",
            "description": "Identifiant de l'acompte",
            "readOnly": true,
            "x-ms-visibility": ""
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2_auth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
            "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "Grants access to Sage 100c API",
              "Account.Read.All": "Grants read access to all account data",
              "Account.Write.All": "Grants write access to all account data",
              "Collaborator.Read.All": "Grants read access to all collaborator data",
              "Collaborator.Write.All": "Grants write access to all collaborator data",
              "Company.Read.All": "Grants read access to all company data",
              "Company.Write.All": "Grants write access to all company data",
              "Depot.Read.All": "Grants read access to all warehouse data",
              "Depot.Write.All": "Grants write access to all warehouse data",
              "History.Accounting.Read.All": "Grants read access to all accounting history\ndata",
              "History.Accounting.Write.All": "Grants write access to all accounting history\ndata",
              "History.Commercial.Read.All": "Grants read access to all commercial history\ndata",
              "History.Commercial.Write.All": "Grants write access to all commercial history\ndata",
              "Parameter.Read.All": "Grants read access to all parameter data",
              "Parameter.Write.All": "Grants write access to all parameter data",
              "Product.Read.All": "Grants read access to all product data",
              "Product.Write.All": "Grants write access to all product data",
              "ProductFamily.Read.All": "Grants read access to all family product data",
              "ProductFamily.Write.All": "Grants write access to all family product data",
              "Tiers.Read.All": "Grants read access to all customer/supplier data",
              "Tiers.Write.All": "Grants write access to all customer/supplier data",
              "Journal.Read.All": "Grants read access to all journal data",
              "Journal.Write.All": "Grants write access to all journal data",
              "History.Reminder.Read.All": "Grants read access to all reminder history\ndata",
              "History.Reminder.Write.All": "Grants write access to all reminder history\ndata"
            }
          }
        }
      }
    }
  }
}