{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "b21x7xxfzx5t4"
  },
  "info": {
    "title": "eCommerce Marketing Mailchimp",
    "version": "1.0",
    "x-logo": {
      "url": "https://logo.clearbit.com/mailchimp.com"
    },
    "description": "Mailchimp helps small businesses do big things, with the right tools and guidance every step of the way."
  },
  "servers": [
    {
      "url": "https://{server}.api.mailchimp.com/3.0",
      "variables": {
        "server": {
          "description": "Your DC value (ex: us19)",
          "default": "us19"
        }
      }
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/ecommerce/orders": {
      "get": {
        "summary": "List account orders",
        "description": "Get information about an account's orders.",
        "operationId": "getEcommerceOrders",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "campaign_id",
            "x-title": "Campaign ID",
            "in": "query",
            "description": "Restrict results to orders with a specific `campaign_id` value.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outreach_id",
            "x-title": "Outreach ID",
            "in": "query",
            "description": "Restrict results to orders with a specific `outreach_id` value.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_id",
            "x-title": "Customer ID",
            "in": "query",
            "required": false,
            "description": "Restrict results to orders made by a specific customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_outreach",
            "x-title": "Has Outreach",
            "in": "query",
            "required": false,
            "description": "Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Orders",
                  "description": "A collection of orders in an account.",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "title": "Orders",
                      "description": "An array of objects, each representing an order resource.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order",
                        "description": "Information about a specific order.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Foreign ID",
                            "description": "A unique identifier for the order.",
                            "readOnly": true
                          },
                          "customer": {
                            "type": "object",
                            "title": "E-commerce Customer",
                            "description": "Information about a specific customer.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Customer Foreign ID",
                                "description": "A unique identifier for the customer.",
                                "readOnly": true
                              },
                              "email_address": {
                                "type": "string",
                                "title": "Email Address",
                                "description": "The customer's email address.",
                                "readOnly": true
                              },
                              "opt_in_status": {
                                "type": "boolean",
                                "title": "Opt-in Status",
                                "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The customer's company."
                              },
                              "first_name": {
                                "type": "string",
                                "title": "First Name",
                                "description": "The customer's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "title": "Last Name",
                                "description": "The customer's last name."
                              },
                              "orders_count": {
                                "type": "integer",
                                "title": "Orders Count",
                                "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 4
                              },
                              "total_spent": {
                                "type": "number",
                                "title": "Total Spent",
                                "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 100
                              },
                              "address": {
                                "type": "object",
                                "title": "Address",
                                "description": "The customer's address.",
                                "properties": {
                                  "address1": {
                                    "type": "string",
                                    "title": "Address Field 1",
                                    "description": "The mailing address of the customer.",
                                    "example": "675 Ponce de Leon Ave NE"
                                  },
                                  "address2": {
                                    "type": "string",
                                    "title": "Address Field 2",
                                    "description": "An additional field for the customer's mailing address.",
                                    "example": "Suite 5000"
                                  },
                                  "city": {
                                    "type": "string",
                                    "title": "City ",
                                    "description": "The city the customer is located in.",
                                    "example": "Atlanta"
                                  },
                                  "province": {
                                    "type": "string",
                                    "title": "Province",
                                    "description": "The customer's state name or normalized province.",
                                    "example": "Georgia"
                                  },
                                  "province_code": {
                                    "type": "string",
                                    "title": "Province Code",
                                    "description": "The two-letter code for the customer's province or state.",
                                    "example": "GA"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "title": "Postal Code",
                                    "description": "The customer's postal or zip code.",
                                    "example": "30308"
                                  },
                                  "country": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The customer's country.",
                                    "example": "United States"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The two-letter code for the customer's country.",
                                    "example": "US"
                                  }
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "title": "Creation Time",
                                "format": "date-time",
                                "description": "The date and time the customer was created in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "updated_at": {
                                "type": "string",
                                "title": "Update Time",
                                "format": "date-time",
                                "description": "The date and time the customer was last updated in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "_links": {
                                "title": "Links",
                                "description": "A list of link types and descriptions for the API schema documents.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Resource Link",
                                  "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                  "properties": {
                                    "rel": {
                                      "type": "string",
                                      "title": "Rel",
                                      "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                      "readOnly": true
                                    },
                                    "href": {
                                      "type": "string",
                                      "title": "Href",
                                      "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                      "readOnly": true
                                    },
                                    "method": {
                                      "type": "string",
                                      "title": "Method",
                                      "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                      "enum": [
                                        "GET",
                                        "POST",
                                        "PUT",
                                        "PATCH",
                                        "DELETE",
                                        "OPTIONS",
                                        "HEAD"
                                      ],
                                      "readOnly": true
                                    },
                                    "targetSchema": {
                                      "type": "string",
                                      "title": "Target Schema",
                                      "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                      "readOnly": true
                                    },
                                    "schema": {
                                      "type": "string",
                                      "title": "Schema",
                                      "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "store_id": {
                            "type": "string",
                            "title": "Store Foreign ID",
                            "description": "The unique identifier for the store.",
                            "readOnly": true
                          },
                          "campaign_id": {
                            "type": "string",
                            "title": "Campaign ID",
                            "description": "A string that uniquely identifies the campaign associated with an order.",
                            "example": "839488a60b"
                          },
                          "landing_site": {
                            "type": "string",
                            "title": "Landing Site",
                            "description": "The URL for the page where the buyer landed when entering the shop.",
                            "example": "http://www.example.com?source=abc"
                          },
                          "financial_status": {
                            "type": "string",
                            "title": "Financial Status",
                            "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                          },
                          "fulfillment_status": {
                            "type": "string",
                            "title": "Fulfillment Status",
                            "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency Code",
                            "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                          },
                          "order_total": {
                            "type": "number",
                            "title": "Order Total",
                            "description": "The order total associated with an order."
                          },
                          "order_url": {
                            "type": "string",
                            "title": "Order URL",
                            "description": "The URL for the order."
                          },
                          "discount_total": {
                            "type": "number",
                            "title": "Discount Total",
                            "description": "The total amount of the discounts to be applied to the price of the order."
                          },
                          "tax_total": {
                            "type": "number",
                            "title": "Tax Total",
                            "description": "The tax total associated with an order."
                          },
                          "shipping_total": {
                            "type": "number",
                            "title": "Shipping Total",
                            "description": "The shipping total for the order."
                          },
                          "tracking_code": {
                            "type": "string",
                            "enum": [
                              "prec"
                            ],
                            "title": "Tracking Code",
                            "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                          },
                          "processed_at_foreign": {
                            "type": "string",
                            "title": "Foreign Processed Time",
                            "format": "date-time",
                            "description": "The date and time the order was processed in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "cancelled_at_foreign": {
                            "type": "string",
                            "title": "Foreign Cancel Time",
                            "format": "date-time",
                            "description": "The date and time the order was cancelled in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at_foreign": {
                            "type": "string",
                            "title": "Foreign Update Time",
                            "format": "date-time",
                            "description": "The date and time the order was updated in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "shipping_address": {
                            "type": "object",
                            "title": "Shipping Address",
                            "description": "The shipping address for the order.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "The name associated with an order's shipping address.",
                                "example": "Freddie Chimpenheimer"
                              },
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The shipping address for the order.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the shipping address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city in the order's shipping address.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The state or normalized province in the order's shipping address.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the province or state the order's shipping address is located in.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The postal or zip code in the order's shipping address.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The country in the order's shipping address.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the country in the shipping address.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude for the shipping address location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude for the shipping address location.",
                                "example": 45.427408
                              },
                              "phone": {
                                "type": "string",
                                "title": "Phone Number",
                                "description": "The phone number for the order's shipping address",
                                "example": "8675309"
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The company associated with an order's shipping address."
                              }
                            }
                          },
                          "billing_address": {
                            "type": "object",
                            "title": "Billing Address",
                            "description": "The billing address for the order.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "The name associated with an order's billing address.",
                                "example": "Freddie Chimpenheimer"
                              },
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The billing address for the order.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the billing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city in the billing address.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The state or normalized province in the billing address.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the province or state in the billing address.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The postal or zip code in the billing address.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The country in the billing address.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the country in the billing address.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude for the billing address location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude for the billing address location.",
                                "example": 45.427408
                              },
                              "phone": {
                                "type": "string",
                                "title": "Phone Number",
                                "description": "The phone number for the billing address.",
                                "example": "8675309"
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The company associated with the billing address."
                              }
                            }
                          },
                          "promos": {
                            "type": "array",
                            "title": "Promos",
                            "description": "The promo codes applied on the order",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "title": "Code",
                                  "description": "The Promo Code"
                                },
                                "amount_discounted": {
                                  "type": "number",
                                  "title": "Amount Discounted",
                                  "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                                },
                                "type": {
                                  "type": "string",
                                  "title": "Type",
                                  "description": "Type of discount. For free shipping set type to fixed",
                                  "enum": [
                                    "fixed",
                                    "percentage"
                                  ]
                                }
                              }
                            }
                          },
                          "lines": {
                            "type": "array",
                            "title": "Order Line Items",
                            "description": "An array of the order's line items.",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Order Line Item",
                              "description": "Information about a specific order line.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Order Line Item Foreign ID",
                                  "description": "A unique identifier for an order line item.",
                                  "readOnly": true
                                },
                                "product_id": {
                                  "type": "string",
                                  "title": "Order Line Item Product Foreign ID",
                                  "description": "A unique identifier for the product associated with an order line item."
                                },
                                "product_title": {
                                  "type": "string",
                                  "title": "Order Line Item Product Title",
                                  "description": "The name of the product for an order line item.",
                                  "readOnly": true
                                },
                                "product_variant_id": {
                                  "type": "string",
                                  "title": "Order Line Item Product Variant Foreign ID",
                                  "description": "A unique identifier for the product variant associated with an order line item."
                                },
                                "product_variant_title": {
                                  "type": "string",
                                  "title": "Order Line Item Product Variant Title",
                                  "description": "The name of the product variant for an order line item.",
                                  "readOnly": true
                                },
                                "image_url": {
                                  "type": "string",
                                  "title": "Product Image URL",
                                  "description": "The image URL for a product.",
                                  "readOnly": true
                                },
                                "quantity": {
                                  "type": "integer",
                                  "title": "Quantity",
                                  "description": "The order line item quantity."
                                },
                                "price": {
                                  "type": "number",
                                  "title": "Price",
                                  "description": "The order line item price."
                                },
                                "discount": {
                                  "type": "number",
                                  "title": "Discount",
                                  "description": "The total discount amount applied to a line item."
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "outreach": {
                            "type": "object",
                            "title": "Outreach",
                            "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Outreach ID",
                                "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                                "example": "839488a60b"
                              },
                              "name": {
                                "type": "string",
                                "title": "Outreach name",
                                "description": "The name for the outreach.",
                                "example": "Freddie's Jokes",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "title": "Outreach type",
                                "description": "The type of the outreach.",
                                "example": "regular",
                                "readOnly": true
                              },
                              "published_time": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Outreach published time",
                                "description": "The date and time the Outreach was published in ISO 8601 format.",
                                "example": "2017-06-06T13:56:12+00:00",
                                "readOnly": true
                              }
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Orders",
                  "description": "A collection of orders in an account.",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "title": "Orders",
                      "description": "An array of objects, each representing an order resource.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order",
                        "description": "Information about a specific order.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Foreign ID",
                            "description": "A unique identifier for the order.",
                            "readOnly": true
                          },
                          "customer": {
                            "type": "object",
                            "title": "E-commerce Customer",
                            "description": "Information about a specific customer.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Customer Foreign ID",
                                "description": "A unique identifier for the customer.",
                                "readOnly": true
                              },
                              "email_address": {
                                "type": "string",
                                "title": "Email Address",
                                "description": "The customer's email address.",
                                "readOnly": true
                              },
                              "opt_in_status": {
                                "type": "boolean",
                                "title": "Opt-in Status",
                                "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The customer's company."
                              },
                              "first_name": {
                                "type": "string",
                                "title": "First Name",
                                "description": "The customer's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "title": "Last Name",
                                "description": "The customer's last name."
                              },
                              "orders_count": {
                                "type": "integer",
                                "title": "Orders Count",
                                "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 4
                              },
                              "total_spent": {
                                "type": "number",
                                "title": "Total Spent",
                                "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 100
                              },
                              "address": {
                                "type": "object",
                                "title": "Address",
                                "description": "The customer's address.",
                                "properties": {
                                  "address1": {
                                    "type": "string",
                                    "title": "Address Field 1",
                                    "description": "The mailing address of the customer.",
                                    "example": "675 Ponce de Leon Ave NE"
                                  },
                                  "address2": {
                                    "type": "string",
                                    "title": "Address Field 2",
                                    "description": "An additional field for the customer's mailing address.",
                                    "example": "Suite 5000"
                                  },
                                  "city": {
                                    "type": "string",
                                    "title": "City ",
                                    "description": "The city the customer is located in.",
                                    "example": "Atlanta"
                                  },
                                  "province": {
                                    "type": "string",
                                    "title": "Province",
                                    "description": "The customer's state name or normalized province.",
                                    "example": "Georgia"
                                  },
                                  "province_code": {
                                    "type": "string",
                                    "title": "Province Code",
                                    "description": "The two-letter code for the customer's province or state.",
                                    "example": "GA"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "title": "Postal Code",
                                    "description": "The customer's postal or zip code.",
                                    "example": "30308"
                                  },
                                  "country": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The customer's country.",
                                    "example": "United States"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The two-letter code for the customer's country.",
                                    "example": "US"
                                  }
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "title": "Creation Time",
                                "format": "date-time",
                                "description": "The date and time the customer was created in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "updated_at": {
                                "type": "string",
                                "title": "Update Time",
                                "format": "date-time",
                                "description": "The date and time the customer was last updated in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "_links": {
                                "title": "Links",
                                "description": "A list of link types and descriptions for the API schema documents.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Resource Link",
                                  "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                  "properties": {
                                    "rel": {
                                      "type": "string",
                                      "title": "Rel",
                                      "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                      "readOnly": true
                                    },
                                    "href": {
                                      "type": "string",
                                      "title": "Href",
                                      "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                      "readOnly": true
                                    },
                                    "method": {
                                      "type": "string",
                                      "title": "Method",
                                      "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                      "enum": [
                                        "GET",
                                        "POST",
                                        "PUT",
                                        "PATCH",
                                        "DELETE",
                                        "OPTIONS",
                                        "HEAD"
                                      ],
                                      "readOnly": true
                                    },
                                    "targetSchema": {
                                      "type": "string",
                                      "title": "Target Schema",
                                      "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                      "readOnly": true
                                    },
                                    "schema": {
                                      "type": "string",
                                      "title": "Schema",
                                      "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "store_id": {
                            "type": "string",
                            "title": "Store Foreign ID",
                            "description": "The unique identifier for the store.",
                            "readOnly": true
                          },
                          "campaign_id": {
                            "type": "string",
                            "title": "Campaign ID",
                            "description": "A string that uniquely identifies the campaign associated with an order.",
                            "example": "839488a60b"
                          },
                          "landing_site": {
                            "type": "string",
                            "title": "Landing Site",
                            "description": "The URL for the page where the buyer landed when entering the shop.",
                            "example": "http://www.example.com?source=abc"
                          },
                          "financial_status": {
                            "type": "string",
                            "title": "Financial Status",
                            "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                          },
                          "fulfillment_status": {
                            "type": "string",
                            "title": "Fulfillment Status",
                            "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency Code",
                            "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                          },
                          "order_total": {
                            "type": "number",
                            "title": "Order Total",
                            "description": "The order total associated with an order."
                          },
                          "order_url": {
                            "type": "string",
                            "title": "Order URL",
                            "description": "The URL for the order."
                          },
                          "discount_total": {
                            "type": "number",
                            "title": "Discount Total",
                            "description": "The total amount of the discounts to be applied to the price of the order."
                          },
                          "tax_total": {
                            "type": "number",
                            "title": "Tax Total",
                            "description": "The tax total associated with an order."
                          },
                          "shipping_total": {
                            "type": "number",
                            "title": "Shipping Total",
                            "description": "The shipping total for the order."
                          },
                          "tracking_code": {
                            "type": "string",
                            "enum": [
                              "prec"
                            ],
                            "title": "Tracking Code",
                            "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                          },
                          "processed_at_foreign": {
                            "type": "string",
                            "title": "Foreign Processed Time",
                            "format": "date-time",
                            "description": "The date and time the order was processed in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "cancelled_at_foreign": {
                            "type": "string",
                            "title": "Foreign Cancel Time",
                            "format": "date-time",
                            "description": "The date and time the order was cancelled in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at_foreign": {
                            "type": "string",
                            "title": "Foreign Update Time",
                            "format": "date-time",
                            "description": "The date and time the order was updated in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "shipping_address": {
                            "type": "object",
                            "title": "Shipping Address",
                            "description": "The shipping address for the order.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "The name associated with an order's shipping address.",
                                "example": "Freddie Chimpenheimer"
                              },
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The shipping address for the order.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the shipping address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city in the order's shipping address.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The state or normalized province in the order's shipping address.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the province or state the order's shipping address is located in.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The postal or zip code in the order's shipping address.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The country in the order's shipping address.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the country in the shipping address.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude for the shipping address location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude for the shipping address location.",
                                "example": 45.427408
                              },
                              "phone": {
                                "type": "string",
                                "title": "Phone Number",
                                "description": "The phone number for the order's shipping address",
                                "example": "8675309"
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The company associated with an order's shipping address."
                              }
                            }
                          },
                          "billing_address": {
                            "type": "object",
                            "title": "Billing Address",
                            "description": "The billing address for the order.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "The name associated with an order's billing address.",
                                "example": "Freddie Chimpenheimer"
                              },
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The billing address for the order.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the billing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city in the billing address.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The state or normalized province in the billing address.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the province or state in the billing address.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The postal or zip code in the billing address.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The country in the billing address.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the country in the billing address.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude for the billing address location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude for the billing address location.",
                                "example": 45.427408
                              },
                              "phone": {
                                "type": "string",
                                "title": "Phone Number",
                                "description": "The phone number for the billing address.",
                                "example": "8675309"
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The company associated with the billing address."
                              }
                            }
                          },
                          "promos": {
                            "type": "array",
                            "title": "Promos",
                            "description": "The promo codes applied on the order",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "title": "Code",
                                  "description": "The Promo Code"
                                },
                                "amount_discounted": {
                                  "type": "number",
                                  "title": "Amount Discounted",
                                  "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                                },
                                "type": {
                                  "type": "string",
                                  "title": "Type",
                                  "description": "Type of discount. For free shipping set type to fixed",
                                  "enum": [
                                    "fixed",
                                    "percentage"
                                  ]
                                }
                              }
                            }
                          },
                          "lines": {
                            "type": "array",
                            "title": "Order Line Items",
                            "description": "An array of the order's line items.",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Order Line Item",
                              "description": "Information about a specific order line.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Order Line Item Foreign ID",
                                  "description": "A unique identifier for an order line item.",
                                  "readOnly": true
                                },
                                "product_id": {
                                  "type": "string",
                                  "title": "Order Line Item Product Foreign ID",
                                  "description": "A unique identifier for the product associated with an order line item."
                                },
                                "product_title": {
                                  "type": "string",
                                  "title": "Order Line Item Product Title",
                                  "description": "The name of the product for an order line item.",
                                  "readOnly": true
                                },
                                "product_variant_id": {
                                  "type": "string",
                                  "title": "Order Line Item Product Variant Foreign ID",
                                  "description": "A unique identifier for the product variant associated with an order line item."
                                },
                                "product_variant_title": {
                                  "type": "string",
                                  "title": "Order Line Item Product Variant Title",
                                  "description": "The name of the product variant for an order line item.",
                                  "readOnly": true
                                },
                                "image_url": {
                                  "type": "string",
                                  "title": "Product Image URL",
                                  "description": "The image URL for a product.",
                                  "readOnly": true
                                },
                                "quantity": {
                                  "type": "integer",
                                  "title": "Quantity",
                                  "description": "The order line item quantity."
                                },
                                "price": {
                                  "type": "number",
                                  "title": "Price",
                                  "description": "The order line item price."
                                },
                                "discount": {
                                  "type": "number",
                                  "title": "Discount",
                                  "description": "The total discount amount applied to a line item."
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "outreach": {
                            "type": "object",
                            "title": "Outreach",
                            "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Outreach ID",
                                "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                                "example": "839488a60b"
                              },
                              "name": {
                                "type": "string",
                                "title": "Outreach name",
                                "description": "The name for the outreach.",
                                "example": "Freddie's Jokes",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "title": "Outreach type",
                                "description": "The type of the outreach.",
                                "example": "regular",
                                "readOnly": true
                              },
                              "published_time": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Outreach published time",
                                "description": "The date and time the Outreach was published in ISO 8601 format.",
                                "example": "2017-06-06T13:56:12+00:00",
                                "readOnly": true
                              }
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "orders",
          "methodNameCamel": "orders"
        }
      }
    },
    "/ecommerce/stores": {
      "get": {
        "summary": "List stores",
        "description": "Get information about all stores in the account.",
        "operationId": "getEcommerceStores",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Stores",
                  "description": "A collection of stores in the account.",
                  "properties": {
                    "stores": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Store",
                        "description": "An individual store in an account.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Store Foreign ID",
                            "description": "The unique identifier for the store.",
                            "readOnly": true,
                            "example": "example_store"
                          },
                          "list_id": {
                            "type": "string",
                            "title": "List ID",
                            "description": "The unique identifier for the [Mailchimp List](/developer/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                            "readOnly": true,
                            "example": "1a2df69511"
                          },
                          "name": {
                            "type": "string",
                            "title": "Store Name",
                            "description": "The name of the store.",
                            "example": "Freddie's Cat Hat Emporium"
                          },
                          "platform": {
                            "type": "string",
                            "title": "Platform",
                            "description": "The e-commerce platform of the store."
                          },
                          "domain": {
                            "type": "string",
                            "title": "Domain",
                            "description": "The store domain.  The store domain must be unique within a user account.",
                            "example": "example.com"
                          },
                          "is_syncing": {
                            "type": "boolean",
                            "title": "Is Syncing",
                            "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                          },
                          "email_address": {
                            "type": "string",
                            "title": "Email Address",
                            "description": "The email address for the store.",
                            "example": "freddie@mailchimp.com"
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency",
                            "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                            "example": "USD"
                          },
                          "money_format": {
                            "type": "string",
                            "title": "Money Format",
                            "description": "The currency format for the store. For example: `$`, `£`, etc.",
                            "example": "$"
                          },
                          "primary_locale": {
                            "type": "string",
                            "title": "Primary Locale",
                            "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                            "example": "fr"
                          },
                          "timezone": {
                            "type": "string",
                            "title": "Timezone",
                            "description": "The timezone for the store.",
                            "example": "Eastern"
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone",
                            "description": "The store phone number.",
                            "example": "404-444-4444"
                          },
                          "address": {
                            "type": "object",
                            "title": "Address",
                            "description": "The store address.",
                            "properties": {
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The store's mailing address.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the store's mailing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city the store is located in.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The store's state name or normalized province.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the store's province or state.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The store's postal or zip code.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The store's country.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for to the store's country.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude of the store location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude of the store location.",
                                "example": 45.427408
                              }
                            }
                          },
                          "connected_site": {
                            "type": "object",
                            "title": "Connected Site",
                            "description": "The Connected Site associated with the store.",
                            "readOnly": true,
                            "properties": {
                              "site_foreign_id": {
                                "type": "string",
                                "title": "Connected Site Foreign ID",
                                "description": "The unique identifier for the connected site.",
                                "readOnly": true,
                                "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                              },
                              "site_script": {
                                "type": "object",
                                "title": "Script",
                                "description": "The script used to connect your site with Mailchimp.",
                                "readOnly": true,
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "title": "Script URL",
                                    "description": "The URL used for any integrations that offer built-in support for connected sites.",
                                    "readOnly": true,
                                    "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                                  },
                                  "fragment": {
                                    "type": "string",
                                    "title": "Script Fragment",
                                    "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                                    "readOnly": true,
                                    "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                                  }
                                }
                              }
                            }
                          },
                          "automations": {
                            "type": "object",
                            "title": "Automations",
                            "description": "Details for the automations attached to this store.",
                            "readOnly": true,
                            "properties": {
                              "abandoned_cart": {
                                "type": "object",
                                "title": "Abandoned Cart Automation",
                                "description": "abandonedCart automation details.",
                                "readOnly": true,
                                "properties": {
                                  "is_supported": {
                                    "type": "boolean",
                                    "title": "Is Supported",
                                    "description": "Whether this store supports the abandonedCart automation.",
                                    "readOnly": true,
                                    "example": false
                                  },
                                  "id": {
                                    "type": "string",
                                    "title": "ID",
                                    "description": "Unique ID of automation parent campaign.",
                                    "readOnly": true,
                                    "example": "355a72bfc3"
                                  },
                                  "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Status of the abandonedCart automation.",
                                    "enum": [
                                      "save",
                                      "sending",
                                      "paused"
                                    ],
                                    "readOnly": true,
                                    "example": "sending"
                                  }
                                }
                              },
                              "abandoned_browse": {
                                "type": "object",
                                "title": "Abandoned Browse Automation",
                                "description": "abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.",
                                "readOnly": true,
                                "properties": {
                                  "is_supported": {
                                    "type": "boolean",
                                    "title": "Is Supported",
                                    "description": "Whether this store supports the abandonedBrowse automation.",
                                    "readOnly": true,
                                    "example": false
                                  },
                                  "id": {
                                    "type": "string",
                                    "title": "ID",
                                    "description": "Unique ID of automation parent campaign.",
                                    "readOnly": true,
                                    "example": "355a72bfc3"
                                  },
                                  "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Status of the abandonedBrowse automation.",
                                    "enum": [
                                      "save",
                                      "sending",
                                      "paused"
                                    ],
                                    "readOnly": true,
                                    "example": "sending"
                                  }
                                }
                              }
                            }
                          },
                          "list_is_active": {
                            "type": "boolean",
                            "title": "List Status",
                            "description": "The status of the list connected to the store, namely if it's deleted or disabled.",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the store was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the store was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "title": "Stores",
                      "description": "An array of objects, each representing a store."
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Stores",
                  "description": "A collection of stores in the account.",
                  "properties": {
                    "stores": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Store",
                        "description": "An individual store in an account.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Store Foreign ID",
                            "description": "The unique identifier for the store.",
                            "readOnly": true,
                            "example": "example_store"
                          },
                          "list_id": {
                            "type": "string",
                            "title": "List ID",
                            "description": "The unique identifier for the [Mailchimp List](/developer/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                            "readOnly": true,
                            "example": "1a2df69511"
                          },
                          "name": {
                            "type": "string",
                            "title": "Store Name",
                            "description": "The name of the store.",
                            "example": "Freddie's Cat Hat Emporium"
                          },
                          "platform": {
                            "type": "string",
                            "title": "Platform",
                            "description": "The e-commerce platform of the store."
                          },
                          "domain": {
                            "type": "string",
                            "title": "Domain",
                            "description": "The store domain.  The store domain must be unique within a user account.",
                            "example": "example.com"
                          },
                          "is_syncing": {
                            "type": "boolean",
                            "title": "Is Syncing",
                            "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                          },
                          "email_address": {
                            "type": "string",
                            "title": "Email Address",
                            "description": "The email address for the store.",
                            "example": "freddie@mailchimp.com"
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency",
                            "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                            "example": "USD"
                          },
                          "money_format": {
                            "type": "string",
                            "title": "Money Format",
                            "description": "The currency format for the store. For example: `$`, `£`, etc.",
                            "example": "$"
                          },
                          "primary_locale": {
                            "type": "string",
                            "title": "Primary Locale",
                            "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                            "example": "fr"
                          },
                          "timezone": {
                            "type": "string",
                            "title": "Timezone",
                            "description": "The timezone for the store.",
                            "example": "Eastern"
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone",
                            "description": "The store phone number.",
                            "example": "404-444-4444"
                          },
                          "address": {
                            "type": "object",
                            "title": "Address",
                            "description": "The store address.",
                            "properties": {
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The store's mailing address.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the store's mailing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city the store is located in.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The store's state name or normalized province.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the store's province or state.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The store's postal or zip code.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The store's country.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for to the store's country.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude of the store location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude of the store location.",
                                "example": 45.427408
                              }
                            }
                          },
                          "connected_site": {
                            "type": "object",
                            "title": "Connected Site",
                            "description": "The Connected Site associated with the store.",
                            "readOnly": true,
                            "properties": {
                              "site_foreign_id": {
                                "type": "string",
                                "title": "Connected Site Foreign ID",
                                "description": "The unique identifier for the connected site.",
                                "readOnly": true,
                                "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                              },
                              "site_script": {
                                "type": "object",
                                "title": "Script",
                                "description": "The script used to connect your site with Mailchimp.",
                                "readOnly": true,
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "title": "Script URL",
                                    "description": "The URL used for any integrations that offer built-in support for connected sites.",
                                    "readOnly": true,
                                    "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                                  },
                                  "fragment": {
                                    "type": "string",
                                    "title": "Script Fragment",
                                    "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                                    "readOnly": true,
                                    "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                                  }
                                }
                              }
                            }
                          },
                          "automations": {
                            "type": "object",
                            "title": "Automations",
                            "description": "Details for the automations attached to this store.",
                            "readOnly": true,
                            "properties": {
                              "abandoned_cart": {
                                "type": "object",
                                "title": "Abandoned Cart Automation",
                                "description": "abandonedCart automation details.",
                                "readOnly": true,
                                "properties": {
                                  "is_supported": {
                                    "type": "boolean",
                                    "title": "Is Supported",
                                    "description": "Whether this store supports the abandonedCart automation.",
                                    "readOnly": true,
                                    "example": false
                                  },
                                  "id": {
                                    "type": "string",
                                    "title": "ID",
                                    "description": "Unique ID of automation parent campaign.",
                                    "readOnly": true,
                                    "example": "355a72bfc3"
                                  },
                                  "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Status of the abandonedCart automation.",
                                    "enum": [
                                      "save",
                                      "sending",
                                      "paused"
                                    ],
                                    "readOnly": true,
                                    "example": "sending"
                                  }
                                }
                              },
                              "abandoned_browse": {
                                "type": "object",
                                "title": "Abandoned Browse Automation",
                                "description": "abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.",
                                "readOnly": true,
                                "properties": {
                                  "is_supported": {
                                    "type": "boolean",
                                    "title": "Is Supported",
                                    "description": "Whether this store supports the abandonedBrowse automation.",
                                    "readOnly": true,
                                    "example": false
                                  },
                                  "id": {
                                    "type": "string",
                                    "title": "ID",
                                    "description": "Unique ID of automation parent campaign.",
                                    "readOnly": true,
                                    "example": "355a72bfc3"
                                  },
                                  "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Status of the abandonedBrowse automation.",
                                    "enum": [
                                      "save",
                                      "sending",
                                      "paused"
                                    ],
                                    "readOnly": true,
                                    "example": "sending"
                                  }
                                }
                              }
                            }
                          },
                          "list_is_active": {
                            "type": "boolean",
                            "title": "List Status",
                            "description": "The status of the list connected to the store, namely if it's deleted or disabled.",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the store was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the store was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "title": "Stores",
                      "description": "An array of objects, each representing a store."
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "stores",
          "methodNameCamel": "stores"
        }
      },
      "post": {
        "summary": "Add store",
        "description": "Add a new store to your Mailchimp account.",
        "operationId": "postEcommerceStores",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Store",
                "description": "An individual store in an account.",
                "required": [
                  "id",
                  "list_id",
                  "name",
                  "currency_code"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Store Foreign ID",
                    "description": "The unique identifier for the store.",
                    "example": "example_store"
                  },
                  "list_id": {
                    "type": "string",
                    "title": "List ID",
                    "description": "The unique identifier for the [Mailchimp List](/developer/reference/lists/) associated with the store. The `list_id` for a specific store cannot change.",
                    "example": "1a2df69511"
                  },
                  "name": {
                    "type": "string",
                    "title": "Store Name",
                    "description": "The name of the store.",
                    "example": "Freddie's Cat Hat Emporium"
                  },
                  "platform": {
                    "type": "string",
                    "title": "Platform",
                    "description": "The e-commerce platform of the store."
                  },
                  "domain": {
                    "type": "string",
                    "title": "Domain",
                    "description": "The store domain. This parameter is required for [Connected Sites](/developer/reference/connected-sites/) and Google Ads.",
                    "example": "example.com"
                  },
                  "is_syncing": {
                    "type": "boolean",
                    "title": "Is Syncing",
                    "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                  },
                  "email_address": {
                    "type": "string",
                    "title": "Email Address",
                    "description": "The email address for the store.",
                    "example": "freddie@mailchimp.com"
                  },
                  "currency_code": {
                    "type": "string",
                    "title": "Currency",
                    "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                    "example": "USD"
                  },
                  "money_format": {
                    "type": "string",
                    "title": "Money Format",
                    "description": "The currency format for the store. For example: `$`, `£`, etc.",
                    "example": "$"
                  },
                  "primary_locale": {
                    "type": "string",
                    "title": "Primary Locale",
                    "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                    "example": "fr"
                  },
                  "timezone": {
                    "type": "string",
                    "title": "Timezone",
                    "description": "The timezone for the store.",
                    "example": "Eastern"
                  },
                  "phone": {
                    "type": "string",
                    "title": "Phone",
                    "description": "The store phone number.",
                    "example": "404-444-4444"
                  },
                  "address": {
                    "type": "object",
                    "title": "Address",
                    "description": "The store address.",
                    "properties": {
                      "address1": {
                        "type": "string",
                        "title": "Address Field 1",
                        "description": "The store's mailing address.",
                        "example": "675 Ponce de Leon Ave NE"
                      },
                      "address2": {
                        "type": "string",
                        "title": "Address Field 2",
                        "description": "An additional field for the store's mailing address.",
                        "example": "Suite 5000"
                      },
                      "city": {
                        "type": "string",
                        "title": "City ",
                        "description": "The city the store is located in.",
                        "example": "Atlanta"
                      },
                      "province": {
                        "type": "string",
                        "title": "Province",
                        "description": "The store's state name or normalized province.",
                        "example": "Georgia"
                      },
                      "province_code": {
                        "type": "string",
                        "title": "Province Code",
                        "description": "The two-letter code for the store's province or state.",
                        "example": "GA"
                      },
                      "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "The store's postal or zip code.",
                        "example": "30308"
                      },
                      "country": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The store's country.",
                        "example": "United States"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The two-letter code for to the store's country.",
                        "example": "US"
                      },
                      "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "The longitude of the store location.",
                        "example": -75.68903
                      },
                      "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "The latitude of the store location.",
                        "example": 45.427408
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Store",
                  "description": "An individual store in an account.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true,
                      "example": "example_store"
                    },
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique identifier for the [Mailchimp List](/developer/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                      "readOnly": true,
                      "example": "1a2df69511"
                    },
                    "name": {
                      "type": "string",
                      "title": "Store Name",
                      "description": "The name of the store.",
                      "example": "Freddie's Cat Hat Emporium"
                    },
                    "platform": {
                      "type": "string",
                      "title": "Platform",
                      "description": "The e-commerce platform of the store."
                    },
                    "domain": {
                      "type": "string",
                      "title": "Domain",
                      "description": "The store domain.  The store domain must be unique within a user account.",
                      "example": "example.com"
                    },
                    "is_syncing": {
                      "type": "boolean",
                      "title": "Is Syncing",
                      "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The email address for the store.",
                      "example": "freddie@mailchimp.com"
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                      "example": "USD"
                    },
                    "money_format": {
                      "type": "string",
                      "title": "Money Format",
                      "description": "The currency format for the store. For example: `$`, `£`, etc.",
                      "example": "$"
                    },
                    "primary_locale": {
                      "type": "string",
                      "title": "Primary Locale",
                      "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                      "example": "fr"
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the store.",
                      "example": "Eastern"
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone",
                      "description": "The store phone number.",
                      "example": "404-444-4444"
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The store address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The store's mailing address.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the store's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the store is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The store's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the store's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The store's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The store's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for to the store's country.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude of the store location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude of the store location.",
                          "example": 45.427408
                        }
                      }
                    },
                    "connected_site": {
                      "type": "object",
                      "title": "Connected Site",
                      "description": "The Connected Site associated with the store.",
                      "readOnly": true,
                      "properties": {
                        "site_foreign_id": {
                          "type": "string",
                          "title": "Connected Site Foreign ID",
                          "description": "The unique identifier for the connected site.",
                          "readOnly": true,
                          "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                        },
                        "site_script": {
                          "type": "object",
                          "title": "Script",
                          "description": "The script used to connect your site with Mailchimp.",
                          "readOnly": true,
                          "properties": {
                            "url": {
                              "type": "string",
                              "title": "Script URL",
                              "description": "The URL used for any integrations that offer built-in support for connected sites.",
                              "readOnly": true,
                              "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                            },
                            "fragment": {
                              "type": "string",
                              "title": "Script Fragment",
                              "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                              "readOnly": true,
                              "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                            }
                          }
                        }
                      }
                    },
                    "automations": {
                      "type": "object",
                      "title": "Automations",
                      "description": "Details for the automations attached to this store.",
                      "readOnly": true,
                      "properties": {
                        "abandoned_cart": {
                          "type": "object",
                          "title": "Abandoned Cart Automation",
                          "description": "abandonedCart automation details.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedCart automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedCart automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        },
                        "abandoned_browse": {
                          "type": "object",
                          "title": "Abandoned Browse Automation",
                          "description": "abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedBrowse automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedBrowse automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        }
                      }
                    },
                    "list_is_active": {
                      "type": "boolean",
                      "title": "List Status",
                      "description": "The status of the list connected to the store, namely if it's deleted or disabled.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the store was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the store was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Store",
                  "description": "An individual store in an account.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true,
                      "example": "example_store"
                    },
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique identifier for the [Mailchimp List](/developer/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                      "readOnly": true,
                      "example": "1a2df69511"
                    },
                    "name": {
                      "type": "string",
                      "title": "Store Name",
                      "description": "The name of the store.",
                      "example": "Freddie's Cat Hat Emporium"
                    },
                    "platform": {
                      "type": "string",
                      "title": "Platform",
                      "description": "The e-commerce platform of the store."
                    },
                    "domain": {
                      "type": "string",
                      "title": "Domain",
                      "description": "The store domain.  The store domain must be unique within a user account.",
                      "example": "example.com"
                    },
                    "is_syncing": {
                      "type": "boolean",
                      "title": "Is Syncing",
                      "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The email address for the store.",
                      "example": "freddie@mailchimp.com"
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                      "example": "USD"
                    },
                    "money_format": {
                      "type": "string",
                      "title": "Money Format",
                      "description": "The currency format for the store. For example: `$`, `£`, etc.",
                      "example": "$"
                    },
                    "primary_locale": {
                      "type": "string",
                      "title": "Primary Locale",
                      "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                      "example": "fr"
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the store.",
                      "example": "Eastern"
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone",
                      "description": "The store phone number.",
                      "example": "404-444-4444"
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The store address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The store's mailing address.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the store's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the store is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The store's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the store's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The store's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The store's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for to the store's country.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude of the store location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude of the store location.",
                          "example": 45.427408
                        }
                      }
                    },
                    "connected_site": {
                      "type": "object",
                      "title": "Connected Site",
                      "description": "The Connected Site associated with the store.",
                      "readOnly": true,
                      "properties": {
                        "site_foreign_id": {
                          "type": "string",
                          "title": "Connected Site Foreign ID",
                          "description": "The unique identifier for the connected site.",
                          "readOnly": true,
                          "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                        },
                        "site_script": {
                          "type": "object",
                          "title": "Script",
                          "description": "The script used to connect your site with Mailchimp.",
                          "readOnly": true,
                          "properties": {
                            "url": {
                              "type": "string",
                              "title": "Script URL",
                              "description": "The URL used for any integrations that offer built-in support for connected sites.",
                              "readOnly": true,
                              "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                            },
                            "fragment": {
                              "type": "string",
                              "title": "Script Fragment",
                              "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                              "readOnly": true,
                              "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                            }
                          }
                        }
                      }
                    },
                    "automations": {
                      "type": "object",
                      "title": "Automations",
                      "description": "Details for the automations attached to this store.",
                      "readOnly": true,
                      "properties": {
                        "abandoned_cart": {
                          "type": "object",
                          "title": "Abandoned Cart Automation",
                          "description": "abandonedCart automation details.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedCart automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedCart automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        },
                        "abandoned_browse": {
                          "type": "object",
                          "title": "Abandoned Browse Automation",
                          "description": "abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedBrowse automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedBrowse automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        }
                      }
                    },
                    "list_is_active": {
                      "type": "boolean",
                      "title": "List Status",
                      "description": "The status of the list connected to the store, namely if it's deleted or disabled.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the store was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the store was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_store",
          "methodNameCamel": "addStore"
        }
      }
    },
    "/ecommerce/stores/{store_id}": {
      "get": {
        "summary": "Get store info",
        "description": "Get information about a specific store.",
        "operationId": "getEcommerceStoresId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Store",
                  "description": "An individual store in an account.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true,
                      "example": "example_store"
                    },
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique identifier for the [Mailchimp List](/developer/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                      "readOnly": true,
                      "example": "1a2df69511"
                    },
                    "name": {
                      "type": "string",
                      "title": "Store Name",
                      "description": "The name of the store.",
                      "example": "Freddie's Cat Hat Emporium"
                    },
                    "platform": {
                      "type": "string",
                      "title": "Platform",
                      "description": "The e-commerce platform of the store."
                    },
                    "domain": {
                      "type": "string",
                      "title": "Domain",
                      "description": "The store domain.  The store domain must be unique within a user account.",
                      "example": "example.com"
                    },
                    "is_syncing": {
                      "type": "boolean",
                      "title": "Is Syncing",
                      "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The email address for the store.",
                      "example": "freddie@mailchimp.com"
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                      "example": "USD"
                    },
                    "money_format": {
                      "type": "string",
                      "title": "Money Format",
                      "description": "The currency format for the store. For example: `$`, `£`, etc.",
                      "example": "$"
                    },
                    "primary_locale": {
                      "type": "string",
                      "title": "Primary Locale",
                      "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                      "example": "fr"
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the store.",
                      "example": "Eastern"
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone",
                      "description": "The store phone number.",
                      "example": "404-444-4444"
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The store address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The store's mailing address.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the store's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the store is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The store's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the store's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The store's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The store's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for to the store's country.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude of the store location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude of the store location.",
                          "example": 45.427408
                        }
                      }
                    },
                    "connected_site": {
                      "type": "object",
                      "title": "Connected Site",
                      "description": "The Connected Site associated with the store.",
                      "readOnly": true,
                      "properties": {
                        "site_foreign_id": {
                          "type": "string",
                          "title": "Connected Site Foreign ID",
                          "description": "The unique identifier for the connected site.",
                          "readOnly": true,
                          "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                        },
                        "site_script": {
                          "type": "object",
                          "title": "Script",
                          "description": "The script used to connect your site with Mailchimp.",
                          "readOnly": true,
                          "properties": {
                            "url": {
                              "type": "string",
                              "title": "Script URL",
                              "description": "The URL used for any integrations that offer built-in support for connected sites.",
                              "readOnly": true,
                              "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                            },
                            "fragment": {
                              "type": "string",
                              "title": "Script Fragment",
                              "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                              "readOnly": true,
                              "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                            }
                          }
                        }
                      }
                    },
                    "automations": {
                      "type": "object",
                      "title": "Automations",
                      "description": "Details for the automations attached to this store.",
                      "readOnly": true,
                      "properties": {
                        "abandoned_cart": {
                          "type": "object",
                          "title": "Abandoned Cart Automation",
                          "description": "abandonedCart automation details.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedCart automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedCart automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        },
                        "abandoned_browse": {
                          "type": "object",
                          "title": "Abandoned Browse Automation",
                          "description": "abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedBrowse automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedBrowse automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        }
                      }
                    },
                    "list_is_active": {
                      "type": "boolean",
                      "title": "List Status",
                      "description": "The status of the list connected to the store, namely if it's deleted or disabled.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the store was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the store was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Store",
                  "description": "An individual store in an account.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true,
                      "example": "example_store"
                    },
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique identifier for the [Mailchimp List](/developer/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                      "readOnly": true,
                      "example": "1a2df69511"
                    },
                    "name": {
                      "type": "string",
                      "title": "Store Name",
                      "description": "The name of the store.",
                      "example": "Freddie's Cat Hat Emporium"
                    },
                    "platform": {
                      "type": "string",
                      "title": "Platform",
                      "description": "The e-commerce platform of the store."
                    },
                    "domain": {
                      "type": "string",
                      "title": "Domain",
                      "description": "The store domain.  The store domain must be unique within a user account.",
                      "example": "example.com"
                    },
                    "is_syncing": {
                      "type": "boolean",
                      "title": "Is Syncing",
                      "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The email address for the store.",
                      "example": "freddie@mailchimp.com"
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                      "example": "USD"
                    },
                    "money_format": {
                      "type": "string",
                      "title": "Money Format",
                      "description": "The currency format for the store. For example: `$`, `£`, etc.",
                      "example": "$"
                    },
                    "primary_locale": {
                      "type": "string",
                      "title": "Primary Locale",
                      "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                      "example": "fr"
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the store.",
                      "example": "Eastern"
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone",
                      "description": "The store phone number.",
                      "example": "404-444-4444"
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The store address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The store's mailing address.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the store's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the store is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The store's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the store's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The store's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The store's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for to the store's country.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude of the store location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude of the store location.",
                          "example": 45.427408
                        }
                      }
                    },
                    "connected_site": {
                      "type": "object",
                      "title": "Connected Site",
                      "description": "The Connected Site associated with the store.",
                      "readOnly": true,
                      "properties": {
                        "site_foreign_id": {
                          "type": "string",
                          "title": "Connected Site Foreign ID",
                          "description": "The unique identifier for the connected site.",
                          "readOnly": true,
                          "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                        },
                        "site_script": {
                          "type": "object",
                          "title": "Script",
                          "description": "The script used to connect your site with Mailchimp.",
                          "readOnly": true,
                          "properties": {
                            "url": {
                              "type": "string",
                              "title": "Script URL",
                              "description": "The URL used for any integrations that offer built-in support for connected sites.",
                              "readOnly": true,
                              "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                            },
                            "fragment": {
                              "type": "string",
                              "title": "Script Fragment",
                              "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                              "readOnly": true,
                              "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                            }
                          }
                        }
                      }
                    },
                    "automations": {
                      "type": "object",
                      "title": "Automations",
                      "description": "Details for the automations attached to this store.",
                      "readOnly": true,
                      "properties": {
                        "abandoned_cart": {
                          "type": "object",
                          "title": "Abandoned Cart Automation",
                          "description": "abandonedCart automation details.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedCart automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedCart automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        },
                        "abandoned_browse": {
                          "type": "object",
                          "title": "Abandoned Browse Automation",
                          "description": "abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedBrowse automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedBrowse automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        }
                      }
                    },
                    "list_is_active": {
                      "type": "boolean",
                      "title": "List Status",
                      "description": "The status of the list connected to the store, namely if it's deleted or disabled.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the store was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the store was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_store",
          "methodNameCamel": "getStore"
        }
      },
      "patch": {
        "summary": "Update store",
        "description": "Update a store.",
        "operationId": "patchEcommerceStoresId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Store",
                "description": "An individual store in an account.",
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Store Name",
                    "description": "The name of the store.",
                    "example": "Freddie's Cat Hat Emporium"
                  },
                  "platform": {
                    "type": "string",
                    "title": "Platform",
                    "description": "The e-commerce platform of the store."
                  },
                  "domain": {
                    "type": "string",
                    "title": "Domain",
                    "description": "The store domain.",
                    "example": "example.com"
                  },
                  "is_syncing": {
                    "type": "boolean",
                    "title": "Is Syncing",
                    "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                  },
                  "email_address": {
                    "type": "string",
                    "title": "Email Address",
                    "description": "The email address for the store.",
                    "example": "freddie@mailchimp.com"
                  },
                  "currency_code": {
                    "type": "string",
                    "title": "Currency",
                    "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                    "example": "USD"
                  },
                  "money_format": {
                    "type": "string",
                    "title": "Money Format",
                    "description": "The currency format for the store. For example: `$`, `£`, etc.",
                    "example": "$"
                  },
                  "primary_locale": {
                    "type": "string",
                    "title": "Primary Locale",
                    "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                    "example": "fr"
                  },
                  "timezone": {
                    "type": "string",
                    "title": "Timezone",
                    "description": "The timezone for the store.",
                    "example": "Eastern"
                  },
                  "phone": {
                    "type": "string",
                    "title": "Phone",
                    "description": "The store phone number.",
                    "example": "404-444-4444"
                  },
                  "address": {
                    "type": "object",
                    "title": "Address",
                    "description": "The store address.",
                    "properties": {
                      "address1": {
                        "type": "string",
                        "title": "Address Field 1",
                        "description": "The store's mailing address.",
                        "example": "675 Ponce de Leon Ave NE"
                      },
                      "address2": {
                        "type": "string",
                        "title": "Address Field 2",
                        "description": "An additional field for the store's mailing address.",
                        "example": "Suite 5000"
                      },
                      "city": {
                        "type": "string",
                        "title": "City ",
                        "description": "The city the store is located in.",
                        "example": "Atlanta"
                      },
                      "province": {
                        "type": "string",
                        "title": "Province",
                        "description": "The store's state name or normalized province.",
                        "example": "Georgia"
                      },
                      "province_code": {
                        "type": "string",
                        "title": "Province Code",
                        "description": "The two-letter code for the store's province or state.",
                        "example": "GA"
                      },
                      "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "The store's postal or zip code.",
                        "example": "30308"
                      },
                      "country": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The store's country.",
                        "example": "United States"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The two-letter code for to the store's country.",
                        "example": "US"
                      },
                      "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "The longitude of the store location.",
                        "example": -75.68903
                      },
                      "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "The latitude of the store location.",
                        "example": 45.427408
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Store",
                  "description": "An individual store in an account.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true,
                      "example": "example_store"
                    },
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique identifier for the [Mailchimp List](/developer/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                      "readOnly": true,
                      "example": "1a2df69511"
                    },
                    "name": {
                      "type": "string",
                      "title": "Store Name",
                      "description": "The name of the store.",
                      "example": "Freddie's Cat Hat Emporium"
                    },
                    "platform": {
                      "type": "string",
                      "title": "Platform",
                      "description": "The e-commerce platform of the store."
                    },
                    "domain": {
                      "type": "string",
                      "title": "Domain",
                      "description": "The store domain.  The store domain must be unique within a user account.",
                      "example": "example.com"
                    },
                    "is_syncing": {
                      "type": "boolean",
                      "title": "Is Syncing",
                      "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The email address for the store.",
                      "example": "freddie@mailchimp.com"
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                      "example": "USD"
                    },
                    "money_format": {
                      "type": "string",
                      "title": "Money Format",
                      "description": "The currency format for the store. For example: `$`, `£`, etc.",
                      "example": "$"
                    },
                    "primary_locale": {
                      "type": "string",
                      "title": "Primary Locale",
                      "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                      "example": "fr"
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the store.",
                      "example": "Eastern"
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone",
                      "description": "The store phone number.",
                      "example": "404-444-4444"
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The store address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The store's mailing address.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the store's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the store is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The store's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the store's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The store's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The store's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for to the store's country.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude of the store location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude of the store location.",
                          "example": 45.427408
                        }
                      }
                    },
                    "connected_site": {
                      "type": "object",
                      "title": "Connected Site",
                      "description": "The Connected Site associated with the store.",
                      "readOnly": true,
                      "properties": {
                        "site_foreign_id": {
                          "type": "string",
                          "title": "Connected Site Foreign ID",
                          "description": "The unique identifier for the connected site.",
                          "readOnly": true,
                          "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                        },
                        "site_script": {
                          "type": "object",
                          "title": "Script",
                          "description": "The script used to connect your site with Mailchimp.",
                          "readOnly": true,
                          "properties": {
                            "url": {
                              "type": "string",
                              "title": "Script URL",
                              "description": "The URL used for any integrations that offer built-in support for connected sites.",
                              "readOnly": true,
                              "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                            },
                            "fragment": {
                              "type": "string",
                              "title": "Script Fragment",
                              "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                              "readOnly": true,
                              "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                            }
                          }
                        }
                      }
                    },
                    "automations": {
                      "type": "object",
                      "title": "Automations",
                      "description": "Details for the automations attached to this store.",
                      "readOnly": true,
                      "properties": {
                        "abandoned_cart": {
                          "type": "object",
                          "title": "Abandoned Cart Automation",
                          "description": "abandonedCart automation details.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedCart automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedCart automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        },
                        "abandoned_browse": {
                          "type": "object",
                          "title": "Abandoned Browse Automation",
                          "description": "abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedBrowse automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedBrowse automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        }
                      }
                    },
                    "list_is_active": {
                      "type": "boolean",
                      "title": "List Status",
                      "description": "The status of the list connected to the store, namely if it's deleted or disabled.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the store was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the store was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Store",
                  "description": "An individual store in an account.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true,
                      "example": "example_store"
                    },
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique identifier for the [Mailchimp List](/developer/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                      "readOnly": true,
                      "example": "1a2df69511"
                    },
                    "name": {
                      "type": "string",
                      "title": "Store Name",
                      "description": "The name of the store.",
                      "example": "Freddie's Cat Hat Emporium"
                    },
                    "platform": {
                      "type": "string",
                      "title": "Platform",
                      "description": "The e-commerce platform of the store."
                    },
                    "domain": {
                      "type": "string",
                      "title": "Domain",
                      "description": "The store domain.  The store domain must be unique within a user account.",
                      "example": "example.com"
                    },
                    "is_syncing": {
                      "type": "boolean",
                      "title": "Is Syncing",
                      "description": "Whether the e-commerce store is currently [syncing](/developer/guides/getting-started-with-ecommerce/#Syncing_an_E-Commerce_Store)."
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The email address for the store.",
                      "example": "freddie@mailchimp.com"
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                      "example": "USD"
                    },
                    "money_format": {
                      "type": "string",
                      "title": "Money Format",
                      "description": "The currency format for the store. For example: `$`, `£`, etc.",
                      "example": "$"
                    },
                    "primary_locale": {
                      "type": "string",
                      "title": "Primary Locale",
                      "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                      "example": "fr"
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the store.",
                      "example": "Eastern"
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone",
                      "description": "The store phone number.",
                      "example": "404-444-4444"
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The store address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The store's mailing address.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the store's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the store is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The store's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the store's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The store's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The store's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for to the store's country.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude of the store location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude of the store location.",
                          "example": 45.427408
                        }
                      }
                    },
                    "connected_site": {
                      "type": "object",
                      "title": "Connected Site",
                      "description": "The Connected Site associated with the store.",
                      "readOnly": true,
                      "properties": {
                        "site_foreign_id": {
                          "type": "string",
                          "title": "Connected Site Foreign ID",
                          "description": "The unique identifier for the connected site.",
                          "readOnly": true,
                          "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                        },
                        "site_script": {
                          "type": "object",
                          "title": "Script",
                          "description": "The script used to connect your site with Mailchimp.",
                          "readOnly": true,
                          "properties": {
                            "url": {
                              "type": "string",
                              "title": "Script URL",
                              "description": "The URL used for any integrations that offer built-in support for connected sites.",
                              "readOnly": true,
                              "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                            },
                            "fragment": {
                              "type": "string",
                              "title": "Script Fragment",
                              "description": "A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.",
                              "readOnly": true,
                              "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                            }
                          }
                        }
                      }
                    },
                    "automations": {
                      "type": "object",
                      "title": "Automations",
                      "description": "Details for the automations attached to this store.",
                      "readOnly": true,
                      "properties": {
                        "abandoned_cart": {
                          "type": "object",
                          "title": "Abandoned Cart Automation",
                          "description": "abandonedCart automation details.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedCart automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedCart automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        },
                        "abandoned_browse": {
                          "type": "object",
                          "title": "Abandoned Browse Automation",
                          "description": "abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.",
                          "readOnly": true,
                          "properties": {
                            "is_supported": {
                              "type": "boolean",
                              "title": "Is Supported",
                              "description": "Whether this store supports the abandonedBrowse automation.",
                              "readOnly": true,
                              "example": false
                            },
                            "id": {
                              "type": "string",
                              "title": "ID",
                              "description": "Unique ID of automation parent campaign.",
                              "readOnly": true,
                              "example": "355a72bfc3"
                            },
                            "status": {
                              "type": "string",
                              "title": "Status",
                              "description": "Status of the abandonedBrowse automation.",
                              "enum": [
                                "save",
                                "sending",
                                "paused"
                              ],
                              "readOnly": true,
                              "example": "sending"
                            }
                          }
                        }
                      }
                    },
                    "list_is_active": {
                      "type": "boolean",
                      "title": "List Status",
                      "description": "The status of the list connected to the store, namely if it's deleted or disabled.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the store was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the store was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_store",
          "methodNameCamel": "updateStore"
        }
      },
      "delete": {
        "summary": "Delete store",
        "description": "Delete a store. Deleting a store will also delete any associated subresources, including Customers, Orders, Products, and Carts.",
        "operationId": "deleteEcommerceStoresId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Empty Response"
                }
              },
              "application/problem+json": {
                "schema": {
                  "description": "Empty Response"
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_store",
          "methodNameCamel": "deleteStore"
        }
      }
    },
    "/ecommerce/stores/{store_id}/carts": {
      "get": {
        "summary": "List carts",
        "description": "Get information about a store's carts.",
        "operationId": "getEcommerceStoresIdCarts",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Carts",
                  "description": "A collection of a store's carts.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "carts": {
                      "type": "array",
                      "title": "E-commerce Store Carts",
                      "description": "An array of objects, each representing a cart.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart",
                        "description": "Information about a specific cart.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Foreign ID",
                            "description": "A unique identifier for the cart.",
                            "readOnly": true
                          },
                          "customer": {
                            "type": "object",
                            "title": "E-commerce Customer",
                            "description": "Information about a specific customer.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Customer Foreign ID",
                                "description": "A unique identifier for the customer.",
                                "readOnly": true
                              },
                              "email_address": {
                                "type": "string",
                                "title": "Email Address",
                                "description": "The customer's email address.",
                                "readOnly": true
                              },
                              "opt_in_status": {
                                "type": "boolean",
                                "title": "Opt-in Status",
                                "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The customer's company."
                              },
                              "first_name": {
                                "type": "string",
                                "title": "First Name",
                                "description": "The customer's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "title": "Last Name",
                                "description": "The customer's last name."
                              },
                              "orders_count": {
                                "type": "integer",
                                "title": "Orders Count",
                                "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 4
                              },
                              "total_spent": {
                                "type": "number",
                                "title": "Total Spent",
                                "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 100
                              },
                              "address": {
                                "type": "object",
                                "title": "Address",
                                "description": "The customer's address.",
                                "properties": {
                                  "address1": {
                                    "type": "string",
                                    "title": "Address Field 1",
                                    "description": "The mailing address of the customer.",
                                    "example": "675 Ponce de Leon Ave NE"
                                  },
                                  "address2": {
                                    "type": "string",
                                    "title": "Address Field 2",
                                    "description": "An additional field for the customer's mailing address.",
                                    "example": "Suite 5000"
                                  },
                                  "city": {
                                    "type": "string",
                                    "title": "City ",
                                    "description": "The city the customer is located in.",
                                    "example": "Atlanta"
                                  },
                                  "province": {
                                    "type": "string",
                                    "title": "Province",
                                    "description": "The customer's state name or normalized province.",
                                    "example": "Georgia"
                                  },
                                  "province_code": {
                                    "type": "string",
                                    "title": "Province Code",
                                    "description": "The two-letter code for the customer's province or state.",
                                    "example": "GA"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "title": "Postal Code",
                                    "description": "The customer's postal or zip code.",
                                    "example": "30308"
                                  },
                                  "country": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The customer's country.",
                                    "example": "United States"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The two-letter code for the customer's country.",
                                    "example": "US"
                                  }
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "title": "Creation Time",
                                "format": "date-time",
                                "description": "The date and time the customer was created in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "updated_at": {
                                "type": "string",
                                "title": "Update Time",
                                "format": "date-time",
                                "description": "The date and time the customer was last updated in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "_links": {
                                "title": "Links",
                                "description": "A list of link types and descriptions for the API schema documents.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Resource Link",
                                  "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                  "properties": {
                                    "rel": {
                                      "type": "string",
                                      "title": "Rel",
                                      "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                      "readOnly": true
                                    },
                                    "href": {
                                      "type": "string",
                                      "title": "Href",
                                      "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                      "readOnly": true
                                    },
                                    "method": {
                                      "type": "string",
                                      "title": "Method",
                                      "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                      "enum": [
                                        "GET",
                                        "POST",
                                        "PUT",
                                        "PATCH",
                                        "DELETE",
                                        "OPTIONS",
                                        "HEAD"
                                      ],
                                      "readOnly": true
                                    },
                                    "targetSchema": {
                                      "type": "string",
                                      "title": "Target Schema",
                                      "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                      "readOnly": true
                                    },
                                    "schema": {
                                      "type": "string",
                                      "title": "Schema",
                                      "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "campaign_id": {
                            "type": "string",
                            "title": "Campaign ID",
                            "description": "A string that uniquely identifies the campaign associated with a cart.",
                            "example": "839488a60b"
                          },
                          "checkout_url": {
                            "type": "string",
                            "title": "Checkout URL",
                            "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency Code",
                            "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                          },
                          "order_total": {
                            "type": "number",
                            "title": "Order Total",
                            "description": "The order total for the cart."
                          },
                          "tax_total": {
                            "type": "number",
                            "title": "Tax Total",
                            "description": "The total tax for the cart."
                          },
                          "lines": {
                            "type": "array",
                            "title": "Cart Line Items",
                            "description": "An array of the cart's line items.",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Cart Line Item",
                              "description": "Information about a specific cart line item.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Cart Line Item Foreign ID",
                                  "description": "A unique identifier for the cart line item.",
                                  "readOnly": true
                                },
                                "product_id": {
                                  "type": "string",
                                  "title": "Cart Line Product Foreign ID",
                                  "description": "A unique identifier for the product associated with the cart line item."
                                },
                                "product_title": {
                                  "type": "string",
                                  "title": "Cart Line Product Title",
                                  "description": "The name of the product for the cart line item.",
                                  "readOnly": true
                                },
                                "product_variant_id": {
                                  "type": "string",
                                  "title": "Cart Line Product Variant Foreign ID",
                                  "description": "A unique identifier for the product variant associated with the cart line item."
                                },
                                "product_variant_title": {
                                  "type": "string",
                                  "title": "Cart Line Product Variant Title",
                                  "description": "The name of the product variant for the cart line item.",
                                  "readOnly": true
                                },
                                "quantity": {
                                  "type": "integer",
                                  "title": "Quantity",
                                  "description": "The quantity of a cart line item."
                                },
                                "price": {
                                  "type": "number",
                                  "title": "Price",
                                  "description": "The price of a cart line item."
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the cart was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the cart was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Carts",
                  "description": "A collection of a store's carts.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "carts": {
                      "type": "array",
                      "title": "E-commerce Store Carts",
                      "description": "An array of objects, each representing a cart.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart",
                        "description": "Information about a specific cart.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Foreign ID",
                            "description": "A unique identifier for the cart.",
                            "readOnly": true
                          },
                          "customer": {
                            "type": "object",
                            "title": "E-commerce Customer",
                            "description": "Information about a specific customer.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Customer Foreign ID",
                                "description": "A unique identifier for the customer.",
                                "readOnly": true
                              },
                              "email_address": {
                                "type": "string",
                                "title": "Email Address",
                                "description": "The customer's email address.",
                                "readOnly": true
                              },
                              "opt_in_status": {
                                "type": "boolean",
                                "title": "Opt-in Status",
                                "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The customer's company."
                              },
                              "first_name": {
                                "type": "string",
                                "title": "First Name",
                                "description": "The customer's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "title": "Last Name",
                                "description": "The customer's last name."
                              },
                              "orders_count": {
                                "type": "integer",
                                "title": "Orders Count",
                                "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 4
                              },
                              "total_spent": {
                                "type": "number",
                                "title": "Total Spent",
                                "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 100
                              },
                              "address": {
                                "type": "object",
                                "title": "Address",
                                "description": "The customer's address.",
                                "properties": {
                                  "address1": {
                                    "type": "string",
                                    "title": "Address Field 1",
                                    "description": "The mailing address of the customer.",
                                    "example": "675 Ponce de Leon Ave NE"
                                  },
                                  "address2": {
                                    "type": "string",
                                    "title": "Address Field 2",
                                    "description": "An additional field for the customer's mailing address.",
                                    "example": "Suite 5000"
                                  },
                                  "city": {
                                    "type": "string",
                                    "title": "City ",
                                    "description": "The city the customer is located in.",
                                    "example": "Atlanta"
                                  },
                                  "province": {
                                    "type": "string",
                                    "title": "Province",
                                    "description": "The customer's state name or normalized province.",
                                    "example": "Georgia"
                                  },
                                  "province_code": {
                                    "type": "string",
                                    "title": "Province Code",
                                    "description": "The two-letter code for the customer's province or state.",
                                    "example": "GA"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "title": "Postal Code",
                                    "description": "The customer's postal or zip code.",
                                    "example": "30308"
                                  },
                                  "country": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The customer's country.",
                                    "example": "United States"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The two-letter code for the customer's country.",
                                    "example": "US"
                                  }
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "title": "Creation Time",
                                "format": "date-time",
                                "description": "The date and time the customer was created in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "updated_at": {
                                "type": "string",
                                "title": "Update Time",
                                "format": "date-time",
                                "description": "The date and time the customer was last updated in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "_links": {
                                "title": "Links",
                                "description": "A list of link types and descriptions for the API schema documents.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Resource Link",
                                  "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                  "properties": {
                                    "rel": {
                                      "type": "string",
                                      "title": "Rel",
                                      "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                      "readOnly": true
                                    },
                                    "href": {
                                      "type": "string",
                                      "title": "Href",
                                      "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                      "readOnly": true
                                    },
                                    "method": {
                                      "type": "string",
                                      "title": "Method",
                                      "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                      "enum": [
                                        "GET",
                                        "POST",
                                        "PUT",
                                        "PATCH",
                                        "DELETE",
                                        "OPTIONS",
                                        "HEAD"
                                      ],
                                      "readOnly": true
                                    },
                                    "targetSchema": {
                                      "type": "string",
                                      "title": "Target Schema",
                                      "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                      "readOnly": true
                                    },
                                    "schema": {
                                      "type": "string",
                                      "title": "Schema",
                                      "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "campaign_id": {
                            "type": "string",
                            "title": "Campaign ID",
                            "description": "A string that uniquely identifies the campaign associated with a cart.",
                            "example": "839488a60b"
                          },
                          "checkout_url": {
                            "type": "string",
                            "title": "Checkout URL",
                            "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency Code",
                            "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                          },
                          "order_total": {
                            "type": "number",
                            "title": "Order Total",
                            "description": "The order total for the cart."
                          },
                          "tax_total": {
                            "type": "number",
                            "title": "Tax Total",
                            "description": "The total tax for the cart."
                          },
                          "lines": {
                            "type": "array",
                            "title": "Cart Line Items",
                            "description": "An array of the cart's line items.",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Cart Line Item",
                              "description": "Information about a specific cart line item.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Cart Line Item Foreign ID",
                                  "description": "A unique identifier for the cart line item.",
                                  "readOnly": true
                                },
                                "product_id": {
                                  "type": "string",
                                  "title": "Cart Line Product Foreign ID",
                                  "description": "A unique identifier for the product associated with the cart line item."
                                },
                                "product_title": {
                                  "type": "string",
                                  "title": "Cart Line Product Title",
                                  "description": "The name of the product for the cart line item.",
                                  "readOnly": true
                                },
                                "product_variant_id": {
                                  "type": "string",
                                  "title": "Cart Line Product Variant Foreign ID",
                                  "description": "A unique identifier for the product variant associated with the cart line item."
                                },
                                "product_variant_title": {
                                  "type": "string",
                                  "title": "Cart Line Product Variant Title",
                                  "description": "The name of the product variant for the cart line item.",
                                  "readOnly": true
                                },
                                "quantity": {
                                  "type": "integer",
                                  "title": "Quantity",
                                  "description": "The quantity of a cart line item."
                                },
                                "price": {
                                  "type": "number",
                                  "title": "Price",
                                  "description": "The price of a cart line item."
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the cart was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the cart was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_store_carts",
          "methodNameCamel": "getStoreCarts"
        }
      },
      "post": {
        "summary": "Add cart",
        "description": "Add a new cart to a store.",
        "operationId": "postEcommerceStoresIdCarts",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Cart",
                "description": "Information about a specific cart.",
                "required": [
                  "id",
                  "currency_code",
                  "customer",
                  "order_total",
                  "lines"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Cart Foreign ID",
                    "description": "A unique identifier for the cart."
                  },
                  "customer": {
                    "type": "object",
                    "title": "E-commerce Customer",
                    "description": "Information about a specific customer. For existing customers include only the `id` parameter in the `customer` object body.",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Customer Foreign ID",
                        "description": "A unique identifier for the customer."
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "The customer's email address."
                      },
                      "opt_in_status": {
                        "type": "boolean",
                        "title": "Opt-in Status",
                        "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                      },
                      "company": {
                        "type": "string",
                        "title": "Company",
                        "description": "The customer's company."
                      },
                      "first_name": {
                        "type": "string",
                        "title": "First Name",
                        "description": "The customer's first name."
                      },
                      "last_name": {
                        "type": "string",
                        "title": "Last Name",
                        "description": "The customer's last name."
                      },
                      "address": {
                        "type": "object",
                        "title": "Address",
                        "description": "The customer's address.",
                        "properties": {
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The mailing address of the customer.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the customer's mailing address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city the customer is located in.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The customer's state name or normalized province.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the customer's province or state.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The customer's postal or zip code.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The customer's country.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for the customer's country.",
                            "example": "US"
                          }
                        }
                      }
                    }
                  },
                  "campaign_id": {
                    "type": "string",
                    "title": "Campaign ID",
                    "description": "A string that uniquely identifies the campaign for a cart.",
                    "example": "839488a60b"
                  },
                  "checkout_url": {
                    "type": "string",
                    "title": "Checkout URL",
                    "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                  },
                  "currency_code": {
                    "type": "string",
                    "title": "Currency Code",
                    "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                  },
                  "order_total": {
                    "type": "number",
                    "title": "Order Total",
                    "description": "The order total for the cart."
                  },
                  "tax_total": {
                    "type": "number",
                    "title": "Tax Total",
                    "description": "The total tax for the cart."
                  },
                  "lines": {
                    "type": "array",
                    "title": "Cart Line Items",
                    "description": "An array of the cart's line items.",
                    "items": {
                      "type": "object",
                      "title": "E-commerce Cart Line Item",
                      "description": "Information about a specific cart line item.",
                      "required": [
                        "id",
                        "product_id",
                        "product_variant_id",
                        "quantity",
                        "price"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Cart Line Item Foreign ID",
                          "description": "A unique identifier for the cart line item."
                        },
                        "product_id": {
                          "type": "string",
                          "title": "Cart Line Product Foreign ID",
                          "description": "A unique identifier for the product associated with the cart line item."
                        },
                        "product_variant_id": {
                          "type": "string",
                          "title": "Cart Line Product Variant Foreign ID",
                          "description": "A unique identifier for the product variant associated with the cart line item."
                        },
                        "quantity": {
                          "type": "integer",
                          "title": "Quantity",
                          "description": "The quantity of a cart line item."
                        },
                        "price": {
                          "type": "number",
                          "title": "Price",
                          "description": "The price of a cart line item."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart",
                  "description": "Information about a specific cart.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Foreign ID",
                      "description": "A unique identifier for the cart.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with a cart.",
                      "example": "839488a60b"
                    },
                    "checkout_url": {
                      "type": "string",
                      "title": "Checkout URL",
                      "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total for the cart."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The total tax for the cart."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Cart Line Items",
                      "description": "An array of the cart's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart Line Item",
                        "description": "Information about a specific cart line item.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Line Item Foreign ID",
                            "description": "A unique identifier for the cart line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Cart Line Product Foreign ID",
                            "description": "A unique identifier for the product associated with the cart line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Cart Line Product Title",
                            "description": "The name of the product for the cart line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Cart Line Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with the cart line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Cart Line Product Variant Title",
                            "description": "The name of the product variant for the cart line item.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The quantity of a cart line item."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a cart line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the cart was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the cart was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart",
                  "description": "Information about a specific cart.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Foreign ID",
                      "description": "A unique identifier for the cart.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with a cart.",
                      "example": "839488a60b"
                    },
                    "checkout_url": {
                      "type": "string",
                      "title": "Checkout URL",
                      "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total for the cart."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The total tax for the cart."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Cart Line Items",
                      "description": "An array of the cart's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart Line Item",
                        "description": "Information about a specific cart line item.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Line Item Foreign ID",
                            "description": "A unique identifier for the cart line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Cart Line Product Foreign ID",
                            "description": "A unique identifier for the product associated with the cart line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Cart Line Product Title",
                            "description": "The name of the product for the cart line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Cart Line Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with the cart line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Cart Line Product Variant Title",
                            "description": "The name of the product variant for the cart line item.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The quantity of a cart line item."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a cart line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the cart was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the cart was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_store_cart",
          "methodNameCamel": "addStoreCart"
        }
      }
    },
    "/ecommerce/stores/{store_id}/carts/{cart_id}": {
      "get": {
        "summary": "Get cart info",
        "description": "Get information about a specific cart.",
        "operationId": "getEcommerceStoresIdCartsId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cart_id",
            "x-title": "Cart ID",
            "description": "The id for the cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart",
                  "description": "Information about a specific cart.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Foreign ID",
                      "description": "A unique identifier for the cart.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with a cart.",
                      "example": "839488a60b"
                    },
                    "checkout_url": {
                      "type": "string",
                      "title": "Checkout URL",
                      "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total for the cart."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The total tax for the cart."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Cart Line Items",
                      "description": "An array of the cart's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart Line Item",
                        "description": "Information about a specific cart line item.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Line Item Foreign ID",
                            "description": "A unique identifier for the cart line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Cart Line Product Foreign ID",
                            "description": "A unique identifier for the product associated with the cart line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Cart Line Product Title",
                            "description": "The name of the product for the cart line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Cart Line Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with the cart line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Cart Line Product Variant Title",
                            "description": "The name of the product variant for the cart line item.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The quantity of a cart line item."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a cart line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the cart was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the cart was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart",
                  "description": "Information about a specific cart.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Foreign ID",
                      "description": "A unique identifier for the cart.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with a cart.",
                      "example": "839488a60b"
                    },
                    "checkout_url": {
                      "type": "string",
                      "title": "Checkout URL",
                      "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total for the cart."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The total tax for the cart."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Cart Line Items",
                      "description": "An array of the cart's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart Line Item",
                        "description": "Information about a specific cart line item.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Line Item Foreign ID",
                            "description": "A unique identifier for the cart line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Cart Line Product Foreign ID",
                            "description": "A unique identifier for the product associated with the cart line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Cart Line Product Title",
                            "description": "The name of the product for the cart line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Cart Line Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with the cart line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Cart Line Product Variant Title",
                            "description": "The name of the product variant for the cart line item.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The quantity of a cart line item."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a cart line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the cart was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the cart was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_store_cart",
          "methodNameCamel": "getStoreCart"
        }
      },
      "patch": {
        "summary": "Update cart",
        "description": "Update a specific cart.",
        "operationId": "patchEcommerceStoresIdCartsId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cart_id",
            "x-title": "Cart ID",
            "description": "The id for the cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Cart",
                "description": "Information about a specific cart.",
                "properties": {
                  "customer": {
                    "type": "object",
                    "title": "E-commerce Customer",
                    "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                    "properties": {
                      "opt_in_status": {
                        "type": "boolean",
                        "title": "Opt-in Status",
                        "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                      },
                      "company": {
                        "type": "string",
                        "title": "Company",
                        "description": "The customer's company."
                      },
                      "first_name": {
                        "type": "string",
                        "title": "First Name",
                        "description": "The customer's first name."
                      },
                      "last_name": {
                        "type": "string",
                        "title": "Last Name",
                        "description": "The customer's last name."
                      },
                      "address": {
                        "type": "object",
                        "title": "Address",
                        "description": "The customer's address.",
                        "properties": {
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The mailing address of the customer.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the customer's mailing address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city the customer is located in.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The customer's state name or normalized province.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the customer's province or state.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The customer's postal or zip code.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The customer's country.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for the customer's country.",
                            "example": "US"
                          }
                        }
                      }
                    }
                  },
                  "campaign_id": {
                    "type": "string",
                    "title": "Campaign ID",
                    "description": "A string that uniquely identifies the campaign associated with a cart.",
                    "example": "839488a60b"
                  },
                  "checkout_url": {
                    "type": "string",
                    "title": "Checkout URL",
                    "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                  },
                  "currency_code": {
                    "type": "string",
                    "title": "Currency Code",
                    "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                  },
                  "order_total": {
                    "type": "number",
                    "title": "Order Total",
                    "description": "The order total for the cart."
                  },
                  "tax_total": {
                    "type": "number",
                    "title": "Tax Total",
                    "description": "The total tax for the cart."
                  },
                  "lines": {
                    "type": "array",
                    "title": "Cart Line Items",
                    "description": "An array of the cart's line items.",
                    "items": {
                      "type": "object",
                      "title": "E-commerce Cart Line Item",
                      "description": "Information about a specific cart line item.",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "title": "Cart Line Product Foreign ID",
                          "description": "A unique identifier for the product associated with the cart line item."
                        },
                        "product_variant_id": {
                          "type": "string",
                          "title": "Cart Line Product Variant Foreign ID",
                          "description": "A unique identifier for the product variant associated with the cart line item."
                        },
                        "quantity": {
                          "type": "integer",
                          "title": "Quantity",
                          "description": "The quantity of a cart line item."
                        },
                        "price": {
                          "type": "number",
                          "title": "Price",
                          "description": "The price of a cart line item."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart",
                  "description": "Information about a specific cart.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Foreign ID",
                      "description": "A unique identifier for the cart.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with a cart.",
                      "example": "839488a60b"
                    },
                    "checkout_url": {
                      "type": "string",
                      "title": "Checkout URL",
                      "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total for the cart."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The total tax for the cart."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Cart Line Items",
                      "description": "An array of the cart's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart Line Item",
                        "description": "Information about a specific cart line item.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Line Item Foreign ID",
                            "description": "A unique identifier for the cart line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Cart Line Product Foreign ID",
                            "description": "A unique identifier for the product associated with the cart line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Cart Line Product Title",
                            "description": "The name of the product for the cart line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Cart Line Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with the cart line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Cart Line Product Variant Title",
                            "description": "The name of the product variant for the cart line item.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The quantity of a cart line item."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a cart line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the cart was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the cart was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart",
                  "description": "Information about a specific cart.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Foreign ID",
                      "description": "A unique identifier for the cart.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with a cart.",
                      "example": "839488a60b"
                    },
                    "checkout_url": {
                      "type": "string",
                      "title": "Checkout URL",
                      "description": "The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total for the cart."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The total tax for the cart."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Cart Line Items",
                      "description": "An array of the cart's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart Line Item",
                        "description": "Information about a specific cart line item.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Line Item Foreign ID",
                            "description": "A unique identifier for the cart line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Cart Line Product Foreign ID",
                            "description": "A unique identifier for the product associated with the cart line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Cart Line Product Title",
                            "description": "The name of the product for the cart line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Cart Line Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with the cart line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Cart Line Product Variant Title",
                            "description": "The name of the product variant for the cart line item.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The quantity of a cart line item."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a cart line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the cart was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the cart was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_store_cart",
          "methodNameCamel": "updateStoreCart"
        }
      },
      "delete": {
        "summary": "Delete cart",
        "description": "Delete a cart.",
        "operationId": "deleteEcommerceStoresIdCartsId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cart_id",
            "x-title": "Cart ID",
            "description": "The id for the cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_store_cart",
          "methodNameCamel": "deleteStoreCart"
        }
      }
    },
    "/ecommerce/stores/{store_id}/carts/{cart_id}/lines": {
      "get": {
        "summary": "List cart line items",
        "description": "Get information about a cart's line items.",
        "operationId": "getEcommerceStoresIdCartsIdLines",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cart_id",
            "x-title": "Cart ID",
            "description": "The id for the cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Cart Lines",
                  "description": "A collection of a cart's line items.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "cart_id": {
                      "type": "string",
                      "title": "Cart ID",
                      "description": "The cart id."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Ecommerce Cart Lines",
                      "description": "An array of objects, each representing a cart's line item.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart Line Item",
                        "description": "Information about a specific cart line item.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Line Item Foreign ID",
                            "description": "A unique identifier for the cart line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Cart Line Product Foreign ID",
                            "description": "A unique identifier for the product associated with the cart line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Cart Line Product Title",
                            "description": "The name of the product for the cart line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Cart Line Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with the cart line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Cart Line Product Variant Title",
                            "description": "The name of the product variant for the cart line item.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The quantity of a cart line item."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a cart line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Cart Lines",
                  "description": "A collection of a cart's line items.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "cart_id": {
                      "type": "string",
                      "title": "Cart ID",
                      "description": "The cart id."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Ecommerce Cart Lines",
                      "description": "An array of objects, each representing a cart's line item.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Cart Line Item",
                        "description": "Information about a specific cart line item.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Cart Line Item Foreign ID",
                            "description": "A unique identifier for the cart line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Cart Line Product Foreign ID",
                            "description": "A unique identifier for the product associated with the cart line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Cart Line Product Title",
                            "description": "The name of the product for the cart line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Cart Line Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with the cart line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Cart Line Product Variant Title",
                            "description": "The name of the product variant for the cart line item.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The quantity of a cart line item."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a cart line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_all_cart_line_items",
          "methodNameCamel": "getAllCartLineItems"
        }
      },
      "post": {
        "summary": "Add cart line item",
        "description": "Add a new line item to an existing cart.",
        "operationId": "postEcommerceStoresIdCartsIdLines",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cart_id",
            "x-title": "Cart ID",
            "description": "The id for the cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Cart Line Item",
                "description": "Information about a specific cart line item.",
                "required": [
                  "id",
                  "product_id",
                  "product_variant_id",
                  "quantity",
                  "price"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Cart Line Item Foreign ID",
                    "description": "A unique identifier for the cart line item."
                  },
                  "product_id": {
                    "type": "string",
                    "title": "Cart Line Product Foreign ID",
                    "description": "A unique identifier for the product associated with the cart line item."
                  },
                  "product_variant_id": {
                    "type": "string",
                    "title": "Cart Line Product Variant Foreign ID",
                    "description": "A unique identifier for the product variant associated with the cart line item."
                  },
                  "quantity": {
                    "type": "integer",
                    "title": "Quantity",
                    "description": "The quantity of a cart line item."
                  },
                  "price": {
                    "type": "number",
                    "title": "Price",
                    "description": "The price of a cart line item."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart Line Item",
                  "description": "Information about a specific cart line item.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Line Item Foreign ID",
                      "description": "A unique identifier for the cart line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Cart Line Product Foreign ID",
                      "description": "A unique identifier for the product associated with the cart line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Cart Line Product Title",
                      "description": "The name of the product for the cart line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Cart Line Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with the cart line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Cart Line Product Variant Title",
                      "description": "The name of the product variant for the cart line item.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The quantity of a cart line item."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a cart line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart Line Item",
                  "description": "Information about a specific cart line item.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Line Item Foreign ID",
                      "description": "A unique identifier for the cart line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Cart Line Product Foreign ID",
                      "description": "A unique identifier for the product associated with the cart line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Cart Line Product Title",
                      "description": "The name of the product for the cart line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Cart Line Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with the cart line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Cart Line Product Variant Title",
                      "description": "The name of the product variant for the cart line item.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The quantity of a cart line item."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a cart line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_cart_line_item",
          "methodNameCamel": "addCartLineItem"
        }
      }
    },
    "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}": {
      "get": {
        "summary": "Get cart line item",
        "description": "Get information about a specific cart line item.",
        "operationId": "getEcommerceStoresIdCartsIdLinesId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cart_id",
            "x-title": "Cart ID",
            "description": "The id for the cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_id",
            "x-title": "Cart Line ID",
            "description": "The id for the line item of a cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart Line Item",
                  "description": "Information about a specific cart line item.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Line Item Foreign ID",
                      "description": "A unique identifier for the cart line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Cart Line Product Foreign ID",
                      "description": "A unique identifier for the product associated with the cart line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Cart Line Product Title",
                      "description": "The name of the product for the cart line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Cart Line Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with the cart line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Cart Line Product Variant Title",
                      "description": "The name of the product variant for the cart line item.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The quantity of a cart line item."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a cart line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart Line Item",
                  "description": "Information about a specific cart line item.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Line Item Foreign ID",
                      "description": "A unique identifier for the cart line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Cart Line Product Foreign ID",
                      "description": "A unique identifier for the product associated with the cart line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Cart Line Product Title",
                      "description": "The name of the product for the cart line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Cart Line Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with the cart line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Cart Line Product Variant Title",
                      "description": "The name of the product variant for the cart line item.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The quantity of a cart line item."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a cart line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_cart_line_item",
          "methodNameCamel": "getCartLineItem"
        }
      },
      "patch": {
        "summary": "Update cart line item",
        "description": "Update a specific cart line item.",
        "operationId": "patchEcommerceStoresIdCartsIdLinesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cart_id",
            "x-title": "Cart ID",
            "description": "The id for the cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_id",
            "x-title": "Cart Line ID",
            "description": "The id for the line item of a cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Cart Line Item",
                "description": "Information about a specific cart line item.",
                "properties": {
                  "product_id": {
                    "type": "string",
                    "title": "Cart Line Product Foreign ID",
                    "description": "A unique identifier for the product associated with the cart line item."
                  },
                  "product_variant_id": {
                    "type": "string",
                    "title": "Cart Line Product Variant Foreign ID",
                    "description": "A unique identifier for the product variant associated with the cart line item."
                  },
                  "quantity": {
                    "type": "integer",
                    "title": "Quantity",
                    "description": "The quantity of a cart line item."
                  },
                  "price": {
                    "type": "number",
                    "title": "Price",
                    "description": "The price of a cart line item."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart Line Item",
                  "description": "Information about a specific cart line item.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Line Item Foreign ID",
                      "description": "A unique identifier for the cart line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Cart Line Product Foreign ID",
                      "description": "A unique identifier for the product associated with the cart line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Cart Line Product Title",
                      "description": "The name of the product for the cart line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Cart Line Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with the cart line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Cart Line Product Variant Title",
                      "description": "The name of the product variant for the cart line item.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The quantity of a cart line item."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a cart line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Cart Line Item",
                  "description": "Information about a specific cart line item.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Cart Line Item Foreign ID",
                      "description": "A unique identifier for the cart line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Cart Line Product Foreign ID",
                      "description": "A unique identifier for the product associated with the cart line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Cart Line Product Title",
                      "description": "The name of the product for the cart line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Cart Line Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with the cart line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Cart Line Product Variant Title",
                      "description": "The name of the product variant for the cart line item.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The quantity of a cart line item."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a cart line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_cart_line_item",
          "methodNameCamel": "updateCartLineItem"
        }
      },
      "delete": {
        "summary": "Delete cart line item",
        "description": "Delete a specific cart line item.",
        "operationId": "deleteEcommerceStoresIdCartsLinesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cart_id",
            "x-title": "Cart ID",
            "description": "The id for the cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_id",
            "x-title": "Cart Line ID",
            "description": "The id for the line item of a cart.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_cart_line_item",
          "methodNameCamel": "deleteCartLineItem"
        }
      }
    },
    "/ecommerce/stores/{store_id}/customers": {
      "get": {
        "summary": "List customers",
        "description": "Get information about a store's customers.",
        "operationId": "getEcommerceStoresIdCustomers",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_address",
            "x-title": "Customer Email Address",
            "in": "query",
            "description": "Restrict the response to customers with the email address.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Customers",
                  "description": "A collection of the store's customers.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "customers": {
                      "type": "array",
                      "title": "Customers",
                      "description": "An array of objects, each representing a customer of a store.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Customer",
                        "description": "Information about a specific customer.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Customer Foreign ID",
                            "description": "A unique identifier for the customer.",
                            "readOnly": true
                          },
                          "email_address": {
                            "type": "string",
                            "title": "Email Address",
                            "description": "The customer's email address.",
                            "readOnly": true
                          },
                          "opt_in_status": {
                            "type": "boolean",
                            "title": "Opt-in Status",
                            "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                          },
                          "company": {
                            "type": "string",
                            "title": "Company",
                            "description": "The customer's company."
                          },
                          "first_name": {
                            "type": "string",
                            "title": "First Name",
                            "description": "The customer's first name."
                          },
                          "last_name": {
                            "type": "string",
                            "title": "Last Name",
                            "description": "The customer's last name."
                          },
                          "orders_count": {
                            "type": "integer",
                            "title": "Orders Count",
                            "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                            "readOnly": true,
                            "example": 4
                          },
                          "total_spent": {
                            "type": "number",
                            "title": "Total Spent",
                            "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                            "readOnly": true,
                            "example": 100
                          },
                          "address": {
                            "type": "object",
                            "title": "Address",
                            "description": "The customer's address.",
                            "properties": {
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The mailing address of the customer.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the customer's mailing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city the customer is located in.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The customer's state name or normalized province.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the customer's province or state.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The customer's postal or zip code.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The customer's country.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the customer's country.",
                                "example": "US"
                              }
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the customer was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the customer was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Customers",
                  "description": "A collection of the store's customers.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "customers": {
                      "type": "array",
                      "title": "Customers",
                      "description": "An array of objects, each representing a customer of a store.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Customer",
                        "description": "Information about a specific customer.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Customer Foreign ID",
                            "description": "A unique identifier for the customer.",
                            "readOnly": true
                          },
                          "email_address": {
                            "type": "string",
                            "title": "Email Address",
                            "description": "The customer's email address.",
                            "readOnly": true
                          },
                          "opt_in_status": {
                            "type": "boolean",
                            "title": "Opt-in Status",
                            "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                          },
                          "company": {
                            "type": "string",
                            "title": "Company",
                            "description": "The customer's company."
                          },
                          "first_name": {
                            "type": "string",
                            "title": "First Name",
                            "description": "The customer's first name."
                          },
                          "last_name": {
                            "type": "string",
                            "title": "Last Name",
                            "description": "The customer's last name."
                          },
                          "orders_count": {
                            "type": "integer",
                            "title": "Orders Count",
                            "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                            "readOnly": true,
                            "example": 4
                          },
                          "total_spent": {
                            "type": "number",
                            "title": "Total Spent",
                            "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                            "readOnly": true,
                            "example": 100
                          },
                          "address": {
                            "type": "object",
                            "title": "Address",
                            "description": "The customer's address.",
                            "properties": {
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The mailing address of the customer.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the customer's mailing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city the customer is located in.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The customer's state name or normalized province.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the customer's province or state.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The customer's postal or zip code.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The customer's country.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the customer's country.",
                                "example": "US"
                              }
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the customer was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the customer was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_all_store_customers",
          "methodNameCamel": "getAllStoreCustomers"
        }
      },
      "post": {
        "summary": "Add customer",
        "description": "Add a new customer to a store.",
        "operationId": "postEcommerceStoresIdCustomers",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Customer",
                "description": "Information about a specific customer.",
                "required": [
                  "id",
                  "email_address",
                  "opt_in_status"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Customer Foreign ID",
                    "description": "A unique identifier for the customer."
                  },
                  "email_address": {
                    "type": "string",
                    "title": "Email Address",
                    "description": "The customer's email address."
                  },
                  "opt_in_status": {
                    "type": "boolean",
                    "title": "Opt-in Status",
                    "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                  },
                  "company": {
                    "type": "string",
                    "title": "Company",
                    "description": "The customer's company."
                  },
                  "first_name": {
                    "type": "string",
                    "title": "First Name",
                    "description": "The customer's first name."
                  },
                  "last_name": {
                    "type": "string",
                    "title": "Last Name",
                    "description": "The customer's last name."
                  },
                  "address": {
                    "type": "object",
                    "title": "Address",
                    "description": "The customer's address.",
                    "properties": {
                      "address1": {
                        "type": "string",
                        "title": "Address Field 1",
                        "description": "The mailing address of the customer.",
                        "example": "675 Ponce de Leon Ave NE"
                      },
                      "address2": {
                        "type": "string",
                        "title": "Address Field 2",
                        "description": "An additional field for the customer's mailing address.",
                        "example": "Suite 5000"
                      },
                      "city": {
                        "type": "string",
                        "title": "City ",
                        "description": "The city the customer is located in.",
                        "example": "Atlanta"
                      },
                      "province": {
                        "type": "string",
                        "title": "Province",
                        "description": "The customer's state name or normalized province.",
                        "example": "Georgia"
                      },
                      "province_code": {
                        "type": "string",
                        "title": "Province Code",
                        "description": "The two-letter code for the customer's province or state.",
                        "example": "GA"
                      },
                      "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "The customer's postal or zip code.",
                        "example": "30308"
                      },
                      "country": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The customer's country.",
                        "example": "United States"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The two-letter code for the customer's country.",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_store_customer",
          "methodNameCamel": "addStoreCustomer"
        }
      }
    },
    "/ecommerce/stores/{store_id}/customers/{customer_id}": {
      "get": {
        "summary": "Get customer info",
        "description": "Get information about a specific customer.",
        "operationId": "getEcommerceStoresIdCustomersId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_id",
            "x-title": "Customer ID",
            "description": "The id for the customer of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_store_customer",
          "methodNameCamel": "getStoreCustomer"
        }
      },
      "put": {
        "summary": "Add or update customer",
        "description": "Add or update a customer.",
        "operationId": "putEcommerceStoresIdCustomersId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_id",
            "x-title": "Customer ID",
            "description": "The id for the customer of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Customer",
                "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                "required": [
                  "id",
                  "email_address",
                  "opt_in_status"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Customer Foreign ID",
                    "description": "A unique identifier for the customer."
                  },
                  "email_address": {
                    "type": "string",
                    "title": "Email Address",
                    "description": "The customer's email address."
                  },
                  "opt_in_status": {
                    "type": "boolean",
                    "title": "Opt-in Status",
                    "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                  },
                  "company": {
                    "type": "string",
                    "title": "Company",
                    "description": "The customer's company."
                  },
                  "first_name": {
                    "type": "string",
                    "title": "First Name",
                    "description": "The customer's first name."
                  },
                  "last_name": {
                    "type": "string",
                    "title": "Last Name",
                    "description": "The customer's last name."
                  },
                  "address": {
                    "type": "object",
                    "title": "Address",
                    "description": "The customer's address.",
                    "properties": {
                      "address1": {
                        "type": "string",
                        "title": "Address Field 1",
                        "description": "The mailing address of the customer.",
                        "example": "675 Ponce de Leon Ave NE"
                      },
                      "address2": {
                        "type": "string",
                        "title": "Address Field 2",
                        "description": "An additional field for the customer's mailing address.",
                        "example": "Suite 5000"
                      },
                      "city": {
                        "type": "string",
                        "title": "City ",
                        "description": "The city the customer is located in.",
                        "example": "Atlanta"
                      },
                      "province": {
                        "type": "string",
                        "title": "Province",
                        "description": "The customer's state name or normalized province.",
                        "example": "Georgia"
                      },
                      "province_code": {
                        "type": "string",
                        "title": "Province Code",
                        "description": "The two-letter code for the customer's province or state.",
                        "example": "GA"
                      },
                      "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "The customer's postal or zip code.",
                        "example": "30308"
                      },
                      "country": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The customer's country.",
                        "example": "United States"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The two-letter code for the customer's country.",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "set_store_customer",
          "methodNameCamel": "setStoreCustomer"
        }
      },
      "patch": {
        "summary": "Update customer",
        "description": "Update a customer.",
        "operationId": "patchEcommerceStoresIdCustomersId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_id",
            "x-title": "Customer ID",
            "description": "The id for the customer of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Customer",
                "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                "properties": {
                  "opt_in_status": {
                    "type": "boolean",
                    "title": "Opt-in Status",
                    "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                  },
                  "company": {
                    "type": "string",
                    "title": "Company",
                    "description": "The customer's company."
                  },
                  "first_name": {
                    "type": "string",
                    "title": "First Name",
                    "description": "The customer's first name."
                  },
                  "last_name": {
                    "type": "string",
                    "title": "Last Name",
                    "description": "The customer's last name."
                  },
                  "address": {
                    "type": "object",
                    "title": "Address",
                    "description": "The customer's address.",
                    "properties": {
                      "address1": {
                        "type": "string",
                        "title": "Address Field 1",
                        "description": "The mailing address of the customer.",
                        "example": "675 Ponce de Leon Ave NE"
                      },
                      "address2": {
                        "type": "string",
                        "title": "Address Field 2",
                        "description": "An additional field for the customer's mailing address.",
                        "example": "Suite 5000"
                      },
                      "city": {
                        "type": "string",
                        "title": "City ",
                        "description": "The city the customer is located in.",
                        "example": "Atlanta"
                      },
                      "province": {
                        "type": "string",
                        "title": "Province",
                        "description": "The customer's state name or normalized province.",
                        "example": "Georgia"
                      },
                      "province_code": {
                        "type": "string",
                        "title": "Province Code",
                        "description": "The two-letter code for the customer's province or state.",
                        "example": "GA"
                      },
                      "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "The customer's postal or zip code.",
                        "example": "30308"
                      },
                      "country": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The customer's country.",
                        "example": "United States"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The two-letter code for the customer's country.",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                      "readOnly": true,
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_store_customer",
          "methodNameCamel": "updateStoreCustomer"
        }
      },
      "delete": {
        "summary": "Delete customer",
        "description": "Delete a customer from a store.",
        "operationId": "deleteEcommerceStoresIdCustomersId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_id",
            "x-title": "Customer ID",
            "description": "The id for the customer of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_store_customer",
          "methodNameCamel": "deleteStoreCustomer"
        }
      }
    },
    "/ecommerce/stores/{store_id}/promo-rules": {
      "get": {
        "summary": "List promo rules",
        "description": "Get information about a store's promo rules.",
        "operationId": "getEcommerceStoresIdPromorules",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Promo Rules",
                  "description": "A collection of the store's promo rules.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "promo_rules": {
                      "type": "array",
                      "title": "Promo Rules",
                      "description": "An array of objects, each representing promo rules defined for a store.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Promo Rule",
                        "description": "Information about an Ecommerce Store's specific Promo Rule",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Promo Rule Foreign ID",
                            "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                            "example": "50% off Total Order"
                          },
                          "description": {
                            "type": "string",
                            "title": "Description",
                            "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                            "example": "Save BIG during our summer sale!"
                          },
                          "starts_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Promo Start Time",
                            "description": "The date and time when the promotion is in effect in ISO 8601 format."
                          },
                          "ends_at": {
                            "type": "string",
                            "format": "Promo date-time",
                            "title": "End Time",
                            "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                          },
                          "amount": {
                            "type": "number",
                            "title": "Amount",
                            "format": "float",
                            "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                            "example": 0.5
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "Type of discount. For free shipping set type to fixed.",
                            "enum": [
                              "fixed",
                              "percentage"
                            ]
                          },
                          "target": {
                            "type": "string",
                            "title": "Target",
                            "description": "The target that the discount applies to.",
                            "enum": [
                              "per_item",
                              "total",
                              "shipping"
                            ]
                          },
                          "enabled": {
                            "type": "boolean",
                            "title": "Enabled",
                            "description": "Whether the promo rule is currently enabled.",
                            "example": true
                          },
                          "created_at_foreign": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Foreign Create Time",
                            "description": "The date and time the promotion was created in ISO 8601 format."
                          },
                          "updated_at_foreign": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Foreign Update Time",
                            "description": "The date and time the promotion was updated in ISO 8601 format."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Promo Rules",
                  "description": "A collection of the store's promo rules.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "promo_rules": {
                      "type": "array",
                      "title": "Promo Rules",
                      "description": "An array of objects, each representing promo rules defined for a store.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Promo Rule",
                        "description": "Information about an Ecommerce Store's specific Promo Rule",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Promo Rule Foreign ID",
                            "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                            "example": "50% off Total Order"
                          },
                          "description": {
                            "type": "string",
                            "title": "Description",
                            "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                            "example": "Save BIG during our summer sale!"
                          },
                          "starts_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Promo Start Time",
                            "description": "The date and time when the promotion is in effect in ISO 8601 format."
                          },
                          "ends_at": {
                            "type": "string",
                            "format": "Promo date-time",
                            "title": "End Time",
                            "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                          },
                          "amount": {
                            "type": "number",
                            "title": "Amount",
                            "format": "float",
                            "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                            "example": 0.5
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "Type of discount. For free shipping set type to fixed.",
                            "enum": [
                              "fixed",
                              "percentage"
                            ]
                          },
                          "target": {
                            "type": "string",
                            "title": "Target",
                            "description": "The target that the discount applies to.",
                            "enum": [
                              "per_item",
                              "total",
                              "shipping"
                            ]
                          },
                          "enabled": {
                            "type": "boolean",
                            "title": "Enabled",
                            "description": "Whether the promo rule is currently enabled.",
                            "example": true
                          },
                          "created_at_foreign": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Foreign Create Time",
                            "description": "The date and time the promotion was created in ISO 8601 format."
                          },
                          "updated_at_foreign": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Foreign Update Time",
                            "description": "The date and time the promotion was updated in ISO 8601 format."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "list_promo_rules",
          "methodNameCamel": "listPromoRules"
        }
      },
      "post": {
        "summary": "Add promo rule",
        "description": "Add a new promo rule to a store.",
        "operationId": "postEcommerceStoresIdPromorules",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Promo Rule",
                "description": "Information about an Ecommerce Store's specific Promo Rule.",
                "required": [
                  "id",
                  "description",
                  "amount",
                  "type",
                  "target"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Promo Rule Foreign ID",
                    "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title",
                    "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                    "example": "50% off Total Order"
                  },
                  "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                    "example": "Save BIG during our summer sale!"
                  },
                  "starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Promo Start Time",
                    "description": "The date and time when the promotion is in effect in ISO 8601 format."
                  },
                  "ends_at": {
                    "type": "string",
                    "format": "Promo date-time",
                    "title": "End Time",
                    "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                  },
                  "amount": {
                    "type": "number",
                    "title": "Amount",
                    "format": "float",
                    "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                    "example": 0.5
                  },
                  "type": {
                    "type": "string",
                    "title": "Type",
                    "description": "Type of discount. For free shipping set type to fixed.",
                    "enum": [
                      "fixed",
                      "percentage"
                    ]
                  },
                  "target": {
                    "type": "string",
                    "title": "Target",
                    "description": "The target that the discount applies to.",
                    "enum": [
                      "per_item",
                      "total",
                      "shipping"
                    ]
                  },
                  "enabled": {
                    "type": "boolean",
                    "title": "Enabled",
                    "description": "Whether the promo rule is currently enabled.",
                    "example": true
                  },
                  "created_at_foreign": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Foreign Create Time",
                    "description": "The date and time the promotion was created in ISO 8601 format."
                  },
                  "updated_at_foreign": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Foreign Update Time",
                    "description": "The date and time the promotion was updated in ISO 8601 format."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Rule",
                  "description": "Information about an Ecommerce Store's specific Promo Rule",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Rule Foreign ID",
                      "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                      "example": "50% off Total Order"
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                      "example": "Save BIG during our summer sale!"
                    },
                    "starts_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Promo Start Time",
                      "description": "The date and time when the promotion is in effect in ISO 8601 format."
                    },
                    "ends_at": {
                      "type": "string",
                      "format": "Promo date-time",
                      "title": "End Time",
                      "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                    },
                    "amount": {
                      "type": "number",
                      "title": "Amount",
                      "format": "float",
                      "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                      "example": 0.5
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "Type of discount. For free shipping set type to fixed.",
                      "enum": [
                        "fixed",
                        "percentage"
                      ]
                    },
                    "target": {
                      "type": "string",
                      "title": "Target",
                      "description": "The target that the discount applies to.",
                      "enum": [
                        "per_item",
                        "total",
                        "shipping"
                      ]
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo rule is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Rule",
                  "description": "Information about an Ecommerce Store's specific Promo Rule",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Rule Foreign ID",
                      "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                      "example": "50% off Total Order"
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                      "example": "Save BIG during our summer sale!"
                    },
                    "starts_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Promo Start Time",
                      "description": "The date and time when the promotion is in effect in ISO 8601 format."
                    },
                    "ends_at": {
                      "type": "string",
                      "format": "Promo date-time",
                      "title": "End Time",
                      "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                    },
                    "amount": {
                      "type": "number",
                      "title": "Amount",
                      "format": "float",
                      "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                      "example": 0.5
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "Type of discount. For free shipping set type to fixed.",
                      "enum": [
                        "fixed",
                        "percentage"
                      ]
                    },
                    "target": {
                      "type": "string",
                      "title": "Target",
                      "description": "The target that the discount applies to.",
                      "enum": [
                        "per_item",
                        "total",
                        "shipping"
                      ]
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo rule is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_promo_rules",
          "methodNameCamel": "addPromoRules"
        }
      }
    },
    "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}": {
      "get": {
        "summary": "Get promo rule",
        "description": "Get information about a specific promo rule.",
        "operationId": "getEcommerceStoresIdPromorulesId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_rule_id",
            "x-title": "Promo Rule ID",
            "description": "The id for the promo rule of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Rule",
                  "description": "Information about an Ecommerce Store's specific Promo Rule",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Rule Foreign ID",
                      "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                      "example": "50% off Total Order"
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                      "example": "Save BIG during our summer sale!"
                    },
                    "starts_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Promo Start Time",
                      "description": "The date and time when the promotion is in effect in ISO 8601 format."
                    },
                    "ends_at": {
                      "type": "string",
                      "format": "Promo date-time",
                      "title": "End Time",
                      "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                    },
                    "amount": {
                      "type": "number",
                      "title": "Amount",
                      "format": "float",
                      "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                      "example": 0.5
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "Type of discount. For free shipping set type to fixed.",
                      "enum": [
                        "fixed",
                        "percentage"
                      ]
                    },
                    "target": {
                      "type": "string",
                      "title": "Target",
                      "description": "The target that the discount applies to.",
                      "enum": [
                        "per_item",
                        "total",
                        "shipping"
                      ]
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo rule is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Rule",
                  "description": "Information about an Ecommerce Store's specific Promo Rule",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Rule Foreign ID",
                      "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                      "example": "50% off Total Order"
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                      "example": "Save BIG during our summer sale!"
                    },
                    "starts_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Promo Start Time",
                      "description": "The date and time when the promotion is in effect in ISO 8601 format."
                    },
                    "ends_at": {
                      "type": "string",
                      "format": "Promo date-time",
                      "title": "End Time",
                      "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                    },
                    "amount": {
                      "type": "number",
                      "title": "Amount",
                      "format": "float",
                      "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                      "example": 0.5
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "Type of discount. For free shipping set type to fixed.",
                      "enum": [
                        "fixed",
                        "percentage"
                      ]
                    },
                    "target": {
                      "type": "string",
                      "title": "Target",
                      "description": "The target that the discount applies to.",
                      "enum": [
                        "per_item",
                        "total",
                        "shipping"
                      ]
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo rule is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_promo_rule",
          "methodNameCamel": "getPromoRule"
        }
      },
      "patch": {
        "summary": "Update promo rule",
        "description": "Update a promo rule.",
        "operationId": "patchEcommerceStoresIdPromorulesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_rule_id",
            "x-title": "Promo Rule ID",
            "description": "The id for the promo rule of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Promo Rule",
                "description": "Information about an Ecommerce Store's specific Promo Rule.",
                "properties": {
                  "title": {
                    "type": "string",
                    "title": "Title",
                    "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                    "example": "50% off Total Order"
                  },
                  "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                    "example": "Save BIG during our summer sale!"
                  },
                  "starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Promo Start Time",
                    "description": "The date and time when the promotion is in effect in ISO 8601 format."
                  },
                  "ends_at": {
                    "type": "string",
                    "format": "Promo date-time",
                    "title": "End Time",
                    "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                  },
                  "amount": {
                    "type": "number",
                    "title": "Amount",
                    "format": "float",
                    "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                    "example": 0.5
                  },
                  "type": {
                    "type": "string",
                    "title": "Type",
                    "description": "Type of discount. For free shipping set type to fixed.",
                    "enum": [
                      "fixed",
                      "percentage"
                    ]
                  },
                  "target": {
                    "type": "string",
                    "title": "Target",
                    "description": "The target that the discount applies to.",
                    "enum": [
                      "per_item",
                      "total",
                      "shipping"
                    ]
                  },
                  "enabled": {
                    "type": "boolean",
                    "title": "Enabled",
                    "description": "Whether the promo rule is currently enabled.",
                    "example": true
                  },
                  "created_at_foreign": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Foreign Create Time",
                    "description": "The date and time the promotion was created in ISO 8601 format."
                  },
                  "updated_at_foreign": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Foreign Update Time",
                    "description": "The date and time the promotion was updated in ISO 8601 format."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Rule",
                  "description": "Information about an Ecommerce Store's specific Promo Rule",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Rule Foreign ID",
                      "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                      "example": "50% off Total Order"
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                      "example": "Save BIG during our summer sale!"
                    },
                    "starts_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Promo Start Time",
                      "description": "The date and time when the promotion is in effect in ISO 8601 format."
                    },
                    "ends_at": {
                      "type": "string",
                      "format": "Promo date-time",
                      "title": "End Time",
                      "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                    },
                    "amount": {
                      "type": "number",
                      "title": "Amount",
                      "format": "float",
                      "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                      "example": 0.5
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "Type of discount. For free shipping set type to fixed.",
                      "enum": [
                        "fixed",
                        "percentage"
                      ]
                    },
                    "target": {
                      "type": "string",
                      "title": "Target",
                      "description": "The target that the discount applies to.",
                      "enum": [
                        "per_item",
                        "total",
                        "shipping"
                      ]
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo rule is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Rule",
                  "description": "Information about an Ecommerce Store's specific Promo Rule",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Rule Foreign ID",
                      "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.",
                      "example": "50% off Total Order"
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                      "example": "Save BIG during our summer sale!"
                    },
                    "starts_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Promo Start Time",
                      "description": "The date and time when the promotion is in effect in ISO 8601 format."
                    },
                    "ends_at": {
                      "type": "string",
                      "format": "Promo date-time",
                      "title": "End Time",
                      "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                    },
                    "amount": {
                      "type": "number",
                      "title": "Amount",
                      "format": "float",
                      "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                      "example": 0.5
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "Type of discount. For free shipping set type to fixed.",
                      "enum": [
                        "fixed",
                        "percentage"
                      ]
                    },
                    "target": {
                      "type": "string",
                      "title": "Target",
                      "description": "The target that the discount applies to.",
                      "enum": [
                        "per_item",
                        "total",
                        "shipping"
                      ]
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo rule is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_promo_rule",
          "methodNameCamel": "updatePromoRule"
        }
      },
      "delete": {
        "summary": "Delete promo rule",
        "description": "Delete a promo rule from a store.",
        "operationId": "deleteEcommerceStoresIdPromorulesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_rule_id",
            "x-title": "Promo Rule ID",
            "description": "The id for the promo rule of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_promo_rule",
          "methodNameCamel": "deletePromoRule"
        }
      }
    },
    "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes": {
      "get": {
        "summary": "List promo codes",
        "description": "Get information about a store's promo codes.",
        "operationId": "getEcommerceStoresIdPromocodes",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "promo_rule_id",
            "x-title": "Promo Rule ID",
            "description": "The id for the promo rule of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Promo Codes",
                  "description": "A collection of the store's promo codes.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "promo_codes": {
                      "type": "array",
                      "title": "Promo Codes",
                      "description": "An array of objects, each representing promo codes defined for a store.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Promo Code",
                        "description": "Information about an Ecommerce Store's specific Promo Code",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Promo Code Foreign ID",
                            "description": "A unique identifier for the promo Code.",
                            "readOnly": true
                          },
                          "code": {
                            "type": "string",
                            "title": "Promo Code",
                            "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                            "example": "summersale"
                          },
                          "redemption_url": {
                            "type": "string",
                            "title": "Redemption Url",
                            "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                            "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                          },
                          "usage_count": {
                            "type": "integer",
                            "title": "Promo Code Usage Count",
                            "description": "Number of times promo code has been used."
                          },
                          "enabled": {
                            "type": "boolean",
                            "title": "Enabled",
                            "description": "Whether the promo code is currently enabled.",
                            "example": true
                          },
                          "created_at_foreign": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Foreign Create Time",
                            "description": "The date and time the promotion was created in ISO 8601 format."
                          },
                          "updated_at_foreign": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Foreign Update Time",
                            "description": "The date and time the promotion was updated in ISO 8601 format."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Promo Codes",
                  "description": "A collection of the store's promo codes.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "promo_codes": {
                      "type": "array",
                      "title": "Promo Codes",
                      "description": "An array of objects, each representing promo codes defined for a store.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Promo Code",
                        "description": "Information about an Ecommerce Store's specific Promo Code",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Promo Code Foreign ID",
                            "description": "A unique identifier for the promo Code.",
                            "readOnly": true
                          },
                          "code": {
                            "type": "string",
                            "title": "Promo Code",
                            "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                            "example": "summersale"
                          },
                          "redemption_url": {
                            "type": "string",
                            "title": "Redemption Url",
                            "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                            "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                          },
                          "usage_count": {
                            "type": "integer",
                            "title": "Promo Code Usage Count",
                            "description": "Number of times promo code has been used."
                          },
                          "enabled": {
                            "type": "boolean",
                            "title": "Enabled",
                            "description": "Whether the promo code is currently enabled.",
                            "example": true
                          },
                          "created_at_foreign": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Foreign Create Time",
                            "description": "The date and time the promotion was created in ISO 8601 format."
                          },
                          "updated_at_foreign": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Foreign Update Time",
                            "description": "The date and time the promotion was updated in ISO 8601 format."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_promo_codes",
          "methodNameCamel": "getPromoCodes"
        }
      },
      "post": {
        "summary": "Add promo code",
        "description": "Add a new promo code to a store.",
        "operationId": "postEcommerceStoresIdPromocodes",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_rule_id",
            "x-title": "Promo Rule ID",
            "description": "The id for the promo rule of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Promo Code",
                "description": "Information about an Ecommerce Store's specific Promo Code.",
                "required": [
                  "id",
                  "code",
                  "redemption_url"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Promo Code Foreign ID",
                    "description": "A unique identifier for the promo code. Restricted to UTF-8 characters with max length 50."
                  },
                  "code": {
                    "type": "string",
                    "title": "Promo Code",
                    "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                    "example": "summersale"
                  },
                  "redemption_url": {
                    "type": "string",
                    "title": "Redemption Url",
                    "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                    "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                  },
                  "usage_count": {
                    "type": "integer",
                    "title": "Promo Code Usage Count",
                    "description": "Number of times promo code has been used."
                  },
                  "enabled": {
                    "type": "boolean",
                    "title": "Enabled",
                    "description": "Whether the promo code is currently enabled.",
                    "example": true
                  },
                  "created_at_foreign": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Foreign Create Time",
                    "description": "The date and time the promotion was created in ISO 8601 format."
                  },
                  "updated_at_foreign": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Foreign Update Time",
                    "description": "The date and time the promotion was updated in ISO 8601 format."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Code",
                  "description": "Information about an Ecommerce Store's specific Promo Code",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Code Foreign ID",
                      "description": "A unique identifier for the promo Code.",
                      "readOnly": true
                    },
                    "code": {
                      "type": "string",
                      "title": "Promo Code",
                      "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                      "example": "summersale"
                    },
                    "redemption_url": {
                      "type": "string",
                      "title": "Redemption Url",
                      "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                      "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                    },
                    "usage_count": {
                      "type": "integer",
                      "title": "Promo Code Usage Count",
                      "description": "Number of times promo code has been used."
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo code is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Code",
                  "description": "Information about an Ecommerce Store's specific Promo Code",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Code Foreign ID",
                      "description": "A unique identifier for the promo Code.",
                      "readOnly": true
                    },
                    "code": {
                      "type": "string",
                      "title": "Promo Code",
                      "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                      "example": "summersale"
                    },
                    "redemption_url": {
                      "type": "string",
                      "title": "Redemption Url",
                      "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                      "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                    },
                    "usage_count": {
                      "type": "integer",
                      "title": "Promo Code Usage Count",
                      "description": "Number of times promo code has been used."
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo code is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_promo_code",
          "methodNameCamel": "addPromoCode"
        }
      }
    },
    "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}": {
      "get": {
        "summary": "Get promo code",
        "description": "Get information about a specific promo code.",
        "operationId": "getEcommerceStoresIdPromocodesId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_rule_id",
            "x-title": "Promo Rule ID",
            "description": "The id for the promo rule of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_code_id",
            "x-title": "Promo Code ID",
            "description": "The id for the promo code of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Code",
                  "description": "Information about an Ecommerce Store's specific Promo Code",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Code Foreign ID",
                      "description": "A unique identifier for the promo Code.",
                      "readOnly": true
                    },
                    "code": {
                      "type": "string",
                      "title": "Promo Code",
                      "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                      "example": "summersale"
                    },
                    "redemption_url": {
                      "type": "string",
                      "title": "Redemption Url",
                      "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                      "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                    },
                    "usage_count": {
                      "type": "integer",
                      "title": "Promo Code Usage Count",
                      "description": "Number of times promo code has been used."
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo code is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Code",
                  "description": "Information about an Ecommerce Store's specific Promo Code",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Code Foreign ID",
                      "description": "A unique identifier for the promo Code.",
                      "readOnly": true
                    },
                    "code": {
                      "type": "string",
                      "title": "Promo Code",
                      "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                      "example": "summersale"
                    },
                    "redemption_url": {
                      "type": "string",
                      "title": "Redemption Url",
                      "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                      "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                    },
                    "usage_count": {
                      "type": "integer",
                      "title": "Promo Code Usage Count",
                      "description": "Number of times promo code has been used."
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo code is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_promo_code",
          "methodNameCamel": "getPromoCode"
        }
      },
      "patch": {
        "summary": "Update promo code",
        "description": "Update a promo code.",
        "operationId": "patchEcommerceStoresIdPromocodesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_rule_id",
            "x-title": "Promo Rule ID",
            "description": "The id for the promo rule of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_code_id",
            "x-title": "Promo Code ID",
            "description": "The id for the promo code of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Promo Code",
                "description": "Information about an Ecommerce Store's specific Promo Code.",
                "properties": {
                  "code": {
                    "type": "string",
                    "title": "Promo Code",
                    "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                    "example": "summersale"
                  },
                  "redemption_url": {
                    "type": "string",
                    "title": "Redemption Url",
                    "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                    "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                  },
                  "usage_count": {
                    "type": "integer",
                    "title": "Promo Code Usage Count",
                    "description": "Number of times promo code has been used."
                  },
                  "enabled": {
                    "type": "boolean",
                    "title": "Enabled",
                    "description": "Whether the promo code is currently enabled.",
                    "example": true
                  },
                  "created_at_foreign": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Foreign Create Time",
                    "description": "The date and time the promotion was created in ISO 8601 format."
                  },
                  "updated_at_foreign": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Foreign Update Time",
                    "description": "The date and time the promotion was updated in ISO 8601 format."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Code",
                  "description": "Information about an Ecommerce Store's specific Promo Code",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Code Foreign ID",
                      "description": "A unique identifier for the promo Code.",
                      "readOnly": true
                    },
                    "code": {
                      "type": "string",
                      "title": "Promo Code",
                      "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                      "example": "summersale"
                    },
                    "redemption_url": {
                      "type": "string",
                      "title": "Redemption Url",
                      "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                      "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                    },
                    "usage_count": {
                      "type": "integer",
                      "title": "Promo Code Usage Count",
                      "description": "Number of times promo code has been used."
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo code is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Promo Code",
                  "description": "Information about an Ecommerce Store's specific Promo Code",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Promo Code Foreign ID",
                      "description": "A unique identifier for the promo Code.",
                      "readOnly": true
                    },
                    "code": {
                      "type": "string",
                      "title": "Promo Code",
                      "description": "The discount code. Restricted to UTF-8 characters with max length 50.",
                      "example": "summersale"
                    },
                    "redemption_url": {
                      "type": "string",
                      "title": "Redemption Url",
                      "description": "The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.",
                      "example": "A url that applies promo code directly at checkout or a url that points to sale page or store url"
                    },
                    "usage_count": {
                      "type": "integer",
                      "title": "Promo Code Usage Count",
                      "description": "Number of times promo code has been used."
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled",
                      "description": "Whether the promo code is currently enabled.",
                      "example": true
                    },
                    "created_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Create Time",
                      "description": "The date and time the promotion was created in ISO 8601 format."
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Foreign Update Time",
                      "description": "The date and time the promotion was updated in ISO 8601 format."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_promo_code",
          "methodNameCamel": "updatePromoCode"
        }
      },
      "delete": {
        "summary": "Delete promo code",
        "description": "Delete a promo code from a store.",
        "operationId": "deleteEcommerceStoresIdPromocodesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_rule_id",
            "x-title": "Promo Rule ID",
            "description": "The id for the promo rule of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promo_code_id",
            "x-title": "Promo Code ID",
            "description": "The id for the promo code of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_promo_code",
          "methodNameCamel": "deletePromoCode"
        }
      }
    },
    "/ecommerce/stores/{store_id}/orders": {
      "get": {
        "summary": "List orders",
        "description": "Get information about a store's orders.",
        "operationId": "getEcommerceStoresIdOrders",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_id",
            "x-title": "Customer ID",
            "in": "query",
            "required": false,
            "description": "Restrict results to orders made by a specific customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_outreach",
            "x-title": "Has Outreach",
            "in": "query",
            "required": false,
            "description": "Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "campaign_id",
            "x-title": "Campaign ID",
            "in": "query",
            "description": "Restrict results to orders with a specific `campaign_id` value.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outreach_id",
            "x-title": "Outreach ID",
            "in": "query",
            "description": "Restrict results to orders with a specific `outreach_id` value.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Orders",
                  "description": "A collection of orders in a store.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The unique identifier for the store."
                    },
                    "orders": {
                      "type": "array",
                      "title": "Orders",
                      "description": "An array of objects, each representing an order in a store.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order",
                        "description": "Information about a specific order.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Foreign ID",
                            "description": "A unique identifier for the order.",
                            "readOnly": true
                          },
                          "customer": {
                            "type": "object",
                            "title": "E-commerce Customer",
                            "description": "Information about a specific customer.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Customer Foreign ID",
                                "description": "A unique identifier for the customer.",
                                "readOnly": true
                              },
                              "email_address": {
                                "type": "string",
                                "title": "Email Address",
                                "description": "The customer's email address.",
                                "readOnly": true
                              },
                              "opt_in_status": {
                                "type": "boolean",
                                "title": "Opt-in Status",
                                "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The customer's company."
                              },
                              "first_name": {
                                "type": "string",
                                "title": "First Name",
                                "description": "The customer's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "title": "Last Name",
                                "description": "The customer's last name."
                              },
                              "orders_count": {
                                "type": "integer",
                                "title": "Orders Count",
                                "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 4
                              },
                              "total_spent": {
                                "type": "number",
                                "title": "Total Spent",
                                "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 100
                              },
                              "address": {
                                "type": "object",
                                "title": "Address",
                                "description": "The customer's address.",
                                "properties": {
                                  "address1": {
                                    "type": "string",
                                    "title": "Address Field 1",
                                    "description": "The mailing address of the customer.",
                                    "example": "675 Ponce de Leon Ave NE"
                                  },
                                  "address2": {
                                    "type": "string",
                                    "title": "Address Field 2",
                                    "description": "An additional field for the customer's mailing address.",
                                    "example": "Suite 5000"
                                  },
                                  "city": {
                                    "type": "string",
                                    "title": "City ",
                                    "description": "The city the customer is located in.",
                                    "example": "Atlanta"
                                  },
                                  "province": {
                                    "type": "string",
                                    "title": "Province",
                                    "description": "The customer's state name or normalized province.",
                                    "example": "Georgia"
                                  },
                                  "province_code": {
                                    "type": "string",
                                    "title": "Province Code",
                                    "description": "The two-letter code for the customer's province or state.",
                                    "example": "GA"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "title": "Postal Code",
                                    "description": "The customer's postal or zip code.",
                                    "example": "30308"
                                  },
                                  "country": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The customer's country.",
                                    "example": "United States"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The two-letter code for the customer's country.",
                                    "example": "US"
                                  }
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "title": "Creation Time",
                                "format": "date-time",
                                "description": "The date and time the customer was created in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "updated_at": {
                                "type": "string",
                                "title": "Update Time",
                                "format": "date-time",
                                "description": "The date and time the customer was last updated in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "_links": {
                                "title": "Links",
                                "description": "A list of link types and descriptions for the API schema documents.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Resource Link",
                                  "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                  "properties": {
                                    "rel": {
                                      "type": "string",
                                      "title": "Rel",
                                      "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                      "readOnly": true
                                    },
                                    "href": {
                                      "type": "string",
                                      "title": "Href",
                                      "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                      "readOnly": true
                                    },
                                    "method": {
                                      "type": "string",
                                      "title": "Method",
                                      "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                      "enum": [
                                        "GET",
                                        "POST",
                                        "PUT",
                                        "PATCH",
                                        "DELETE",
                                        "OPTIONS",
                                        "HEAD"
                                      ],
                                      "readOnly": true
                                    },
                                    "targetSchema": {
                                      "type": "string",
                                      "title": "Target Schema",
                                      "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                      "readOnly": true
                                    },
                                    "schema": {
                                      "type": "string",
                                      "title": "Schema",
                                      "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "store_id": {
                            "type": "string",
                            "title": "Store Foreign ID",
                            "description": "The unique identifier for the store.",
                            "readOnly": true
                          },
                          "campaign_id": {
                            "type": "string",
                            "title": "Campaign ID",
                            "description": "A string that uniquely identifies the campaign associated with an order.",
                            "example": "839488a60b"
                          },
                          "landing_site": {
                            "type": "string",
                            "title": "Landing Site",
                            "description": "The URL for the page where the buyer landed when entering the shop.",
                            "example": "http://www.example.com?source=abc"
                          },
                          "financial_status": {
                            "type": "string",
                            "title": "Financial Status",
                            "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                          },
                          "fulfillment_status": {
                            "type": "string",
                            "title": "Fulfillment Status",
                            "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency Code",
                            "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                          },
                          "order_total": {
                            "type": "number",
                            "title": "Order Total",
                            "description": "The order total associated with an order."
                          },
                          "order_url": {
                            "type": "string",
                            "title": "Order URL",
                            "description": "The URL for the order."
                          },
                          "discount_total": {
                            "type": "number",
                            "title": "Discount Total",
                            "description": "The total amount of the discounts to be applied to the price of the order."
                          },
                          "tax_total": {
                            "type": "number",
                            "title": "Tax Total",
                            "description": "The tax total associated with an order."
                          },
                          "shipping_total": {
                            "type": "number",
                            "title": "Shipping Total",
                            "description": "The shipping total for the order."
                          },
                          "tracking_code": {
                            "type": "string",
                            "enum": [
                              "prec"
                            ],
                            "title": "Tracking Code",
                            "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                          },
                          "processed_at_foreign": {
                            "type": "string",
                            "title": "Foreign Processed Time",
                            "format": "date-time",
                            "description": "The date and time the order was processed in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "cancelled_at_foreign": {
                            "type": "string",
                            "title": "Foreign Cancel Time",
                            "format": "date-time",
                            "description": "The date and time the order was cancelled in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at_foreign": {
                            "type": "string",
                            "title": "Foreign Update Time",
                            "format": "date-time",
                            "description": "The date and time the order was updated in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "shipping_address": {
                            "type": "object",
                            "title": "Shipping Address",
                            "description": "The shipping address for the order.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "The name associated with an order's shipping address.",
                                "example": "Freddie Chimpenheimer"
                              },
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The shipping address for the order.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the shipping address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city in the order's shipping address.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The state or normalized province in the order's shipping address.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the province or state the order's shipping address is located in.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The postal or zip code in the order's shipping address.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The country in the order's shipping address.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the country in the shipping address.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude for the shipping address location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude for the shipping address location.",
                                "example": 45.427408
                              },
                              "phone": {
                                "type": "string",
                                "title": "Phone Number",
                                "description": "The phone number for the order's shipping address",
                                "example": "8675309"
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The company associated with an order's shipping address."
                              }
                            }
                          },
                          "billing_address": {
                            "type": "object",
                            "title": "Billing Address",
                            "description": "The billing address for the order.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "The name associated with an order's billing address.",
                                "example": "Freddie Chimpenheimer"
                              },
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The billing address for the order.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the billing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city in the billing address.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The state or normalized province in the billing address.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the province or state in the billing address.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The postal or zip code in the billing address.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The country in the billing address.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the country in the billing address.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude for the billing address location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude for the billing address location.",
                                "example": 45.427408
                              },
                              "phone": {
                                "type": "string",
                                "title": "Phone Number",
                                "description": "The phone number for the billing address.",
                                "example": "8675309"
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The company associated with the billing address."
                              }
                            }
                          },
                          "promos": {
                            "type": "array",
                            "title": "Promos",
                            "description": "The promo codes applied on the order",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "title": "Code",
                                  "description": "The Promo Code"
                                },
                                "amount_discounted": {
                                  "type": "number",
                                  "title": "Amount Discounted",
                                  "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                                },
                                "type": {
                                  "type": "string",
                                  "title": "Type",
                                  "description": "Type of discount. For free shipping set type to fixed",
                                  "enum": [
                                    "fixed",
                                    "percentage"
                                  ]
                                }
                              }
                            }
                          },
                          "lines": {
                            "type": "array",
                            "title": "Order Line Items",
                            "description": "An array of the order's line items.",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Order Line Item",
                              "description": "Information about a specific order line.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Order Line Item Foreign ID",
                                  "description": "A unique identifier for an order line item.",
                                  "readOnly": true
                                },
                                "product_id": {
                                  "type": "string",
                                  "title": "Order Line Item Product Foreign ID",
                                  "description": "A unique identifier for the product associated with an order line item."
                                },
                                "product_title": {
                                  "type": "string",
                                  "title": "Order Line Item Product Title",
                                  "description": "The name of the product for an order line item.",
                                  "readOnly": true
                                },
                                "product_variant_id": {
                                  "type": "string",
                                  "title": "Order Line Item Product Variant Foreign ID",
                                  "description": "A unique identifier for the product variant associated with an order line item."
                                },
                                "product_variant_title": {
                                  "type": "string",
                                  "title": "Order Line Item Product Variant Title",
                                  "description": "The name of the product variant for an order line item.",
                                  "readOnly": true
                                },
                                "image_url": {
                                  "type": "string",
                                  "title": "Product Image URL",
                                  "description": "The image URL for a product.",
                                  "readOnly": true
                                },
                                "quantity": {
                                  "type": "integer",
                                  "title": "Quantity",
                                  "description": "The order line item quantity."
                                },
                                "price": {
                                  "type": "number",
                                  "title": "Price",
                                  "description": "The order line item price."
                                },
                                "discount": {
                                  "type": "number",
                                  "title": "Discount",
                                  "description": "The total discount amount applied to a line item."
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "outreach": {
                            "type": "object",
                            "title": "Outreach",
                            "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Outreach ID",
                                "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                                "example": "839488a60b"
                              },
                              "name": {
                                "type": "string",
                                "title": "Outreach name",
                                "description": "The name for the outreach.",
                                "example": "Freddie's Jokes",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "title": "Outreach type",
                                "description": "The type of the outreach.",
                                "example": "regular",
                                "readOnly": true
                              },
                              "published_time": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Outreach published time",
                                "description": "The date and time the Outreach was published in ISO 8601 format.",
                                "example": "2017-06-06T13:56:12+00:00",
                                "readOnly": true
                              }
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Orders",
                  "description": "A collection of orders in a store.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The unique identifier for the store."
                    },
                    "orders": {
                      "type": "array",
                      "title": "Orders",
                      "description": "An array of objects, each representing an order in a store.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order",
                        "description": "Information about a specific order.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Foreign ID",
                            "description": "A unique identifier for the order.",
                            "readOnly": true
                          },
                          "customer": {
                            "type": "object",
                            "title": "E-commerce Customer",
                            "description": "Information about a specific customer.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Customer Foreign ID",
                                "description": "A unique identifier for the customer.",
                                "readOnly": true
                              },
                              "email_address": {
                                "type": "string",
                                "title": "Email Address",
                                "description": "The customer's email address.",
                                "readOnly": true
                              },
                              "opt_in_status": {
                                "type": "boolean",
                                "title": "Opt-in Status",
                                "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The customer's company."
                              },
                              "first_name": {
                                "type": "string",
                                "title": "First Name",
                                "description": "The customer's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "title": "Last Name",
                                "description": "The customer's last name."
                              },
                              "orders_count": {
                                "type": "integer",
                                "title": "Orders Count",
                                "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 4
                              },
                              "total_spent": {
                                "type": "number",
                                "title": "Total Spent",
                                "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                                "readOnly": true,
                                "example": 100
                              },
                              "address": {
                                "type": "object",
                                "title": "Address",
                                "description": "The customer's address.",
                                "properties": {
                                  "address1": {
                                    "type": "string",
                                    "title": "Address Field 1",
                                    "description": "The mailing address of the customer.",
                                    "example": "675 Ponce de Leon Ave NE"
                                  },
                                  "address2": {
                                    "type": "string",
                                    "title": "Address Field 2",
                                    "description": "An additional field for the customer's mailing address.",
                                    "example": "Suite 5000"
                                  },
                                  "city": {
                                    "type": "string",
                                    "title": "City ",
                                    "description": "The city the customer is located in.",
                                    "example": "Atlanta"
                                  },
                                  "province": {
                                    "type": "string",
                                    "title": "Province",
                                    "description": "The customer's state name or normalized province.",
                                    "example": "Georgia"
                                  },
                                  "province_code": {
                                    "type": "string",
                                    "title": "Province Code",
                                    "description": "The two-letter code for the customer's province or state.",
                                    "example": "GA"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "title": "Postal Code",
                                    "description": "The customer's postal or zip code.",
                                    "example": "30308"
                                  },
                                  "country": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The customer's country.",
                                    "example": "United States"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "title": "Country Code",
                                    "description": "The two-letter code for the customer's country.",
                                    "example": "US"
                                  }
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "title": "Creation Time",
                                "format": "date-time",
                                "description": "The date and time the customer was created in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "updated_at": {
                                "type": "string",
                                "title": "Update Time",
                                "format": "date-time",
                                "description": "The date and time the customer was last updated in ISO 8601 format.",
                                "readOnly": true,
                                "example": "2015-07-15 19:28:00"
                              },
                              "_links": {
                                "title": "Links",
                                "description": "A list of link types and descriptions for the API schema documents.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Resource Link",
                                  "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                  "properties": {
                                    "rel": {
                                      "type": "string",
                                      "title": "Rel",
                                      "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                      "readOnly": true
                                    },
                                    "href": {
                                      "type": "string",
                                      "title": "Href",
                                      "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                      "readOnly": true
                                    },
                                    "method": {
                                      "type": "string",
                                      "title": "Method",
                                      "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                      "enum": [
                                        "GET",
                                        "POST",
                                        "PUT",
                                        "PATCH",
                                        "DELETE",
                                        "OPTIONS",
                                        "HEAD"
                                      ],
                                      "readOnly": true
                                    },
                                    "targetSchema": {
                                      "type": "string",
                                      "title": "Target Schema",
                                      "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                      "readOnly": true
                                    },
                                    "schema": {
                                      "type": "string",
                                      "title": "Schema",
                                      "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "store_id": {
                            "type": "string",
                            "title": "Store Foreign ID",
                            "description": "The unique identifier for the store.",
                            "readOnly": true
                          },
                          "campaign_id": {
                            "type": "string",
                            "title": "Campaign ID",
                            "description": "A string that uniquely identifies the campaign associated with an order.",
                            "example": "839488a60b"
                          },
                          "landing_site": {
                            "type": "string",
                            "title": "Landing Site",
                            "description": "The URL for the page where the buyer landed when entering the shop.",
                            "example": "http://www.example.com?source=abc"
                          },
                          "financial_status": {
                            "type": "string",
                            "title": "Financial Status",
                            "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                          },
                          "fulfillment_status": {
                            "type": "string",
                            "title": "Fulfillment Status",
                            "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency Code",
                            "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                          },
                          "order_total": {
                            "type": "number",
                            "title": "Order Total",
                            "description": "The order total associated with an order."
                          },
                          "order_url": {
                            "type": "string",
                            "title": "Order URL",
                            "description": "The URL for the order."
                          },
                          "discount_total": {
                            "type": "number",
                            "title": "Discount Total",
                            "description": "The total amount of the discounts to be applied to the price of the order."
                          },
                          "tax_total": {
                            "type": "number",
                            "title": "Tax Total",
                            "description": "The tax total associated with an order."
                          },
                          "shipping_total": {
                            "type": "number",
                            "title": "Shipping Total",
                            "description": "The shipping total for the order."
                          },
                          "tracking_code": {
                            "type": "string",
                            "enum": [
                              "prec"
                            ],
                            "title": "Tracking Code",
                            "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                          },
                          "processed_at_foreign": {
                            "type": "string",
                            "title": "Foreign Processed Time",
                            "format": "date-time",
                            "description": "The date and time the order was processed in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "cancelled_at_foreign": {
                            "type": "string",
                            "title": "Foreign Cancel Time",
                            "format": "date-time",
                            "description": "The date and time the order was cancelled in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at_foreign": {
                            "type": "string",
                            "title": "Foreign Update Time",
                            "format": "date-time",
                            "description": "The date and time the order was updated in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "shipping_address": {
                            "type": "object",
                            "title": "Shipping Address",
                            "description": "The shipping address for the order.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "The name associated with an order's shipping address.",
                                "example": "Freddie Chimpenheimer"
                              },
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The shipping address for the order.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the shipping address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city in the order's shipping address.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The state or normalized province in the order's shipping address.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the province or state the order's shipping address is located in.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The postal or zip code in the order's shipping address.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The country in the order's shipping address.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the country in the shipping address.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude for the shipping address location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude for the shipping address location.",
                                "example": 45.427408
                              },
                              "phone": {
                                "type": "string",
                                "title": "Phone Number",
                                "description": "The phone number for the order's shipping address",
                                "example": "8675309"
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The company associated with an order's shipping address."
                              }
                            }
                          },
                          "billing_address": {
                            "type": "object",
                            "title": "Billing Address",
                            "description": "The billing address for the order.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "The name associated with an order's billing address.",
                                "example": "Freddie Chimpenheimer"
                              },
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The billing address for the order.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the billing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city in the billing address.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The state or normalized province in the billing address.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the province or state in the billing address.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The postal or zip code in the billing address.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The country in the billing address.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the country in the billing address.",
                                "example": "US"
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The longitude for the billing address location.",
                                "example": -75.68903
                              },
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The latitude for the billing address location.",
                                "example": 45.427408
                              },
                              "phone": {
                                "type": "string",
                                "title": "Phone Number",
                                "description": "The phone number for the billing address.",
                                "example": "8675309"
                              },
                              "company": {
                                "type": "string",
                                "title": "Company",
                                "description": "The company associated with the billing address."
                              }
                            }
                          },
                          "promos": {
                            "type": "array",
                            "title": "Promos",
                            "description": "The promo codes applied on the order",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "title": "Code",
                                  "description": "The Promo Code"
                                },
                                "amount_discounted": {
                                  "type": "number",
                                  "title": "Amount Discounted",
                                  "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                                },
                                "type": {
                                  "type": "string",
                                  "title": "Type",
                                  "description": "Type of discount. For free shipping set type to fixed",
                                  "enum": [
                                    "fixed",
                                    "percentage"
                                  ]
                                }
                              }
                            }
                          },
                          "lines": {
                            "type": "array",
                            "title": "Order Line Items",
                            "description": "An array of the order's line items.",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Order Line Item",
                              "description": "Information about a specific order line.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Order Line Item Foreign ID",
                                  "description": "A unique identifier for an order line item.",
                                  "readOnly": true
                                },
                                "product_id": {
                                  "type": "string",
                                  "title": "Order Line Item Product Foreign ID",
                                  "description": "A unique identifier for the product associated with an order line item."
                                },
                                "product_title": {
                                  "type": "string",
                                  "title": "Order Line Item Product Title",
                                  "description": "The name of the product for an order line item.",
                                  "readOnly": true
                                },
                                "product_variant_id": {
                                  "type": "string",
                                  "title": "Order Line Item Product Variant Foreign ID",
                                  "description": "A unique identifier for the product variant associated with an order line item."
                                },
                                "product_variant_title": {
                                  "type": "string",
                                  "title": "Order Line Item Product Variant Title",
                                  "description": "The name of the product variant for an order line item.",
                                  "readOnly": true
                                },
                                "image_url": {
                                  "type": "string",
                                  "title": "Product Image URL",
                                  "description": "The image URL for a product.",
                                  "readOnly": true
                                },
                                "quantity": {
                                  "type": "integer",
                                  "title": "Quantity",
                                  "description": "The order line item quantity."
                                },
                                "price": {
                                  "type": "number",
                                  "title": "Price",
                                  "description": "The order line item price."
                                },
                                "discount": {
                                  "type": "number",
                                  "title": "Discount",
                                  "description": "The total discount amount applied to a line item."
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "outreach": {
                            "type": "object",
                            "title": "Outreach",
                            "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "title": "Outreach ID",
                                "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                                "example": "839488a60b"
                              },
                              "name": {
                                "type": "string",
                                "title": "Outreach name",
                                "description": "The name for the outreach.",
                                "example": "Freddie's Jokes",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "title": "Outreach type",
                                "description": "The type of the outreach.",
                                "example": "regular",
                                "readOnly": true
                              },
                              "published_time": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Outreach published time",
                                "description": "The date and time the Outreach was published in ISO 8601 format.",
                                "example": "2017-06-06T13:56:12+00:00",
                                "readOnly": true
                              }
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_store_orders",
          "methodNameCamel": "getStoreOrders"
        }
      },
      "post": {
        "summary": "Add order",
        "description": "Add a new order to a store.",
        "operationId": "postEcommerceStoresIdOrders",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Order",
                "description": "Information about a specific order.",
                "required": [
                  "id",
                  "customer",
                  "currency_code",
                  "order_total",
                  "lines"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Order Foreign ID",
                    "description": "A unique identifier for the order."
                  },
                  "customer": {
                    "type": "object",
                    "title": "E-commerce Customer",
                    "description": "Information about a specific customer. For existing customers include only the `id` parameter in the `customer` object body.",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Customer Foreign ID",
                        "description": "A unique identifier for the customer."
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "The customer's email address."
                      },
                      "opt_in_status": {
                        "type": "boolean",
                        "title": "Opt-in Status",
                        "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                      },
                      "company": {
                        "type": "string",
                        "title": "Company",
                        "description": "The customer's company."
                      },
                      "first_name": {
                        "type": "string",
                        "title": "First Name",
                        "description": "The customer's first name."
                      },
                      "last_name": {
                        "type": "string",
                        "title": "Last Name",
                        "description": "The customer's last name."
                      },
                      "address": {
                        "type": "object",
                        "title": "Address",
                        "description": "The customer's address.",
                        "properties": {
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The mailing address of the customer.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the customer's mailing address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city the customer is located in.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The customer's state name or normalized province.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the customer's province or state.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The customer's postal or zip code.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The customer's country.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for the customer's country.",
                            "example": "US"
                          }
                        }
                      }
                    }
                  },
                  "campaign_id": {
                    "type": "string",
                    "title": "Campaign ID",
                    "description": "A string that uniquely identifies the campaign for an order.",
                    "example": "839488a60b"
                  },
                  "landing_site": {
                    "type": "string",
                    "title": "Landing Site",
                    "description": "The URL for the page where the buyer landed when entering the shop.",
                    "example": "http://www.example.com?source=abc"
                  },
                  "financial_status": {
                    "type": "string",
                    "title": "Financial Status",
                    "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                  },
                  "fulfillment_status": {
                    "type": "string",
                    "title": "Fulfillment Status",
                    "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                  },
                  "currency_code": {
                    "type": "string",
                    "title": "Currency Code",
                    "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                  },
                  "order_total": {
                    "type": "number",
                    "title": "Order Total",
                    "description": "The total for the order."
                  },
                  "order_url": {
                    "type": "string",
                    "title": "Order URL",
                    "description": "The URL for the order."
                  },
                  "discount_total": {
                    "type": "number",
                    "title": "Discount Total",
                    "description": "The total amount of the discounts to be applied to the price of the order."
                  },
                  "tax_total": {
                    "type": "number",
                    "title": "Tax Total",
                    "description": "The tax total for the order."
                  },
                  "shipping_total": {
                    "type": "number",
                    "title": "Shipping Total",
                    "description": "The shipping total for the order."
                  },
                  "tracking_code": {
                    "type": "string",
                    "enum": [
                      "prec"
                    ],
                    "title": "Tracking Code",
                    "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                  },
                  "processed_at_foreign": {
                    "type": "string",
                    "title": "Foreign Processed Time",
                    "format": "date-time",
                    "description": "The date and time the order was processed in ISO 8601 format.",
                    "example": "2015-07-15 19:28:00"
                  },
                  "cancelled_at_foreign": {
                    "type": "string",
                    "title": "Foreign Cancel Time",
                    "format": "date-time",
                    "description": "The date and time the order was cancelled in ISO 8601 format. Note: passing a value for this parameter will cancel the order being created.",
                    "example": "2015-07-15 19:28:00"
                  },
                  "updated_at_foreign": {
                    "type": "string",
                    "title": "Foreign Update Time",
                    "format": "date-time",
                    "description": "The date and time the order was updated in ISO 8601 format.",
                    "example": "2015-07-15 19:28:00"
                  },
                  "shipping_address": {
                    "type": "object",
                    "title": "Shipping Address",
                    "description": "The shipping address for the order.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name associated with an order's shipping address.",
                        "example": "Freddie Chimpenheimer"
                      },
                      "address1": {
                        "type": "string",
                        "title": "Address Field 1",
                        "description": "The shipping address for the order.",
                        "example": "675 Ponce de Leon Ave NE"
                      },
                      "address2": {
                        "type": "string",
                        "title": "Address Field 2",
                        "description": "An additional field for the shipping address.",
                        "example": "Suite 5000"
                      },
                      "city": {
                        "type": "string",
                        "title": "City ",
                        "description": "The city in the order's shipping address.",
                        "example": "Atlanta"
                      },
                      "province": {
                        "type": "string",
                        "title": "Province",
                        "description": "The state or normalized province in the order's shipping address.",
                        "example": "Georgia"
                      },
                      "province_code": {
                        "type": "string",
                        "title": "Province Code",
                        "description": "The two-letter code for the province or state in the shipping address.",
                        "example": "GA"
                      },
                      "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "The postal or zip code in the shipping address.",
                        "example": "30308"
                      },
                      "country": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The country in the shipping address.",
                        "example": "United States"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The two-letter code for the country in the shipping address.",
                        "example": "US"
                      },
                      "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "The longitude for the shipping address location.",
                        "example": -75.68903
                      },
                      "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "The latitude for the shipping address location.",
                        "example": 45.427408
                      },
                      "phone": {
                        "type": "string",
                        "title": "Phone Number",
                        "description": "The phone number for the order's shipping address.",
                        "example": "8675309"
                      },
                      "company": {
                        "type": "string",
                        "title": "Company",
                        "description": "The company associated with the shipping address."
                      }
                    }
                  },
                  "billing_address": {
                    "type": "object",
                    "title": "Billing Address",
                    "description": "The billing address for the order.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name associated with the billing address.",
                        "example": "Freddie Chimpenheimer"
                      },
                      "address1": {
                        "type": "string",
                        "title": "Address Field 1",
                        "description": "The billing address for the order.",
                        "example": "675 Ponce de Leon Ave NE"
                      },
                      "address2": {
                        "type": "string",
                        "title": "Address Field 2",
                        "description": "An additional field for the billing address.",
                        "example": "Suite 5000"
                      },
                      "city": {
                        "type": "string",
                        "title": "City ",
                        "description": "The city in the billing address.",
                        "example": "Atlanta"
                      },
                      "province": {
                        "type": "string",
                        "title": "Province",
                        "description": "The state or normalized province in the billing address.",
                        "example": "Georgia"
                      },
                      "province_code": {
                        "type": "string",
                        "title": "Province Code",
                        "description": "The two-letter code for the province in the billing address.",
                        "example": "GA"
                      },
                      "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "The postal or zip code in the billing address.",
                        "example": "30308"
                      },
                      "country": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The country in the billing address.",
                        "example": "United States"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The two-letter code for the country in the billing address.",
                        "example": "US"
                      },
                      "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "The longitude for the billing address location.",
                        "example": -75.68903
                      },
                      "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "The latitude for the billing address location.",
                        "example": 45.427408
                      },
                      "phone": {
                        "type": "string",
                        "title": "Phone Number",
                        "description": "The phone number for the billing address",
                        "example": "8675309"
                      },
                      "company": {
                        "type": "string",
                        "title": "Company",
                        "description": "The company associated with the billing address."
                      }
                    }
                  },
                  "promos": {
                    "type": "array",
                    "title": "Promos",
                    "description": "The promo codes applied on the order",
                    "items": {
                      "type": "object",
                      "required": [
                        "code",
                        "type",
                        "amount_discounted"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Code",
                          "description": "The Promo Code"
                        },
                        "amount_discounted": {
                          "type": "number",
                          "title": "Amount Discounted",
                          "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                        },
                        "type": {
                          "type": "string",
                          "title": "Type",
                          "description": "Type of discount. For free shipping set type to fixed",
                          "enum": [
                            "fixed",
                            "percentage"
                          ]
                        }
                      }
                    }
                  },
                  "lines": {
                    "type": "array",
                    "title": "Order Line Items",
                    "description": "An array of the order's line items.",
                    "items": {
                      "type": "object",
                      "title": "E-commerce Order Line Item",
                      "description": "Information about a specific order line.",
                      "required": [
                        "id",
                        "product_id",
                        "product_variant_id",
                        "quantity",
                        "price"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Order Line Item Foreign ID",
                          "description": "A unique identifier for the order line item."
                        },
                        "product_id": {
                          "type": "string",
                          "title": "Order Line Item Product Foreign ID",
                          "description": "A unique identifier for the product associated with the order line item."
                        },
                        "product_variant_id": {
                          "type": "string",
                          "title": "Order Line Item Product Variant Foreign ID",
                          "description": "A unique identifier for the product variant associated with the order line item."
                        },
                        "quantity": {
                          "type": "integer",
                          "title": "Quantity",
                          "description": "The quantity of an order line item."
                        },
                        "price": {
                          "type": "number",
                          "title": "Price",
                          "description": "The price of an order line item."
                        },
                        "discount": {
                          "type": "number",
                          "title": "Discount",
                          "description": "The total discount amount applied to this line item."
                        }
                      }
                    }
                  },
                  "outreach": {
                    "type": "object",
                    "title": "Outreach",
                    "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Outreach ID",
                        "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                        "example": "839488a60b"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order",
                  "description": "Information about a specific order.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Foreign ID",
                      "description": "A unique identifier for the order.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "store_id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with an order.",
                      "example": "839488a60b"
                    },
                    "landing_site": {
                      "type": "string",
                      "title": "Landing Site",
                      "description": "The URL for the page where the buyer landed when entering the shop.",
                      "example": "http://www.example.com?source=abc"
                    },
                    "financial_status": {
                      "type": "string",
                      "title": "Financial Status",
                      "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "fulfillment_status": {
                      "type": "string",
                      "title": "Fulfillment Status",
                      "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total associated with an order."
                    },
                    "order_url": {
                      "type": "string",
                      "title": "Order URL",
                      "description": "The URL for the order."
                    },
                    "discount_total": {
                      "type": "number",
                      "title": "Discount Total",
                      "description": "The total amount of the discounts to be applied to the price of the order."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The tax total associated with an order."
                    },
                    "shipping_total": {
                      "type": "number",
                      "title": "Shipping Total",
                      "description": "The shipping total for the order."
                    },
                    "tracking_code": {
                      "type": "string",
                      "enum": [
                        "prec"
                      ],
                      "title": "Tracking Code",
                      "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                    },
                    "processed_at_foreign": {
                      "type": "string",
                      "title": "Foreign Processed Time",
                      "format": "date-time",
                      "description": "The date and time the order was processed in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "cancelled_at_foreign": {
                      "type": "string",
                      "title": "Foreign Cancel Time",
                      "format": "date-time",
                      "description": "The date and time the order was cancelled in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "title": "Foreign Update Time",
                      "format": "date-time",
                      "description": "The date and time the order was updated in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "shipping_address": {
                      "type": "object",
                      "title": "Shipping Address",
                      "description": "The shipping address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's shipping address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The shipping address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the shipping address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the order's shipping address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the order's shipping address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state the order's shipping address is located in.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the order's shipping address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the order's shipping address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the shipping address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the shipping address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the shipping address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the order's shipping address",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with an order's shipping address."
                        }
                      }
                    },
                    "billing_address": {
                      "type": "object",
                      "title": "Billing Address",
                      "description": "The billing address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's billing address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The billing address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the billing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the billing address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the billing address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state in the billing address.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the billing address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the billing address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the billing address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the billing address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the billing address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the billing address.",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with the billing address."
                        }
                      }
                    },
                    "promos": {
                      "type": "array",
                      "title": "Promos",
                      "description": "The promo codes applied on the order",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "title": "Code",
                            "description": "The Promo Code"
                          },
                          "amount_discounted": {
                            "type": "number",
                            "title": "Amount Discounted",
                            "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "Type of discount. For free shipping set type to fixed",
                            "enum": [
                              "fixed",
                              "percentage"
                            ]
                          }
                        }
                      }
                    },
                    "lines": {
                      "type": "array",
                      "title": "Order Line Items",
                      "description": "An array of the order's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order Line Item",
                        "description": "Information about a specific order line.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Line Item Foreign ID",
                            "description": "A unique identifier for an order line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Order Line Item Product Foreign ID",
                            "description": "A unique identifier for the product associated with an order line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Order Line Item Product Title",
                            "description": "The name of the product for an order line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with an order line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Title",
                            "description": "The name of the product variant for an order line item.",
                            "readOnly": true
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The order line item quantity."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The order line item price."
                          },
                          "discount": {
                            "type": "number",
                            "title": "Discount",
                            "description": "The total discount amount applied to a line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "outreach": {
                      "type": "object",
                      "title": "Outreach",
                      "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Outreach ID",
                          "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                          "example": "839488a60b"
                        },
                        "name": {
                          "type": "string",
                          "title": "Outreach name",
                          "description": "The name for the outreach.",
                          "example": "Freddie's Jokes",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "title": "Outreach type",
                          "description": "The type of the outreach.",
                          "example": "regular",
                          "readOnly": true
                        },
                        "published_time": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Outreach published time",
                          "description": "The date and time the Outreach was published in ISO 8601 format.",
                          "example": "2017-06-06T13:56:12+00:00",
                          "readOnly": true
                        }
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order",
                  "description": "Information about a specific order.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Foreign ID",
                      "description": "A unique identifier for the order.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "store_id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with an order.",
                      "example": "839488a60b"
                    },
                    "landing_site": {
                      "type": "string",
                      "title": "Landing Site",
                      "description": "The URL for the page where the buyer landed when entering the shop.",
                      "example": "http://www.example.com?source=abc"
                    },
                    "financial_status": {
                      "type": "string",
                      "title": "Financial Status",
                      "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "fulfillment_status": {
                      "type": "string",
                      "title": "Fulfillment Status",
                      "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total associated with an order."
                    },
                    "order_url": {
                      "type": "string",
                      "title": "Order URL",
                      "description": "The URL for the order."
                    },
                    "discount_total": {
                      "type": "number",
                      "title": "Discount Total",
                      "description": "The total amount of the discounts to be applied to the price of the order."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The tax total associated with an order."
                    },
                    "shipping_total": {
                      "type": "number",
                      "title": "Shipping Total",
                      "description": "The shipping total for the order."
                    },
                    "tracking_code": {
                      "type": "string",
                      "enum": [
                        "prec"
                      ],
                      "title": "Tracking Code",
                      "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                    },
                    "processed_at_foreign": {
                      "type": "string",
                      "title": "Foreign Processed Time",
                      "format": "date-time",
                      "description": "The date and time the order was processed in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "cancelled_at_foreign": {
                      "type": "string",
                      "title": "Foreign Cancel Time",
                      "format": "date-time",
                      "description": "The date and time the order was cancelled in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "title": "Foreign Update Time",
                      "format": "date-time",
                      "description": "The date and time the order was updated in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "shipping_address": {
                      "type": "object",
                      "title": "Shipping Address",
                      "description": "The shipping address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's shipping address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The shipping address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the shipping address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the order's shipping address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the order's shipping address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state the order's shipping address is located in.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the order's shipping address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the order's shipping address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the shipping address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the shipping address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the shipping address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the order's shipping address",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with an order's shipping address."
                        }
                      }
                    },
                    "billing_address": {
                      "type": "object",
                      "title": "Billing Address",
                      "description": "The billing address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's billing address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The billing address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the billing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the billing address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the billing address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state in the billing address.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the billing address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the billing address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the billing address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the billing address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the billing address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the billing address.",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with the billing address."
                        }
                      }
                    },
                    "promos": {
                      "type": "array",
                      "title": "Promos",
                      "description": "The promo codes applied on the order",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "title": "Code",
                            "description": "The Promo Code"
                          },
                          "amount_discounted": {
                            "type": "number",
                            "title": "Amount Discounted",
                            "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "Type of discount. For free shipping set type to fixed",
                            "enum": [
                              "fixed",
                              "percentage"
                            ]
                          }
                        }
                      }
                    },
                    "lines": {
                      "type": "array",
                      "title": "Order Line Items",
                      "description": "An array of the order's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order Line Item",
                        "description": "Information about a specific order line.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Line Item Foreign ID",
                            "description": "A unique identifier for an order line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Order Line Item Product Foreign ID",
                            "description": "A unique identifier for the product associated with an order line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Order Line Item Product Title",
                            "description": "The name of the product for an order line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with an order line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Title",
                            "description": "The name of the product variant for an order line item.",
                            "readOnly": true
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The order line item quantity."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The order line item price."
                          },
                          "discount": {
                            "type": "number",
                            "title": "Discount",
                            "description": "The total discount amount applied to a line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "outreach": {
                      "type": "object",
                      "title": "Outreach",
                      "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Outreach ID",
                          "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                          "example": "839488a60b"
                        },
                        "name": {
                          "type": "string",
                          "title": "Outreach name",
                          "description": "The name for the outreach.",
                          "example": "Freddie's Jokes",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "title": "Outreach type",
                          "description": "The type of the outreach.",
                          "example": "regular",
                          "readOnly": true
                        },
                        "published_time": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Outreach published time",
                          "description": "The date and time the Outreach was published in ISO 8601 format.",
                          "example": "2017-06-06T13:56:12+00:00",
                          "readOnly": true
                        }
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_store_order",
          "methodNameCamel": "addStoreOrder"
        }
      }
    },
    "/ecommerce/stores/{store_id}/orders/{order_id}": {
      "get": {
        "summary": "Get order info",
        "description": "Get information about a specific order.",
        "operationId": "getEcommerceStoresIdOrdersId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "x-title": "Order ID",
            "description": "The id for the order in a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order",
                  "description": "Information about a specific order.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Foreign ID",
                      "description": "A unique identifier for the order.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "store_id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with an order.",
                      "example": "839488a60b"
                    },
                    "landing_site": {
                      "type": "string",
                      "title": "Landing Site",
                      "description": "The URL for the page where the buyer landed when entering the shop.",
                      "example": "http://www.example.com?source=abc"
                    },
                    "financial_status": {
                      "type": "string",
                      "title": "Financial Status",
                      "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "fulfillment_status": {
                      "type": "string",
                      "title": "Fulfillment Status",
                      "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total associated with an order."
                    },
                    "order_url": {
                      "type": "string",
                      "title": "Order URL",
                      "description": "The URL for the order."
                    },
                    "discount_total": {
                      "type": "number",
                      "title": "Discount Total",
                      "description": "The total amount of the discounts to be applied to the price of the order."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The tax total associated with an order."
                    },
                    "shipping_total": {
                      "type": "number",
                      "title": "Shipping Total",
                      "description": "The shipping total for the order."
                    },
                    "tracking_code": {
                      "type": "string",
                      "enum": [
                        "prec"
                      ],
                      "title": "Tracking Code",
                      "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                    },
                    "processed_at_foreign": {
                      "type": "string",
                      "title": "Foreign Processed Time",
                      "format": "date-time",
                      "description": "The date and time the order was processed in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "cancelled_at_foreign": {
                      "type": "string",
                      "title": "Foreign Cancel Time",
                      "format": "date-time",
                      "description": "The date and time the order was cancelled in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "title": "Foreign Update Time",
                      "format": "date-time",
                      "description": "The date and time the order was updated in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "shipping_address": {
                      "type": "object",
                      "title": "Shipping Address",
                      "description": "The shipping address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's shipping address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The shipping address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the shipping address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the order's shipping address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the order's shipping address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state the order's shipping address is located in.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the order's shipping address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the order's shipping address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the shipping address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the shipping address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the shipping address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the order's shipping address",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with an order's shipping address."
                        }
                      }
                    },
                    "billing_address": {
                      "type": "object",
                      "title": "Billing Address",
                      "description": "The billing address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's billing address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The billing address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the billing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the billing address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the billing address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state in the billing address.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the billing address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the billing address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the billing address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the billing address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the billing address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the billing address.",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with the billing address."
                        }
                      }
                    },
                    "promos": {
                      "type": "array",
                      "title": "Promos",
                      "description": "The promo codes applied on the order",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "title": "Code",
                            "description": "The Promo Code"
                          },
                          "amount_discounted": {
                            "type": "number",
                            "title": "Amount Discounted",
                            "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "Type of discount. For free shipping set type to fixed",
                            "enum": [
                              "fixed",
                              "percentage"
                            ]
                          }
                        }
                      }
                    },
                    "lines": {
                      "type": "array",
                      "title": "Order Line Items",
                      "description": "An array of the order's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order Line Item",
                        "description": "Information about a specific order line.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Line Item Foreign ID",
                            "description": "A unique identifier for an order line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Order Line Item Product Foreign ID",
                            "description": "A unique identifier for the product associated with an order line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Order Line Item Product Title",
                            "description": "The name of the product for an order line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with an order line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Title",
                            "description": "The name of the product variant for an order line item.",
                            "readOnly": true
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The order line item quantity."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The order line item price."
                          },
                          "discount": {
                            "type": "number",
                            "title": "Discount",
                            "description": "The total discount amount applied to a line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "outreach": {
                      "type": "object",
                      "title": "Outreach",
                      "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Outreach ID",
                          "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                          "example": "839488a60b"
                        },
                        "name": {
                          "type": "string",
                          "title": "Outreach name",
                          "description": "The name for the outreach.",
                          "example": "Freddie's Jokes",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "title": "Outreach type",
                          "description": "The type of the outreach.",
                          "example": "regular",
                          "readOnly": true
                        },
                        "published_time": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Outreach published time",
                          "description": "The date and time the Outreach was published in ISO 8601 format.",
                          "example": "2017-06-06T13:56:12+00:00",
                          "readOnly": true
                        }
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order",
                  "description": "Information about a specific order.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Foreign ID",
                      "description": "A unique identifier for the order.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "store_id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with an order.",
                      "example": "839488a60b"
                    },
                    "landing_site": {
                      "type": "string",
                      "title": "Landing Site",
                      "description": "The URL for the page where the buyer landed when entering the shop.",
                      "example": "http://www.example.com?source=abc"
                    },
                    "financial_status": {
                      "type": "string",
                      "title": "Financial Status",
                      "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "fulfillment_status": {
                      "type": "string",
                      "title": "Fulfillment Status",
                      "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total associated with an order."
                    },
                    "order_url": {
                      "type": "string",
                      "title": "Order URL",
                      "description": "The URL for the order."
                    },
                    "discount_total": {
                      "type": "number",
                      "title": "Discount Total",
                      "description": "The total amount of the discounts to be applied to the price of the order."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The tax total associated with an order."
                    },
                    "shipping_total": {
                      "type": "number",
                      "title": "Shipping Total",
                      "description": "The shipping total for the order."
                    },
                    "tracking_code": {
                      "type": "string",
                      "enum": [
                        "prec"
                      ],
                      "title": "Tracking Code",
                      "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                    },
                    "processed_at_foreign": {
                      "type": "string",
                      "title": "Foreign Processed Time",
                      "format": "date-time",
                      "description": "The date and time the order was processed in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "cancelled_at_foreign": {
                      "type": "string",
                      "title": "Foreign Cancel Time",
                      "format": "date-time",
                      "description": "The date and time the order was cancelled in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "title": "Foreign Update Time",
                      "format": "date-time",
                      "description": "The date and time the order was updated in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "shipping_address": {
                      "type": "object",
                      "title": "Shipping Address",
                      "description": "The shipping address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's shipping address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The shipping address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the shipping address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the order's shipping address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the order's shipping address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state the order's shipping address is located in.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the order's shipping address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the order's shipping address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the shipping address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the shipping address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the shipping address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the order's shipping address",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with an order's shipping address."
                        }
                      }
                    },
                    "billing_address": {
                      "type": "object",
                      "title": "Billing Address",
                      "description": "The billing address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's billing address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The billing address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the billing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the billing address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the billing address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state in the billing address.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the billing address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the billing address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the billing address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the billing address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the billing address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the billing address.",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with the billing address."
                        }
                      }
                    },
                    "promos": {
                      "type": "array",
                      "title": "Promos",
                      "description": "The promo codes applied on the order",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "title": "Code",
                            "description": "The Promo Code"
                          },
                          "amount_discounted": {
                            "type": "number",
                            "title": "Amount Discounted",
                            "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "Type of discount. For free shipping set type to fixed",
                            "enum": [
                              "fixed",
                              "percentage"
                            ]
                          }
                        }
                      }
                    },
                    "lines": {
                      "type": "array",
                      "title": "Order Line Items",
                      "description": "An array of the order's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order Line Item",
                        "description": "Information about a specific order line.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Line Item Foreign ID",
                            "description": "A unique identifier for an order line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Order Line Item Product Foreign ID",
                            "description": "A unique identifier for the product associated with an order line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Order Line Item Product Title",
                            "description": "The name of the product for an order line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with an order line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Title",
                            "description": "The name of the product variant for an order line item.",
                            "readOnly": true
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The order line item quantity."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The order line item price."
                          },
                          "discount": {
                            "type": "number",
                            "title": "Discount",
                            "description": "The total discount amount applied to a line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "outreach": {
                      "type": "object",
                      "title": "Outreach",
                      "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Outreach ID",
                          "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                          "example": "839488a60b"
                        },
                        "name": {
                          "type": "string",
                          "title": "Outreach name",
                          "description": "The name for the outreach.",
                          "example": "Freddie's Jokes",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "title": "Outreach type",
                          "description": "The type of the outreach.",
                          "example": "regular",
                          "readOnly": true
                        },
                        "published_time": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Outreach published time",
                          "description": "The date and time the Outreach was published in ISO 8601 format.",
                          "example": "2017-06-06T13:56:12+00:00",
                          "readOnly": true
                        }
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_order",
          "methodNameCamel": "getOrder"
        }
      },
      "patch": {
        "summary": "Update order",
        "description": "Update a specific order.",
        "operationId": "patchEcommerceStoresIdOrdersId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "x-title": "Order ID",
            "description": "The id for the order in a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Order",
                "description": "Information about a specific order.",
                "properties": {
                  "customer": {
                    "type": "object",
                    "title": "E-commerce Customer",
                    "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                    "properties": {
                      "opt_in_status": {
                        "type": "boolean",
                        "title": "Opt-in Status",
                        "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                      },
                      "company": {
                        "type": "string",
                        "title": "Company",
                        "description": "The customer's company."
                      },
                      "first_name": {
                        "type": "string",
                        "title": "First Name",
                        "description": "The customer's first name."
                      },
                      "last_name": {
                        "type": "string",
                        "title": "Last Name",
                        "description": "The customer's last name."
                      },
                      "address": {
                        "type": "object",
                        "title": "Address",
                        "description": "The customer's address.",
                        "properties": {
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The mailing address of the customer.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the customer's mailing address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city the customer is located in.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The customer's state name or normalized province.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the customer's province or state.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The customer's postal or zip code.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The customer's country.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for the customer's country.",
                            "example": "US"
                          }
                        }
                      }
                    }
                  },
                  "campaign_id": {
                    "type": "string",
                    "title": "Campaign ID",
                    "description": "A string that uniquely identifies the campaign associated with an order.",
                    "example": "839488a60b"
                  },
                  "landing_site": {
                    "type": "string",
                    "title": "Landing Site",
                    "description": "The URL for the page where the buyer landed when entering the shop.",
                    "example": "http://www.example.com?source=abc"
                  },
                  "financial_status": {
                    "type": "string",
                    "title": "Financial Status",
                    "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                  },
                  "fulfillment_status": {
                    "type": "string",
                    "title": "Fulfillment Status",
                    "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                  },
                  "currency_code": {
                    "type": "string",
                    "title": "Currency Code",
                    "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                  },
                  "order_total": {
                    "type": "number",
                    "title": "Order Total",
                    "description": "The order total associated with an order."
                  },
                  "order_url": {
                    "type": "string",
                    "title": "Order URL",
                    "description": "The URL for the order."
                  },
                  "discount_total": {
                    "type": "number",
                    "title": "Discount Total",
                    "description": "The total amount of the discounts to be applied to the price of the order."
                  },
                  "tax_total": {
                    "type": "number",
                    "title": "Tax Total",
                    "description": "The tax total associated with an order."
                  },
                  "shipping_total": {
                    "type": "number",
                    "title": "Shipping Total",
                    "description": "The shipping total for the order."
                  },
                  "tracking_code": {
                    "type": "string",
                    "enum": [
                      "prec"
                    ],
                    "title": "Tracking Code",
                    "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                  },
                  "processed_at_foreign": {
                    "type": "string",
                    "title": "Foreign Processed Time",
                    "format": "date-time",
                    "description": "The date and time the order was processed in ISO 8601 format.",
                    "example": "2015-07-15 19:28:00"
                  },
                  "cancelled_at_foreign": {
                    "type": "string",
                    "title": "Foreign Cancel Time",
                    "format": "date-time",
                    "description": "The date and time the order was cancelled in ISO 8601 format. Note: passing a value for this parameter will cancel the order being edited.",
                    "example": "2015-07-15 19:28:00"
                  },
                  "updated_at_foreign": {
                    "type": "string",
                    "title": "Foreign Update Time",
                    "format": "date-time",
                    "description": "The date and time the order was updated in ISO 8601 format.",
                    "example": "2015-07-15 19:28:00"
                  },
                  "shipping_address": {
                    "type": "object",
                    "title": "Shipping Address",
                    "description": "The shipping address for the order.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name associated with an order's shipping address.",
                        "example": "Freddie Chimpenheimer"
                      },
                      "address1": {
                        "type": "string",
                        "title": "Address Field 1",
                        "description": "The shipping address for the order.",
                        "example": "675 Ponce de Leon Ave NE"
                      },
                      "address2": {
                        "type": "string",
                        "title": "Address Field 2",
                        "description": "An additional field for the shipping address.",
                        "example": "Suite 5000"
                      },
                      "city": {
                        "type": "string",
                        "title": "City ",
                        "description": "The city in the order's shipping address.",
                        "example": "Atlanta"
                      },
                      "province": {
                        "type": "string",
                        "title": "Province",
                        "description": "The state or normalized province in the order's shipping address.",
                        "example": "Georgia"
                      },
                      "province_code": {
                        "type": "string",
                        "title": "Province Code",
                        "description": "The two-letter code for the province or state the order's shipping address is located in.",
                        "example": "GA"
                      },
                      "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "The postal or zip code in the order's shipping address.",
                        "example": "30308"
                      },
                      "country": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The country in the order's shipping address.",
                        "example": "United States"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The two-letter code for the country in the shipping address.",
                        "example": "US"
                      },
                      "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "The longitude for the shipping address location.",
                        "example": -75.68903
                      },
                      "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "The latitude for the shipping address location.",
                        "example": 45.427408
                      },
                      "phone": {
                        "type": "string",
                        "title": "Phone Number",
                        "description": "The phone number for the order's shipping address",
                        "example": "8675309"
                      },
                      "company": {
                        "type": "string",
                        "title": "Company",
                        "description": "The company associated with an order's shipping address."
                      }
                    }
                  },
                  "billing_address": {
                    "type": "object",
                    "title": "Billing Address",
                    "description": "The billing address for the order.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name associated with an order's billing address.",
                        "example": "Freddie Chimpenheimer"
                      },
                      "address1": {
                        "type": "string",
                        "title": "Address Field 1",
                        "description": "The billing address for the order.",
                        "example": "675 Ponce de Leon Ave NE"
                      },
                      "address2": {
                        "type": "string",
                        "title": "Address Field 2",
                        "description": "An additional field for the billing address.",
                        "example": "Suite 5000"
                      },
                      "city": {
                        "type": "string",
                        "title": "City ",
                        "description": "The city in the billing address.",
                        "example": "Atlanta"
                      },
                      "province": {
                        "type": "string",
                        "title": "Province",
                        "description": "The state or normalized province in the billing address.",
                        "example": "Georgia"
                      },
                      "province_code": {
                        "type": "string",
                        "title": "Province Code",
                        "description": "The two-letter code for the province or state in the billing address.",
                        "example": "GA"
                      },
                      "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "The postal or zip code in the billing address.",
                        "example": "30308"
                      },
                      "country": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The country in the billing address.",
                        "example": "United States"
                      },
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The two-letter code for the country in the billing address.",
                        "example": "US"
                      },
                      "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "The longitude for the billing address location.",
                        "example": -75.68903
                      },
                      "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "The latitude for the billing address location.",
                        "example": 45.427408
                      },
                      "phone": {
                        "type": "string",
                        "title": "Phone Number",
                        "description": "The phone number for the billing address.",
                        "example": "8675309"
                      },
                      "company": {
                        "type": "string",
                        "title": "Company",
                        "description": "The company associated with the billing address."
                      }
                    }
                  },
                  "promos": {
                    "type": "array",
                    "title": "Promos",
                    "description": "The promo codes applied on the order. Note: Patch will completely replace the value of promos with the new one provided.",
                    "items": {
                      "type": "object",
                      "required": [
                        "code",
                        "type",
                        "amount_discounted"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "title": "Code",
                          "description": "The Promo Code"
                        },
                        "amount_discounted": {
                          "type": "number",
                          "title": "Amount Discounted",
                          "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                        },
                        "type": {
                          "type": "string",
                          "title": "Type",
                          "description": "Type of discount. For free shipping set type to fixed",
                          "enum": [
                            "fixed",
                            "percentage"
                          ]
                        }
                      }
                    }
                  },
                  "lines": {
                    "type": "array",
                    "title": "Order Line Items",
                    "description": "An array of the order's line items.",
                    "items": {
                      "type": "object",
                      "title": "E-commerce Order Line Item",
                      "description": "Information about a specific order line.",
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "title": "Order Line Item Product Foreign ID",
                          "description": "A unique identifier for the product associated with the order line item."
                        },
                        "product_variant_id": {
                          "type": "string",
                          "title": "Order Line Item Product Variant Foreign ID",
                          "description": "A unique identifier for the product variant associated with the order line item."
                        },
                        "quantity": {
                          "type": "integer",
                          "title": "Quantity",
                          "description": "The quantity of an order line item."
                        },
                        "price": {
                          "type": "number",
                          "title": "Price",
                          "description": "The price of an order line item."
                        },
                        "discount": {
                          "type": "number",
                          "title": "Discount",
                          "description": "The total discount amount applied to this line item."
                        }
                      }
                    }
                  },
                  "outreach": {
                    "type": "object",
                    "title": "Outreach",
                    "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Outreach ID",
                        "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                        "example": "839488a60b"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order",
                  "description": "Information about a specific order.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Foreign ID",
                      "description": "A unique identifier for the order.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "store_id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with an order.",
                      "example": "839488a60b"
                    },
                    "landing_site": {
                      "type": "string",
                      "title": "Landing Site",
                      "description": "The URL for the page where the buyer landed when entering the shop.",
                      "example": "http://www.example.com?source=abc"
                    },
                    "financial_status": {
                      "type": "string",
                      "title": "Financial Status",
                      "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "fulfillment_status": {
                      "type": "string",
                      "title": "Fulfillment Status",
                      "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total associated with an order."
                    },
                    "order_url": {
                      "type": "string",
                      "title": "Order URL",
                      "description": "The URL for the order."
                    },
                    "discount_total": {
                      "type": "number",
                      "title": "Discount Total",
                      "description": "The total amount of the discounts to be applied to the price of the order."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The tax total associated with an order."
                    },
                    "shipping_total": {
                      "type": "number",
                      "title": "Shipping Total",
                      "description": "The shipping total for the order."
                    },
                    "tracking_code": {
                      "type": "string",
                      "enum": [
                        "prec"
                      ],
                      "title": "Tracking Code",
                      "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                    },
                    "processed_at_foreign": {
                      "type": "string",
                      "title": "Foreign Processed Time",
                      "format": "date-time",
                      "description": "The date and time the order was processed in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "cancelled_at_foreign": {
                      "type": "string",
                      "title": "Foreign Cancel Time",
                      "format": "date-time",
                      "description": "The date and time the order was cancelled in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "title": "Foreign Update Time",
                      "format": "date-time",
                      "description": "The date and time the order was updated in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "shipping_address": {
                      "type": "object",
                      "title": "Shipping Address",
                      "description": "The shipping address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's shipping address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The shipping address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the shipping address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the order's shipping address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the order's shipping address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state the order's shipping address is located in.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the order's shipping address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the order's shipping address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the shipping address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the shipping address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the shipping address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the order's shipping address",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with an order's shipping address."
                        }
                      }
                    },
                    "billing_address": {
                      "type": "object",
                      "title": "Billing Address",
                      "description": "The billing address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's billing address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The billing address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the billing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the billing address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the billing address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state in the billing address.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the billing address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the billing address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the billing address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the billing address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the billing address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the billing address.",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with the billing address."
                        }
                      }
                    },
                    "promos": {
                      "type": "array",
                      "title": "Promos",
                      "description": "The promo codes applied on the order",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "title": "Code",
                            "description": "The Promo Code"
                          },
                          "amount_discounted": {
                            "type": "number",
                            "title": "Amount Discounted",
                            "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "Type of discount. For free shipping set type to fixed",
                            "enum": [
                              "fixed",
                              "percentage"
                            ]
                          }
                        }
                      }
                    },
                    "lines": {
                      "type": "array",
                      "title": "Order Line Items",
                      "description": "An array of the order's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order Line Item",
                        "description": "Information about a specific order line.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Line Item Foreign ID",
                            "description": "A unique identifier for an order line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Order Line Item Product Foreign ID",
                            "description": "A unique identifier for the product associated with an order line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Order Line Item Product Title",
                            "description": "The name of the product for an order line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with an order line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Title",
                            "description": "The name of the product variant for an order line item.",
                            "readOnly": true
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The order line item quantity."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The order line item price."
                          },
                          "discount": {
                            "type": "number",
                            "title": "Discount",
                            "description": "The total discount amount applied to a line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "outreach": {
                      "type": "object",
                      "title": "Outreach",
                      "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Outreach ID",
                          "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                          "example": "839488a60b"
                        },
                        "name": {
                          "type": "string",
                          "title": "Outreach name",
                          "description": "The name for the outreach.",
                          "example": "Freddie's Jokes",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "title": "Outreach type",
                          "description": "The type of the outreach.",
                          "example": "regular",
                          "readOnly": true
                        },
                        "published_time": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Outreach published time",
                          "description": "The date and time the Outreach was published in ISO 8601 format.",
                          "example": "2017-06-06T13:56:12+00:00",
                          "readOnly": true
                        }
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order",
                  "description": "Information about a specific order.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Foreign ID",
                      "description": "A unique identifier for the order.",
                      "readOnly": true
                    },
                    "customer": {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer.",
                          "readOnly": true
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address.",
                          "readOnly": true
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](/developer/guides/getting-started-with-ecommerce/#Customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](/developer/guides/getting-started-with-ecommerce/#Orders) about using this data.",
                          "readOnly": true,
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "title": "Creation Time",
                          "format": "date-time",
                          "description": "The date and time the customer was created in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "title": "Update Time",
                          "format": "date-time",
                          "description": "The date and time the customer was last updated in ISO 8601 format.",
                          "readOnly": true,
                          "example": "2015-07-15 19:28:00"
                        },
                        "_links": {
                          "title": "Links",
                          "description": "A list of link types and descriptions for the API schema documents.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "title": "Resource Link",
                            "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                            "properties": {
                              "rel": {
                                "type": "string",
                                "title": "Rel",
                                "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                "readOnly": true
                              },
                              "href": {
                                "type": "string",
                                "title": "Href",
                                "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                "readOnly": true
                              },
                              "method": {
                                "type": "string",
                                "title": "Method",
                                "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "OPTIONS",
                                  "HEAD"
                                ],
                                "readOnly": true
                              },
                              "targetSchema": {
                                "type": "string",
                                "title": "Target Schema",
                                "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                "readOnly": true
                              },
                              "schema": {
                                "type": "string",
                                "title": "Schema",
                                "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "store_id": {
                      "type": "string",
                      "title": "Store Foreign ID",
                      "description": "The unique identifier for the store.",
                      "readOnly": true
                    },
                    "campaign_id": {
                      "type": "string",
                      "title": "Campaign ID",
                      "description": "A string that uniquely identifies the campaign associated with an order.",
                      "example": "839488a60b"
                    },
                    "landing_site": {
                      "type": "string",
                      "title": "Landing Site",
                      "description": "The URL for the page where the buyer landed when entering the shop.",
                      "example": "http://www.example.com?source=abc"
                    },
                    "financial_status": {
                      "type": "string",
                      "title": "Financial Status",
                      "description": "The order status. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "fulfillment_status": {
                      "type": "string",
                      "title": "Fulfillment Status",
                      "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](/developer/guides/getting-started-with-ecommerce/#Order_Notifications)."
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                    },
                    "order_total": {
                      "type": "number",
                      "title": "Order Total",
                      "description": "The order total associated with an order."
                    },
                    "order_url": {
                      "type": "string",
                      "title": "Order URL",
                      "description": "The URL for the order."
                    },
                    "discount_total": {
                      "type": "number",
                      "title": "Discount Total",
                      "description": "The total amount of the discounts to be applied to the price of the order."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "Tax Total",
                      "description": "The tax total associated with an order."
                    },
                    "shipping_total": {
                      "type": "number",
                      "title": "Shipping Total",
                      "description": "The shipping total for the order."
                    },
                    "tracking_code": {
                      "type": "string",
                      "enum": [
                        "prec"
                      ],
                      "title": "Tracking Code",
                      "description": "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                    },
                    "processed_at_foreign": {
                      "type": "string",
                      "title": "Foreign Processed Time",
                      "format": "date-time",
                      "description": "The date and time the order was processed in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "cancelled_at_foreign": {
                      "type": "string",
                      "title": "Foreign Cancel Time",
                      "format": "date-time",
                      "description": "The date and time the order was cancelled in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at_foreign": {
                      "type": "string",
                      "title": "Foreign Update Time",
                      "format": "date-time",
                      "description": "The date and time the order was updated in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "shipping_address": {
                      "type": "object",
                      "title": "Shipping Address",
                      "description": "The shipping address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's shipping address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The shipping address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the shipping address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the order's shipping address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the order's shipping address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state the order's shipping address is located in.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the order's shipping address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the order's shipping address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the shipping address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the shipping address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the shipping address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the order's shipping address",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with an order's shipping address."
                        }
                      }
                    },
                    "billing_address": {
                      "type": "object",
                      "title": "Billing Address",
                      "description": "The billing address for the order.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "Name",
                          "description": "The name associated with an order's billing address.",
                          "example": "Freddie Chimpenheimer"
                        },
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The billing address for the order.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the billing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city in the billing address.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The state or normalized province in the billing address.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the province or state in the billing address.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The postal or zip code in the billing address.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The country in the billing address.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the country in the billing address.",
                          "example": "US"
                        },
                        "longitude": {
                          "type": "number",
                          "title": "Longitude",
                          "description": "The longitude for the billing address location.",
                          "example": -75.68903
                        },
                        "latitude": {
                          "type": "number",
                          "title": "Latitude",
                          "description": "The latitude for the billing address location.",
                          "example": 45.427408
                        },
                        "phone": {
                          "type": "string",
                          "title": "Phone Number",
                          "description": "The phone number for the billing address.",
                          "example": "8675309"
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The company associated with the billing address."
                        }
                      }
                    },
                    "promos": {
                      "type": "array",
                      "title": "Promos",
                      "description": "The promo codes applied on the order",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "title": "Code",
                            "description": "The Promo Code"
                          },
                          "amount_discounted": {
                            "type": "number",
                            "title": "Amount Discounted",
                            "description": "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0"
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "Type of discount. For free shipping set type to fixed",
                            "enum": [
                              "fixed",
                              "percentage"
                            ]
                          }
                        }
                      }
                    },
                    "lines": {
                      "type": "array",
                      "title": "Order Line Items",
                      "description": "An array of the order's line items.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order Line Item",
                        "description": "Information about a specific order line.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Line Item Foreign ID",
                            "description": "A unique identifier for an order line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Order Line Item Product Foreign ID",
                            "description": "A unique identifier for the product associated with an order line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Order Line Item Product Title",
                            "description": "The name of the product for an order line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with an order line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Title",
                            "description": "The name of the product variant for an order line item.",
                            "readOnly": true
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The order line item quantity."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The order line item price."
                          },
                          "discount": {
                            "type": "number",
                            "title": "Discount",
                            "description": "The total discount amount applied to a line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "outreach": {
                      "type": "object",
                      "title": "Outreach",
                      "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Outreach ID",
                          "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                          "example": "839488a60b"
                        },
                        "name": {
                          "type": "string",
                          "title": "Outreach name",
                          "description": "The name for the outreach.",
                          "example": "Freddie's Jokes",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "title": "Outreach type",
                          "description": "The type of the outreach.",
                          "example": "regular",
                          "readOnly": true
                        },
                        "published_time": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Outreach published time",
                          "description": "The date and time the Outreach was published in ISO 8601 format.",
                          "example": "2017-06-06T13:56:12+00:00",
                          "readOnly": true
                        }
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_order",
          "methodNameCamel": "updateOrder"
        }
      },
      "delete": {
        "summary": "Delete order",
        "description": "Delete an order.",
        "operationId": "deleteEcommerceStoresIdOrdersId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "x-title": "Order ID",
            "description": "The id for the order in a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_order",
          "methodNameCamel": "deleteOrder"
        }
      }
    },
    "/ecommerce/stores/{store_id}/orders/{order_id}/lines": {
      "get": {
        "summary": "List order line items",
        "description": "Get information about an order's line items.",
        "operationId": "getEcommerceStoresIdOrdersIdLines",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "x-title": "Order ID",
            "description": "The id for the order in a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Order Lines",
                  "description": "A collection of an order's line items.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "order_id": {
                      "type": "string",
                      "title": "Order ID",
                      "description": "The order id."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Ecommerce Order Lines",
                      "description": "An array of objects, each representing an order's line item.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order Line Item",
                        "description": "Information about a specific order line.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Line Item Foreign ID",
                            "description": "A unique identifier for an order line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Order Line Item Product Foreign ID",
                            "description": "A unique identifier for the product associated with an order line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Order Line Item Product Title",
                            "description": "The name of the product for an order line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with an order line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Title",
                            "description": "The name of the product variant for an order line item.",
                            "readOnly": true
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The order line item quantity."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The order line item price."
                          },
                          "discount": {
                            "type": "number",
                            "title": "Discount",
                            "description": "The total discount amount applied to a line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Order Lines",
                  "description": "A collection of an order's line items.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "order_id": {
                      "type": "string",
                      "title": "Order ID",
                      "description": "The order id."
                    },
                    "lines": {
                      "type": "array",
                      "title": "Ecommerce Order Lines",
                      "description": "An array of objects, each representing an order's line item.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Order Line Item",
                        "description": "Information about a specific order line.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Order Line Item Foreign ID",
                            "description": "A unique identifier for an order line item.",
                            "readOnly": true
                          },
                          "product_id": {
                            "type": "string",
                            "title": "Order Line Item Product Foreign ID",
                            "description": "A unique identifier for the product associated with an order line item."
                          },
                          "product_title": {
                            "type": "string",
                            "title": "Order Line Item Product Title",
                            "description": "The name of the product for an order line item.",
                            "readOnly": true
                          },
                          "product_variant_id": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant associated with an order line item."
                          },
                          "product_variant_title": {
                            "type": "string",
                            "title": "Order Line Item Product Variant Title",
                            "description": "The name of the product variant for an order line item.",
                            "readOnly": true
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product.",
                            "readOnly": true
                          },
                          "quantity": {
                            "type": "integer",
                            "title": "Quantity",
                            "description": "The order line item quantity."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The order line item price."
                          },
                          "discount": {
                            "type": "number",
                            "title": "Discount",
                            "description": "The total discount amount applied to a line item."
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_all_order_line_items",
          "methodNameCamel": "getAllOrderLineItems"
        }
      },
      "post": {
        "summary": "Add order line item",
        "description": "Add a new line item to an existing order.",
        "operationId": "postEcommerceStoresIdOrdersIdLines",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "x-title": "Order ID",
            "description": "The id for the order in a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Order Line Item",
                "description": "Information about a specific order line.",
                "required": [
                  "id",
                  "product_id",
                  "product_variant_id",
                  "quantity",
                  "price"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Order Line Item Foreign ID",
                    "description": "A unique identifier for the order line item."
                  },
                  "product_id": {
                    "type": "string",
                    "title": "Order Line Item Product Foreign ID",
                    "description": "A unique identifier for the product associated with the order line item."
                  },
                  "product_variant_id": {
                    "type": "string",
                    "title": "Order Line Item Product Variant Foreign ID",
                    "description": "A unique identifier for the product variant associated with the order line item."
                  },
                  "quantity": {
                    "type": "integer",
                    "title": "Quantity",
                    "description": "The quantity of an order line item."
                  },
                  "price": {
                    "type": "number",
                    "title": "Price",
                    "description": "The price of an order line item."
                  },
                  "discount": {
                    "type": "number",
                    "title": "Discount",
                    "description": "The total discount amount applied to this line item."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order Line Item",
                  "description": "Information about a specific order line.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Line Item Foreign ID",
                      "description": "A unique identifier for an order line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Order Line Item Product Foreign ID",
                      "description": "A unique identifier for the product associated with an order line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Order Line Item Product Title",
                      "description": "The name of the product for an order line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with an order line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Title",
                      "description": "The name of the product variant for an order line item.",
                      "readOnly": true
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The order line item quantity."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The order line item price."
                    },
                    "discount": {
                      "type": "number",
                      "title": "Discount",
                      "description": "The total discount amount applied to a line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order Line Item",
                  "description": "Information about a specific order line.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Line Item Foreign ID",
                      "description": "A unique identifier for an order line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Order Line Item Product Foreign ID",
                      "description": "A unique identifier for the product associated with an order line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Order Line Item Product Title",
                      "description": "The name of the product for an order line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with an order line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Title",
                      "description": "The name of the product variant for an order line item.",
                      "readOnly": true
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The order line item quantity."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The order line item price."
                    },
                    "discount": {
                      "type": "number",
                      "title": "Discount",
                      "description": "The total discount amount applied to a line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_order_line_item",
          "methodNameCamel": "addOrderLineItem"
        }
      }
    },
    "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}": {
      "get": {
        "summary": "Get order line item",
        "description": "Get information about a specific order line item.",
        "operationId": "getEcommerceStoresIdOrdersIdLinesId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "x-title": "Order ID",
            "description": "The id for the order in a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_id",
            "x-title": "Order Line ID",
            "description": "The id for the line item of an order.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order Line Item",
                  "description": "Information about a specific order line.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Line Item Foreign ID",
                      "description": "A unique identifier for an order line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Order Line Item Product Foreign ID",
                      "description": "A unique identifier for the product associated with an order line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Order Line Item Product Title",
                      "description": "The name of the product for an order line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with an order line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Title",
                      "description": "The name of the product variant for an order line item.",
                      "readOnly": true
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The order line item quantity."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The order line item price."
                    },
                    "discount": {
                      "type": "number",
                      "title": "Discount",
                      "description": "The total discount amount applied to a line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order Line Item",
                  "description": "Information about a specific order line.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Line Item Foreign ID",
                      "description": "A unique identifier for an order line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Order Line Item Product Foreign ID",
                      "description": "A unique identifier for the product associated with an order line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Order Line Item Product Title",
                      "description": "The name of the product for an order line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with an order line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Title",
                      "description": "The name of the product variant for an order line item.",
                      "readOnly": true
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The order line item quantity."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The order line item price."
                    },
                    "discount": {
                      "type": "number",
                      "title": "Discount",
                      "description": "The total discount amount applied to a line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_order_line_item",
          "methodNameCamel": "getOrderLineItem"
        }
      },
      "patch": {
        "summary": "Update order line item",
        "description": "Update a specific order line item.",
        "operationId": "patchEcommerceStoresIdOrdersIdLinesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "x-title": "Order ID",
            "description": "The id for the order in a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_id",
            "x-title": "Order Line ID",
            "description": "The id for the line item of an order.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Order Line Item",
                "description": "Information about a specific order line.",
                "properties": {
                  "product_id": {
                    "type": "string",
                    "title": "Order Line Item Product Foreign ID",
                    "description": "A unique identifier for the product associated with the order line item."
                  },
                  "product_variant_id": {
                    "type": "string",
                    "title": "Order Line Item Product Variant Foreign ID",
                    "description": "A unique identifier for the product variant associated with the order line item."
                  },
                  "quantity": {
                    "type": "integer",
                    "title": "Quantity",
                    "description": "The quantity of an order line item."
                  },
                  "price": {
                    "type": "number",
                    "title": "Price",
                    "description": "The price of an order line item."
                  },
                  "discount": {
                    "type": "number",
                    "title": "Discount",
                    "description": "The total discount amount applied to this line item."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order Line Item",
                  "description": "Information about a specific order line.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Line Item Foreign ID",
                      "description": "A unique identifier for an order line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Order Line Item Product Foreign ID",
                      "description": "A unique identifier for the product associated with an order line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Order Line Item Product Title",
                      "description": "The name of the product for an order line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with an order line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Title",
                      "description": "The name of the product variant for an order line item.",
                      "readOnly": true
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The order line item quantity."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The order line item price."
                    },
                    "discount": {
                      "type": "number",
                      "title": "Discount",
                      "description": "The total discount amount applied to a line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Order Line Item",
                  "description": "Information about a specific order line.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Order Line Item Foreign ID",
                      "description": "A unique identifier for an order line item.",
                      "readOnly": true
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Order Line Item Product Foreign ID",
                      "description": "A unique identifier for the product associated with an order line item."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "Order Line Item Product Title",
                      "description": "The name of the product for an order line item.",
                      "readOnly": true
                    },
                    "product_variant_id": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant associated with an order line item."
                    },
                    "product_variant_title": {
                      "type": "string",
                      "title": "Order Line Item Product Variant Title",
                      "description": "The name of the product variant for an order line item.",
                      "readOnly": true
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product.",
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer",
                      "title": "Quantity",
                      "description": "The order line item quantity."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The order line item price."
                    },
                    "discount": {
                      "type": "number",
                      "title": "Discount",
                      "description": "The total discount amount applied to a line item."
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_order_line_item",
          "methodNameCamel": "updateOrderLineItem"
        }
      },
      "delete": {
        "summary": "Delete order line item",
        "description": "Delete a specific order line item.",
        "operationId": "deleteEcommerceStoresIdOrdersIdLinesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "x-title": "Order ID",
            "description": "The id for the order in a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_id",
            "x-title": "Order Line ID",
            "description": "The id for the line item of an order.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_order_line_item",
          "methodNameCamel": "deleteOrderLineItem"
        }
      }
    },
    "/ecommerce/stores/{store_id}/products": {
      "get": {
        "summary": "List product",
        "description": "Get information about a store's products.",
        "operationId": "getEcommerceStoresIdProducts",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Products",
                  "description": "A collection of a store's products.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "products": {
                      "type": "array",
                      "title": "Products",
                      "description": "An array of objects, each representing a store product.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product",
                        "description": "Information about a specific product.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Foreign ID",
                            "description": "A unique identifier for the product.",
                            "readOnly": true
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency Code",
                            "description": "The currency code",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product.",
                            "example": "Cat Hat"
                          },
                          "handle": {
                            "type": "string",
                            "title": "Handle",
                            "description": "The handle of a product.",
                            "example": "cat-hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "Product URL",
                            "description": "The URL for a product."
                          },
                          "description": {
                            "type": "string",
                            "title": "Description",
                            "description": "The description of a product.",
                            "example": "This is a cat hat."
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "The type of product.",
                            "example": "Accessories"
                          },
                          "vendor": {
                            "type": "string",
                            "title": "Vendor",
                            "description": "The vendor for a product."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product."
                          },
                          "variants": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](/developer/reference/ecommerce-stores/ecommerce-products/ecommerce-product-variants/#get_/ecommerce/stores/-store_id-/products/-product_id-/variants).",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Product Variant",
                              "description": "Information about a specific product variant.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Product Variant Foreign ID",
                                  "description": "A unique identifier for the product variant.",
                                  "readOnly": true
                                },
                                "title": {
                                  "type": "string",
                                  "title": "Title",
                                  "description": "The title of a product variant.",
                                  "example": "Cat Hat"
                                },
                                "url": {
                                  "type": "string",
                                  "title": "URL",
                                  "description": "The URL for a product variant."
                                },
                                "sku": {
                                  "type": "string",
                                  "title": "SKU",
                                  "description": "The stock keeping unit (SKU) of a product variant."
                                },
                                "price": {
                                  "type": "number",
                                  "title": "Price",
                                  "description": "The price of a product variant."
                                },
                                "inventory_quantity": {
                                  "type": "integer",
                                  "title": "Inventory Quantity",
                                  "description": "The inventory quantity of a product variant."
                                },
                                "image_url": {
                                  "type": "string",
                                  "title": "Image URL",
                                  "description": "The image URL for a product variant."
                                },
                                "backorders": {
                                  "type": "string",
                                  "title": "Backorders",
                                  "description": "The backorders of a product variant."
                                },
                                "visibility": {
                                  "type": "string",
                                  "title": "Visibility",
                                  "description": "The visibility of a product variant."
                                },
                                "created_at": {
                                  "type": "string",
                                  "title": "Creation Time",
                                  "format": "date-time",
                                  "description": "The date and time the product was created in ISO 8601 format.",
                                  "readOnly": true,
                                  "example": "2015-07-15 19:28:00"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "title": "Update Time",
                                  "format": "date-time",
                                  "description": "The date and time the product was last updated in ISO 8601 format.",
                                  "readOnly": true,
                                  "example": "2015-07-15 19:28:00"
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "images": {
                            "type": "array",
                            "title": "Product Images",
                            "description": "An array of the product's images.",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Product Image",
                              "description": "Information about a specific product image.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Image Foreign ID",
                                  "description": "A unique identifier for the product image."
                                },
                                "url": {
                                  "type": "string",
                                  "title": "URL",
                                  "description": "The URL for a product image."
                                },
                                "variant_ids": {
                                  "type": "array",
                                  "title": "Product Variants",
                                  "description": "The list of product variants using the image.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "published_at_foreign": {
                            "type": "string",
                            "title": "Foreign Publish Time",
                            "format": "date-time",
                            "description": "The date and time the product was published in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Products",
                  "description": "A collection of a store's products.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "products": {
                      "type": "array",
                      "title": "Products",
                      "description": "An array of objects, each representing a store product.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product",
                        "description": "Information about a specific product.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Foreign ID",
                            "description": "A unique identifier for the product.",
                            "readOnly": true
                          },
                          "currency_code": {
                            "type": "string",
                            "title": "Currency Code",
                            "description": "The currency code",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product.",
                            "example": "Cat Hat"
                          },
                          "handle": {
                            "type": "string",
                            "title": "Handle",
                            "description": "The handle of a product.",
                            "example": "cat-hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "Product URL",
                            "description": "The URL for a product."
                          },
                          "description": {
                            "type": "string",
                            "title": "Description",
                            "description": "The description of a product.",
                            "example": "This is a cat hat."
                          },
                          "type": {
                            "type": "string",
                            "title": "Type",
                            "description": "The type of product.",
                            "example": "Accessories"
                          },
                          "vendor": {
                            "type": "string",
                            "title": "Vendor",
                            "description": "The vendor for a product."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Product Image URL",
                            "description": "The image URL for a product."
                          },
                          "variants": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](/developer/reference/ecommerce-stores/ecommerce-products/ecommerce-product-variants/#get_/ecommerce/stores/-store_id-/products/-product_id-/variants).",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Product Variant",
                              "description": "Information about a specific product variant.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Product Variant Foreign ID",
                                  "description": "A unique identifier for the product variant.",
                                  "readOnly": true
                                },
                                "title": {
                                  "type": "string",
                                  "title": "Title",
                                  "description": "The title of a product variant.",
                                  "example": "Cat Hat"
                                },
                                "url": {
                                  "type": "string",
                                  "title": "URL",
                                  "description": "The URL for a product variant."
                                },
                                "sku": {
                                  "type": "string",
                                  "title": "SKU",
                                  "description": "The stock keeping unit (SKU) of a product variant."
                                },
                                "price": {
                                  "type": "number",
                                  "title": "Price",
                                  "description": "The price of a product variant."
                                },
                                "inventory_quantity": {
                                  "type": "integer",
                                  "title": "Inventory Quantity",
                                  "description": "The inventory quantity of a product variant."
                                },
                                "image_url": {
                                  "type": "string",
                                  "title": "Image URL",
                                  "description": "The image URL for a product variant."
                                },
                                "backorders": {
                                  "type": "string",
                                  "title": "Backorders",
                                  "description": "The backorders of a product variant."
                                },
                                "visibility": {
                                  "type": "string",
                                  "title": "Visibility",
                                  "description": "The visibility of a product variant."
                                },
                                "created_at": {
                                  "type": "string",
                                  "title": "Creation Time",
                                  "format": "date-time",
                                  "description": "The date and time the product was created in ISO 8601 format.",
                                  "readOnly": true,
                                  "example": "2015-07-15 19:28:00"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "title": "Update Time",
                                  "format": "date-time",
                                  "description": "The date and time the product was last updated in ISO 8601 format.",
                                  "readOnly": true,
                                  "example": "2015-07-15 19:28:00"
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "images": {
                            "type": "array",
                            "title": "Product Images",
                            "description": "An array of the product's images.",
                            "items": {
                              "type": "object",
                              "title": "E-commerce Product Image",
                              "description": "Information about a specific product image.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "Image Foreign ID",
                                  "description": "A unique identifier for the product image."
                                },
                                "url": {
                                  "type": "string",
                                  "title": "URL",
                                  "description": "The URL for a product image."
                                },
                                "variant_ids": {
                                  "type": "array",
                                  "title": "Product Variants",
                                  "description": "The list of product variants using the image.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "_links": {
                                  "title": "Links",
                                  "description": "A list of link types and descriptions for the API schema documents.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Resource Link",
                                    "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                                    "properties": {
                                      "rel": {
                                        "type": "string",
                                        "title": "Rel",
                                        "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                        "readOnly": true
                                      },
                                      "href": {
                                        "type": "string",
                                        "title": "Href",
                                        "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                        "readOnly": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "title": "Method",
                                        "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "OPTIONS",
                                          "HEAD"
                                        ],
                                        "readOnly": true
                                      },
                                      "targetSchema": {
                                        "type": "string",
                                        "title": "Target Schema",
                                        "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                        "readOnly": true
                                      },
                                      "schema": {
                                        "type": "string",
                                        "title": "Schema",
                                        "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "published_at_foreign": {
                            "type": "string",
                            "title": "Foreign Publish Time",
                            "format": "date-time",
                            "description": "The date and time the product was published in ISO 8601 format.",
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_all_store_products",
          "methodNameCamel": "getAllStoreProducts"
        }
      },
      "post": {
        "summary": "Add product",
        "description": "Add a new product to a store.",
        "operationId": "postEcommerceStoresIdProducts",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Product",
                "description": "Information about a specific product.",
                "required": [
                  "id",
                  "title",
                  "variants"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Product Foreign ID",
                    "description": "A unique identifier for the product."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title",
                    "description": "The title of a product.",
                    "example": "Cat Hat"
                  },
                  "handle": {
                    "type": "string",
                    "title": "Handle",
                    "description": "The handle of a product.",
                    "example": "cat-hat"
                  },
                  "url": {
                    "type": "string",
                    "title": "Product URL",
                    "description": "The URL for a product."
                  },
                  "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "The description of a product.",
                    "example": "This is a cat hat."
                  },
                  "type": {
                    "type": "string",
                    "title": "Type",
                    "description": "The type of product.",
                    "example": "Accessories"
                  },
                  "vendor": {
                    "type": "string",
                    "title": "Vendor",
                    "description": "The vendor for a product."
                  },
                  "image_url": {
                    "type": "string",
                    "title": "Product Image URL",
                    "description": "The image URL for a product."
                  },
                  "variants": {
                    "type": "array",
                    "title": "Product Variants",
                    "description": "An array of the product's variants. At least one variant is required for each product. A variant can use the same `id` and `title` as the parent product.",
                    "items": {
                      "type": "object",
                      "title": "E-commerce Product Variant",
                      "description": "Information about a specific product variant.",
                      "required": [
                        "id",
                        "title"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Product Variant Foreign ID",
                          "description": "A unique identifier for the product variant."
                        },
                        "title": {
                          "type": "string",
                          "title": "Title",
                          "description": "The title of a product variant.",
                          "example": "Cat Hat"
                        },
                        "url": {
                          "type": "string",
                          "title": "URL",
                          "description": "The URL for a product variant."
                        },
                        "sku": {
                          "type": "string",
                          "title": "SKU",
                          "description": "The stock keeping unit (SKU) of a product variant."
                        },
                        "price": {
                          "type": "number",
                          "title": "Price",
                          "description": "The price of a product variant."
                        },
                        "inventory_quantity": {
                          "type": "integer",
                          "title": "Inventory Quantity",
                          "description": "The inventory quantity of a product variant."
                        },
                        "image_url": {
                          "type": "string",
                          "title": "Image URL",
                          "description": "The image URL for a product variant."
                        },
                        "backorders": {
                          "type": "string",
                          "title": "Backorders",
                          "description": "The backorders of a product variant."
                        },
                        "visibility": {
                          "type": "string",
                          "title": "Visibility",
                          "description": "The visibility of a product variant."
                        }
                      }
                    }
                  },
                  "images": {
                    "type": "array",
                    "title": "Product Images",
                    "description": "An array of the product's images.",
                    "items": {
                      "type": "object",
                      "title": "E-commerce Product Image",
                      "description": "Information about a specific product image.",
                      "required": [
                        "id",
                        "url"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Image Foreign ID",
                          "description": "A unique identifier for the product image."
                        },
                        "url": {
                          "type": "string",
                          "title": "URL",
                          "description": "The URL for a product image."
                        },
                        "variant_ids": {
                          "type": "array",
                          "title": "Product Variants",
                          "description": "The list of product variants using the image.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "published_at_foreign": {
                    "type": "string",
                    "title": "Foreign Publish Time",
                    "format": "date-time",
                    "description": "The date and time the product was published.",
                    "example": "2015-07-15 19:28:00"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product",
                  "description": "Information about a specific product.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Foreign ID",
                      "description": "A unique identifier for the product.",
                      "readOnly": true
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The currency code",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product.",
                      "example": "Cat Hat"
                    },
                    "handle": {
                      "type": "string",
                      "title": "Handle",
                      "description": "The handle of a product.",
                      "example": "cat-hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "Product URL",
                      "description": "The URL for a product."
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a product.",
                      "example": "This is a cat hat."
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "The type of product.",
                      "example": "Accessories"
                    },
                    "vendor": {
                      "type": "string",
                      "title": "Vendor",
                      "description": "The vendor for a product."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product."
                    },
                    "variants": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](/developer/reference/ecommerce-stores/ecommerce-products/ecommerce-product-variants/#get_/ecommerce/stores/-store_id-/products/-product_id-/variants).",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Variant",
                        "description": "Information about a specific product variant.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product variant.",
                            "example": "Cat Hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product variant."
                          },
                          "sku": {
                            "type": "string",
                            "title": "SKU",
                            "description": "The stock keeping unit (SKU) of a product variant."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a product variant."
                          },
                          "inventory_quantity": {
                            "type": "integer",
                            "title": "Inventory Quantity",
                            "description": "The inventory quantity of a product variant."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The image URL for a product variant."
                          },
                          "backorders": {
                            "type": "string",
                            "title": "Backorders",
                            "description": "The backorders of a product variant."
                          },
                          "visibility": {
                            "type": "string",
                            "title": "Visibility",
                            "description": "The visibility of a product variant."
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the product was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the product was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "title": "Product Images",
                      "description": "An array of the product's images.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Image",
                        "description": "Information about a specific product image.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Image Foreign ID",
                            "description": "A unique identifier for the product image."
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product image."
                          },
                          "variant_ids": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "The list of product variants using the image.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "published_at_foreign": {
                      "type": "string",
                      "title": "Foreign Publish Time",
                      "format": "date-time",
                      "description": "The date and time the product was published in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product",
                  "description": "Information about a specific product.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Foreign ID",
                      "description": "A unique identifier for the product.",
                      "readOnly": true
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The currency code",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product.",
                      "example": "Cat Hat"
                    },
                    "handle": {
                      "type": "string",
                      "title": "Handle",
                      "description": "The handle of a product.",
                      "example": "cat-hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "Product URL",
                      "description": "The URL for a product."
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a product.",
                      "example": "This is a cat hat."
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "The type of product.",
                      "example": "Accessories"
                    },
                    "vendor": {
                      "type": "string",
                      "title": "Vendor",
                      "description": "The vendor for a product."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product."
                    },
                    "variants": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](/developer/reference/ecommerce-stores/ecommerce-products/ecommerce-product-variants/#get_/ecommerce/stores/-store_id-/products/-product_id-/variants).",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Variant",
                        "description": "Information about a specific product variant.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product variant.",
                            "example": "Cat Hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product variant."
                          },
                          "sku": {
                            "type": "string",
                            "title": "SKU",
                            "description": "The stock keeping unit (SKU) of a product variant."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a product variant."
                          },
                          "inventory_quantity": {
                            "type": "integer",
                            "title": "Inventory Quantity",
                            "description": "The inventory quantity of a product variant."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The image URL for a product variant."
                          },
                          "backorders": {
                            "type": "string",
                            "title": "Backorders",
                            "description": "The backorders of a product variant."
                          },
                          "visibility": {
                            "type": "string",
                            "title": "Visibility",
                            "description": "The visibility of a product variant."
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the product was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the product was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "title": "Product Images",
                      "description": "An array of the product's images.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Image",
                        "description": "Information about a specific product image.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Image Foreign ID",
                            "description": "A unique identifier for the product image."
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product image."
                          },
                          "variant_ids": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "The list of product variants using the image.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "published_at_foreign": {
                      "type": "string",
                      "title": "Foreign Publish Time",
                      "format": "date-time",
                      "description": "The date and time the product was published in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_store_product",
          "methodNameCamel": "addStoreProduct"
        }
      }
    },
    "/ecommerce/stores/{store_id}/products/{product_id}": {
      "get": {
        "summary": "Get product info",
        "description": "Get information about a specific product.",
        "operationId": "getEcommerceStoresIdProductsId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product",
                  "description": "Information about a specific product.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Foreign ID",
                      "description": "A unique identifier for the product.",
                      "readOnly": true
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The currency code",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product.",
                      "example": "Cat Hat"
                    },
                    "handle": {
                      "type": "string",
                      "title": "Handle",
                      "description": "The handle of a product.",
                      "example": "cat-hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "Product URL",
                      "description": "The URL for a product."
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a product.",
                      "example": "This is a cat hat."
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "The type of product.",
                      "example": "Accessories"
                    },
                    "vendor": {
                      "type": "string",
                      "title": "Vendor",
                      "description": "The vendor for a product."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product."
                    },
                    "variants": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](/developer/reference/ecommerce-stores/ecommerce-products/ecommerce-product-variants/#get_/ecommerce/stores/-store_id-/products/-product_id-/variants).",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Variant",
                        "description": "Information about a specific product variant.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product variant.",
                            "example": "Cat Hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product variant."
                          },
                          "sku": {
                            "type": "string",
                            "title": "SKU",
                            "description": "The stock keeping unit (SKU) of a product variant."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a product variant."
                          },
                          "inventory_quantity": {
                            "type": "integer",
                            "title": "Inventory Quantity",
                            "description": "The inventory quantity of a product variant."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The image URL for a product variant."
                          },
                          "backorders": {
                            "type": "string",
                            "title": "Backorders",
                            "description": "The backorders of a product variant."
                          },
                          "visibility": {
                            "type": "string",
                            "title": "Visibility",
                            "description": "The visibility of a product variant."
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the product was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the product was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "title": "Product Images",
                      "description": "An array of the product's images.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Image",
                        "description": "Information about a specific product image.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Image Foreign ID",
                            "description": "A unique identifier for the product image."
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product image."
                          },
                          "variant_ids": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "The list of product variants using the image.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "published_at_foreign": {
                      "type": "string",
                      "title": "Foreign Publish Time",
                      "format": "date-time",
                      "description": "The date and time the product was published in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product",
                  "description": "Information about a specific product.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Foreign ID",
                      "description": "A unique identifier for the product.",
                      "readOnly": true
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The currency code",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product.",
                      "example": "Cat Hat"
                    },
                    "handle": {
                      "type": "string",
                      "title": "Handle",
                      "description": "The handle of a product.",
                      "example": "cat-hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "Product URL",
                      "description": "The URL for a product."
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a product.",
                      "example": "This is a cat hat."
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "The type of product.",
                      "example": "Accessories"
                    },
                    "vendor": {
                      "type": "string",
                      "title": "Vendor",
                      "description": "The vendor for a product."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product."
                    },
                    "variants": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](/developer/reference/ecommerce-stores/ecommerce-products/ecommerce-product-variants/#get_/ecommerce/stores/-store_id-/products/-product_id-/variants).",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Variant",
                        "description": "Information about a specific product variant.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product variant.",
                            "example": "Cat Hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product variant."
                          },
                          "sku": {
                            "type": "string",
                            "title": "SKU",
                            "description": "The stock keeping unit (SKU) of a product variant."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a product variant."
                          },
                          "inventory_quantity": {
                            "type": "integer",
                            "title": "Inventory Quantity",
                            "description": "The inventory quantity of a product variant."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The image URL for a product variant."
                          },
                          "backorders": {
                            "type": "string",
                            "title": "Backorders",
                            "description": "The backorders of a product variant."
                          },
                          "visibility": {
                            "type": "string",
                            "title": "Visibility",
                            "description": "The visibility of a product variant."
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the product was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the product was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "title": "Product Images",
                      "description": "An array of the product's images.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Image",
                        "description": "Information about a specific product image.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Image Foreign ID",
                            "description": "A unique identifier for the product image."
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product image."
                          },
                          "variant_ids": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "The list of product variants using the image.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "published_at_foreign": {
                      "type": "string",
                      "title": "Foreign Publish Time",
                      "format": "date-time",
                      "description": "The date and time the product was published in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_store_product",
          "methodNameCamel": "getStoreProduct"
        }
      },
      "patch": {
        "summary": "Update product",
        "description": "Update a specific product.",
        "operationId": "patchEcommerceStoresIdProductsId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Product",
                "description": "Information about a specific product.",
                "properties": {
                  "title": {
                    "type": "string",
                    "title": "Title",
                    "description": "The title of a product.",
                    "example": "Cat Hat"
                  },
                  "handle": {
                    "type": "string",
                    "title": "Handle",
                    "description": "The handle of a product.",
                    "example": "cat-hat"
                  },
                  "url": {
                    "type": "string",
                    "title": "Product URL",
                    "description": "The URL for a product."
                  },
                  "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "The description of a product.",
                    "example": "This is a cat hat."
                  },
                  "type": {
                    "type": "string",
                    "title": "Type",
                    "description": "The type of product.",
                    "example": "Accessories"
                  },
                  "vendor": {
                    "type": "string",
                    "title": "Vendor",
                    "description": "The vendor for a product."
                  },
                  "image_url": {
                    "type": "string",
                    "title": "Product Image URL",
                    "description": "The image URL for a product."
                  },
                  "variants": {
                    "type": "array",
                    "title": "Product Variants",
                    "description": "An array of the product's variants. At least one variant is required for each product. A variant can use the same `id` and `title` as the parent product.",
                    "items": {
                      "type": "object",
                      "title": "E-commerce Product Variant",
                      "description": "Information about a specific product variant.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "title": "Title",
                          "description": "The title of a product variant.",
                          "example": "Cat Hat"
                        },
                        "url": {
                          "type": "string",
                          "title": "URL",
                          "description": "The URL for a product variant."
                        },
                        "sku": {
                          "type": "string",
                          "title": "SKU",
                          "description": "The stock keeping unit (SKU) of a product variant."
                        },
                        "price": {
                          "type": "number",
                          "title": "Price",
                          "description": "The price of a product variant."
                        },
                        "inventory_quantity": {
                          "type": "integer",
                          "title": "Inventory Quantity",
                          "description": "The inventory quantity of a product variant."
                        },
                        "image_url": {
                          "type": "string",
                          "title": "Image URL",
                          "description": "The image URL for a product variant."
                        },
                        "backorders": {
                          "type": "string",
                          "title": "Backorders",
                          "description": "The backorders of a product variant."
                        },
                        "visibility": {
                          "type": "string",
                          "title": "Visibility",
                          "description": "The visibility of a product variant."
                        }
                      }
                    }
                  },
                  "images": {
                    "type": "array",
                    "title": "Product Images",
                    "description": "An array of the product's images.",
                    "items": {
                      "type": "object",
                      "title": "E-commerce Product Image",
                      "description": "Information about a specific product image.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Image Foreign ID",
                          "description": "A unique identifier for the product image."
                        },
                        "url": {
                          "type": "string",
                          "title": "URL",
                          "description": "The URL for a product image."
                        },
                        "variant_ids": {
                          "type": "array",
                          "title": "Product Variants",
                          "description": "The list of product variants using the image.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "published_at_foreign": {
                    "type": "string",
                    "title": "Foreign Publish Time",
                    "format": "date-time",
                    "description": "The date and time the product was published in ISO 8601 format.",
                    "example": "2015-07-15 19:28:00"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product",
                  "description": "Information about a specific product.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Foreign ID",
                      "description": "A unique identifier for the product.",
                      "readOnly": true
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The currency code",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product.",
                      "example": "Cat Hat"
                    },
                    "handle": {
                      "type": "string",
                      "title": "Handle",
                      "description": "The handle of a product.",
                      "example": "cat-hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "Product URL",
                      "description": "The URL for a product."
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a product.",
                      "example": "This is a cat hat."
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "The type of product.",
                      "example": "Accessories"
                    },
                    "vendor": {
                      "type": "string",
                      "title": "Vendor",
                      "description": "The vendor for a product."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product."
                    },
                    "variants": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](/developer/reference/ecommerce-stores/ecommerce-products/ecommerce-product-variants/#get_/ecommerce/stores/-store_id-/products/-product_id-/variants).",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Variant",
                        "description": "Information about a specific product variant.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product variant.",
                            "example": "Cat Hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product variant."
                          },
                          "sku": {
                            "type": "string",
                            "title": "SKU",
                            "description": "The stock keeping unit (SKU) of a product variant."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a product variant."
                          },
                          "inventory_quantity": {
                            "type": "integer",
                            "title": "Inventory Quantity",
                            "description": "The inventory quantity of a product variant."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The image URL for a product variant."
                          },
                          "backorders": {
                            "type": "string",
                            "title": "Backorders",
                            "description": "The backorders of a product variant."
                          },
                          "visibility": {
                            "type": "string",
                            "title": "Visibility",
                            "description": "The visibility of a product variant."
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the product was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the product was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "title": "Product Images",
                      "description": "An array of the product's images.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Image",
                        "description": "Information about a specific product image.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Image Foreign ID",
                            "description": "A unique identifier for the product image."
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product image."
                          },
                          "variant_ids": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "The list of product variants using the image.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "published_at_foreign": {
                      "type": "string",
                      "title": "Foreign Publish Time",
                      "format": "date-time",
                      "description": "The date and time the product was published in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product",
                  "description": "Information about a specific product.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Foreign ID",
                      "description": "A unique identifier for the product.",
                      "readOnly": true
                    },
                    "currency_code": {
                      "type": "string",
                      "title": "Currency Code",
                      "description": "The currency code",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product.",
                      "example": "Cat Hat"
                    },
                    "handle": {
                      "type": "string",
                      "title": "Handle",
                      "description": "The handle of a product.",
                      "example": "cat-hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "Product URL",
                      "description": "The URL for a product."
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "description": "The description of a product.",
                      "example": "This is a cat hat."
                    },
                    "type": {
                      "type": "string",
                      "title": "Type",
                      "description": "The type of product.",
                      "example": "Accessories"
                    },
                    "vendor": {
                      "type": "string",
                      "title": "Vendor",
                      "description": "The vendor for a product."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Product Image URL",
                      "description": "The image URL for a product."
                    },
                    "variants": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](/developer/reference/ecommerce-stores/ecommerce-products/ecommerce-product-variants/#get_/ecommerce/stores/-store_id-/products/-product_id-/variants).",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Variant",
                        "description": "Information about a specific product variant.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product variant.",
                            "example": "Cat Hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product variant."
                          },
                          "sku": {
                            "type": "string",
                            "title": "SKU",
                            "description": "The stock keeping unit (SKU) of a product variant."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a product variant."
                          },
                          "inventory_quantity": {
                            "type": "integer",
                            "title": "Inventory Quantity",
                            "description": "The inventory quantity of a product variant."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The image URL for a product variant."
                          },
                          "backorders": {
                            "type": "string",
                            "title": "Backorders",
                            "description": "The backorders of a product variant."
                          },
                          "visibility": {
                            "type": "string",
                            "title": "Visibility",
                            "description": "The visibility of a product variant."
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the product was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the product was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "title": "Product Images",
                      "description": "An array of the product's images.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Image",
                        "description": "Information about a specific product image.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Image Foreign ID",
                            "description": "A unique identifier for the product image."
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product image."
                          },
                          "variant_ids": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "The list of product variants using the image.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "published_at_foreign": {
                      "type": "string",
                      "title": "Foreign Publish Time",
                      "format": "date-time",
                      "description": "The date and time the product was published in ISO 8601 format.",
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_store_product",
          "methodNameCamel": "updateStoreProduct"
        }
      },
      "delete": {
        "summary": "Delete product",
        "description": "Delete a product.",
        "operationId": "deleteEcommerceStoresIdProductsId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_store_product",
          "methodNameCamel": "deleteStoreProduct"
        }
      }
    },
    "/ecommerce/stores/{store_id}/products/{product_id}/variants": {
      "get": {
        "summary": "List product variants",
        "description": "Get information about a product's variants.",
        "operationId": "getEcommerceStoresIdProductsIdVariants",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Ecommerce Product Variants",
                  "description": "A collection of a product's variants.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Product ID",
                      "description": "The product id."
                    },
                    "variants": {
                      "type": "array",
                      "title": "Ecommerce Product Variants",
                      "description": "An array of objects, each representing a product's variants.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Variant",
                        "description": "Information about a specific product variant.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product variant.",
                            "example": "Cat Hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product variant."
                          },
                          "sku": {
                            "type": "string",
                            "title": "SKU",
                            "description": "The stock keeping unit (SKU) of a product variant."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a product variant."
                          },
                          "inventory_quantity": {
                            "type": "integer",
                            "title": "Inventory Quantity",
                            "description": "The inventory quantity of a product variant."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The image URL for a product variant."
                          },
                          "backorders": {
                            "type": "string",
                            "title": "Backorders",
                            "description": "The backorders of a product variant."
                          },
                          "visibility": {
                            "type": "string",
                            "title": "Visibility",
                            "description": "The visibility of a product variant."
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the product was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the product was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Ecommerce Product Variants",
                  "description": "A collection of a product's variants.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Product ID",
                      "description": "The product id."
                    },
                    "variants": {
                      "type": "array",
                      "title": "Ecommerce Product Variants",
                      "description": "An array of objects, each representing a product's variants.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Variant",
                        "description": "Information about a specific product variant.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Product Variant Foreign ID",
                            "description": "A unique identifier for the product variant.",
                            "readOnly": true
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title of a product variant.",
                            "example": "Cat Hat"
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product variant."
                          },
                          "sku": {
                            "type": "string",
                            "title": "SKU",
                            "description": "The stock keeping unit (SKU) of a product variant."
                          },
                          "price": {
                            "type": "number",
                            "title": "Price",
                            "description": "The price of a product variant."
                          },
                          "inventory_quantity": {
                            "type": "integer",
                            "title": "Inventory Quantity",
                            "description": "The inventory quantity of a product variant."
                          },
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The image URL for a product variant."
                          },
                          "backorders": {
                            "type": "string",
                            "title": "Backorders",
                            "description": "The backorders of a product variant."
                          },
                          "visibility": {
                            "type": "string",
                            "title": "Visibility",
                            "description": "The visibility of a product variant."
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the product was created in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the product was last updated in ISO 8601 format.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_product_variants",
          "methodNameCamel": "getProductVariants"
        }
      },
      "post": {
        "summary": "Add product variant",
        "description": "Add a new variant to the product.",
        "operationId": "postEcommerceStoresIdProductsIdVariants",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/postEcommerceStoresIdProductsIdVariantsBody"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Variant",
                  "description": "Information about a specific product variant.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product variant.",
                      "example": "Cat Hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product variant."
                    },
                    "sku": {
                      "type": "string",
                      "title": "SKU",
                      "description": "The stock keeping unit (SKU) of a product variant."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a product variant."
                    },
                    "inventory_quantity": {
                      "type": "integer",
                      "title": "Inventory Quantity",
                      "description": "The inventory quantity of a product variant."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The image URL for a product variant."
                    },
                    "backorders": {
                      "type": "string",
                      "title": "Backorders",
                      "description": "The backorders of a product variant."
                    },
                    "visibility": {
                      "type": "string",
                      "title": "Visibility",
                      "description": "The visibility of a product variant."
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the product was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the product was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Variant",
                  "description": "Information about a specific product variant.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product variant.",
                      "example": "Cat Hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product variant."
                    },
                    "sku": {
                      "type": "string",
                      "title": "SKU",
                      "description": "The stock keeping unit (SKU) of a product variant."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a product variant."
                    },
                    "inventory_quantity": {
                      "type": "integer",
                      "title": "Inventory Quantity",
                      "description": "The inventory quantity of a product variant."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The image URL for a product variant."
                    },
                    "backorders": {
                      "type": "string",
                      "title": "Backorders",
                      "description": "The backorders of a product variant."
                    },
                    "visibility": {
                      "type": "string",
                      "title": "Visibility",
                      "description": "The visibility of a product variant."
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the product was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the product was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_product_variants",
          "methodNameCamel": "addProductVariants"
        }
      }
    },
    "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}": {
      "get": {
        "summary": "Get product variant info",
        "description": "Get information about a specific product variant.",
        "operationId": "getEcommerceStoresIdProductsIdVariantsId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant_id",
            "x-title": "Product Variant ID",
            "description": "The id for the product variant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Variant",
                  "description": "Information about a specific product variant.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product variant.",
                      "example": "Cat Hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product variant."
                    },
                    "sku": {
                      "type": "string",
                      "title": "SKU",
                      "description": "The stock keeping unit (SKU) of a product variant."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a product variant."
                    },
                    "inventory_quantity": {
                      "type": "integer",
                      "title": "Inventory Quantity",
                      "description": "The inventory quantity of a product variant."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The image URL for a product variant."
                    },
                    "backorders": {
                      "type": "string",
                      "title": "Backorders",
                      "description": "The backorders of a product variant."
                    },
                    "visibility": {
                      "type": "string",
                      "title": "Visibility",
                      "description": "The visibility of a product variant."
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the product was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the product was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Variant",
                  "description": "Information about a specific product variant.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product variant.",
                      "example": "Cat Hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product variant."
                    },
                    "sku": {
                      "type": "string",
                      "title": "SKU",
                      "description": "The stock keeping unit (SKU) of a product variant."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a product variant."
                    },
                    "inventory_quantity": {
                      "type": "integer",
                      "title": "Inventory Quantity",
                      "description": "The inventory quantity of a product variant."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The image URL for a product variant."
                    },
                    "backorders": {
                      "type": "string",
                      "title": "Backorders",
                      "description": "The backorders of a product variant."
                    },
                    "visibility": {
                      "type": "string",
                      "title": "Visibility",
                      "description": "The visibility of a product variant."
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the product was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the product was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_product_variant",
          "methodNameCamel": "getProductVariant"
        }
      },
      "put": {
        "summary": "Add or update product variant",
        "description": "Add or update a product variant.",
        "operationId": "putEcommerceStoresIdProductsIdVariantsId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant_id",
            "x-title": "Product Variant ID",
            "description": "The id for the product variant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/postEcommerceStoresIdProductsIdVariantsBody"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Variant",
                  "description": "Information about a specific product variant.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product variant.",
                      "example": "Cat Hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product variant."
                    },
                    "sku": {
                      "type": "string",
                      "title": "SKU",
                      "description": "The stock keeping unit (SKU) of a product variant."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a product variant."
                    },
                    "inventory_quantity": {
                      "type": "integer",
                      "title": "Inventory Quantity",
                      "description": "The inventory quantity of a product variant."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The image URL for a product variant."
                    },
                    "backorders": {
                      "type": "string",
                      "title": "Backorders",
                      "description": "The backorders of a product variant."
                    },
                    "visibility": {
                      "type": "string",
                      "title": "Visibility",
                      "description": "The visibility of a product variant."
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the product was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the product was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Variant",
                  "description": "Information about a specific product variant.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product variant.",
                      "example": "Cat Hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product variant."
                    },
                    "sku": {
                      "type": "string",
                      "title": "SKU",
                      "description": "The stock keeping unit (SKU) of a product variant."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a product variant."
                    },
                    "inventory_quantity": {
                      "type": "integer",
                      "title": "Inventory Quantity",
                      "description": "The inventory quantity of a product variant."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The image URL for a product variant."
                    },
                    "backorders": {
                      "type": "string",
                      "title": "Backorders",
                      "description": "The backorders of a product variant."
                    },
                    "visibility": {
                      "type": "string",
                      "title": "Visibility",
                      "description": "The visibility of a product variant."
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the product was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the product was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_product_variant",
          "methodNameCamel": "addProductVariant"
        }
      },
      "patch": {
        "summary": "Update product variant",
        "description": "Update a product variant.",
        "operationId": "patchEcommerceStoresIdProductsIdVariantsId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant_id",
            "x-title": "Product Variant ID",
            "description": "The id for the product variant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Product Variant",
                "description": "Information about a specific product variant.",
                "properties": {
                  "title": {
                    "type": "string",
                    "title": "Title",
                    "description": "The title of a product variant.",
                    "example": "Cat Hat"
                  },
                  "url": {
                    "type": "string",
                    "title": "URL",
                    "description": "The URL for a product variant."
                  },
                  "sku": {
                    "type": "string",
                    "title": "SKU",
                    "description": "The stock keeping unit (SKU) of a product variant."
                  },
                  "price": {
                    "type": "number",
                    "title": "Price",
                    "description": "The price of a product variant."
                  },
                  "inventory_quantity": {
                    "type": "integer",
                    "title": "Inventory Quantity",
                    "description": "The inventory quantity of a product variant."
                  },
                  "image_url": {
                    "type": "string",
                    "title": "Image URL",
                    "description": "The image URL for a product variant."
                  },
                  "backorders": {
                    "type": "string",
                    "title": "Backorders",
                    "description": "The backorders of a product variant."
                  },
                  "visibility": {
                    "type": "string",
                    "title": "Visibility",
                    "description": "The visibility of a product variant."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Variant",
                  "description": "Information about a specific product variant.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product variant.",
                      "example": "Cat Hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product variant."
                    },
                    "sku": {
                      "type": "string",
                      "title": "SKU",
                      "description": "The stock keeping unit (SKU) of a product variant."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a product variant."
                    },
                    "inventory_quantity": {
                      "type": "integer",
                      "title": "Inventory Quantity",
                      "description": "The inventory quantity of a product variant."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The image URL for a product variant."
                    },
                    "backorders": {
                      "type": "string",
                      "title": "Backorders",
                      "description": "The backorders of a product variant."
                    },
                    "visibility": {
                      "type": "string",
                      "title": "Visibility",
                      "description": "The visibility of a product variant."
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the product was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the product was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Variant",
                  "description": "Information about a specific product variant.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Product Variant Foreign ID",
                      "description": "A unique identifier for the product variant.",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title of a product variant.",
                      "example": "Cat Hat"
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product variant."
                    },
                    "sku": {
                      "type": "string",
                      "title": "SKU",
                      "description": "The stock keeping unit (SKU) of a product variant."
                    },
                    "price": {
                      "type": "number",
                      "title": "Price",
                      "description": "The price of a product variant."
                    },
                    "inventory_quantity": {
                      "type": "integer",
                      "title": "Inventory Quantity",
                      "description": "The inventory quantity of a product variant."
                    },
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The image URL for a product variant."
                    },
                    "backorders": {
                      "type": "string",
                      "title": "Backorders",
                      "description": "The backorders of a product variant."
                    },
                    "visibility": {
                      "type": "string",
                      "title": "Visibility",
                      "description": "The visibility of a product variant."
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the product was created in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the product was last updated in ISO 8601 format.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_product_variant",
          "methodNameCamel": "updateProductVariant"
        }
      },
      "delete": {
        "summary": "Delete product variant",
        "description": "Delete a product variant.",
        "operationId": "deleteEcommerceStoresIdProductsIdVariantsId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant_id",
            "x-title": "Product Variant ID",
            "description": "The id for the product variant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_product_variant",
          "methodNameCamel": "deleteProductVariant"
        }
      }
    },
    "/ecommerce/stores/{store_id}/products/{product_id}/images": {
      "get": {
        "summary": "List product images",
        "description": "Get information about a product's images.",
        "operationId": "getEcommerceStoresIdProductsIdImages",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "count",
            "x-title": "Count",
            "in": "query",
            "description": "The number of records to return. [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **10**. [Maximum value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **1000**",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 10
            }
          },
          {
            "name": "offset",
            "x-title": "Offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](/developer/guides/get-started-with-mailchimp-api-3/#Parameters) is **0**.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Ecommerce Product Images",
                  "description": "A collection of a product's images.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Product ID",
                      "description": "The product id."
                    },
                    "images": {
                      "type": "array",
                      "title": "Ecommerce Product Images",
                      "description": "An array of objects, each representing a product image resource.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Image",
                        "description": "Information about a specific product image.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Image Foreign ID",
                            "description": "A unique identifier for the product image."
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product image."
                          },
                          "variant_ids": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "The list of product variants using the image.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Ecommerce Product Images",
                  "description": "A collection of a product's images.",
                  "properties": {
                    "store_id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The store id."
                    },
                    "product_id": {
                      "type": "string",
                      "title": "Product ID",
                      "description": "The product id."
                    },
                    "images": {
                      "type": "array",
                      "title": "Ecommerce Product Images",
                      "description": "An array of objects, each representing a product image resource.",
                      "items": {
                        "type": "object",
                        "title": "E-commerce Product Image",
                        "description": "Information about a specific product image.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Image Foreign ID",
                            "description": "A unique identifier for the product image."
                          },
                          "url": {
                            "type": "string",
                            "title": "URL",
                            "description": "The URL for a product image."
                          },
                          "variant_ids": {
                            "type": "array",
                            "title": "Product Variants",
                            "description": "The list of product variants using the image.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "_links": {
                            "title": "Links",
                            "description": "A list of link types and descriptions for the API schema documents.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Resource Link",
                              "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                              "properties": {
                                "rel": {
                                  "type": "string",
                                  "title": "Rel",
                                  "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                                  "readOnly": true
                                },
                                "href": {
                                  "type": "string",
                                  "title": "Href",
                                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                                  "readOnly": true
                                },
                                "method": {
                                  "type": "string",
                                  "title": "Method",
                                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "OPTIONS",
                                    "HEAD"
                                  ],
                                  "readOnly": true
                                },
                                "targetSchema": {
                                  "type": "string",
                                  "title": "Target Schema",
                                  "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                                  "readOnly": true
                                },
                                "schema": {
                                  "type": "string",
                                  "title": "Schema",
                                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "total_items": {
                      "type": "integer",
                      "title": "Item Count",
                      "description": "The total number of items matching the query regardless of pagination.",
                      "readOnly": true
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_product_images",
          "methodNameCamel": "getProductImages"
        }
      },
      "post": {
        "summary": "Add product image",
        "description": "Add a new image to the product.",
        "operationId": "postEcommerceStoresIdProductsIdImages",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Product Image",
                "description": "Information about a specific product image.",
                "required": [
                  "id",
                  "url"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Image Foreign ID",
                    "description": "A unique identifier for the product image."
                  },
                  "url": {
                    "type": "string",
                    "title": "URL",
                    "description": "The URL for a product image."
                  },
                  "variant_ids": {
                    "type": "array",
                    "title": "Product Variants",
                    "description": "The list of product variants using the image.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Image",
                  "description": "Information about a specific product image.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Image Foreign ID",
                      "description": "A unique identifier for the product image."
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product image."
                    },
                    "variant_ids": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "The list of product variants using the image.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Image",
                  "description": "Information about a specific product image.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Image Foreign ID",
                      "description": "A unique identifier for the product image."
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product image."
                    },
                    "variant_ids": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "The list of product variants using the image.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "add_product_image",
          "methodNameCamel": "addProductImage"
        }
      }
    },
    "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}": {
      "get": {
        "summary": "Get product image info",
        "description": "Get information about a specific product image.",
        "operationId": "getEcommerceStoresIdProductsIdImagesId",
        "parameters": [
          {
            "name": "fields",
            "x-title": "Fields",
            "in": "query",
            "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_fields",
            "x-title": "Exclude Fields",
            "in": "query",
            "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "image_id",
            "x-title": "Product Image ID",
            "description": "The id for the product image.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Image",
                  "description": "Information about a specific product image.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Image Foreign ID",
                      "description": "A unique identifier for the product image."
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product image."
                    },
                    "variant_ids": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "The list of product variants using the image.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Image",
                  "description": "Information about a specific product image.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Image Foreign ID",
                      "description": "A unique identifier for the product image."
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product image."
                    },
                    "variant_ids": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "The list of product variants using the image.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "get_product_image",
          "methodNameCamel": "getProductImage"
        }
      },
      "patch": {
        "summary": "Update product image",
        "description": "Update a product image.",
        "operationId": "patchEcommerceStoresIdProductsIdImagesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "image_id",
            "x-title": "Product Image ID",
            "description": "The id for the product image.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "E-commerce Product Image",
                "description": "Information about a specific product image.",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "Image Foreign ID",
                    "description": "A unique identifier for the product image."
                  },
                  "url": {
                    "type": "string",
                    "title": "URL",
                    "description": "The URL for a product image."
                  },
                  "variant_ids": {
                    "type": "array",
                    "title": "Product Variants",
                    "description": "The list of product variants using the image.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Image",
                  "description": "Information about a specific product image.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Image Foreign ID",
                      "description": "A unique identifier for the product image."
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product image."
                    },
                    "variant_ids": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "The list of product variants using the image.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "E-commerce Product Image",
                  "description": "Information about a specific product image.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Image Foreign ID",
                      "description": "A unique identifier for the product image."
                    },
                    "url": {
                      "type": "string",
                      "title": "URL",
                      "description": "The URL for a product image."
                    },
                    "variant_ids": {
                      "type": "array",
                      "title": "Product Variants",
                      "description": "The list of product variants using the image.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "_links": {
                      "title": "Links",
                      "description": "A list of link types and descriptions for the API schema documents.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Resource Link",
                        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
                        "properties": {
                          "rel": {
                            "type": "string",
                            "title": "Rel",
                            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
                            "readOnly": true
                          },
                          "href": {
                            "type": "string",
                            "title": "Href",
                            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
                            "readOnly": true
                          },
                          "method": {
                            "type": "string",
                            "title": "Method",
                            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "OPTIONS",
                              "HEAD"
                            ],
                            "readOnly": true
                          },
                          "targetSchema": {
                            "type": "string",
                            "title": "Target Schema",
                            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
                            "readOnly": true
                          },
                          "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "update_product_image",
          "methodNameCamel": "updateProductImage"
        }
      },
      "delete": {
        "summary": "Delete product image",
        "description": "Delete a product image.",
        "operationId": "deleteEcommerceStoresIdProductsIdImagesId",
        "parameters": [
          {
            "name": "store_id",
            "x-title": "Store ID",
            "description": "The store id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "x-title": "Product ID",
            "description": "The id for the product of a store.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "image_id",
            "x-title": "Product Image ID",
            "description": "The id for the product image.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "An error generated by the Mailchimp API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              },
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "title": "Problem Detail Document",
                  "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
                  "required": [
                    "type",
                    "title",
                    "status",
                    "detail",
                    "instance"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Problem Type",
                      "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                      "example": "https://mailchimp.com/developer/marketing/docs/errors/"
                    },
                    "title": {
                      "type": "string",
                      "title": "Error Title",
                      "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                      "example": "Resource Not Found"
                    },
                    "status": {
                      "type": "integer",
                      "title": "HTTP Status Code",
                      "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                      "example": 404
                    },
                    "detail": {
                      "type": "string",
                      "title": "Error Message",
                      "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
                      "example": "The requested resource could not be found."
                    },
                    "instance": {
                      "type": "string",
                      "title": "Instance ID",
                      "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                      "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "tags": [
          "ecommerce"
        ],
        "x-custom-config": {
          "methodNameSnake": "delete_product_image",
          "methodNameCamel": "deleteProductImage"
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "requestBodies": {
      "postEcommerceStoresIdProductsIdVariantsBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "title": "E-commerce Product Variant",
              "description": "Information about a specific product variant.",
              "required": [
                "id",
                "title"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant."
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product variant.",
                  "example": "Cat Hat"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product variant."
                },
                "sku": {
                  "type": "string",
                  "title": "SKU",
                  "description": "The stock keeping unit (SKU) of a product variant."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a product variant."
                },
                "inventory_quantity": {
                  "type": "integer",
                  "title": "Inventory Quantity",
                  "description": "The inventory quantity of a product variant."
                },
                "image_url": {
                  "type": "string",
                  "title": "Image URL",
                  "description": "The image URL for a product variant."
                },
                "backorders": {
                  "type": "string",
                  "title": "Backorders",
                  "description": "The backorders of a product variant."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "description": "The visibility of a product variant."
                }
              }
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}