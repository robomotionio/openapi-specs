{
  "openapi": "3.0.0",
  "info": {
    "title": "ArchieBot API",
    "description": "The ArchieBot API allows you to perform all operations that are possible with your web client in an account panel or with your account mobile app.",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://example.com/api",
      "variables": {}
    },
    {
      "url": "https://site-archiebot-devel.s3.amazonaws.com/storage/a_28c8edde3d61a0411511d3b1866f0636",
      "variables": {}
    }
  ],
  "paths": {
    "/oauth/access_token": {
      "post": {
        "tags": [
          "OAuth2"
        ],
        "summary": "/api/oauth/access_token",
        "description": "Get an user access token.",
        "operationId": "/api/oauth/access_token",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "grant_type",
                  "client_id",
                  "client_secret",
                  "username",
                  "password"
                ],
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "example": "password"
                  },
                  "client_id": {
                    "type": "string",
                    "example": "{{client_id}}"
                  },
                  "client_secret": {
                    "type": "string",
                    "example": "{{client_secret}}"
                  },
                  "username": {
                    "type": "string",
                    "example": "{{username}}"
                  },
                  "password": {
                    "type": "string",
                    "example": "{{password}}"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/oauth/get_authorization_code": {
      "post": {
        "tags": [
          "OAuth2"
        ],
        "summary": "/api/oauth/get_authorization_code",
        "description": "Get authorization code (OAuth2 authorization_code grant) for the user. You can change that code to access_token.",
        "operationId": "/api/oauth/get_authorization_code",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "client_id",
                  "client_secret",
                  "redirect_uri",
                  "state",
                  "scope"
                ],
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string",
                    "example": "{{app_client_id}}"
                  },
                  "client_secret": {
                    "type": "string",
                    "example": "{{app_client_secret}}"
                  },
                  "redirect_uri": {
                    "type": "string",
                    "example": "{{app_redirect_uri}}"
                  },
                  "state": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/oauth/access_token/refresh": {
      "post": {
        "tags": [
          "OAuth2"
        ],
        "summary": "/api/oauth/access_token/refresh",
        "description": "Get an user refresh token.\n\nPlease note that Refresh Tokens have also an expiration date. There is a specific (default 6h) time in which you will be able to refresh a token without acquiring a new one again by logging in. Please consider this while making your App.",
        "operationId": "/api/oauth/access_token/refresh",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "grant_type",
                  "client_id",
                  "client_secret",
                  "refresh_token"
                ],
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "Alwasy should be **refresh_token**",
                    "example": "refresh_token"
                  },
                  "client_id": {
                    "type": "string",
                    "description": "An id of a OAuth client",
                    "example": "{{client_id}}"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Secret hashed password for OAuth authorization",
                    "example": "{{client_secret}}"
                  },
                  "refresh_token": {
                    "type": "string",
                    "description": "The refresh_token you you received during authorization",
                    "example": "{{refresh_token}}"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "JWT"
        ],
        "summary": "/api/auth/login",
        "description": "API Login, on success return JWT Auth token.",
        "operationId": "/api/auth/login",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "email",
                  "password",
                  "identifier"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "{{username}}"
                  },
                  "password": {
                    "type": "string",
                    "example": "{{password}}"
                  },
                  "identifier": {
                    "type": "string",
                    "example": "{{identifier}}"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/auth/info": {
      "get": {
        "tags": [
          "JWT"
        ],
        "summary": "/api/auth/info",
        "description": "Get informations about logged user.",
        "operationId": "/api/auth/info",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/auth/token/refresh": {
      "post": {
        "tags": [
          "JWT"
        ],
        "summary": "/api/auth/token/refresh",
        "description": "Get an user JWT refresh token.",
        "operationId": "/api/auth/token/refresh",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/auth/logout": {
      "delete": {
        "tags": [
          "JWT"
        ],
        "summary": "/api/auth/logout",
        "description": "Invalidate the access token, so user cannot use it anymore.\nThe user need to relogin to get a new token.",
        "operationId": "/api/auth/logout",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/account/widget_tokens/{id}": {
      "get": {
        "tags": [
          "WidgetTokens"
        ],
        "summary": "/api/account/widget_tokens/:id",
        "description": "Retrieve collection of user's account widgets tokens.\n\nParameter id is optional for one item.\n\nSortable columns:\n* id\n* name  \n* expired_at\n* created_at",
        "operationId": "/api/account/widget_tokens/:id",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Optional integer",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Optional in:id,name,expired_at,created_at",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "created_at"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Optional in:asc,desc",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "desc"
            }
          },
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Optional",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "WidgetTokens"
        ],
        "summary": "/api/account/widget_tokens/:id",
        "description": "Deletes account widget tokens by id.",
        "operationId": "Delete/api/account/widget_tokens/:id",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "WidgetTokens"
        ],
        "summary": "/api/account/widget_tokens/:id",
        "description": "Update widget tokens.  \n\nReturns updated widget token data.\n\nRemember that tokens won't be re-generated!\n\n",
        "operationId": "Put/api/account/widget_tokens/:id",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Required",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 227
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "expired_at",
                  "widgets_ids[0]",
                  "widgets_ids[1]",
                  "paid",
                  "price",
                  "currency"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Required, min:3, max:255",
                    "example": "Updated account widget tokens"
                  },
                  "expired_at": {
                    "type": "string",
                    "description": "Optional, Date in format \"Y-m-d H:i:s\", nullable",
                    "example": "2020-07-01 16:00:00"
                  },
                  "widgets_ids[0]": {
                    "type": "integer",
                    "description": "Required array of widget ids",
                    "format": "int32",
                    "example": 60
                  },
                  "widgets_ids[1]": {
                    "type": "integer",
                    "description": "Required array of widget ids",
                    "format": "int32",
                    "example": 77
                  },
                  "paid": {
                    "type": "integer",
                    "description": "WIP: Optional, depends on limit",
                    "format": "int32",
                    "example": 0
                  },
                  "price": {
                    "type": "number",
                    "description": "Optional, depends on paid flag, min max depends on limit. double 8,2",
                    "format": "double",
                    "example": 16.66
                  },
                  "currency": {
                    "type": "string",
                    "description": "Optional, depends on paid flag. must be in: EUR, GBP, PLN, RUB, USD, AUD",
                    "example": "PLN"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/account/widget_tokens/items/{id}": {
      "get": {
        "tags": [
          "WidgetTokens"
        ],
        "summary": "/api/account/widget_tokens/items/:id",
        "description": "Retrieve collection of user's account widgets tokens items.\n\nSortable columns:\n* id\n* name  \n* expired_at\n* created_at\n\nSearchable params:\n* token",
        "operationId": "/api/account/widget_tokens/items/:id",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "created_at"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "desc"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Optional",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Optional",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 451
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/account/widget_user_tokens/{widget_id}": {
      "get": {
        "tags": [
          "WidgetTokens"
        ],
        "summary": "/api/account/widget_user_tokens/:widget_id",
        "description": "Retrieve collection of user's account widgets tokens by widget id\n",
        "operationId": "/api/account/widget_user_tokens/:widget_id",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 89
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/account/widget_tokens/item/{id}": {
      "delete": {
        "tags": [
          "WidgetTokens"
        ],
        "summary": "/api/account/widget_tokens/item/:id",
        "description": "Deletes account widget token item by id.",
        "operationId": "/api/account/widget_tokens/item/:id",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 26759
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "WidgetTokens"
        ],
        "summary": "/api/account/widget_tokens/item/:id",
        "description": "Update expiration date for token item.",
        "operationId": "Put/api/account/widget_tokens/item/:id",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 9001
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "expired_at"
                ],
                "type": "object",
                "properties": {
                  "expired_at": {
                    "type": "string",
                    "description": "Optional, Date in format \"Y-m-d H:i:s\"."
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/account/widget_tokens": {
      "post": {
        "tags": [
          "WidgetTokens"
        ],
        "summary": "/api/account/widget_tokens",
        "description": "Create new widget tokens.  \n\nReturns newly created widget token data.  \n\n",
        "operationId": "/api/account/widget_tokens",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "amount",
                  "widgets_ids[0]",
                  "expired_at",
                  "paid",
                  "price"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Required, min:3, max:255",
                    "example": "New account widget tokens"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "Optional integer, min:1, max:depends_on_limit. Null in paid tokens",
                    "format": "int32",
                    "example": 66
                  },
                  "widgets_ids[0]": {
                    "type": "integer",
                    "description": "Required array of widget ids",
                    "format": "int32",
                    "example": 42
                  },
                  "expired_at": {
                    "type": "string",
                    "description": "Optional, Date in format \"Y-m-d H:i:s\".",
                    "example": "2020-10-28 16:00:00"
                  },
                  "paid": {
                    "type": "integer",
                    "description": "Depends on payouts gateway integration",
                    "format": "int32",
                    "example": 1
                  },
                  "price": {
                    "type": "integer",
                    "description": "Depends on payouts gateway integration",
                    "format": "int32",
                    "example": 5
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/account/widget_tokens/items/generate/{id}": {
      "post": {
        "tags": [
          "WidgetTokens"
        ],
        "summary": "/api/account/widget_tokens/items/generate/:id",
        "description": "Generates more tokens. \n\nReturns widget token data.  ",
        "operationId": "/api/account/widget_tokens/items/generate/:id",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 451
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "amount"
                ],
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "Required integer, min:1, max:depends_on_limit",
                    "format": "int32",
                    "example": 13
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets/{widget_id}/sessions/{session_id}/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id/sessions/:session_id/logs",
        "description": "Retrieve a collection of Widget session logs from your account.  \n\nSortable columns:  \n* id\n* widget_session_id\n* attendee_id\n* attendee_token\n* attendee_role\n* attendee_visit\n* event_type\n* event_timestamp\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSession,\n* Attendee",
        "operationId": "/api/users/:user_id/widgets/:widget_id/sessions/:session_id/logs",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets/{widget_id}/sessions/{session_id}/logs/{log_id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id/sessions/:session_id/logs/:log_id",
        "description": "Retrieve a single Widget session log from your account.  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSession,\n* Attendee",
        "operationId": "/api/users/:user_id/widgets/:widget_id/sessions/:session_id/logs/:log_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "log_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/sessions/{session_id}/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "/api/users/:user_id/sessions/:session_id/logs",
        "description": "Retrieve a collection of Widget session logs from selected account.  \n\nSortable columns:  \n* id\n* widget_session_id\n* attendee_id\n* attendee_token\n* attendee_role\n* attendee_visit\n* event_type\n* event_timestamp\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSession,\n* Attendee",
        "operationId": "/api/users/:user_id/sessions/:session_id/logs",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/sessions/{session_id}/logs/{log_id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "/api/users/:user_id/sessions/:session_id/logs/:log_id",
        "description": "Retrieve a single Widget session log from selected account.  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSession,\n* Attendee",
        "operationId": "/api/users/:user_id/sessions/:session_id/logs/:log_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "log_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/sessions/{session_id}/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "/api/sessions/:session_id/logs",
        "description": "Retrieve a collection of Widget Session Logs.  \n\nSortable columns:  \n* id\n* widget_session_id\n* attendee_id\n* attendee_token\n* attendee_role\n* attendee_visit\n* event_type\n* event_timestamp\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSession,\n* Attendee",
        "operationId": "/api/sessions/:session_id/logs",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/sessions/{session_id}/logs/{log_id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "/api/sessions/:session_id/logs/:log_id",
        "description": "Retrieve a single Widget Session Log.  \n\nAvailable includes:  \n* WidgetSessionOrigin\n* WidgetSession\n* Attendee",
        "operationId": "/api/sessions/:session_id/logs/:log_id",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "log_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets/{widget_id}/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id/sessions",
        "description": "Retrieve a collection of Widget sessions from your account.  \n\nSortable columns:  \n* id\n* instance_hid\n* is_active\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSessionLog,\n* Widget",
        "operationId": "/api/users/:user_id/widgets/:widget_id/sessions",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets/{widget_id}/sessions/{session_id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id/sessions/:session_id",
        "description": "Retrieve selected Widget session from your account.  \n\nAvailable includes:  \n* WidgetSessionOrigin\n* WidgetSessionLog\n* Widget",
        "operationId": "/api/users/:user_id/widgets/:widget_id/sessions/:session_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id/sessions/:session_id1",
        "description": "Soft delete selected widget session (won't delete record from database).",
        "operationId": "/api/users/:user_id/widgets/:widget_id/sessions/:session_id1",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/users/:user_id/sessions",
        "description": "Retrieve a collection of Widget sessions from selected account.  \n\nSortable columns:  \n* id\n* instance_hid\n* is_active\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSessionLog,\n* Widget",
        "operationId": "/api/users/:user_id/sessions",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/sessions/{session_id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/users/:user_id/sessions/:session_id",
        "description": "Retrieve selected Widget session from selected account.  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSessionLog,\n* Widget",
        "operationId": "/api/users/:user_id/sessions/:session_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/users/:user_id/sessions/:session_id1",
        "description": "Soft delete selected widget session (won't delete record from database).",
        "operationId": "/api/users/:user_id/sessions/:session_id1",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/sessions",
        "description": "Retrieve a collection of Widget Sessions.  \n\nSortable columns:  \n* id\n* instance_hid\n* is_active\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSessionLog,\n* ParticipantCount\n* ParticipantsOnlineCount\n* Widget",
        "operationId": "/api/widgets/:widget_id/sessions",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id",
        "description": "Retrieve selected Widget Session.  \n\nAvailable includes:  \n* WidgetSessionOrigin\n* WidgetSessionLog\n* ParticipantCount\n* ParticipantsOnlineCount\n* Widget",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id1",
        "description": "Softly delete selected Widget Session.",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/logs": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/logs",
        "description": "Retrieve a collection of Widget Session Logs.  \n\nSortable columns:  \n* id\n* widget_session_id\n* attendee_id\n* attendee_token\n* attendee_role\n* attendee_visit\n* event_type\n* event_timestamp\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSession,\n* Attendee",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/logs",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/logs/{log_id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/logs/:log_id",
        "description": "Retrieve a single Widget Session Log.  \n\nAvailable includes:  \n* WidgetSessionOrigin\n* WidgetSession\n* Attendee",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/logs/:log_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "log_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/feedbacks": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/feedbacks",
        "description": "Add Widget Session Feedback.",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/feedbacks",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions",
        "description": "Retrieve the collection of Widget Poll Sessions.  \n\nSortable columns:\n* id\n* name\n* status\n* created_at\n* updated_at\n* deleted_at\n\nAvailable includes:\n* answers",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/sessions",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions",
        "description": "Create new Widget Poll Session.  \n\nReturns newly created Widget Poll Session data.  \n\nAvailable includes:\n* answers",
        "operationId": "Post/api/widgets/:widget_id/polls/:poll_id/sessions",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Session name"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/sessions/{poll_session_id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id",
        "description": "Retrieve selected Widget Poll Session data.  \n\nAvailable includes:\n* answers",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id",
        "description": "Update selected Widget Poll Session.  \n\nReturns updated Widget Poll Session data.  \n\nAvailable includes:\n* answers",
        "operationId": "Put/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New session name"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id",
        "description": "Softly delete selected Widget Poll Session.",
        "operationId": "Delete/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/sessions/{poll_session_id}/start": {
      "put": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/start",
        "description": "Start selected Widget Poll Session.  \n\nReturns started Widget Poll Session.  \n\nAvailable includes:\n* answers",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/start",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/sessions/{poll_session_id}/stop": {
      "put": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/stop",
        "description": "Stop selected Widget Poll Session.  \n\nReturns stopped Widget Poll Session.  \n\nAvailable includes:\n* answers",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/stop",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/sessions/{poll_session_id}/results/download": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/results/download",
        "description": "Download results of selected Widget Poll Session (csv format).",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/results/download",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/sessions",
        "description": "Retrieve a collection of Widget Sessions.  \n\nSortable columns:  \n* id\n* instance_hid\n* is_active\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSessionLog,\n* Widget",
        "operationId": "/api/sessions",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/sessions/{session_id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/sessions/:session_id",
        "description": "Retrieve selected Widget Session.  \n\nAvailable includes:  \n* WidgetSessionOrigin\n* WidgetSessionLog\n* Widget",
        "operationId": "/api/sessions/:session_id",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "/api/sessions/:session_id1",
        "description": "Softly delete selected Widget Session.",
        "operationId": "/api/sessions/:session_id1",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/users/:user_id/widgets",
        "description": "Retrieve collection of user's Widgets.\n\nSortable columns:\n* id \n* name  \n* start_date  \n* duration  \n* created_at  \n* updated_at  \n* active_session_id  \n* deleted_at  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles",
        "operationId": "/api/users/:user_id/widgets",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/users/:user_id/widgets",
        "description": "Add widget for specific user.  \n\nReturns single newly created widget.  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles",
        "operationId": "Post/api/users/:user_id/widgets",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "password",
                  "agenda",
                  "custom_name",
                  "status",
                  "type",
                  "start_date",
                  "duration",
                  "timezone",
                  "strict_event",
                  "manual_confirm_registrants",
                  "thank_you_email",
                  "autostart[thankyou_page_url]",
                  "autostart[content]",
                  "autostart[initial_layout_id]",
                  "autostart[initial_template_id]",
                  "autostart[mode]",
                  "autostart[lock_state]",
                  "system_internal_type",
                  "allowed_domains[0]",
                  "allowed_domains[1]",
                  "custom_template[css][0][url]",
                  "custom_template[css][0][role]",
                  "custom_template[js][0][url]",
                  "custom_template[js][0][role]",
                  "custom_fields[0][name]",
                  "custom_fields[0][value]",
                  "custom_fields[0][type]",
                  "presenters[0]",
                  "presenters[1]",
                  "reminders[0][type]",
                  "reminders[0][message]",
                  "reminders[0][time]",
                  "tracking_providers[0][type]",
                  "tracking_providers[0][params][type]",
                  "tracking_providers[0][params][value]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New widget name. Required, min. 3 characters, max. 65535",
                    "example": "User's room"
                  },
                  "password": {
                    "type": "string",
                    "description": "Room password. Optional, min. 3 characters.",
                    "example": "password"
                  },
                  "agenda": {
                    "type": "string",
                    "description": "Event agenda. Optional, min. 5 characters.",
                    "example": "12:00 Start\n13:00 End"
                  },
                  "custom_name": {
                    "type": "string",
                    "description": "Custom event url. Min. 1 character, max. 255.",
                    "example": "pretty-name"
                  },
                  "status": {
                    "type": "string",
                    "description": "Widget status. Accepted values: \"active\"/\"inactive\".",
                    "example": "active"
                  },
                  "type": {
                    "type": "string",
                    "example": "scheduled"
                  },
                  "start_date": {
                    "type": "string",
                    "description": "Event start date. Date in format \"Y-m-d H:i:s\".",
                    "example": "2017-12-21 15:00:00"
                  },
                  "duration": {
                    "type": "integer",
                    "description": "Event duration in minutes.",
                    "format": "int32",
                    "example": 45
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Event date timezone. Available timezones - http://php.net/manual/en/timezones.php",
                    "example": "Europe/Warsaw"
                  },
                  "strict_event": {
                    "type": "boolean",
                    "description": "Whether participants can enter room before event start or after event end. Boolean value true/false.",
                    "example": true
                  },
                  "manual_confirm_registrants": {
                    "type": "boolean",
                    "description": "Should the room owner confirm registrants manually. Boolean value true/false.",
                    "example": false
                  },
                  "thank_you_email": {
                    "type": "boolean",
                    "description": "Whether an automatic \"Thank you\" email message should be sent to participants after the meeting. Boolean value true/false.",
                    "example": true
                  },
                  "autostart[thankyou_page_url]": {
                    "type": "string",
                    "description": "Page to redirect participants after meeting. It should be valid url.",
                    "example": "https://example.com/thank-you"
                  },
                  "autostart[content]": {
                    "type": "string"
                  },
                  "autostart[initial_layout_id]": {
                    "type": "integer",
                    "description": "Initial room layout identifier. Integer value between 1 and 6.",
                    "format": "int32",
                    "example": 1
                  },
                  "autostart[initial_template_id]": {
                    "type": "integer",
                    "description": "Room template: 0 - webinar, 3-meeting",
                    "format": "int32",
                    "example": 0
                  },
                  "autostart[mode]": {
                    "type": "string",
                    "description": "Event mode. Available values: discussion/presentation/qa",
                    "example": "presentation"
                  },
                  "autostart[lock_state]": {
                    "type": "string",
                    "description": "Is room initially locked? Available values: \"locked\"/\"unlocked\"",
                    "example": "locked"
                  },
                  "system_internal_type": {
                    "type": "integer",
                    "description": "Widget internal type.\n0 - normal,\n1 - storage editor,\n2 - polls editor, \n3 - breakout rooms,\n4 - connection tester,\n5 - invites editor, \n6 - recorder player, \n7 - file share",
                    "format": "int32",
                    "example": 0
                  },
                  "allowed_domains[0]": {
                    "type": "string",
                    "description": "Allowed domains. Array of valid domains from which participants can enter the room.",
                    "example": "domain.com"
                  },
                  "allowed_domains[1]": {
                    "type": "string",
                    "example": "domain2.com"
                  },
                  "custom_template[css][0][url]": {
                    "type": "string",
                    "description": "Additional custom CSS stylesheets for room template.",
                    "example": "https://example.com/style.css"
                  },
                  "custom_template[css][0][role]": {
                    "type": "string",
                    "description": "Optionally you can set different files to different roles. Skip this if you want to set it to all roles.",
                    "example": "attendee"
                  },
                  "custom_template[js][0][url]": {
                    "type": "string",
                    "description": "Additional custom JS scripts for room template.",
                    "example": "https://example.com/script.js"
                  },
                  "custom_template[js][0][role]": {
                    "type": "string",
                    "description": "Optionally you can set different files to different roles. Skip this if you want to set it to all roles.",
                    "example": "presenter"
                  },
                  "custom_fields[0][name]": {
                    "type": "string",
                    "description": "Widgets custom field name.",
                    "example": "field"
                  },
                  "custom_fields[0][value]": {
                    "type": "integer",
                    "description": "Widgets custom field value.",
                    "format": "int32",
                    "example": 0
                  },
                  "custom_fields[0][type]": {
                    "type": "integer",
                    "description": "Widgets custom filed type.",
                    "format": "int32",
                    "example": 0
                  },
                  "presenters[0]": {
                    "type": "integer",
                    "description": "Array of presenters identifiers.",
                    "format": "int32",
                    "example": 1
                  },
                  "presenters[1]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "reminders[0][type]": {
                    "type": "string",
                    "description": "Event reminder type. Available types: email/phone/sms.",
                    "example": "email"
                  },
                  "reminders[0][message]": {
                    "type": "string",
                    "description": "Event reminder message. Min. 0 characters, max. 255.",
                    "example": "You've got upcoming event"
                  },
                  "reminders[0][time]": {
                    "type": "integer",
                    "description": "Event reminder time before event in minutes.",
                    "format": "int32",
                    "example": 30
                  },
                  "tracking_providers[0][type]": {
                    "type": "string",
                    "description": "Event tracking provider type. Available options:\n- google_analytics - Google Analytics,\n- facebook_pixel - Facebook Pixel,\n- image_pixel - custom pixel image url.",
                    "example": "google_analytics"
                  },
                  "tracking_providers[0][params][type]": {
                    "type": "string",
                    "description": "Tracking provider parameter type. Available values: token/url.",
                    "example": "token"
                  },
                  "tracking_providers[0][params][value]": {
                    "type": "string",
                    "description": "Tracking provider parameter.",
                    "example": "UAXXXXXXXXXX"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets/{widget_id}": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id",
        "description": "Retrieve a single user's Widget data by id.  \n\n>You can request for some additional related data by including `?include=<include_name>` in request url.  \n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "/api/users/:user_id/widgets/:widget_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 180
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "close"
                    },
                    "example": "close"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1535"
                    },
                    "example": "1535"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Thu, 21 Dec 2017 13:29:01 GMT"
                    },
                    "example": "Thu, 21 Dec 2017 13:29:01 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                    },
                    "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.7"
                    },
                    "example": "PHP/7.1.7"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "237"
                    },
                    "example": "237"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1513862955"
                    },
                    "example": "1513862955"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Retrieveuserwidget"
                },
                "example": {
                  "data": {
                    "id": 180,
                    "owner_id": 10,
                    "name": "p1ax1a",
                    "start_date": 1513846990,
                    "duration": 45,
                    "timezone": "Europe/Warsaw",
                    "strict_event": 1,
                    "cover_url": "https://api.archiebot.com/_shared/img/placeholder.png",
                    "agenda": "",
                    "password": null,
                    "password_pin": null,
                    "custom_name": "p1ax1a",
                    "token": "372-887-340",
                    "presenter_pin": "6279942640",
                    "allowed_domains": [],
                    "roles": {
                      "attendee": "261a2ff2eee084f238be1f2e6c72bf37",
                      "presenter": "5724aaa46f316da0de2b28186dc7562e",
                      "moderator": "aa5932713fbd61d8f8ca72e28e823b70",
                      "host": "5e5442457be03277a3300a69b1af5ba9",
                      "phone_attendee": "c5b6f51b1466e02f7e45c87c311dbe56",
                      "phone_presenter": "63cde0424a00f75ef38acf8e5032e54e"
                    },
                    "active_session": false,
                    "status": "active",
                    "leads_form_id": null,
                    "registration_form_id": null,
                    "registration_enabled": false,
                    "manual_confirm_registrants": false,
                    "thank_you_email": false,
                    "created_at": 1513843391,
                    "updated_at": 1513843546,
                    "hosted_at": {
                      "attendee": "https://embed.archiebot.com/resource/widget/372-887-340",
                      "presenter": "https://embed.archiebot.com/resource/widget/372-887-340/5724aaa46f316da0de2b28186dc7562e",
                      "moderator": "https://embed.archiebot.com/resource/widget/372-887-340/aa5932713fbd61d8f8ca72e28e823b70",
                      "host": "https://embed.archiebot.com/resource/widget/372-887-340/5e5442457be03277a3300a69b1af5ba9",
                      "phone_attendee": "https://embed.archiebot.com/resource/widget/372-887-340/c5b6f51b1466e02f7e45c87c311dbe56",
                      "phone_presenter": "https://embed.archiebot.com/resource/widget/372-887-340/63cde0424a00f75ef38acf8e5032e54e"
                    },
                    "is_hidden": false
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id",
        "description": "Update selected user's Widget.  \n\n>You can request for some additional related data by including `?include=<include_name>` in request url.  \n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "Put/api/users/:user_id/widgets/:widget_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "password",
                  "agenda",
                  "custom_name",
                  "status",
                  "type",
                  "start_date",
                  "duration",
                  "timezone",
                  "strict_event",
                  "manual_confirm_registrants",
                  "thank_you_email",
                  "autostart[thankyou_page_url]",
                  "autostart[content][]",
                  "autostart[initial_layout_id]",
                  "autostart[initial_template_id]",
                  "autostart[mode]",
                  "autostart[lock_state]",
                  "allowed_domains[0]",
                  "allowed_domains[1]",
                  "custom_template[css][0][url]",
                  "custom_template[css][0][role]",
                  "custom_template[js][0][url]",
                  "custom_template[js][0][role]",
                  "custom_fields[0][name]",
                  "custom_fields[0][value]",
                  "custom_fields[0][type]",
                  "reminders[0][type]",
                  "reminders[0][message]",
                  "reminders[0][time]",
                  "tracking_providers[0][type]",
                  "tracking_providers[0][params][type]",
                  "tracking_providers[0][params][value]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Update widget name. Min. 3 characters, max. 65535",
                    "example": "my room"
                  },
                  "password": {
                    "type": "string",
                    "description": "Room password. Min. 3 characters."
                  },
                  "agenda": {
                    "type": "string",
                    "description": "Event agenda. Min. 5 characters."
                  },
                  "custom_name": {
                    "type": "string",
                    "description": "Custom event url. Min. 1 character, max. 255."
                  },
                  "status": {
                    "type": "string",
                    "description": "Widget status. Accepted values: \"active\"/\"inactive\"."
                  },
                  "type": {
                    "type": "string",
                    "example": "permanent"
                  },
                  "start_date": {
                    "type": "string",
                    "description": "Event start date. Date in format \"Y-m-d H:i:s\"."
                  },
                  "duration": {
                    "type": "string",
                    "description": "Event duration in minutes."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Event date timezone. Available timezones - http://php.net/manual/en/timezones.php"
                  },
                  "strict_event": {
                    "type": "string",
                    "description": "Whether participants can enter room before event start or after event end. Boolean value true/false."
                  },
                  "manual_confirm_registrants": {
                    "type": "string",
                    "description": "Should the room owner confirm registrants manually. Boolean value true/false."
                  },
                  "thank_you_email": {
                    "type": "string",
                    "description": "Whether an automatic \"Thank you\" email message should be sent to participants after the meeting. Boolean value true/false."
                  },
                  "autostart[thankyou_page_url]": {
                    "type": "string",
                    "description": "Page to redirect participants after meeting. It should be valid url."
                  },
                  "autostart[content][]": {
                    "type": "string"
                  },
                  "autostart[initial_layout_id]": {
                    "type": "string",
                    "description": "Initial room layout identifier. Integer value between 1 and 6."
                  },
                  "autostart[initial_template_id]": {
                    "type": "integer",
                    "description": "Room template: 0 - webinar, 3-meeting",
                    "format": "int32",
                    "example": 0
                  },
                  "autostart[mode]": {
                    "type": "string",
                    "description": "Event mode. Available values: discussion/presentation/qa"
                  },
                  "autostart[lock_state]": {
                    "type": "string",
                    "description": "Is room initially locked? Available values: \"locked\"/\"unlocked\""
                  },
                  "allowed_domains[0]": {
                    "type": "string",
                    "description": "Allowed domains. Array of valid domains from which participants can enter the room."
                  },
                  "allowed_domains[1]": {
                    "type": "string"
                  },
                  "custom_template[css][0][url]": {
                    "type": "string",
                    "description": "Additional custom CSS stylesheets for room template."
                  },
                  "custom_template[css][0][role]": {
                    "type": "string",
                    "description": "Optionally you can set different files to different roles. Skip this if you want to set it to all roles.",
                    "example": "presenter"
                  },
                  "custom_template[js][0][url]": {
                    "type": "string",
                    "description": "Additional custom JS scripts for room template."
                  },
                  "custom_template[js][0][role]": {
                    "type": "string",
                    "description": "Optionally you can set different files to different roles. Skip this if you want to set it to all roles.",
                    "example": "host"
                  },
                  "custom_fields[0][name]": {
                    "type": "string",
                    "description": "Widgets custom field name."
                  },
                  "custom_fields[0][value]": {
                    "type": "string",
                    "description": "Widgets custom field value."
                  },
                  "custom_fields[0][type]": {
                    "type": "string",
                    "description": "Widgets custom filed type."
                  },
                  "reminders[0][type]": {
                    "type": "string",
                    "description": "Event reminder type. Available types: email/phone/sms."
                  },
                  "reminders[0][message]": {
                    "type": "string",
                    "description": "Event reminder message. Min. 0 characters, max. 255."
                  },
                  "reminders[0][time]": {
                    "type": "string",
                    "description": "Event reminder time before event in minutes."
                  },
                  "tracking_providers[0][type]": {
                    "type": "string",
                    "description": "Event tracking provider type. Available options:\n- google_analytics - Google Analytics,\n- facebook_pixel - Facebook Pixel,\n- image_pixel - custom pixel image url."
                  },
                  "tracking_providers[0][params][type]": {
                    "type": "string",
                    "description": "Tracking provider parameter type. Available values: token/url."
                  },
                  "tracking_providers[0][params][value]": {
                    "type": "string",
                    "description": "Tracking provider parameter value."
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id",
        "description": "Soft delete Widget (won't delete record from database).  \n\nReturns no content (204 HTTP code).",
        "operationId": "Delete/api/users/:user_id/widgets/:widget_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets/token/{widget_token}": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/users/:user_id/widgets/token/:widget_token",
        "description": "Retrieve a single user's Widget data by token.  \n\n>You can request for some additional related data by including `?include=<include_name>` in request url.  \n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "/api/users/:user_id/widgets/token/:widget_token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "123-123-123"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets/{widget_id}/enable": {
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id/enable",
        "description": "Activate Widget (set status to 'active').  \n\nActive Widgets are shown on the events lists.  \n\nReturns Widget instance.  \n\n>You can request for some additional related data by including `?include=<include_name>` in request url.  \n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "/api/users/:user_id/widgets/:widget_id/enable",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets/{widget_id}/disable": {
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id/disable",
        "description": "Deactivate Widget (set status to 'inactive').  \n\nInactive Widgets are not shown on the events lists.  \n\nReturns Widget instance.  \n\n>You can request for some additional related data by including `?include=<include_name>` in request url.  \n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "/api/users/:user_id/widgets/:widget_id/disable",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/widgets/{widget_id}/changeOwner": {
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/users/:user_id/widgets/:widget_id/changeOwner",
        "description": "Change Widget's owner.  \n\nReturns Widget instance with 301 HTTP code.  \n\n>You can request for some additional related data by including `?include=<include_name>` in request url.  \n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "/api/users/:user_id/widgets/:widget_id/changeOwner",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "destination_owner_id"
                ],
                "type": "object",
                "properties": {
                  "destination_owner_id": {
                    "type": "integer",
                    "description": "New widget's owner identifier.",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets",
        "description": "Retrieve collection of Widgets.\n\nSortable columns:\n* id \n* name  \n* start_date  \n* duration  \n* created_at  \n* updated_at  \n* active_session_id  \n* deleted_at  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles",
        "operationId": "/api/widgets",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets",
        "description": "Create new Widget.  \n\nReturns newly created Widget data.  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles",
        "operationId": "Post/api/widgets",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "type",
                  "password",
                  "agenda",
                  "custom_name",
                  "status",
                  "start_date",
                  "duration",
                  "timezone",
                  "strict_event",
                  "manual_confirm_registrants",
                  "thank_you_email",
                  "autostart[thankyou_page_url]",
                  "autostart[content]",
                  "autostart[initial_layout_id]",
                  "autostart[mode]",
                  "autostart[lock_state]",
                  "system_internal_type",
                  "allowed_domains[0]",
                  "allowed_domains[1]",
                  "custom_template[css][0][url]",
                  "custom_template[css][0][role]",
                  "custom_template[js][0][url]",
                  "custom_template[js][0][role]",
                  "custom_fields[0][name]",
                  "custom_fields[0][value]",
                  "custom_fields[0][type]",
                  "disable_all_notifications"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My room2"
                  },
                  "type": {
                    "type": "string",
                    "description": "(optional) permanent, scheduled, evergreen",
                    "example": "scheduled"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  },
                  "agenda": {
                    "type": "string",
                    "example": "12:00 Start\n13:00 End"
                  },
                  "custom_name": {
                    "type": "string",
                    "example": "pretty-name"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "start_date": {
                    "type": "string",
                    "example": "2021-01-12 15:00:00"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "example": 45
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Europe/Warsaw"
                  },
                  "strict_event": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "manual_confirm_registrants": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "thank_you_email": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "autostart[thankyou_page_url]": {
                    "type": "string",
                    "example": "https://example.com/thank-you"
                  },
                  "autostart[content]": {
                    "type": "string"
                  },
                  "autostart[initial_layout_id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "autostart[mode]": {
                    "type": "string",
                    "description": "discussion, presentation, qa",
                    "example": "presentation"
                  },
                  "autostart[lock_state]": {
                    "type": "string",
                    "description": "locked, unlocked. If locked participants will wait in the lobby.",
                    "example": "locked"
                  },
                  "system_internal_type": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  },
                  "allowed_domains[0]": {
                    "type": "string",
                    "example": "domain.com"
                  },
                  "allowed_domains[1]": {
                    "type": "string",
                    "example": "domain2.com"
                  },
                  "custom_template[css][0][url]": {
                    "type": "string",
                    "example": "https://example.com/style.css"
                  },
                  "custom_template[css][0][role]": {
                    "type": "string",
                    "example": "attendee"
                  },
                  "custom_template[js][0][url]": {
                    "type": "string",
                    "example": "https://example.com/script.js"
                  },
                  "custom_template[js][0][role]": {
                    "type": "string",
                    "example": "presenter"
                  },
                  "custom_fields[0][name]": {
                    "type": "string",
                    "example": "field"
                  },
                  "custom_fields[0][value]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  },
                  "custom_fields[0][type]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  },
                  "disable_all_notifications": {
                    "type": "string",
                    "description": "0|1 - optional, default 0"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/search": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/search",
        "description": "Search Widgets by `name`, `custom_name`, `start_date`.\n\nSortable columns:\n* id \n* name  \n* start_date  \n* duration  \n* created_at  \n* updated_at  \n* active_session_id  \n* deleted_at  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles\n\nOptional params:\n* registration_enabled set to 1 if you want to get widgets with registration form enabled.",
        "operationId": "/api/widgets/search",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id",
        "description": "Retrieve selected Widget.  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles",
        "operationId": "/api/widgets/:widget_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id",
        "description": "Update selected Widget.  \n\nReturns updated Widget data.\n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "Put/api/widgets/:widget_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 41
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "disable_all_notifications"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "my room"
                  },
                  "disable_all_notifications": {
                    "type": "integer",
                    "description": "0|1",
                    "format": "int32",
                    "example": 0
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id",
        "description": "Softly delete Widget.",
        "operationId": "Delete/api/widgets/:widget_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/token/{widget_token}": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/token/:widget_token",
        "description": "Retrieve selected Widget by token.  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles",
        "operationId": "/api/widgets/token/:widget_token",
        "parameters": [
          {
            "name": "widget_token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "123-123-123"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/enable": {
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/enable",
        "description": "Activate Widget (set status to 'active').  \n\nActive Widgets are shown on the events lists.  \n\nReturns Widget instance.  \n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "/api/widgets/:widget_id/enable",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/disable": {
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/disable",
        "description": "Deactivate Widget (set status to 'active').  \n\nDeactivated Widgets are not shown on the events lists.  \n\nReturns Widget instance.  \n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "/api/widgets/:widget_id/disable",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/hide": {
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/hide",
        "description": "Hide selected Widget. Hidden Widgets are not shown in simple dashboard.  \n\nReturns hidden Widget data.  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles",
        "operationId": "/api/widgets/:widget_id/hide",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/unhide": {
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/unhide",
        "description": "Unhide selected Widget. Unhidden Widgets are shown in simple dashboard.  \n\nReturns unhidden Widget data.  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles",
        "operationId": "/api/widgets/:widget_id/unhide",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/move": {
      "put": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/move",
        "description": "Change Widget owner.  \n\nReturns changed Widget data.  \n\nAvailable includes:  \n* autostart_options\n* StorageFile\n* LeadsForm\n* RegistrationForm\n* WidgetPoll\n* WidgetSession\n* WidgetSessionCount\n* WidgetCustomField\n* WidgetRegistrants\n* WidgetRegistrantsCount\n* WidgetInvitationsCount\n* WidgetTrackingProviders\n* Reminder\n* Presenters\n* WidgetForms\n* WidgetLoginForm\n* WidgetRegistrationForm\n* StorageFiles",
        "operationId": "/api/widgets/:widget_id/move",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "destination_owner_id"
                ],
                "type": "object",
                "properties": {
                  "destination_owner_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/timelineData/{widget_id}": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/timelineData/:widget_id",
        "description": "Get Wigdet sessions timeline data.  \n\nSortable columns:  \n* id\n* instance_hid\n* is_active\n* created_at\n* updated_at\n* deleted_at",
        "operationId": "/api/widgets/timelineData/:widget_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/cover": {
      "post": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/cover",
        "description": "Change Widget cover image.  \n\nReturns updated Widget data.\n\nAvailable includes:  \n* autostart_options,\n* StorageFile,\n* LeadsForm,\n* RegistrationForm,\n* WidgetPoll,\n* WidgetSession,\n* WidgetSessionCount,\n* WidgetCustomField,\n* WidgetRegistrants,\n* WidgetRegistrantsCount,\n* WidgetInvitationsCount,\n* WidgetTrackingProviders,\n* Reminder,\n* Presenters,\n* WidgetForms,\n* WidgetLoginForm,\n* WidgetRegistrationForm,\n* StorageFiles",
        "operationId": "/api/widgets/:widget_id/cover",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/background": {
      "post": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/background",
        "description": "Upload background image.  \n\nReturns uploaded background Storage File data.  \n\n>This endpoint just saves the file in storage. It does not assign background to Widget.\n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/widgets/background",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/banner": {
      "post": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/banner",
        "description": "Upload banner image.  \n\nReturns uploaded banner Storage File data.  \n\n>This endpoint just saves the file in storage. It does not assign banner to Widget.\n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/widgets/banner",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/background": {
      "delete": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/background",
        "description": "Delete Widget background.",
        "operationId": "/api/widgets/:widget_id/background",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/banner": {
      "delete": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/banner",
        "description": "Delete Widget banner.",
        "operationId": "/api/widgets/:widget_id/banner",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/personal": {
      "post": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/personal",
        "description": "Retrieve personal url to Widget.  \n\nReturns personal url to Widget and some additional data.",
        "operationId": "/api/widgets/:widget_id/personal",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "email",
                  "firstname",
                  "lastname",
                  "role",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Required",
                    "example": "test@example.com"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "description": "(optional) attendee, moderator, presnter"
                  },
                  "type": {
                    "type": "string",
                    "description": "(optional) email, sms, phone, push, download"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/breakout-rooms": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/breakout-rooms",
        "description": "Retrieve Widget breakout rooms data.",
        "operationId": "/api/widgets/:widget_id/breakout-rooms",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/recordings": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "/api/widgets/:widget_id/recordings",
        "description": "Retrieve the collection of Widget recordings.  \n\nSortable columns:  \n* id  \n* name\n* status\n* user_id\n* filesize\n* pages\n* widget_id\n* created_at",
        "operationId": "/api/widgets/:widget_id/recordings",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/password-token": {
      "get": {
        "tags": [
          "Widgets"
        ],
        "summary": "{{domain}}/api/widgets/:widget_id/password-token",
        "operationId": "{{domain}}/api/widgets/:widget_id/password-token",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 731
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/polls": {
      "get": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/users/:user_id/polls",
        "description": "Retrieve collection of polls from your account.  \n\nSortable columns:  \n* id\n* active_poll_session_id\n* name\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* questions",
        "operationId": "/api/users/:user_id/polls",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/users/:user_id/polls",
        "description": "Create new poll.  \n\nReturns instance of newly created poll.  \n\nAvailable includes:  \n* questions",
        "operationId": "Post/api/users/:user_id/polls",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "widget_id",
                  "questions[0][value]",
                  "questions[0][mode]",
                  "questions[0][type]",
                  "questions[0][position]",
                  "questions[0][answers][0][value]",
                  "questions[0][answers][0][mode]",
                  "questions[0][answers][0][selected]",
                  "questions[0][answers][0][position]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Poll name. Required, min. 3 characters, max.32",
                    "example": "Nice Poll"
                  },
                  "widget_id": {
                    "type": "integer",
                    "description": "Widget to which new poll should be assign",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][value]": {
                    "type": "string",
                    "description": "Poll question text. Required.",
                    "example": "How do you feel today?"
                  },
                  "questions[0][mode]": {
                    "type": "string",
                    "description": "Poll question mode. Required, available options: text/json_audio/json_file",
                    "example": "text"
                  },
                  "questions[0][type]": {
                    "type": "string",
                    "description": "Poll question type. Required, available options: open/single/multi",
                    "example": "single"
                  },
                  "questions[0][position]": {
                    "type": "integer",
                    "description": "Poll question order. Integer between 1 and 99999.",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][value]": {
                    "type": "string",
                    "description": "Poll question possible answer text.",
                    "example": "I'm fine"
                  },
                  "questions[0][answers][0][mode]": {
                    "type": "string",
                    "description": "Poll question answer mode. Available options: text/json_audio/json_file",
                    "example": "text"
                  },
                  "questions[0][answers][0][selected]": {
                    "type": "integer",
                    "description": "Whether the answer should be initially selected. Boolean value.",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][position]": {
                    "type": "integer",
                    "description": "Poll question answer order. Integer between 0 and 99999.",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/polls/{poll_id}": {
      "get": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/users/:user_id/polls/:poll_id",
        "description": "Retrieve selected poll data.  \n\nAvailable includes:  \n* questions",
        "operationId": "/api/users/:user_id/polls/:poll_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/users/:user_id/polls/:poll_id",
        "description": "Update selected poll.  \n\nReturns updated poll data.  \n\nAvailable includes:  \n* questions",
        "operationId": "Put/api/users/:user_id/polls/:poll_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "widget_id",
                  "questions[0][id]",
                  "questions[0][value]",
                  "questions[0][mode]",
                  "questions[0][type]",
                  "questions[0][position]",
                  "questions[0][answers][0][id]",
                  "questions[0][answers][0][value]",
                  "questions[0][answers][0][mode]",
                  "questions[0][answers][0][selected]",
                  "questions[0][answers][0][position]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Poll new name"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][value]": {
                    "type": "string",
                    "example": "Is this blue?"
                  },
                  "questions[0][mode]": {
                    "type": "string",
                    "example": "text"
                  },
                  "questions[0][type]": {
                    "type": "string",
                    "example": "single"
                  },
                  "questions[0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][value]": {
                    "type": "string",
                    "example": "yes"
                  },
                  "questions[0][answers][0][mode]": {
                    "type": "string",
                    "example": "text"
                  },
                  "questions[0][answers][0][selected]": {
                    "type": "boolean",
                    "example": false
                  },
                  "questions[0][answers][0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/users/:user_id/polls/:poll_id1",
        "description": "Softly delete selected poll.",
        "operationId": "/api/users/:user_id/polls/:poll_id1",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/polls/{poll_id}/start": {
      "put": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/users/:user_id/polls/:poll_id/start",
        "description": "Start new poll session.  \n\nReturns new poll session data.  \n\nAvailable includes:  \n* answers",
        "operationId": "/api/users/:user_id/polls/:poll_id/start",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "status",
                  "widget_id"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Poll new session"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/polls/{poll_id}/answer": {
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/users/:user_id/polls/:poll_id/answer",
        "description": "Add answers for poll questions. Answers are assigned to selected poll session if it's active.  \n\nReturns no content.",
        "operationId": "/api/users/:user_id/polls/:poll_id/answer",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "widget_id",
                  "poll_session_id",
                  "attendee_id",
                  "attendee_token",
                  "question_id",
                  "answers"
                ],
                "type": "object",
                "properties": {
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "poll_session_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "attendee_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "attendee_token": {
                    "type": "string",
                    "example": "nd-rwgtto6pm-v2pspsiimdyd8ai-7domm0"
                  },
                  "question_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "answers": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "",
                    "example": [
                      {}
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/polls/{poll_id}/stop": {
      "put": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/users/:user_id/polls/:poll_id/stop",
        "description": "Stop poll session.  \n\nReturns stopped poll session data.  \n\nAvailable includes:  \n* answers",
        "operationId": "/api/users/:user_id/polls/:poll_id/stop",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "poll_session_id",
                  "widget_id"
                ],
                "type": "object",
                "properties": {
                  "poll_session_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/polls/{poll_id}/duplicate": {
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/users/:user_id/polls/:poll_id/duplicate",
        "description": "Duplicate whole poll.  \n\nReturns new poll data.  \n\nAvailable includes:  \n* questions",
        "operationId": "/api/users/:user_id/polls/:poll_id/duplicate",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "widget_id"
                ],
                "type": "object",
                "properties": {
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls": {
      "get": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/widgets/:widget_id/polls",
        "description": "Retrieve collection of Widget Polls.  \n\nSortable columns:  \n* id\n* active_poll_session_id\n* name\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* questions",
        "operationId": "/api/widgets/:widget_id/polls",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/widgets/:widget_id/polls",
        "description": "Create new Widget Poll.  \n\nReturns instance of newly created Widget Poll.  \n\nAvailable includes:  \n* questions",
        "operationId": "Post/api/widgets/:widget_id/polls",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "description",
                  "questions[0][value]",
                  "questions[0][type]",
                  "questions[0][mode]",
                  "questions[0][position]",
                  "questions[0][answers][0][value]",
                  "questions[0][answers][0][mode]",
                  "questions[0][answers][0][selected]",
                  "questions[0][answers][0][position]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Nice Poll"
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional, max 255"
                  },
                  "questions[0][value]": {
                    "type": "string",
                    "example": "How do you feel today?"
                  },
                  "questions[0][type]": {
                    "type": "string",
                    "example": "text"
                  },
                  "questions[0][mode]": {
                    "type": "string",
                    "example": "single"
                  },
                  "questions[0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][value]": {
                    "type": "string"
                  },
                  "questions[0][answers][0][mode]": {
                    "type": "string",
                    "example": "open"
                  },
                  "questions[0][answers][0][selected]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}": {
      "get": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id",
        "description": "Retrieve selected Widget Poll data.  \n\nAvailable includes:  \n* questions",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id",
        "description": "Update selected Widget Poll.  \n\nReturns updated Widget Poll data.  \n\nAvailable includes:  \n* questions",
        "operationId": "Put/api/widgets/:widget_id/polls/:poll_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "description",
                  "questions[0][value]",
                  "questions[0][type]",
                  "questions[0][mode]",
                  "questions[0][position]",
                  "questions[0][answers][0][value]",
                  "questions[0][answers][0][mode]",
                  "questions[0][answers][0][selected]",
                  "questions[0][answers][0][position]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Nice Poll"
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional, max 255"
                  },
                  "questions[0][value]": {
                    "type": "string",
                    "example": "How do you feel today?"
                  },
                  "questions[0][type]": {
                    "type": "string",
                    "example": "text"
                  },
                  "questions[0][mode]": {
                    "type": "string",
                    "example": "open"
                  },
                  "questions[0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][value]": {
                    "type": "string"
                  },
                  "questions[0][answers][0][mode]": {
                    "type": "string",
                    "example": "open"
                  },
                  "questions[0][answers][0][selected]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id",
        "description": "Softly delete selected Widget Poll.",
        "operationId": "Delete/api/widgets/:widget_id/polls/:poll_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/start": {
      "put": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/start",
        "description": "Start new Widget Poll Session.  \n\nReturns new Widget Poll Session data.  \n\nAvailable includes:  \n* answers",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/start",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Poll new session"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/answer": {
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/answer",
        "description": "Add answers for poll questions. Answers are assigned to selected poll session if it's active.  \n\nReturns no content.",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/answer",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "poll_session_id",
                  "attendee_id",
                  "attendee_token",
                  "question_id",
                  "answers"
                ],
                "type": "object",
                "properties": {
                  "poll_session_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "attendee_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "attendee_token": {
                    "type": "string",
                    "example": "nd-rwgtto6pm-v2pspsiimdyd8ai-7domm0"
                  },
                  "question_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "answers": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "",
                    "example": [
                      {}
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/stop": {
      "put": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/stop",
        "description": "Stop Widget Poll Session.  \n\nReturns stopped Widget Poll Session data.  \n\nAvailable includes:  \n* answers",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/stop",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "poll_session_id"
                ],
                "type": "object",
                "properties": {
                  "poll_session_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/duplicate": {
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/duplicate",
        "description": "Duplicate whole Widget Poll.  \n\nReturns new Widget Poll data.  \n\nAvailable includes:  \n* questions",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/duplicate",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/polls": {
      "get": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/polls",
        "description": "Retrieve collection of Polls.  \n\nSortable columns:  \n* id\n* active_poll_session_id\n* name\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* questions\n* folder\n\nHint:\nTo get polls that are not put in any folder add\n?folder_id=root to the request.",
        "operationId": "/api/polls",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/polls",
        "description": "Create new Poll.  \n\nReturns instance of newly created poll.  \n\nAvailable includes:  \n* questions\n* folder",
        "operationId": "Post/api/polls",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "widget_id",
                  "poll_folder_id",
                  "questions[0][value]",
                  "questions[0][mode]",
                  "questions[0][type]",
                  "questions[0][position]",
                  "questions[0][answers][0][value]",
                  "questions[0][answers][0][mode]",
                  "questions[0][answers][0][selected]",
                  "questions[0][answers][0][position]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Nice Poll"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "poll_folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][value]": {
                    "type": "string",
                    "example": "How do you feel today?"
                  },
                  "questions[0][mode]": {
                    "type": "string",
                    "example": "text"
                  },
                  "questions[0][type]": {
                    "type": "string",
                    "example": "single"
                  },
                  "questions[0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][value]": {
                    "type": "string",
                    "example": "tak"
                  },
                  "questions[0][answers][0][mode]": {
                    "type": "string",
                    "example": "text"
                  },
                  "questions[0][answers][0][selected]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/polls/{poll_id}": {
      "get": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/polls/:poll_id",
        "description": "Retrieve selected Poll data.  \n\nAvailable includes:  \n* questions\n* folder",
        "operationId": "/api/polls/:poll_id",
        "parameters": [
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/polls/:poll_id",
        "description": "Update selected Poll.  \n\nReturns updated Poll data.  \n\nAvailable includes:  \n* questions\n* folder",
        "operationId": "Put/api/polls/:poll_id",
        "parameters": [
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "widget_id",
                  "poll_folder_id",
                  "questions[0][id]",
                  "questions[0][value]",
                  "questions[0][mode]",
                  "questions[0][type]",
                  "questions[0][position]",
                  "questions[0][answers][0][id]",
                  "questions[0][answers][0][value]",
                  "questions[0][answers][0][mode]",
                  "questions[0][answers][0][selected]",
                  "questions[0][answers][0][position]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Poll new name"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "poll_folder_id": {
                    "type": "integer",
                    "description": "Optional Poll Folder ID. Pass empty to move to the root.",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][value]": {
                    "type": "string",
                    "example": "Is this blue?"
                  },
                  "questions[0][mode]": {
                    "type": "string",
                    "description": "text / json_audio / json_file",
                    "example": "text"
                  },
                  "questions[0][type]": {
                    "type": "string",
                    "description": "open / single / multi",
                    "example": "single"
                  },
                  "questions[0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][value]": {
                    "type": "string",
                    "example": "yes"
                  },
                  "questions[0][answers][0][mode]": {
                    "type": "string",
                    "example": "text"
                  },
                  "questions[0][answers][0][selected]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "questions[0][answers][0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/polls/:poll_id1",
        "description": "Softly delete selected poll.",
        "operationId": "/api/polls/:poll_id1",
        "parameters": [
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/polls/{poll_id}/start": {
      "put": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/polls/:poll_id/start",
        "description": "Start new Poll session.  \n\nReturns new Poll session data.  \n\nAvailable includes:  \n* answers\n* folder",
        "operationId": "/api/polls/:poll_id/start",
        "parameters": [
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "status",
                  "widget_id"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Poll new session"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/polls/{poll_id}/answer": {
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/polls/:poll_id/answer",
        "description": "Add answers for poll questions. Answers are assigned to selected poll session if it's active.  \n\nReturns no content.",
        "operationId": "/api/polls/:poll_id/answer",
        "parameters": [
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "widget_id",
                  "poll_session_id",
                  "attendee_id",
                  "attendee_token",
                  "question_id",
                  "answers"
                ],
                "type": "object",
                "properties": {
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "poll_session_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "attendee_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "attendee_token": {
                    "type": "string",
                    "example": "nd-rwgtto6pm-v2pspsiimdyd8ai-7domm0"
                  },
                  "question_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "answers": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "",
                    "example": [
                      {}
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/polls/{poll_id}/stop": {
      "put": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/polls/:poll_id/stop",
        "description": "Stop Poll session.  \n\nReturns stopped Poll session data.  \n\nAvailable includes:  \n* answers",
        "operationId": "/api/polls/:poll_id/stop",
        "parameters": [
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "poll_session_id",
                  "widget_id"
                ],
                "type": "object",
                "properties": {
                  "poll_session_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/polls/{poll_id}/duplicate": {
      "post": {
        "tags": [
          "Polls"
        ],
        "summary": "/api/polls/:poll_id/duplicate",
        "description": "Duplicate whole Poll.  \n\nReturns new Poll data.  \n\nAvailable includes:  \n* questions\n* folder",
        "operationId": "/api/polls/:poll_id/duplicate",
        "parameters": [
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "widget_id"
                ],
                "type": "object",
                "properties": {
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/actions": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/users/:user_id/actions",
        "description": "Retrieve collection of user's Call to action components.  \n\nSortable columns:  \n* id\n* name\n* status\n* type\n* created_at\n* updated_at\n* deleted_at",
        "operationId": "/api/users/:user_id/actions",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/users/:user_id/actions",
        "description": "Create new Call to action component for user.  \n\nReturns new Call to action component data.",
        "operationId": "Post/api/users/:user_id/actions",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "payload",
                  "timeout",
                  "type",
                  "widget_id",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Action name"
                  },
                  "payload": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  },
                  "type": {
                    "type": "string",
                    "example": "action"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/actions/{action_id}": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/users/:user_id/actions/:action_id",
        "description": "Retrieve selected user's Call to action component.",
        "operationId": "/api/users/:user_id/actions/:action_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/users/:user_id/actions/:action_id",
        "description": "Update selected user's Call to action component.  \n\nReturn updated Call to action component data.",
        "operationId": "Put/api/users/:user_id/actions/:action_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "payload",
                  "timeout",
                  "type",
                  "widget_id",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New name"
                  },
                  "payload": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  },
                  "type": {
                    "type": "string",
                    "example": "action"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/users/:user_id/actions/:action_id1",
        "description": "Softly delete user's Call to action component.",
        "operationId": "/api/users/:user_id/actions/:action_id1",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/actions/{action_id}/enable": {
      "put": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/users/:user_id/actions/:action_id/enable",
        "description": "Activate selected Call to action component.  \n\nReturns activated Call to action component.",
        "operationId": "/api/users/:user_id/actions/:action_id/enable",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/actions/{action_id}/disable": {
      "put": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/users/:user_id/actions/:action_id/disable",
        "description": "Deactivate selected Call to action component.  \n\nReturns deactivated Call to action component.",
        "operationId": "/api/users/:user_id/actions/:action_id/disable",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/actions/{action_id}/duplicate": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/users/:user_id/actions/:action_id/duplicate",
        "description": "Duplicate selected user's Call to action component.  \n\nReturns newly created Call to action component.",
        "operationId": "/api/users/:user_id/actions/:action_id/duplicate",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/actions": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/actions",
        "description": "Retrieve collection of Call to action components.  \n\nSortable columns:  \n* id\n* name\n* status\n* type\n* created_at\n* updated_at\n* deleted_at",
        "operationId": "/api/actions",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/actions",
        "description": "Create new Call to action component.  \n\nReturns new Call to action component data.",
        "operationId": "Post/api/actions",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "payload",
                  "timeout",
                  "type",
                  "widget_id",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Action name"
                  },
                  "payload": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  },
                  "type": {
                    "type": "string",
                    "example": "action"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/actions/{action_id}": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/actions/:action_id",
        "description": "Retrieve selected user's Call to action component.",
        "operationId": "/api/actions/:action_id",
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/actions/:action_id",
        "description": "Update selected user's Call to action component.  \n\nReturn updated Call to action component data.",
        "operationId": "Put/api/actions/:action_id",
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "payload",
                  "timeout",
                  "type",
                  "widget_id",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New name"
                  },
                  "payload": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  },
                  "type": {
                    "type": "string",
                    "example": "action"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/actions/:action_id1",
        "description": "Softly delete user's Call to action component.",
        "operationId": "/api/actions/:action_id1",
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/actions/{action_id}/enable": {
      "put": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/actions/:action_id/enable",
        "description": "Activate selected Call to action component.  \n\nReturns activated Call to action component.",
        "operationId": "/api/actions/:action_id/enable",
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/actions/{action_id}/disable": {
      "put": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/actions/:action_id/disable",
        "description": "Deactivate selected Call to action component.  \n\nReturns deactivated Call to action component.",
        "operationId": "/api/actions/:action_id/disable",
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/actions/{action_id}/duplicate": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "/api/actions/:action_id/duplicate",
        "description": "Duplicate selected user's Call to action component.  \n\nReturns newly created Call to action component.",
        "operationId": "/api/actions/:action_id/duplicate",
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/users/:user_id/apps",
        "description": "Retrieve collection of user's Applications.  \n\nSortable columns:  \n* id\n* user_id\n* created_at\n* updated_at\n* status\n* deleted_at",
        "operationId": "/api/users/:user_id/apps",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/users/:user_id/apps",
        "description": "Create new Application for selected user.  \n\nReturns new Application data.",
        "operationId": "Post/api/users/:user_id/apps",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "App name"
                  },
                  "status": {
                    "type": "string",
                    "description": "active / inactive",
                    "example": "active"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/apps/{app_id}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/users/:user_id/apps/:app_id",
        "description": "Retrieve user's selected Application.",
        "operationId": "/api/users/:user_id/apps/:app_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/users/:user_id/apps/:app_id",
        "description": "Update the selected user Application.  \n\nReturns updated user Application.",
        "operationId": "Put/api/users/:user_id/apps/:app_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New name"
                  },
                  "status": {
                    "type": "string",
                    "example": "inactive"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/users/:user_id/apps/:app_id1",
        "description": "Softly delete user Application.",
        "operationId": "/api/users/:user_id/apps/:app_id1",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/apps/{app_id}/enable": {
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/users/:user_id/apps/:app_id/enable",
        "description": "Activate selected user Application.  \n\nReturns activated Application.",
        "operationId": "/api/users/:user_id/apps/:app_id/enable",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/apps/{app_id}/disable": {
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/users/:user_id/apps/:app_id/disable",
        "description": "Deactivate selected user Application.  \n\nReturns deactivated Application.",
        "operationId": "/api/users/:user_id/apps/:app_id/disable",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/apps",
        "description": "Retrieve collection of Apps.  \n\nSortable columns:\n* id\n* user_id\n* created_at\n* updated_at\n* status\n* deleted_at",
        "operationId": "/api/apps",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/apps",
        "description": "Create new App for the client.  \n\nReturns newly created App data.",
        "operationId": "Post/api/apps",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "App name"
                  },
                  "status": {
                    "type": "string",
                    "description": "active / inactive",
                    "example": "active"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/apps/{app_id}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/apps/:app_id",
        "description": "Retrieve selected App.",
        "operationId": "/api/apps/:app_id",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/apps/:app_id",
        "description": "Update selected App.  \n\nReturns updated App data.",
        "operationId": "Put/api/apps/:app_id",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New name"
                  },
                  "status": {
                    "type": "string",
                    "description": "active / inactive",
                    "example": "inactive"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/apps/:app_id1",
        "description": "Softly delete App.",
        "operationId": "/api/apps/:app_id1",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/apps/{app_id}/enable": {
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/apps/:app_id/enable",
        "description": "Activate selected App.  \n\nReturns activated App.",
        "operationId": "/api/apps/:app_id/enable",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/apps/{app_id}/disable": {
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "/api/apps/:app_id/disable",
        "description": "Deactivate selected App.  \n\nReturns deactivated App.",
        "operationId": "/api/apps/:app_id/disable",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/folders": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/users/:user_id/storage/folders",
        "description": "Retrieve the collection of user's Storage folders.  \n\nSortable columns:\n* id\n* name\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* sharedSubFilesCount\n* StorageFile\n* SubFolder",
        "operationId": "/api/users/:user_id/storage/folders",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/users/:user_id/storage/folders",
        "description": "Create new Storage folder for user.  \n\nReturns newly created Storage folder data.  \n\nAvailable includes:  \n* sharedSubFilesCount\n* StorageFile\n* SubFolder",
        "operationId": "Post/api/users/:user_id/storage/folders",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "permissions",
                  "parent_folder_id"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "PrivateData"
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  },
                  "parent_folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 24
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/folders/{folder_id}": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/users/:user_id/storage/folders/:folder_id",
        "description": "Retrieve selected user's Storage folder.  \n\nAvailable includes:  \n* sharedSubFilesCount\n* StorageFile\n* SubFolder",
        "operationId": "/api/users/:user_id/storage/folders/:folder_id",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "StorageFile,SubFolder,sharedSubFilesCount"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 24
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/users/:user_id/storage/folders/:folder_id",
        "description": "Update selected user's Storage folder.  \n\nReturns updated Storage folder.  \n\nAvailable includes:  \n* sharedSubFilesCount\n* StorageFile\n* SubFolder",
        "operationId": "Put/api/users/:user_id/storage/folders/:folder_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 24
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "SharedFolder"
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/users/:user_id/storage/folders/:folder_id",
        "description": "Softly delete selected user's Storage folder.",
        "operationId": "Delete/api/users/:user_id/storage/folders/:folder_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/folders/{folder_id}/share": {
      "put": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/users/:user_id/storage/folders/:folder_id/share",
        "description": "Share selected user's Storage folder.  \n\nReturns no content.",
        "operationId": "/api/users/:user_id/storage/folders/:folder_id/share",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 24
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/folders/{folder_id}/unshare": {
      "put": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/users/:user_id/storage/folders/:folder_id/unshare",
        "description": "Unshare selected user's Storage folder.  \n\nReturns no content.",
        "operationId": "/api/users/:user_id/storage/folders/:folder_id/unshare",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/folders": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/storage/folders",
        "description": "Retrieve collection of Storage Folders.  \n\nSortable columns:  \n* id\n* name\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* sharedSubFilesCount\n* StorageFile\n* SubFolder",
        "operationId": "/api/storage/folders",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/storage/folders",
        "description": "Create new Storage Folder.  \n\nReturns newly created Storage Folder data.  \n\nAvailable includes:  \n* sharedSubFilesCount\n* StorageFile\n* SubFolder",
        "operationId": "Post/api/storage/folders",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "permissions",
                  "parent_folder_id"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "PrivateData"
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  },
                  "parent_folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 24
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/folders/{folder_id}": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/storage/folders/:folder_id",
        "description": "Retrieve selected Storage Folder.  \n\nAvailable includes:  \n* sharedSubFilesCount\n* StorageFile\n* SubFolder",
        "operationId": "/api/storage/folders/:folder_id",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "StorageFile,SubFolder,sharedSubFilesCount"
            }
          },
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 24
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/storage/folders/:folder_id",
        "description": "Update selected Storage Folder.  \n\nReturns updated Storage Folder data.  \n\nAvailable includes:  \n* sharedSubFilesCount\n* StorageFile\n* SubFolder",
        "operationId": "Put/api/storage/folders/:folder_id",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 24
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "SharedFolder"
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/storage/folders/:folder_id",
        "description": "Softly delete selected Storage Folder.",
        "operationId": "Delete/api/storage/folders/:folder_id",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/folders/{folder_id}/share": {
      "put": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/storage/folders/:folder_id/share",
        "description": "Share selected Storage Folder.",
        "operationId": "/api/storage/folders/:folder_id/share",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 24
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/folders/{folder_id}/unshare": {
      "put": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/storage/folders/:folder_id/unshare",
        "description": "Unshare selected Storage Folder.",
        "operationId": "/api/storage/folders/:folder_id/unshare",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/folders/{folder_id}/updateShare": {
      "put": {
        "tags": [
          "Folders"
        ],
        "summary": "/api/storage/folders/:folder_id/updateShare",
        "description": "Update sharing options of selected Storage Folder.",
        "operationId": "/api/storage/folders/:folder_id/updateShare",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage",
        "description": "Retrieve collection of user's Storage files.  \n\nSortable columns:  \n* id\n* name\n* status\n* user_id\n* filesize\n* pages\n* extension\n* data_location\n* created_at\n* widget_id\n* expires_at\n* updated_at\n* deleted_at\n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/users/:user_id/storage",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage",
        "description": "Store new Storage file for user.  \n\nReturns newly created Storage file.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "Post/api/users/:user_id/storage",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "file",
                  "name",
                  "permissions",
                  "tags",
                  "data_location",
                  "custom_path"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "example": "Nice File"
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  },
                  "tags": {
                    "type": "string",
                    "example": "local"
                  },
                  "data_location": {
                    "type": "string",
                    "example": "s-eu-we-a"
                  },
                  "custom_path": {
                    "type": "string",
                    "example": "/new_files"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/{file_id}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage/:file_id",
        "description": "Get selected user's Storage file.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/users/:user_id/storage/:file_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage/:file_id",
        "description": "Update selected user's Storage file.  \n\nReturns updated Storage file data.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "Put/api/users/:user_id/storage/:file_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "folder_id",
                  "widget_id",
                  "tags",
                  "custom_metadata",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "tags": {
                    "type": "string",
                    "example": "local"
                  },
                  "custom_metadata": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "example": "New name"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage/:file_id1",
        "description": "Softly delete selected user's Storage file.",
        "operationId": "/api/users/:user_id/storage/:file_id1",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/token/{token}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage/token/:token",
        "description": "Get selected user's Storage file by token.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/users/:user_id/storage/token/:token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "qkyaedkaa2axkjct87z4bolxt7rtfkkmuhwvd8ujda4dq47ocytivm1y83ns11gm"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/{file_id}/slides": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage/:file_id/slides",
        "description": "Get selected Stogare file slides.  \n\n> Some file formats, for example *.pdf files, are additionally converted to image slides when uploaded. Thanks to this you can use them later for presentation purposes.",
        "operationId": "/api/users/:user_id/storage/:file_id/slides",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/token/{token}/slides": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage/token/:token/slides",
        "description": "Get selected by token Stogare file slides.  \n\n> Some file formats, for example *.pdf files, are additionally converted to image slides when uploaded. Thanks to this you can use them later for presentation purposes.",
        "operationId": "/api/users/:user_id/storage/token/:token/slides",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "qkyaedkaa2axkjct87z4bolxt7rtfkkmuhwvd8ujda4dq47ocytivm1y83ns11gm"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/{file_id}/share": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage/:file_id/share",
        "description": "Share selected user's Storage file.  \n\nReturns no content.",
        "operationId": "/api/users/:user_id/storage/:file_id/share",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/storage/{file_id}/unshare": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/users/:user_id/storage/:file_id/unshare",
        "description": "Unshare selected user's Storage file.  \n\nReturns no content.",
        "operationId": "/api/users/:user_id/storage/:file_id/unshare",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage",
        "description": "Retrieve collection of Storage files.  \n\nSortable columns:  \n* id\n* name\n* status\n* user_id\n* filesize\n* pages\n* extension\n* data_location\n* created_at\n* widget_id\n* expires_at\n* updated_at\n* deleted_at\n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/storage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage",
        "description": "Store new Storage file.  \n\nReturns newly created Storage file.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "Post/api/storage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "file",
                  "name",
                  "permissions",
                  "tags",
                  "data_location",
                  "custom_path"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "example": "Nice File"
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  },
                  "tags": {
                    "type": "string",
                    "example": "local"
                  },
                  "data_location": {
                    "type": "string",
                    "example": "s-eu-we-a"
                  },
                  "custom_path": {
                    "type": "string",
                    "example": "/new_files"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/presigned": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/presigned",
        "description": "Store new presigned Storage file for user.  \n\nReturns newly created Storage file.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/storage/presigned",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "file_size",
                  "mime_type",
                  "extension",
                  "name",
                  "folder_id",
                  "widget_id",
                  "tags",
                  "custom_path",
                  "data_location",
                  "custom_metadata"
                ],
                "type": "object",
                "properties": {
                  "file_size": {
                    "type": "string"
                  },
                  "mime_type": {
                    "type": "string"
                  },
                  "extension": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "folder_id": {
                    "type": "string"
                  },
                  "widget_id": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "custom_path": {
                    "type": "string"
                  },
                  "data_location": {
                    "type": "string"
                  },
                  "custom_metadata": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Upload file [presigned]"
        ],
        "summary": "/api/storage/confirm",
        "operationId": "/api/storage/confirm",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "token",
                  "file_size",
                  "mime_type",
                  "extension",
                  "file"
                ],
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "ztiql3buhdsk7maqtrlkzh6rij3uyaookaq3lesm4sdtntojdp7fkpz7c4thqsu0"
                  },
                  "file_size": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1000
                  },
                  "mime_type": {
                    "type": "string"
                  },
                  "extension": {
                    "type": "string",
                    "example": "png"
                  },
                  "file": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/confirm": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/presigned/confirm",
        "description": "Confirm selected (by token) presigned Storage file.  \n\nReturns confirmed Storage file data.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/storage/presigned/confirm",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "token",
                  "file_size",
                  "mime_type",
                  "extension"
                ],
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "ztiql3buhdsk7maqtrlkzh6rij3uyaookaq3lesm4sdtntojdp7fkpz7c4thqsu0"
                  },
                  "file_size": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1000
                  },
                  "mime_type": {
                    "type": "string"
                  },
                  "extension": {
                    "type": "string",
                    "example": "png"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/{file_id}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/:file_id",
        "description": "Retrieve selected Storage File.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/storage/:file_id",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/:file_id",
        "description": "Update selected Storage File.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "Put/api/storage/:file_id",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "folder_id",
                  "widget_id",
                  "tags",
                  "custom_metadata",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "tags": {
                    "type": "string",
                    "example": "local"
                  },
                  "custom_metadata": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "example": "New name"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/:file_id1",
        "description": "Softly delete selected Storage File.",
        "operationId": "/api/storage/:file_id1",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/token/{token}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/token/:token",
        "description": "Retrieve selected Storage File by token.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/storage/token/:token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "qkyaedkaa2axkjct87z4bolxt7rtfkkmuhwvd8ujda4dq47ocytivm1y83ns11gm"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/{file_id}/slides": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/:file_id/slides",
        "description": "Retrieve selected Storage File slides.  \n\n> Some file types (e.g. pdf files) are converted also to slides, so you can use them for presentation purposes",
        "operationId": "/api/storage/:file_id/slides",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/{file_id}/converted": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/:file_id/converted",
        "description": "Retrieve converted files.",
        "operationId": "/api/storage/:file_id/converted",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/{file_id}/recording": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/:file_id/recording",
        "description": "Retrieve recording file.",
        "operationId": "/api/storage/:file_id/recording",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/token/{token}/slides": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/token/:token/slides",
        "description": "Retrieve selected Storage File slides by file token.  \n\n> Some file types (e.g. pdf files) are converted also to slides, so you can use them for presentation purposes",
        "operationId": "/api/storage/token/:token/slides",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "qkyaedkaa2axkjct87z4bolxt7rtfkkmuhwvd8ujda4dq47ocytivm1y83ns11gm"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/{file_id}/share": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/:file_id/share",
        "description": "Share selected Storage File.",
        "operationId": "/api/storage/:file_id/share",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/{file_id}/unshare": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/:file_id/unshare",
        "description": "Unshare selected Storage File.",
        "operationId": "/api/storage/:file_id/unshare",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/{file_id}/updateShare": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "/api/storage/:file_id/updateShare",
        "description": "Update selected Storage File sharing options.",
        "operationId": "/api/storage/:file_id/updateShare",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/recorder/settings": {
      "post": {
        "tags": [
          "Recorder"
        ],
        "summary": "/api/users/:user_id/recorder/settings",
        "description": "Set user's Recorder settings.  \n\nReturns recorder settings.",
        "operationId": "/api/users/:user_id/recorder/settings",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "dimensions",
                  "fps",
                  "format"
                ],
                "type": "object",
                "properties": {
                  "dimensions": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3
                  },
                  "fps": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Recorder"
        ],
        "summary": "/api/users/:user_id/recorder/settings",
        "description": "Get user's Recorder settings.",
        "operationId": "Get/api/users/:user_id/recorder/settings",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/providers": {
      "get": {
        "tags": [
          "Providers"
        ],
        "summary": "/api/users/:user_id/providers",
        "description": "Retrieve collection of user's Storage providers.  \n\nSortable columns:  \n* label",
        "operationId": "/api/users/:user_id/providers",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Providers"
        ],
        "summary": "/api/users/:user_id/providers",
        "description": "Add new Storage provider for user.  \n\nReturns newly created Storage provider data.",
        "operationId": "Post/api/users/:user_id/providers",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "type",
                  "status",
                  "params"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "integer",
                    "description": "1 = S3, 2 = FTP",
                    "format": "int32",
                    "example": 1
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "",
                    "example": []
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/providers/{provider_id}": {
      "get": {
        "tags": [
          "Providers"
        ],
        "summary": "/api/users/:user_id/providers/:provider_id",
        "description": "Get selected user's Storage provider.",
        "operationId": "/api/users/:user_id/providers/:provider_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "provider_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Providers"
        ],
        "summary": "/api/users/:user_id/providers/:provider_id",
        "description": "Uodate selected user's Storage provider.  \n\nReturns updated Storage provider data.",
        "operationId": "Put/api/users/:user_id/providers/:provider_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "provider_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "type",
                  "status",
                  "params"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "integer",
                    "description": "1 = S3, 2 = FTP",
                    "format": "int32",
                    "example": 2
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "",
                    "example": []
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Providers"
        ],
        "summary": "/api/users/:user_id/providers/:provider_id",
        "description": "Softly delete user's Storage provider.",
        "operationId": "Delete/api/users/:user_id/providers/:provider_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "provider_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/packages": {
      "get": {
        "tags": [
          "Packages"
        ],
        "summary": "/api/users/:user_id/packages",
        "description": "Retrieve collection of seleceted user Packages.  \n\nSortable columns:\n* id\n* name\n* status\n* created_at",
        "operationId": "/api/users/:user_id/packages",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 33
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/packages": {
      "get": {
        "tags": [
          "Packages"
        ],
        "summary": "/api/packages",
        "description": "Retrieve collection of available Packages.  \n\nSortable columns:\n* id\n* name\n* status\n* created_at",
        "operationId": "/api/packages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/packages/{package_id}": {
      "get": {
        "tags": [
          "Packages"
        ],
        "summary": "/api/packages/:package_id",
        "description": "Retrieve selected Package data.",
        "operationId": "/api/packages/:package_id",
        "parameters": [
          {
            "name": "package_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users",
        "description": "Retrieve a collection of Users / sub-accounts from your account. Resource is accessible by an authenticated user. Please contact support in order to turn on sub-account ability within your account.\n\nPlease remember that collections are always paginated and you can use a set of default parameters sent along with request to manipulate the results in the response. Please refer to the \"Common Request Parameters on Collections\" section of this document for more details.\n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users?include=profile`\n\nHere is a list of sortable columns:\n* id (always sortable on all resources)  \n* email  \n* created_ip  \n* created_at  \n* updated_at  \n* data_location  \n* deleted_at (option available on Enterprise accounts only)  \n\n**Default sortable column:** id, sort order asc (newest first)  \n\n**Default number of resources per page:** 10",
        "operationId": "/api/users",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "close"
                    },
                    "example": "close"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "5618"
                    },
                    "example": "5618"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Thu, 21 Dec 2017 11:13:45 GMT"
                    },
                    "example": "Thu, 21 Dec 2017 11:13:45 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                    },
                    "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.7"
                    },
                    "example": "PHP/7.1.7"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "239"
                    },
                    "example": "239"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1513854886"
                    },
                    "example": "1513854886"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getallusers"
                },
                "example": {
                  "data": [
                    {
                      "id": 2,
                      "parent_id": 1,
                      "package_id": null,
                      "enterprise_id": 3,
                      "enterprise_identifier": "acme",
                      "email": "user@example.com",
                      "status": "active",
                      "phone_number": null,
                      "phone_country_code": null,
                      "created_ip": null,
                      "confirmed_at": 1509619198,
                      "created_at": 1509619198,
                      "updated_at": 1509619198,
                      "data_location": "s-us-es-a"
                    },
                    {
                      "id": 3,
                      "parent_id": 1,
                      "package_id": null,
                      "enterprise_id": 3,
                      "enterprise_identifier": "acme",
                      "email": "user2@example.com",
                      "status": "active",
                      "phone_number": null,
                      "phone_country_code": null,
                      "created_ip": null,
                      "confirmed_at": 1509619198,
                      "created_at": 1509619198,
                      "updated_at": 1509619198,
                      "data_location": "s-us-es-a"
                    }
                  ],
                  "meta": {
                    "pagination": {
                      "total": 2,
                      "count": 2,
                      "per_page": 2,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": {
                        "next": "https://api.archiebot.com/api/users?page=2"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users",
        "description": "Creating new sub-user.  \n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users?include=profile`",
        "operationId": "Post/api/users",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "package_id",
                  "email",
                  "password",
                  "status",
                  "data_location",
                  "country_code_iso2",
                  "country_state_iso2",
                  "created_ip",
                  "confirmed",
                  "avatar",
                  "profile[date_format]",
                  "profile[time_format]",
                  "profile[first_name]",
                  "profile[last_name]",
                  "profile[company]",
                  "profile[timezone]",
                  "profile[country_code_iso2]",
                  "profile[country_state_iso2]",
                  "profile[city]",
                  "profile[street]",
                  "profile[postal_code]",
                  "profile[about]",
                  "profile[disable_fillable_form]",
                  "profile[background_image_url]"
                ],
                "type": "object",
                "properties": {
                  "package_id": {
                    "type": "integer",
                    "description": "Identifier of features package for new user",
                    "format": "int32",
                    "example": 1
                  },
                  "email": {
                    "type": "string",
                    "description": "Valid and unique within enterprise email address. Required.",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Account Password. Must meet the following requirements: Length: Min: 10, Max: 64;\n\nRegex Pattern: `/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/`",
                    "example": "password"
                  },
                  "status": {
                    "type": "string",
                    "description": "Is user active? \"active\" or \"inactive\" value",
                    "example": "active"
                  },
                  "data_location": {
                    "type": "string",
                    "description": "S3 files server location",
                    "example": "s-us-es-a"
                  },
                  "country_code_iso2": {
                    "type": "string",
                    "description": "Country code in ISO 3166-1 alfa-2 format. required|size:2",
                    "example": "PL"
                  },
                  "country_state_iso2": {
                    "type": "string",
                    "description": "Country state in ISO 3166-2 format.",
                    "example": "PM"
                  },
                  "created_ip": {
                    "type": "string",
                    "description": "IP address from where user has been created",
                    "example": "127.0.0.1"
                  },
                  "confirmed": {
                    "type": "boolean",
                    "description": "Is user confirmed?",
                    "example": true
                  },
                  "avatar": {
                    "type": "string",
                    "description": "User avatar image"
                  },
                  "profile[date_format]": {
                    "type": "string",
                    "description": "Format in:d/m/Y,d M Y,m/d/Y,Y-d-m,m-d-Y,Y-m-d",
                    "example": "Y-m-d"
                  },
                  "profile[time_format]": {
                    "type": "string",
                    "description": "Format in:h:i A,H:i",
                    "example": "H:i"
                  },
                  "profile[first_name]": {
                    "type": "string",
                    "description": "User first name",
                    "example": "John"
                  },
                  "profile[last_name]": {
                    "type": "string",
                    "description": "User last name",
                    "example": "Doe"
                  },
                  "profile[company]": {
                    "type": "string",
                    "description": "Company name",
                    "example": "ACME"
                  },
                  "profile[timezone]": {
                    "type": "string",
                    "description": "Valid timezone name - http://www.php.net/manual/en/timezones.php",
                    "example": "Europe/Warsaw"
                  },
                  "profile[country_code_iso2]": {
                    "type": "string",
                    "description": "Country code in ISO 3166-1 alfa-2 format.",
                    "example": "PL"
                  },
                  "profile[country_state_iso2]": {
                    "type": "string",
                    "description": "Country state in ISO 3166-2 format.",
                    "example": "PM"
                  },
                  "profile[city]": {
                    "type": "string",
                    "description": "Address city name",
                    "example": "Warsaw"
                  },
                  "profile[street]": {
                    "type": "string",
                    "description": "Address street",
                    "example": "Street"
                  },
                  "profile[postal_code]": {
                    "type": "string",
                    "description": "Address postal code",
                    "example": "99-999"
                  },
                  "profile[about]": {
                    "type": "string",
                    "description": "About the user",
                    "example": "About me"
                  },
                  "profile[disable_fillable_form]": {
                    "type": "boolean",
                    "description": "Disable form filling",
                    "example": false
                  },
                  "profile[background_image_url]": {
                    "type": "string",
                    "description": "Background image for widgets",
                    "example": "https://example.com/background.jpg"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id",
        "description": "Retrieve a single User / sub-account from your account. Resource is accessible by an authenticated user. Please contact support in order to turn on sub-account ability within your account.\n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users/1?include=profile`",
        "operationId": "/api/users/:user_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "SubUser ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Thu, 21 Dec 2017 11:20:57 GMT"
                    },
                    "example": "Thu, 21 Dec 2017 11:20:57 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nginx/1.12.1"
                    },
                    "example": "nginx/1.12.1"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "chunked"
                    },
                    "example": "chunked"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "239"
                    },
                    "example": "239"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1513855317"
                    },
                    "example": "1513855317"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getsub-user"
                },
                "example": {
                  "data": {
                    "id": 5,
                    "parent_id": 3,
                    "package_id": null,
                    "enterprise_id": 2,
                    "enterprise_identifier": "acme",
                    "email": "user@example.com",
                    "status": "active",
                    "phone_number": null,
                    "phone_country_code": null,
                    "created_ip": null,
                    "confirmed_at": 1513163284,
                    "created_at": 1512654568,
                    "updated_at": 1513163284,
                    "data_location": "s-us-es-a"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id",
        "description": "Update sub-user.  \n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users/2?include=profile`",
        "operationId": "Put/api/users/:user_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "package_id",
                  "email",
                  "password",
                  "status",
                  "data_location",
                  "country_code_iso2",
                  "country_state_iso2",
                  "created_ip",
                  "confirmed",
                  "profile[date_format]",
                  "profile[time_format]",
                  "profile[first_name]",
                  "profile[last_name]",
                  "profile[company]",
                  "profile[timezone]",
                  "profile[country_code_iso2]",
                  "profile[country_state_iso2]",
                  "profile[city]",
                  "profile[street]",
                  "profile[postal_code]",
                  "profile[about]",
                  "profile[disable_fillable_form]",
                  "profile[background_image_url]"
                ],
                "type": "object",
                "properties": {
                  "package_id": {
                    "type": "string",
                    "description": "Identifier of features package for new user"
                  },
                  "email": {
                    "type": "string",
                    "description": "Valid and unique within enterprise email address. Required."
                  },
                  "password": {
                    "type": "string",
                    "description": "Account Password. Must meet the following requirements: Length: Min: 10, Max: 64;\n\nRegex Pattern: `/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/`"
                  },
                  "status": {
                    "type": "string",
                    "description": "Optional status of this account. Inactive account are not accessible."
                  },
                  "data_location": {
                    "type": "string",
                    "description": "S3 files server location"
                  },
                  "country_code_iso2": {
                    "type": "string",
                    "description": "Country code in ISO 3166-1 alfa-2 format. required|size:2"
                  },
                  "country_state_iso2": {
                    "type": "string",
                    "description": "Country state in ISO 3166-2 format."
                  },
                  "created_ip": {
                    "type": "string",
                    "description": "IP address from where user has been created"
                  },
                  "confirmed": {
                    "type": "string",
                    "description": "Is user confirmed?"
                  },
                  "profile[date_format]": {
                    "type": "string",
                    "description": "Format in:d/m/Y,d M Y,m/d/Y,Y-d-m,m-d-Y,Y-m-d"
                  },
                  "profile[time_format]": {
                    "type": "string",
                    "description": "Format in:h:i A,H:i"
                  },
                  "profile[first_name]": {
                    "type": "string",
                    "description": "User first name"
                  },
                  "profile[last_name]": {
                    "type": "string",
                    "description": "User last name"
                  },
                  "profile[company]": {
                    "type": "string",
                    "description": "Company name"
                  },
                  "profile[timezone]": {
                    "type": "string",
                    "description": "Valid timezone name - http://www.php.net/manual/en/timezones.php"
                  },
                  "profile[country_code_iso2]": {
                    "type": "string",
                    "description": "Country code in ISO 3166-1 alfa-2 format."
                  },
                  "profile[country_state_iso2]": {
                    "type": "string",
                    "description": "Country state in ISO 3166-2 format."
                  },
                  "profile[city]": {
                    "type": "string",
                    "description": "Address city name"
                  },
                  "profile[street]": {
                    "type": "string",
                    "description": "Address street"
                  },
                  "profile[postal_code]": {
                    "type": "string",
                    "description": "Address postal code"
                  },
                  "profile[about]": {
                    "type": "string",
                    "description": "About the user"
                  },
                  "profile[disable_fillable_form]": {
                    "type": "string",
                    "description": "Disable form filling"
                  },
                  "profile[background_image_url]": {
                    "type": "string",
                    "description": "Background image for widgets"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id",
        "description": "Soft delete user (record stays in database, but deleted_at is set up).  \n\nReturn no content (HTTP code 204).",
        "operationId": "Delete/api/users/:user_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/search": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/search",
        "description": "Search and retrieve a collection of Users / sub-accounts from your account. Resource is accessible by an authenticated user. Please contact support in order to turn on sub-account ability within your account.\n\nPlease remember that collections are always paginated and you can use a set of default parameters sent along with request to manipulate the results in the response. Please refer to the \"Common Request Parameters on Collections\" section of this document for more details.\n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users/search?phrase=test&include=profile`\n\nUsers search takes place in following fields:\n* user email\n* user first name\n* user last name\n* user company\n\nHere is a list of sortable columns:\n* id (always sortable on all resources)  \n* email  \n* created_ip  \n* created_at  \n* updated_at  \n* data_location  \n* deleted_at (option available on Enterprise accounts only)  \n\n**Default sortable column:** id, sort order asc (newest first)  \n\n**Default number of resources per page:** 10",
        "operationId": "/api/users/search",
        "parameters": [
          {
            "name": "phrase",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "demo"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Thu, 21 Dec 2017 11:23:35 GMT"
                    },
                    "example": "Thu, 21 Dec 2017 11:23:35 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nginx/1.12.1"
                    },
                    "example": "nginx/1.12.1"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "chunked"
                    },
                    "example": "chunked"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "239"
                    },
                    "example": "239"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1513855475"
                    },
                    "example": "1513855475"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Searchforuser"
                },
                "example": {
                  "data": [
                    {
                      "id": 2,
                      "parent_id": 3,
                      "package_id": null,
                      "enterprise_id": 2,
                      "enterprise_identifier": "acme",
                      "email": "test@example.com",
                      "status": "active",
                      "phone_number": null,
                      "phone_country_code": null,
                      "created_ip": null,
                      "confirmed_at": 1513163284,
                      "created_at": 1512654568,
                      "updated_at": 1513163284,
                      "data_location": "s-us-es-a"
                    }
                  ],
                  "meta": {
                    "pagination": {
                      "total": 1,
                      "count": 1,
                      "per_page": 10,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": []
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/enable": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id/enable",
        "description": "You may want to activate an account you had previously disabled - you can change an account status from inactive to active by sending the following request.  \n\nReturns user data.",
        "operationId": "/api/users/:user_id/enable",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/disable": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id/disable",
        "description": "You may want to deactivate an account for some time but not fully delete it - you can change an account status from active to inactive by sending the following request.  \n\nReturns user data.  \n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users?include=profile`",
        "operationId": "/api/users/:user_id/disable",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/avatar": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id/avatar",
        "description": "Change user's avatar.  \n\nReturns user data.  \n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users?include=profile`",
        "operationId": "/api/users/:user_id/avatar",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "avatar"
                ],
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "description": "New avatar image (binary) for account"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id/avatar",
        "description": "Delete user's avatar.",
        "operationId": "Delete/api/users/:user_id/avatar",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/logo": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id/logo",
        "description": "[Depreciated]\nChange user's logo.  \n\nReturns user data.  \n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users?include=profile`",
        "operationId": "/api/users/:user_id/logo",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "logo"
                ],
                "type": "object",
                "properties": {
                  "logo": {
                    "type": "string",
                    "description": "New logo image (binary) for account"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id/logo",
        "description": "Delete user's logo.",
        "operationId": "Delete/api/users/:user_id/logo",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/{user_id}/background": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "/api/users/:user_id/background",
        "description": "Change user's background image for rooms (widgets).  \n\nReturns user data.  \n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users?include=profile`",
        "operationId": "/api/users/:user_id/background",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "background"
                ],
                "type": "object",
                "properties": {
                  "background": {
                    "type": "string",
                    "description": "New rooms background image (binary) for account"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/invites": {
      "get": {
        "tags": [
          "Invitations"
        ],
        "summary": "/api/widgets/:widget_id/invites",
        "description": "Retrieve Widget Invitations.  \n\nSortable columns:  \n* id\n* widget_id\n* widget_session_id\n* attendee_id\n* participant_group_id\n* sent_to\n* firstname\n* lastname\n* subject\n* created_at\n* attendee_role\n* connected_at\n* updated_at\n* deleted_at\n* type",
        "operationId": "/api/widgets/:widget_id/invites",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/invites/{invitation_id}": {
      "post": {
        "tags": [
          "Invitations"
        ],
        "summary": "/api/widgets/:widget_id/invites/:invitation_id",
        "description": "Send invitation for Widget.",
        "operationId": "/api/widgets/:widget_id/invites/:invitation_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "invitation_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/participants": {
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "/api/widgets/:widget_id/participants",
        "description": "Retrieve collection of Widget Participants.  \n\nSortable columns:  \n* id",
        "operationId": "/api/widgets/:widget_id/participants",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/participants/token/{attendee_token}": {
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "/api/widgets/:widget_id/participants/token/:attendee_token",
        "description": "Retrieve Widget Participant by token.",
        "operationId": "/api/widgets/:widget_id/participants/token/:attendee_token",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "attendee_token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "nd-rwgtto6pm-v2pspsiimdyd8ai-7domm0"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/presenters/{presenter_id}": {
      "post": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/widgets/:widget_id/presenters/:presenter_id",
        "description": "Attach Presenter to Widget.",
        "operationId": "/api/widgets/:widget_id/presenters/:presenter_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "presenter_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/widgets/:widget_id/presenters/:presenter_id1",
        "description": "Detach Presenter from Widget.",
        "operationId": "/api/widgets/:widget_id/presenters/:presenter_id1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "presenter_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/presenters": {
      "get": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/presenters",
        "description": "Retrieve collection of Presenters.  \n\nSortable columns:\n* id\n* created_at\n* updated_at\n* deleted_at",
        "operationId": "/api/presenters",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "created_at"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "desc"
            }
          },
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/presenters",
        "description": "Create new Presenter.  \n\nReturns newly created Presenter data.",
        "operationId": "Post/api/presenters",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "status",
                  "nickname",
                  "timezone",
                  "phone_number",
                  "phone_country_code",
                  "country",
                  "company",
                  "website",
                  "about",
                  "role",
                  "avatar"
                ],
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@example.com"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "nickname": {
                    "type": "string",
                    "example": "Joe"
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Europe/Warsaw"
                  },
                  "phone_number": {
                    "type": "integer",
                    "format": "int32",
                    "example": 123123123
                  },
                  "phone_country_code": {
                    "type": "string",
                    "example": "+48"
                  },
                  "country": {
                    "type": "string",
                    "example": "Poland"
                  },
                  "company": {
                    "type": "string",
                    "example": "RTCLab"
                  },
                  "website": {
                    "type": "string",
                    "example": "html5meeting.com"
                  },
                  "about": {
                    "type": "string",
                    "example": "Professionalist"
                  },
                  "role": {
                    "type": "string",
                    "example": "presenter"
                  },
                  "avatar": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/presenters/{presenter_id}": {
      "get": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/presenters/:presenter_id",
        "description": "Retrieve selected Presenter data.",
        "operationId": "/api/presenters/:presenter_id",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "presenter_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/presenters/:presenter_id",
        "description": "Update selected Presenter.  \n\nReturns updated Presenter data.",
        "operationId": "Put/api/presenters/:presenter_id",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "presenter_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "status",
                  "nickname",
                  "timezone",
                  "phone_number",
                  "phone_country_code",
                  "country",
                  "company",
                  "website",
                  "about",
                  "role"
                ],
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@example.com"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "nickname": {
                    "type": "string",
                    "example": "Joe"
                  },
                  "timezone": {
                    "type": "string",
                    "example": "Europe/Warsaw"
                  },
                  "phone_number": {
                    "type": "integer",
                    "format": "int32",
                    "example": 123123123
                  },
                  "phone_country_code": {
                    "type": "string",
                    "example": "+48"
                  },
                  "country": {
                    "type": "string",
                    "example": "Poland"
                  },
                  "company": {
                    "type": "string",
                    "example": "RTCLab"
                  },
                  "website": {
                    "type": "string",
                    "example": "html5meeting.com"
                  },
                  "about": {
                    "type": "string",
                    "example": "Professionalist"
                  },
                  "role": {
                    "type": "string",
                    "example": "presenter"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/presenters/:presenter_id1",
        "description": "Softly delete selected Presenter.",
        "operationId": "/api/presenters/:presenter_id1",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "presenter_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/presenters/{presenter_id}/avatar": {
      "post": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/presenters/:presenter_id/avatar",
        "description": "Change Presenter avatar photo.  \n\nReturns updated Presenter data.",
        "operationId": "/api/presenters/:presenter_id/avatar",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "presenter_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "avatar"
                ],
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/presenters/{presenter_id}/enable": {
      "put": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/presenters/:presenter_id/enable",
        "description": "Activate selected Presenter.  \n\nReturns activated Presenter data.",
        "operationId": "/api/presenters/:presenter_id/enable",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "presenter_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/presenters/{presenter_id}/disable": {
      "put": {
        "tags": [
          "Presenters"
        ],
        "summary": "/api/presenters/:presenter_id/disable",
        "description": "Deactivate selected Presenter.  \n\nReturns activated Presenter data.",
        "operationId": "/api/presenters/:presenter_id/disable",
        "parameters": [
          {
            "name": "sub_user_id",
            "in": "query",
            "description": "Optional, request as sub user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "presenter_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/recorders": {
      "get": {
        "tags": [
          "Recorders"
        ],
        "summary": "/api/widgets/:widget_id/recorders",
        "description": "Retrieve collection of Widget Recorders.  \n\nSortable columns:  \n* id\n* widget_id\n* url\n* status\n* type\n* file_id\n* created_at\n* updated_at",
        "operationId": "/api/widgets/:widget_id/recorders",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/recorders/start": {
      "post": {
        "tags": [
          "Recorders"
        ],
        "summary": "/api/widgets/:widget_id/recorders/start",
        "description": "Start new Recorder for Widget.  \n\nReturns newly created Recorder data.",
        "operationId": "/api/widgets/:widget_id/recorders/start",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/recorders/{recorder_id}/stop": {
      "put": {
        "tags": [
          "Recorders"
        ],
        "summary": "/api/widgets/:widget_id/recorders/:recorder_id/stop",
        "description": "Stop selected Widget's Recorder.  \n\nReturns message from Recorder.",
        "operationId": "/api/widgets/:widget_id/recorders/:recorder_id/stop",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recorder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/recorders/{recorder_id}/restart": {
      "put": {
        "tags": [
          "Recorders"
        ],
        "summary": "/api/widgets/:widget_id/recorders/:recorder_id/restart",
        "description": "Restart selected Widget's Recorder.  \n\nReturns message from Recorder.",
        "operationId": "/api/widgets/:widget_id/recorders/:recorder_id/restart",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recorder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/recorders/{recorder_id}/show": {
      "get": {
        "tags": [
          "Recorders"
        ],
        "summary": "/api/widgets/:widget_id/recorders/:recorder_id/show",
        "description": "Retrieve selected Widget Recorder.",
        "operationId": "/api/widgets/:widget_id/recorders/:recorder_id/show",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recorder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/recorders/{recorder_id}/status": {
      "get": {
        "tags": [
          "Recorders"
        ],
        "summary": "/api/widgets/:widget_id/recorders/:recorder_id/status",
        "description": "Retrieve Recorder status from Recorder process and return Recorder data with updated status.",
        "operationId": "/api/widgets/:widget_id/recorders/:recorder_id/status",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recorder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/streamers": {
      "get": {
        "tags": [
          "Streamers"
        ],
        "summary": "/api/widgets/:widget_id/streamers",
        "description": "Retrieve collection of Widget Streamers.  \n\nSortable columns:  \n* id\n* widget_id\n* url\n* status\n* type\n* created_at\n* updated_at",
        "operationId": "/api/widgets/:widget_id/streamers",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/streamers/start": {
      "post": {
        "tags": [
          "Streamers"
        ],
        "summary": "/api/widgets/:widget_id/streamers/start",
        "description": "Create and start new Widget Streamer.  \n\nReturns newly created Streamer data.",
        "operationId": "/api/widgets/:widget_id/streamers/start",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 77
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "room_url",
                  "stream_url",
                  "stream_key",
                  "streamer_type",
                  "callback_url",
                  "callback_method"
                ],
                "type": "object",
                "properties": {
                  "room_url": {
                    "type": "string",
                    "example": "https://example.com"
                  },
                  "stream_url": {
                    "type": "string",
                    "example": "https://example.com"
                  },
                  "stream_key": {
                    "type": "integer",
                    "format": "int32",
                    "example": 123
                  },
                  "streamer_type": {
                    "type": "string",
                    "description": "youtube, facebook, vimeo, periscope, custom",
                    "example": "youtube"
                  },
                  "callback_url": {
                    "type": "string"
                  },
                  "callback_method": {
                    "type": "string",
                    "description": "GET,POST,PUT,BODY"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/streamers/{streamer_id}/stop": {
      "put": {
        "tags": [
          "Streamers"
        ],
        "summary": "/api/widgets/:widget_id/streamers/:streamer_id/stop",
        "description": "Stop selected Widget Streamer.  \n\nReturns message from streamer.",
        "operationId": "/api/widgets/:widget_id/streamers/:streamer_id/stop",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "streamer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/streamers/{streamer_id}/show": {
      "get": {
        "tags": [
          "Streamers"
        ],
        "summary": "/api/widgets/:widget_id/streamers/:streamer_id/show",
        "description": "Retrieve selected Widget Streamer.",
        "operationId": "/api/widgets/:widget_id/streamers/:streamer_id/show",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "streamer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/streamers/{streamer_id}/status": {
      "get": {
        "tags": [
          "Streamers"
        ],
        "summary": "/api/widgets/:widget_id/streamers/:streamer_id/status",
        "description": "Update status of selected Widget Streamer.  \n\nReturns updated Streamer data.",
        "operationId": "/api/widgets/:widget_id/streamers/:streamer_id/status",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "streamer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/origin": {
      "get": {
        "tags": [
          "Origin"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/origin",
        "description": "Retrieve the collection of Session Origins.  \n\nSortable columns:  \n* id\n* widget_session_id\n* instance_hid\n* type\n* is_active\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSession\n* WidgetSessionLog\n* Widget",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/origin",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/origin/{origin_session_id}": {
      "get": {
        "tags": [
          "Origin"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/origin/:origin_session_id",
        "description": "Retrieve selected Session Origin.  \n\nAvailable includes:  \n* WidgetSession\n* WidgetSessionLog\n* Widget",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/origin/:origin_session_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "origin_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Origin"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/origin/:origin_session_id1",
        "description": "Softly delete selected Session Origin.",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/origin/:origin_session_id1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "origin_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/origin/{origin_session_id}/logs": {
      "get": {
        "tags": [
          "Origin"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/origin/:origin_session_id/logs",
        "description": "Get Widget Session Logs by Session Origin id.  \n\nSortable columns:  \n* id\n* instance_hid\n* is_active\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSessionLog,\n* Widget",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/origin/:origin_session_id/logs",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "origin_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/origin/{origin_session_id}/logs/{log_id}": {
      "get": {
        "tags": [
          "Origin"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/origin/:origin_session_id/logs/:log_id",
        "description": "Get selected Widget Session Log.  \n\nAvailable includes:  \n* WidgetSessionOrigin,\n* WidgetSessionLog,\n* Widget",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/origin/:origin_session_id/logs/:log_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "origin_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "log_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/engagements": {
      "get": {
        "tags": [
          "Engagements"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/engagements",
        "description": "Retrieve the collection of Widget Session Engagements.  \n\nSortable columns:  \n* id\n* widget_id\n* widget_session_id\n* is_active\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* WidgetSessionEngagementLog",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/engagements",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Engagements"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/engagements1",
        "description": "Create new Widget Session Engagement.  \n\nReturns newly created Widget Session Engagement.  \n\nAvailable includes:  \n* WidgetSessionEngagementLog",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/engagements1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/engagements/{engagement_id}": {
      "get": {
        "tags": [
          "Engagements"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id",
        "description": "Retrieve selected Widget Session Engagement.  \n\nAvailable includes:  \n* WidgetSessionEngagementLog",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "engagement_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Engagements"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id",
        "description": "Update selected Widget Session Engagement.  \n\nReturns updated Widget Session Engagement.  \n\nAvailable includes:  \n* WidgetSessionEngagementLog",
        "operationId": "Put/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "engagement_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "range_min",
                  "range_max",
                  "auto_close",
                  "auto_logout",
                  "play_audio",
                  "message"
                ],
                "type": "object",
                "properties": {
                  "range_min": {
                    "type": "integer",
                    "format": "int32",
                    "example": 30
                  },
                  "range_max": {
                    "type": "integer",
                    "format": "int32",
                    "example": 60
                  },
                  "auto_close": {
                    "type": "integer",
                    "format": "int32",
                    "example": 15
                  },
                  "auto_logout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "play_audio": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "message": {
                    "type": "string",
                    "example": "Hi, are you there?"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Engagements"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id1",
        "description": "Softly delete Widget Session Engagement.",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "engagement_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/engagements/{engagement_id}/stop": {
      "put": {
        "tags": [
          "Engagements"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id/stop",
        "description": "Deactivate selected Widget Session Engagement.  \n\nReturns deactivated Widget Session Engagement.  \n\nAvailable includes:  \n* WidgetSessionEngagementLog",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id/stop",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "engagement_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "range_min",
                  "range_max",
                  "auto_close",
                  "auto_logout",
                  "play_audio",
                  "message"
                ],
                "type": "object",
                "properties": {
                  "range_min": {
                    "type": "integer",
                    "format": "int32",
                    "example": 30
                  },
                  "range_max": {
                    "type": "integer",
                    "format": "int32",
                    "example": 60
                  },
                  "auto_close": {
                    "type": "integer",
                    "format": "int32",
                    "example": 15
                  },
                  "auto_logout": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "play_audio": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "message": {
                    "type": "string",
                    "example": "Hi, are you there?"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/engagements/{engagement_id}/logs": {
      "get": {
        "tags": [
          "Engagements"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id/logs",
        "description": "Retrieve Widget Session Engagement Logs.  \n\nSortable columns:  \n* id\n* widget_session_engagement_id\n* attendee_id\n* user_action\n* event_timestamp\n* created_at\n* updated_at\n* deleted_at",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id/logs",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "engagement_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Engagements"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id/logs1",
        "description": "Add Widget Session Engagement Log.  \n\nReturns newly created Widget Session Engagement Log.",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id/logs1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "engagement_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/sessions/{session_id}/engagements/{engagement_id}/logs/{log_id}": {
      "get": {
        "tags": [
          "Engagements"
        ],
        "summary": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id/logs/:log_id",
        "description": "Retrieve selected Widget Session Engagemnet Log data.",
        "operationId": "/api/widgets/:widget_id/sessions/:session_id/engagements/:engagement_id/logs/:log_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "engagement_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "log_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/custom_fields": {
      "get": {
        "tags": [
          "Custom fields"
        ],
        "summary": "/api/widgets/:widget_id/custom_fields",
        "description": "Retrieve the collection of Widget Custom Fields.  \n\nSortable columns:  \n* id\n* widget_id\n* name\n* type\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* Widget",
        "operationId": "/api/widgets/:widget_id/custom_fields",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Custom fields"
        ],
        "summary": "/api/widgets/:widget_id/custom_fields1",
        "description": "Create new Custom Field for Widget.  \n\nReturns newly created Widget Custom Field.  \n\nAvailable includes:  \n* Widget",
        "operationId": "/api/widgets/:widget_id/custom_fields1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/custom_fields/{custom_field_id}": {
      "get": {
        "tags": [
          "Custom fields"
        ],
        "summary": "/api/widgets/:widget_id/custom_fields/:custom_field_id",
        "description": "Retrieve selected Widget Custom Field.  \n\nAvailable includes:  \n* Widget",
        "operationId": "/api/widgets/:widget_id/custom_fields/:custom_field_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Custom fields"
        ],
        "summary": "/api/widgets/:widget_id/custom_fields/:custom_field_id",
        "description": "Update selected Widget Custom Field.  \n\nReturns updated Widget Custom Field data.  \n\nAvailable includes:  \n* Widget",
        "operationId": "Put/api/widgets/:widget_id/custom_fields/:custom_field_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "value",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "new_name"
                  },
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "type": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Custom fields"
        ],
        "summary": "/api/widgets/:widget_id/custom_fields/:custom_field_id1",
        "description": "Softly delete Widget Custom Field.",
        "operationId": "/api/widgets/:widget_id/custom_fields/:custom_field_id1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/reminders": {
      "get": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/reminders",
        "description": "Retrieve the collection of Widget Reminders.  \n\nSortable columns:  \n* id",
        "operationId": "/api/widgets/:widget_id/reminders",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/reminders1",
        "description": "Create new Widget Reminder.  \n\nReturns newly created Widget Reminder data.",
        "operationId": "/api/widgets/:widget_id/reminders1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/reminders/{reminder_id}": {
      "get": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/reminders/:reminder_id",
        "description": "Retrieve selected Widget Reminder data.",
        "operationId": "/api/widgets/:widget_id/reminders/:reminder_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "reminder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/reminders/:reminder_id",
        "description": "Update selected Widget Reminder.  \n\nReturns updated Widget Reminder data.",
        "operationId": "Put/api/widgets/:widget_id/reminders/:reminder_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "reminder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "type",
                  "message",
                  "time"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "phone"
                  },
                  "message": {
                    "type": "string",
                    "example": "Remember about your event!"
                  },
                  "time": {
                    "type": "integer",
                    "format": "int32",
                    "example": 30
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/reminders/:reminder_id1",
        "description": "Softly delete selected Widget Reminder.",
        "operationId": "/api/widgets/:widget_id/reminders/:reminder_id1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "reminder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/registrants/{registrant_id}/reminders": {
      "get": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/registrants/:registrant_id/reminders",
        "description": "Retrieve the collection of Widget Registrant's Reminders.  \n\nSortable columns:  \n* id\n* starts_at\n* alarm",
        "operationId": "/api/widgets/:widget_id/registrants/:registrant_id/reminders",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "registrant_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/registrants/:registrant_id/reminders1",
        "description": "Create new Reminder for Widget Registrant.  \n\nReturns newly created Widget Reminder data.",
        "operationId": "/api/widgets/:widget_id/registrants/:registrant_id/reminders1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "registrant_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/registrants/{registrant_id}/reminders/{reminder_id}": {
      "get": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/registrants/:registrant_id/reminders/:reminder_id",
        "description": "Retrieve selected Widget Reminder data.",
        "operationId": "/api/widgets/:widget_id/registrants/:registrant_id/reminders/:reminder_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "registrant_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "reminder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/registrants/:registrant_id/reminders/:reminder_id",
        "description": "Update selected Widget Reminder.  \n\nReturns updated Widget Reminder.",
        "operationId": "Put/api/widgets/:widget_id/registrants/:registrant_id/reminders/:reminder_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "registrant_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "reminder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "type",
                  "alarm"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "sms"
                  },
                  "alarm": {
                    "type": "string",
                    "example": "2017-12-14"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Reminders"
        ],
        "summary": "/api/widgets/:widget_id/registrants/:registrant_id/reminders/:reminder_id1",
        "description": "Softly delete selected Registrant's Widget Reminder.",
        "operationId": "/api/widgets/:widget_id/registrants/:registrant_id/reminders/:reminder_id1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "registrant_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "reminder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/registrants": {
      "get": {
        "tags": [
          "Registrants"
        ],
        "summary": "/api/widgets/:widget_id/registrants",
        "description": "Retrieve the collection of Widget Registrants.  \n\nSortable columns:  \n* id  \n\nAvailable includes:  \n* FormSessions\n* WidgetRegistrantReminders",
        "operationId": "/api/widgets/:widget_id/registrants",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Registrants"
        ],
        "summary": "/api/widgets/:widget_id/registrants",
        "description": "Create new Widget Registrant.  \n\nReturns newly created Widget Registrant data.  \n\nAvailable includes:  \n* FormSessions\n* WidgetRegistrantReminders",
        "operationId": "Post/api/widgets/:widget_id/registrants",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "registration[REGISTER_FORM_FIELD_NAME]",
                  "send_confirmation"
                ],
                "type": "object",
                "properties": {
                  "registration[REGISTER_FORM_FIELD_NAME]": {
                    "type": "string",
                    "description": "REGISTER_FORM_FIELD_NAME - from field \"name\" in Forms endpoint",
                    "example": "testname"
                  },
                  "send_confirmation": {
                    "type": "integer",
                    "description": "0|1 - optional, default 1",
                    "format": "int32",
                    "example": 0
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/registrants/{registrant_id}": {
      "get": {
        "tags": [
          "Registrants"
        ],
        "summary": "/api/widgets/:widget_id/registrants/:registrant_id",
        "description": "Retrieve selected Widget Registrant data.  \n\nAvailable includes:  \n* FormSessions\n* WidgetRegistrantReminders",
        "operationId": "/api/widgets/:widget_id/registrants/:registrant_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "registrant_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Registrants"
        ],
        "summary": "/api/widgets/:widget_id/registrants/:registrant_id1",
        "description": "Softly delete selected Widget Registrant.",
        "operationId": "/api/widgets/:widget_id/registrants/:registrant_id1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "registrant_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/registrants/{registrant_id}/access-link/resend": {
      "post": {
        "tags": [
          "Registrants"
        ],
        "summary": "/api/widgets/:widget_id/registrants/:registrant_id/access-link/resend",
        "description": "Resend acces link to Widget Registrant.  \n\nReturns Widget Registrant data.  \n\nAvailable includes:  \n* FormSessions\n* WidgetRegistrantReminders",
        "operationId": "/api/widgets/:widget_id/registrants/:registrant_id/access-link/resend",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "registrant_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/registrants/{registrant_id}/confirm": {
      "post": {
        "tags": [
          "Registrants"
        ],
        "summary": "/api/widgets/:widget_id/registrants/:registrant_id/confirm",
        "description": "Confirm selected Widget Registrant.  \n\nReturns Widget Registrant data.  \n\nAvailable includes:  \n* FormSessions\n* WidgetRegistrantReminders",
        "operationId": "/api/widgets/:widget_id/registrants/:registrant_id/confirm",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "registrant_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/tracking-providers": {
      "get": {
        "tags": [
          "Tracking providers"
        ],
        "summary": "/api/widgets/:widget_id/tracking-providers",
        "description": "Retrieve the collection of Widget Tracking Providers.  \n\nSortable columns:  \n* id\n\nAvailable includes:\n* Widget",
        "operationId": "/api/widgets/:widget_id/tracking-providers",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Tracking providers"
        ],
        "summary": "/api/widgets/:widget_id/tracking-providers1",
        "description": "Add new Tracking Provider for the Widget.  \n\nReturns newly created Tracking Provider data.  \n\nAvailable includes:\n* Widget",
        "operationId": "/api/widgets/:widget_id/tracking-providers1",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/tracking-providers/{tracking_provider_id}": {
      "get": {
        "tags": [
          "Tracking providers"
        ],
        "summary": "/api/widgets/:widget_id/tracking-providers/:tracking_provider_id",
        "description": "Retrieve selected Tracking Provider data.  \n\nAvailable includes:\n* Widget",
        "operationId": "/api/widgets/:widget_id/tracking-providers/:tracking_provider_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "tracking_provider_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Tracking providers"
        ],
        "summary": "/api/widgets/:widget_id/tracking-providers/:tracking_provider_id",
        "description": "Update selected Tracking Provider.  \n\nReturns updated Tracking Provider.  \n\nAvailable includes:\n* Widget",
        "operationId": "Put/api/widgets/:widget_id/tracking-providers/:tracking_provider_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "tracking_provider_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "type",
                  "params[0].type",
                  "params[1].value"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "facebook_pixel"
                  },
                  "params[0].type": {
                    "type": "string",
                    "example": "token"
                  },
                  "params[1].value": {
                    "type": "string",
                    "example": "asdvsdvsdvadsvasd"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Tracking providers"
        ],
        "summary": "/api/widgets/:widget_id/tracking-providers/:tracking_provider_id copy",
        "description": "Softly delete selected Tracking Provider.",
        "operationId": "/api/widgets/:widget_id/tracking-providers/:tracking_provider_idcopy",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "tracking_provider_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/sessions/{poll_session_id}/answers": {
      "get": {
        "tags": [
          "Answers"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers",
        "description": "Retrieve the collection of Widget Poll Session answers.  \n\nSortable columns:\n* id\n* poll_session_id\n* attendee_id\n* attendee_token\n* question_id\n* answer_id\n* created_at\n* updated_at\n* deleted_at",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Answers"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers",
        "description": "Create new Widget Poll Session Answer.  \n\nReturns newly created Widget Poll Session Answer data.",
        "operationId": "Post/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "attendee_id",
                  "attendee_token",
                  "question_id",
                  "answer_id",
                  "answer"
                ],
                "type": "object",
                "properties": {
                  "attendee_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "attendee_token": {
                    "type": "string",
                    "example": "nd-rwgtto6pm-v2pspsiimdyd8ai-7domm0"
                  },
                  "question_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "answer_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "answer": {
                    "type": "string",
                    "example": "My answer"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/{widget_id}/polls/{poll_id}/sessions/{poll_session_id}/answers/{answer_id}": {
      "get": {
        "tags": [
          "Answers"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers/:answer_id",
        "description": "Retrieve selected Widget Poll Session Answer data.",
        "operationId": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers/:answer_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "answer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Answers"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers/:answer_id",
        "description": "Update selected Widget Poll Session Answer.  \n\nReturns updated Widget Poll Session Answer data.",
        "operationId": "Put/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers/:answer_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "answer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "answer"
                ],
                "type": "object",
                "properties": {
                  "answer": {
                    "type": "string",
                    "example": "New answer"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Answers"
        ],
        "summary": "/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers/:answer_id",
        "description": "Softly delete selected Widget Poll Session Answer.",
        "operationId": "Delete/api/widgets/:widget_id/polls/:poll_id/sessions/:poll_session_id/answers/:answer_id",
        "parameters": [
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "poll_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "answer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/bookmark": {
      "post": {
        "tags": [
          "Bookmarks"
        ],
        "summary": "/api/storage/bookmark",
        "description": "Store new Bookmar.  \n\nReturns newly created Bookmark.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/storage/bookmark",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "type",
                  "metadata[video_id]"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "youtube"
                  },
                  "metadata[video_id]": {
                    "type": "string",
                    "example": "WPRUl2uYG7Q"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Bookmarks"
        ],
        "summary": "/api/storage/bookmark",
        "description": "Get bookmarks list.  \n\nReturns collection.  \n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "Get/api/storage/bookmark",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/bookmark/{id}": {
      "put": {
        "tags": [
          "Bookmarks"
        ],
        "summary": "/api/storage/bookmark/:id",
        "description": "Update bookmark file by given id.  \n\nReturns item.\n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/storage/bookmark/:id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 233
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "type",
                  "metadata[video_id]"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "youtube"
                  },
                  "metadata[video_id]": {
                    "type": "string",
                    "example": "WPRUl2u"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Bookmarks"
        ],
        "summary": "/api/storage/bookmark copy",
        "description": "Get bookmark file by given id.  \n\nReturns item.\n\nAvailable includes:  \n* StorageFolder\n* sharedSubFilesCount",
        "operationId": "/api/storage/bookmarkcopy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 233
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Bookmarks"
        ],
        "summary": "/api/storage/bookmark/:id",
        "description": "Delete bookmark file by given id.  \n\nReturns 204 no content.",
        "operationId": "Delete/api/storage/bookmark/:id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 233
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}/fields": {
      "get": {
        "tags": [
          "Fields"
        ],
        "summary": "/api/forms/:form_id/fields",
        "description": "Retrieve collection of Form Fields.  \n\nSortable columns: \n* id",
        "operationId": "/api/forms/:form_id/fields",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Fields"
        ],
        "summary": "/api/forms/:form_id/fields",
        "description": "Add new Field to Form.  \n\nReturns newly created Form Field data.",
        "operationId": "Post/api/forms/:form_id/fields",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "type",
                  "name",
                  "placeholder",
                  "require",
                  "options",
                  "position",
                  "identifier"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "input"
                  },
                  "name": {
                    "type": "string",
                    "example": "Input field"
                  },
                  "placeholder": {
                    "type": "string",
                    "example": "Type here"
                  },
                  "require": {
                    "type": "boolean",
                    "example": true
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "",
                    "example": [
                      {}
                    ]
                  },
                  "position": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "identifier": {
                    "type": "string",
                    "example": "field_1"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}/fields/{field_id}": {
      "get": {
        "tags": [
          "Fields"
        ],
        "summary": "/api/forms/:form_id/fields/:field_id",
        "description": "Retrieve selected Form Field.",
        "operationId": "/api/forms/:form_id/fields/:field_id",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Fields"
        ],
        "summary": "/api/forms/:form_id/fields/:field_id",
        "description": "Update selected Form Field.  \n\nReturns updated Form Field data.",
        "operationId": "Put/api/forms/:form_id/fields/:field_id",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "type",
                  "name",
                  "placeholder",
                  "require",
                  "options",
                  "position",
                  "identifier"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "input"
                  },
                  "name": {
                    "type": "string",
                    "example": "Input field"
                  },
                  "placeholder": {
                    "type": "string",
                    "example": "Type here"
                  },
                  "require": {
                    "type": "boolean",
                    "example": true
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "",
                    "example": [
                      {}
                    ]
                  },
                  "position": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "identifier": {
                    "type": "string",
                    "example": "field_1"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Fields"
        ],
        "summary": "/api/forms/:form_id/fields/:field_id1",
        "description": "Softly delete Form Field.",
        "operationId": "/api/forms/:form_id/fields/:field_id1",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}/automation": {
      "get": {
        "tags": [
          "Automation"
        ],
        "summary": "/api/forms/:form_id/automation",
        "description": "Retrieve collection of automation integrations assigned to this form.  \n\nSortable columns: \n* id",
        "operationId": "/api/forms/:form_id/automation",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Automation"
        ],
        "summary": "/api/forms/:form_id/automation",
        "description": "Assign existing automation integration to form.",
        "operationId": "Post/api/forms/:form_id/automation",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "automation_integration_id",
                  "list_id"
                ],
                "type": "object",
                "properties": {
                  "automation_integration_id": {
                    "type": "string"
                  },
                  "list_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/integrations/automation": {
      "get": {
        "tags": [
          "Automation"
        ],
        "summary": "/api/integrations/automation",
        "description": "Retrieve authenticated user's automation integrations.",
        "operationId": "/api/integrations/automation",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Upgrade, close"
                    },
                    "example": "Upgrade, close"
                  }
                }
              },
              "Content-Language": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "en"
                    },
                    "example": "en"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Fri, 31 Aug 2018 08:53:04 GMT"
                    },
                    "example": "Fri, 31 Aug 2018 08:53:04 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                    },
                    "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                  }
                }
              },
              "Upgrade": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "h2,h2c"
                    },
                    "example": "h2,h2c"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.16"
                    },
                    "example": "PHP/7.1.16"
                  }
                }
              }
            },
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Automation"
        ],
        "summary": "/api/integrations/automation",
        "description": "Add new marketing automation integration.\n\nAvailable `provider` values:\n- ConstantContact\n- CampaignMonitor\n- FreshMail\n- MailChimp\n- IContact\n\n`credentials` should contain array of parameters required to authenticate to selected provider.",
        "operationId": "Post/api/integrations/automation",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "provider",
                  "credentials[api_key]"
                ],
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "example": "MailChimp"
                  },
                  "credentials[api_key]": {
                    "type": "string",
                    "example": "11111111111111111111111111111111-us18"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Upgrade, close"
                    },
                    "example": "Upgrade, close"
                  }
                }
              },
              "Content-Language": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "en"
                    },
                    "example": "en"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "286"
                    },
                    "example": "286"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Fri, 31 Aug 2018 12:49:00 GMT"
                    },
                    "example": "Fri, 31 Aug 2018 12:49:00 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                    },
                    "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                  }
                }
              },
              "Upgrade": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "h2,h2c"
                    },
                    "example": "h2,h2c"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.16"
                    },
                    "example": "PHP/7.1.16"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "239"
                    },
                    "example": "239"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1535719801"
                    },
                    "example": "1535719801"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCampaignMonitorprovider"
                },
                "example": {
                  "data": {
                    "id": 2,
                    "user_id": 10,
                    "provider": "CampaignMonitor",
                    "credentials": {
                      "apiKey": "<api_key>",
                      "clientId": "<api_secret>"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Upgrade, close"
                    },
                    "example": "Upgrade, close"
                  }
                }
              },
              "Content-Language": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "en"
                    },
                    "example": "en"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Fri, 31 Aug 2018 08:53:04 GMT"
                    },
                    "example": "Fri, 31 Aug 2018 08:53:04 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                    },
                    "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                  }
                }
              },
              "Upgrade": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "h2,h2c"
                    },
                    "example": "h2,h2c"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.16"
                    },
                    "example": "PHP/7.1.16"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddingMailChimpproviderintegration1"
                },
                "example": {
                  "data": {
                    "id": 1,
                    "user_id": 10,
                    "provider": "MailChimp",
                    "credentials": {
                      "api_key": "11111111111111111111111111111111-us18"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/integrations/automation/{id}": {
      "put": {
        "tags": [
          "Automation"
        ],
        "summary": "/api/integrations/automation/:id",
        "description": "Update selected marketing automation integration.",
        "operationId": "/api/integrations/automation/:id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "provider",
                  "credentials[api_key]"
                ],
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "example": "MailChimp"
                  },
                  "credentials[api_key]": {
                    "type": "string",
                    "example": "abcdabcdabcdabcdabcdabcdabcdabcd-us16"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Upgrade, close"
                    },
                    "example": "Upgrade, close"
                  }
                }
              },
              "Content-Language": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "en"
                    },
                    "example": "en"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "119"
                    },
                    "example": "119"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 03 Sep 2018 08:31:15 GMT"
                    },
                    "example": "Mon, 03 Sep 2018 08:31:15 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                    },
                    "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                  }
                }
              },
              "Upgrade": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "h2,h2c"
                    },
                    "example": "h2,h2c"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.16"
                    },
                    "example": "PHP/7.1.16"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "239"
                    },
                    "example": "239"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1535963537"
                    },
                    "example": "1535963537"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Updateselectedprovider"
                },
                "example": {
                  "data": {
                    "id": 1,
                    "user_id": 10,
                    "provider": "MailChimp",
                    "credentials": {
                      "api_key": "6y6y6y6y6y6y6y6y6y6y6y6y6y6y6y6y-us16"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/integrations/automation/{integration_id}/list": {
      "get": {
        "tags": [
          "Automation"
        ],
        "summary": "/api/integrations/automation/:integration_id/list",
        "operationId": "/api/integrations/automation/:integration_id/list",
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Automation"
        ],
        "summary": "/api/integrations/automation/:integration_id/list",
        "operationId": "Post/api/integrations/automation/:integration_id/list",
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "permission_reminder",
                  "contact_company",
                  "contact_address",
                  "contact_city",
                  "contact_state",
                  "contact_zip",
                  "contact_country",
                  "campaign_name",
                  "campaign_email",
                  "campaign_subject",
                  "campaign_language",
                  "email_type_option"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "SAMPLE LIST"
                  },
                  "permission_reminder": {
                    "type": "string",
                    "example": "Permission reminder"
                  },
                  "contact_company": {
                    "type": "string",
                    "example": "ACME"
                  },
                  "contact_address": {
                    "type": "string",
                    "example": "State Street"
                  },
                  "contact_city": {
                    "type": "string",
                    "example": "New Haven"
                  },
                  "contact_state": {
                    "type": "string",
                    "example": "CT"
                  },
                  "contact_zip": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3400
                  },
                  "contact_country": {
                    "type": "string",
                    "example": "United States"
                  },
                  "campaign_name": {
                    "type": "string",
                    "example": "New campaign"
                  },
                  "campaign_email": {
                    "type": "string",
                    "example": "example@example.com"
                  },
                  "campaign_subject": {
                    "type": "string",
                    "example": "Example subject"
                  },
                  "campaign_language": {
                    "type": "string",
                    "example": "en"
                  },
                  "email_type_option": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Upgrade, close"
                    },
                    "example": "Upgrade, close"
                  }
                }
              },
              "Content-Language": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "en"
                    },
                    "example": "en"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "5884"
                    },
                    "example": "5884"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Fri, 31 Aug 2018 11:25:43 GMT"
                    },
                    "example": "Fri, 31 Aug 2018 11:25:43 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                    },
                    "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                  }
                }
              },
              "Upgrade": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "h2,h2c"
                    },
                    "example": "h2,h2c"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.16"
                    },
                    "example": "PHP/7.1.16"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "238"
                    },
                    "example": "238"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1535714776"
                    },
                    "example": "1535714776"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"status\": 1,\n    \"name\": \"addList\",\n    \"type\": \"json\",\n    \"data\": {...}\n}"
                },
                "example": "{\n    \"status\": 1,\n    \"name\": \"addList\",\n    \"type\": \"json\",\n    \"data\": {...}\n}"
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/integrations/{id}/list/{list_id}/assign": {
      "post": {
        "tags": [
          "Automation"
        ],
        "summary": "/api/integrations/automation/:integration_id/list/assign",
        "description": "Assign member to selected integration list.",
        "operationId": "/api/integrations/automation/:integration_id/list/assign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "email"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "sssss@wp.pl"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Upgrade, close"
                    },
                    "example": "Upgrade, close"
                  }
                }
              },
              "Content-Language": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "en"
                    },
                    "example": "en"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "3053"
                    },
                    "example": "3053"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Fri, 31 Aug 2018 11:45:13 GMT"
                    },
                    "example": "Fri, 31 Aug 2018 11:45:13 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                    },
                    "example": "Apache/2.4.33 (Unix) LibreSSL/2.2.7 PHP/7.1.16"
                  }
                }
              },
              "Upgrade": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "h2,h2c"
                    },
                    "example": "h2,h2c"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.16"
                    },
                    "example": "PHP/7.1.16"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "239"
                    },
                    "example": "239"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1535715973"
                    },
                    "example": "1535715973"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"status\": 1,\n    \"name\": \"addMember\",\n    \"type\": \"json\",\n    \"data\": {...}\n}"
                },
                "example": "{\n    \"status\": 1,\n    \"name\": \"addMember\",\n    \"type\": \"json\",\n    \"data\": {...}\n}"
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/integrations/automation/{integration_id}": {
      "delete": {
        "tags": [
          "Automation"
        ],
        "summary": "/api/integrations/automation/:id",
        "description": "Delete selected marketing automation integration.",
        "operationId": "Delete/api/integrations/automation/:id",
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms",
        "description": "Retrieve collection of Forms.  \n\nSortable columns: \n* id\n* name\n* type\n* status\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* fields\n* formSessions\n* InUseWidgetCounter\n* FormSessionCounter",
        "operationId": "/api/forms",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms",
        "description": "Create new Form.  \n\nReturns newly created Form data.  \n\nAvailable includes:  \n* fields\n* formSessions\n* InUseWidgetCounter\n* FormSessionCounter",
        "operationId": "Post/api/forms",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "type",
                  "description",
                  "fields[0][type]",
                  "fields[0][name]",
                  "fields[0][placeholder]",
                  "fields[0][require]",
                  "fields[0][options]",
                  "fields[0][position]",
                  "fields[0][identifier]",
                  "fields[1][type]",
                  "fields[1][name]",
                  "fields[1][placeholder]",
                  "fields[1][require]",
                  "fields[1][options]",
                  "fields[1][position]",
                  "fields[1][identifier]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New form"
                  },
                  "type": {
                    "type": "string",
                    "example": "registration"
                  },
                  "description": {
                    "type": "string",
                    "example": "My new form"
                  },
                  "fields[0][type]": {
                    "type": "string",
                    "description": "'input','password','checkbox','radio','select','textarea','call2action','email','attendee_email','attendee_name','attendee_first_name','attendee_last_name','phone','custom_text'",
                    "example": "attendee_name"
                  },
                  "fields[0][name]": {
                    "type": "string",
                    "example": "attendee_name"
                  },
                  "fields[0][placeholder]": {
                    "type": "string",
                    "example": "Attendee Name"
                  },
                  "fields[0][require]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "fields[0][options]": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "",
                    "example": [
                      {}
                    ]
                  },
                  "fields[0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "fields[0][identifier]": {
                    "type": "string",
                    "example": "attendee_name"
                  },
                  "fields[1][type]": {
                    "type": "string",
                    "description": "'input','password','checkbox','radio','select','textarea','call2action','email','attendee_email','attendee_name','attendee_first_name','attendee_last_name','phone','custom_text'",
                    "example": "attendee_email"
                  },
                  "fields[1][name]": {
                    "type": "string",
                    "example": "attendee_email"
                  },
                  "fields[1][placeholder]": {
                    "type": "string",
                    "example": "Attendee email"
                  },
                  "fields[1][require]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "fields[1][options]": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "",
                    "example": [
                      {}
                    ]
                  },
                  "fields[1][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "fields[1][identifier]": {
                    "type": "string",
                    "example": "attendee_email"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms/:form_id",
        "description": "Retrieve selected Form.  \n\nAvailable includes:  \n* fields\n* formSessions\n* InUseWidgetCounter\n* FormSessionCounter",
        "operationId": "/api/forms/:form_id",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms/:form_id",
        "description": "Update selected Form.  \n\nReturns updated Form data.  \n\nAvailable includes:  \n* fields\n* formSessions\n* InUseWidgetCounter\n* FormSessionCounter",
        "operationId": "Put/api/forms/:form_id",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "type",
                  "description",
                  "fields[0][type]",
                  "fields[0][name]",
                  "fields[0][placeholder]",
                  "fields[0][require]",
                  "fields[0][options]",
                  "fields[0][position]",
                  "fields[0][identifier]"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New form"
                  },
                  "type": {
                    "type": "string",
                    "example": "registration"
                  },
                  "description": {
                    "type": "string",
                    "example": "My new form"
                  },
                  "fields[0][type]": {
                    "type": "string",
                    "example": "input"
                  },
                  "fields[0][name]": {
                    "type": "string",
                    "example": "Input field"
                  },
                  "fields[0][placeholder]": {
                    "type": "string",
                    "example": "Type here"
                  },
                  "fields[0][require]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "fields[0][options]": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "",
                    "example": [
                      {}
                    ]
                  },
                  "fields[0][position]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "fields[0][identifier]": {
                    "type": "string",
                    "example": "field_1"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms/:form_id1",
        "description": "Softly delete Form.",
        "operationId": "/api/forms/:form_id1",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}/enable": {
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms/:form_id/enable",
        "description": "Activate selected Form.  \n\nReturns enabled Form data.  \n\nAvailable includes:  \n* fields\n* formSessions\n* InUseWidgetCounter\n* FormSessionCounter",
        "operationId": "/api/forms/:form_id/enable",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}/disable": {
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms/:form_id/disable",
        "description": "Deactivate selected Form.  \n\nReturns deactivated Form data.  \n\nAvailable includes:  \n* fields\n* formSessions\n* InUseWidgetCounter\n* FormSessionCounter",
        "operationId": "/api/forms/:form_id/disable",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}/widgets/{widget_id}/attach": {
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms/:form_id/widgets/:widget_id/attach",
        "description": "Attach Form to Widget.  \n\nReturns attached Form data.  \n\nAvailable includes:  \n* fields\n* formSessions\n* InUseWidgetCounter\n* FormSessionCounter",
        "operationId": "/api/forms/:form_id/widgets/:widget_id/attach",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}/widgets/{widget_id}/detach": {
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms/:form_id/widgets/:widget_id/detach",
        "description": "Detach Form from Widget.  \n\nReturns detached Form data.  \n\nAvailable includes:  \n* fields\n* formSessions\n* InUseWidgetCounter\n* FormSessionCounter",
        "operationId": "/api/forms/:form_id/widgets/:widget_id/detach",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widget_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}/sessions": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms/:form_id/sessions",
        "description": "Retrieve collection of Form Sessions.  \n\nSortable columns:\n* id  \n\nAvailable includes:\n* widget\n* widgetSession\n* widgetRegistrant\n* attendee",
        "operationId": "/api/forms/:form_id/sessions",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/forms/{form_id}/sessions/{session_id}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "/api/forms/:form_id/sessions/:session_id",
        "description": "Retrieve selected Form Session.  \n\nAvailable includes:\n* widget\n* widgetSession\n* widgetRegistrant\n* attendee",
        "operationId": "/api/forms/:form_id/sessions/:session_id",
        "parameters": [
          {
            "name": "form_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/phone-bridge/list": {
      "get": {
        "tags": [
          "Phone Bridge"
        ],
        "summary": "/api/reports/report/phone_bridge/list",
        "description": "WIP - Retrieve report about user.",
        "operationId": "/api/reports/report/phone_bridge/list",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/phone-bridge/state/{reportId}": {
      "get": {
        "tags": [
          "Phone Bridge"
        ],
        "summary": "/api/reports/report/phone_bridge/state/:reportId",
        "description": "WIP - Retrieve report about user.",
        "operationId": "/api/reports/report/phone_bridge/state/:reportId",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/phone-bridge/generate": {
      "post": {
        "tags": [
          "Phone Bridge"
        ],
        "summary": "/api/reports/report/phone-bridge/generate",
        "description": "WIP - Retrieve report about user.",
        "operationId": "/api/reports/report/phone-bridge/generate",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "date"
                ],
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "example": "2020-03"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/account-activity/list": {
      "get": {
        "tags": [
          "Account Activity"
        ],
        "summary": "/api/reports/report/account_activity/list",
        "description": "Retrieve list of reports about users activity.",
        "operationId": "/api/reports/report/account_activity/list",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/account-activity/state/{reportId}": {
      "get": {
        "tags": [
          "Account Activity"
        ],
        "summary": "/api/reports/report/account_activity/state/:reportId",
        "description": "Retrieve state of account activity report with giver :reportId or, if none given, returns information about one being in progress.",
        "operationId": "/api/reports/report/account_activity/state/:reportId",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/account-activity/generate": {
      "post": {
        "tags": [
          "Account Activity"
        ],
        "summary": "/api/reports/report/account_activity/generate",
        "description": "Call to generate account activity report. Returns data about record in progress.",
        "operationId": "/api/reports/report/account_activity/generate",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "multipart/form-data; boundary=<calculated when request is sent>"
              ],
              "type": "string",
              "example": "multipart/form-data; boundary=<calculated when request is sent>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "date"
                ],
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "description": "Required, date in format \"Y-m\"",
                    "example": "2021-03"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/participant-attendance/list": {
      "get": {
        "tags": [
          "Participant Attendance"
        ],
        "summary": "/api/reports/report/participant_attendance/list",
        "description": "Retrieve list of reports about participants attendance.",
        "operationId": "/api/reports/report/participant_attendance/list",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/participant-attendance/state/{reportId}": {
      "get": {
        "tags": [
          "Participant Attendance"
        ],
        "summary": "/api/reports/report/participant_attendance/state/:reportId",
        "description": "Retrieve state of participant attendance report with giver :reportId or, if none given, returns information about one being in progress.",
        "operationId": "/api/reports/report/participant_attendance/state/:reportId",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/participant-attendance/generate": {
      "post": {
        "tags": [
          "Participant Attendance"
        ],
        "summary": "/api/reports/report/participant_attendance/generate",
        "description": "Call to generate participant attendance report. Returns data about record in progress.",
        "operationId": "/api/reports/report/participant_attendance/generate",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "multipart/form-data; boundary=<calculated when request is sent>"
              ],
              "type": "string",
              "example": "multipart/form-data; boundary=<calculated when request is sent>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "widget_ids[]",
                  "date_start",
                  "date_end",
                  "email",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "widget_ids[]": {
                    "type": "integer",
                    "description": "Required, min 1, array of widget ids",
                    "format": "int32",
                    "example": 1
                  },
                  "date_start": {
                    "type": "string",
                    "description": "Required, date in format \"Y-m-d\"",
                    "example": "2021-02-20"
                  },
                  "date_end": {
                    "type": "string",
                    "description": "Required, newer than start_date, date in format \"Y-m-d\"",
                    "example": "2021-03-27"
                  },
                  "email": {
                    "type": "string",
                    "description": "Optional, email formatted string",
                    "example": "test@rtclab.com"
                  },
                  "name": {
                    "type": "string",
                    "description": "Optional, string containing name or surname",
                    "example": "Jake"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/event/list": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "/api/reports/report/event/list",
        "description": "Retrieve list of event reports.",
        "operationId": "/api/reports/report/event/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/event/state/{reportId}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "/api/reports/report/event/state/:reportId",
        "description": "Retrieve state of event report with given :reportId or, if none provided, returns information about one being in progress.",
        "operationId": "/api/reports/report/event/state/:reportId",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/event/generate": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "/api/reports/report/event/generate",
        "description": "Call to generate event report. Returns data about record in progress.",
        "operationId": "/api/reports/report/event/generate",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "multipart/form-data; boundary=<calculated when request is sent>"
              ],
              "type": "string",
              "example": "multipart/form-data; boundary=<calculated when request is sent>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "widget_id"
                ],
                "type": "object",
                "properties": {
                  "widget_id": {
                    "type": "integer",
                    "description": "Required, integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/session-summary/list/{sessionId}": {
      "get": {
        "tags": [
          "Session Summary"
        ],
        "summary": "/api/reports/report/session-summary/list/:sessionId",
        "description": "Retrieve list of session summary reports.",
        "operationId": "/api/reports/report/session-summary/list/:sessionId",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Optional, integer >= 0",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Required, integer > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/session-summary/state/{reportId}": {
      "get": {
        "tags": [
          "Session Summary"
        ],
        "summary": "/api/reports/report/session-summary/state/:reportId",
        "description": "Retrieve state of session summary report with given :reportId or, if none provided, returns information about one being in progress.",
        "operationId": "/api/reports/report/session-summary/state/:reportId",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 193
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/session-summary/generate": {
      "post": {
        "tags": [
          "Session Summary"
        ],
        "summary": "/api/reports/report/session-summary/generate",
        "description": "Call to generate session summary report. Returns data about record in progress.",
        "operationId": "/api/reports/report/session-summary/generate",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "multipart/form-data; boundary=<calculated when request is sent>"
              ],
              "type": "string",
              "example": "multipart/form-data; boundary=<calculated when request is sent>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "session_id",
                  "format"
                ],
                "type": "object",
                "properties": {
                  "session_id": {
                    "type": "integer",
                    "description": "Required, integer",
                    "format": "int32",
                    "example": 21805484
                  },
                  "format": {
                    "type": "string",
                    "description": "Required, file format like xls or pdf",
                    "example": "xls"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/custom-session/list/{sessionId}": {
      "get": {
        "tags": [
          "Custom Session"
        ],
        "summary": "/api/reports/report/custom-session/list/:sessionId",
        "description": "Retrieve list of custom session reports.",
        "operationId": "/api/reports/report/custom-session/list/:sessionId",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Optional, integer >= 0",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Required, integer > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/custom-session/state/{reportId}": {
      "get": {
        "tags": [
          "Custom Session"
        ],
        "summary": "/api/reports/report/custom-session/state/:reportId",
        "description": "Retrieve state of custom session report with given :reportId or, if none provided, returns information about one being in progress.",
        "operationId": "/api/reports/report/custom-session/state/:reportId",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/custom-session/generate": {
      "post": {
        "tags": [
          "Custom Session"
        ],
        "summary": "/api/reports/report/custom-session/generate",
        "description": "Call to generate custom session report. Returns data about record in progress.",
        "operationId": "/api/reports/report/custom-session/generate",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "multipart/form-data; boundary=<calculated when request is sent>"
              ],
              "type": "string",
              "example": "multipart/form-data; boundary=<calculated when request is sent>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "session_id",
                  "format"
                ],
                "type": "object",
                "properties": {
                  "session_id": {
                    "type": "integer",
                    "description": "Required, integer",
                    "format": "int32",
                    "example": 21805484
                  },
                  "format": {
                    "type": "string",
                    "description": "Required, file format like xls or pdf",
                    "example": "xls"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/extended-session/list/{sessionId}": {
      "get": {
        "tags": [
          "Extended Session"
        ],
        "summary": "/api/reports/report/extended-session/list/:sessionId",
        "description": "Retrieve list of extended session reports.",
        "operationId": "/api/reports/report/extended-session/list/:sessionId",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Optional, integer >= 0",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Required, integer > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/extended-session/state/{reportId}": {
      "get": {
        "tags": [
          "Extended Session"
        ],
        "summary": "/api/reports/report/extended-session/state/:reportId",
        "description": "Retrieve state of extended session report with given :reportId or, if none provided, returns information about one being in progress.",
        "operationId": "/api/reports/report/extended-session/state/:reportId",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/extended-session/generate": {
      "post": {
        "tags": [
          "Extended Session"
        ],
        "summary": "/api/reports/report/extended-session/generate",
        "description": "Call to generate extended session report. Returns data about record in progress.",
        "operationId": "/api/reports/report/extended-session/generate",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "multipart/form-data; boundary=<calculated when request is sent>"
              ],
              "type": "string",
              "example": "multipart/form-data; boundary=<calculated when request is sent>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "session_id",
                  "format"
                ],
                "type": "object",
                "properties": {
                  "session_id": {
                    "type": "integer",
                    "description": "Required, integer",
                    "format": "int32",
                    "example": 21805484
                  },
                  "format": {
                    "type": "string",
                    "description": "Required, file format like xls or pdf",
                    "example": "xls"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/stats_usage_widget_session/widget/{widgetId}": {
      "get": {
        "tags": [
          "Usage"
        ],
        "summary": "/api/stats_usage_widget_session/widget/:widgetId",
        "description": "Returns statistics of widget sessions for given :widgetId.\n\nSupports query params: sub_user_id, sort, order, page, limit.",
        "operationId": "/api/stats_usage_widget_session/widget/:widgetId",
        "parameters": [
          {
            "name": "widgetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1512572
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/rating/list/{widgetId}/{widgetSessionId}": {
      "get": {
        "tags": [
          "Rating"
        ],
        "summary": "/api/reports/report/rating/list/:widgetId/:widgetSessionId",
        "description": "Retrieve list of user ratings for :widgetId and (optional) :widgetSessionId.",
        "operationId": "/api/reports/report/rating/list/:widgetId/:widgetSessionId",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Optional, Integer, 0 - 1000",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional, Integer, 1-1000",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 15
            }
          },
          {
            "name": "widgetId",
            "in": "path",
            "description": "Required, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widgetSessionId",
            "in": "path",
            "description": "Optional, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/rating/download/{widgetId}/{widgetSessionId}": {
      "get": {
        "tags": [
          "Rating"
        ],
        "summary": "/api/reports/report/rating/download/:widgetId/:widgetSessionId",
        "description": "Retrieve CSV file of ratings for :widgetId and (optional) :widgetSessionId.",
        "operationId": "/api/reports/report/rating/download/:widgetId/:widgetSessionId",
        "parameters": [
          {
            "name": "widgetId",
            "in": "path",
            "description": "Required, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widgetSessionId",
            "in": "path",
            "description": "Optional, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/rating/stats/{widgetId}/{widgetSessionId}": {
      "get": {
        "tags": [
          "Rating"
        ],
        "summary": "/api/reports/report/rating/stats/:widgetId/:widgetSessionId",
        "description": "Retrieve summary statistics of ratings for :widgetId and (optional) :widgetSessionId.",
        "operationId": "/api/reports/report/rating/stats/:widgetId/:widgetSessionId",
        "parameters": [
          {
            "name": "widgetId",
            "in": "path",
            "description": "Required, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widgetSessionId",
            "in": "path",
            "description": "Optional, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/feedback/list/{widgetId}/{widgetSessionId}": {
      "get": {
        "tags": [
          "Feedback"
        ],
        "summary": "/api/reports/report/feedback/list/:widgetId/:widgetSessionId",
        "description": "Retrieve list of feedback messages for :widgetId and (optional) :widgetSessionId.",
        "operationId": "/api/reports/report/feedback/list/:widgetId/:widgetSessionId",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Optional, Integer, 0 - 1000",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional, Integer, 1-1000",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 15
            }
          },
          {
            "name": "widgetId",
            "in": "path",
            "description": "Required, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widgetSessionId",
            "in": "path",
            "description": "Optional, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/report/feedback/download/{widgetId}/{widgetSessionId}": {
      "get": {
        "tags": [
          "Feedback"
        ],
        "summary": "/api/reports/report/feedback/download/:widgetId/:widgetSessionId",
        "description": "Retrieve CSV file of feedbacks for :widgetId and (optional) :widgetSessionId.",
        "operationId": "/api/reports/report/feedback/download/:widgetId/:widgetSessionId",
        "parameters": [
          {
            "name": "widgetId",
            "in": "path",
            "description": "Required, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "widgetSessionId",
            "in": "path",
            "description": "Optional, Integer, > 0",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "/api/reports",
        "description": "Generate report for Widget Session.",
        "operationId": "/api/reports",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "session_id",
                  "format",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "session_id": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string",
                    "description": "pdf, xls,"
                  },
                  "type": {
                    "type": "string",
                    "description": "session"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/{widget_session_id}/{type}/{format}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "/api/reports/:widget_session_id/:type/:format",
        "description": "Retrieve Widget Session Report in selected format.",
        "operationId": "/api/reports/:widget_session_id/:type/:format",
        "parameters": [
          {
            "name": "widget_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "session"
            }
          },
          {
            "name": "format",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "pdf"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/sessions/{widget_session_id}/attendees": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "/api/reports/sessions/:widget_session_id/attendees",
        "description": "Retrieve Widget Session report about attendees.",
        "operationId": "/api/reports/sessions/:widget_session_id/attendees",
        "parameters": [
          {
            "name": "widget_session_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/reports/attendees/{attendee_id}/sessions": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "/api/reports/attendees/:attendee_id/sessions",
        "description": "WIP - Retrieve report about Ateendee Sessions.",
        "operationId": "/api/reports/attendees/:attendee_id/sessions",
        "parameters": [
          {
            "name": "attendee_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/appearances": {
      "get": {
        "tags": [
          "Appearances"
        ],
        "summary": "/api/appearances",
        "description": "Retrieve collection of available Appearances.",
        "operationId": "/api/appearances",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/appearances/templates": {
      "get": {
        "tags": [
          "Appearances"
        ],
        "summary": "/api/appearances/templates",
        "description": "Retrieve collection of available Appearance Templates.  \n\nAvailable includes:\n* appearance\n* appearance_template_settings",
        "operationId": "/api/appearances/templates",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Appearances"
        ],
        "summary": "/api/appearances/templates",
        "description": "Create Appearance Template.  \n\nReturns newly created Appearance Template.  \n\nAvailable includes:\n* appearance\n* appearance_template_settings",
        "operationId": "Post/api/appearances/templates",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "appearance_template[name]",
                  "appearance_template[default]",
                  "appearance_template[enterprise_id]",
                  "appearance_template[user_id]",
                  "appearance_template[widget_id]",
                  "appearance_template[appearance][3]"
                ],
                "type": "object",
                "properties": {
                  "appearance_template[name]": {
                    "type": "string",
                    "example": "asdasdasdas"
                  },
                  "appearance_template[default]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "appearance_template[enterprise_id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "appearance_template[user_id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "appearance_template[widget_id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "appearance_template[appearance][3]": {
                    "type": "string",
                    "example": "#ffcc00"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/appearances/templates/{appearance_template_id}": {
      "get": {
        "tags": [
          "Appearances"
        ],
        "summary": "/api/appearances/templates/:appearance_template_id",
        "description": "Retrieve selected Appearance Template.",
        "operationId": "/api/appearances/templates/:appearance_template_id",
        "parameters": [
          {
            "name": "appearance_template_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/appearances/templates/{id}": {
      "post": {
        "tags": [
          "Appearances"
        ],
        "summary": "/api/appearances/templates/:id",
        "description": "Update selected Appearance Template.  \n\nReturns updated Appearance Template data.  \n\nAvailable includes:\n* appearance\n* appearance_template_settings",
        "operationId": "/api/appearances/templates/:id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "appearance_template[name]",
                  "appearance_template[default]",
                  "appearance_template[enterprise_id]",
                  "appearance_template[user_id]",
                  "appearance_template[widget_id]",
                  "appearance_template[appearance][3]",
                  "appearance_template[appearance][5]"
                ],
                "type": "object",
                "properties": {
                  "appearance_template[name]": {
                    "type": "string",
                    "example": "sample1"
                  },
                  "appearance_template[default]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "appearance_template[enterprise_id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "appearance_template[user_id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                  },
                  "appearance_template[widget_id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "appearance_template[appearance][3]": {
                    "type": "string",
                    "example": "#ff0000"
                  },
                  "appearance_template[appearance][5]": {
                    "type": "string",
                    "example": "#ffcc00"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/appearances/templates/{id}/delete": {
      "delete": {
        "tags": [
          "Appearances"
        ],
        "summary": "/api/appearances/templates/:id/delete",
        "description": "Delete selected Appearance Template.",
        "operationId": "/api/appearances/templates/:id/delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/integrations/brightcove": {
      "get": {
        "tags": [
          "Brightcove"
        ],
        "summary": "/api/integrations/brightcove",
        "description": "Get Brightcove integration data.",
        "operationId": "/api/integrations/brightcove",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Brightcove"
        ],
        "summary": "/api/integrations/brightcove",
        "description": "Create Brightcove integration.",
        "operationId": "Post/api/integrations/brightcove",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "accountId",
                  "clientId",
                  "secretId"
                ],
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "secretId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "/api/me",
        "description": "Retrieve currently authenticated user data.  \n\nAvailable includes:\n* profile\n* Package\n* SubUserCount\n* Aggregate",
        "operationId": "/api/me",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/geo/{ip}": {
      "get": {
        "tags": [
          "Geo"
        ],
        "summary": "/api/geo/:ip",
        "description": "Get geolocation data from IP.",
        "operationId": "/api/geo/:ip",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "description": "IP to get location data for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "127.0.0.1"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/enterprise": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "summary": "/api/enterprise",
        "description": "Get authenticated user Enterprise data.  \n\nAvailable includes:\n* EnterpriseDomain",
        "operationId": "/api/enterprise",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/limit/addons/{user_id}": {
      "get": {
        "tags": [
          "Addon"
        ],
        "summary": "/api/limit/addons/:user_id",
        "description": "Available addons for enterprise",
        "operationId": "/api/limit/addons/:user_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 305
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Addon"
        ],
        "summary": "/api/limit/addons/:user_id",
        "description": "Add addon for user",
        "operationId": "Post/api/limit/addons/:user_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 305
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "addon_id[]",
                  "value[]"
                ],
                "type": "object",
                "properties": {
                  "addon_id[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "value[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Addon"
        ],
        "summary": "/api/limit/addons/:user_id1",
        "description": "Update addon for user",
        "operationId": "/api/limit/addons/:user_id1",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 201
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "addon_id[]",
                  "value[]"
                ],
                "type": "object",
                "properties": {
                  "addon_id[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "value[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 10
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/limit/addons": {
      "get": {
        "tags": [
          "Addon"
        ],
        "summary": "/api/limit/addons",
        "description": "Get all addons",
        "operationId": "/api/limit/addons",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/limits": {
      "get": {
        "tags": [
          "Limits"
        ],
        "summary": "/api/limits",
        "description": "Get collection of currently authenticated user Limits.",
        "operationId": "/api/limits",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/limits/{user_id}": {
      "get": {
        "tags": [
          "Limits"
        ],
        "summary": "/api/limits/:user_id",
        "description": "Retrieve collection of selected user Limits.",
        "operationId": "/api/limits/:user_id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/notifications/inbox": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "/api/notifications/inbox",
        "description": "Retrieve paginated collection of Inbox Notifications.  \n\nSortable columns:\n* id\n* read\n* created_at\n* updated_at\n* deleted_at",
        "operationId": "/api/notifications/inbox",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/notifications/unread": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "/api/notifications/unread",
        "description": "Get unread Inbox Notifications count.",
        "operationId": "/api/notifications/unread",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "close"
                    },
                    "example": "close"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "27"
                    },
                    "example": "27"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Wed, 03 Jan 2018 12:58:08 GMT"
                    },
                    "example": "Wed, 03 Jan 2018 12:58:08 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                    },
                    "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.7"
                    },
                    "example": "PHP/7.1.7"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "239"
                    },
                    "example": "239"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1514984348"
                    },
                    "example": "1514984348"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getunreadinboxnotificationscount"
                },
                "example": {
                  "data": {
                    "unread_count": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/notifications/outbox": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "/api/notifications/outbox",
        "description": "Retrieve paginated collection of Outbox Notifications.  \n\nSortable columns:\n* id\n* created_at\n* updated_at",
        "operationId": "/api/notifications/outbox",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/notifications": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "/api/notifications",
        "description": "Send new Notification.",
        "operationId": "/api/notifications",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "subject",
                  "body",
                  "users[0]",
                  "users[1]"
                ],
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "example": "Subject"
                  },
                  "body": {
                    "type": "string",
                    "example": "Hi all"
                  },
                  "users[0]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "users[1]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/notifications/{notification_id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "/api/notifications/:notification_id",
        "description": "Mark selected Notification as read.",
        "operationId": "/api/notifications/:notification_id",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/notifications/inbox/{notification_id}": {
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "/api/notifications/inbox/:notification_id",
        "description": "Delete selected Inbox Notification.",
        "operationId": "/api/notifications/inbox/:notification_id",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/notifications/outbox/{notification_id}": {
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "/api/notifications/outbox/:notification_id",
        "description": "Delete selected Outbox Notification.",
        "operationId": "/api/notifications/outbox/:notification_id",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/decisions": {
      "get": {
        "tags": [
          "Decisions"
        ],
        "summary": "/api/decisions",
        "description": "Retrieve collection of Decisions.  \n\nSortable columns:\n* id\n* title  \n\nAvailable includes: \n* DecisionGroup",
        "operationId": "/api/decisions",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Decisions"
        ],
        "summary": "/api/decisions",
        "description": "Create new Decision.  \n\nReturns newly created Decision data.  \n\nAvailable includes: \n* DecisionGroup",
        "operationId": "Post/api/decisions",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "title",
                  "participant_groups[0][id]",
                  "participant_groups[0][weight]"
                ],
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Decision title "
                  },
                  "participant_groups[0][id]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "participant_groups[0][weight]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 40
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/decisions/{decision_id}": {
      "get": {
        "tags": [
          "Decisions"
        ],
        "summary": "/api/decisions/:decision_id",
        "description": "Retrieve selected Decision data.  \n\nAvailable includes: \n* DecisionGroup",
        "operationId": "/api/decisions/:decision_id",
        "parameters": [
          {
            "name": "decision_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Decisions"
        ],
        "summary": "/api/decisions/:decision_id",
        "description": "Update selected Decision.  \n\nReturns updated Decision data.  \n\nAvailable includes: \n* DecisionGroup",
        "operationId": "Put/api/decisions/:decision_id",
        "parameters": [
          {
            "name": "decision_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "title",
                  "participant_groups[0].id",
                  "participant_groups[1].weight"
                ],
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "New decision title"
                  },
                  "participant_groups[0].id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "participant_groups[1].weight": {
                    "type": "integer",
                    "format": "int32",
                    "example": 20
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Decisions"
        ],
        "summary": "/api/decisions/:decision_id1",
        "description": "Softly delete selected Decision.",
        "operationId": "/api/decisions/:decision_id1",
        "parameters": [
          {
            "name": "decision_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/decisions/{decision_id}/votes": {
      "get": {
        "tags": [
          "Decisions"
        ],
        "summary": "/api/decisions/:decision_id/votes",
        "description": "Retrieve collection of Decision Votes.  \n\nSortable columns:\n* id\n* participant_group_id\n* widget_id\n* widget_session_id\n* attendee_id",
        "operationId": "/api/decisions/:decision_id/votes",
        "parameters": [
          {
            "name": "decision_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Decisions"
        ],
        "summary": "/api/decisions/:decision_id/votes",
        "description": "Add Decision Vote.  \n\nReturns newly created Decision Vote data.",
        "operationId": "Post/api/decisions/:decision_id/votes",
        "parameters": [
          {
            "name": "decision_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "vote",
                  "participant_group_id",
                  "attendee_id",
                  "attendee_token",
                  "widget_id"
                ],
                "type": "object",
                "properties": {
                  "vote": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "participant_group_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "attendee_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "attendee_token": {
                    "type": "string",
                    "example": "nd-rwgtto6pm-v2pspsiimdyd8ai-7domm0"
                  },
                  "widget_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/decisions/{decision_id}/summary": {
      "get": {
        "tags": [
          "Decisions"
        ],
        "summary": "/api/decisions/:decision_id/summary",
        "description": "Confirm presign file",
        "operationId": "/api/decisions/:decision_id/summary",
        "parameters": [
          {
            "name": "decision_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "close"
                    },
                    "example": "close"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "300"
                    },
                    "example": "300"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Wed, 03 Jan 2018 13:13:12 GMT"
                    },
                    "example": "Wed, 03 Jan 2018 13:13:12 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                    },
                    "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.7"
                    },
                    "example": "PHP/7.1.7"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "239"
                    },
                    "example": "239"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1514985253"
                    },
                    "example": "1514985253"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getdecisionvotessummary"
                },
                "example": {
                  "data": {
                    "groups": [
                      {
                        "name": "group1",
                        "weight": 20,
                        "yes": 20,
                        "no": 0,
                        "abstain": 20,
                        "total_votes": 2
                      },
                      {
                        "name": "group2",
                        "weight": 50,
                        "yes": 50,
                        "no": 0,
                        "abstain": 50,
                        "total_votes": 2
                      },
                      {
                        "name": "group3",
                        "weight": 30,
                        "yes": 0,
                        "no": 30,
                        "abstain": 0,
                        "total_votes": 1
                      }
                    ],
                    "total": {
                      "yes": 70,
                      "no": 30,
                      "abstain": 70,
                      "total_votes": 5
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/decisions/{decision_id}/duplicate": {
      "post": {
        "tags": [
          "Decisions"
        ],
        "summary": "/api/decisions/:decision_id/duplicate",
        "description": "Duplicate selected Decision.  \n\nReturns newly created Decision data.",
        "operationId": "/api/decisions/:decision_id/duplicate",
        "parameters": [
          {
            "name": "decision_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/polls-folders": {
      "get": {
        "tags": [
          "Poll Folders"
        ],
        "summary": "/api/polls-folders",
        "description": "Retrieve collection of Polls Folders.  \n\nSortable columns:  \n* id\n* name\n* parent_folder_id\n* created_at\n* updated_at\n* deleted_at  \n\nAvailable includes:  \n* polls\n* parentFolder\n\nHint:\nTo get folders in a root (that don't have parent):\nadd ?parent_folder_id=root to the request",
        "operationId": "/api/polls-folders",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Poll Folders"
        ],
        "summary": "/api/polls-folders",
        "description": "Create new Poll Folder.  \n\nReturns instance of newly created poll folder.  \n\nAvailable includes:  \n* polls\n* parentFolder",
        "operationId": "Post/api/polls-folders",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "parent_folder_id"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My New Poll Folder"
                  },
                  "parent_folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/polls-folders/{poll_folder_id}": {
      "get": {
        "tags": [
          "Poll Folders"
        ],
        "summary": "/api/polls-folders/:poll_folder_id",
        "description": "Retrieve selected Poll Folder data.  \n\nAvailable includes:  \n* polls\n* parentFolder",
        "operationId": "/api/polls-folders/:poll_folder_id",
        "parameters": [
          {
            "name": "poll_folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Poll Folders"
        ],
        "summary": "/api/polls-folders/:poll_folder_id",
        "description": "Update selected Poll Folder.  \n\nReturns updated Poll Folder data.  \n\nAvailable includes:  \n* polls\n* parentFolder",
        "operationId": "Put/api/polls-folders/:poll_folder_id",
        "parameters": [
          {
            "name": "poll_folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "parent_folder_id"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Poll Folder new name"
                  },
                  "parent_folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Poll Folders"
        ],
        "summary": "/api/polls-folders/:poll_folder_id1",
        "description": "Softly delete selected poll folder.",
        "operationId": "/api/polls-folders/:poll_folder_id1",
        "parameters": [
          {
            "name": "poll_folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "REST WebHooks"
        ],
        "summary": "/api/webhooks",
        "description": "Retrieve collection of Webhooks.  \n\nSortable columns:  \n* event\n* url\n* created_at\n* updated_at",
        "operationId": "/api/webhooks",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "REST WebHooks"
        ],
        "summary": "/api/webhooks",
        "description": "Create new Webhook.  \n\nReturns instance of newly created webhook.",
        "operationId": "Post/api/webhooks",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "url",
                  "method",
                  "webhook_event_id"
                ],
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Your webhook url address.",
                    "example": "https://example.com/12333"
                  },
                  "method": {
                    "type": "string",
                    "description": "Must be in: POST, GET, PUT",
                    "example": "PUT"
                  },
                  "webhook_event_id": {
                    "type": "integer",
                    "description": "From webhooks/events",
                    "format": "int32",
                    "example": 6
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/webhooks/events": {
      "get": {
        "tags": [
          "REST WebHooks"
        ],
        "summary": "/api/webhooks/events",
        "description": "Retrieve collection of Webhooks.  \n\nSortable columns:  \n* event\n* url\n* created_at\n* updated_at",
        "operationId": "/api/webhooks/events",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "REST WebHooks"
        ],
        "summary": "/api/webhooks/:webhook_id",
        "description": "Retrieve selected Webhook data.",
        "operationId": "/api/webhooks/:webhook_id",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "REST WebHooks"
        ],
        "summary": "/api/webhooks/:webhook_id",
        "description": "Update selected Webhook.  \n\nReturns updated Webhook data.",
        "operationId": "Put/api/webhooks/:webhook_id",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 6
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "url",
                  "method",
                  "webhook_event_id"
                ],
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "example": "https://new.example.com/987"
                  },
                  "method": {
                    "type": "string",
                    "description": "Must be in: POST, GET, PUT",
                    "example": "GET"
                  },
                  "webhook_event_id": {
                    "type": "integer",
                    "description": "From webhooks/events",
                    "format": "int32",
                    "example": 6
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "REST WebHooks"
        ],
        "summary": "/api/webhooks/:webhook_id",
        "description": "Delete selected webhook.",
        "operationId": "Delete/api/webhooks/:webhook_id",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/settings/storage": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "/api/settings/storage",
        "description": "Retrieve collection of User Storage Providers.  \n\nSortable columns:\n* id",
        "operationId": "/api/settings/storage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "/api/settings/storage",
        "description": "Add new Storage Provider.  \n\nReturns newly created Storage Provider.",
        "operationId": "Post/api/settings/storage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "provider",
                  "access_key_id",
                  "secret_access_key",
                  "region",
                  "bucket",
                  "scopes"
                ],
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "example": "aws"
                  },
                  "access_key_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 123
                  },
                  "secret_access_key": {
                    "type": "integer",
                    "format": "int32",
                    "example": 321
                  },
                  "region": {
                    "type": "string",
                    "example": "ue"
                  },
                  "bucket": {
                    "type": "string",
                    "example": "bucket-name"
                  },
                  "scopes": {
                    "type": "string",
                    "example": "recordings"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/settings/storage/{storage_provider_id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "/api/settings/storage/:storage_provider_id",
        "description": "Retrieve selected Storage Provider data.",
        "operationId": "/api/settings/storage/:storage_provider_id",
        "parameters": [
          {
            "name": "storage_provider_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "/api/settings/storage/:storage_provider_id",
        "description": "Update selected Storage Provider.  \n\nReturns updated Storage Provider data.",
        "operationId": "Put/api/settings/storage/:storage_provider_id",
        "parameters": [
          {
            "name": "storage_provider_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "provider",
                  "access_key_id",
                  "secret_access_key",
                  "region",
                  "bucket",
                  "scopes"
                ],
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "example": "aws"
                  },
                  "access_key_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 123
                  },
                  "secret_access_key": {
                    "type": "integer",
                    "format": "int32",
                    "example": 321
                  },
                  "region": {
                    "type": "string",
                    "example": "ue"
                  },
                  "bucket": {
                    "type": "string",
                    "example": "bucket-name"
                  },
                  "scopes": {
                    "type": "string",
                    "example": "recordings"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "/api/settings/storage/:storage_provider_id1",
        "description": "Delete selected Storage Provider.",
        "operationId": "/api/settings/storage/:storage_provider_id1",
        "parameters": [
          {
            "name": "storage_provider_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/industries": {
      "get": {
        "tags": [
          "Industries"
        ],
        "summary": "/api/industries",
        "description": "Retrieve a collection of Users / sub-accounts from your account. Resource is accessible by an authenticated user. Please contact support in order to turn on sub-account ability within your account.\n\nPlease remember that collections are always paginated and you can use a set of default parameters sent along with request to manipulate the results in the response. Please refer to the \"Common Request Parameters on Collections\" section of this document for more details.\n\n>If `?include=profile` will be added to your request you will get additional user profile resource with your response.\n>Example: `https://api.archiebot.com/api/users?include=profile`\n\nHere is a list of sortable columns:\n* id (always sortable on all resources)  \n* email  \n* created_ip  \n* created_at  \n* updated_at  \n* data_location  \n* deleted_at (option available on Enterprise accounts only)  \n\n**Default sortable column:** id, sort order asc (newest first)  \n\n**Default number of resources per page:** 10",
        "operationId": "/api/industries",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "no-cache"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "close"
                    },
                    "example": "close"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "5618"
                    },
                    "example": "5618"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Thu, 21 Dec 2017 11:13:45 GMT"
                    },
                    "example": "Thu, 21 Dec 2017 11:13:45 GMT"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                    },
                    "example": "Apache/2.4.28 (Unix) LibreSSL/2.2.7 PHP/7.1.7"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Authorization"
                    },
                    "example": "Authorization"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PHP/7.1.7"
                    },
                    "example": "PHP/7.1.7"
                  }
                }
              },
              "X-RateLimit-Limit": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "240"
                    },
                    "example": "240"
                  }
                }
              },
              "X-RateLimit-Remaining": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "239"
                    },
                    "example": "239"
                  }
                }
              },
              "X-RateLimit-Reset": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1513854886"
                    },
                    "example": "1513854886"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Industries"
                },
                "example": {
                  "data": [
                    {
                      "id": 2,
                      "parent_id": 1,
                      "package_id": null,
                      "enterprise_id": 3,
                      "enterprise_identifier": "acme",
                      "email": "user@example.com",
                      "status": "active",
                      "phone_number": null,
                      "phone_country_code": null,
                      "created_ip": null,
                      "confirmed_at": 1509619198,
                      "created_at": 1509619198,
                      "updated_at": 1509619198,
                      "data_location": "s-us-es-a"
                    },
                    {
                      "id": 3,
                      "parent_id": 1,
                      "package_id": null,
                      "enterprise_id": 3,
                      "enterprise_identifier": "acme",
                      "email": "user2@example.com",
                      "status": "active",
                      "phone_number": null,
                      "phone_country_code": null,
                      "created_ip": null,
                      "confirmed_at": 1509619198,
                      "created_at": 1509619198,
                      "updated_at": 1509619198,
                      "data_location": "s-us-es-a"
                    }
                  ],
                  "meta": {
                    "pagination": {
                      "total": 2,
                      "count": 2,
                      "per_page": 2,
                      "current_page": 1,
                      "total_pages": 1,
                      "links": {
                        "next": "https://api.archiebot.com/api/users?page=2"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ],
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/users/100": {
      "delete": {
        "tags": [
          "Delete sub-account"
        ],
        "summary": "/api/users/:id",
        "operationId": "/api/users/:id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Edit sub-account"
        ],
        "summary": "/api/users/:id",
        "operationId": "Put/api/users/:id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "package_id",
                  "email",
                  "password",
                  "status",
                  "country_code_iso2",
                  "country_state_iso2",
                  "confirmed",
                  "profile.date_format",
                  "profile.time_format"
                ],
                "type": "object",
                "properties": {
                  "package_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "email": {
                    "type": "string",
                    "example": "test@test123.ab"
                  },
                  "password": {
                    "type": "string",
                    "example": "newtestpassword"
                  },
                  "status": {
                    "type": "string"
                  },
                  "country_code_iso2": {
                    "type": "string",
                    "example": "PL"
                  },
                  "country_state_iso2": {
                    "type": "string"
                  },
                  "confirmed": {
                    "type": "string"
                  },
                  "profile.date_format": {
                    "type": "string"
                  },
                  "profile.time_format": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/widgets/238": {
      "delete": {
        "tags": [
          "Delete widget"
        ],
        "summary": "/api/widgets/:id",
        "operationId": "/api/widgets/:id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/53": {
      "get": {
        "tags": [
          "Upload file"
        ],
        "summary": "/api/storage/:id",
        "operationId": "/api/storage/:id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/uggvf8rzey9fem3vmayf4t4f6x0cbggks85juf40kbxnbmyyozuzux5hyuyghxww.uknw": {
      "put": {
        "tags": [
          "Upload file [presigned]"
        ],
        "summary": ":presing_url",
        "operationId": ":presing_url",
        "parameters": [
          {
            "name": "x-amz-acl",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "public-read"
            }
          },
          {
            "name": "X-Amz-Content-Sha256",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "UNSIGNED-PAYLOAD"
            }
          },
          {
            "name": "X-Amz-Algorithm",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "AWS4-HMAC-SHA256"
            }
          },
          {
            "name": "X-Amz-Credential",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "AKIAJG7MXAUEVAACB3MA/20171108/us-east-1/s3/aws4_request"
            }
          },
          {
            "name": "X-Amz-Date",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "20171108T125032Z"
            }
          },
          {
            "name": "X-Amz-SignedHeaders",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "host"
            }
          },
          {
            "name": "X-Amz-Expires",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 60
            }
          },
          {
            "name": "X-Amz-Signature",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "bab202723f81c8d7b19381ea6774e666d52759a3308812f47aff66958b559be3"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://site-archiebot-devel.s3.amazonaws.com/storage/a_28c8edde3d61a0411511d3b1866f0636",
            "variables": {}
          }
        ]
      }
    },
    "/storage/99350": {
      "put": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/:id",
        "operationId": "Put/api/storage/:id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "new-name"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/search": {
      "get": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/search",
        "operationId": "/api/storage/search",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "test-file"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/99577": {
      "get": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/:id",
        "operationId": "Get/api/storage/:id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/:id",
        "operationId": "Delete/api/storage/:id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/99578": {
      "get": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/:id?include=sharedSubFilesCount,StorageFolder",
        "operationId": "/api/storage/:id?include=sharedSubFilesCount,StorageFolder",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "sharedSubFilesCount,StorageFolder"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/99350/slides": {
      "get": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/:id/slides",
        "operationId": "/api/storage/:id/slides",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/99577/share": {
      "put": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/:id/share",
        "operationId": "/api/storage/:id/share",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 647
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/99577/unshare": {
      "put": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/:id/unshare",
        "operationId": "/api/storage/:id/unshare",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 647
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/token/vn5qmei9ohgmuvnfelq1xddr43nq9uic0hwmt6bpyjv4s3nqvlspsom1vmow8lj4": {
      "get": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/token/:token",
        "operationId": "Get/api/storage/token/:token",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/token/vn5qmei9ohgmuvnfelq1xddr43nq9uic0hwmt6bpyjv4s3nqvlspsom1vmow8lj4/slides": {
      "get": {
        "tags": [
          "Storage File"
        ],
        "summary": "/api/storage/token/:token/slides",
        "operationId": "Get/api/storage/token/:token/slides",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/folders/6966": {
      "put": {
        "tags": [
          "Storage Folder"
        ],
        "summary": "/api/storage/folders/:id",
        "operationId": "/api/storage/folders/:id",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "sharedSubFilesCount"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test-folder-ddd"
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Storage Folder"
        ],
        "summary": "/api/storage/folders/:id",
        "operationId": "Get/api/storage/folders/:id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Storage Folder"
        ],
        "summary": "/api/storage/folders/:id",
        "operationId": "Delete/api/storage/folders/:id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/folders/693": {
      "get": {
        "tags": [
          "Storage Folder"
        ],
        "summary": "/api/storage/folders/:id?include=sharedSubFilesCount,StorageFile,SubFolder",
        "operationId": "/api/storage/folders/:id?include=sharedSubFilesCount,StorageFile,SubFolder",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "sharedSubFilesCount,StorageFile,SubFolder"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/folders/693/share": {
      "put": {
        "tags": [
          "Storage Folder"
        ],
        "summary": "/api/storage/folders/:id/share",
        "operationId": "/api/storage/folders/:id/share",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 647
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/storage/folders/693/unshare": {
      "put": {
        "tags": [
          "Storage Folder"
        ],
        "summary": "/api/storage/folders/:id/unshare",
        "operationId": "/api/storage/folders/:id/unshare",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/vnd.archiebot.v1+json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "account_ids[]",
                  "recursive",
                  "permissions"
                ],
                "type": "object",
                "properties": {
                  "account_ids[]": {
                    "type": "integer",
                    "format": "int32",
                    "example": 647
                  },
                  "recursive": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "permissions": {
                    "type": "string",
                    "example": "rw"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/info/version": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "/api/info/version",
        "description": "Get current API version",
        "operationId": "/api/info/version",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    },
    "/info/codes": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "/api/info/codes",
        "description": "WIP: Application codes",
        "operationId": "/api/info/codes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "http://example.com/api",
            "variables": {}
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Retrieveuserwidget": {
        "title": "Retrieveuserwidget",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "example": {
          "data": {
            "id": 180,
            "owner_id": 10,
            "name": "p1ax1a",
            "start_date": 1513846990,
            "duration": 45,
            "timezone": "Europe/Warsaw",
            "strict_event": 1,
            "cover_url": "https://api.archiebot.com/_shared/img/placeholder.png",
            "agenda": "",
            "password": null,
            "password_pin": null,
            "custom_name": "p1ax1a",
            "token": "372-887-340",
            "presenter_pin": "6279942640",
            "allowed_domains": [],
            "roles": {
              "attendee": "261a2ff2eee084f238be1f2e6c72bf37",
              "presenter": "5724aaa46f316da0de2b28186dc7562e",
              "moderator": "aa5932713fbd61d8f8ca72e28e823b70",
              "host": "5e5442457be03277a3300a69b1af5ba9",
              "phone_attendee": "c5b6f51b1466e02f7e45c87c311dbe56",
              "phone_presenter": "63cde0424a00f75ef38acf8e5032e54e"
            },
            "active_session": false,
            "status": "active",
            "leads_form_id": null,
            "registration_form_id": null,
            "registration_enabled": false,
            "manual_confirm_registrants": false,
            "thank_you_email": false,
            "created_at": 1513843391,
            "updated_at": 1513843546,
            "hosted_at": {
              "attendee": "https://embed.archiebot.com/resource/widget/372-887-340",
              "presenter": "https://embed.archiebot.com/resource/widget/372-887-340/5724aaa46f316da0de2b28186dc7562e",
              "moderator": "https://embed.archiebot.com/resource/widget/372-887-340/aa5932713fbd61d8f8ca72e28e823b70",
              "host": "https://embed.archiebot.com/resource/widget/372-887-340/5e5442457be03277a3300a69b1af5ba9",
              "phone_attendee": "https://embed.archiebot.com/resource/widget/372-887-340/c5b6f51b1466e02f7e45c87c311dbe56",
              "phone_presenter": "https://embed.archiebot.com/resource/widget/372-887-340/63cde0424a00f75ef38acf8e5032e54e"
            },
            "is_hidden": false
          }
        }
      },
      "Data": {
        "title": "Data",
        "required": [
          "id",
          "owner_id",
          "name",
          "start_date",
          "duration",
          "timezone",
          "strict_event",
          "cover_url",
          "agenda",
          "password",
          "password_pin",
          "custom_name",
          "token",
          "presenter_pin",
          "allowed_domains",
          "roles",
          "active_session",
          "status",
          "leads_form_id",
          "registration_form_id",
          "registration_enabled",
          "manual_confirm_registrants",
          "thank_you_email",
          "created_at",
          "updated_at",
          "hosted_at",
          "is_hidden"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "start_date": {
            "type": "integer",
            "format": "int32"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "timezone": {
            "type": "string"
          },
          "strict_event": {
            "type": "integer",
            "format": "int32"
          },
          "cover_url": {
            "type": "string"
          },
          "agenda": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "password_pin": {
            "type": "string",
            "nullable": true
          },
          "custom_name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "presenter_pin": {
            "type": "string"
          },
          "allowed_domains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "roles": {
            "$ref": "#/components/schemas/Roles"
          },
          "active_session": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "leads_form_id": {
            "type": "string",
            "nullable": true
          },
          "registration_form_id": {
            "type": "string",
            "nullable": true
          },
          "registration_enabled": {
            "type": "boolean"
          },
          "manual_confirm_registrants": {
            "type": "boolean"
          },
          "thank_you_email": {
            "type": "boolean"
          },
          "created_at": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "integer",
            "format": "int32"
          },
          "hosted_at": {
            "$ref": "#/components/schemas/HostedAt"
          },
          "is_hidden": {
            "type": "boolean"
          }
        },
        "example": {
          "id": 180,
          "owner_id": 10,
          "name": "p1ax1a",
          "start_date": 1513846990,
          "duration": 45,
          "timezone": "Europe/Warsaw",
          "strict_event": 1,
          "cover_url": "https://api.archiebot.com/_shared/img/placeholder.png",
          "agenda": "",
          "password": null,
          "password_pin": null,
          "custom_name": "p1ax1a",
          "token": "372-887-340",
          "presenter_pin": "6279942640",
          "allowed_domains": [],
          "roles": {
            "attendee": "261a2ff2eee084f238be1f2e6c72bf37",
            "presenter": "5724aaa46f316da0de2b28186dc7562e",
            "moderator": "aa5932713fbd61d8f8ca72e28e823b70",
            "host": "5e5442457be03277a3300a69b1af5ba9",
            "phone_attendee": "c5b6f51b1466e02f7e45c87c311dbe56",
            "phone_presenter": "63cde0424a00f75ef38acf8e5032e54e"
          },
          "active_session": false,
          "status": "active",
          "leads_form_id": null,
          "registration_form_id": null,
          "registration_enabled": false,
          "manual_confirm_registrants": false,
          "thank_you_email": false,
          "created_at": 1513843391,
          "updated_at": 1513843546,
          "hosted_at": {
            "attendee": "https://embed.archiebot.com/resource/widget/372-887-340",
            "presenter": "https://embed.archiebot.com/resource/widget/372-887-340/5724aaa46f316da0de2b28186dc7562e",
            "moderator": "https://embed.archiebot.com/resource/widget/372-887-340/aa5932713fbd61d8f8ca72e28e823b70",
            "host": "https://embed.archiebot.com/resource/widget/372-887-340/5e5442457be03277a3300a69b1af5ba9",
            "phone_attendee": "https://embed.archiebot.com/resource/widget/372-887-340/c5b6f51b1466e02f7e45c87c311dbe56",
            "phone_presenter": "https://embed.archiebot.com/resource/widget/372-887-340/63cde0424a00f75ef38acf8e5032e54e"
          },
          "is_hidden": false
        }
      },
      "Roles": {
        "title": "Roles",
        "required": [
          "attendee",
          "presenter",
          "moderator",
          "host",
          "phone_attendee",
          "phone_presenter"
        ],
        "type": "object",
        "properties": {
          "attendee": {
            "type": "string"
          },
          "presenter": {
            "type": "string"
          },
          "moderator": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "phone_attendee": {
            "type": "string"
          },
          "phone_presenter": {
            "type": "string"
          }
        },
        "example": {
          "attendee": "261a2ff2eee084f238be1f2e6c72bf37",
          "presenter": "5724aaa46f316da0de2b28186dc7562e",
          "moderator": "aa5932713fbd61d8f8ca72e28e823b70",
          "host": "5e5442457be03277a3300a69b1af5ba9",
          "phone_attendee": "c5b6f51b1466e02f7e45c87c311dbe56",
          "phone_presenter": "63cde0424a00f75ef38acf8e5032e54e"
        }
      },
      "HostedAt": {
        "title": "HostedAt",
        "required": [
          "attendee",
          "presenter",
          "moderator",
          "host",
          "phone_attendee",
          "phone_presenter"
        ],
        "type": "object",
        "properties": {
          "attendee": {
            "type": "string"
          },
          "presenter": {
            "type": "string"
          },
          "moderator": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "phone_attendee": {
            "type": "string"
          },
          "phone_presenter": {
            "type": "string"
          }
        },
        "example": {
          "attendee": "https://embed.archiebot.com/resource/widget/372-887-340",
          "presenter": "https://embed.archiebot.com/resource/widget/372-887-340/5724aaa46f316da0de2b28186dc7562e",
          "moderator": "https://embed.archiebot.com/resource/widget/372-887-340/aa5932713fbd61d8f8ca72e28e823b70",
          "host": "https://embed.archiebot.com/resource/widget/372-887-340/5e5442457be03277a3300a69b1af5ba9",
          "phone_attendee": "https://embed.archiebot.com/resource/widget/372-887-340/c5b6f51b1466e02f7e45c87c311dbe56",
          "phone_presenter": "https://embed.archiebot.com/resource/widget/372-887-340/63cde0424a00f75ef38acf8e5032e54e"
        }
      },
      "Getallusers": {
        "title": "Getallusers",
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data1"
            },
            "description": ""
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "example": {
          "data": [
            {
              "id": 2,
              "parent_id": 1,
              "package_id": null,
              "enterprise_id": 3,
              "enterprise_identifier": "acme",
              "email": "user@example.com",
              "status": "active",
              "phone_number": null,
              "phone_country_code": null,
              "created_ip": null,
              "confirmed_at": 1509619198,
              "created_at": 1509619198,
              "updated_at": 1509619198,
              "data_location": "s-us-es-a"
            },
            {
              "id": 3,
              "parent_id": 1,
              "package_id": null,
              "enterprise_id": 3,
              "enterprise_identifier": "acme",
              "email": "user2@example.com",
              "status": "active",
              "phone_number": null,
              "phone_country_code": null,
              "created_ip": null,
              "confirmed_at": 1509619198,
              "created_at": 1509619198,
              "updated_at": 1509619198,
              "data_location": "s-us-es-a"
            }
          ],
          "meta": {
            "pagination": {
              "total": 2,
              "count": 2,
              "per_page": 2,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "next": "https://api.archiebot.com/api/users?page=2"
              }
            }
          }
        }
      },
      "Data1": {
        "title": "Data1",
        "required": [
          "id",
          "parent_id",
          "package_id",
          "enterprise_id",
          "enterprise_identifier",
          "email",
          "status",
          "phone_number",
          "phone_country_code",
          "created_ip",
          "confirmed_at",
          "created_at",
          "updated_at",
          "data_location"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "parent_id": {
            "type": "integer",
            "format": "int32"
          },
          "package_id": {
            "type": "string",
            "nullable": true
          },
          "enterprise_id": {
            "type": "integer",
            "format": "int32"
          },
          "enterprise_identifier": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          },
          "phone_country_code": {
            "type": "string",
            "nullable": true
          },
          "created_ip": {
            "type": "string",
            "nullable": true
          },
          "confirmed_at": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "integer",
            "format": "int32"
          },
          "data_location": {
            "type": "string"
          }
        },
        "example": {
          "id": 2,
          "parent_id": 1,
          "package_id": null,
          "enterprise_id": 3,
          "enterprise_identifier": "acme",
          "email": "user@example.com",
          "status": "active",
          "phone_number": null,
          "phone_country_code": null,
          "created_ip": null,
          "confirmed_at": 1509619198,
          "created_at": 1509619198,
          "updated_at": 1509619198,
          "data_location": "s-us-es-a"
        }
      },
      "Meta": {
        "title": "Meta",
        "required": [
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "example": {
          "pagination": {
            "total": 2,
            "count": 2,
            "per_page": 2,
            "current_page": 1,
            "total_pages": 1,
            "links": {
              "next": "https://api.archiebot.com/api/users?page=2"
            }
          }
        }
      },
      "Pagination": {
        "title": "Pagination",
        "required": [
          "total",
          "count",
          "per_page",
          "current_page",
          "total_pages",
          "links"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "per_page": {
            "type": "integer",
            "format": "int32"
          },
          "current_page": {
            "type": "integer",
            "format": "int32"
          },
          "total_pages": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "total": 2,
          "count": 2,
          "per_page": 2,
          "current_page": 1,
          "total_pages": 1,
          "links": {
            "next": "https://api.archiebot.com/api/users?page=2"
          }
        }
      },
      "Links": {
        "title": "Links",
        "required": [
          "next"
        ],
        "type": "object",
        "properties": {
          "next": {
            "type": "string"
          }
        },
        "example": {
          "next": "https://api.archiebot.com/api/users?page=2"
        }
      },
      "Getsub-user": {
        "title": "Getsub-user",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data1"
          }
        },
        "example": {
          "data": {
            "id": 5,
            "parent_id": 3,
            "package_id": null,
            "enterprise_id": 2,
            "enterprise_identifier": "acme",
            "email": "user@example.com",
            "status": "active",
            "phone_number": null,
            "phone_country_code": null,
            "created_ip": null,
            "confirmed_at": 1513163284,
            "created_at": 1512654568,
            "updated_at": 1513163284,
            "data_location": "s-us-es-a"
          }
        }
      },
      "Searchforuser": {
        "title": "Searchforuser",
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data1"
            },
            "description": ""
          },
          "meta": {
            "$ref": "#/components/schemas/Meta1"
          }
        },
        "example": {
          "data": [
            {
              "id": 2,
              "parent_id": 3,
              "package_id": null,
              "enterprise_id": 2,
              "enterprise_identifier": "acme",
              "email": "test@example.com",
              "status": "active",
              "phone_number": null,
              "phone_country_code": null,
              "created_ip": null,
              "confirmed_at": 1513163284,
              "created_at": 1512654568,
              "updated_at": 1513163284,
              "data_location": "s-us-es-a"
            }
          ],
          "meta": {
            "pagination": {
              "total": 1,
              "count": 1,
              "per_page": 10,
              "current_page": 1,
              "total_pages": 1,
              "links": []
            }
          }
        }
      },
      "Meta1": {
        "title": "Meta1",
        "required": [
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination1"
          }
        },
        "example": {
          "pagination": {
            "total": 1,
            "count": 1,
            "per_page": 10,
            "current_page": 1,
            "total_pages": 1,
            "links": []
          }
        }
      },
      "Pagination1": {
        "title": "Pagination1",
        "required": [
          "total",
          "count",
          "per_page",
          "current_page",
          "total_pages",
          "links"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "per_page": {
            "type": "integer",
            "format": "int32"
          },
          "current_page": {
            "type": "integer",
            "format": "int32"
          },
          "total_pages": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "total": 1,
          "count": 1,
          "per_page": 10,
          "current_page": 1,
          "total_pages": 1,
          "links": []
        }
      },
      "Data4": {
        "title": "Data4",
        "required": [
          "id",
          "user_id",
          "provider",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credentials"
          }
        },
        "example": {
          "id": 1,
          "user_id": 10,
          "provider": "MailChimp",
          "credentials": {
            "api_key": "11111111111111111111111111111111-us18"
          }
        }
      },
      "Credentials": {
        "title": "Credentials",
        "required": [
          "api_key"
        ],
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          }
        },
        "example": {
          "api_key": "11111111111111111111111111111111-us18"
        }
      },
      "AddingMailChimpproviderintegration1": {
        "title": "AddingMailChimpproviderintegration1",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data4"
          }
        },
        "example": {
          "data": {
            "id": 1,
            "user_id": 10,
            "provider": "MailChimp",
            "credentials": {
              "api_key": "11111111111111111111111111111111-us18"
            }
          }
        }
      },
      "AddCampaignMonitorprovider": {
        "title": "AddCampaignMonitorprovider",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data6"
          }
        },
        "example": {
          "data": {
            "id": 2,
            "user_id": 10,
            "provider": "CampaignMonitor",
            "credentials": {
              "apiKey": "<api_key>",
              "clientId": "<api_secret>"
            }
          }
        }
      },
      "Data6": {
        "title": "Data6",
        "required": [
          "id",
          "user_id",
          "provider",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credentials2"
          }
        },
        "example": {
          "id": 2,
          "user_id": 10,
          "provider": "CampaignMonitor",
          "credentials": {
            "apiKey": "<api_key>",
            "clientId": "<api_secret>"
          }
        }
      },
      "Credentials2": {
        "title": "Credentials2",
        "required": [
          "apiKey",
          "clientId"
        ],
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          }
        },
        "example": {
          "apiKey": "<api_key>",
          "clientId": "<api_secret>"
        }
      },
      "AddFreshMailprovider": {
        "title": "AddFreshMailprovider",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data7"
          }
        },
        "example": {
          "data": {
            "id": 3,
            "user_id": 10,
            "provider": "FreshMail",
            "credentials": {
              "api_key": "2w2w2w2w2w2w2w2w2w2w2w2w2w2w2w2w",
              "api_secret": "4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r"
            }
          }
        }
      },
      "Data7": {
        "title": "Data7",
        "required": [
          "id",
          "user_id",
          "provider",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credentials3"
          }
        },
        "example": {
          "id": 3,
          "user_id": 10,
          "provider": "FreshMail",
          "credentials": {
            "api_key": "2w2w2w2w2w2w2w2w2w2w2w2w2w2w2w2w",
            "api_secret": "4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r"
          }
        }
      },
      "Credentials3": {
        "title": "Credentials3",
        "required": [
          "api_key",
          "api_secret"
        ],
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "api_secret": {
            "type": "string"
          }
        },
        "example": {
          "api_key": "2w2w2w2w2w2w2w2w2w2w2w2w2w2w2w2w",
          "api_secret": "4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r"
        }
      },
      "AddConstantContactintegration": {
        "title": "AddConstantContactintegration",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data8"
          }
        },
        "example": {
          "data": {
            "id": 4,
            "user_id": 10,
            "provider": "ConstantContact",
            "credentials": {
              "api_key": "5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t",
              "access_token": "qwertyuiopasdfghjklzxcvbnm123456"
            }
          }
        }
      },
      "Data8": {
        "title": "Data8",
        "required": [
          "id",
          "user_id",
          "provider",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credentials4"
          }
        },
        "example": {
          "id": 4,
          "user_id": 10,
          "provider": "ConstantContact",
          "credentials": {
            "api_key": "5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t",
            "access_token": "qwertyuiopasdfghjklzxcvbnm123456"
          }
        }
      },
      "Credentials4": {
        "title": "Credentials4",
        "required": [
          "api_key",
          "access_token"
        ],
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          }
        },
        "example": {
          "api_key": "5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t",
          "access_token": "qwertyuiopasdfghjklzxcvbnm123456"
        }
      },
      "AddIContactprovider": {
        "title": "AddIContactprovider",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data9"
          }
        },
        "example": {
          "data": {
            "id": 5,
            "user_id": 10,
            "provider": "IContact",
            "credentials": {
              "appId": "5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t",
              "apiPassword": "qwerty123",
              "apiUsername": "user123",
              "accountId": "1",
              "clientFolderId": "2"
            }
          }
        }
      },
      "Data9": {
        "title": "Data9",
        "required": [
          "id",
          "user_id",
          "provider",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credentials5"
          }
        },
        "example": {
          "id": 5,
          "user_id": 10,
          "provider": "IContact",
          "credentials": {
            "appId": "5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t",
            "apiPassword": "qwerty123",
            "apiUsername": "user123",
            "accountId": "1",
            "clientFolderId": "2"
          }
        }
      },
      "Credentials5": {
        "title": "Credentials5",
        "required": [
          "appId",
          "apiPassword",
          "apiUsername",
          "accountId",
          "clientFolderId"
        ],
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "apiPassword": {
            "type": "string"
          },
          "apiUsername": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "clientFolderId": {
            "type": "string"
          }
        },
        "example": {
          "appId": "5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t",
          "apiPassword": "qwerty123",
          "apiUsername": "user123",
          "accountId": "1",
          "clientFolderId": "2"
        }
      },
      "Updateselectedprovider": {
        "title": "Updateselectedprovider",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data4"
          }
        },
        "example": {
          "data": {
            "id": 1,
            "user_id": 10,
            "provider": "MailChimp",
            "credentials": {
              "api_key": "6y6y6y6y6y6y6y6y6y6y6y6y6y6y6y6y-us16"
            }
          }
        }
      },
      "AddnewlistforCampaignMonitorintegration": {
        "title": "AddnewlistforCampaignMonitorintegration",
        "required": [
          "status",
          "name",
          "type",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        },
        "example": {
          "status": 1,
          "name": "addList",
          "type": "json",
          "data": "5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t"
        }
      },
      "AddnewlistforFreshMailprovider": {
        "title": "AddnewlistforFreshMailprovider",
        "required": [
          "status",
          "name",
          "type",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data11"
          }
        },
        "example": {
          "status": 1,
          "name": "addList",
          "type": "json",
          "data": {
            "status": "OK",
            "hash": "3e3e3e3e3e"
          }
        }
      },
      "Data11": {
        "title": "Data11",
        "required": [
          "status",
          "hash"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          }
        },
        "example": {
          "status": "OK",
          "hash": "3e3e3e3e3e"
        }
      },
      "AddnewlistforConstantContactprovider": {
        "title": "AddnewlistforConstantContactprovider",
        "required": [
          "status",
          "name",
          "type",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data12"
          }
        },
        "example": {
          "status": 1,
          "name": "addList",
          "type": "json",
          "data": {
            "id": "6",
            "name": "ConstantContact list name",
            "status": "ACTIVE",
            "contact_count": 0
          }
        }
      },
      "Data12": {
        "title": "Data12",
        "required": [
          "id",
          "name",
          "status",
          "contact_count"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "contact_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "6",
          "name": "ConstantContact list name",
          "status": "ACTIVE",
          "contact_count": 0
        }
      },
      "AddnewmembertoCampaignMonitorlist": {
        "title": "AddnewmembertoCampaignMonitorlist",
        "required": [
          "status",
          "name",
          "type",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        },
        "example": {
          "status": 1,
          "name": "addMember",
          "type": "json",
          "data": "example@example.com"
        }
      },
      "AddnewmembertoFreshMaillist": {
        "title": "AddnewmembertoFreshMaillist",
        "required": [
          "status",
          "name",
          "type",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data13"
          }
        },
        "example": {
          "status": 1,
          "name": "addMember",
          "type": "json",
          "data": {
            "status": "OK"
          }
        }
      },
      "Data13": {
        "title": "Data13",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "example": {
          "status": "OK"
        }
      },
      "Getunreadinboxnotificationscount": {
        "title": "Getunreadinboxnotificationscount",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data14"
          }
        },
        "example": {
          "data": {
            "unread_count": 1
          }
        }
      },
      "Data14": {
        "title": "Data14",
        "required": [
          "unread_count"
        ],
        "type": "object",
        "properties": {
          "unread_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "unread_count": 1
        }
      },
      "Getdecisionvotessummary": {
        "title": "Getdecisionvotessummary",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data15"
          }
        },
        "example": {
          "data": {
            "groups": [
              {
                "name": "group1",
                "weight": 20,
                "yes": 20,
                "no": 0,
                "abstain": 20,
                "total_votes": 2
              },
              {
                "name": "group2",
                "weight": 50,
                "yes": 50,
                "no": 0,
                "abstain": 50,
                "total_votes": 2
              },
              {
                "name": "group3",
                "weight": 30,
                "yes": 0,
                "no": 30,
                "abstain": 0,
                "total_votes": 1
              }
            ],
            "total": {
              "yes": 70,
              "no": 30,
              "abstain": 70,
              "total_votes": 5
            }
          }
        }
      },
      "Data15": {
        "title": "Data15",
        "required": [
          "groups",
          "total"
        ],
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "description": ""
          },
          "total": {
            "$ref": "#/components/schemas/Total"
          }
        },
        "example": {
          "groups": [
            {
              "name": "group1",
              "weight": 20,
              "yes": 20,
              "no": 0,
              "abstain": 20,
              "total_votes": 2
            },
            {
              "name": "group2",
              "weight": 50,
              "yes": 50,
              "no": 0,
              "abstain": 50,
              "total_votes": 2
            },
            {
              "name": "group3",
              "weight": 30,
              "yes": 0,
              "no": 30,
              "abstain": 0,
              "total_votes": 1
            }
          ],
          "total": {
            "yes": 70,
            "no": 30,
            "abstain": 70,
            "total_votes": 5
          }
        }
      },
      "Group": {
        "title": "Group",
        "required": [
          "name",
          "weight",
          "yes",
          "no",
          "abstain",
          "total_votes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "yes": {
            "type": "integer",
            "format": "int32"
          },
          "no": {
            "type": "integer",
            "format": "int32"
          },
          "abstain": {
            "type": "integer",
            "format": "int32"
          },
          "total_votes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "name": "group1",
          "weight": 20,
          "yes": 20,
          "no": 0,
          "abstain": 20,
          "total_votes": 2
        }
      },
      "Total": {
        "title": "Total",
        "required": [
          "yes",
          "no",
          "abstain",
          "total_votes"
        ],
        "type": "object",
        "properties": {
          "yes": {
            "type": "integer",
            "format": "int32"
          },
          "no": {
            "type": "integer",
            "format": "int32"
          },
          "abstain": {
            "type": "integer",
            "format": "int32"
          },
          "total_votes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "yes": 70,
          "no": 30,
          "abstain": 70,
          "total_votes": 5
        }
      },
      "Industries": {
        "title": "Industries",
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data1"
            },
            "description": ""
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "example": {
          "data": [
            {
              "id": 2,
              "parent_id": 1,
              "package_id": null,
              "enterprise_id": 3,
              "enterprise_identifier": "acme",
              "email": "user@example.com",
              "status": "active",
              "phone_number": null,
              "phone_country_code": null,
              "created_ip": null,
              "confirmed_at": 1509619198,
              "created_at": 1509619198,
              "updated_at": 1509619198,
              "data_location": "s-us-es-a"
            },
            {
              "id": 3,
              "parent_id": 1,
              "package_id": null,
              "enterprise_id": 3,
              "enterprise_identifier": "acme",
              "email": "user2@example.com",
              "status": "active",
              "phone_number": null,
              "phone_country_code": null,
              "created_ip": null,
              "confirmed_at": 1509619198,
              "created_at": 1509619198,
              "updated_at": 1509619198,
              "data_location": "s-us-es-a"
            }
          ],
          "meta": {
            "pagination": {
              "total": 2,
              "count": 2,
              "per_page": 2,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "next": "https://api.archiebot.com/api/users?page=2"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "OAuth2",
      "description": "**OAuth 2.0** is the industry-standard protocol for authorization. \nOAuth 2.0 supersedes the work done on the original OAuth protocol created in 2006.\n\nMore details: https://oauth.net/2/"
    },
    {
      "name": "JWT",
      "description": "JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA.\n\nArchieBot use JWT for Authentication."
    },
    {
      "name": "WidgetTokens"
    },
    {
      "name": "Logs"
    },
    {
      "name": "Sessions",
      "description": "The `Widget Session` resource keeps all sessions for a given widget."
    },
    {
      "name": "Widgets",
      "description": "This is the main or core resource within your account. \nA Widget is a fully customizable set of components which you can use to build wide range of different apps."
    },
    {
      "name": "Polls"
    },
    {
      "name": "Actions"
    },
    {
      "name": "Apps"
    },
    {
      "name": "Folders"
    },
    {
      "name": "Storage"
    },
    {
      "name": "Recorder"
    },
    {
      "name": "Providers"
    },
    {
      "name": "Packages"
    },
    {
      "name": "Users",
      "description": "The `Users` resource holds all of the nested actions with the user's context.\n\nResources and the nested child resources are built using the Cascade rule (you can include them while creating or updating a parent resource). This gives you a way of creating a whole structure of resources with all their sub-resources within a very large but single request.\n"
    },
    {
      "name": "Invitations"
    },
    {
      "name": "Participants"
    },
    {
      "name": "Presenters"
    },
    {
      "name": "Recorders"
    },
    {
      "name": "Streamers"
    },
    {
      "name": "Origin"
    },
    {
      "name": "Engagements"
    },
    {
      "name": "Custom fields"
    },
    {
      "name": "Reminders"
    },
    {
      "name": "Registrants"
    },
    {
      "name": "Tracking providers"
    },
    {
      "name": "Answers"
    },
    {
      "name": "Bookmarks"
    },
    {
      "name": "Fields"
    },
    {
      "name": "Automation",
      "description": "Email marketing automation integrations. Using those endpoints you can manage marketing automations assigned to selected form."
    },
    {
      "name": "Forms"
    },
    {
      "name": "Phone Bridge"
    },
    {
      "name": "Account Activity"
    },
    {
      "name": "Participant Attendance"
    },
    {
      "name": "Event"
    },
    {
      "name": "Session Summary"
    },
    {
      "name": "Custom Session"
    },
    {
      "name": "Extended Session"
    },
    {
      "name": "Usage"
    },
    {
      "name": "Rating"
    },
    {
      "name": "Feedback"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Appearances"
    },
    {
      "name": "Brightcove"
    },
    {
      "name": "Me"
    },
    {
      "name": "Geo"
    },
    {
      "name": "Enterprise"
    },
    {
      "name": "Addon"
    },
    {
      "name": "Limits"
    },
    {
      "name": "Notifications"
    },
    {
      "name": "Decisions"
    },
    {
      "name": "Poll Folders"
    },
    {
      "name": "REST WebHooks",
      "description": "[REST Hooks are] a collection of patterns that treat webhooks like subscriptions. These subscriptions are manipulated via a REST API just like any other resource.\nWhen you subscribe to an event and it occurs we will send a POST request to your webhook url.\n\nAvailable Webhooks:\n* widget.create\n* widget.update\n* widget.enable\n* widget.disable\n* widget.delete\n* widget.registrant.create\n* widget.lead.create\n* widget.session.start\n* widget.session.stop\n* widget.recording.ready\n\n* subaccount.create\n* subaccount.update\n* subaccount.enable\n* subaccount.disable\n* subaccount.delete\n"
    },
    {
      "name": "Settings"
    },
    {
      "name": "Industries"
    },
    {
      "name": "Authorize"
    },
    {
      "name": "Refresh Token"
    },
    {
      "name": "Create scheduled widget"
    },
    {
      "name": "Create scheduled widget with registration form"
    },
    {
      "name": "Create scheduled widget with leads form"
    },
    {
      "name": "Create sub-account with package_id and avatar"
    },
    {
      "name": "Delete sub-account"
    },
    {
      "name": "Edit sub-account"
    },
    {
      "name": "Sub-accounts list"
    },
    {
      "name": "Create permanent widget"
    },
    {
      "name": "Delete widget"
    },
    {
      "name": "Widget list [permanent]"
    },
    {
      "name": "Widget list [scheduled]"
    },
    {
      "name": "Widget list [evergreen]"
    },
    {
      "name": "Widget list [past]"
    },
    {
      "name": "Widget show [internal invitation]"
    },
    {
      "name": "Widget show [internal storage]"
    },
    {
      "name": "Upload file"
    },
    {
      "name": "Upload file [presigned]"
    },
    {
      "name": "Storage File"
    },
    {
      "name": "Storage Folder"
    },
    {
      "name": "Storage - Tests"
    },
    {
      "name": "Info"
    }
  ]
}