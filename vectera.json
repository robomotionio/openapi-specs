{
  "openapi": "3.0.2",
  "info": {
    "title": "Vectera REST API Reference",
    "description": "The Vectera REST API is hosted at https://www.vectera.com/api/v1/.\nThis document lists the available endpoints and methods.\nEndpoints and fields that are not listed below may change at any moment.\n\n\n[Check our guides](https://help.vectera.com/collections/2245690) to get started with the API.\n<a href=\"#\" onclick=\"Intercom('show')\">Chat with us</a>\nor reach out to api@vectera.com to get more help.\n\n\n# Authorization\n\nRequest an API token at api@vectera.com. Send the token with every request in a HTTP header:\n\n```\nAuthorization: Token {token}\n```\n\n\n# Searching\n\nSome endpoints allow you to search for a given value using a `search={query}` parameter. For example:\n\n```\nGET /users/me/meetings?search=meeting-room-name\n```\n\nIf an endpoint supports searching, the documentation below will list the fields that will be searched when the `search` query parameter is provided.\n\n\n\n# Filtering\n\nTo further narrow down your search, you can use the more advanced `filter={query}` query parameter. You can filter on most fields in a resource, and you can combine filters with the boolean operators `AND` and `OR`.\n\nSome examples of valid filter queries:\n\n* `isTrashed = false`\n* `key ~ \"vectera\"`\n* `size > 1000 AND lastOpened < 2021-01-01T00:00`\n* `(ownerId = 8d077d9b-528d-4d4c-bfe8-1a9945090b6d OR ownerId = ea970f9b-092c-4564-898a-d04c2d9b91b6) AND isTrashed = false`\n\nDont' forget to [URL encode](https://www.w3schools.com/tags/ref_urlencode.ASP) your filter queries, for example:\n\n```\nGET /users/me/meetings?filter=isTrashed=false  # INCORRECT\nGET /users/me/meetings?filter=isTrashed%3Dfalse  # CORRECT\n```\n\n\n## Operators\n\nThe filter parameter supports the following operators:\n\n| Operator | Definition                | Example                                           |\n|----------|---------------------------|---------------------------------------------------|\n| =        | Equals*                   | `isOpened = true`                                 |\n| !=       | Does not equal*           | `ownerId != 8d077d9b-528d-4d4c-bfe8-1a9945090b6d` |\n| ~        | Contains*                 | `key ~ \"vectera\"`                                 |\n| !~       | Does not contain*         | `key !~ \"test\"`                                   |\n| >        | Is greater than           | `size > 0`                                        |\n| >=       | Is greater than or equals | `timeActive >= 01:00:00`                          |\n| <        | Is less than              | `lastOpened < 2021-01-01T00:00`                   |\n| <=       | Is less than or equals    | `size <= 1000000`                                 |\n\n*All string comparisons are case insensitive.\n\n\n## Data Types\n\nThe filter parameter supports the following data types:\n\n| Data type              | Description                                                                      | Example                |\n|------------------------|----------------------------------------------------------------------------------|------------------------|\n| String                 | Any text inside double quotes                                                    | `\"vectera\"`            |\n| Integer or real number | An unquoted number                                                               | `100`, `-2.5`          |\n| Boolean                | The unquoted string `true` or `false`                                            | `true`, `false`        |\n| Null                   | The unquoted string null                                                         | `null`                 |\n| Datetime               | An unquoted ISO-8601 string: `YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM\\|-HH:MM\\|Z]` | `2021-01-01T10:00:00Z` |\n| Duration               | An unquoted string of the format `[DD] [HH:[MM:]]ss[.uuuuuu]`                    | `01:00:00`             |\n\n\n\n# Ordering\n\nTo order the results of a query, you can pass a comma-delimited list of fields to the `orderBy={fields}` query parameter.\nTo order in descending order, prefix a field with a minus sign (`-`).\n\nSome examples:\n\n```\nGET /users/me/meetings?orderBy=-lastOpened\nGET /organizations/{uuid}/meetings?orderBy=ownerId,-lastOpened\n```\n\n\n# Pagination\n\nYou can choose the number of results you want to get on a single page with the query parameter `perPage={number}`, up to a maximum of 100 results per page.\nInformation about pagination is provided in the `Link` header of an API response. For example, assuming you have 20 meeting rooms, performing the following request:\n\n```\nGET /users/me/meetings?perPage=2\n```\n\nwill include the following header in the response:\n\n```\nLink: <https://www.vectera.com/api/v1/users/me/meetings?page=2&perPage=2>; rel=\"next\", <https://www.vectera.com/api/v1/users/me/meetings?page=10&perPage=2>; rel=\"last\"\n```\n\n\n# Optional Fields\n\nSome endpoints contain optional fields. In a `GET` request, these fields are not included by default to improve performance and reduce response size. You can explicitly request the server to include these fields using the `include={fields}` query parameter.\n\nFor example:\n\n```\nGET /users/me/appointments\n```\n\nwill include a field `hostId`, that is a reference to the User that hosts the appointment. If you want to get more information about this User, for example its `fullName`, you need another API request:\n\n```\nGET /users/{hostId}\n```\n\nTo avoid this second API call, you can request to include the User information in the first API call:\n\n```\nGET /users/me/appointments?include=host\n```\n\nYou can drill down even further, for example to include information about the host's Organization:\n\n```\nGET /users/me/appointments?include=host.organization\n```\n\nYou can also include multiple optional fields in one request:\n\n```\nGET /users/me/appointments?include=host.organization,guest\n```\n\nIf an endpoint has any optional fields, the documentation below will list these. Nested optional fields (like `host.organization` in the example above) are not listed.\n\n\n\n# Rate Limits\n\nTo help prevent strain on Vectera's servers, our API imposes a limit of 100 requests per minute for each user.\nIf a request exceeds this limit, a `429` status code will be returned.\n\nIf you want to raise this limit for your account, please get in touch with api@vectera.com.\n\n\n<hr style=\"margin-top: 80px; margin-bottom: 40px;\" />\n\n<h1 style=\"\n  font-size: 2em;\n  font-weight: 900;\n  text-transform: uppercase;\n  letter-spacing: .02em;\n  margin-bottom: 0;\n\">\n  List of Endpoints\n</h1>\n",
    "x-logo": {
      "url": "https://storage.googleapis.com/vectera-static/core/img/logo.5d836a759762.svg",
      "altText": "Vectera Logo",
      "href": "https://www.vectera.com/"
    }
  },
  "servers": [
    {
      "url": "https://www.vectera.com/api/v1",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "ActiveInterval",
      "x-displayName": "Active Intervals",
      "description": "An Active Interval is a period of time during which 2 or more people were joined in a Meeting Room, at least one of whom was sharing their audio and/or video.\n\nActive Intervals are currently updated one minute after a meeting has ended. This behaviour may change without prior notice."
    },
    {
      "name": "Appointment",
      "x-displayName": "Appointments",
      "description": "An Appointment booked through a Vectera booking page."
    },
    {
      "name": "Feedback",
      "x-displayName": "Feedbacks",
      "description": "Feedback can be left by a guest after a meeting is over. Feedback consists of a star rating and an optional message."
    },
    {
      "name": "MeetingPermission",
      "x-displayName": "Meeting Permissions",
      "description": "A Meeting Permission contains a private link that gives you access to a specific meeting room."
    },
    {
      "name": "MeetingRoom",
      "x-displayName": "Meeting Rooms",
      "description": "A Meeting Room is where you meet people and share content."
    },
    {
      "name": "MeetingSession",
      "x-displayName": "Meeting Sessions",
      "description": "A Meeting Session corresponds to a single user joining a Meeting Room."
    },
    {
      "name": "MeetingTemplate",
      "x-displayName": "Meeting Templates",
      "description": "A Meeting Template allows you to populate new Meeting Rooms with predefined content."
    },
    {
      "name": "Member",
      "x-displayName": "Members",
      "description": "An Organization in Vectera exists of one or more Members. Each Member has their own Vectera account. Members can create meeting rooms, personal Appointment Types,... Admin Members can in addition edit the Organization's settings, invite new Members, create team Appointment Types,..."
    },
    {
      "name": "Organization",
      "x-displayName": "Organizations",
      "description": "A group of Members with a single brand and billing account."
    },
    {
      "name": "OrganizationInvite",
      "x-displayName": "Organization Invites",
      "description": "An email invitation to join an Organization."
    },
    {
      "name": "Recording",
      "x-displayName": "Recordings",
      "description": "A video Recording of a meeting that took place in a Meeting Room."
    },
    {
      "name": "User",
      "x-displayName": "Users",
      "description": "Anyone who logs into Vectera or joins a meeting room has a User object associated with them."
    }
  ],
  "x-tagGroups": [
    {
      "name": "Endpoints",
      "tags": [
        "ActiveInterval",
        "Appointment",
        "Feedback",
        "MeetingPermission",
        "MeetingRoom",
        "MeetingSession",
        "MeetingTemplate",
        "Member",
        "Organization",
        "OrganizationInvite",
        "Recording",
        "User"
      ]
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "operationId": "listUsers",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search on the field(s) `username`, `email`, `fullName`, `fullNameReversed`. See [Searching](#section/Searching) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCreate"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "User"
        ],
        "summary": "List Users"
      },
      "post": {
        "operationId": "createUser",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "User"
        ],
        "summary": "Create a User"
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUser",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "User"
        ],
        "summary": "Get a User"
      },
      "put": {
        "operationId": "updateUser",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "User"
        ],
        "summary": "Update a User"
      },
      "delete": {
        "operationId": "deleteUser",
        "description": "Delete a User and all of their associated data: Meeting Rooms, Recordings, Appointments,...",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ],
        "summary": "Delete a User"
      }
    },
    "/users/{id}/meetings": {
      "get": {
        "operationId": "listUserMeetingRooms",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User. Use `me` to specify the user who is performing the request.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search on the field(s) `key`. See [Searching](#section/Searching) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `owner`, `owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingRoom"
        ],
        "summary": "List a User's Meeting Rooms"
      }
    },
    "/organizations/{id}/meetings": {
      "get": {
        "operationId": "listOrganizationMeetingRooms",
        "description": "List the Meeting Rooms in the Organization where the request User has join access.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search on the field(s) `key`. See [Searching](#section/Searching) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `owner`, `owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingRoom"
        ],
        "summary": "List an Organization's Meeting Rooms"
      }
    },
    "/meetings": {
      "get": {
        "operationId": "listMeetingRooms",
        "description": "List the Meeting Rooms where the request User has join access.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search on the field(s) `key`. See [Searching](#section/Searching) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `owner`, `owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingRoom"
        ],
        "summary": "List Meeting Rooms"
      },
      "post": {
        "operationId": "createMeetingRoom",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `owner`, `owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingList"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MeetingList"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MeetingList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingList"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingRoom"
        ],
        "summary": "Create a Meeting Room"
      }
    },
    "/meetings/{id}": {
      "get": {
        "operationId": "getMeetingRoom",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `owner`, `owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meeting"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingRoom"
        ],
        "summary": "Get a Meeting Room"
      },
      "put": {
        "operationId": "updateMeetingRoom",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `owner`, `owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Meeting"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Meeting"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Meeting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meeting"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingRoom"
        ],
        "summary": "Update a Meeting Room"
      },
      "delete": {
        "operationId": "deleteMeetingRoom",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "MeetingRoom"
        ],
        "summary": "Delete a Meeting Room"
      }
    },
    "/meetings/{id}/settings": {
      "get": {
        "operationId": "getMeetingRoomSettings",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingSettings"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingRoom"
        ],
        "summary": "Get a Meeting Room's Settings"
      },
      "put": {
        "operationId": "updateMeetingRoomSettings",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingSettings"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MeetingSettings"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MeetingSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingSettings"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingRoom"
        ],
        "summary": "Update a Meeting Room's Settings"
      }
    },
    "/users/{id}/meetingTemplates": {
      "get": {
        "operationId": "listUserMeetingTemplates",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User. Use `me` to specify the user who is performing the request.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search on the field(s) `name`, `slug`. See [Searching](#section/Searching) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `createdBy`, `createdBy.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingTemplate"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingTemplate"
        ],
        "summary": "List a User's Meeting Templates"
      }
    },
    "/organizations/{id}/meetingTemplates": {
      "get": {
        "operationId": "listOrganizationMeetingTemplates",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search on the field(s) `name`, `slug`. See [Searching](#section/Searching) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `createdBy`, `createdBy.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingTemplate"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingTemplate"
        ],
        "summary": "List an Organization's Meeting Templates"
      }
    },
    "/meetingTemplates": {
      "post": {
        "operationId": "createMeetingTemplate",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `createdBy`, `createdBy.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingTemplate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MeetingTemplate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MeetingTemplate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingTemplate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingTemplate"
        ],
        "summary": "Create a Meeting Template"
      }
    },
    "/meetingTemplates/{id}": {
      "get": {
        "operationId": "getMeetingTemplate",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Template.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `createdBy`, `createdBy.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingTemplate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingTemplate"
        ],
        "summary": "Get a Meeting Template"
      },
      "put": {
        "operationId": "updateMeetingTemplate",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Template.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `createdBy`, `createdBy.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingTemplate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MeetingTemplate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MeetingTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingTemplate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingTemplate"
        ],
        "summary": "Update a Meeting Template"
      },
      "delete": {
        "operationId": "deleteMeetingTemplate",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Template.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "MeetingTemplate"
        ],
        "summary": "Delete a Meeting Template"
      }
    },
    "/meetings/{id}/permissions": {
      "get": {
        "operationId": "listMeetingRoomMeetingPermissions",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingPermission"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingPermission"
        ],
        "summary": "List a Meeting Room's Meeting Permissions"
      }
    },
    "/permissions": {
      "post": {
        "operationId": "createMeetingPermission",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `user`, `user.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`, `createdBy`, `createdBy.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingPermission"
        ],
        "summary": "Create a Meeting Permission"
      }
    },
    "/permissions/{id}": {
      "get": {
        "operationId": "getMeetingPermission",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Permission.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `user`, `user.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`, `createdBy`, `createdBy.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingPermission"
        ],
        "summary": "Get a Meeting Permission"
      },
      "put": {
        "operationId": "updateMeetingPermission",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Permission.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `user`, `user.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`, `createdBy`, `createdBy.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingPermission"
        ],
        "summary": "Update a Meeting Permission"
      },
      "delete": {
        "operationId": "deleteMeetingPermission",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Permission.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "MeetingPermission"
        ],
        "summary": "Delete a Meeting Permission"
      }
    },
    "/users/{id}/sessions": {
      "get": {
        "operationId": "listUserMeetingSessions",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User. Use `me` to specify the user who is performing the request.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `user`, `user.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingSession"
        ],
        "summary": "List a User's Meeting Sessions"
      }
    },
    "/organizations/{id}/sessions": {
      "get": {
        "operationId": "listOrganizationMeetingSessions",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `user`, `user.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingSession"
        ],
        "summary": "List an Organization's Meeting Sessions"
      }
    },
    "/meetings/{id}/sessions": {
      "get": {
        "operationId": "listMeetingRoomMeetingSessions",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `user`, `user.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingSession"
        ],
        "summary": "List a Meeting Room's Meeting Sessions"
      }
    },
    "/sessions/{id}": {
      "get": {
        "operationId": "getMeetingSession",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Session.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `user`, `user.organization`, `meeting`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "MeetingSession"
        ],
        "summary": "Get a Meeting Session"
      }
    },
    "/meetings/{id}/activeIntervals": {
      "get": {
        "operationId": "listMeetingRoomActiveIntervals",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActiveIntervalList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "ActiveInterval"
        ],
        "summary": "List a Meeting Room's Active Intervals"
      }
    },
    "/users/{id}/recordings": {
      "get": {
        "operationId": "listUserRecordings",
        "description": "List the Recordings in Meeting rooms that are owned by a specific User. Results are limited to Meeting Rooms where the request User has host access.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User. Use `me` to specify the user who is performing the request.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `meeting`, `meeting.owner`, `meeting.owner.organization`, `createdBy`, `createdBy.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recording"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Recording"
        ],
        "summary": "List a User's Recordings"
      }
    },
    "/organizations/{id}/recordings": {
      "get": {
        "operationId": "listOrganizationRecordings",
        "description": "List the Recordings in Meeting rooms in a specific Organization. Results are limited to Meeting Rooms where the request User has host access.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `meeting`, `meeting.owner`, `meeting.owner.organization`, `createdBy`, `createdBy.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recording"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Recording"
        ],
        "summary": "List an Organization's Recordings"
      }
    },
    "/meetings/{id}/recordings": {
      "get": {
        "operationId": "listMeetingRoomRecordings",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `meeting`, `meeting.owner`, `meeting.owner.organization`, `createdBy`, `createdBy.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recording"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Recording"
        ],
        "summary": "List a Meeting Room's Recordings"
      }
    },
    "/recordings": {
      "get": {
        "operationId": "listRecordings",
        "description": "List the Recordings in all the Meeting Rooms where the request User is a host.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `meeting`, `meeting.owner`, `meeting.owner.organization`, `createdBy`, `createdBy.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recording"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Recording"
        ],
        "summary": "List Recordings"
      }
    },
    "/recordings/{id}": {
      "get": {
        "operationId": "getRecording",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Recording.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `meeting`, `meeting.owner`, `meeting.owner.organization`, `createdBy`, `createdBy.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recording"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Recording"
        ],
        "summary": "Get a Recording"
      },
      "put": {
        "operationId": "updateRecording",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Recording.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `meeting`, `meeting.owner`, `meeting.owner.organization`, `createdBy`, `createdBy.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Recording"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Recording"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Recording"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recording"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Recording"
        ],
        "summary": "Update a Recording"
      },
      "delete": {
        "operationId": "deleteRecording",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Recording.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Recording"
        ],
        "summary": "Delete a Recording"
      }
    },
    "/meetings/{id}/feedbacks": {
      "get": {
        "operationId": "listMeetingRoomFeedbacks",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Room.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `session`, `session.user`, `session.user.organization`, `session.meeting`, `session.meeting.owner`, `session.meeting.owner.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Feedback"
        ],
        "summary": "List a Meeting Room's Feedbacks"
      }
    },
    "/feedbacks": {
      "post": {
        "operationId": "createFeedback",
        "description": "",
        "parameters": [
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `session`, `session.user`, `session.user.organization`, `session.meeting`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feedback"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Feedback"
        ],
        "summary": "Create a Feedback"
      }
    },
    "/feedbacks/{id}": {
      "get": {
        "operationId": "getFeedback",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Feedback.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `session`, `session.user`, `session.user.organization`, `session.meeting`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feedback"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Feedback"
        ],
        "summary": "Get a Feedback"
      },
      "put": {
        "operationId": "updateFeedback",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Feedback.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `session`, `session.user`, `session.user.organization`, `session.meeting`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feedback"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Feedback"
        ],
        "summary": "Update a Feedback"
      }
    },
    "/sessions/{id}/feedback": {
      "get": {
        "operationId": "getMeetingSessionFeedback",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Session.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `session`, `session.user`, `session.user.organization`, `session.meeting`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feedback"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Feedback"
        ],
        "summary": "Get a Meeting Session's Feedback"
      },
      "put": {
        "operationId": "updateMeetingSessionFeedback",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Meeting Session.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `session`, `session.user`, `session.user.organization`, `session.meeting`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Feedback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feedback"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Feedback"
        ],
        "summary": "Update a Meeting Session's Feedback"
      }
    },
    "/organizations/{id}": {
      "get": {
        "operationId": "getOrganization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Organization"
        ],
        "summary": "Get an Organization"
      },
      "put": {
        "operationId": "updateOrganization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Organization"
        ],
        "summary": "Update an Organization"
      }
    },
    "/organizations/{id}/members": {
      "get": {
        "operationId": "listOrganizationMembers",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search on the field(s) `username`, `email`, `fullName`, `fullNameReversed`. See [Searching](#section/Searching) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationMember"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Member"
        ],
        "summary": "List an Organization's Members"
      }
    },
    "/organizations/{id}/members/{user_id}": {
      "get": {
        "operationId": "getOrganizationMember",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMember"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Member"
        ],
        "summary": "Get an Organization's Member"
      },
      "put": {
        "operationId": "updateOrganizationMember",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationMember"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationMember"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationMember"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMember"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Member"
        ],
        "summary": "Update an Organization's Member"
      },
      "delete": {
        "operationId": "deleteOrganizationMember",
        "description": "When deleting a Member, the underlying User will not be deleted. Instead, they will be removed from the Organization, and be assigned to a new, empty Organization. If you want to completely delete a User and all of their associated data, use [Delete a User](#operation/deleteUser) instead.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Member"
        ],
        "summary": "Delete an Organization's Member"
      }
    },
    "/organizations/{id}/invites": {
      "post": {
        "operationId": "createOrganizationInvite",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInvitation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInvitation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInvitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInvitation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "OrganizationInvite"
        ],
        "summary": "Create an Organization Invite"
      }
    },
    "/users/{id}/appointments": {
      "get": {
        "operationId": "listUserAppointments",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User. Use `me` to specify the user who is performing the request.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search on the field(s) `name`. See [Searching](#section/Searching) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `host`, `host.organization`, `guest`, `guest.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Appointment"
        ],
        "summary": "List a User's Appointments"
      }
    },
    "/organizations/{id}/appointments": {
      "get": {
        "operationId": "listOrganizationAppointments",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Organization.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of results to return per page. See [Pagination](#section/Pagination) for more info.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of fields on which the results should be ordered. See [Ordering](#section/Ordering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search on the field(s) `name`. See [Searching](#section/Searching) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "A filter query. See [Filtering](#section/Filtering) for more info.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `host`, `host.organization`, `guest`, `guest.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Appointment"
        ],
        "summary": "List an Organization's Appointments"
      }
    },
    "/appointments/{id}": {
      "get": {
        "operationId": "getAppointment",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Appointment.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `host`, `host.organization`, `guest`, `guest.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Appointment"
        ],
        "summary": "Get an Appointment"
      },
      "put": {
        "operationId": "updateAppointment",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Appointment.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          },
          {
            "name": "include",
            "required": false,
            "in": "query",
            "description": "Comma-delimited list of optional fields to include in the result. Choose from: `host`, `host.organization`, `guest`, `guest.organization`, `meeting`, `meeting.owner`, `meeting.owner.organization`. See [Optional Fields](#section/Optional-Fields) for more info.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Appointment"
        ],
        "summary": "Update an Appointment"
      },
      "delete": {
        "operationId": "deleteAppointment",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this Appointment.",
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]{32}"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Appointment"
        ],
        "summary": "Delete an Appointment"
      }
    }
  },
  "components": {
    "schemas": {
      "UserCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this User."
          },
          "username": {
            "type": "string",
            "nullable": true,
            "description": "A username that must be unique across all Users.",
            "pattern": "^[\\p{L}\\d-]+$",
            "maxLength": 30,
            "minLength": 4
          },
          "firstName": {
            "type": "string",
            "description": "",
            "maxLength": 30
          },
          "lastName": {
            "type": "string",
            "description": "",
            "maxLength": 30
          },
          "shortName": {
            "type": "string",
            "readOnly": true,
            "description": "The User's first name, or email address if no first name is known."
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "description": "The User's full name, or email address if no first name is known."
          },
          "initials": {
            "type": "string",
            "readOnly": true,
            "description": ""
          },
          "isAuthenticated": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
          },
          "profileImage": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true,
            "description": ""
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "A unique value identifying this User."
          },
          "emailIsVerified": {
            "type": "boolean",
            "default": true,
            "description": ""
          },
          "isManaged": {
            "type": "boolean",
            "default": false,
            "description": "A managed User cannot login with a password, only with a Login Token that was created through the API. They cannot edit their personal details."
          },
          "isAdmin": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether the User is an admin of their Organization."
          },
          "dateJoined": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the User first signed up."
          },
          "organizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the Organization this user belongs to."
          },
          "organization": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Organization."
              },
              "name": {
                "type": "string",
                "maxLength": 255,
                "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
              },
              "slug": {
                "type": "string",
                "readOnly": true,
                "description": "A unique value identifying this Organization."
              },
              "customDomain": {
                "type": "string",
                "readOnly": true,
                "nullable": true,
                "description": "The domain name on which this Organization's meeting and booking pages are hosted."
              },
              "cameraBackgroundImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": "The image that is used as a virtual background in meeting rooms."
              },
              "favicon": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": "The favicon used for this Organization's Meeting Room and booking pages."
              },
              "storageUsed": {
                "type": "integer",
                "readOnly": true,
                "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
              },
              "storageTotal": {
                "type": "integer",
                "readOnly": true,
                "description": "The limit of cloud storage this Organization can use in bytes."
              },
              "permanentInviteLinkEnabled": {
                "type": "boolean",
                "description": "Whether `Organization.permanentInviteUrl` should be active."
              },
              "permanentInviteUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": "Anyone with this link can use it to join this Organization."
              },
              "teamWaitingRoomEnabled": {
                "type": "boolean",
                "description": "Whether this Organization's team waiting room should be open for knockers."
              },
              "teamWaitingRoomUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL of this Organization's team waiting room, if it is enabled."
              },
              "liveMeetingRoomsOverviewEnabled": {
                "type": "boolean",
                "readOnly": true,
                "description": ""
              },
              "adminAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "default": "is_host",
                "description": ""
              },
              "defaultTeamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "default": "should_knock",
                "description": ""
              },
              "allowTeamAccessLevelOverride": {
                "type": "boolean",
                "default": true,
                "description": ""
              },
              "allowEditAppointments": {
                "type": "boolean",
                "default": false,
                "description": "Whether non-admins can see and edit the appointments of other Members."
              }
            },
            "required": [
              "name"
            ],
            "readOnly": true,
            "description": "The Organization this user belongs to."
          },
          "languageCode": {
            "type": "string",
            "nullable": true,
            "pattern": "^[a-z]{2}(-[a-zA-Z]{2})?$",
            "maxLength": 16,
            "description": "The User's preferred language."
          },
          "storageUsed": {
            "type": "integer",
            "readOnly": true,
            "description": "The amount of cloud storage used by this user in bytes. See `Organization.storageTotal` for the total allowed storage across all Members of the Organization."
          },
          "personalWaitingRoomUrl": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": "The link to the personal waiting room of the User. If a guest knocks on this url, the User will be notified in their dashboard."
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 128,
            "description": ""
          }
        },
        "required": [
          "firstName",
          "email",
          "organizationId"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this User."
          },
          "username": {
            "type": "string",
            "nullable": true,
            "description": "A username that must be unique across all Users.",
            "pattern": "^[\\p{L}\\d-]+$",
            "maxLength": 30,
            "minLength": 4
          },
          "firstName": {
            "type": "string",
            "description": "",
            "maxLength": 30
          },
          "lastName": {
            "type": "string",
            "description": "",
            "maxLength": 30
          },
          "shortName": {
            "type": "string",
            "readOnly": true,
            "description": "The User's first name, or email address if no first name is known."
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "description": "The User's full name, or email address if no first name is known."
          },
          "initials": {
            "type": "string",
            "readOnly": true,
            "description": ""
          },
          "isAuthenticated": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
          },
          "profileImage": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true,
            "description": ""
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "description": "A unique value identifying this User."
          },
          "emailIsVerified": {
            "type": "boolean",
            "default": true,
            "description": ""
          },
          "isManaged": {
            "type": "boolean",
            "default": false,
            "description": "A managed User cannot login with a password, only with a Login Token that was created through the API. They cannot edit their personal details."
          },
          "isAdmin": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether the User is an admin of their Organization."
          },
          "dateJoined": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the User first signed up."
          },
          "organizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the Organization this user belongs to."
          },
          "organization": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Organization."
              },
              "name": {
                "type": "string",
                "maxLength": 255,
                "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
              },
              "slug": {
                "type": "string",
                "readOnly": true,
                "description": "A unique value identifying this Organization."
              },
              "customDomain": {
                "type": "string",
                "readOnly": true,
                "nullable": true,
                "description": "The domain name on which this Organization's meeting and booking pages are hosted."
              },
              "cameraBackgroundImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": "The image that is used as a virtual background in meeting rooms."
              },
              "favicon": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": "The favicon used for this Organization's Meeting Room and booking pages."
              },
              "storageUsed": {
                "type": "integer",
                "readOnly": true,
                "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
              },
              "storageTotal": {
                "type": "integer",
                "readOnly": true,
                "description": "The limit of cloud storage this Organization can use in bytes."
              },
              "permanentInviteLinkEnabled": {
                "type": "boolean",
                "description": "Whether `Organization.permanentInviteUrl` should be active."
              },
              "permanentInviteUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": "Anyone with this link can use it to join this Organization."
              },
              "teamWaitingRoomEnabled": {
                "type": "boolean",
                "description": "Whether this Organization's team waiting room should be open for knockers."
              },
              "teamWaitingRoomUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL of this Organization's team waiting room, if it is enabled."
              },
              "liveMeetingRoomsOverviewEnabled": {
                "type": "boolean",
                "readOnly": true,
                "description": ""
              },
              "adminAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "default": "is_host",
                "description": ""
              },
              "defaultTeamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "default": "should_knock",
                "description": ""
              },
              "allowTeamAccessLevelOverride": {
                "type": "boolean",
                "default": true,
                "description": ""
              },
              "allowEditAppointments": {
                "type": "boolean",
                "default": false,
                "description": "Whether non-admins can see and edit the appointments of other Members."
              }
            },
            "required": [
              "name"
            ],
            "readOnly": true,
            "description": "The Organization this user belongs to."
          },
          "languageCode": {
            "type": "string",
            "nullable": true,
            "pattern": "^[a-z]{2}(-[a-zA-Z]{2})?$",
            "maxLength": 16,
            "description": "The User's preferred language."
          },
          "storageUsed": {
            "type": "integer",
            "readOnly": true,
            "description": "The amount of cloud storage used by this user in bytes. See `Organization.storageTotal` for the total allowed storage across all Members of the Organization."
          },
          "personalWaitingRoomUrl": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": "The link to the personal waiting room of the User. If a guest knocks on this url, the User will be notified in their dashboard."
          }
        },
        "required": [
          "firstName"
        ]
      },
      "MeetingList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Meeting Room."
          },
          "key": {
            "type": "string",
            "description": [
              "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
            ],
            "pattern": "^[\\p{L}\\d]",
            "maxLength": 255
          },
          "preferredKey": {
            "type": "string",
            "writeOnly": true,
            "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
            "description": "The URL on which you can join this Meeting Room."
          },
          "size": {
            "type": "integer",
            "readOnly": true,
            "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
          },
          "templateId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "nullable": true,
            "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
          },
          "snapshot": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "A snapshot of the content that was last active in the Meeting Room."
          },
          "snapshotName": {
            "type": "string",
            "default": "",
            "description": "The name of the content the snapshot was taken of."
          },
          "ownerId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the Meeting Room owner."
          },
          "owner": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The Meeting Room owner."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime on which this Meeting Room was created. Persists across resets."
          },
          "dateResetted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
          },
          "isOpened": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether there is currently at least one participant in the meeting room."
          },
          "openedSince": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
          },
          "openedUntil": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
          },
          "activeSince": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
          },
          "activeUntil": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
          },
          "timeActive": {
            "type": "string",
            "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
            "readOnly": true,
            "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
          },
          "settings": {
            "type": "object",
            "properties": {
              "allowGroupMeetings": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether meetings with more than 2 people are allowed."
              },
              "allowMultipleWhiteboards": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether creating more than 1 whiteboard is allowed."
              },
              "allowRecording": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether creating a local Recording is allowed."
              },
              "allowCloudRecordings": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether uploading a Recording is allowed."
              },
              "allowPrivateNotes": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether enabling `privateNotes` is allowed."
              },
              "showPrivateNotes": {
                "type": "boolean",
                "description": "Whether the private notes buttons should be visible for the Meeting Room host."
              },
              "allowPresenterMode": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether enabling `presenterMode` is allowed."
              },
              "presenterMode": {
                "type": "boolean",
                "description": "Whether presenter mode is currently active."
              },
              "enableLiveSnapshots": {
                "type": "boolean",
                "readOnly": true,
                "description": ""
              },
              "autoReset": {
                "type": "boolean",
                "readOnly": true,
                "description": [
                  "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                ]
              },
              "forwardUrl": {
                "type": "string",
                "format": "uri",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL that guests will be forwarded to after the meeting is over."
              },
              "forwardImmediately": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
              },
              "showHostLogin": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether to show a login button on the greet screen."
              }
            },
            "readOnly": true,
            "description": "Various settings that control the Meeting Room look and behaviour."
          },
          "publicAccessLevel": {
            "enum": [
              "should_knock",
              "can_always_join",
              "is_host"
            ],
            "type": "string",
            "description": "The access level of anyone who visits the Meeting Room URL."
          },
          "teamAccessLevel": {
            "enum": [
              "should_knock",
              "can_always_join",
              "is_host"
            ],
            "type": "string",
            "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
          }
        }
      },
      "Meeting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Meeting Room."
          },
          "key": {
            "type": "string",
            "description": [
              "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
            ],
            "pattern": "^[\\p{L}\\d]",
            "maxLength": 255
          },
          "preferredKey": {
            "type": "string",
            "writeOnly": true,
            "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
            "description": "The URL on which you can join this Meeting Room."
          },
          "size": {
            "type": "integer",
            "readOnly": true,
            "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
          },
          "templateId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "nullable": true,
            "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
          },
          "snapshot": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "A snapshot of the content that was last active in the Meeting Room."
          },
          "snapshotName": {
            "type": "string",
            "default": "",
            "description": "The name of the content the snapshot was taken of."
          },
          "ownerId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the Meeting Room owner."
          },
          "owner": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The Meeting Room owner."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime on which this Meeting Room was created. Persists across resets."
          },
          "dateResetted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
          },
          "isOpened": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether there is currently at least one participant in the meeting room."
          },
          "openedSince": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
          },
          "openedUntil": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
          },
          "isActive": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
          },
          "activeSince": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
          },
          "activeUntil": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
          },
          "timeActive": {
            "type": "string",
            "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
            "readOnly": true,
            "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
          },
          "settings": {
            "type": "object",
            "properties": {
              "allowGroupMeetings": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether meetings with more than 2 people are allowed."
              },
              "allowMultipleWhiteboards": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether creating more than 1 whiteboard is allowed."
              },
              "allowRecording": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether creating a local Recording is allowed."
              },
              "allowCloudRecordings": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether uploading a Recording is allowed."
              },
              "allowPrivateNotes": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether enabling `privateNotes` is allowed."
              },
              "showPrivateNotes": {
                "type": "boolean",
                "description": "Whether the private notes buttons should be visible for the Meeting Room host."
              },
              "allowPresenterMode": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether enabling `presenterMode` is allowed."
              },
              "presenterMode": {
                "type": "boolean",
                "description": "Whether presenter mode is currently active."
              },
              "enableLiveSnapshots": {
                "type": "boolean",
                "readOnly": true,
                "description": ""
              },
              "autoReset": {
                "type": "boolean",
                "readOnly": true,
                "description": [
                  "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                ]
              },
              "forwardUrl": {
                "type": "string",
                "format": "uri",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL that guests will be forwarded to after the meeting is over."
              },
              "forwardImmediately": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
              },
              "showHostLogin": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether to show a login button on the greet screen."
              }
            },
            "readOnly": true,
            "description": "Various settings that control the Meeting Room look and behaviour."
          },
          "publicAccessLevel": {
            "enum": [
              "should_knock",
              "can_always_join",
              "is_host"
            ],
            "type": "string",
            "description": "The access level of anyone who visits the Meeting Room URL."
          },
          "teamAccessLevel": {
            "enum": [
              "should_knock",
              "can_always_join",
              "is_host"
            ],
            "type": "string",
            "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
          }
        }
      },
      "MeetingSettings": {
        "type": "object",
        "properties": {
          "allowGroupMeetings": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether meetings with more than 2 people are allowed."
          },
          "allowMultipleWhiteboards": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether creating more than 1 whiteboard is allowed."
          },
          "allowRecording": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether creating a local Recording is allowed."
          },
          "allowCloudRecordings": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether uploading a Recording is allowed."
          },
          "allowPrivateNotes": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether enabling `privateNotes` is allowed."
          },
          "showPrivateNotes": {
            "type": "boolean",
            "description": "Whether the private notes buttons should be visible for the Meeting Room host."
          },
          "allowPresenterMode": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether enabling `presenterMode` is allowed."
          },
          "presenterMode": {
            "type": "boolean",
            "description": "Whether presenter mode is currently active."
          },
          "enableLiveSnapshots": {
            "type": "boolean",
            "readOnly": true,
            "description": ""
          },
          "autoReset": {
            "type": "boolean",
            "readOnly": true,
            "description": [
              "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
            ]
          },
          "forwardUrl": {
            "type": "string",
            "format": "uri",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
            "description": "The URL that guests will be forwarded to after the meeting is over."
          },
          "forwardImmediately": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
          },
          "showHostLogin": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether to show a login button on the greet screen."
          }
        }
      },
      "MeetingTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Meeting Template."
          },
          "name": {
            "type": "string",
            "pattern": "^[\\p{L}\\d-\\s]+$",
            "maxLength": 255,
            "description": "The name of this Meeting Template. Must be unique within the Organization."
          },
          "createdById": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the User that created this Meeting Template."
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The User that created this Meeting Template."
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The last time the Meeting Template was edited."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": "The URL on which this Meeting Template can be shown and edited."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the Meeting Room underlying this Meeting Template."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": "The Meeting Room underlying this Meeting Template. This is a special kind of Meeting Room that cannot be joined by guests, and that will not show up in your Meeting Room overview."
          },
          "sourceMeetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "writeOnly": true,
            "nullable": true,
            "description": "If provided during creating of a Meeting Template, all content from the source Meeting Room is copied into the newly created Meeting Template. If omitted, an empty Meeting Template is created."
          }
        },
        "required": [
          "name"
        ]
      },
      "MeetingPermission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Meeting Permission."
          },
          "isHost": {
            "type": "boolean",
            "readOnly": true,
            "description": ""
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "description": ""
          },
          "inviteMessage": {
            "type": "string",
            "description": "If this Meeting Permission is linked to a User: the invite message that will be emailed to that user."
          },
          "accessKey": {
            "type": "string",
            "readOnly": true,
            "description": "A secure key. Append to the Meeting Room URL query parameters to use this Meeting Permission (see the `url` field)."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": ""
          },
          "accessLevel": {
            "enum": [
              "should_knock",
              "can_always_join",
              "is_host"
            ],
            "type": "string",
            "default": "can_always_join",
            "description": "The access level of anyone who uses this Meeting Permission URL to join a Meeting Room."
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Meeting Permission."
          },
          "email": {
            "type": "string",
            "format": "email",
            "writeOnly": true,
            "description": "If provided while creating a Meeting Permission, an invite email will be sent to this email address."
          },
          "userId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the User this Meeting Permission is linked to. If provided while creating a Meeting Permission, an invite email will be sent to this User."
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The User this Meeting Permission is linked to."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the Meeting Room this Meeting Permission gives access to."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": "The Meeting Room this Meeting Permission gives access to."
          },
          "inviteMessage": {
            "type": "string",
            "description": "If this Meeting Permission is linked to a User: the invite message that will be emailed to that user."
          },
          "accessKey": {
            "type": "string",
            "readOnly": true,
            "description": "A secure key. Append to the Meeting Room URL query parameters to use this Meeting Permission (see the `url` field)."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": "Use this URL to join a Meeting Room with this Meeting Permission."
          },
          "accessLevel": {
            "enum": [
              "should_knock",
              "can_always_join",
              "is_host"
            ],
            "type": "string",
            "default": "can_always_join",
            "description": "The access level of anyone who uses this Meeting Permission URL to join a Meeting Room."
          },
          "createdById": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the User that created this Meeting Permission"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The User that created this Meeting Permission"
          }
        },
        "required": [
          "meetingId"
        ]
      },
      "SessionList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Meeting Session."
          },
          "userId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of this Meeting Session's User."
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "emailIsVerified": {
                "type": "boolean",
                "default": true,
                "description": ""
              },
              "isManaged": {
                "type": "boolean",
                "default": false,
                "description": "A managed User cannot login with a password, only with a Login Token that was created through the API. They cannot edit their personal details."
              },
              "isAdmin": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User is an admin of their Organization."
              },
              "dateJoined": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime when the User first signed up."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "languageCode": {
                "type": "string",
                "nullable": true,
                "pattern": "^[a-z]{2}(-[a-zA-Z]{2})?$",
                "maxLength": 16,
                "description": "The User's preferred language."
              },
              "storageUsed": {
                "type": "integer",
                "readOnly": true,
                "description": "The amount of cloud storage used by this user in bytes. See `Organization.storageTotal` for the total allowed storage across all Members of the Organization."
              },
              "personalWaitingRoomUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "The link to the personal waiting room of the User. If a guest knocks on this url, the User will be notified in their dashboard."
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "This Meeting Session's User."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the Meeting Room where this Meeting Session was joined in."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": ""
          },
          "state": {
            "enum": [
              "new",
              "knocking",
              "knock-exited",
              "joined",
              "exited"
            ],
            "type": "string",
            "readOnly": true,
            "description": ""
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "description": ""
          },
          "dateKnocked": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The datetime when the Meeting Session knocked at the Meeting Room. If the Meeting Session has knocked and exited multiple times, only the last time they knocked is returned."
          },
          "dateJoined": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The datetime when the Meeting Session joined the Meeting Room. If the Meeting Session has joined and exited multiple times, only the last time they joined is returned."
          },
          "dateExited": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The datetime when the Meeting Session exited the Meeting Room. If the Meeting Session has joined and exited multiple times, only the last time they exited is returned."
          },
          "userAgent": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 512,
            "description": ""
          }
        },
        "required": [
          "userId",
          "meetingId"
        ]
      },
      "Session": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Meeting Session."
          },
          "userId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of this Meeting Session's User."
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "emailIsVerified": {
                "type": "boolean",
                "default": true,
                "description": ""
              },
              "isManaged": {
                "type": "boolean",
                "default": false,
                "description": "A managed User cannot login with a password, only with a Login Token that was created through the API. They cannot edit their personal details."
              },
              "isAdmin": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User is an admin of their Organization."
              },
              "dateJoined": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime when the User first signed up."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "languageCode": {
                "type": "string",
                "nullable": true,
                "pattern": "^[a-z]{2}(-[a-zA-Z]{2})?$",
                "maxLength": 16,
                "description": "The User's preferred language."
              },
              "storageUsed": {
                "type": "integer",
                "readOnly": true,
                "description": "The amount of cloud storage used by this user in bytes. See `Organization.storageTotal` for the total allowed storage across all Members of the Organization."
              },
              "personalWaitingRoomUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "The link to the personal waiting room of the User. If a guest knocks on this url, the User will be notified in their dashboard."
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "This Meeting Session's User."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the Meeting Room where this Meeting Session was joined in."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": "The Meeting Room where this Meeting Session was joined in."
          },
          "state": {
            "enum": [
              "new",
              "knocking",
              "knock-exited",
              "joined",
              "exited"
            ],
            "type": "string",
            "readOnly": true,
            "description": ""
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "description": ""
          },
          "dateKnocked": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The datetime when the Meeting Session knocked at the Meeting Room. If the Meeting Session has knocked and exited multiple times, only the last time they knocked is returned."
          },
          "dateJoined": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The datetime when the Meeting Session joined the Meeting Room. If the Meeting Session has joined and exited multiple times, only the last time they joined is returned."
          },
          "dateExited": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The datetime when the Meeting Session exited the Meeting Room. If the Meeting Session has joined and exited multiple times, only the last time they exited is returned."
          },
          "userAgent": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 512,
            "description": ""
          }
        },
        "required": [
          "userId",
          "meetingId"
        ]
      },
      "ActiveIntervalList": {
        "type": "object",
        "properties": {
          "dateStart": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the Active Interval started."
          },
          "dateEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The datetime when the Active Interval started. `null` if the Active Interval is ongoing."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the Meeting that was active during this period."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": "The Meeting that was active during this period."
          }
        }
      },
      "Recording": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Recording."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the Meeting Room where this Recording was created."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": "The Meeting Room where this Recording was created."
          },
          "createdById": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the User that created this Recording."
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "emailIsVerified": {
                "type": "boolean",
                "default": true,
                "description": ""
              },
              "isManaged": {
                "type": "boolean",
                "default": false,
                "description": "A managed User cannot login with a password, only with a Login Token that was created through the API. They cannot edit their personal details."
              },
              "isAdmin": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User is an admin of their Organization."
              },
              "dateJoined": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime when the User first signed up."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "languageCode": {
                "type": "string",
                "nullable": true,
                "pattern": "^[a-z]{2}(-[a-zA-Z]{2})?$",
                "maxLength": 16,
                "description": "The User's preferred language."
              },
              "storageUsed": {
                "type": "integer",
                "readOnly": true,
                "description": "The amount of cloud storage used by this user in bytes. See `Organization.storageTotal` for the total allowed storage across all Members of the Organization."
              },
              "personalWaitingRoomUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "The link to the personal waiting room of the User. If a guest knocks on this url, the User will be notified in their dashboard."
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The User that created this Recording."
          },
          "size": {
            "type": "integer",
            "readOnly": true,
            "description": "The size of this Recording in bytes."
          },
          "duration": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "description": "The duration of the Recording in ms."
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "The datetime when this Recording was recorded."
          },
          "downloadLinkEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Whether the Recording is publicly available on its `downloadLink`."
          },
          "downloadLink": {
            "type": "string",
            "readOnly": true,
            "description": "Anyone with this link can download the Recording."
          }
        },
        "required": [
          "meetingId",
          "file",
          "duration",
          "start"
        ]
      },
      "FeedbackList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Feedback."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the Feedback was created."
          },
          "rating": {
            "type": "integer",
            "maximum": 5,
            "minimum": 1,
            "description": "The star rating left by the participant."
          },
          "message": {
            "type": "string",
            "default": "",
            "description": "Optional written feedback left by the participant."
          },
          "sessionId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the Meeting Session that left this Feedback."
          },
          "session": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Session."
              },
              "userId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of this Meeting Session's User."
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "emailIsVerified": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "isManaged": {
                    "type": "boolean",
                    "default": false,
                    "description": "A managed User cannot login with a password, only with a Login Token that was created through the API. They cannot edit their personal details."
                  },
                  "isAdmin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User is an admin of their Organization."
                  },
                  "dateJoined": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The datetime when the User first signed up."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "languageCode": {
                    "type": "string",
                    "nullable": true,
                    "pattern": "^[a-z]{2}(-[a-zA-Z]{2})?$",
                    "maxLength": 16,
                    "description": "The User's preferred language."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The amount of cloud storage used by this user in bytes. See `Organization.storageTotal` for the total allowed storage across all Members of the Organization."
                  },
                  "personalWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "description": "The link to the personal waiting room of the User. If a guest knocks on this url, the User will be notified in their dashboard."
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "This Meeting Session's User."
              },
              "meetingId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room where this Meeting Session was joined in."
              },
              "meeting": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Meeting Room."
                  },
                  "key": {
                    "type": "string",
                    "description": [
                      "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                    ],
                    "pattern": "^[\\p{L}\\d]",
                    "maxLength": 255
                  },
                  "preferredKey": {
                    "type": "string",
                    "writeOnly": true,
                    "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL on which you can join this Meeting Room."
                  },
                  "size": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
                  },
                  "templateId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "nullable": true,
                    "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
                  },
                  "snapshot": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "description": "A snapshot of the content that was last active in the Meeting Room."
                  },
                  "snapshotName": {
                    "type": "string",
                    "default": "",
                    "description": "The name of the content the snapshot was taken of."
                  },
                  "ownerId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "description": "The ID of the Meeting Room owner."
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this User."
                      },
                      "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "A username that must be unique across all Users.",
                        "pattern": "^[\\p{L}\\d-]+$",
                        "maxLength": 30,
                        "minLength": 4
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "description": "A unique value identifying this User."
                      },
                      "firstName": {
                        "type": "string",
                        "description": "",
                        "maxLength": 30
                      },
                      "lastName": {
                        "type": "string",
                        "description": "",
                        "maxLength": 30
                      },
                      "fullName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The User's full name, or email address if no first name is known."
                      },
                      "shortName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The User's first name, or email address if no first name is known."
                      },
                      "initials": {
                        "type": "string",
                        "readOnly": true,
                        "description": ""
                      },
                      "isAuthenticated": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                      },
                      "organizationId": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "The ID of the Organization this user belongs to."
                      },
                      "organization": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "pattern": "[0-9a-f]{32}",
                            "readOnly": true,
                            "description": "A UUID string identifying this Organization."
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                          },
                          "slug": {
                            "type": "string",
                            "readOnly": true,
                            "description": "A unique value identifying this Organization."
                          },
                          "customDomain": {
                            "type": "string",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                          },
                          "cameraBackgroundImage": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The image that is used as a virtual background in meeting rooms."
                          },
                          "favicon": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The favicon used for this Organization's Meeting Room and booking pages."
                          },
                          "storageUsed": {
                            "type": "integer",
                            "readOnly": true,
                            "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                          },
                          "storageTotal": {
                            "type": "integer",
                            "readOnly": true,
                            "description": "The limit of cloud storage this Organization can use in bytes."
                          },
                          "permanentInviteLinkEnabled": {
                            "type": "boolean",
                            "description": "Whether `Organization.permanentInviteUrl` should be active."
                          },
                          "permanentInviteUrl": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": true,
                            "description": "Anyone with this link can use it to join this Organization."
                          },
                          "teamWaitingRoomEnabled": {
                            "type": "boolean",
                            "description": "Whether this Organization's team waiting room should be open for knockers."
                          },
                          "teamWaitingRoomUrl": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": true,
                            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                            "description": "The URL of this Organization's team waiting room, if it is enabled."
                          },
                          "liveMeetingRoomsOverviewEnabled": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": ""
                          },
                          "adminAccessLevel": {
                            "enum": [
                              "should_knock",
                              "can_always_join",
                              "is_host"
                            ],
                            "type": "string",
                            "default": "is_host",
                            "description": ""
                          },
                          "defaultTeamAccessLevel": {
                            "enum": [
                              "should_knock",
                              "can_always_join",
                              "is_host"
                            ],
                            "type": "string",
                            "default": "should_knock",
                            "description": ""
                          },
                          "allowTeamAccessLevelOverride": {
                            "type": "boolean",
                            "default": true,
                            "description": ""
                          },
                          "allowEditAppointments": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether non-admins can see and edit the appointments of other Members."
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "readOnly": true,
                        "description": "The Organization this user belongs to."
                      },
                      "profileImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": ""
                      }
                    },
                    "required": [
                      "firstName"
                    ],
                    "readOnly": true,
                    "description": "The Meeting Room owner."
                  },
                  "dateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The datetime on which this Meeting Room was created. Persists across resets."
                  },
                  "dateResetted": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
                  },
                  "isOpened": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether there is currently at least one participant in the meeting room."
                  },
                  "openedSince": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
                  },
                  "openedUntil": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
                  },
                  "isActive": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
                  },
                  "activeSince": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
                  },
                  "activeUntil": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
                  },
                  "timeActive": {
                    "type": "string",
                    "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                    "readOnly": true,
                    "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
                  },
                  "settings": {
                    "type": "object",
                    "properties": {
                      "allowGroupMeetings": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether meetings with more than 2 people are allowed."
                      },
                      "allowMultipleWhiteboards": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether creating more than 1 whiteboard is allowed."
                      },
                      "allowRecording": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether creating a local Recording is allowed."
                      },
                      "allowCloudRecordings": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether uploading a Recording is allowed."
                      },
                      "allowPrivateNotes": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether enabling `privateNotes` is allowed."
                      },
                      "showPrivateNotes": {
                        "type": "boolean",
                        "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                      },
                      "allowPresenterMode": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether enabling `presenterMode` is allowed."
                      },
                      "presenterMode": {
                        "type": "boolean",
                        "description": "Whether presenter mode is currently active."
                      },
                      "enableLiveSnapshots": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "autoReset": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": [
                          "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                        ]
                      },
                      "forwardUrl": {
                        "type": "string",
                        "format": "uri",
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL that guests will be forwarded to after the meeting is over."
                      },
                      "forwardImmediately": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                      },
                      "showHostLogin": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether to show a login button on the greet screen."
                      }
                    },
                    "readOnly": true,
                    "description": "Various settings that control the Meeting Room look and behaviour."
                  },
                  "publicAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "description": "The access level of anyone who visits the Meeting Room URL."
                  },
                  "teamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
                  }
                },
                "readOnly": true,
                "description": ""
              },
              "state": {
                "enum": [
                  "new",
                  "knocking",
                  "knock-exited",
                  "joined",
                  "exited"
                ],
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "description": ""
              },
              "dateKnocked": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The datetime when the Meeting Session knocked at the Meeting Room. If the Meeting Session has knocked and exited multiple times, only the last time they knocked is returned."
              },
              "dateJoined": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The datetime when the Meeting Session joined the Meeting Room. If the Meeting Session has joined and exited multiple times, only the last time they joined is returned."
              },
              "dateExited": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The datetime when the Meeting Session exited the Meeting Room. If the Meeting Session has joined and exited multiple times, only the last time they exited is returned."
              },
              "userAgent": {
                "type": "string",
                "writeOnly": true,
                "maxLength": 512,
                "description": ""
              }
            },
            "required": [
              "userId",
              "meetingId"
            ],
            "readOnly": true,
            "description": "The Meeting Session that left this Feedback."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the Meeting where this Feedback was left."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": "The Meeting where this Feedback was left."
          }
        },
        "required": [
          "rating",
          "sessionId"
        ]
      },
      "Feedback": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Feedback."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the Feedback was created."
          },
          "rating": {
            "type": "integer",
            "maximum": 5,
            "minimum": 1,
            "description": "The star rating left by the participant."
          },
          "message": {
            "type": "string",
            "default": "",
            "description": "Optional written feedback left by the participant."
          },
          "sessionId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "description": "The ID of the Meeting Session that left this Feedback."
          },
          "session": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Session."
              },
              "userId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of this Meeting Session's User."
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "emailIsVerified": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "isManaged": {
                    "type": "boolean",
                    "default": false,
                    "description": "A managed User cannot login with a password, only with a Login Token that was created through the API. They cannot edit their personal details."
                  },
                  "isAdmin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User is an admin of their Organization."
                  },
                  "dateJoined": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The datetime when the User first signed up."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "languageCode": {
                    "type": "string",
                    "nullable": true,
                    "pattern": "^[a-z]{2}(-[a-zA-Z]{2})?$",
                    "maxLength": 16,
                    "description": "The User's preferred language."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The amount of cloud storage used by this user in bytes. See `Organization.storageTotal` for the total allowed storage across all Members of the Organization."
                  },
                  "personalWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "description": "The link to the personal waiting room of the User. If a guest knocks on this url, the User will be notified in their dashboard."
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "This Meeting Session's User."
              },
              "meetingId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room where this Meeting Session was joined in."
              },
              "meeting": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Meeting Room."
                  },
                  "key": {
                    "type": "string",
                    "description": [
                      "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                    ],
                    "pattern": "^[\\p{L}\\d]",
                    "maxLength": 255
                  },
                  "preferredKey": {
                    "type": "string",
                    "writeOnly": true,
                    "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL on which you can join this Meeting Room."
                  },
                  "size": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
                  },
                  "templateId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "nullable": true,
                    "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
                  },
                  "snapshot": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "description": "A snapshot of the content that was last active in the Meeting Room."
                  },
                  "snapshotName": {
                    "type": "string",
                    "default": "",
                    "description": "The name of the content the snapshot was taken of."
                  },
                  "ownerId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "description": "The ID of the Meeting Room owner."
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this User."
                      },
                      "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "A username that must be unique across all Users.",
                        "pattern": "^[\\p{L}\\d-]+$",
                        "maxLength": 30,
                        "minLength": 4
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "description": "A unique value identifying this User."
                      },
                      "firstName": {
                        "type": "string",
                        "description": "",
                        "maxLength": 30
                      },
                      "lastName": {
                        "type": "string",
                        "description": "",
                        "maxLength": 30
                      },
                      "fullName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The User's full name, or email address if no first name is known."
                      },
                      "shortName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The User's first name, or email address if no first name is known."
                      },
                      "initials": {
                        "type": "string",
                        "readOnly": true,
                        "description": ""
                      },
                      "isAuthenticated": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                      },
                      "organizationId": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "The ID of the Organization this user belongs to."
                      },
                      "organization": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "pattern": "[0-9a-f]{32}",
                            "readOnly": true,
                            "description": "A UUID string identifying this Organization."
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                          },
                          "slug": {
                            "type": "string",
                            "readOnly": true,
                            "description": "A unique value identifying this Organization."
                          },
                          "customDomain": {
                            "type": "string",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                          },
                          "cameraBackgroundImage": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The image that is used as a virtual background in meeting rooms."
                          },
                          "favicon": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The favicon used for this Organization's Meeting Room and booking pages."
                          },
                          "storageUsed": {
                            "type": "integer",
                            "readOnly": true,
                            "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                          },
                          "storageTotal": {
                            "type": "integer",
                            "readOnly": true,
                            "description": "The limit of cloud storage this Organization can use in bytes."
                          },
                          "permanentInviteLinkEnabled": {
                            "type": "boolean",
                            "description": "Whether `Organization.permanentInviteUrl` should be active."
                          },
                          "permanentInviteUrl": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": true,
                            "description": "Anyone with this link can use it to join this Organization."
                          },
                          "teamWaitingRoomEnabled": {
                            "type": "boolean",
                            "description": "Whether this Organization's team waiting room should be open for knockers."
                          },
                          "teamWaitingRoomUrl": {
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": true,
                            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                            "description": "The URL of this Organization's team waiting room, if it is enabled."
                          },
                          "liveMeetingRoomsOverviewEnabled": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": ""
                          },
                          "adminAccessLevel": {
                            "enum": [
                              "should_knock",
                              "can_always_join",
                              "is_host"
                            ],
                            "type": "string",
                            "default": "is_host",
                            "description": ""
                          },
                          "defaultTeamAccessLevel": {
                            "enum": [
                              "should_knock",
                              "can_always_join",
                              "is_host"
                            ],
                            "type": "string",
                            "default": "should_knock",
                            "description": ""
                          },
                          "allowTeamAccessLevelOverride": {
                            "type": "boolean",
                            "default": true,
                            "description": ""
                          },
                          "allowEditAppointments": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether non-admins can see and edit the appointments of other Members."
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "readOnly": true,
                        "description": "The Organization this user belongs to."
                      },
                      "profileImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": ""
                      }
                    },
                    "required": [
                      "firstName"
                    ],
                    "readOnly": true,
                    "description": "The Meeting Room owner."
                  },
                  "dateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The datetime on which this Meeting Room was created. Persists across resets."
                  },
                  "dateResetted": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
                  },
                  "isOpened": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether there is currently at least one participant in the meeting room."
                  },
                  "openedSince": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
                  },
                  "openedUntil": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
                  },
                  "isActive": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
                  },
                  "activeSince": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
                  },
                  "activeUntil": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
                  },
                  "timeActive": {
                    "type": "string",
                    "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                    "readOnly": true,
                    "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
                  },
                  "settings": {
                    "type": "object",
                    "properties": {
                      "allowGroupMeetings": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether meetings with more than 2 people are allowed."
                      },
                      "allowMultipleWhiteboards": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether creating more than 1 whiteboard is allowed."
                      },
                      "allowRecording": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether creating a local Recording is allowed."
                      },
                      "allowCloudRecordings": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether uploading a Recording is allowed."
                      },
                      "allowPrivateNotes": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether enabling `privateNotes` is allowed."
                      },
                      "showPrivateNotes": {
                        "type": "boolean",
                        "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                      },
                      "allowPresenterMode": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether enabling `presenterMode` is allowed."
                      },
                      "presenterMode": {
                        "type": "boolean",
                        "description": "Whether presenter mode is currently active."
                      },
                      "enableLiveSnapshots": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "autoReset": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": [
                          "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                        ]
                      },
                      "forwardUrl": {
                        "type": "string",
                        "format": "uri",
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL that guests will be forwarded to after the meeting is over."
                      },
                      "forwardImmediately": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                      },
                      "showHostLogin": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether to show a login button on the greet screen."
                      }
                    },
                    "readOnly": true,
                    "description": "Various settings that control the Meeting Room look and behaviour."
                  },
                  "publicAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "description": "The access level of anyone who visits the Meeting Room URL."
                  },
                  "teamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
                  }
                },
                "readOnly": true,
                "description": "The Meeting Room where this Meeting Session was joined in."
              },
              "state": {
                "enum": [
                  "new",
                  "knocking",
                  "knock-exited",
                  "joined",
                  "exited"
                ],
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "description": ""
              },
              "dateKnocked": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The datetime when the Meeting Session knocked at the Meeting Room. If the Meeting Session has knocked and exited multiple times, only the last time they knocked is returned."
              },
              "dateJoined": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The datetime when the Meeting Session joined the Meeting Room. If the Meeting Session has joined and exited multiple times, only the last time they joined is returned."
              },
              "dateExited": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The datetime when the Meeting Session exited the Meeting Room. If the Meeting Session has joined and exited multiple times, only the last time they exited is returned."
              },
              "userAgent": {
                "type": "string",
                "writeOnly": true,
                "maxLength": 512,
                "description": ""
              }
            },
            "required": [
              "userId",
              "meetingId"
            ],
            "readOnly": true,
            "description": "The Meeting Session that left this Feedback."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the Meeting where this Feedback was left."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": "The Meeting where this Feedback was left."
          }
        },
        "required": [
          "rating",
          "sessionId"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Organization."
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
          },
          "slug": {
            "type": "string",
            "readOnly": true,
            "description": "A unique value identifying this Organization."
          },
          "customDomain": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "The domain name on which this Organization's meeting and booking pages are hosted."
          },
          "cameraBackgroundImage": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true,
            "description": "The image that is used as a virtual background in meeting rooms."
          },
          "favicon": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true,
            "description": "The favicon used for this Organization's Meeting Room and booking pages."
          },
          "storageUsed": {
            "type": "integer",
            "readOnly": true,
            "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
          },
          "storageTotal": {
            "type": "integer",
            "readOnly": true,
            "description": "The limit of cloud storage this Organization can use in bytes."
          },
          "permanentInviteLinkEnabled": {
            "type": "boolean",
            "description": "Whether `Organization.permanentInviteUrl` should be active."
          },
          "permanentInviteUrl": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true,
            "description": "Anyone with this link can use it to join this Organization."
          },
          "teamWaitingRoomEnabled": {
            "type": "boolean",
            "description": "Whether this Organization's team waiting room should be open for knockers."
          },
          "teamWaitingRoomUrl": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
            "description": "The URL of this Organization's team waiting room, if it is enabled."
          },
          "liveMeetingRoomsOverviewEnabled": {
            "type": "boolean",
            "readOnly": true,
            "description": ""
          },
          "adminAccessLevel": {
            "enum": [
              "should_knock",
              "can_always_join",
              "is_host"
            ],
            "type": "string",
            "default": "is_host",
            "description": ""
          },
          "defaultTeamAccessLevel": {
            "enum": [
              "should_knock",
              "can_always_join",
              "is_host"
            ],
            "type": "string",
            "default": "should_knock",
            "description": ""
          },
          "allowTeamAccessLevelOverride": {
            "type": "boolean",
            "default": true,
            "description": ""
          },
          "allowEditAppointments": {
            "type": "boolean",
            "default": false,
            "description": "Whether non-admins can see and edit the appointments of other Members."
          }
        },
        "required": [
          "name"
        ]
      },
      "OrganizationMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this User."
          },
          "username": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "A username that must be unique across all Users.",
            "pattern": "^[\\p{L}\\d-]+$",
            "maxLength": 30,
            "minLength": 4
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "description": ""
          },
          "firstName": {
            "type": "string",
            "readOnly": true,
            "description": "",
            "maxLength": 30
          },
          "lastName": {
            "type": "string",
            "readOnly": true,
            "description": "",
            "maxLength": 30
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "description": "The User's full name, or email address if no first name is known."
          },
          "shortName": {
            "type": "string",
            "readOnly": true,
            "description": "The User's first name, or email address if no first name is known."
          },
          "initials": {
            "type": "string",
            "readOnly": true,
            "description": ""
          },
          "isAuthenticated": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
          },
          "profileImage": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "nullable": true,
            "description": ""
          },
          "storageUsed": {
            "type": "integer",
            "readOnly": true,
            "description": "The amount of cloud storage used by this user in bytes. See `Organization.storageTotal` for the total allowed storage across all Members of the Organization."
          },
          "isAdmin": {
            "type": "boolean",
            "default": false,
            "description": "Whether the User is an admin of the Organization."
          },
          "dateJoined": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the User joined the Organization."
          },
          "isAccepted": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether the User has accepted the Organization Invite. If `isAccepted` is `false`, the member belongs to a different organization than the one specified in the URL, and `member.organizationId` will not match the path parameter `id`."
          },
          "isActive": {
            "type": "boolean",
            "default": true,
            "description": "Whether this account is currently active. Inactive accounts are also called \"Suspended\". They cannot log into Vectera, but their content is still accessible for other team members. If `isAccepted` is `false`, this field is ignored."
          }
        }
      },
      "OrganizationInvitation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address to send this invitation to. Provide either `email` or `user`, but not both."
          },
          "user": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "writeOnly": true,
            "description": "The user to send this invitation to. Provide either `email` or `user`, but not both."
          },
          "message": {
            "type": "string",
            "description": "The invite message to send in the email."
          }
        },
        "required": [
          "message"
        ]
      },
      "AppointmentList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Appointment."
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "The name of this Appointment's Appointment Type "
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the Appointment is scheduled to start."
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the Appointment is scheduled to end."
          },
          "hostId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the User that will host the Appointment."
          },
          "host": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The User that will host the Appointment."
          },
          "guestId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the User that booked the appoinment."
          },
          "guest": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The User that booked the appoinment."
          },
          "location": {
            "enum": [
              "online",
              "phone_call",
              "offline"
            ],
            "type": "string",
            "readOnly": true,
            "description": ""
          },
          "address": {
            "type": "string",
            "readOnly": true,
            "description": "If the Appointment is offline: the address where the Appointment will take place. This address is configured on the Appointment Type, and cannot be chosen by the guest."
          },
          "telephone": {
            "type": "string",
            "readOnly": true,
            "description": "If the Appointment is a phone call: the phone number of the guest."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "nullable": true,
            "description": "If the Appointment is online: the ID of the Meeting Room where the Appointment will take place."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": "If the Appointment is online: the Meeting Room where the Appointment will take place."
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "description": "If the Appointment is online: the URL of the Meeting Room where the Appointment will take place."
          },
          "isCancelled": {
            "type": "boolean",
            "description": "When setting this field to `true`, by default an email will be sent to the guest notifying them of this action. To disable this email: set `sendUpdates = false` while setting `isCancelled = true`."
          },
          "customQuestionsAnswers": {
            "type": "object",
            "readOnly": true,
            "description": "The answers that the guest provided to the custom questions that were asked while booking the Appointment."
          },
          "sendUpdates": {
            "type": "boolean",
            "writeOnly": true,
            "description": "When you cancel the Appointment through the API, provide this field to choose whether to send an email update to the guest. Note that the guest's calendar may send them an email regardless of this setting."
          }
        }
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "A UUID string identifying this Appointment."
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "The name of this Appointment's Appointment Type "
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the Appointment is scheduled to start."
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The datetime when the Appointment is scheduled to end."
          },
          "hostId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the User that will host the Appointment."
          },
          "host": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The User that will host the Appointment."
          },
          "guestId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "readOnly": true,
            "description": "The ID of the User that booked the appoinment."
          },
          "guest": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this User."
              },
              "username": {
                "type": "string",
                "nullable": true,
                "description": "A username that must be unique across all Users.",
                "pattern": "^[\\p{L}\\d-]+$",
                "maxLength": 30,
                "minLength": 4
              },
              "email": {
                "type": "string",
                "format": "email",
                "readOnly": true,
                "description": "A unique value identifying this User."
              },
              "firstName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "lastName": {
                "type": "string",
                "description": "",
                "maxLength": 30
              },
              "fullName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's full name, or email address if no first name is known."
              },
              "shortName": {
                "type": "string",
                "readOnly": true,
                "description": "The User's first name, or email address if no first name is known."
              },
              "initials": {
                "type": "string",
                "readOnly": true,
                "description": ""
              },
              "isAuthenticated": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
              },
              "organizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "The ID of the Organization this user belongs to."
              },
              "organization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this Organization."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                  },
                  "slug": {
                    "type": "string",
                    "readOnly": true,
                    "description": "A unique value identifying this Organization."
                  },
                  "customDomain": {
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                  },
                  "cameraBackgroundImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The image that is used as a virtual background in meeting rooms."
                  },
                  "favicon": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "The favicon used for this Organization's Meeting Room and booking pages."
                  },
                  "storageUsed": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                  },
                  "storageTotal": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "The limit of cloud storage this Organization can use in bytes."
                  },
                  "permanentInviteLinkEnabled": {
                    "type": "boolean",
                    "description": "Whether `Organization.permanentInviteUrl` should be active."
                  },
                  "permanentInviteUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": "Anyone with this link can use it to join this Organization."
                  },
                  "teamWaitingRoomEnabled": {
                    "type": "boolean",
                    "description": "Whether this Organization's team waiting room should be open for knockers."
                  },
                  "teamWaitingRoomUrl": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL of this Organization's team waiting room, if it is enabled."
                  },
                  "liveMeetingRoomsOverviewEnabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "adminAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "is_host",
                    "description": ""
                  },
                  "defaultTeamAccessLevel": {
                    "enum": [
                      "should_knock",
                      "can_always_join",
                      "is_host"
                    ],
                    "type": "string",
                    "default": "should_knock",
                    "description": ""
                  },
                  "allowTeamAccessLevelOverride": {
                    "type": "boolean",
                    "default": true,
                    "description": ""
                  },
                  "allowEditAppointments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether non-admins can see and edit the appointments of other Members."
                  }
                },
                "required": [
                  "name"
                ],
                "readOnly": true,
                "description": "The Organization this user belongs to."
              },
              "profileImage": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "nullable": true,
                "description": ""
              }
            },
            "required": [
              "firstName"
            ],
            "readOnly": true,
            "description": "The User that booked the appoinment."
          },
          "location": {
            "enum": [
              "online",
              "phone_call",
              "offline"
            ],
            "type": "string",
            "readOnly": true,
            "description": ""
          },
          "address": {
            "type": "string",
            "readOnly": true,
            "description": "If the Appointment is offline: the address where the Appointment will take place. This address is configured on the Appointment Type, and cannot be chosen by the guest."
          },
          "telephone": {
            "type": "string",
            "readOnly": true,
            "description": "If the Appointment is a phone call: the phone number of the guest."
          },
          "meetingId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "nullable": true,
            "description": "If the Appointment is online: the ID of the Meeting Room where the Appointment will take place."
          },
          "meeting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "readOnly": true,
                "description": "A UUID string identifying this Meeting Room."
              },
              "key": {
                "type": "string",
                "description": [
                  "The identifier that is used to compose the Meeting Room URL. Must be unique within your Organization."
                ],
                "pattern": "^[\\p{L}\\d]",
                "maxLength": 255
              },
              "preferredKey": {
                "type": "string",
                "writeOnly": true,
                "description": "A Meeting Room's `key` must be unique within your Organization. If you try to create a Meeting Room with a `key` that already exists, an error will be returned. You can provide `preferredKey` instead of `key` if you want Vectera to automatically resolve conflicts by appending a postfix (e.g. \"-2\")."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                "description": "The URL on which you can join this Meeting Room."
              },
              "size": {
                "type": "integer",
                "readOnly": true,
                "description": "The total size in bytes of this Meeting Room. Calculated by summing the size of all Files and Recordings in the Meeting Room."
              },
              "templateId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "nullable": true,
                "description": "The ID of the Meeting Template on which this Meeting Room is based. Set this field when creating a Meeting Room to apply a template."
              },
              "snapshot": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "A snapshot of the content that was last active in the Meeting Room."
              },
              "snapshotName": {
                "type": "string",
                "default": "",
                "description": "The name of the content the snapshot was taken of."
              },
              "ownerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "description": "The ID of the Meeting Room owner."
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "A UUID string identifying this User."
                  },
                  "username": {
                    "type": "string",
                    "nullable": true,
                    "description": "A username that must be unique across all Users.",
                    "pattern": "^[\\p{L}\\d-]+$",
                    "maxLength": 30,
                    "minLength": 4
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "description": "A unique value identifying this User."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "maxLength": 30
                  },
                  "fullName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's full name, or email address if no first name is known."
                  },
                  "shortName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The User's first name, or email address if no first name is known."
                  },
                  "initials": {
                    "type": "string",
                    "readOnly": true,
                    "description": ""
                  },
                  "isAuthenticated": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the User has signed up for a Vectera account. When someone joins a meeting room without signing up, a User with `isAuthenticated = false` is automatically created."
                  },
                  "organizationId": {
                    "type": "string",
                    "pattern": "[0-9a-f]{32}",
                    "readOnly": true,
                    "description": "The ID of the Organization this user belongs to."
                  },
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "[0-9a-f]{32}",
                        "readOnly": true,
                        "description": "A UUID string identifying this Organization."
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The Organization's name. Caution: unless you have a custom domain set, changing the name of an Organization will also change the URLs of all Meeting Rooms and booking pages."
                      },
                      "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique value identifying this Organization."
                      },
                      "customDomain": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The domain name on which this Organization's meeting and booking pages are hosted."
                      },
                      "cameraBackgroundImage": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The image that is used as a virtual background in meeting rooms."
                      },
                      "favicon": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The favicon used for this Organization's Meeting Room and booking pages."
                      },
                      "storageUsed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total amount of cloud storage used by this Organization's Members, in bytes."
                      },
                      "storageTotal": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The limit of cloud storage this Organization can use in bytes."
                      },
                      "permanentInviteLinkEnabled": {
                        "type": "boolean",
                        "description": "Whether `Organization.permanentInviteUrl` should be active."
                      },
                      "permanentInviteUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Anyone with this link can use it to join this Organization."
                      },
                      "teamWaitingRoomEnabled": {
                        "type": "boolean",
                        "description": "Whether this Organization's team waiting room should be open for knockers."
                      },
                      "teamWaitingRoomUrl": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                        "description": "The URL of this Organization's team waiting room, if it is enabled."
                      },
                      "liveMeetingRoomsOverviewEnabled": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": ""
                      },
                      "adminAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "is_host",
                        "description": ""
                      },
                      "defaultTeamAccessLevel": {
                        "enum": [
                          "should_knock",
                          "can_always_join",
                          "is_host"
                        ],
                        "type": "string",
                        "default": "should_knock",
                        "description": ""
                      },
                      "allowTeamAccessLevelOverride": {
                        "type": "boolean",
                        "default": true,
                        "description": ""
                      },
                      "allowEditAppointments": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether non-admins can see and edit the appointments of other Members."
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "readOnly": true,
                    "description": "The Organization this user belongs to."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "nullable": true,
                    "description": ""
                  }
                },
                "required": [
                  "firstName"
                ],
                "readOnly": true,
                "description": "The Meeting Room owner."
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The datetime on which this Meeting Room was created. Persists across resets."
              },
              "dateResetted": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "description": "The datetime on which this Meeting Room was last resetted. `null` if the Meeting Room has never been resetted."
              },
              "isOpened": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there is currently at least one participant in the meeting room."
              },
              "openedSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being opened. `null` if the Meeting Room has never been opened."
              },
              "openedUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last stopped being opened. `null` if the Meeting Room is currently opened."
              },
              "isActive": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether there are currently two or more participants in the meeting room, at least one of whom is sharing their audio or video."
              },
              "activeSince": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The time when the Meeting Room last started being active. `null` if the Meeting Room has never been active."
              },
              "activeUntil": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "The last time the Meeting Room stopped being active. `null` if the Meeting Room is currently active."
              },
              "timeActive": {
                "type": "string",
                "pattern": "([0-9]+ )?[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{6})?",
                "readOnly": true,
                "description": "The total time two or more participants were in the Meeting Room, at least one of whom were sharing their audio or video"
              },
              "settings": {
                "type": "object",
                "properties": {
                  "allowGroupMeetings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether meetings with more than 2 people are allowed."
                  },
                  "allowMultipleWhiteboards": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating more than 1 whiteboard is allowed."
                  },
                  "allowRecording": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether creating a local Recording is allowed."
                  },
                  "allowCloudRecordings": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether uploading a Recording is allowed."
                  },
                  "allowPrivateNotes": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `privateNotes` is allowed."
                  },
                  "showPrivateNotes": {
                    "type": "boolean",
                    "description": "Whether the private notes buttons should be visible for the Meeting Room host."
                  },
                  "allowPresenterMode": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether enabling `presenterMode` is allowed."
                  },
                  "presenterMode": {
                    "type": "boolean",
                    "description": "Whether presenter mode is currently active."
                  },
                  "enableLiveSnapshots": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": ""
                  },
                  "autoReset": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": [
                      "If enabled, the Meeting Room will be automatically reset 2 minutes after the host leaves."
                    ]
                  },
                  "forwardUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-￿0-9](?:[a-z¡-￿0-9-]{0,61}[a-z¡-￿0-9])?(?:\\.(?!-)[a-z¡-￿0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-￿-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z",
                    "description": "The URL that guests will be forwarded to after the meeting is over."
                  },
                  "forwardImmediately": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the redirect to `forwardUrl` should be instantaneous. If not, a message is shown to the user for a few seconds announcing that they will be redirected."
                  },
                  "showHostLogin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether to show a login button on the greet screen."
                  }
                },
                "readOnly": true,
                "description": "Various settings that control the Meeting Room look and behaviour."
              },
              "publicAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of anyone who visits the Meeting Room URL."
              },
              "teamAccessLevel": {
                "enum": [
                  "should_knock",
                  "can_always_join",
                  "is_host"
                ],
                "type": "string",
                "description": "The access level of the Meeting Room host's team members who visit the Meeting Room URL."
              }
            },
            "readOnly": true,
            "description": "If the Appointment is online: the Meeting Room where the Appointment will take place."
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "description": "If the Appointment is online: the URL of the Meeting Room where the Appointment will take place."
          },
          "isCancelled": {
            "type": "boolean",
            "description": "When setting this field to `true`, by default an email will be sent to the guest notifying them of this action. To disable this email: set `sendUpdates = false` while setting `isCancelled = true`."
          },
          "customQuestionsAnswers": {
            "type": "object",
            "readOnly": true,
            "description": "The answers that the guest provided to the custom questions that were asked while booking the Appointment."
          },
          "sendUpdates": {
            "type": "boolean",
            "writeOnly": true,
            "description": "When you cancel the Appointment through the API, provide this field to choose whether to send an email update to the guest. Note that the guest's calendar may send them an email regardless of this setting."
          }
        }
      }
    },
    "securitySchemes": {
      "API Key": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Token"
      }
    }
  },
  "security": [
    {
      "API Key": []
    }
  ]
}