{
  "openapi": "3.0.1",
  "info": {
    "title": "Expensya Management",
    "description": "Expensya Account Management",
    "version": "1.0",
    "x-logo": {
      "url": "https://logo.clearbit.com/expensya.com"
    }
  },
  "servers": [
    {
      "url": "https://api-front.expensya.com/Manage"
    }
  ],
  "paths": {
    "/api/customField/": {
      "post": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Add Custom Field",
        "description": "Add new custom field to your Expensya account.",
        "operationId": "AddCustomField",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the custom field to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldInput"
              },
              "example": {
                "FieldName": "string",
                "DisplayLabelFR": "string",
                "DisplayLabelEN": "string",
                "TooltipFR": "string",
                "TooltipEN": "string",
                "FieldType": 0,
                "CustomFieldUseType": 2,
                "MaxLength": 0,
                "MinValue": "string",
                "MaxValue": "string",
                "DefaultValue": "string",
                "IsMandatory": true,
                "IsActive": true,
                "Categories_Id": "string",
                "ExternalId": "string",
                "CustomFieldParentId": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add custom field Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/customField/{customFieldId}/": {
      "put": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Update Custom Field",
        "description": "Update an already added custom field in your Expensya account.",
        "operationId": "UpdateCustomField",
        "parameters": [
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the custom field to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the customfield to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldInput"
              },
              "example": {
                "FieldName": "string",
                "DisplayLabelFR": "string",
                "DisplayLabelEN": "string",
                "TooltipFR": "string",
                "TooltipEN": "string",
                "FieldType": 0,
                "CustomFieldUseType": 2,
                "MaxLength": 0,
                "MinValue": "string",
                "MaxValue": "string",
                "DefaultValue": "string",
                "IsMandatory": true,
                "IsActive": true,
                "Categories_Id": "string",
                "ExternalId": "string",
                "CustomFieldParentId": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update custom field Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/customField/{customFieldId}/values/": {
      "post": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Add Custom Field Values",
        "description": "Add a list of custom field values to your Expensya account.",
        "operationId": "AddCustomFieldValues",
        "parameters": [
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the custom field.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of custom field values inputs to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldValueInputArray"
              },
              "example": [
                {
                  "Reference": "Rouge",
                  "Value": "FF0000",
                  "ExternalId": "Ext2",
                  "IsActive": "true",
                  "StartDate": "2020-06-04T08:30:15.0230000+00:00",
                  "EndDate": "2021-12-08T10:20:15.0230000+00:00",
                  "UseType": "1",
                  "TagsToAssign": [
                    "Tag1",
                    "Tag2"
                  ],
                  "ParentsIds": [
                    "c128ed28-7a1b-43ae-a8b2-ddd23262f070",
                    "a04ba393-21de-4f84-b3f0-9ac61597be0b"
                  ],
                  "AssignedUsersMails": [
                    "user1@yopmail.com",
                    "user2@yopmail.com"
                  ],
                  "AssignedUsersPayIds": [
                    "425100",
                    "425200"
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add custom field values Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Update custom field values",
        "description": "Update a list of custom field values already added in your Expensya account.",
        "operationId": "UpdateCustomFieldValues",
        "parameters": [
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the custom field.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of custom field values inputs to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomFieldValueInputArray"
              },
              "example": [
                {
                  "Reference": "Rouge",
                  "Value": "FF0000",
                  "ExternalId": "Ext2",
                  "IsActive": "true",
                  "StartDate": "2020-06-04T08:30:15.0230000+00:00",
                  "EndDate": "2021-12-08T10:20:15.0230000+00:00",
                  "UseType": "1",
                  "TagsToAssign": [
                    "Tag1",
                    "Tag2"
                  ],
                  "TagsToUnassign": [
                    "Tag3"
                  ],
                  "ParentsIds": [
                    "c128ed28-7a1b-43ae-a8b2-ddd23262f070",
                    "a04ba393-21de-4f84-b3f0-9ac61597be0b"
                  ],
                  "AssignedUsersMails": [
                    "user1@yopmail.com",
                    "user2@yopmail.com"
                  ],
                  "AssignedUsersPayIds": [
                    "425100",
                    "425200"
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update custom field values Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Get Custom Field Values",
        "description": "Get a list of custom field values from your Expensya account.",
        "operationId": "GetCustomFieldValues",
        "parameters": [
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the custom field.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "List of unique custom field value' identifiers seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "The value of the custom field value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reference",
            "in": "query",
            "description": "The reference of the custom field value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Bring only active custom field values.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get custom field values Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultCustomFieldValueResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "CustomField_Id": "string",
                      "Reference": "string",
                      "Value": "string",
                      "ExternalId": "string",
                      "IsActive": true,
                      "StartDate": "string",
                      "EndDate": "string",
                      "UseType": 1,
                      "CustomFieldValueTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ],
                      "ParentsIds": [
                        "string"
                      ]
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/customFields/": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Get Custom Fields",
        "description": "Get the list of custom fields.",
        "operationId": "GetCustomFields",
        "parameters": [
          {
            "name": "customFieldsIds",
            "in": "query",
            "description": "List of unique custom field identifiers seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get custom field Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultCustomFieldResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "FieldName": "string",
                      "DisplayLabelFR": "string",
                      "DisplayLabelEN": "string",
                      "TooltipFR": "string",
                      "TooltipEN": "string",
                      "FieldType": 0,
                      "CustomFieldUseType": 2,
                      "MaxLength": 0,
                      "MinValue": "string",
                      "MaxValue": "string",
                      "DefaultValue": "string",
                      "IsMandatory": true,
                      "IsActive": true,
                      "Categories_Id": "string",
                      "ExternalId": "string",
                      "CustomFieldParentId": "string"
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/expense/{expenseId}/image": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get Expense Image",
        "description": "This API returns the image of the expense as Stream. The image can be jpg, jpeg, png or pdf. The type of the image is mentioned in the expense object property \"FileType\".",
        "operationId": "GetExpenseImage",
        "parameters": [
          {
            "name": "expenseId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the expense.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Image Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExpenseExpenseIdImageGet200ApplicationJsonResponse"
                },
                "example": "string"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "The expensya token is invalid or has expired."
          },
          "403": {
            "description": "The expensya token has no right to get the image."
          },
          "404": {
            "description": "No image was found"
          }
        }
      }
    },
    "/api/export/expenses/{exportId}/": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Export Expenses",
        "description": "Export expenses on specified export format based on given filters.",
        "operationId": "ExportExpenses",
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the export.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the report related to the expenses.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the category related to the expenses.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseName",
            "in": "query",
            "description": "Name of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The start date with which we do the export based on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The end date with which we do the export based on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseStates",
            "in": "query",
            "description": "List of expenses state seperated by ',' : Validated = 3 ValidatedByAccountant = 4 Rejected = 99.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportStates",
            "in": "query",
            "description": "List of reports state related to the expenses seperated by ',' : Active = 0 Submitted = 2 Rejected = 3 Validated = 4 Closed = 5 ValidatedAndExported = 6",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIds",
            "in": "query",
            "description": "List of unique identifiers of the expenses' owners seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMail",
            "in": "query",
            "description": "List of e-mails of the expenses' owners seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportIds",
            "in": "query",
            "description": "List of unique identifiers of the reports related tp expenses by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseIds",
            "in": "query",
            "description": "List of unique identifiers of the expense seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "Report name related to the expenses.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportIdShort",
            "in": "query",
            "description": "Internal identifier of the expenses' report. ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFilterType",
            "in": "query",
            "description": "Format - enum. Indicates the target of date filters: InvoiceDate = 1 ValidationDate = 2 AccountingValidationDate = 3 SubmissionDate = 4 CreationDate = 6.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "payId",
            "in": "query",
            "description": "Serial of the owner of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payId2",
            "in": "query",
            "description": "First analytical axis of the owner of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payId3",
            "in": "query",
            "description": "Second analytical axis of the owner of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountingPeriod",
            "in": "query",
            "description": "The accounting period of the expenses.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeReceipts",
            "in": "query",
            "description": "Indicates if the expenses receipts should be added to the export.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseUseTypes",
            "in": "query",
            "description": "List of expense use type seperated by ',' : Invoice = 1 Advance = 2 Purchase = 4 Subscription = 8 MissionOrder = 16.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archiveExpenses",
            "in": "query",
            "description": "Indicates if the reports related to the expenses will be archived, applied only for expenses related to validated or validatedAndExported reports.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Export Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultExportResponse"
                },
                "example": {
                  "ResultItem": {
                    "FileUrl": "string",
                    "FileExtension": "string",
                    "FileName": "string"
                  },
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/export/report/{reportId}/pdf/": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Export Report",
        "description": "Export report as pdf.",
        "operationId": "PrintMission",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the report to export.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultExportResponse"
                },
                "example": {
                  "ResultItem": {
                    "FileUrl": "string",
                    "FileExtension": "string",
                    "FileName": "string"
                  },
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/exports/": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Get Export Formats",
        "description": "Get a list of export formats.",
        "operationId": "ExportFormats",
        "parameters": [
          {
            "name": "isForExpenses",
            "in": "query",
            "description": "Bring only expenses export formats, if false brings report export formats.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exportType",
            "in": "query",
            "description": "Format - enum. Indicates the type of export: InvoiceAndPurchase = 1 Advance = 2 Balance = 4.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Print Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListExportFormatResponse"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "Extension": "string",
                      "CodePath": "string",
                      "MissionExport": true,
                      "InvoicesExport": true,
                      "AutoExport": true,
                      "LastAutoExportDate": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/projects/": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Add Projects",
        "description": "Add new projects to your Expensya account.",
        "operationId": "AddProjects",
        "parameters": [
          {
            "name": "shouldUpdateValidators",
            "in": "query",
            "description": "Update project validators.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of project inputs to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrUpdateProjectInputArray"
              },
              "example": [
                {
                  "HasBillable": "true",
                  "StartDate": "2018-06-04T08:30:15.0230000+00:00",
                  "EndDate": "2020-06-04T08:30:15.0230000+00:00",
                  "IsActive": "true",
                  "Address": "Random address",
                  "ZipCode": null,
                  "City": "Paris",
                  "ExternalId": "Ext1",
                  "Name": "MyFirstProject ",
                  "ProjectRef": "ProjectReference1",
                  "Validator_Id": "31e74d4f-0aaf-4cfc-be6b-167212a95080",
                  "ValidatorMail": "validator@yopmail.com",
                  "ClientName": "François",
                  "ForAllCompany": "true",
                  "IsBillableDefaultValue": "true",
                  "Currency": "EUR",
                  "ExtraData": null,
                  "ProjectUseType": "1",
                  "AffectedUsersPayIds": [
                    "Paris",
                    "Lyon"
                  ],
                  "AffectedUsersMails": [
                    "user1@yopmail.com",
                    "user2@yopmail.com"
                  ],
                  "TagsToAssign": [
                    "Paris"
                  ],
                  "TagsToUnassign": [
                    "Lyon"
                  ],
                  "ProjectValidators": [
                    {
                      "Mail": "user3@yopmail.com",
                      "MinimumAmount": "15.00"
                    }
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Projects Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update Projects",
        "description": "Update projects already added in your Expensya account.",
        "operationId": "UpdateProjects",
        "parameters": [
          {
            "name": "shouldUpdateValidators",
            "in": "query",
            "description": "Update project validators.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of project inputs to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrUpdateProjectInputArray"
              },
              "example": [
                {
                  "HasBillable": "true",
                  "StartDate": "2018-06-04T08:30:15.0230000+00:00",
                  "EndDate": "2020-06-04T08:30:15.0230000+00:00",
                  "IsActive": "true",
                  "Address": "Random address",
                  "ZipCode": null,
                  "City": "Paris",
                  "ExternalId": "Ext1",
                  "Name": "MyFirstProject ",
                  "ProjectRef": "ProjectReference1",
                  "Validator_Id": "31e74d4f-0aaf-4cfc-be6b-167212a95080",
                  "ValidatorMail": "validator@yopmail.com",
                  "ClientName": "François",
                  "ForAllCompany": "true",
                  "IsBillableDefaultValue": "true",
                  "Currency": "EUR",
                  "ExtraData": null,
                  "ProjectUseType": "1",
                  "AffectedUsersPayIds": [
                    "Paris",
                    "Lyon"
                  ],
                  "AffectedUsersMails": [
                    "user1@yopmail.com",
                    "user2@yopmail.com"
                  ],
                  "TagsToAssign": [
                    "Paris"
                  ],
                  "TagsToUnassign": [
                    "Lyon"
                  ],
                  "ProjectValidators": [
                    {
                      "Mail": "user3@yopmail.com",
                      "MinimumAmount": "15.00"
                    }
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Projects Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/receipt/": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Add Reciept",
        "description": "Add a new expense to your Expensya account.",
        "operationId": "AddReciept",
        "requestBody": {
          "description": "Input of the receipt to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReceiptInputWithUserId"
              },
              "example": {
                "UserId": "e24895f3-215b-4340-82de-7e8676e4fd7d",
                "ReceiptContent": "f/lX7ufeUSGE+Ws1KNUg6wGE+Ws1KNUg6ws1KNUg",
                "ReceiptName": "Invoice",
                "FileType": "jpeg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Reciept Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/revokeUserToken/": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "summary": "Revoke Token",
        "description": "Revoke your token.",
        "operationId": "RevokeUserToken",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Revoke Token Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/tag/": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Add Tag",
        "description": "Add a new tag to your Expensya account.",
        "operationId": "AddTag",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the tag to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTagInput"
              },
              "example": {
                "Name": "Paris",
                "Description": "this is a group of Paris users",
                "PayIdsStr": "{\"PayId2\":\"Paris\"}",
                "TagType": "1",
                "UseType": "2",
                "IsActive": "false"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Tag Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/tag/{tagId}/": {
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update Tag",
        "description": "Update a tag already added in your Expensya account",
        "operationId": "UpdateTag",
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the tag to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the tag to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagInput"
              },
              "example": {
                "Name": "Lyon",
                "PayIdsStr": "{\"PayId2\":\"Lyon\"}",
                "UseType": "2",
                "IsActive": "false"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Tag Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/tags/": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Assign Tags",
        "description": "Assign tags to an already added elements in your Expensya account.",
        "operationId": "AssignTags",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the tags to assign or unassign.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagsToAssignOrUnassignInput"
              },
              "example": {
                "ExistingTagsToAssign": [
                  "string"
                ],
                "ExistingTagsToUnassign": [
                  "string"
                ],
                "ElementsToTag": [
                  "string"
                ],
                "ElementsType": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assign Tags Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get Tags",
        "description": "Get a list of tags with paging.",
        "operationId": "GetTagsWithPaging",
        "parameters": [
          {
            "name": "elementIds",
            "in": "query",
            "description": "List of unique identifiers of the tagged elements (Invoice, Project...) seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagsIds",
            "in": "query",
            "description": "List of unique identifiers of the tags seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Bring only active tags.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tagPayIdsDefinition",
            "in": "query",
            "description": "PayIds which define the tag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the tag.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagType",
            "in": "query",
            "description": "Format - enum. Type of the tag : Tag = 1 SimpleTag = 2.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "useType",
            "in": "query",
            "description": "Format - enum. Use Type of the tag : Invoice = 2 Mileage = 4 Purchase = 8 Subscription = 16 Mission = 32 User = 64  Balance = 128.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tagUseTypeToExclude",
            "in": "query",
            "description": "Format - enum. Use Type of the tag to exclude : Invoice = 2 Mileage = 4 Purchase = 8 Subscription = 16 Mission = 32 User = 64  Balance = 128.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bringDeletedItems",
            "in": "query",
            "description": "Bring deleted items.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : Name = 1 State = 2 (default value = Name).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Tags Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultTagResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "Description": "string",
                      "CreationDate": "string",
                      "IsActive": true,
                      "TagType": 1,
                      "DefinitionStr": "string",
                      "UseType": 2
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/tags/state/": {
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update Tags State",
        "description": "Update the state of an already added tags in your Expensya account.",
        "operationId": "UpdateUsersTagsState",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of usersTags state inputs to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagsStateInput"
              },
              "example": {
                "TagsNames": [
                  "string"
                ],
                "TagsState": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Users Tags state Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListBaseResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/trip": {
      "post": {
        "tags": [
          "Trips"
        ],
        "summary": "Add Trip",
        "description": "Add a trip to your Expensya account.",
        "operationId": "AddTrip",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the trip to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Trip"
              },
              "example": {
                "ExternalId": "string",
                "Name": "string",
                "StartDate": "string",
                "EndDate": "string",
                "Destination": "string",
                "Description": "string",
                "UserMail": "string",
                "CustomDataFields": [
                  {
                    "Id": "string",
                    "Label": "string",
                    "Value": "string",
                    "ENLabel": "string",
                    "FRLabel": "string"
                  }
                ],
                "Bookings": [
                  {
                    "ExpenseId": "string",
                    "Label": "string",
                    "BookingLink": "string",
                    "ExpenseType": 0,
                    "State": "string",
                    "BookingState": 0,
                    "Price": {
                      "Currency": "string",
                      "Amount": 0,
                      "Breakdowns": [
                        {
                          "Type": "string",
                          "Amount": 0,
                          "Currency": "string"
                        }
                      ]
                    },
                    "OriginDestinations": [
                      {
                        "Segments": [
                          {
                            "Departure": {
                              "Location": {
                                "Type": "string",
                                "Name": "string",
                                "Address": {
                                  "StreetName": "string",
                                  "CountryName": "string",
                                  "CountryCode": "string",
                                  "CityName": "string",
                                  "CityCode": "string"
                                }
                              },
                              "DateTime": "string",
                              "DateTimeValue": "string"
                            },
                            "Arrival": {
                              "Location": {
                                "Type": "string",
                                "Name": "string",
                                "Address": {
                                  "StreetName": "string",
                                  "CountryName": "string",
                                  "CountryCode": "string",
                                  "CityName": "string",
                                  "CityCode": "string"
                                }
                              },
                              "DateTime": "string",
                              "DateTimeValue": "string"
                            },
                            "Carrier": {
                              "Code": "string",
                              "Name": "string"
                            },
                            "Provider": {
                              "Code": "string",
                              "Name": "string"
                            },
                            "BookingClass": "string"
                          }
                        ]
                      }
                    ],
                    "RouteNumber": [
                      "string"
                    ],
                    "Vehicle": {
                      "Type": "string",
                      "Name": "string"
                    },
                    "PickUp": {
                      "Location": {
                        "Type": "string",
                        "Name": "string",
                        "Address": {
                          "StreetName": "string",
                          "CountryName": "string",
                          "CountryCode": "string",
                          "CityName": "string",
                          "CityCode": "string"
                        }
                      },
                      "DateTime": "string",
                      "DateTimeValue": "string"
                    },
                    "DropOff": {
                      "Location": {
                        "Type": "string",
                        "Name": "string",
                        "Address": {
                          "StreetName": "string",
                          "CountryName": "string",
                          "CountryCode": "string",
                          "CityName": "string",
                          "CityCode": "string"
                        }
                      },
                      "DateTime": "string",
                      "DateTimeValue": "string"
                    },
                    "CheckIn": "string",
                    "CheckInValue": "string",
                    "CheckOut": "string",
                    "CheckOutValue": "string",
                    "Location": {
                      "Type": "string",
                      "Name": "string",
                      "Address": {
                        "StreetName": "string",
                        "CountryName": "string",
                        "CountryCode": "string",
                        "CityName": "string",
                        "CityCode": "string"
                      }
                    },
                    "StarRating": "string"
                  }
                ],
                "ProjectId": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opeartion Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddEntityResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/trip/{tripId}": {
      "delete": {
        "tags": [
          "Trips"
        ],
        "summary": "Delete Trip",
        "description": "Delete an already added trip in your Expensya account.",
        "operationId": "DeleteTrip",
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "description": "Unique identifier of the trip.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opeartion Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Trips"
        ],
        "summary": "Update Trip",
        "description": "Update an already added trip in your Expensya account.",
        "operationId": "UpdateTrip",
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "description": "Unique identifier of the trip.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the trip to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Trip"
              },
              "example": {
                "ExternalId": "string",
                "Name": "string",
                "StartDate": "string",
                "EndDate": "string",
                "Destination": "string",
                "Description": "string",
                "UserMail": "string",
                "CustomDataFields": [
                  {
                    "Id": "string",
                    "Label": "string",
                    "Value": "string",
                    "ENLabel": "string",
                    "FRLabel": "string"
                  }
                ],
                "Bookings": [
                  {
                    "ExpenseId": "string",
                    "Label": "string",
                    "BookingLink": "string",
                    "ExpenseType": 0,
                    "State": "string",
                    "BookingState": 0,
                    "Price": {
                      "Currency": "string",
                      "Amount": 0,
                      "Breakdowns": [
                        {
                          "Type": "string",
                          "Amount": 0,
                          "Currency": "string"
                        }
                      ]
                    },
                    "OriginDestinations": [
                      {
                        "Segments": [
                          {
                            "Departure": {
                              "Location": {
                                "Type": "string",
                                "Name": "string",
                                "Address": {
                                  "StreetName": "string",
                                  "CountryName": "string",
                                  "CountryCode": "string",
                                  "CityName": "string",
                                  "CityCode": "string"
                                }
                              },
                              "DateTime": "string",
                              "DateTimeValue": "string"
                            },
                            "Arrival": {
                              "Location": {
                                "Type": "string",
                                "Name": "string",
                                "Address": {
                                  "StreetName": "string",
                                  "CountryName": "string",
                                  "CountryCode": "string",
                                  "CityName": "string",
                                  "CityCode": "string"
                                }
                              },
                              "DateTime": "string",
                              "DateTimeValue": "string"
                            },
                            "Carrier": {
                              "Code": "string",
                              "Name": "string"
                            },
                            "Provider": {
                              "Code": "string",
                              "Name": "string"
                            },
                            "BookingClass": "string"
                          }
                        ]
                      }
                    ],
                    "RouteNumber": [
                      "string"
                    ],
                    "Vehicle": {
                      "Type": "string",
                      "Name": "string"
                    },
                    "PickUp": {
                      "Location": {
                        "Type": "string",
                        "Name": "string",
                        "Address": {
                          "StreetName": "string",
                          "CountryName": "string",
                          "CountryCode": "string",
                          "CityName": "string",
                          "CityCode": "string"
                        }
                      },
                      "DateTime": "string",
                      "DateTimeValue": "string"
                    },
                    "DropOff": {
                      "Location": {
                        "Type": "string",
                        "Name": "string",
                        "Address": {
                          "StreetName": "string",
                          "CountryName": "string",
                          "CountryCode": "string",
                          "CityName": "string",
                          "CityCode": "string"
                        }
                      },
                      "DateTime": "string",
                      "DateTimeValue": "string"
                    },
                    "CheckIn": "string",
                    "CheckInValue": "string",
                    "CheckOut": "string",
                    "CheckOutValue": "string",
                    "Location": {
                      "Type": "string",
                      "Name": "string",
                      "Address": {
                        "StreetName": "string",
                        "CountryName": "string",
                        "CountryCode": "string",
                        "CityName": "string",
                        "CityCode": "string"
                      }
                    },
                    "StarRating": "string"
                  }
                ],
                "ProjectId": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opeartion Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/userProjects/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get User Projects",
        "description": "Get a list of projects'assignments.",
        "operationId": "GetUserProjects",
        "parameters": [
          {
            "name": "userIds",
            "in": "query",
            "description": "List of unique users' identifiers seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectIds",
            "in": "query",
            "description": "List of unique projects' identifiers seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. Sort the list by : StartDate = 1, EndDate = 2 (default value = StartDate).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Projects Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultUserProjectResponse"
                },
                "example": {
                  "List": [
                    {
                      "UserProject": {
                        "User_Id": "string",
                        "ExternalId": "string",
                        "Project_Id": "string",
                        "ElementType": 1,
                        "ExtraData": "string",
                        "HasBillable": true,
                        "StartDate": "string",
                        "EndDate": "string",
                        "IsActive": true,
                        "MileageConfigurationsStr": "string",
                        "Address": "string",
                        "ZipCode": "string",
                        "City": "string"
                      },
                      "User": {
                        "Id": "string",
                        "LastName": "string",
                        "FirstName": "string",
                        "Address": "string",
                        "PhoneNumber": "string",
                        "Mail": "string",
                        "MailAlias": "string",
                        "ZipCode": "string",
                        "FaxNumber": "string",
                        "CreationDate": "string",
                        "CountryCode": "string",
                        "Language": "string",
                        "Currency": "string",
                        "LocalCurrency": "string",
                        "LocalCountry": "string",
                        "CanCreateCategories": true,
                        "Manager_Id": "string",
                        "AccountantMail": "string",
                        "AccountantPayId": "string",
                        "UserType": 0,
                        "UserState": 0,
                        "PayId": "string",
                        "PayId2": "string",
                        "PayId3": "string",
                        "PayId4": "string",
                        "PayId5": "string",
                        "PayId6": "string",
                        "ManagerFirstName": "string",
                        "ManagerLastName": "string",
                        "ManagerMail": "string",
                        "ManagerPayId": "string",
                        "ManagerUserState": 0,
                        "Reviewer_Id": "string",
                        "ReviewerFirstName": "string",
                        "ReviewerLastName": "string",
                        "ReviewerMail": "string",
                        "ReviewerPayId": "string",
                        "ReviewerUserState": 0,
                        "JobTitle": "string",
                        "Vendor": "string",
                        "MileageConfigurationsStr": "string",
                        "PerDiemConfigName": "string",
                        "UserRole": 0,
                        "ConfigurationSettingsStr": "string",
                        "ConfigurationSettingsReference": "string",
                        "IKRatesId": "string",
                        "IKRatesReference": "string",
                        "LastLoginDate": "string",
                        "LastSignInDate": "string",
                        "Validators": [
                          {
                            "Mail": "string",
                            "FirstName": "string",
                            "LastName": "string",
                            "MinimumAmount": 0,
                            "SkipConditions": 0,
                            "RulesExternalIdsToAssign": [
                              "string"
                            ]
                          }
                        ],
                        "UserSimpleTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "UserTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "RestrictedTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ]
                      },
                      "Project": {
                        "Id": "string",
                        "HasBillable": true,
                        "StartDate": "string",
                        "EndDate": "string",
                        "IsActive": true,
                        "MileageConfigurationsStr": "string",
                        "Address": "string",
                        "ZipCode": "string",
                        "City": "string",
                        "ExternalId": "string",
                        "Name": "string",
                        "ProjectRef": "string",
                        "Validator_Id": "string",
                        "Reviewer_Id": "string",
                        "ClientName": "string",
                        "ForAllCompany": true,
                        "IsBillableDefaultValue": true,
                        "PayId2": "string",
                        "Currency": "string",
                        "ExtraData": "string",
                        "ProjectUseType": 1,
                        "CustomField_Id": "string",
                        "CustomFieldParent_Id": "string",
                        "CategoriesIdsStr": "string",
                        "ValidatorFullName": "string",
                        "ValidatorMail": "string",
                        "ReviewerFullName": "string",
                        "ReviewerMail": "string",
                        "IsReadOnly": true,
                        "ProjectTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "ProjectValidators": [
                          {
                            "Mail": "string",
                            "MinimumAmount": 0,
                            "SkipConditions": 0,
                            "RulesExternalIdsToAssign": [
                              "string"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/{validatorMail}/reports/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get Validator Reports",
        "description": "Get the list of validator's reports with paging.",
        "operationId": "ValidatorReports",
        "parameters": [
          {
            "name": "validatorMail",
            "in": "path",
            "description": "The e-mail of the report's validator.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportName",
            "in": "query",
            "description": "The name of the report.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportStartDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The start date with which we do the research based on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportEndDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The end date with which we do the research base on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportStates",
            "in": "query",
            "description": "List of report states seperated by ',' : Active = 0 Submitted = 2 Rejected = 3 Closed = 5 ValidatedAndExported = 6 Reimbursed = 7 PreSubmitted = 8 InValidation = 50.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportIdShort",
            "in": "query",
            "description": "The report inetrnal identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the report's owner.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerPayId2",
            "in": "query",
            "description": "First analytical axis of the report's owner.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the project that the report is linked to.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTimeOffset",
            "in": "query",
            "description": "Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. The UTC time offset of the report (in minutes).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFilterType",
            "in": "query",
            "description": "Format - enum. Indicates the target of date filters: InvoiceDate = 1 ValidationDate = 2 AccountingValidationDate = 3 SubmissionDate = 4 PurchaseAccountingValidationDate = 5",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : DateCreation = 11 StartDate = 13 Name = 20 State = 30 Value = 31 InvoicesCount = 32 InvoicesCount = 32 UserFirstName = 40 UserLastName = 41 Budget = 50 ValueToReimburse = 51 ClientCode = 53 IdShort = 54 (default value = DateCreation).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Reports Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultReportResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "DateCreation": "string",
                      "Budget": 0,
                      "State": 0,
                      "User_Id": "string",
                      "UserLastName": "string",
                      "UserFirstName": "string",
                      "UserMail": "string",
                      "Manager_Id": "string",
                      "Accountant_Id": "string",
                      "Reviewer_Id": "string",
                      "InvoicesCount": 0,
                      "Value": 0,
                      "ValueToReimburse": 0,
                      "ValueInLocalCurrency": 0,
                      "ValueToReimburseInLocalCurrency": 0,
                      "StartDate": "string",
                      "EndDate": "string",
                      "UserCurrency": "string",
                      "UserLocalCurrency": "string",
                      "IdShort": "string",
                      "CurrentValidator_Id": "string",
                      "InvoiceAttachedFilesCount": 0,
                      "ReportTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ]
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/categories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Categories",
        "description": "Get the list of categories with paging.",
        "operationId": "GetCategoriesV2",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Format - guid. Format - guid. Unique identifier of the cetgory.",
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "categoryName",
            "in": "query",
            "description": "The category name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costAccount",
            "in": "query",
            "description": "Unique identifier of the cetgory.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vatAccount",
            "in": "query",
            "description": "Unique identifier of the cetgory.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Bring only active categories.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bringSubcategories",
            "in": "query",
            "description": "Bring subcategories.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "parentCategoryId",
            "in": "query",
            "description": "Format - guid. Format - guid. The unique identifier of the category's parent (Bring subcategories must be set to true).",
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. Format - enum. List can be sorted by : Name_FR = 5, Name_EN = 10, CostAccount = 15, IsActive = 20, VatAccount = 25 (default value = Name_FR).",
            "schema": {
              "type": "integer",
              "format": "enum"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Categories Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultCategoryResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "EntityName": "string",
                      "Parent": "string",
                      "Description": "string",
                      "PrimitiveCategories": "string",
                      "ParentCategory_Id": "string",
                      "IsActive": true,
                      "IsActiveAsDefault": true,
                      "CostAccount": "string",
                      "VatAccount": "string",
                      "ExtraData": "string",
                      "CreationDate": "string",
                      "VatClaimRate": 0,
                      "VatClaimRates": "string",
                      "CategoryUseType": 1,
                      "ExternalId": "string",
                      "IsReadOnly": true,
                      "CategoryTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ],
                      "VatAccounts": [
                        {
                          "Account": "string",
                          "VatRate": 0,
                          "VatClaimRate": 0
                        }
                      ]
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/contact/": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Add Contact",
        "description": "Add a new contact to your Expensya account.",
        "operationId": "AddContact",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the contact to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              },
              "example": {
                "ContactFirstName": "string",
                "ContactLastName": "string",
                "ContactRole": "string",
                "ContactMail": "string",
                "ContactPhoneNumber": "string",
                "ContactAddress": "string",
                "ContactZipCode": "string",
                "ContactCity": "string",
                "ContactCountryCode": "string",
                "IsCoworker": true,
                "IsShared": true,
                "ContactCompanyName": "string",
                "ContactCompanyMail": "string",
                "ContactCompanyWebSite": "string",
                "ContactCompanyPhoneNumber": "string",
                "ContactCompanyAddress": "string",
                "ContactCompanyZipCode": "string",
                "ContactCompanyCity": "string",
                "ContactCompanyCountryCode": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Contact Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/contact/{contactId}/": {
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update Contact",
        "description": "Update an already added contact in your Expensya account.",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the contact.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the contact to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateInput"
              },
              "example": {
                "ContactFirstName": "First Name",
                "ContactLastName": "Last Name",
                "ContactAddress": "46  Faubourg Saint Honoré",
                "ContactZipCode": null,
                "IsCoworker": "true",
                "IsShared": "false",
                "ContactCompanyWebSite": "https://companywebsite.random",
                "ContactCompanyPhoneNumber": "53.25.74.63720",
                "ContactCompanyAddress": "15 Faubourg Saint Honoré",
                "ContactCompanyZipCode": "75018"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Contact Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/expenses/": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Get Expenses",
        "description": "Get a list of expenses with paging.",
        "operationId": "GetExpensesWithPagingV2",
        "parameters": [
          {
            "name": "reportId",
            "in": "query",
            "description": "Format - guid. Unique report identifier related to the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Format - guid. Unique category identifier related to the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseName",
            "in": "query",
            "description": "Name of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The start date with which we do the research based on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The end date with which we do the research based on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportState",
            "in": "query",
            "description": "Format - enum. State of the expense's report: Submitted = 2, Rejected = 3, Validated = 4, Closed = 5, ValidatedAndExported = 6, PreSubmitted = 8, InValidation = 50.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isReimbusable",
            "in": "query",
            "description": "Specifies if the expense is to reimburse.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "valueInCurrency",
            "in": "query",
            "description": "Format - decimal. Value in currency of the owner of the expense.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Format - guid. Unique owner identifier of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerMail",
            "in": "query",
            "description": "Owner mail of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerPayId",
            "in": "query",
            "description": "Serial of the owner of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerPayId2",
            "in": "query",
            "description": "First analytical axis of the owner of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerPayId3",
            "in": "query",
            "description": "Second analytical axis of the owner of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerPayId4",
            "in": "query",
            "description": "Third analytical axis of the owner of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerPayId5",
            "in": "query",
            "description": "Fourth analytical axis of the owner of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerPayId6",
            "in": "query",
            "description": "Fifth analytical axis of the owner of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Format - guid. Unique project identifier related to the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isBillable",
            "in": "query",
            "description": "Specifies if the expense is billable to client.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "dateFilterType",
            "in": "query",
            "description": "Format - enum. Indicates the target of date filters: InvoiceDate = 1 ValidationDate = 2 AccountingValidationDate = 3 SubmissionDate = 4 CreationDate = 6.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchantCountries",
            "in": "query",
            "description": "List of merchant countries related to the expense seperated by ',' ex: 'FR,ES'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currencies",
            "in": "query",
            "description": "List of currencies related to the expense seperated by ',' ex: 'EUR,USD'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "description": "File type of the expense : pdf, jpg ...",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportIdShort",
            "in": "query",
            "description": "Internal identifier of the expenses' report.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseUseTypes",
            "in": "query",
            "description": "List of expense use types seperated by ',' : Invoice = 1 Advance = 2 Purchase = 4 Subscription = 8 MissionOrder = 16.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "Format - guid. Unique supplier identifier of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseIds",
            "in": "query",
            "description": "List of unique identifiers of the expense seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantName",
            "in": "query",
            "description": "Merchant name of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vatCode",
            "in": "query",
            "description": "Merchant VAT number of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "valueHTInExpenseCurrency",
            "in": "query",
            "description": "Format - decimal. Excluding tax amount of the expense.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "vatRate",
            "in": "query",
            "description": "Format - decimal. VAT rate of the expense.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "vatValue",
            "in": "query",
            "description": "Format - decimal. VAT value of the expense.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "reportsIds",
            "in": "query",
            "description": "List of unique reports' identifiers related to the expense seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTimeOffset",
            "in": "query",
            "description": "Format - int32. The UTC offset of the expense (in minutes).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names separated by ','. You can get the list of untagged expenses, by providing 'Null' as value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseObjectsToReturn",
            "in": "query",
            "description": "Format - enum. Enum flag attribute which define objects to return : None = 1 VAT = 2 BrokenRule = 4 PaymentInstrument = 8 Vehicle = 16 Guest = 32 Category = 64 Project = 128 Report = 256 Tag = 512 AccountingData = 1024",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : DateCreation = 11 DateInvoice = 12 Name = 20 Value = 30 ValueInCurrency = 31 HasPhoto = 40 State = 60 Category = 70 (default value = DateCreation).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Expenses Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultExpenseResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "Value": 0,
                      "ValueToReimburse": 0,
                      "ReimbursementRate": 0,
                      "Description": "string",
                      "UseType": 1,
                      "DateCreation": "string",
                      "DateInvoice": "string",
                      "DateUtcOffset": 0,
                      "HasPhoto": true,
                      "Currency": "string",
                      "ValueInCurrency": 0,
                      "ValueInLocalCurrency": 0,
                      "MerchantInvoiceId": "string",
                      "MerchantCountry": "string",
                      "MerchantCity": "string",
                      "MerchantZipCode": "string",
                      "MerchantAddress": "string",
                      "MerchantName": "string",
                      "MerchantVatNumber": "string",
                      "Units": 0,
                      "State": 0,
                      "VAT": {
                        "Rates": [
                          0
                        ],
                        "Values": [
                          0
                        ],
                        "VatFreeAmount": 0,
                        "Tips": 0
                      },
                      "VATAvgRate": 0,
                      "AttachedFilesCount": 0,
                      "ToReimburse": true,
                      "IsBillable": true,
                      "CustomFields": [
                        {
                          "Key": "string",
                          "Value": "string"
                        }
                      ],
                      "FileType": "string",
                      "DefaultRate": 0,
                      "CreditSource_Id": "string",
                      "User_Id": "string",
                      "Project": {
                        "Id": "string",
                        "HasBillable": true,
                        "StartDate": "string",
                        "EndDate": "string",
                        "IsActive": true,
                        "MileageConfigurationsStr": "string",
                        "Address": "string",
                        "ZipCode": "string",
                        "City": "string",
                        "ExternalId": "string",
                        "Name": "string",
                        "ProjectRef": "string",
                        "Validator_Id": "string",
                        "Reviewer_Id": "string",
                        "ClientName": "string",
                        "ForAllCompany": true,
                        "IsBillableDefaultValue": true,
                        "PayId2": "string",
                        "Currency": "string",
                        "ExtraData": "string",
                        "ProjectUseType": 1,
                        "CustomField_Id": "string",
                        "CustomFieldParent_Id": "string",
                        "CategoriesIdsStr": "string",
                        "ValidatorFullName": "string",
                        "ValidatorMail": "string",
                        "ReviewerFullName": "string",
                        "ReviewerMail": "string",
                        "IsReadOnly": true,
                        "ProjectTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "ProjectValidators": [
                          {
                            "Mail": "string",
                            "MinimumAmount": 0,
                            "SkipConditions": 0,
                            "RulesExternalIdsToAssign": [
                              "string"
                            ]
                          }
                        ]
                      },
                      "Report": {
                        "Id": "string",
                        "Name": "string",
                        "DateCreation": "string",
                        "Budget": 0,
                        "State": 0,
                        "User_Id": "string",
                        "UserLastName": "string",
                        "UserFirstName": "string",
                        "UserMail": "string",
                        "Manager_Id": "string",
                        "Accountant_Id": "string",
                        "Reviewer_Id": "string",
                        "InvoicesCount": 0,
                        "Value": 0,
                        "ValueToReimburse": 0,
                        "ValueInLocalCurrency": 0,
                        "ValueToReimburseInLocalCurrency": 0,
                        "StartDate": "string",
                        "EndDate": "string",
                        "UserCurrency": "string",
                        "UserLocalCurrency": "string",
                        "IdShort": "string",
                        "CurrentValidator_Id": "string",
                        "InvoiceAttachedFilesCount": 0,
                        "ReportTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ]
                      },
                      "PaymentInstrument": {
                        "Name": "string",
                        "Description": "string",
                        "IsActive": true,
                        "InstrumentType": 0,
                        "AccountType": 0,
                        "LastDigits": "string",
                        "CardKey": "string",
                        "JournalCode": "string",
                        "Auxiliary": "string",
                        "AccountNumber": "string"
                      },
                      "Vehicle": {
                        "Name": "string",
                        "DateCreation": "string",
                        "CreationYearKm": 0,
                        "CreationYearMiles": 0,
                        "LastYearDistanceKm": 0,
                        "LastUpdatedYear": 0,
                        "VehicleType": 1,
                        "InternalVehicleType": 0,
                        "CurrentValidator_Id": "string",
                        "LastValidatorReminderDate": "string",
                        "Comments": "string",
                        "State": 0,
                        "ExternalId": "string",
                        "AdministrativePower": 0,
                        "IsActive": true,
                        "AttachedFilesCount": 0,
                        "CreationType": 0,
                        "StartDate": "string",
                        "EndDate": "string"
                      },
                      "TransactionsSumValue": 0,
                      "TransactionsSumInCurrency": 0,
                      "TransactionsSumInLocalCurrency": 0,
                      "PerdiemCountry": "string",
                      "PerdiemCalculationPeriodType": 0,
                      "PerDiemType": 0,
                      "Category": {
                        "Id": "string",
                        "Name": "string",
                        "EntityName": "string",
                        "Parent": "string",
                        "Description": "string",
                        "PrimitiveCategories": "string",
                        "ParentCategory_Id": "string",
                        "IsActive": true,
                        "IsActiveAsDefault": true,
                        "CostAccount": "string",
                        "VatAccount": "string",
                        "ExtraData": "string",
                        "CreationDate": "string",
                        "VatClaimRate": 0,
                        "VatClaimRates": "string",
                        "CategoryUseType": 1,
                        "ExternalId": "string",
                        "IsReadOnly": true,
                        "CategoryTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ]
                      },
                      "AccountingData": {
                        "CostAccount": "string",
                        "VatAccount": "string",
                        "TTCAccount": "string",
                        "VATClaimRate": "string",
                        "ValueTTC": "string",
                        "ValueTTCInCurrency": "string",
                        "ValueTTCInLocalCurrency": "string",
                        "ValueToReimburse": "string",
                        "ValueToReimburseInCurrency": "string",
                        "ValueToReimburseInLocalCurrency": "string",
                        "ValueHT": "string",
                        "ValueHTInCurrency": "string",
                        "ValueHTInLocalCurrency": "string",
                        "ValueHTToReimburse": "string",
                        "ValueHTToReimburseInCurrency": "string",
                        "ValueHTToReimburseInLocalCurrency": "string",
                        "TotalVATClaimValue": "string",
                        "TotalVATClaimValueInCurrency": "string",
                        "TotalVATClaimValueInLocalCurrency": "string",
                        "TotalVATValue": "string",
                        "TotalVATValueInCurrency": "string",
                        "TotalVATValueInLocalCurrency": "string",
                        "VAT1Rate": "string",
                        "VAT1Value": "string",
                        "VAT1Base": "string",
                        "VAT1Code": "string",
                        "VAT1ClaimRate": "string",
                        "ValueToReimburseForVAT1": "string",
                        "ValueToReimburseInCurrencyForVAT1": "string",
                        "ValueToReimburseInLocalCurrencyForVAT1": "string",
                        "VAT2Rate": "string",
                        "VAT2Value": "string",
                        "VAT2Base": "string",
                        "VAT2Code": "string",
                        "VAT2ClaimRate": "string",
                        "ValueToReimburseForVAT2": "string",
                        "ValueToReimburseInCurrencyForVAT2": "string",
                        "ValueToReimburseInLocalCurrencyForVAT2": "string",
                        "VAT3Rate": "string",
                        "VAT3Value": "string",
                        "VAT3Base": "string",
                        "VAT3Code": "string",
                        "VAT3ClaimRate": "string",
                        "ValueToReimburseForVAT3": "string",
                        "ValueToReimburseInCurrencyForVAT3": "string",
                        "ValueToReimburseInLocalCurrencyForVAT3": "string",
                        "VAT4Rate": "string",
                        "VAT4Value": "string",
                        "VAT4Base": "string",
                        "VAT4Code": "string",
                        "VAT4ClaimRate": "string",
                        "ValueToReimburseForVAT4": "string",
                        "ValueToReimburseInCurrencyForVAT4": "string",
                        "ValueToReimburseInLocalCurrencyForVAT4": "string"
                      },
                      "BrokenRules": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "DescriptionForCredit": "string",
                          "Budget": 0,
                          "RuleType": 0,
                          "Currency": "string",
                          "AllowExceptions": true,
                          "RuleElementType": 0,
                          "IntervalType": 0,
                          "Language": "string",
                          "RuleCurrenciesWithBudget": {
                            "Item1": "string",
                            "Item2": 0
                          },
                          "ForAllCompany": true
                        }
                      ],
                      "IsMileage": true,
                      "CategoryExtraDataStr": "string",
                      "Guests": [
                        {
                          "Mail": "string",
                          "FullName": "string",
                          "Id": "string",
                          "IsCoworker": true
                        }
                      ],
                      "SubStatus": 0,
                      "OwnerPayId": "string",
                      "OwnerPayId2": "string",
                      "OwnerPayId3": "string",
                      "OwnerPayId4": "string",
                      "OwnerPayId5": "string",
                      "OwnerPayId6": "string",
                      "ExpenseTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ]
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/projects/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Projects",
        "description": "Get a list of projects.",
        "operationId": "GetProjectsV2",
        "parameters": [
          {
            "name": "projectName",
            "in": "query",
            "description": "The name of the project.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectIds",
            "in": "query",
            "description": "List of unique projects' identifiers seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validatorName",
            "in": "query",
            "description": "The name of the project validator.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectReferenceOrExternalId",
            "in": "query",
            "description": "The reference or the external id of the project.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bringAllProjects",
            "in": "query",
            "description": "Bring the projects that are not shared with all employees.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "projectUseType",
            "in": "query",
            "description": "Format - enum. Project use type flag: Invoice = 0x1 Purchase = 0x2 Subscription = 0x4 Advance = 0x8 MissionOrder = 0x10 MileageOnly = 0x20 InvoiceOnly = 0x40 VirtualCard = 0x80.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Bring only active projects.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customFieldsIds",
            "in": "query",
            "description": "List of unique custom fields' identifiers seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The date of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Format - guid. The unique identifier of expense's owner.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. Sort the list by : StartDate = 11 EndDate = 12 Name = 20 ProjectRef = 21 FullName = 22 Validator = 23 ClientName = 24 Value = 25 (default value = FullName).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Projects Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultProjectResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "HasBillable": true,
                      "StartDate": "string",
                      "EndDate": "string",
                      "IsActive": true,
                      "MileageConfigurationsStr": "string",
                      "Address": "string",
                      "ZipCode": "string",
                      "City": "string",
                      "ExternalId": "string",
                      "Name": "string",
                      "ProjectRef": "string",
                      "Validator_Id": "string",
                      "Reviewer_Id": "string",
                      "ClientName": "string",
                      "ForAllCompany": true,
                      "IsBillableDefaultValue": true,
                      "PayId2": "string",
                      "Currency": "string",
                      "ExtraData": "string",
                      "ProjectUseType": 1,
                      "CustomField_Id": "string",
                      "CustomFieldParent_Id": "string",
                      "CategoriesIdsStr": "string",
                      "ValidatorFullName": "string",
                      "ValidatorMail": "string",
                      "ReviewerFullName": "string",
                      "ReviewerMail": "string",
                      "IsReadOnly": true,
                      "ProjectTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ],
                      "ProjectValidators": [
                        {
                          "Mail": "string",
                          "MinimumAmount": 0,
                          "SkipConditions": 0,
                          "RulesExternalIdsToAssign": [
                            "string"
                          ]
                        }
                      ]
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/projects/states/": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update Projects State",
        "description": "Batch update list of projects state.",
        "operationId": "UpdateProjectStateV2",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of project state inputs to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectStateInput"
              },
              "example": {
                "ProjectsIds": [
                  "215b95f3-215b-4340-82de-7e8676e4fd7d",
                  "4fd795f3-4340-82de-215b-7e8676e4fd7d"
                ],
                "ProjectState": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Project State Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/quickexpense/{userId}/": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Add QuickExpense",
        "description": "Add a new expense to your Expensya account.",
        "operationId": "AddQuickExpenseV2",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the user that expense will be linked to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the quick expense.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickExpenseInput"
              },
              "example": {
                "FileToSend": "o6wxMz+zMQVPxDo06QNxMz+zMQVPxxMz+zMQVPxDo06QNOZAzMQVPxDo06QNO",
                "Title": "Invoice",
                "TransactionAmount": "2000.00",
                "VatRates": "80",
                "VatAmounts": "120.00",
                "CurrencyCode": "EUR",
                "TransactionDate": "2018-06-04T08:30:15.0230000+00:00",
                "MerchantName": "Merchant",
                "LocationCountry": "FR",
                "LocationCity": "Paris",
                "MerchantExpenseId": "e24895f3-215b-4340-82de-7e8676e4fd7d",
                "IsEncrypted": "true",
                "ExpenseUseType": "1",
                "PaymentTypeCode": "16541",
                "FileType": "pdf"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Quick Expense Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/refreshUserToken/": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "summary": "Refresh Token",
        "description": "Refresh your token.",
        "operationId": "RefreshUserTokenV2",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh Token Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                },
                "example": {
                  "Id": "string",
                  "UserToken": "string",
                  "LastName": "string",
                  "FirstName": "string",
                  "Address": "string",
                  "City": "string",
                  "PhoneNumber": "string",
                  "Mail": "string",
                  "ZipCode": "string",
                  "MailAlias": "string",
                  "Language": "string",
                  "CreationDate": "string",
                  "CountryCode": "string",
                  "FaxNumber": "string",
                  "Currency": "string",
                  "ShemaVersion": 0,
                  "Company_Id": "string",
                  "Login_Id": "string",
                  "Manager_Id": "string",
                  "UserType": 0,
                  "UserRole": 0,
                  "UserTokenDurationSeconds": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/report/{reportId}/updateStatus/": {
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Update Report Status",
        "description": "Update the status of a report.",
        "operationId": "UpdateReportStatus",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the report.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the report status to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUpdateStatusInput"
              },
              "example": {
                "Operation": 0,
                "Message": "string",
                "InvoiceIdsToReject": [
                  "string"
                ],
                "AccountingPeriod": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Report Status Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/report/history/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get Report History",
        "description": "Get a report history.",
        "operationId": "GetReportHistoryV2",
        "parameters": [
          {
            "name": "reportId",
            "in": "query",
            "description": "Unique Identifier of the report.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Report History Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListEventResponse"
                },
                "example": {
                  "ResultItem": [
                    {
                      "EventDate": "string",
                      "EventType": 1,
                      "UserId": "string",
                      "UserLastName": "string",
                      "UserFirstName": "string",
                      "UserMail": "string",
                      "Description": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/reports/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get Reports",
        "description": "Get the list of reports with paging.",
        "operationId": "CompanyReports",
        "parameters": [
          {
            "name": "reportName",
            "in": "query",
            "description": "The name of the report.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportStartDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The start date with which we do the research based on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportEndDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The end date with which we do the research base on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportStates",
            "in": "query",
            "description": "List of report states seperated by ',' : Active = 0 Submitted = 2 Rejected = 3 Closed = 5 ValidatedAndExported = 6 Reimbursed = 7 PreSubmitted = 8 InValidation = 50.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportIdShort",
            "in": "query",
            "description": "The report inetrnal identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the report's owner.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerPayId2",
            "in": "query",
            "description": "First analytical axis of the report's owner.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the project that the report is linked to.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTimeOffset",
            "in": "query",
            "description": "Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. The UTC time offset of the report (in minutes).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags'names seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFilterType",
            "in": "query",
            "description": "Format - enum. Indicates the target of date filters: InvoiceDate = 1 ValidationDate = 2 AccountingValidationDate = 3 SubmissionDate = 4 PurchaseAccountingValidationDate = 5",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reportObjectsToReturn",
            "in": "query",
            "description": "Format - enum. Enum flag attribute which define objects to return : None = 1 Tag = 512",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : DateCreation = 11 StartDate = 13 Name = 20 State = 30 Value = 31 InvoicesCount = 32 InvoicesCount = 32 UserFirstName = 40 UserLastName = 41 Budget = 50 ValueToReimburse = 51 ClientCode = 53 IdShort = 54 (default value = DateCreation).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Reports Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultReportResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "DateCreation": "string",
                      "Budget": 0,
                      "State": 0,
                      "User_Id": "string",
                      "UserLastName": "string",
                      "UserFirstName": "string",
                      "UserMail": "string",
                      "Manager_Id": "string",
                      "Accountant_Id": "string",
                      "Reviewer_Id": "string",
                      "InvoicesCount": 0,
                      "Value": 0,
                      "ValueToReimburse": 0,
                      "ValueInLocalCurrency": 0,
                      "ValueToReimburseInLocalCurrency": 0,
                      "StartDate": "string",
                      "EndDate": "string",
                      "UserCurrency": "string",
                      "UserLocalCurrency": "string",
                      "IdShort": "string",
                      "CurrentValidator_Id": "string",
                      "InvoiceAttachedFilesCount": 0,
                      "ReportTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ]
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/user/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Invite User",
        "description": "Add user to your Expensya account.",
        "operationId": "InviteUserV2",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the user to invite.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInviteInput"
              },
              "example": {
                "LastName": "last Name",
                "FirstName": "First Name",
                "Mail": "user@yopmail.com",
                "PayId2": "Paris",
                "Language": "FR",
                "LocalCurrency": "EUR",
                "LocalCountry": "FR",
                "ManagerMail": null,
                "ManagerId": "d7a8df44-2d80-467d-925e-f381eb257f42",
                "ReviewerMail": "validator@yopmail.com",
                "ReviewerId": null,
                "UserType": 1,
                "UserRole": 0,
                "AdditionalValidators": [
                  {
                    "Mail": "user2@yopmail.com",
                    "MinimumAmount": 150
                  }
                ],
                "TagsToAssign": [
                  "Paris"
                ],
                "ShouldValidateUser": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invite User Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddEntityResult"
                },
                "example": {
                  "Id": "string",
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/userProjects/": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Add Users Projects",
        "description": "Add a list of project assignations",
        "operationId": "AddUserProjects",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the user project to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserProjectInputArray"
              },
              "example": [
                {
                  "ProjectExternalId": "ProjectExternalId",
                  "HasBillable": "true",
                  "StartDate": "2018-06-04T08:30:15.0230000+00:00",
                  "EndDate": "2018-08-04T08:30:15.0230000+00:00",
                  "IsActive": "true",
                  "Address": null,
                  "ZipCode": "15646",
                  "City": "Paris",
                  "UserMail": "user@yopmail.com",
                  "UserPayId": "Paris"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Users Projects Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update Users Projects",
        "description": "Update a list of projects'assignments.",
        "operationId": "UpdateUserProjects",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the user project to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProjectInputArray"
              },
              "example": [
                {
                  "ExternalId": "User_Project_ExternalId",
                  "ProjectExternalId": "ProjectExternalId",
                  "HasBillable": "true",
                  "StartDate": "2018-06-04T08:30:15.0230000+00:00",
                  "EndDate": "2018-08-04T08:30:15.0230000+00:00",
                  "UserMail": "user@yopmail.com"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Users Projects Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users",
        "description": "Get the list of users with paging.",
        "operationId": "CompanyUsers",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Format - guid. Unique identifier of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "The first name of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "The last name of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mail",
            "in": "query",
            "description": "The mail of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payId",
            "in": "query",
            "description": "Serial the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mailOrNameOrPayId",
            "in": "query",
            "description": "Mail or name or serial of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Format - enum. Enum flag attribute which is the type of the user : Employee = 1 Administrator = 2 Accountant = 4",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Format - enum. Enum flag attribute which is the user state : Validated = 1 Active = 2.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reviewerId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the user's first validator.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewerName",
            "in": "query",
            "description": "Name of the user's first validator.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "managerId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the user's second validator.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "managerName",
            "in": "query",
            "description": "Name of the user's second validator.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIds",
            "in": "query",
            "description": "List of unique identifiers of the users seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userMails",
            "in": "query",
            "description": "List of e-mails of the users seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "simpleTagsNames",
            "in": "query",
            "description": "List of simple tags' names seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : CreationDate = 11 LastLoginDate = 12 LastName = 20 FirstName = 21 ManagerLastName = 30 ManagerFirstName = 31 UserState = 40 UserType = 41 Mail = 50 Address = 60 PhoneNumber = 61 PayId = 62 LocalCurrency = 63 (default value = CreationDate).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Users Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultUserResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "LastName": "string",
                      "FirstName": "string",
                      "Address": "string",
                      "PhoneNumber": "string",
                      "Mail": "string",
                      "MailAlias": "string",
                      "ZipCode": "string",
                      "FaxNumber": "string",
                      "CreationDate": "string",
                      "CountryCode": "string",
                      "Language": "string",
                      "Currency": "string",
                      "LocalCurrency": "string",
                      "LocalCountry": "string",
                      "CanCreateCategories": true,
                      "Manager_Id": "string",
                      "AccountantMail": "string",
                      "AccountantPayId": "string",
                      "UserType": 0,
                      "UserState": 0,
                      "PayId": "string",
                      "PayId2": "string",
                      "PayId3": "string",
                      "PayId4": "string",
                      "PayId5": "string",
                      "PayId6": "string",
                      "ManagerFirstName": "string",
                      "ManagerLastName": "string",
                      "ManagerMail": "string",
                      "ManagerPayId": "string",
                      "ManagerUserState": 0,
                      "Reviewer_Id": "string",
                      "ReviewerFirstName": "string",
                      "ReviewerLastName": "string",
                      "ReviewerMail": "string",
                      "ReviewerPayId": "string",
                      "ReviewerUserState": 0,
                      "JobTitle": "string",
                      "Vendor": "string",
                      "MileageConfigurationsStr": "string",
                      "PerDiemConfigName": "string",
                      "UserRole": 0,
                      "ConfigurationSettingsStr": "string",
                      "ConfigurationSettingsReference": "string",
                      "IKRatesId": "string",
                      "IKRatesReference": "string",
                      "LastLoginDate": "string",
                      "LastSignInDate": "string",
                      "Validators": [
                        {
                          "Mail": "string",
                          "FirstName": "string",
                          "LastName": "string",
                          "MinimumAmount": 0,
                          "SkipConditions": 0,
                          "RulesExternalIdsToAssign": [
                            "string"
                          ]
                        }
                      ],
                      "UserSimpleTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ],
                      "UserTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ],
                      "RestrictedTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ]
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/users/state/": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update Users Status",
        "description": "Update the status of an Expensya account users.",
        "operationId": "UpdateUsersStateV2",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of user state inputs to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserStateInputArray"
              },
              "example": [
                {
                  "UserId": "e24895f3-215b-4340-82de-7e8676e4fd7d",
                  "Operation": 4
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Users State Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListUpdateUserResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "UserResponse": {
                        "Id": "string",
                        "LastName": "string",
                        "FirstName": "string",
                        "Address": "string",
                        "PhoneNumber": "string",
                        "Mail": "string",
                        "MailAlias": "string",
                        "ZipCode": "string",
                        "FaxNumber": "string",
                        "CreationDate": "string",
                        "CountryCode": "string",
                        "Language": "string",
                        "Currency": "string",
                        "LocalCurrency": "string",
                        "LocalCountry": "string",
                        "CanCreateCategories": true,
                        "Manager_Id": "string",
                        "AccountantMail": "string",
                        "AccountantPayId": "string",
                        "UserType": 0,
                        "UserState": 0,
                        "PayId": "string",
                        "PayId2": "string",
                        "PayId3": "string",
                        "PayId4": "string",
                        "PayId5": "string",
                        "PayId6": "string",
                        "ManagerFirstName": "string",
                        "ManagerLastName": "string",
                        "ManagerMail": "string",
                        "ManagerPayId": "string",
                        "ManagerUserState": 0,
                        "Reviewer_Id": "string",
                        "ReviewerFirstName": "string",
                        "ReviewerLastName": "string",
                        "ReviewerMail": "string",
                        "ReviewerPayId": "string",
                        "ReviewerUserState": 0,
                        "JobTitle": "string",
                        "Vendor": "string",
                        "MileageConfigurationsStr": "string",
                        "PerDiemConfigName": "string",
                        "UserRole": 0,
                        "ConfigurationSettingsStr": "string",
                        "ConfigurationSettingsReference": "string",
                        "IKRatesId": "string",
                        "IKRatesReference": "string",
                        "LastLoginDate": "string",
                        "LastSignInDate": "string",
                        "Validators": [
                          {
                            "Mail": "string",
                            "FirstName": "string",
                            "LastName": "string",
                            "MinimumAmount": 0,
                            "SkipConditions": 0,
                            "RulesExternalIdsToAssign": [
                              "string"
                            ]
                          }
                        ],
                        "UserSimpleTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "UserTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "RestrictedTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ]
                      },
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/auth/sso/": {
      "get": {
        "tags": [
          "SSO"
        ],
        "summary": "External Login",
        "description": "Login to Expensya Portal",
        "operationId": "InitSSO",
        "parameters": [
          {
            "name": "mail",
            "in": "query",
            "description": "Mail of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Init SSO Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitSSOResponse"
                },
                "example": {
                  "RedirectionUri": "string",
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/categories/": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Add Categories",
        "description": "Add categories to Expensya account.",
        "operationId": "AddCategories",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of categories inputs to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCategoryInputArray"
              },
              "example": [
                {
                  "Name": "Name",
                  "Description": "Description",
                  "IsActive": "true",
                  "ParentCategory_Id": "64b8f921-4004-49e9-aeb4-d60380d4c923",
                  "IsActiveAsDefault": "false",
                  "CostAccount": "123456",
                  "VatAccount": null,
                  "VatClaimRate": 10,
                  "VatClaimRates": "{\"2018\":10,\"2019\":20,\"2020\":30} ",
                  "CategoryUseType": "1",
                  "ExternalId": "ExternalId",
                  "TagsToAssign": [
                    "Tag1",
                    "Tag2"
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Categories Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update Categories",
        "description": "Update categories in Expensya account.",
        "operationId": "UpdateCategories",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of categories inputs to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryInputArray"
              },
              "example": [
                {
                  "Id": "77a8f921-4004-49e9-aeb4-d60380d4c923",
                  "Name": "Name",
                  "Description": "Description",
                  "IsActive": "true",
                  "ParentCategory_Id": "64b8f921-4004-49e9-aeb4-d60380d4c923",
                  "IsActiveAsDefault": "false",
                  "CostAccount": "123456",
                  "VatAccount": null,
                  "VatClaimRate": 10,
                  "VatClaimRates": "{\"2018\":10,\"2019\":20,\"2020\":30} ",
                  "CategoryUseType": "1",
                  "ExternalId": "ExternalId",
                  "TagsToAssign": [
                    "Tag1",
                    "Tag2"
                  ],
                  "TagsToUnassign": [
                    "Tag3",
                    "Tag4"
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Categories Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/image/url/": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get Image URL",
        "description": "Get link of the image",
        "operationId": "GetImageUrl",
        "parameters": [
          {
            "name": "imageId",
            "in": "query",
            "description": "Format - guid.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Image Url Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultImageUrlResponse"
                },
                "example": {
                  "ResultItem": {
                    "imageUrl": "string",
                    "imageId": "string",
                    "validationCode": "string"
                  },
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/mileageConfigurations/": {
      "get": {
        "tags": [
          "Mileage Configurations"
        ],
        "summary": "Get Mileage Configurations",
        "description": "Get list of mileage configurations.",
        "operationId": "GetMileageConfiguration",
        "parameters": [
          {
            "name": "vehicleType",
            "in": "query",
            "description": "Format - enum. Type of the vehicule : Car = 1, Moped = 2, Scooter = 3, Motocyle = 4, Bicycle = 5",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Format - int32. The year of the mileage configuration ex: \"2020\" or \"2019\". For URSSAF configurations, the starting year is 2015.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bringURSSAFConfigurations",
            "in": "query",
            "description": "Return the mileage configurations given by the URSSAF when it's equal to true.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mileageAllowanceReference",
            "in": "query",
            "description": "Mileage allowance's reference of the mileage configuraton to be return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Mileage Configurations Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultMileagesConfigurationResponse"
                },
                "example": {
                  "ResultItem": {
                    "MileageTable": {
                      "RateType": 1,
                      "ListOfDistances": [
                        0
                      ],
                      "ListOfPowers": [
                        0
                      ],
                      "Configuration": [
                        [
                          {
                            "Rate": 0,
                            "ConstantValue": 0
                          }
                        ]
                      ]
                    },
                    "MileageConfigurationCurrency": "string",
                    "MileageConfigSource": 0
                  },
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/users/invite/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Invite User (Deprecated)",
        "description": "Add user to your Expensya account.",
        "operationId": "InviteUser",
        "parameters": [
          {
            "name": "userToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invite User Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                },
                "example": {
                  "UserId": "string",
                  "LoginId": "string",
                  "ResultCode": 0,
                  "UserMessage": "string",
                  "Details": "string",
                  "IsSuccess": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/users/listCompanyUsers/paging/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "List Company Users (Deprecated)",
        "description": "Get a list of users with paging.",
        "operationId": "ListCompanyUsersWithPaging",
        "parameters": [
          {
            "name": "userToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFilters"
              },
              "example": {
                "User_Id": "string",
                "UserFirstNameSubString": "string",
                "UserLastNameSubString": "string",
                "UserMailSubString": "string",
                "UserPayIdSubString": "string",
                "UserPayId2SubString": "string",
                "UserPayId3SubString": "string",
                "UserPayId4SubString": "string",
                "UserPayId5SubString": "string",
                "UserPayId6SubString": "string",
                "FiltrerOnUserPayId6Empty": true,
                "UserMailOrNameOrPayIdSubString": "string",
                "UserType": 0,
                "UserState": 0,
                "Manager_Id": "string",
                "ManagerNameSubString": "string",
                "Reviewer_Id": "string",
                "ReviewerNameSubString": "string",
                "ListTagDefinitionStr": [
                  "string"
                ],
                "ListTagsWithSimpleTag": [
                  "string"
                ],
                "ListSimpleTag": [
                  "string"
                ],
                "UserIds": [
                  "string"
                ],
                "UserMails": [
                  "string"
                ],
                "StartDate": "string",
                "EndDate": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get Users Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultUserResult"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "LastName": "string",
                      "FirstName": "string",
                      "Address": "string",
                      "PhoneNumber": "string",
                      "Mail": "string",
                      "MailAlias": "string",
                      "ZipCode": "string",
                      "FaxNumber": "string",
                      "CreationDate": "string",
                      "CountryCode": "string",
                      "Language": "string",
                      "Currency": "string",
                      "LocalCurrency": "string",
                      "LocalCountry": "string",
                      "CanCreateCategories": true,
                      "ShemaVersion": 0,
                      "ExternalUserType": 0,
                      "Company_Id": "string",
                      "Manager_Id": "string",
                      "Login_Id": "string",
                      "AccountantMail": "string",
                      "AccountantPayId": "string",
                      "AccountantId": "string",
                      "UserType": 0,
                      "UserState": 0,
                      "IsTest": true,
                      "SyncVersion": 0,
                      "PayId": "string",
                      "PayId2": "string",
                      "PayId3": "string",
                      "PayId4": "string",
                      "PayId5": "string",
                      "PayId6": "string",
                      "ManagerFirstName": "string",
                      "ManagerLastName": "string",
                      "ManagerMail": "string",
                      "ManagerPayId": "string",
                      "ManagerUserState": 0,
                      "Reviewer_Id": "string",
                      "ReviewerFirstName": "string",
                      "ReviewerLastName": "string",
                      "ReviewerMail": "string",
                      "ReviewerPayId": "string",
                      "ReviewerUserState": 0,
                      "JobTitle": "string",
                      "UserValidators": [
                        {
                          "Mail": "string",
                          "FirstName": "string",
                          "LastName": "string",
                          "FullName": "string",
                          "Id": "string",
                          "Validator_Id": "string",
                          "NextValidator_Id": "string",
                          "MinimumAmount": 0,
                          "ElementType": 0,
                          "Element_Id": "string",
                          "SkipConditions": 0
                        }
                      ],
                      "Vendor": "string",
                      "MileageConfigurationsStr": "string",
                      "IKRates_Id": "string",
                      "PerDiemConfiguration_Id": "string",
                      "PerDiemConfigName": "string",
                      "IKRatesReference": "string",
                      "ConfigurationSettings_Id": "string",
                      "UserRole": 0,
                      "ConfigurationSettingsStr": "string",
                      "ConfigurationSettingsReference": "string",
                      "LastLoginDate": "string",
                      "SessionIdsStr": "string",
                      "LastSignInDate": "string",
                      "Tags": [
                        {
                          "DefinitionStr": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 0,
                          "UseType": 0,
                          "PartnerOrCompany_Id": "string",
                          "Id": "string",
                          "SyncVersion": 0,
                          "CreationVersion": 0,
                          "SyncState": 0
                        }
                      ],
                      "SimpleTags": [
                        {
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 0,
                          "UseType": 0,
                          "PartnerOrCompany_Id": "string",
                          "Id": "string",
                          "SyncVersion": 0,
                          "CreationVersion": 0,
                          "SyncState": 0
                        }
                      ],
                      "SimpleTagsNames": [
                        "string"
                      ],
                      "Groups": [
                        {
                          "DefinitionStr": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 0,
                          "UseType": 0,
                          "PartnerOrCompany_Id": "string",
                          "Id": "string",
                          "SyncVersion": 0,
                          "CreationVersion": 0,
                          "SyncState": 0
                        }
                      ],
                      "IsTOSSigned": true,
                      "ExtraData": "string",
                      "FullName": "string",
                      "ManagerFullName": "string",
                      "ReviewerFullName": "string"
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/users/updateUser/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update User (Deprecated)",
        "description": "Update user already added in your Expensya account.",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "userToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shouldUpdateValidators",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update User Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                },
                "example": {
                  "User": {
                    "Id": "string",
                    "Mail": "string",
                    "PayId": "string",
                    "PayId2": "string",
                    "PayId3": "string",
                    "PayId4": "string",
                    "PayId5": "string",
                    "PayId6": "string",
                    "CreationDate": "string",
                    "CanCreateCategories": true,
                    "ShemaVersion": 0,
                    "Company_Id": "string",
                    "Currency": "string",
                    "Manager_Id": "string",
                    "Login_Id": "string",
                    "UserType": 0,
                    "UserRole": 0,
                    "IsTest": true,
                    "SyncVersion": 0,
                    "UserState": 0,
                    "ExternalLoginProviderStr": "string",
                    "InvalidLoginCount": 0,
                    "LastInvalidLoginDate": "string",
                    "LocalCurrency": "string",
                    "LocalCountry": "string",
                    "Vendor": "string",
                    "MileageConfigurationsStr": "string",
                    "IKRates_Id": "string",
                    "ConfigurationSettings_Id": "string",
                    "PerDiemConfiguration_Id": "string",
                    "ConfigSyncVersion": 0,
                    "ExtraData": "string",
                    "SessionIdsStr": "string",
                    "ExternalUserType": 0,
                    "JobTitle": "string",
                    "AcceptedServiceTerms": true,
                    "LastLoginDate": "string",
                    "LastCollaboratorReminderDate": "string",
                    "LastSignInDate": "string",
                    "Address": "string",
                    "ZipCode": "string",
                    "PhoneNumber": "string",
                    "FaxNumber": "string",
                    "IsTOSSigned": true,
                    "Reviewer_Id": "string",
                    "Updated": true,
                    "PasswordHash": "string",
                    "FullName": "string",
                    "ConfigurationSettingsStr": "string",
                    "LastName": "string",
                    "FirstName": "string",
                    "Language": "string",
                    "City": "string",
                    "CountryCode": "string",
                    "UseGps": true,
                    "MailAlias": "string"
                  },
                  "ResultCode": 0,
                  "UserMessage": "string",
                  "Details": "string",
                  "IsSuccess": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/user/{userId}/": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Update user already added in your Expensya account.",
        "operationId": "UpdateUserV2",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the user to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shouldUpdateValidators",
            "in": "query",
            "description": "Specifies if the validators of the user should be updated or not.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the user to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateInput"
              },
              "example": {
                "LastName": "last Name",
                "FirstName": "First Name",
                "Manager_Id": "d7a8df44-2d80-467d-925e-f381eb257f42",
                "ReviewerMail": "validator@yopmail.com",
                "UserType": 1,
                "TagsToAssign": [
                  "Paris"
                ],
                "TagsToUnassign": [
                  "Lyon"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update User Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/contact/{contactId}/": {
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete Contact",
        "description": "Delete an already added contact in your Expensya account.",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "Format - guid. Unique identifier of the contact.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Contact Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/contacts/": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get Contacts",
        "description": "Get list of contacts with paging",
        "operationId": "GetContactsWithPaging",
        "parameters": [
          {
            "name": "contactId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the company.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the user linked to the contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyContactId",
            "in": "query",
            "description": "Format - guid. Unique identifier of the contact company.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactName",
            "in": "query",
            "description": "Name of the contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactMail",
            "in": "query",
            "description": "Mail of the contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Country code of the contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isCoworker",
            "in": "query",
            "description": "Is coworker contact.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isShared",
            "in": "query",
            "description": "Is shared contact.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Is active contact.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contactCompanyName",
            "in": "query",
            "description": "Name of the contact company.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactFunction",
            "in": "query",
            "description": "Function of the contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : CreationDate  = 11, LastName = 20, FirstName = 21 (default value = CreationDate).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Export Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultContactWithContactCompanyResponse"
                },
                "example": {
                  "List": [
                    {
                      "ContactResponse": {
                        "Id": "string",
                        "User_Id": "string",
                        "ContactCompany_Id": "string",
                        "FirstName": "string",
                        "LastName": "string",
                        "Role": "string",
                        "Mail": "string",
                        "PhoneNumber": "string",
                        "Address": "string",
                        "ZipCode": "string",
                        "City": "string",
                        "CountryCode": "string",
                        "IsCoworker": true,
                        "IsShared": true,
                        "CreationDate": "string",
                        "ExtraData": "string",
                        "IsActive": true,
                        "FullName": "string",
                        "ContactInfo": "string"
                      },
                      "ContactCompanyResponse": {
                        "Name": "string",
                        "Mail": "string",
                        "WebSite": "string",
                        "PhoneNumber": "string",
                        "Address": "string",
                        "ZipCode": "string",
                        "City": "string",
                        "CountryCode": "string",
                        "CreationDate": "string",
                        "User_Id": "string"
                      }
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/delegatedAccess/": {
      "post": {
        "tags": [
          "Delegated Access"
        ],
        "summary": "Add Delegated Access",
        "description": "Add delegated access from a user to another.",
        "operationId": "AddDelegatedAccess",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the delegated access to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelegatedAccessInput"
              },
              "example": {
                "BeneficiaryMail": "string",
                "OwnerMail": "string",
                "BeneficiaryRights": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add delegated access Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "get": {
        "tags": [
          "Delegated Access"
        ],
        "summary": "Get Delegated Access",
        "description": "Get delegated access from your Expensya account.",
        "operationId": "GetDelegatedAccess",
        "parameters": [
          {
            "name": "ownerMail",
            "in": "query",
            "description": "The owner mail of the delegated access.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beneficiaryMail",
            "in": "query",
            "description": "The beneficiary mail of the delegated access.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerFirstNameOrLastName",
            "in": "query",
            "description": "The first name or the last name of the owner of the delegated access.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beneficiaryFirstNameOrLastName",
            "in": "query",
            "description": "The first name or the last name of the beneficiary of the delegated access.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beneficiaryRights",
            "in": "query",
            "description": "Format - enum. Format - enum. Enum flag attribute which defines the beneficiary rights : Manager = 2, Employee = 4 ReadOnly = 8",
            "schema": {
              "type": "integer",
              "format": "enum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. Format - enum. List can be sorted by : DelegationType = 10 OwnerName = 20 OwnerMail = 30 BeneficairyName = 40 BeneficairyMail = 50 (default value = OwnerName) .",
            "schema": {
              "type": "integer",
              "format": "enum"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get delegated access Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultDelegatedAccessResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "BeneficiaryId": "string",
                      "Owner_Id": "string",
                      "BeneficiaryMail": "string",
                      "OwnerMail": "string",
                      "BeneficiaryRights": 0,
                      "OwnerFirstName": "string",
                      "OwnerLastName": "string",
                      "BeneficiaryFirstName": "string",
                      "BeneficiaryLastName": "string"
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "delete": {
        "tags": [
          "Delegated Access"
        ],
        "summary": "Delete Delegated Access",
        "description": "Delete an already added delegated access.",
        "operationId": "DeleteDelegatedAccess",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Unique identifiers of delegated access to delete seperated by ','.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete delegated access Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/delegatedAccess/{id}": {
      "put": {
        "tags": [
          "Delegated Access"
        ],
        "summary": "Update Delegated Access",
        "description": "Update an already added delegated access.",
        "operationId": "UpdateDelegatedAccess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Format - guid. Unique identifier of the delegated access to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the delegated access to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelegatedAccessInput"
              },
              "example": {
                "BeneficiaryMail": "string",
                "OwnerMail": "string",
                "BeneficiaryRights": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update delegated access Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/user/receipt/": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Scan Receipt",
        "description": "Add a new expense to your Expensya account.",
        "operationId": "ScanReceipt",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the receipt to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReceiptInput"
              },
              "example": {
                "ReceiptContent": "f/lX7ufeUSGE+Ws1KNUg6wGE+Ws1KNUg6ws1KNUg",
                "ReceiptName": "Invoice",
                "FileType": "pdf"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Scan Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v2/user/expenses/": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Get User Expenses",
        "description": "Get the list of user's expenses with paging",
        "operationId": "GetUserExpensesWithPaging",
        "parameters": [
          {
            "name": "userFunction",
            "in": "query",
            "description": "Format - enum. The user function of the caller : Employee = 0 Administrator = 1 Manager = 2 Accountant = 3.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Format - guid. Unique report identifier related to the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Format - guid. Unique category identifier related to the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseName",
            "in": "query",
            "description": "Name of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The start date with which we do the research based on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Format - date-time (as date-time in RFC3339). The end date with which we do the research base on dateFilterType.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportState",
            "in": "query",
            "description": "Format - enum. State of the expense's report.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expenseStates",
            "in": "query",
            "description": "List Of expenseStates seperated by ',' : Uploading = 0 Uploaded = 1 Ready = 2 Validated = 3 ValidatedByAccountant = 4 Rejected = 99.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isReimbusable",
            "in": "query",
            "description": "Specifies if the expense is to reimburse.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "valueInCurrency",
            "in": "query",
            "description": "Format - decimal. Value in currency of the owner of the expense.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Format - guid. Unique project identifier related to the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isBillable",
            "in": "query",
            "description": "Specifies if the expense is billable to client.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "dateFilterType",
            "in": "query",
            "description": "Format - enum. Indicates the target of date filters: InvoiceDate = 1 ValidationDate = 2 AccountingValidationDate = 3 SubmissionDate = 4 CreationDate = 6.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "merchantCountries",
            "in": "query",
            "description": "List of merchant countries related to the expense seperated by ',' ex: 'FR,ES'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currencies",
            "in": "query",
            "description": "List of currencies related to the expense seperated by ',' ex: 'EUR,USD'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "description": "File type of the expense : pdf, jpg ...",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportIdShort",
            "in": "query",
            "description": "Internal identifier of the expenses' report.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseUseTypes",
            "in": "query",
            "description": "List of expense use types seperated by ',' : Invoice = 1 Advance = 2 Purchase = 4 Subscription = 8 MissionOrder = 16.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "Format - guid. Unique supplier identifier of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseIds",
            "in": "query",
            "description": "List of unique identifiers of the expense seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantName",
            "in": "query",
            "description": "Merchant name of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vatCode",
            "in": "query",
            "description": "Merchant VAT number of the expense.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "valueHTInExpenseCurrency",
            "in": "query",
            "description": "Format - decimal. Excluding tax amount of the expense.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "vatRate",
            "in": "query",
            "description": "Format - decimal. VAT rate of the expense.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "vatValue",
            "in": "query",
            "description": "Format - decimal. VAT value of the expense.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "reportsIds",
            "in": "query",
            "description": "List of unique reports' identifiers related to the expense seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTimeOffset",
            "in": "query",
            "description": "Format - int32. The UTC offset of the expense.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tagsNames",
            "in": "query",
            "description": "List of tags' names separated by ','. You can get the list of untagged expenses, by providing 'Null' as value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseObjectsToReturn",
            "in": "query",
            "description": "Format - enum. Enum flag attribute which define objects to return : None = 1 VAT = 2 BrokenRule = 4 PaymentInstrument = 8 Vehicle = 16 Guest = 32 Category = 64 Project = 128 Report = 256 Tag = 512 AccountingData = 1024",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "getDuplicates",
            "in": "query",
            "description": "Return the duplicated expenses.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. List can be sorted by : DateCreation = 11 DateInvoice = 12 Name = 20 Value = 30 ValueInCurrency = 31 HasPhoto = 40 State = 60 Category = 70 (default value = DateCreation).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Expenses Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultExpenseResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "Value": 0,
                      "ValueToReimburse": 0,
                      "ReimbursementRate": 0,
                      "Description": "string",
                      "UseType": 1,
                      "DateCreation": "string",
                      "DateInvoice": "string",
                      "DateUtcOffset": 0,
                      "HasPhoto": true,
                      "Currency": "string",
                      "ValueInCurrency": 0,
                      "ValueInLocalCurrency": 0,
                      "MerchantInvoiceId": "string",
                      "MerchantCountry": "string",
                      "MerchantCity": "string",
                      "MerchantZipCode": "string",
                      "MerchantAddress": "string",
                      "MerchantName": "string",
                      "MerchantVatNumber": "string",
                      "Units": 0,
                      "State": 0,
                      "VAT": {
                        "Rates": [
                          0
                        ],
                        "Values": [
                          0
                        ],
                        "VatFreeAmount": 0,
                        "Tips": 0
                      },
                      "VATAvgRate": 0,
                      "AttachedFilesCount": 0,
                      "ToReimburse": true,
                      "IsBillable": true,
                      "CustomFields": [
                        {
                          "Key": "string",
                          "Value": "string"
                        }
                      ],
                      "FileType": "string",
                      "DefaultRate": 0,
                      "CreditSource_Id": "string",
                      "User_Id": "string",
                      "Project": {
                        "Id": "string",
                        "HasBillable": true,
                        "StartDate": "string",
                        "EndDate": "string",
                        "IsActive": true,
                        "MileageConfigurationsStr": "string",
                        "Address": "string",
                        "ZipCode": "string",
                        "City": "string",
                        "ExternalId": "string",
                        "Name": "string",
                        "ProjectRef": "string",
                        "Validator_Id": "string",
                        "Reviewer_Id": "string",
                        "ClientName": "string",
                        "ForAllCompany": true,
                        "IsBillableDefaultValue": true,
                        "PayId2": "string",
                        "Currency": "string",
                        "ExtraData": "string",
                        "ProjectUseType": 1,
                        "CustomField_Id": "string",
                        "CustomFieldParent_Id": "string",
                        "CategoriesIdsStr": "string",
                        "ValidatorFullName": "string",
                        "ValidatorMail": "string",
                        "ReviewerFullName": "string",
                        "ReviewerMail": "string",
                        "IsReadOnly": true,
                        "ProjectTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "ProjectValidators": [
                          {
                            "Mail": "string",
                            "MinimumAmount": 0,
                            "SkipConditions": 0,
                            "RulesExternalIdsToAssign": [
                              "string"
                            ]
                          }
                        ]
                      },
                      "Report": {
                        "Id": "string",
                        "Name": "string",
                        "DateCreation": "string",
                        "Budget": 0,
                        "State": 0,
                        "User_Id": "string",
                        "UserLastName": "string",
                        "UserFirstName": "string",
                        "UserMail": "string",
                        "Manager_Id": "string",
                        "Accountant_Id": "string",
                        "Reviewer_Id": "string",
                        "InvoicesCount": 0,
                        "Value": 0,
                        "ValueToReimburse": 0,
                        "ValueInLocalCurrency": 0,
                        "ValueToReimburseInLocalCurrency": 0,
                        "StartDate": "string",
                        "EndDate": "string",
                        "UserCurrency": "string",
                        "UserLocalCurrency": "string",
                        "IdShort": "string",
                        "CurrentValidator_Id": "string",
                        "InvoiceAttachedFilesCount": 0,
                        "ReportTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ]
                      },
                      "PaymentInstrument": {
                        "Name": "string",
                        "Description": "string",
                        "IsActive": true,
                        "InstrumentType": 0,
                        "AccountType": 0,
                        "LastDigits": "string",
                        "CardKey": "string",
                        "JournalCode": "string",
                        "Auxiliary": "string",
                        "AccountNumber": "string"
                      },
                      "Vehicle": {
                        "Name": "string",
                        "DateCreation": "string",
                        "CreationYearKm": 0,
                        "CreationYearMiles": 0,
                        "LastYearDistanceKm": 0,
                        "LastUpdatedYear": 0,
                        "VehicleType": 1,
                        "InternalVehicleType": 0,
                        "CurrentValidator_Id": "string",
                        "LastValidatorReminderDate": "string",
                        "Comments": "string",
                        "State": 0,
                        "ExternalId": "string",
                        "AdministrativePower": 0,
                        "IsActive": true,
                        "AttachedFilesCount": 0,
                        "CreationType": 0,
                        "StartDate": "string",
                        "EndDate": "string"
                      },
                      "TransactionsSumValue": 0,
                      "TransactionsSumInCurrency": 0,
                      "TransactionsSumInLocalCurrency": 0,
                      "PerdiemCountry": "string",
                      "PerdiemCalculationPeriodType": 0,
                      "PerDiemType": 0,
                      "Category": {
                        "Id": "string",
                        "Name": "string",
                        "EntityName": "string",
                        "Parent": "string",
                        "Description": "string",
                        "PrimitiveCategories": "string",
                        "ParentCategory_Id": "string",
                        "IsActive": true,
                        "IsActiveAsDefault": true,
                        "CostAccount": "string",
                        "VatAccount": "string",
                        "ExtraData": "string",
                        "CreationDate": "string",
                        "VatClaimRate": 0,
                        "VatClaimRates": "string",
                        "CategoryUseType": 1,
                        "ExternalId": "string",
                        "IsReadOnly": true,
                        "CategoryTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ]
                      },
                      "AccountingData": {
                        "CostAccount": "string",
                        "VatAccount": "string",
                        "TTCAccount": "string",
                        "VATClaimRate": "string",
                        "ValueTTC": "string",
                        "ValueTTCInCurrency": "string",
                        "ValueTTCInLocalCurrency": "string",
                        "ValueToReimburse": "string",
                        "ValueToReimburseInCurrency": "string",
                        "ValueToReimburseInLocalCurrency": "string",
                        "ValueHT": "string",
                        "ValueHTInCurrency": "string",
                        "ValueHTInLocalCurrency": "string",
                        "ValueHTToReimburse": "string",
                        "ValueHTToReimburseInCurrency": "string",
                        "ValueHTToReimburseInLocalCurrency": "string",
                        "TotalVATClaimValue": "string",
                        "TotalVATClaimValueInCurrency": "string",
                        "TotalVATClaimValueInLocalCurrency": "string",
                        "TotalVATValue": "string",
                        "TotalVATValueInCurrency": "string",
                        "TotalVATValueInLocalCurrency": "string",
                        "VAT1Rate": "string",
                        "VAT1Value": "string",
                        "VAT1Base": "string",
                        "VAT1Code": "string",
                        "VAT1ClaimRate": "string",
                        "ValueToReimburseForVAT1": "string",
                        "ValueToReimburseInCurrencyForVAT1": "string",
                        "ValueToReimburseInLocalCurrencyForVAT1": "string",
                        "VAT2Rate": "string",
                        "VAT2Value": "string",
                        "VAT2Base": "string",
                        "VAT2Code": "string",
                        "VAT2ClaimRate": "string",
                        "ValueToReimburseForVAT2": "string",
                        "ValueToReimburseInCurrencyForVAT2": "string",
                        "ValueToReimburseInLocalCurrencyForVAT2": "string",
                        "VAT3Rate": "string",
                        "VAT3Value": "string",
                        "VAT3Base": "string",
                        "VAT3Code": "string",
                        "VAT3ClaimRate": "string",
                        "ValueToReimburseForVAT3": "string",
                        "ValueToReimburseInCurrencyForVAT3": "string",
                        "ValueToReimburseInLocalCurrencyForVAT3": "string",
                        "VAT4Rate": "string",
                        "VAT4Value": "string",
                        "VAT4Base": "string",
                        "VAT4Code": "string",
                        "VAT4ClaimRate": "string",
                        "ValueToReimburseForVAT4": "string",
                        "ValueToReimburseInCurrencyForVAT4": "string",
                        "ValueToReimburseInLocalCurrencyForVAT4": "string"
                      },
                      "BrokenRules": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "DescriptionForCredit": "string",
                          "Budget": 0,
                          "RuleType": 0,
                          "Currency": "string",
                          "AllowExceptions": true,
                          "RuleElementType": 0,
                          "IntervalType": 0,
                          "Language": "string",
                          "RuleCurrenciesWithBudget": {
                            "Item1": "string",
                            "Item2": 0
                          },
                          "ForAllCompany": true
                        }
                      ],
                      "IsMileage": true,
                      "CategoryExtraDataStr": "string",
                      "Guests": [
                        {
                          "Mail": "string",
                          "FullName": "string",
                          "Id": "string",
                          "IsCoworker": true
                        }
                      ],
                      "SubStatus": 0,
                      "OwnerPayId": "string",
                      "OwnerPayId2": "string",
                      "OwnerPayId3": "string",
                      "OwnerPayId4": "string",
                      "OwnerPayId5": "string",
                      "OwnerPayId6": "string",
                      "ExpenseTags": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "Description": "string",
                          "CreationDate": "string",
                          "IsActive": true,
                          "TagType": 1,
                          "DefinitionStr": "string",
                          "UseType": 2
                        }
                      ]
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/customField/{customFieldId}/values/assignedUsers/": {
      "post": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Assign Users To Custom Field Values.",
        "description": "Add a list of users assignments to custom field values.",
        "operationId": "AssignUsersToCustomFieldValues",
        "parameters": [
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Format - guid. Format - guid. Format - guid. Format - guid. Format - guid. Format - guid. Unique identifier of the custom field.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inputs of the users to assign.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUserToCustomFieldValueInputArray"
              },
              "example": [
                {
                  "ExternalId": "ExternalId 1",
                  "HasBillable": "true",
                  "IsActive": true,
                  "StartDate": "2018-06-04T08:30:15.0230000+00:00",
                  "EndDate": "2018-08-04T08:30:15.0230000+00:00",
                  "UserMail": "user@yopmail.com",
                  "UserPayId": null
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assign Users To Custom Field Values Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Update Users Assignments To Custom Field Values",
        "description": "Update a list of users assignments to custom field values.",
        "operationId": "UpdateUserAssignmentsToCustomFieldValues",
        "parameters": [
          {
            "name": "customFieldId",
            "in": "path",
            "description": "Format - guid. Format - guid. Format - guid. Format - guid. Format - guid. Format - guid. Unique identifier of the custom field.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inputs of the users'assignments to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAssignmentToCustomFieldValueInputArray"
              },
              "example": [
                {
                  "Id": "570170d6-7f0a-4dcc-bddd-66e319d93fb9",
                  "ExternalId": "ExternalId 1",
                  "HasBillable": "true",
                  "IsActive": true,
                  "StartDate": "2018-06-04T08:30:15.0230000+00:00",
                  "EndDate": "2018-08-04T08:30:15.0230000+00:00",
                  "UserMail": "user@yopmail.com",
                  "UserPayId": null
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update User Assignments To Custom Field Values Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/customFieldValues/assignedUsers/": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Get Custom Field Values Assignments",
        "description": "Get a list of users assignments to custom field values.",
        "operationId": "GetCustomFieldValuesAssignments",
        "parameters": [
          {
            "name": "userIds",
            "in": "query",
            "description": "List of unique users' identifiers seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customFieldValueIds",
            "in": "query",
            "description": "List of unique custom field value'identifiers seperated by ','.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. The page number (default value = 0).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. Format - int32. The number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Format - enum. Format - enum. Format - enum. Format - enum. Format - enum. Format - enum. Sort the list by : StartDate = 1, EndDate = 2 (default value = StartDate).",
            "schema": {
              "type": "integer",
              "format": "enum"
            }
          },
          {
            "name": "isDesc",
            "in": "query",
            "description": "Order the list by desc or asc (default value = true).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Custom Field Values Assignments Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultCustomFieldValueAssignmentResponse"
                },
                "example": {
                  "List": [
                    {
                      "AssignmentOfUserToCustomFieldValue": {
                        "Id": "string",
                        "User_Id": "string",
                        "CustomFieldValueId": "string",
                        "ExtraData": "string",
                        "HasBillable": true,
                        "StartDate": "string",
                        "EndDate": "string",
                        "IsActive": true,
                        "MileageConfigurationsStr": "string",
                        "Address": "string",
                        "ZipCode": "string",
                        "City": "string"
                      },
                      "User": {
                        "Id": "string",
                        "LastName": "string",
                        "FirstName": "string",
                        "Address": "string",
                        "PhoneNumber": "string",
                        "Mail": "string",
                        "MailAlias": "string",
                        "ZipCode": "string",
                        "FaxNumber": "string",
                        "CreationDate": "string",
                        "CountryCode": "string",
                        "Language": "string",
                        "Currency": "string",
                        "LocalCurrency": "string",
                        "LocalCountry": "string",
                        "CanCreateCategories": true,
                        "Manager_Id": "string",
                        "AccountantMail": "string",
                        "AccountantPayId": "string",
                        "UserType": 0,
                        "UserState": 0,
                        "PayId": "string",
                        "PayId2": "string",
                        "PayId3": "string",
                        "PayId4": "string",
                        "PayId5": "string",
                        "PayId6": "string",
                        "ManagerFirstName": "string",
                        "ManagerLastName": "string",
                        "ManagerMail": "string",
                        "ManagerPayId": "string",
                        "ManagerUserState": 0,
                        "Reviewer_Id": "string",
                        "ReviewerFirstName": "string",
                        "ReviewerLastName": "string",
                        "ReviewerMail": "string",
                        "ReviewerPayId": "string",
                        "ReviewerUserState": 0,
                        "JobTitle": "string",
                        "Vendor": "string",
                        "MileageConfigurationsStr": "string",
                        "PerDiemConfigName": "string",
                        "UserRole": 0,
                        "ConfigurationSettingsStr": "string",
                        "ConfigurationSettingsReference": "string",
                        "IKRatesId": "string",
                        "IKRatesReference": "string",
                        "LastLoginDate": "string",
                        "LastSignInDate": "string",
                        "Validators": [
                          {
                            "Mail": "string",
                            "FirstName": "string",
                            "LastName": "string",
                            "MinimumAmount": 0,
                            "SkipConditions": 0,
                            "RulesExternalIdsToAssign": [
                              "string"
                            ]
                          }
                        ],
                        "UserSimpleTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "UserTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "RestrictedTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ]
                      },
                      "CustomFieldValue": {
                        "Id": "string",
                        "CustomField_Id": "string",
                        "Reference": "string",
                        "Value": "string",
                        "ExternalId": "string",
                        "IsActive": true,
                        "StartDate": "string",
                        "EndDate": "string",
                        "UseType": 1,
                        "CustomFieldValueTags": [
                          {
                            "Id": "string",
                            "Name": "string",
                            "Description": "string",
                            "CreationDate": "string",
                            "IsActive": true,
                            "TagType": 1,
                            "DefinitionStr": "string",
                            "UseType": 2
                          }
                        ],
                        "ParentsIds": [
                          "string"
                        ]
                      }
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/expense/": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Add Expenses",
        "description": "Add new expenses to users Expensya accounts.",
        "operationId": "AddExpenses",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of users expense. The maximum number allowed per call is 50 expenses.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddExpenseInputArray"
              },
              "example": [
                {
                  "UserMail": "string",
                  "Name": "string",
                  "Value": 0,
                  "CategoryId": "string",
                  "PaymentInstrumentId": "string",
                  "Currency": "string",
                  "Country": "string",
                  "ProjectId": "string",
                  "ToReimburse": true,
                  "IsBillable": true,
                  "ReportId": "string",
                  "MissionOrderId": "string",
                  "DateExpense": "string",
                  "DateExpenseOffset": 0,
                  "Units": 0,
                  "Description": "string",
                  "MerchantInput": {
                    "MerchantName": "string",
                    "MerchantCity": "string",
                    "MerchantZipCode": "string",
                    "MerchantVatNumber": "string"
                  },
                  "CoworkersMails": [
                    "string"
                  ],
                  "CustomFieldsWithValuesStr": "string",
                  "ExpensePhoto": "string",
                  "AttachedFile": "string",
                  "VATInput": {
                    "Rates": [
                      0
                    ],
                    "Values": [
                      0
                    ],
                    "VatFreeAmount": 0,
                    "Tips": 0
                  }
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add expenses successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/expenses/submit/": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Send Expenses For Validation",
        "description": "Send created expenses for validation directly without the need to create report.",
        "operationId": "SendExpensesForValidation",
        "parameters": [
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of reports with their corresponding expenses unique identifiers list.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitExpensesForValidationInput"
              },
              "example": {
                "ExpensesIds": [
                  "string"
                ],
                "UserMail": "string",
                "ReportName": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Expenses were sent Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                },
                "example": {
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/paymentInstruments/": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get Payment Instruments",
        "description": "Get a list of payment instruments.",
        "operationId": "GetPaymentInstruments",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The name of the payment Instrument.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Bring only active payment intrument.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "userMail",
            "in": "query",
            "description": "The mail of the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instrumentType",
            "in": "query",
            "description": "Format - enum. Format - enum. Format - enum. Format - enum. The type of the payment Instrument : Cash = 0, Card = 1, Check = 2, EWallet = 3, Coupon = 4, Wire = 5, Bank = 6, Other = 99.",
            "schema": {
              "type": "integer",
              "format": "enum"
            }
          },
          {
            "name": "accountType",
            "in": "query",
            "description": "Format - enum. Format - enum. Format - enum. Format - enum. The account type of the payment Instrument : None = 0, Professional = 1, Personal = 2.",
            "schema": {
              "type": "integer",
              "format": "enum"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Format - int32. Format - int32. Format - int32. Format - int32. he number of elements per page (default value = 100 and maximum value = 100).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Payment Instrument Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAndPagesCountResultPaymentInstrumentResponse"
                },
                "example": {
                  "List": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "OwnerId": "string",
                      "Description": "string",
                      "IsActive": true,
                      "InstrumentType": 0,
                      "AccountType": 0,
                      "LastDigits": "string",
                      "CardKey": "string",
                      "JournalCode": "string",
                      "Auxiliary": "string",
                      "AccountNumber": "string"
                    }
                  ],
                  "PagesCount": 0,
                  "TotalListCount": 0,
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/travel/expenses/": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Add Travel Expenses",
        "description": "Add a new travel expense to your Expensya account.",
        "operationId": "AddTravelExpenses",
        "parameters": [
          {
            "name": "travelType",
            "in": "query",
            "description": "Format - enum. Format - enum. Format - enum. Format - enum. The type of travel agency: TravelEgencia = 100 TravelUber = 101 ExpensesNotilus = 200 TravelAmex = 202 ExpensyaTravel = 203 AirPlusTravel = 205.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "enum"
            }
          },
          {
            "name": "reportState",
            "in": "query",
            "description": "Format - enum. Format - enum. Format - enum. Format - enum. The destination report state of the created reports: Active = 0 Submitted = 2 Rejected = 3 Validated = 4 Closed = 5 ValidatedAndExported = 6 Reimbursed = 7 PreSubmitted = 8 Canceled = 10.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "enum"
            }
          },
          {
            "name": "Expensya-Token",
            "in": "header",
            "description": "Valid user token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Input of the travel expense to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTravelExpenseInputArray"
              },
              "example": [
                {
                  "UserMail": "string",
                  "Name": "string",
                  "Value": 0,
                  "TravelExpenseCategory": 0,
                  "ExternalId": "string",
                  "ReportName": "string",
                  "PaymentInstrumentId": "string",
                  "MissionOrderId": "string",
                  "DateBooking": "string",
                  "CountryCode": "string",
                  "Currency": "string",
                  "Vat": {
                    "Rates": [
                      0
                    ],
                    "Values": [
                      0
                    ],
                    "VatFreeAmount": 0,
                    "Tips": 0
                  },
                  "ProjectExternalId": "string",
                  "ToReimburse": true,
                  "IsBillable": true,
                  "Units": 0,
                  "TravelDetails": {
                    "StartDate": "string",
                    "StartDateOffset": 0,
                    "StartCity": "string",
                    "StartCountryCode": "string",
                    "EndDate": "string",
                    "EndDateOffset": 0,
                    "EndCity": "string",
                    "EndCountryCode": "string",
                    "ApprovalDate": "string",
                    "ExternalExpenseNumber": "string",
                    "OriginalTicketNumber": "string",
                    "TravelClass": "string",
                    "TravelPolicyDetails": {
                      "IsInPolicy": true,
                      "ReasonDescription": "string"
                    },
                    "ExpenseType": "string",
                    "NetAmount": "string",
                    "AirportTaxAmount": "string",
                    "NetTravelAgencyFeesAmount": "string",
                    "Farebasis": "string",
                    "Routing": "string",
                    "VATValue": 0
                  },
                  "Description": "string",
                  "MerchantInput": {
                    "MerchantName": "string",
                    "MerchantCity": "string",
                    "MerchantZipCode": "string",
                    "MerchantVatNumber": "string"
                  }
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Travel Expense Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResultListAddOrUpdateOrDeleteEntityResult"
                },
                "example": {
                  "ResultItem": [
                    {
                      "Id": "string",
                      "ExternalId": "string",
                      "ResultCode": 0,
                      "Message": "string"
                    }
                  ],
                  "ResultCode": 0,
                  "Message": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InviteUserInput": {
        "type": "object",
        "properties": {
          "LastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string"
          },
          "MailAlias": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId3": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId4": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId5": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId6": {
            "uniqueItems": false,
            "type": "string"
          },
          "Language": {
            "uniqueItems": false,
            "type": "string"
          },
          "LocalCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "LocalCountry": {
            "uniqueItems": false,
            "type": "string"
          },
          "CompanyId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ManagerId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ReviewerId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
            "format": "enum"
          },
          "IsTest": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "Vendor": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserRole": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n    Groups = 134217728 \r\n    DelegatedAccess = 268435456 \r\n",
            "format": "enum"
          },
          "UserValidators": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedValidator"
            }
          },
          "CanAddPurchase": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "HasVirtualPayment": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "AssignTagsInput": {
            "$ref": "#/components/schemas/AssignTagsInput"
          },
          "DefaultProjectId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "IKRatesId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SimpleTagsNames": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "PerDiemConfigurationId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ConfigurationSettings_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserMileageDistanceUnit": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Kilometre = 0 \r\n    Mile = 1 \r\n    CompanyDefault = 2 \r\n",
            "format": "enum"
          },
          "DefaultProjectVirtualCardExternalId": {
            "uniqueItems": false,
            "type": "string"
          },
          "DefaultProjectAdvanceExternalId": {
            "uniqueItems": false,
            "type": "string"
          },
          "ToReimburse": {
            "uniqueItems": false,
            "type": "boolean"
          }
        },
        "format": "InviteUserInput"
      },
      "TravelDetails": {
        "type": "object",
        "properties": {
          "TicketNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "InvoiceClass": {
            "uniqueItems": false,
            "type": "string"
          },
          "TravelAgency": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Egencia = 0 \r\n    Others = 1 \r\n",
            "format": "enum"
          },
          "AgencyInvoiceNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "InvoiceNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "TransactionName": {
            "uniqueItems": false,
            "type": "string"
          },
          "BookingType": {
            "uniqueItems": false,
            "type": "string"
          },
          "DetailsType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Meal = 0 \r\n    Travel = 1 \r\n    Purchase = 2 \r\n",
            "format": "enum"
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The start date of the travel. It respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z.",
            "format": "date-time"
          },
          "StartDateOffset": {
            "uniqueItems": false,
            "type": "number",
            "description": "The offset of the start date of the travel.",
            "format": "double"
          },
          "StartCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "The departure city of the travel."
          },
          "StartCountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "The country code the departure city."
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The end date of the travel. It respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z.",
            "format": "date-time"
          },
          "EndDateOffset": {
            "uniqueItems": false,
            "type": "number",
            "description": "The offset of the end date of the travel.",
            "format": "double"
          },
          "EndCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "The arrival city of the travel."
          },
          "EndCountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "The country code of the arrival city."
          },
          "ApprovalDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The approval date of the travel. It respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z.",
            "format": "date-time"
          },
          "ExternalExpenseNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "The external number of the expense."
          },
          "OriginalTicketNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "The original ticket number of the travel."
          },
          "TravelClass": {
            "uniqueItems": false,
            "type": "string",
            "description": "The class of the travel."
          },
          "TravelPolicyDetails": {
            "$ref": "#/components/schemas/TravelPolicyDetailsInput"
          },
          "ExpenseType": {
            "uniqueItems": false,
            "type": "string",
            "description": "The type of the expense."
          },
          "NetAmount": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value amount of the travel without VAT."
          },
          "AirportTaxAmount": {
            "uniqueItems": false,
            "type": "string",
            "description": "The airport tax amount of the travel."
          },
          "NetTravelAgencyFeesAmount": {
            "uniqueItems": false,
            "type": "string",
            "description": "The travel agency value amount of the travel without VAT."
          },
          "Farebasis": {
            "uniqueItems": false,
            "type": "string",
            "description": "The type of fare used on an airline ticket."
          },
          "Routing": {
            "uniqueItems": false,
            "type": "string",
            "description": "The flat routes of the travel."
          },
          "VATValue": {
            "uniqueItems": false,
            "type": "number",
            "description": "The total VAT amounts of the travel.",
            "format": "decimal"
          }
        },
        "format": "TravelDetails"
      },
      "UpdateUserInput": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "LastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string"
          },
          "MailAlias": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId3": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId4": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId5": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId6": {
            "uniqueItems": false,
            "type": "string"
          },
          "Language": {
            "uniqueItems": false,
            "type": "string"
          },
          "LocalCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "LocalCountry": {
            "uniqueItems": false,
            "type": "string"
          },
          "Manager_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
            "format": "enum"
          },
          "UserRole": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n    Groups = 134217728 \r\n    DelegatedAccess = 268435456 \r\n",
            "format": "enum"
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "JobTitle": {
            "uniqueItems": false,
            "type": "string"
          },
          "Vendor": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserValidators": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedValidator"
            }
          },
          "CanAddPurchase": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "AssignTagsInput": {
            "$ref": "#/components/schemas/AssignTagsInput"
          },
          "IKRates_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ConfigurationSettings_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "PerDiemConfiguration_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "DefaultProjectId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "DefaultProjectVirtualCardExternalID": {
            "uniqueItems": false,
            "type": "string"
          },
          "DefaultProjectAdvanceExternalID": {
            "uniqueItems": false,
            "type": "string"
          },
          "ToReimburse": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "UserMileageDistanceUnit": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Kilometre = 0 \r\n    Mile = 1 \r\n    CompanyDefault = 2 \r\n",
            "format": "enum"
          },
          "IsTOSSigned": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "ExtraDataStr": {
            "uniqueItems": false,
            "type": "string"
          }
        },
        "format": "UpdateUserInput"
      },
      "UserFilters": {
        "type": "object",
        "properties": {
          "User_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserFirstNameSubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserLastNameSubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserMailSubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserPayIdSubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserPayId2SubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserPayId3SubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserPayId4SubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserPayId5SubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserPayId6SubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "FiltrerOnUserPayId6Empty": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "UserMailOrNameOrPayIdSubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
            "format": "enum"
          },
          "UserState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
            "format": "enum"
          },
          "Manager_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ManagerNameSubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ReviewerNameSubString": {
            "uniqueItems": false,
            "type": "string"
          },
          "ListTagDefinitionStr": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ListTagsWithSimpleTag": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "ListSimpleTag": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "UserIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "UserMails": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          }
        },
        "format": "UserFilters",
        "example": "{\r\n  \"User_Id\": \"string\",\r\n  \"UserFirstNameSubString\": \"string\",\r\n  \"UserLastNameSubString\": \"string\",\r\n  \"UserMailSubString\": \"string\",\r\n  \"UserPayIdSubString\": \"string\",\r\n  \"UserPayId2SubString\": \"string\",\r\n  \"UserPayId3SubString\": \"string\",\r\n  \"UserPayId4SubString\": \"string\",\r\n  \"UserPayId5SubString\": \"string\",\r\n  \"UserPayId6SubString\": \"string\",\r\n  \"FiltrerOnUserPayId6Empty\": true,\r\n  \"UserMailOrNameOrPayIdSubString\": \"string\",\r\n  \"UserType\": 0,\r\n  \"UserState\": 0,\r\n  \"Manager_Id\": \"string\",\r\n  \"ManagerNameSubString\": \"string\",\r\n  \"Reviewer_Id\": \"string\",\r\n  \"ReviewerNameSubString\": \"string\",\r\n  \"ListTagDefinitionStr\": [\r\n    \"string\"\r\n  ],\r\n  \"ListTagsWithSimpleTag\": [\r\n    \"string\"\r\n  ],\r\n  \"ListSimpleTag\": [\r\n    \"string\"\r\n  ],\r\n  \"UserIds\": [\r\n    \"string\"\r\n  ],\r\n  \"UserMails\": [\r\n    \"string\"\r\n  ],\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\"\r\n}"
      },
      "AddOrUpdateTagInput": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string"
          },
          "DefinitionStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "SyncState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
            "format": "enum"
          },
          "AssignTagsInput": {
            "$ref": "#/components/schemas/AssignTagsInput"
          },
          "TagType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Tag = 1 \r\n    SimpleTag = 2 \r\n",
            "format": "enum"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "UseType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Invoice = 2 \r\n    Mileage = 4 \r\n    Purchase = 8 \r\n    Subscription = 16 \r\n    Mission = 32 \r\n    User = 64 \r\n    Balance = 128 \r\n",
            "format": "enum"
          }
        },
        "format": "AddOrUpdateTagInput"
      },
      "AssignTagsInput": {
        "type": "object",
        "properties": {
          "NewTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOrUpdateTagInput"
            }
          },
          "ExistingTagsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "ExistingTagsToUnassign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "ElementsToTag": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "ElementsType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    InvoiceAndFK = 0 \r\n    Report = 1 \r\n    Category = 2 \r\n    Project = 3 \r\n    Company = 4 \r\n    PartnerUser = 5 \r\n    BackendUser = 6 \r\n    InvoiceOnly = 7 \r\n    FkOnly = 8 \r\n    Rule = 9 \r\n    User = 10 \r\n    CustomFieldValue = 11 \r\n    SimpleTag = 12 \r\n    PurchaseOnly = 13 \r\n    Vehicule = 14 \r\n    PaymentInstrument = 15 \r\n    UserBankAccounts = 16 \r\n    CompanyBankAccounts = 17 \r\n    VehicleAssignment = 18 \r\n    Export = 19 \r\n    Trip = 20 \r\n    Tag = 21 \r\n    CustomField = 22 \r\n    Contact = 23 \r\n    MileageConfiguration = 24 \r\n    DelegatedAccess = 25 \r\n    Undefined = 255 \r\n",
            "format": "enum"
          }
        },
        "format": "AssignTagsInput"
      },
      "BrokenRule": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string"
          },
          "DescriptionForCredit": {
            "uniqueItems": false,
            "type": "string"
          },
          "Budget": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "RuleType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Mandatory = 0 \r\n    Warning = 1 \r\n    ReimbursableByCeiling = 2 \r\n    ReimbursableByFlatRate = 3 \r\n",
            "format": "enum"
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string"
          },
          "AllowExceptions": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "CanTriggerWorkflowWithExceptions": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "CanTriggerWorkflow": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "RuleElementType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Invoices = 0 \r\n    VirtualCards = 1 \r\n",
            "format": "enum"
          },
          "IntervalType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Day = 0 \r\n    WeekDays = 1 \r\n    Month = 2 \r\n    Year = 3 \r\n    Invoice = 4 \r\n",
            "format": "enum"
          },
          "Language": {
            "uniqueItems": false,
            "type": "string"
          },
          "RuleCurrenciesWithBudget": {
            "$ref": "#/components/schemas/TupleStringDecimal"
          },
          "ForAllCompany": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "InvoicesNumberLimit": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          }
        },
        "format": "BrokenRule"
      },
      "Category": {
        "type": "object",
        "properties": {
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "Name_EN": {
            "uniqueItems": false,
            "type": "string"
          },
          "Name_FR": {
            "uniqueItems": false,
            "type": "string"
          },
          "EntityName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Parent": {
            "uniqueItems": false,
            "type": "string"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string"
          },
          "PrimitiveCategories": {
            "uniqueItems": false,
            "type": "string"
          },
          "ParentCategory_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Icon": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "IsActiveAsDefault": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "FieldsStatesStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ReimbursementRatesStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "CostAccount": {
            "uniqueItems": false,
            "type": "string"
          },
          "VatAccount": {
            "uniqueItems": false,
            "type": "string"
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string"
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "VatClaimRate": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "VatAccountsByRateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "AccountingModelCategory_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ExtraLanguagesStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "SpecialFieldsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "CategoryUseType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Invoices = 1 \r\n    Purchases = 2 \r\n    Subscriptions = 4 \r\n",
            "format": "enum"
          },
          "VatClaimRatesStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsSpecial": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "IconName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "CreationVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "SyncState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
            "format": "enum"
          },
          "MileagePrimitiveCategory": {
            "uniqueItems": false,
            "type": "string"
          }
        },
        "format": "Category"
      },
      "DuplicatedInvoiceDetails": {
        "type": "object",
        "properties": {
          "InvoiceId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "InvoiceName": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserFirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserLastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "MissionId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          }
        },
        "format": "DuplicatedInvoiceDetails"
      },
      "ExtendedInvoice": {
        "type": "object",
        "properties": {
          "Project": {
            "$ref": "#/components/schemas/Project"
          },
          "Mission": {
            "$ref": "#/components/schemas/ExtendedMission"
          },
          "PaymentInstrument": {
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          "IsOwner": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "LogInvoiceAttributes": {
            "$ref": "#/components/schemas/HistoryAttributes"
          },
          "User_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Company_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "CanEdit": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "LocalCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsAllowedToUse": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "BrokenRules": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrokenRule"
            }
          },
          "Duplicates": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DuplicatedInvoiceDetails"
            }
          },
          "Supplier": {
            "$ref": "#/components/schemas/SupplierInDb"
          },
          "Vehicle": {
            "$ref": "#/components/schemas/Vehicle"
          },
          "TransactionsSumValue": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "TransactionsSumInCurrency": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "TransactionsSumInLocalCurrency": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "Tags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "PerdiemCountry": {
            "uniqueItems": false,
            "type": "string"
          },
          "PerdiemCalculationPeriodType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    CalendarDay = 0 \r\n    TwentyFourHours = 1 \r\n",
            "format": "enum"
          },
          "PerDiemType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Time = 0 \r\n    Distance = 1 \r\n    IEG = 2 \r\n",
            "format": "enum"
          },
          "RawOcrResult": {
            "uniqueItems": false,
            "type": "string"
          },
          "GuestsCount": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "FullUnits": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "ValueStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueStrWithCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueInLocalCurrencyStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueInLocalCurrencyStrWithLocalCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueInCurrencyStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueInCurrencyStrWithCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerFirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerPayId": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerPayId2": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerPayId3": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerPayId4": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerPayId5": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerPayId6": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
            "format": "enum"
          },
          "OwnerLocalCountry": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerConfigurationSettings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairStringString"
            }
          },
          "OwnerValidationSettings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairStringString"
            }
          },
          "OwnerLastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerLocalCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerFullName": {
            "uniqueItems": false,
            "type": "string"
          },
          "OwnerExternalUserType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    FromBackend = 1 \r\n    FromPartner = 2 \r\n",
            "format": "enum"
          },
          "CountryAndCity": {
            "uniqueItems": false,
            "type": "string"
          },
          "DateInvoiceStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "DateCreationStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsReadOnly": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "IsMissionReadOnly": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "StateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ReadOnlyReason": {
            "uniqueItems": false,
            "type": "string"
          },
          "TooltipStateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "StateColor": {
            "$ref": "#/components/schemas/Object"
          },
          "IsPerDiem": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "TruncatedName": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsValueInCurrencyUpdated": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "IsValueToReimburseUpdated": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "Category": {
            "$ref": "#/components/schemas/Category"
          },
          "IsMileage": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "UseType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Invoice = 1 \r\n    Advance = 2 \r\n    Purchase = 4 \r\n    Subscription = 8 \r\n    MissionOrder = 16 \r\n",
            "format": "enum"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "Value": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "ValueToReimburse": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "ValueToReimburseComputed": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "ReimbursementRate": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string"
          },
          "PaymentInstrument_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Mission_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Category_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "DateCreation": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "DateInvoice": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "DateUtcOffset": {
            "uniqueItems": false,
            "type": "number",
            "format": "double"
          },
          "DateInvoiceSortableStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "PhotoVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "HasPhoto": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueInCurrency": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "ValueInLocalCurrency": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "MerchantInvoiceId": {
            "uniqueItems": false,
            "type": "string"
          },
          "MerchantCountry": {
            "uniqueItems": false,
            "type": "string"
          },
          "MerchantCity": {
            "uniqueItems": false,
            "type": "string"
          },
          "MerchantZipCode": {
            "uniqueItems": false,
            "type": "string"
          },
          "MerchantAddress": {
            "uniqueItems": false,
            "type": "string"
          },
          "MerchantName": {
            "uniqueItems": false,
            "type": "string"
          },
          "MerchantVatNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "SignatureInfoStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "FileHash": {
            "uniqueItems": false,
            "type": "string"
          },
          "Units": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "State": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Uploading = 0 \r\n    Uploaded = 1 \r\n    Ready = 2 \r\n    Validated = 3 \r\n    ValidatedByAccountant = 4 \r\n    Rejected = 99 \r\n",
            "format": "enum"
          },
          "IsFromEmail": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "Source": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Email = 0 \r\n    Digidom = 1 \r\n    API = 2 \r\n    Travel = 3 \r\n    Card = 4 \r\n    Collector = 5 \r\n    Mobile = 10 \r\n    Web = 11 \r\n    Android = 12 \r\n    iOS = 13 \r\n    WindowsPhone = 14 \r\n    Transaction = 15 \r\n    Egencia = 16 \r\n",
            "format": "enum"
          },
          "PhotoSource": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    NoPhoto = 0 \r\n    ExpensyaWeb = 1 \r\n    ExpensyaMobile = 2 \r\n    Gallery = 3 \r\n    ExternalApp = 4 \r\n    Email = 5 \r\n    API = 6 \r\n",
            "format": "enum"
          },
          "HasEmailAttachement": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "VATStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "VATAvgRate": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "AttachedFilesCount": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "CategoryExtraDataStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "Vehicle_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ToReimburse": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "IsBillable": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "CustomFieldsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "OcrValue": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "ImageFeaturesInfoStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ImageFeaturesStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "UniqueExternalKey": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueHT": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "Project_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SubscriptionStartDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "SubscriptionEndDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "SubscriptionType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Weekly = 0 \r\n    Monthly = 1 \r\n    Yearly = 2 \r\n",
            "format": "enum"
          },
          "FileType": {
            "uniqueItems": false,
            "type": "string"
          },
          "CoworkersStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "InvoiceSource_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "CreditSource_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "DefaultRate": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "Supplier_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SubStatus": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    All = 0 \r\n    Exported = 2 \r\n    Payed = 4 \r\n    ExportedToIbiza = 8 \r\n    RecordedByInexweb = 16 \r\n    ExportedToQBO = 32 \r\n    ExportedToInexweb = 64 \r\n    RejectedByInexweb = 128 \r\n    ExportedToVSA = 256 \r\n    ExportedBalance = 512 \r\n    ExportedToSiebel = 1024 \r\n",
            "format": "enum"
          },
          "Owner_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "IsDuplicable": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "ExtendedInvoice": {
            "$ref": "#/components/schemas/ExtendedInvoice"
          },
          "IsFromEmailIconVisible": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "IsFileAttachedIconVisible": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "ImageUrl": {
            "uniqueItems": false,
            "type": "string"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "CreationVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "SyncState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
            "format": "enum"
          }
        },
        "format": "ExtendedInvoice"
      },
      "ExtendedMission": {
        "type": "object",
        "properties": {
          "CurrencySymbol": {
            "uniqueItems": false,
            "type": "string"
          },
          "InvoicesCountStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "InvoicesCount": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "Value": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "ValueInLocalCurrency": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "BookingsTotalValueInLocalCurrency": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "ValueToReimburse": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "IsValueToReimburseModified": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "ValueToReimburseInLocalCurrency": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "StartDateForMileageExpenses": {
            "uniqueItems": false,
            "type": "string"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "AccountingDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "HasExternalProjectValidator": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "InvoiceList": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedInvoice"
            }
          },
          "IsAllowedToUse": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "Validators": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MissionValidator"
            }
          },
          "CallerCanUpdateMissionState": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "InvoicesTransactionsSumInCurrency": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "IssuesDicStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "MissionOrderDetails": {
            "uniqueItems": false,
            "type": "string"
          },
          "MissionOrderStartDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "MissionOrderEndDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "MissionOrderDestination": {
            "uniqueItems": false,
            "type": "string"
          },
          "InvoiceAttachedFilesCount": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "Tags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "InvoicesWithProblems": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceWithProblemsDetails"
            }
          },
          "CustomFieldsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "CanSubmit": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "SubmitDisabledReason": {
            "uniqueItems": false,
            "type": "string"
          },
          "CanClose": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "CloseDisabledReason": {
            "uniqueItems": false,
            "type": "string"
          },
          "AreAllInvoicesValidated": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "ValueStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueStrWithCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueToReimburseStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValueToReimburseStrWithCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "StartDateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "EndDateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "StateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsReadOnly": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "ReadOnlyReason": {
            "uniqueItems": false,
            "type": "string"
          },
          "ValidationOrRejectionMessage": {
            "uniqueItems": false,
            "type": "string"
          },
          "TooltipStateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsVisibleInMissionList": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "TruncatedName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Location": {
            "uniqueItems": false,
            "type": "string"
          },
          "StartAndEndDateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "StateColor": {
            "$ref": "#/components/schemas/Object"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string"
          },
          "DateCreation": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "Budget": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "MissionType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    UserCreated = 0 \r\n    Default = 1 \r\n    TravelAgencyImport = 2 \r\n    Advance = 3 \r\n    MissionOrder = 4 \r\n",
            "format": "enum"
          },
          "State": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Active = 0 \r\n    Submitted = 2 \r\n    Rejected = 3 \r\n    Validated = 4 \r\n    Closed = 5 \r\n    ValidatedAndExported = 6 \r\n    Reimbursed = 7 \r\n    PreSubmitted = 8 \r\n    Canceled = 10 \r\n    InValidation = 50 \r\n",
            "format": "enum"
          },
          "Comments": {
            "uniqueItems": false,
            "type": "string"
          },
          "IdShort": {
            "uniqueItems": false,
            "type": "string"
          },
          "AccountingPeriod": {
            "uniqueItems": false,
            "type": "string"
          },
          "SubStatus": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    All = 0 \r\n    Exported = 2 \r\n    Payed = 4 \r\n    ExportedToIbiza = 8 \r\n    RecordedByInexweb = 16 \r\n    ExportedToQBO = 32 \r\n    ExportedToInexweb = 64 \r\n    RejectedByInexweb = 128 \r\n    ExportedToVSA = 256 \r\n    ExportedBalance = 512 \r\n    ExportedToSiebel = 1024 \r\n",
            "format": "enum"
          },
          "CurrentValidator_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "CurrentValidatorFullName": {
            "uniqueItems": false,
            "type": "string"
          },
          "LastValidatorReminderDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "RestitutionParent_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Company_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "HasIssues": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "HasIssuesOnlyApproversCanSee": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "LastSubmitDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "LastApprovalDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "LastCloseDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "LastRejectDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "ExtendedMission": {
            "$ref": "#/components/schemas/ExtendedMission"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "CreationVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "SyncState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
            "format": "enum"
          },
          "IsOwner": {
            "uniqueItems": false,
            "type": "boolean"
          }
        },
        "format": "ExtendedMission"
      },
      "ExtendedValidator": {
        "type": "object",
        "properties": {
          "Mail": {
            "uniqueItems": false,
            "type": "string"
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "LastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "FullName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Validator_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "NextValidator_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "MinimumAmount": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "ElementType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Invoice = 1 \r\n    Mission = 2 \r\n    User = 3 \r\n    UserCollectorConnection = 4 \r\n    Company = 5 \r\n    Partner = 6 \r\n    PartnerUser = 7 \r\n    BackendUser = 8 \r\n    DelegateAccess = 9 \r\n    PartnerContract = 10 \r\n    PartnerBill = 11 \r\n    VirtualCard = 12 \r\n    CompanyConfigurationSettings = 13 \r\n    PartnerConfigurationSettings = 14 \r\n    ExportFormat = 15 \r\n    PartnerExportFormat = 16 \r\n    ImportFormat = 17 \r\n    CompanyOffer = 18 \r\n    CompanyBill = 19 \r\n    CompanyContract = 20 \r\n    Project = 21 \r\n    ProPaymentInstrument = 22 \r\n    FavoritePlaces = 23 \r\n    OrangeApiUser = 24 \r\n    UserProject = 25 \r\n    CustomField = 26 \r\n    Contact = 27 \r\n    Card = 28 \r\n    Rule = 29 \r\n    Tag = 30 \r\n    CustomFieldValue = 31 \r\n    UserCustomFieldValue = 32 \r\n    CompanyIntegrationSettings = 33 \r\n    CompanyIntegration = 34 \r\n    UserBankAccount = 35 \r\n    CompanyBankAccount = 36 \r\n    PaymentInstrument = 37 \r\n    Category = 38 \r\n    Vehicle = 39 \r\n    TagAssignment = 40 \r\n    CompanyContact = 41 \r\n    Validator = 42 \r\n    UserWithValidators = 43 \r\n    CompanySftp = 44 \r\n    CompanyOrder = 45 \r\n    Supplier = 46 \r\n    CustomIkRate = 47 \r\n    DefaultIkRate = 48 \r\n    ExtraSettings = 49 \r\n    SSo = 50 \r\n    CustomIntegration = 51 \r\n    AccountSettings = 52 \r\n    PerdiemConfiguration = 53 \r\n    MileageConfiguration = 54 \r\n    FieldPosition = 55 \r\n    VirtualPayment = 56 \r\n    LegalStorage = 57 \r\n    MobileConfiguration = 58 \r\n    BICube = 59 \r\n    ExportCustom = 60 \r\n    Domain = 61 \r\n    BiConfiguration = 62 \r\n    AccessBackendRequest = 63 \r\n    CompanySyncVersion = 64 \r\n    CacheElement = 65 \r\n    IntegrationSetting = 66 \r\n    DomainName = 67 \r\n    VehicleAssignment = 68 \r\n    UserSyncVersion = 69 \r\n    Login = 70 \r\n    CompanyLink = 71 \r\n",
            "format": "enum"
          },
          "Element_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SkipConditions": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    WarningRuleWithInterval = 1 \r\n    ShouldBeTheLastValidator = 2 \r\n    WarningRule = 4 \r\n    EmptyLevel = 8 \r\n    RefundException = 16 \r\n",
            "format": "enum"
          }
        },
        "format": "ExtendedValidator"
      },
      "HistoryAttributes": {
        "type": "object",
        "properties": {
          "LastModificationDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "InvoiceEventType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    SubmitMission = 1 \r\n    ValidateMission = 2 \r\n    RejectMission = 3 \r\n    ReimburseMission = 4 \r\n    CloseMission = 5 \r\n    CommentMission = 6 \r\n    ValidateAndExportMission = 7 \r\n    UpdateInvoiceByValidator = 8 \r\n    CreateMission = 9 \r\n    ExportMission = 10 \r\n    ExportMissionToQuickBooks = 11 \r\n    PreSubmitMission = 12 \r\n    ReviewAndSubmitMission = 13 \r\n    UpdateAccountingPeriodByAdminOrAccountant = 14 \r\n    AddUserCollectorConnection = 15 \r\n    UpdateUserCollectorConnection = 16 \r\n    GetUserCollectedBills = 17 \r\n    StopAutoRenew = 18 \r\n    ValidateUserCollectorConnection = 19 \r\n    SwitchAsDelegatedUser = 20 \r\n    DeleteUserCollectorConnection = 21 \r\n    ExportMissionToIbiza = 22 \r\n    ValidateVirtualCard = 23 \r\n    RejectVirtualCard = 24 \r\n    RequestVirtualCard = 25 \r\n    RequestVirtualCardAndAutoApproved = 26 \r\n    ValidatedPurchaseByAccountant = 27 \r\n    AutoValidateMission = 28 \r\n    AddProPaymentInstrument = 29 \r\n    UpdateProPaymentInstrument = 30 \r\n    DisableVirtualCard = 31 \r\n    ExportMissionToInexweb = 32 \r\n    ExportPurchaseToSapByDesign = 33 \r\n    CreateRule = 34 \r\n    DeleteRule = 35 \r\n    UpdateRule = 36 \r\n    DeleteMission = 37 \r\n    RestoreMission = 38 \r\n    AutoValidateAndExportMission = 39 \r\n    DisconnectIntegration = 41 \r\n    ExportMissionToVSA = 42 \r\n    ExportInvoiceToSiebel = 43 \r\n    CreateInvoice = 97 \r\n    DeleteInvoice = 98 \r\n    UpdateInvoice = 99 \r\n    AddTag = 100 \r\n    UpdateTag = 101 \r\n    DeleteTag = 102 \r\n    AddCompanyIntegrationSettings = 103 \r\n    UpdateCompanyIntegrationSettings = 104 \r\n    IntegrationStart = 105 \r\n    IntegrationComplete = 106 \r\n    IgnoreMissionInExport = 107 \r\n    AttachCompanyToPartner = 108 \r\n    PreSubmitVirtualCard = 109 \r\n    ApproveVirtualCard = 110 \r\n    CommentVirtualCard = 111 \r\n    ReviewAndSubmitVirtualCard = 112 \r\n    AutoImport = 113 \r\n    AutoExport = 114 \r\n    Export = 115 \r\n    Import = 116 \r\n    SubmitVehicle = 117 \r\n    ValidateVehicle = 118 \r\n    ApproveVehicle = 119 \r\n    RejectVehicle = 120 \r\n    CommentVehicle = 121 \r\n    DisableVehicle = 122 \r\n    PreSubmitVehicle = 123 \r\n    AutoApproveVehicle = 124 \r\n    AddBalanceExport = 125 \r\n    Payment = 126 \r\n    ReSubmitVehicleAfterApproval = 127 \r\n    ExportMissionByAPI = 128 \r\n    SplitMissionInvoicesByProblems = 129 \r\n    SendRevenueToAdjust = 130 \r\n    CancelMissionOrder = 139 \r\n",
            "format": "enum"
          },
          "UserWhoModifiedId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "OnBehalfOf": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "MissionEventType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    SubmitMission = 1 \r\n    ValidateMission = 2 \r\n    RejectMission = 3 \r\n    ReimburseMission = 4 \r\n    CloseMission = 5 \r\n    CommentMission = 6 \r\n    ValidateAndExportMission = 7 \r\n    UpdateInvoiceByValidator = 8 \r\n    CreateMission = 9 \r\n    ExportMission = 10 \r\n    ExportMissionToQuickBooks = 11 \r\n    PreSubmitMission = 12 \r\n    ReviewAndSubmitMission = 13 \r\n    UpdateAccountingPeriodByAdminOrAccountant = 14 \r\n    AddUserCollectorConnection = 15 \r\n    UpdateUserCollectorConnection = 16 \r\n    GetUserCollectedBills = 17 \r\n    StopAutoRenew = 18 \r\n    ValidateUserCollectorConnection = 19 \r\n    SwitchAsDelegatedUser = 20 \r\n    DeleteUserCollectorConnection = 21 \r\n    ExportMissionToIbiza = 22 \r\n    ValidateVirtualCard = 23 \r\n    RejectVirtualCard = 24 \r\n    RequestVirtualCard = 25 \r\n    RequestVirtualCardAndAutoApproved = 26 \r\n    ValidatedPurchaseByAccountant = 27 \r\n    AutoValidateMission = 28 \r\n    AddProPaymentInstrument = 29 \r\n    UpdateProPaymentInstrument = 30 \r\n    DisableVirtualCard = 31 \r\n    ExportMissionToInexweb = 32 \r\n    ExportPurchaseToSapByDesign = 33 \r\n    CreateRule = 34 \r\n    DeleteRule = 35 \r\n    UpdateRule = 36 \r\n    DeleteMission = 37 \r\n    RestoreMission = 38 \r\n    AutoValidateAndExportMission = 39 \r\n    DisconnectIntegration = 41 \r\n    ExportMissionToVSA = 42 \r\n    ExportInvoiceToSiebel = 43 \r\n    CreateInvoice = 97 \r\n    DeleteInvoice = 98 \r\n    UpdateInvoice = 99 \r\n    AddTag = 100 \r\n    UpdateTag = 101 \r\n    DeleteTag = 102 \r\n    AddCompanyIntegrationSettings = 103 \r\n    UpdateCompanyIntegrationSettings = 104 \r\n    IntegrationStart = 105 \r\n    IntegrationComplete = 106 \r\n    IgnoreMissionInExport = 107 \r\n    AttachCompanyToPartner = 108 \r\n    PreSubmitVirtualCard = 109 \r\n    ApproveVirtualCard = 110 \r\n    CommentVirtualCard = 111 \r\n    ReviewAndSubmitVirtualCard = 112 \r\n    AutoImport = 113 \r\n    AutoExport = 114 \r\n    Export = 115 \r\n    Import = 116 \r\n    SubmitVehicle = 117 \r\n    ValidateVehicle = 118 \r\n    ApproveVehicle = 119 \r\n    RejectVehicle = 120 \r\n    CommentVehicle = 121 \r\n    DisableVehicle = 122 \r\n    PreSubmitVehicle = 123 \r\n    AutoApproveVehicle = 124 \r\n    AddBalanceExport = 125 \r\n    Payment = 126 \r\n    ReSubmitVehicleAfterApproval = 127 \r\n    ExportMissionByAPI = 128 \r\n    SplitMissionInvoicesByProblems = 129 \r\n    SendRevenueToAdjust = 130 \r\n    CancelMissionOrder = 139 \r\n",
            "format": "enum"
          }
        },
        "format": "HistoryAttributes"
      },
      "InvoiceWithProblemsDetails": {
        "type": "object",
        "properties": {
          "InvoiceId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "InvoiceName": {
            "uniqueItems": false,
            "type": "string"
          },
          "InvoiceProblemList": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "enum"
            },
            "description": "\r\n\r\n    None = 0 \r\n    BrokenRule = 1 \r\n    Exception = 2 \r\n    Fraud = 3 \r\n    ExchangeRateModified = 4 \r\n    MileageDistanceModified = 5 \r\n    DuplicatedInvoices = 6 \r\n    MandatoryCustomFields = 7 \r\n    OutOfProjectDateRange = 8 \r\n    AssignedGroupConflict = 9 \r\n    DeactivatedProject = 10 \r\n    OutOfRangeVehicleAssignment = 11 \r\n    InvoiceStateNotReady = 12 \r\n    DeactivatedVehicle = 13 \r\n    NotEligibaleProject = 14 \r\n    NotApprovedVehicle = 15 \r\n    RejectedVehicle = 16 \r\n    CreditAlreadyExists = 17 \r\n    MandatoryRule = 18 \r\n"
          },
          "IsMileage": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "MissionState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Active = 0 \r\n    Submitted = 2 \r\n    Rejected = 3 \r\n    Validated = 4 \r\n    Closed = 5 \r\n    ValidatedAndExported = 6 \r\n    Reimbursed = 7 \r\n    PreSubmitted = 8 \r\n    Canceled = 10 \r\n    InValidation = 50 \r\n",
            "format": "enum"
          }
        },
        "format": "InvoiceWithProblemsDetails"
      },
      "MissionValidator": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "FullName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string"
          }
        },
        "format": "MissionValidator"
      },
      "PaymentInstrument": {
        "type": "object",
        "properties": {
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "InstrumentType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Cash = 0 \r\n    Card = 1 \r\n    Check = 2 \r\n    EWallet = 3 \r\n    Coupon = 4 \r\n    Wire = 5 \r\n    Bank = 6 \r\n    Other = 99 \r\n",
            "format": "enum"
          },
          "AccountType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Professional = 1 \r\n    Personal = 2 \r\n",
            "format": "enum"
          },
          "LastDigits": {
            "uniqueItems": false,
            "type": "string"
          },
          "CardKey": {
            "uniqueItems": false,
            "type": "string"
          },
          "JournalCode": {
            "uniqueItems": false,
            "type": "string"
          },
          "Auxiliary": {
            "uniqueItems": false,
            "type": "string"
          },
          "AccountNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "CreationVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "SyncState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
            "format": "enum"
          }
        },
        "format": "PaymentInstrument"
      },
      "Project": {
        "type": "object",
        "properties": {
          "ExternalId": {
            "uniqueItems": false,
            "type": "string"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "ProjectRef": {
            "uniqueItems": false,
            "type": "string"
          },
          "Validator_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ClientName": {
            "uniqueItems": false,
            "type": "string"
          },
          "ForAllCompany": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "IsBillableDefaultValue": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string"
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string"
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string"
          },
          "DescriptionsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ProjectUseType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
            "format": "enum"
          },
          "CustomField_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "CustomFieldParent_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string"
          },
          "CategoriesIdsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "FullName": {
            "uniqueItems": false,
            "type": "string"
          },
          "FullNameWithClientName": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsClientNameVisible": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "StartDateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "EndDateStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "HasBillable": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "MileageConfigurationsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "Address": {
            "uniqueItems": false,
            "type": "string"
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string"
          },
          "City": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsReadOnly": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "CreationVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "SyncState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
            "format": "enum"
          }
        },
        "format": "Project"
      },
      "SimpleTag": {
        "type": "object",
        "properties": {
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string"
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "TagType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Tag = 1 \r\n    SimpleTag = 2 \r\n",
            "format": "enum"
          },
          "UseType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Invoice = 2 \r\n    Mileage = 4 \r\n    Purchase = 8 \r\n    Subscription = 16 \r\n    Mission = 32 \r\n    User = 64 \r\n    Balance = 128 \r\n",
            "format": "enum"
          },
          "PartnerOrCompany_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "CreationVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "SyncState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
            "format": "enum"
          }
        },
        "format": "SimpleTag"
      },
      "SupplierInDb": {
        "type": "object",
        "properties": {
          "Company_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "SupplierAccountName": {
            "uniqueItems": false,
            "type": "string"
          },
          "SupplierAccount": {
            "uniqueItems": false,
            "type": "string"
          },
          "CostAccountName": {
            "uniqueItems": false,
            "type": "string"
          },
          "CostAccount": {
            "uniqueItems": false,
            "type": "string"
          },
          "VatAccountName": {
            "uniqueItems": false,
            "type": "string"
          },
          "VatAccount": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "MerchantNameStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "VatRegime": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AtCollection = 0 \r\n    Debit = 1 \r\n",
            "format": "enum"
          },
          "PaymentDelays": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "Category_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SupplierCollectiveAccount": {
            "uniqueItems": false,
            "type": "string"
          },
          "External_Id": {
            "uniqueItems": false,
            "type": "string"
          }
        },
        "format": "SupplierInDb"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "DefinitionStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string"
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "TagType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Tag = 1 \r\n    SimpleTag = 2 \r\n",
            "format": "enum"
          },
          "UseType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Invoice = 2 \r\n    Mileage = 4 \r\n    Purchase = 8 \r\n    Subscription = 16 \r\n    Mission = 32 \r\n    User = 64 \r\n    Balance = 128 \r\n",
            "format": "enum"
          },
          "PartnerOrCompany_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "CreationVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "SyncState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
            "format": "enum"
          }
        },
        "format": "Tag"
      },
      "UserAndLogin": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId3": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId4": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId5": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId6": {
            "uniqueItems": false,
            "type": "string"
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "CanCreateCategories": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "ShemaVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "Company_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string"
          },
          "Manager_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Login_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
            "format": "enum"
          },
          "UserRole": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n    Groups = 134217728 \r\n    DelegatedAccess = 268435456 \r\n",
            "format": "enum"
          },
          "IsTest": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "UserState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
            "format": "enum"
          },
          "ExternalLoginProviderStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "InvalidLoginCount": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "LastInvalidLoginDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "LocalCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "LocalCountry": {
            "uniqueItems": false,
            "type": "string"
          },
          "Vendor": {
            "uniqueItems": false,
            "type": "string"
          },
          "MileageConfigurationsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "IKRates_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ConfigurationSettings_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "PerDiemConfiguration_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ConfigSyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string"
          },
          "SessionIdsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ExternalUserType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    FromBackend = 1 \r\n    FromPartner = 2 \r\n",
            "format": "enum"
          },
          "JobTitle": {
            "uniqueItems": false,
            "type": "string"
          },
          "AcceptedServiceTerms": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "LastLoginDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "LastCollaboratorReminderDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "LastSignInDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "Address": {
            "uniqueItems": false,
            "type": "string"
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string"
          },
          "PhoneNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "FaxNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsTOSSigned": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Updated": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "PasswordHash": {
            "uniqueItems": false,
            "type": "string"
          },
          "FullName": {
            "uniqueItems": false,
            "type": "string"
          },
          "ConfigurationSettingsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "LastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Language": {
            "uniqueItems": false,
            "type": "string"
          },
          "City": {
            "uniqueItems": false,
            "type": "string"
          },
          "CountryCode": {
            "uniqueItems": false,
            "type": "string"
          },
          "UseGps": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "MailAlias": {
            "uniqueItems": false,
            "type": "string"
          }
        },
        "format": "UserAndLogin"
      },
      "UserResult": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "LastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Address": {
            "uniqueItems": false,
            "type": "string"
          },
          "PhoneNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string"
          },
          "MailAlias": {
            "uniqueItems": false,
            "type": "string"
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string"
          },
          "FaxNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "CountryCode": {
            "uniqueItems": false,
            "type": "string"
          },
          "Language": {
            "uniqueItems": false,
            "type": "string"
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string"
          },
          "LocalCurrency": {
            "uniqueItems": false,
            "type": "string"
          },
          "LocalCountry": {
            "uniqueItems": false,
            "type": "string"
          },
          "CanCreateCategories": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "ShemaVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "ExternalUserType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    FromBackend = 1 \r\n    FromPartner = 2 \r\n",
            "format": "enum"
          },
          "Company_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Manager_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Login_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "AccountantMail": {
            "uniqueItems": false,
            "type": "string"
          },
          "AccountantPayId": {
            "uniqueItems": false,
            "type": "string"
          },
          "AccountantId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
            "format": "enum"
          },
          "UserState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
            "format": "enum"
          },
          "IsTest": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "PayId": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId3": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId4": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId5": {
            "uniqueItems": false,
            "type": "string"
          },
          "PayId6": {
            "uniqueItems": false,
            "type": "string"
          },
          "ManagerFirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "ManagerLastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "ManagerMail": {
            "uniqueItems": false,
            "type": "string"
          },
          "ManagerPayId": {
            "uniqueItems": false,
            "type": "string"
          },
          "ManagerUserState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
            "format": "enum"
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ReviewerFirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "ReviewerLastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "ReviewerMail": {
            "uniqueItems": false,
            "type": "string"
          },
          "ReviewerPayId": {
            "uniqueItems": false,
            "type": "string"
          },
          "ReviewerUserState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
            "format": "enum"
          },
          "JobTitle": {
            "uniqueItems": false,
            "type": "string"
          },
          "UserValidators": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedValidator"
            }
          },
          "Vendor": {
            "uniqueItems": false,
            "type": "string"
          },
          "MileageConfigurationsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "IKRates_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "PerDiemConfiguration_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "PerDiemConfigName": {
            "uniqueItems": false,
            "type": "string"
          },
          "IKRatesReference": {
            "uniqueItems": false,
            "type": "string"
          },
          "ConfigurationSettings_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserRole": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n    Groups = 134217728 \r\n    DelegatedAccess = 268435456 \r\n",
            "format": "enum"
          },
          "ConfigurationSettingsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "ConfigurationSettingsReference": {
            "uniqueItems": false,
            "type": "string"
          },
          "LastLoginDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "SessionIdsStr": {
            "uniqueItems": false,
            "type": "string"
          },
          "LastSignInDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "Tags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "SimpleTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleTag"
            }
          },
          "SimpleTagsNames": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Groups": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "IsTOSSigned": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string"
          },
          "FullName": {
            "uniqueItems": false,
            "type": "string"
          },
          "ManagerFullName": {
            "uniqueItems": false,
            "type": "string"
          },
          "ReviewerFullName": {
            "uniqueItems": false,
            "type": "string"
          }
        },
        "format": "UserResult"
      },
      "Vehicle": {
        "type": "object",
        "properties": {
          "Name": {
            "uniqueItems": false,
            "type": "string"
          },
          "DateCreation": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "CreationYearKm": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "CreationYearMiles": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "LastYearDistanceKm": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          },
          "LastUpdatedYear": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "VehicleType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Car = 1 \r\n    Moped = 2 \r\n    Scooter = 3 \r\n    Motocyle = 4 \r\n    Bicycle = 5 \r\n",
            "format": "enum"
          },
          "InternalVehicleType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Personal = 1 \r\n    Professional = 2 \r\n",
            "format": "enum"
          },
          "CurrentValidator_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "LastValidatorReminderDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "Comments": {
            "uniqueItems": false,
            "type": "string"
          },
          "State": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Disabled = 0 \r\n    Active = 1 \r\n    Submitted = 2 \r\n    Approved = 3 \r\n    Rejected = 4 \r\n    All = -1 \r\n",
            "format": "enum"
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string"
          },
          "AdministrativePower": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "AttachedFilesCount": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "CreationType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    UserCreated = 0 \r\n    DefaultVehicle = 1 \r\n",
            "format": "enum"
          },
          "Company_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "AssignmentState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    All = 0 \r\n    Assigned = 1 \r\n    Free = 2 \r\n",
            "format": "enum"
          },
          "IsReadOnly": {
            "uniqueItems": false,
            "type": "boolean"
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "SyncVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "CreationVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "SyncState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    AddLocal = 0 \r\n    DeleteLocal = 1 \r\n    Sync = 3 \r\n",
            "format": "enum"
          }
        },
        "format": "Vehicle"
      },
      "ListAndPagesCountResultCustomFieldValueAssignmentResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueAssignmentResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultCustomFieldValueAssignmentResponse"
      },
      "CustomFieldValueAssignment": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Identifier of the assignment."
          },
          "User_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user.",
            "format": "guid"
          },
          "CustomFieldValueId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the custom field value.",
            "format": "guid"
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Additional informations about the assignment."
          },
          "HasBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the assignment is billable to client."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the assignment. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the assignment. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the assignment is active or not."
          },
          "MileageConfigurationsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mileage configuration of the assignment."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the assignment."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the assignment."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the assignment."
          }
        },
        "format": "CustomFieldValueAssignment"
      },
      "CustomFieldValueAssignmentResponse": {
        "type": "object",
        "properties": {
          "AssignmentOfUserToCustomFieldValue": {
            "$ref": "#/components/schemas/CustomFieldValueAssignment"
          },
          "User": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "CustomFieldValue": {
            "$ref": "#/components/schemas/CustomFieldValueResponse"
          }
        },
        "format": "CustomFieldValueAssignmentResponse"
      },
      "ContactInput": {
        "required": [
          "ContactFirstName",
          "ContactLastName",
          "ContactMail",
          "ContactCountryCode",
          "IsCoworker",
          "IsShared"
        ],
        "type": "object",
        "properties": {
          "ContactFirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the contact."
          },
          "ContactLastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the contact."
          },
          "ContactRole": {
            "uniqueItems": false,
            "type": "string",
            "description": "Role of the contact."
          },
          "ContactMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the contact."
          },
          "ContactPhoneNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Phone number of the contact."
          },
          "ContactAddress": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the contact."
          },
          "ContactZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the contact."
          },
          "ContactCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the contact."
          },
          "ContactCountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Country code of the contact."
          },
          "IsCoworker": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the contact is a coworker or not."
          },
          "IsShared": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the contact is shared or not with all employees."
          },
          "ContactCompanyName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the contact company."
          },
          "ContactCompanyMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the contact company."
          },
          "ContactCompanyWebSite": {
            "uniqueItems": false,
            "type": "string",
            "description": "Website of the contact company."
          },
          "ContactCompanyPhoneNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Phone number of the contact company."
          },
          "ContactCompanyAddress": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the contact company."
          },
          "ContactCompanyZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the contact company."
          },
          "ContactCompanyCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the contact company."
          },
          "ContactCompanyCountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Country code of the contact company."
          }
        },
        "format": "ContactInput",
        "example": "{\r\n  \"ContactFirstName\": \"string\",\r\n  \"ContactLastName\": \"string\",\r\n  \"ContactRole\": \"string\",\r\n  \"ContactMail\": \"string\",\r\n  \"ContactPhoneNumber\": \"string\",\r\n  \"ContactAddress\": \"string\",\r\n  \"ContactZipCode\": \"string\",\r\n  \"ContactCity\": \"string\",\r\n  \"ContactCountryCode\": \"string\",\r\n  \"IsCoworker\": true,\r\n  \"IsShared\": true,\r\n  \"ContactCompanyName\": \"string\",\r\n  \"ContactCompanyMail\": \"string\",\r\n  \"ContactCompanyWebSite\": \"string\",\r\n  \"ContactCompanyPhoneNumber\": \"string\",\r\n  \"ContactCompanyAddress\": \"string\",\r\n  \"ContactCompanyZipCode\": \"string\",\r\n  \"ContactCompanyCity\": \"string\",\r\n  \"ContactCompanyCountryCode\": \"string\"\r\n}"
      },
      "CustomFieldResponse": {
        "required": [
          "DisplayLabelFR",
          "DisplayLabelEN",
          "FieldType",
          "IsMandatory",
          "IsActive"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Identifer of the custom field.",
            "format": "guid"
          },
          "FieldName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the custom field."
          },
          "DisplayLabelFR": {
            "uniqueItems": false,
            "type": "string",
            "description": "Displayed label of the custom field in Frensh."
          },
          "DisplayLabelEN": {
            "uniqueItems": false,
            "type": "string",
            "description": "Displayed label of the custom field in English."
          },
          "TooltipFR": {
            "uniqueItems": false,
            "type": "string",
            "description": "Tooltip of the custom field in Frensh."
          },
          "TooltipEN": {
            "uniqueItems": false,
            "type": "string",
            "description": "Tooltip of the custom field in English."
          },
          "FieldType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "type": "integer",
            "description": "Enum attribute which is the field type of the custom field : \r\n\r\n    CheckBox = 0 \r\n    DateInput = 1 \r\n    NumericInput = 2 \r\n    DecimalInput = 3 \r\n    TextInput = 4 \r\n    MoneyInput = 5 \r\n    DropDown = 6 \r\n    MultiSelectionList = 7 \r\n    MissionOrder = 8 \r\n",
            "format": "enum"
          },
          "CustomFieldUseType": {
            "uniqueItems": false,
            "enum": [
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024,
              2048,
              4096,
              8192,
              16384
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the use type of the custom field : \r\n\r\n    Subscription = 2 \r\n    Report = 4 \r\n    Category = 8 \r\n    Project = 16 \r\n    Company = 32 \r\n    PartnerUser = 64 \r\n    BackendUser = 128 \r\n    Invoice = 256 \r\n    Fk = 512 \r\n    Rule = 1024 \r\n    User = 2048 \r\n    Purchase = 4096 \r\n    MissionOrder = 8192 \r\n    VirtualCard = 16384 \r\n",
            "format": "enum"
          },
          "MaxLength": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Maximum length of a text custom field.",
            "format": "int32"
          },
          "MinValue": {
            "uniqueItems": false,
            "type": "string",
            "description": "Minimum value of a decimal or numeric custom field."
          },
          "MaxValue": {
            "uniqueItems": false,
            "type": "string",
            "description": "Maximum value of a decimal or numeric custom field."
          },
          "DefaultValue": {
            "uniqueItems": false,
            "type": "string",
            "description": "Default value of the custom field."
          },
          "IsMandatory": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "This boolean represents the custom field behavior whether it's required or optional."
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "This boolean represents the custom field state whether it's hidden or visible."
          },
          "Categories_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Categories related to the custom field."
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External unique identifier of the custom field."
          },
          "CustomFieldParentId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Parent unique identifier of the custom field.",
            "format": "guid"
          }
        },
        "format": "CustomFieldResponse"
      },
      "DelegatedAccessResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Identifier of the delegated access",
            "format": "guid"
          },
          "BeneficiaryId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the account who will benefit of the delegated access permission.",
            "format": "guid"
          },
          "Owner_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the real account owner.",
            "format": "guid"
          },
          "BeneficiaryMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user who will benefit of the delegated access permission."
          },
          "OwnerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the real account owner."
          },
          "BeneficiaryRights": {
            "uniqueItems": false,
            "enum": [
              0,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512
            ],
            "type": "integer",
            "description": "Enum flag attribute which presents the rights given to the beneficiary in the owner account: \r\n\r\n    All = 0 \r\n    Manager = 2 \r\n    Employee = 4 \r\n    ReadOnly = 8 \r\n    MissionOrderAsManager = 16 \r\n    MissionOrderAsEmployee = 32 \r\n    AdvanceAsManager = 64 \r\n    AdvanceAsEmployee = 128 \r\n    VirtualCardAsManager = 256 \r\n    VehicleAsManager = 512 \r\n",
            "format": "enum"
          },
          "OwnerFirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the account who will benefit of the delegated access permission."
          },
          "OwnerLastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the account who will benefit of the delegated access permission."
          },
          "BeneficiaryFirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the real account owner."
          },
          "BeneficiaryLastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the real account owner."
          }
        },
        "format": "DelegatedAccessResponse"
      },
      "Address": {
        "type": "object",
        "properties": {
          "StreetName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the street."
          },
          "CountryName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the country."
          },
          "CountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Code of the country."
          },
          "CityName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the city."
          },
          "CityCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Code of the city."
          }
        },
        "format": "Address"
      },
      "Breakdown": {
        "required": [
          "Type",
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "uniqueItems": false,
            "type": "string",
            "description": "Type of the breakDown. can be: BASE, TAXES, FEE"
          },
          "Amount": {
            "uniqueItems": false,
            "type": "number",
            "description": "Amount of the price for a given currency.",
            "format": "double"
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Currency code of the amount in iso-alpha-3 code. e.g: EUR, USD"
          }
        },
        "format": "Breakdown"
      },
      "CustomDataField": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the custom data field."
          },
          "Label": {
            "uniqueItems": false,
            "type": "string",
            "description": "Label of the custom data field."
          },
          "Value": {
            "uniqueItems": false,
            "type": "string",
            "description": "Value of the custom data field."
          },
          "ENLabel": {
            "uniqueItems": false,
            "type": "string",
            "description": "Label of the custom data field in english."
          },
          "FRLabel": {
            "uniqueItems": false,
            "type": "string",
            "description": "Label of the custom data field in frensh."
          }
        },
        "format": "CustomDataField"
      },
      "Location": {
        "required": [
          "Type",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "uniqueItems": false,
            "type": "string",
            "description": "Defines what kind of location it is: Airport, TrainStation, Hotel"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the airport, or the station, or the hotel."
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "format": "Location"
      },
      "OriginDestination": {
        "required": [
          "Segments"
        ],
        "type": "object",
        "properties": {
          "Segments": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segment"
            },
            "description": "Segments that composes the Trip Origin Destination. If a flight Paris → New York as a stop in London, it will have 2 segments: \n 1 - Paris → London \n 2 - London → New York"
          }
        },
        "format": "OriginDestination"
      },
      "Price": {
        "required": [
          "Currency",
          "Amount"
        ],
        "type": "object",
        "properties": {
          "Currency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Currency code of the amount in iso-alpha-3 code. e.g: EUR, USD"
          },
          "Amount": {
            "uniqueItems": false,
            "type": "number",
            "description": "Amount of the price for a given currency.",
            "format": "decimal"
          },
          "Breakdowns": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Breakdown"
            },
            "description": "Contains the list of Breakdown objects describing how the price is composed such as: product amount, fee amount, taxes amount"
          }
        },
        "format": "Price"
      },
      "Segment": {
        "required": [
          "Departure",
          "Arrival"
        ],
        "type": "object",
        "properties": {
          "Departure": {
            "$ref": "#/components/schemas/SegmentStep"
          },
          "Arrival": {
            "$ref": "#/components/schemas/SegmentStep"
          },
          "Carrier": {
            "$ref": "#/components/schemas/ServiceProvider"
          },
          "Provider": {
            "$ref": "#/components/schemas/ServiceProvider"
          },
          "BookingClass": {
            "uniqueItems": false,
            "type": "string",
            "description": "Booking class code. Used for train and flight."
          }
        },
        "format": "Segment"
      },
      "SegmentStep": {
        "required": [
          "Location",
          "DateTime"
        ],
        "type": "object",
        "properties": {
          "Location": {
            "$ref": "#/components/schemas/Location"
          },
          "DateTime": {
            "uniqueItems": false,
            "type": "string",
            "description": "Date of the segment step."
          },
          "DateTimeValue": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          }
        },
        "format": "SegmentStep"
      },
      "ServiceProvider": {
        "type": "object",
        "properties": {
          "Code": {
            "uniqueItems": false,
            "type": "string",
            "description": "Code of the company."
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the company."
          }
        },
        "format": "ServiceProvider"
      },
      "TripBooking": {
        "required": [
          "ExpenseId",
          "ExpenseType",
          "State",
          "Price"
        ],
        "type": "object",
        "properties": {
          "ExpenseId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the booking."
          },
          "Label": {
            "uniqueItems": false,
            "type": "string",
            "description": "Label of the booking."
          },
          "BookingLink": {
            "uniqueItems": false,
            "type": "string",
            "description": "Direct link to the booking."
          },
          "ExpenseType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Train = 0 \r\n    Hotel = 1 \r\n    Flight = 2 \r\n    BusOrTaxi = 3 \r\n    Car = 4 \r\n    Fee = 5 \r\n",
            "format": "enum"
          },
          "State": {
            "uniqueItems": false,
            "type": "string",
            "description": "State of the booking. Can be: PENDING, BOOKED, CANCELLED."
          },
          "BookingState": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Pending = 0 \r\n    Booked = 1 \r\n    Cancelled = 2 \r\n",
            "format": "enum"
          },
          "Price": {
            "$ref": "#/components/schemas/Price"
          },
          "OriginDestinations": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OriginDestination"
            },
            "description": "List of origin destinations that compose the trip. This is required for flight, taxi or bus bookings."
          },
          "RouteNumber": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of route numbers of the trip."
          },
          "Vehicle": {
            "$ref": "#/components/schemas/TripVehicle"
          },
          "PickUp": {
            "$ref": "#/components/schemas/SegmentStep"
          },
          "DropOff": {
            "$ref": "#/components/schemas/SegmentStep"
          },
          "CheckIn": {
            "uniqueItems": false,
            "type": "string",
            "description": "Checkin date. This is required for hotel bookings."
          },
          "CheckInValue": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "CheckOut": {
            "uniqueItems": false,
            "type": "string",
            "description": "Checkout date. This is required for hotel bookings."
          },
          "CheckOutValue": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "Location": {
            "$ref": "#/components/schemas/Location"
          },
          "StarRating": {
            "uniqueItems": false,
            "type": "string",
            "description": "Hotel booking star rating."
          }
        },
        "format": "TripBooking"
      },
      "TripVehicle": {
        "type": "object",
        "properties": {
          "Type": {
            "uniqueItems": false,
            "type": "string",
            "description": "Type of the vehicle."
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the vehicle."
          }
        },
        "format": "TripVehicle"
      },
      "UpdateTagsStateInput": {
        "required": [
          "TagsNames",
          "TagsState"
        ],
        "type": "object",
        "properties": {
          "TagsNames": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags' names to update."
          },
          "TagsState": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "New state: true for active and false for disable."
          }
        },
        "format": "UpdateTagsStateInput",
        "example": "{\r\n  \"TagsNames\": [\r\n    \"string\"\r\n  ],\r\n  \"TagsState\": true\r\n}"
      },
      "ValidatorInput": {
        "required": [
          "Mail"
        ],
        "type": "object",
        "properties": {
          "Mail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the validator."
          },
          "MinimumAmount": {
            "uniqueItems": false,
            "type": "number",
            "description": "If the expense's amount exceeds this minimum amount, the expense should be sent to the validator.",
            "format": "decimal"
          },
          "SkipConditions": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16,
              32,
              64
            ],
            "type": "integer",
            "description": "Enum flag attribute which represents the conditions that could skip the validator's validation level, If omitted, Skip Condition will be set to the default value which is 'None': \r\n\r\n    None = 0 (No skip conditions)\r\n    WarningRuleWithInterval = 1 (Validator will be skipped if there are no broken warning rules with interval)\r\n    ShouldBeTheLastValidator = 2 (It should only be applied on project validators!, It means that the selected validator is the last to validate)\r\n    WarningRule = 4 (Validator will be skipped if there are no broken warning rules)\r\n    EmptyLevel = 8 (It should only be applied on project validators!, It means that the selected validator will be skipped for the user's validator in the same level)\r\n    RefundException = 16 (Validator will be skipped if there are no broken rules with refund exception)\r\n    WarningRuleWithIntervalBySelect = 32 (Validator will be skipped if there are no broken Warning Rules With Interval (only those selected by the administrator and specified in 'Rules External Ids To Assign') and should have the 'Has Alert Rules By Additional Validator' setting activated)\r\n    WarningRuleBySelect = 64 (Validator will be skipped if there are no broken Warning Rules (only those selected by the administrator and specified in 'Rules External Ids To Assign') and should have the 'Has Alert Rules By Additional Validator' setting activated)\r\n",
            "format": "enum"
          },
          "RulesExternalIdsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of the external identifiers of the rules to assign to the validator."
          }
        },
        "format": "ValidatorInput"
      },
      "VatInput": {
        "required": [
          "Rates",
          "Values"
        ],
        "type": "object",
        "properties": {
          "Rates": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "number",
              "format": "decimal"
            },
            "description": "Rates of the expense VAT."
          },
          "Values": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "number",
              "format": "decimal"
            },
            "description": "Values of the expense VAT."
          },
          "VatFreeAmount": {
            "uniqueItems": false,
            "type": "number",
            "description": "Vat Free Amount (Vat value when the rate is equal to 0).",
            "format": "decimal"
          },
          "Tips": {
            "uniqueItems": false,
            "type": "number",
            "description": "Tips amount of the expense.",
            "format": "decimal"
          }
        },
        "format": "VatInput"
      },
      "AccountingDataResponse": {
        "type": "object",
        "properties": {
          "CostAccount": {
            "uniqueItems": false,
            "type": "string",
            "description": "The cost account."
          },
          "VatAccount": {
            "uniqueItems": false,
            "type": "string",
            "description": "The VAT acount."
          },
          "TTCAccount": {
            "uniqueItems": false,
            "type": "string",
            "description": "The TTC account."
          },
          "JournalCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "The journal code."
          },
          "VATClaimRate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The VAT claim rate."
          },
          "ValueTTC": {
            "uniqueItems": false,
            "type": "string",
            "description": "The TTC value in the currency of the expense."
          },
          "ValueTTCInCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The TTC value in the currency of the company."
          },
          "ValueTTCInLocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The TTC value in the currency of the user."
          },
          "ValueToReimburse": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the expense."
          },
          "ValueToReimburseInCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the company."
          },
          "ValueToReimburseInLocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the user."
          },
          "ValueHT": {
            "uniqueItems": false,
            "type": "string",
            "description": "The HT value in the currency of the expense."
          },
          "ValueHTInCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The HT value in the currency of the company."
          },
          "ValueHTInLocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The HT value in the currency of the user."
          },
          "ValueHTToReimburse": {
            "uniqueItems": false,
            "type": "string",
            "description": "The HT value to be reimbursed in the currency of the expense."
          },
          "ValueHTToReimburseInCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The HT value to be reimbursed in the currency of the company."
          },
          "ValueHTToReimburseInLocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The HT value to be reimbursed in the currency of the user."
          },
          "TotalVATClaimValue": {
            "uniqueItems": false,
            "type": "string",
            "description": "The total recoverable VAT in the currency of the expense."
          },
          "TotalVATClaimValueInCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The total recoverable VAT in the currency of the company."
          },
          "TotalVATClaimValueInLocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The total recoverable VAT in the currency of the user."
          },
          "TotalVATValue": {
            "uniqueItems": false,
            "type": "string",
            "description": "The total recoverable VAT in the currency of the expense."
          },
          "TotalVATValueInCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The total recoverable VAT in the currency of the company."
          },
          "TotalVATValueInLocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The total VAT in the currency of the user."
          },
          "VAT1Rate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The rate of VAT1."
          },
          "VAT1Value": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value of VAT1."
          },
          "VAT1Base": {
            "uniqueItems": false,
            "type": "string",
            "description": "The base of VAT1."
          },
          "VAT1Code": {
            "uniqueItems": false,
            "type": "string",
            "description": "The code of VAT1."
          },
          "VAT1ClaimRate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The claim rate of VAT1."
          },
          "ValueToReimburseForVAT1": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the expense for VAT1."
          },
          "ValueToReimburseInCurrencyForVAT1": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the company for VAT1."
          },
          "ValueToReimburseInLocalCurrencyForVAT1": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the user for VAT1."
          },
          "VAT2Rate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The rate of VAT2."
          },
          "VAT2Value": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value of VAT2."
          },
          "VAT2Base": {
            "uniqueItems": false,
            "type": "string",
            "description": "The base of VAT2."
          },
          "VAT2Code": {
            "uniqueItems": false,
            "type": "string",
            "description": "The code of VAT2."
          },
          "VAT2ClaimRate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The claim rate of VAT2."
          },
          "ValueToReimburseForVAT2": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the expense for VAT2."
          },
          "ValueToReimburseInCurrencyForVAT2": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the company for VAT2."
          },
          "ValueToReimburseInLocalCurrencyForVAT2": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the user for VAT2."
          },
          "VAT3Rate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The rate of VAT3."
          },
          "VAT3Value": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value of VAT3."
          },
          "VAT3Base": {
            "uniqueItems": false,
            "type": "string",
            "description": "The base of VAT3."
          },
          "VAT3Code": {
            "uniqueItems": false,
            "type": "string",
            "description": "The code of VAT3."
          },
          "VAT3ClaimRate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The claim rate of VAT3."
          },
          "ValueToReimburseForVAT3": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the expense for VAT3."
          },
          "ValueToReimburseInCurrencyForVAT3": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the company for VAT3."
          },
          "ValueToReimburseInLocalCurrencyForVAT3": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the user for VAT3."
          },
          "VAT4Rate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The rate of VAT4."
          },
          "VAT4Value": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value of VAT4."
          },
          "VAT4Base": {
            "uniqueItems": false,
            "type": "string",
            "description": "The base of VAT4."
          },
          "VAT4Code": {
            "uniqueItems": false,
            "type": "string",
            "description": "The code of VAT4."
          },
          "VAT4ClaimRate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The claim rate of VAT4."
          },
          "ValueToReimburseForVAT4": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the expense for VAT4."
          },
          "ValueToReimburseInCurrencyForVAT4": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the company for VAT4."
          },
          "ValueToReimburseInLocalCurrencyForVAT4": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value to be reimbursed in the currency of the user for VAT4."
          }
        },
        "format": "AccountingDataResponse"
      },
      "AddOrUpdateOrDeleteEntityResult": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the updated entity."
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The External identifier of the updated entity."
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "AddOrUpdateOrDeleteEntityResult"
      },
      "AddEntityResult": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the added entity.",
            "format": "guid"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "AddEntityResult"
      },
      "BaseResult": {
        "type": "object",
        "properties": {
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResult"
      },
      "BaseResultExportResponse": {
        "type": "object",
        "properties": {
          "ResultItem": {
            "$ref": "#/components/schemas/ExportResponse"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResultExportResponse"
      },
      "BaseResultImageUrlResponse": {
        "type": "object",
        "properties": {
          "ResultItem": {
            "$ref": "#/components/schemas/ImageUrlResponse"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResultImageUrlResponse"
      },
      "BaseResultMileagesConfigurationResponse": {
        "type": "object",
        "properties": {
          "ResultItem": {
            "$ref": "#/components/schemas/MileagesConfigurationResponse"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResultMileagesConfigurationResponse"
      },
      "BaseResultListAddEntityResult": {
        "type": "object",
        "properties": {
          "ResultItem": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddEntityResult"
            },
            "description": "Item sent by the server."
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              13,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    NotPaid = 2 \r\n    OldAppVersion = 3 \r\n    InvalidCredentials = 4 \r\n    AdditionalInformationNeeded = 5 \r\n    InvalidPinCode = 6 \r\n    InvalidData = 7 \r\n    UserEmailExists = 10 \r\n    CompanyEmailExists = 11 \r\n    UserEmailAliasExists = 12 \r\n    IsTemporaryLogin = 13 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    NotManager = 50 \r\n    ExceedLimits = 60 \r\n    Failed = 70 \r\n    LockedOut = 71 \r\n    UserDisabled = 80 \r\n    UserNotValidated = 90 \r\n    NothingToDo = 91 \r\n    NotVerifiedInvoice = 92 \r\n    ClientError = 96 \r\n    NetworkError = 97 \r\n    ServiceError = 98 \r\n    UnknownError = 99 \r\n    NotValidZipCode = 100 \r\n    InvalidCoupon = 101 \r\n    Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    WalletNotFound = 901 \r\n    WalletDisabled = 902 \r\n    PaymentInstrumentExpired = 903 \r\n    AccountantExists = 910 \r\n    AccountantNotExists = 913 \r\n    PartnerExists = 1001 \r\n    PartnerNotExists = 1004 \r\n    NotEnoughLicences = 1005 \r\n    AlreadyExists = 1006 \r\n    BnppLimitActiveCardsError = 2000 \r\n    BnppLimitAmountAccountError = 2001 \r\n    BnppEndUsageError = 2002 \r\n    BnppWrongAccountIdError = 2003 \r\n    BnppWrongCurrencyCodeError = 2004 \r\n    InvalidCertificate = 2005 \r\n    InvalidPSPConfig = 2006 \r\n    MissionShortIdNull = 2007 \r\n    AlreadyDeleted = 2008 \r\n    CantUpdateLastAdmin = 2009 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011 \r\n    InProgress = 2012 \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResultListAddEntityResult"
      },
      "BaseResultListAddOrUpdateOrDeleteEntityResult": {
        "type": "object",
        "properties": {
          "ResultItem": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOrUpdateOrDeleteEntityResult"
            },
            "description": "Item sent by the server."
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResultListAddOrUpdateOrDeleteEntityResult"
      },
      "BaseResultListBaseResult": {
        "type": "object",
        "properties": {
          "ResultItem": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseResult"
            },
            "description": "Item sent by the server."
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResultListBaseResult"
      },
      "BaseResultListEventResponse": {
        "type": "object",
        "properties": {
          "ResultItem": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventResponse"
            },
            "description": "Item sent by the server."
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResultListEventResponse"
      },
      "BaseResultListExportFormatResponse": {
        "type": "object",
        "properties": {
          "ResultItem": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportFormatResponse"
            },
            "description": "Item sent by the server."
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResultListExportFormatResponse"
      },
      "BaseResultListUpdateUserResult": {
        "type": "object",
        "properties": {
          "ResultItem": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateUserResult"
            },
            "description": "Item sent by the server."
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "BaseResultListUpdateUserResult"
      },
      "BrokenRuleResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the broken rule.",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the broken rule."
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the broken rule."
          },
          "DescriptionForCredit": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description for credit of the broken rule."
          },
          "Budget": {
            "uniqueItems": false,
            "type": "number",
            "description": "Budget of the broken rule.",
            "format": "decimal"
          },
          "RuleType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "Type of the broken rule : \r\n\r\n    Mandatory = 0 \r\n    Warning = 1 \r\n    ReimbursableByCeiling = 2 \r\n    ReimbursableByFlatRate = 3 \r\n",
            "format": "enum"
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Currency of the broken rule."
          },
          "AllowExceptions": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if exceptions are allowed in broken rule."
          },
          "RuleElementType": {
            "uniqueItems": false,
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "Type of the rule element : \r\n\r\n    Invoices = 0 \r\n    VirtualCards = 1 \r\n",
            "format": "enum"
          },
          "IntervalType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "Type of the interval of the broken rule : \r\n\r\n    Day = 0 \r\n    WeekDays = 1 \r\n    Month = 2 \r\n    Year = 3 \r\n    Invoice = 4 \r\n",
            "format": "enum"
          },
          "Language": {
            "uniqueItems": false,
            "type": "string",
            "description": "Language of the broken rule."
          },
          "RuleCurrenciesWithBudget": {
            "$ref": "#/components/schemas/TupleStringDecimal"
          },
          "ForAllCompany": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the broken rule is for all company or not."
          }
        },
        "format": "BrokenRuleResponse"
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the category.",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the category."
          },
          "EntityName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Entity Name of the category."
          },
          "Parent": {
            "uniqueItems": false,
            "type": "string",
            "description": "Parent of the category (category can be linked to another category)."
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the category."
          },
          "PrimitiveCategories": {
            "uniqueItems": false,
            "type": "string",
            "description": "Sub categories."
          },
          "ParentCategory_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique parent identifier of the category (category can be linked to another category).",
            "format": "guid"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the category is active or not."
          },
          "IsActiveAsDefault": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Default category when user add new expense."
          },
          "CostAccount": {
            "uniqueItems": false,
            "type": "string",
            "description": "Cost account of the category."
          },
          "VatAccount": {
            "uniqueItems": false,
            "type": "string",
            "description": "VAT account of the category."
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Additional informations about the category."
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Creation date of the category. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "VatClaimRate": {
            "uniqueItems": false,
            "type": "number",
            "description": "VAT claim rate of the category.",
            "format": "decimal"
          },
          "VatClaimRates": {
            "uniqueItems": false,
            "type": "string",
            "description": "VAT claim rate of the category by year. the format of this string is as follow :  {\"2018\":vatclaimrate1,\"2019\":vatclaimrate1,\"2020\":vatclaimrate1} , with this format we can specify the VAT claim rate of the last 3 years, VatClaimRate is a value between 0 and 100"
          },
          "CategoryUseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the type of the category : \r\n\r\n    Invoices = 1 \r\n    Purchases = 2 \r\n    Subscriptions = 4 \r\n",
            "format": "enum"
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the category."
          },
          "IsReadOnly": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the category is just read only."
          },
          "CategoryTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "description": "List of tags of the category."
          },
          "VatAccounts": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VatAccountResponse"
            },
            "description": "List of VAT accounts of the category."
          }
        },
        "format": "CategoryResponse"
      },
      "ContactCompanyResponse": {
        "type": "object",
        "properties": {
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the contact company."
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the contact company."
          },
          "WebSite": {
            "uniqueItems": false,
            "type": "string",
            "description": "WebSite of the contact company."
          },
          "PhoneNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Phone number of the contact company."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the contact company."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the contact company."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the contact company."
          },
          "CountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "ISO Country code of the contact company."
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Creation date of the contact company. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "User_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user who added the contact company.",
            "format": "guid"
          }
        },
        "format": "ContactCompanyResponse"
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the contact.",
            "format": "guid"
          },
          "User_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user who added the contact.",
            "format": "guid"
          },
          "ContactCompany_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Contact company identifier related to the contact.",
            "format": "guid"
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the contact."
          },
          "LastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the contact."
          },
          "Role": {
            "uniqueItems": false,
            "type": "string",
            "description": "Role of the contact."
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the contact."
          },
          "PhoneNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Phone number of the contact."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the contact."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the contact."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the contact."
          },
          "CountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "ISO Country code of the contact."
          },
          "IsCoworker": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the contact is a coworker."
          },
          "IsShared": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the contact is shared with all users."
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Creation date of the contact. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Additional Informations about the contact."
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the contact is active or not."
          },
          "FullName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Full name of the contact."
          },
          "ContactInfo": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra Informations about the contact."
          }
        },
        "format": "ContactResponse"
      },
      "ContactWithContactCompanyResponse": {
        "type": "object",
        "properties": {
          "ContactResponse": {
            "$ref": "#/components/schemas/ContactResponse"
          },
          "ContactCompanyResponse": {
            "$ref": "#/components/schemas/ContactCompanyResponse"
          }
        },
        "format": "ContactWithContactCompanyResponse"
      },
      "CustomFieldValueResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Identifier of the custom field value.",
            "format": "guid"
          },
          "CustomField_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Identifier of the custom field.",
            "format": "guid"
          },
          "Reference": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of the custom field value."
          },
          "Value": {
            "uniqueItems": false,
            "type": "string",
            "description": "Value of the custom field value."
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External unique identifier of the custom field value."
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the custom field value is active or not."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The starting date of the use of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The ending date of the use of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "UseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the use type of the custom field value : \r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
            "format": "enum"
          },
          "CustomFieldValueTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "description": "List of tags of the custom field value."
          },
          "ParentsIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of parents'unique identifiers of the custom field value."
          }
        },
        "format": "CustomFieldValueResponse"
      },
      "EventResponse": {
        "type": "object",
        "properties": {
          "EventDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Date of the event. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EventType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              41,
              42,
              43,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146
            ],
            "type": "integer",
            "description": "Type of the event : \r\n\r\n    SubmitMission = 1 \r\n    ValidateMission = 2 \r\n    RejectMission = 3 \r\n    ReimburseMission = 4 \r\n    CloseMission = 5 \r\n    CommentMission = 6 \r\n    ValidateAndExportMission = 7 \r\n    UpdateInvoiceByValidator = 8 \r\n    CreateMission = 9 \r\n    ExportMission = 10 \r\n    ExportMissionToQuickBooks = 11 \r\n    PreSubmitMission = 12 \r\n    ReviewAndSubmitMission = 13 \r\n    UpdateAccountingPeriodByAdminOrAccountant = 14 \r\n    AddUserCollectorConnection = 15 \r\n    UpdateUserCollectorConnection = 16 \r\n    GetUserCollectedBills = 17 \r\n    StopAutoRenew = 18 \r\n    ValidateUserCollectorConnection = 19 \r\n    SwitchAsDelegatedUser = 20 \r\n    DeleteUserCollectorConnection = 21 \r\n    ExportMissionToIbiza = 22 \r\n    ValidateVirtualCard = 23 \r\n    RejectVirtualCard = 24 \r\n    RequestVirtualCard = 25 \r\n    RequestVirtualCardAndAutoApproved = 26 \r\n    ValidatedPurchaseByAccountant = 27 \r\n    AutoValidateMission = 28 \r\n    AddProPaymentInstrument = 29 \r\n    UpdateProPaymentInstrument = 30 \r\n    DisableVirtualCard = 31 \r\n    ExportMissionToInexweb = 32 \r\n    ExportPurchaseToSapByDesign = 33 \r\n    CreateRule = 34 \r\n    DeleteRule = 35 \r\n    UpdateRule = 36 \r\n    DeleteMission = 37 \r\n    RestoreMission = 38 \r\n    AutoValidateAndExportMission = 39 \r\n    DisconnectIntegration = 41 \r\n    ExportMissionToVSA = 42 \r\n    ExportInvoiceToSiebel = 43 \r\n    CreateInvoice = 97 \r\n    DeleteInvoice = 98 \r\n    UpdateInvoice = 99 \r\n    AddTag = 100 \r\n    UpdateTag = 101 \r\n    DeleteTag = 102 \r\n    AddCompanyIntegrationSettings = 103 \r\n    UpdateCompanyIntegrationSettings = 104 \r\n    IntegrationStart = 105 \r\n    IntegrationComplete = 106 \r\n    IgnoreMissionInExport = 107 \r\n    AttachCompanyToPartner = 108 \r\n    PreSubmitVirtualCard = 109 \r\n    ApproveVirtualCard = 110 \r\n    CommentVirtualCard = 111 \r\n    ReviewAndSubmitVirtualCard = 112 \r\n    AutoImport = 113 \r\n    AutoExport = 114 \r\n    Export = 115 \r\n    Import = 116 \r\n    SubmitVehicle = 117 \r\n    ValidateVehicle = 118 \r\n    ApproveVehicle = 119 \r\n    RejectVehicle = 120 \r\n    CommentVehicle = 121 \r\n    DisableVehicle = 122 \r\n    PreSubmitVehicle = 123 \r\n    AutoApproveVehicle = 124 \r\n    AddBalanceExport = 125 \r\n    Payment = 126 \r\n    ReSubmitVehicleAfterApproval = 127 \r\n    ExportMissionByAPI = 128 \r\n    SplitMissionInvoicesByProblems = 129 \r\n    SendRevenueToAdjust = 130 \r\n    SubmitMissionOrder = 131 \r\n    ValidateMissionOrder = 132 \r\n    RejectMissionOrder = 133 \r\n    CloseMissionOrder = 134 \r\n    CommentMissionOrder = 135 \r\n    CreateMissionOrder = 136 \r\n    PreSubmitMissionOrder = 137 \r\n    ReviewAndSubmitMissionOrder = 138 \r\n    CancelMissionOrder = 139 \r\n    DeleteMissionOrder = 140 \r\n    ValidateAndExportMissionOrder = 141 \r\n    ValidatedInvoiceByAEAT = 142 \r\n    RejectedInvoiceByAEAT = 143 \r\n    SemiValidatedInvoiceByAEAT = 144 \r\n    AutoValidateMissionOrder = 145 \r\n    AddRuleAssignment = 146 \r\n",
            "format": "enum"
          },
          "UserId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user.",
            "format": "guid"
          },
          "UserLastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the user."
          },
          "UserFirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the user."
          },
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user."
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the event."
          }
        },
        "format": "EventResponse"
      },
      "ExpenseResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the expense.",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the expense."
          },
          "Value": {
            "uniqueItems": false,
            "type": "number",
            "description": "Value of the expense.",
            "format": "decimal"
          },
          "ValueToReimburse": {
            "uniqueItems": false,
            "type": "number",
            "description": "Value to reimbures of the expense.",
            "format": "decimal"
          },
          "ReimbursementRate": {
            "uniqueItems": false,
            "type": "number",
            "description": "Reimbursement rate of the expense.",
            "format": "decimal"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the expense."
          },
          "UseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4,
              8,
              16
            ],
            "type": "integer",
            "description": "Type of the expense : \r\n\r\n    Invoice = 1 \r\n    Advance = 2 \r\n    Purchase = 4 \r\n    Subscription = 8 \r\n    MissionOrder = 16 \r\n",
            "format": "enum"
          },
          "DateCreation": {
            "uniqueItems": false,
            "type": "string",
            "description": "Creation date of the expense. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "DateInvoice": {
            "uniqueItems": false,
            "type": "string",
            "description": "Date of the expense. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "DateUtcOffset": {
            "uniqueItems": false,
            "type": "number",
            "description": "Date offset of the expense.",
            "format": "double"
          },
          "HasPhoto": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the expense has photo."
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Currency of the expense."
          },
          "ValueInCurrency": {
            "uniqueItems": false,
            "type": "number",
            "description": "Value in currency of the owner of the expense.",
            "format": "decimal"
          },
          "ValueInLocalCurrency": {
            "uniqueItems": false,
            "type": "number",
            "description": "Value in local currency of the owner of the expense.",
            "format": "decimal"
          },
          "MerchantInvoiceId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Merchant Invoice external identifier"
          },
          "MerchantCountry": {
            "uniqueItems": false,
            "type": "string",
            "description": "Merchant country of the expense."
          },
          "MerchantCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "Merchant city of the expense."
          },
          "MerchantZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Merchant zip code of the expense."
          },
          "MerchantAddress": {
            "uniqueItems": false,
            "type": "string",
            "description": "Merchant address of the expense."
          },
          "MerchantName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Merchant name of the expense"
          },
          "MerchantVatNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Merchant VAT number of the expense."
          },
          "Units": {
            "uniqueItems": false,
            "type": "number",
            "description": "Number of units of the expense.",
            "format": "decimal"
          },
          "State": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              99
            ],
            "type": "integer",
            "description": "State of the expense : \r\n\r\n    Uploading = 0 \r\n    Uploaded = 1 \r\n    Ready = 2 \r\n    Validated = 3 \r\n    ValidatedByAccountant = 4 \r\n    Rejected = 99 \r\n",
            "format": "enum"
          },
          "VAT": {
            "$ref": "#/components/schemas/VATResponse"
          },
          "VATAvgRate": {
            "uniqueItems": false,
            "type": "number",
            "description": "VAT rate of the expense.",
            "format": "decimal"
          },
          "AttachedFilesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Number of attached files to the expense.",
            "format": "int32"
          },
          "ToReimburse": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the expense is to reimburse."
          },
          "IsBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the expense is billable to client."
          },
          "CustomFields": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairGuidString"
            },
            "description": "Custom fields of the expense."
          },
          "FileType": {
            "uniqueItems": false,
            "type": "string",
            "description": "File type of the expense."
          },
          "DefaultRate": {
            "uniqueItems": false,
            "type": "number",
            "description": "Default rate of the expense.",
            "format": "decimal"
          },
          "CreditSource_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique credit source identifier of the expense.",
            "format": "guid"
          },
          "User_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique user identifier of the expense.",
            "format": "guid"
          },
          "Project": {
            "$ref": "#/components/schemas/ProjectResponse"
          },
          "Report": {
            "$ref": "#/components/schemas/ReportResponse"
          },
          "PaymentInstrument": {
            "$ref": "#/components/schemas/PaymentInstrumentResponse"
          },
          "Vehicle": {
            "$ref": "#/components/schemas/VehicleResponse"
          },
          "TransactionsSumValue": {
            "uniqueItems": false,
            "type": "number",
            "description": "Transactions sum value of the expense.",
            "format": "decimal"
          },
          "TransactionsSumInCurrency": {
            "uniqueItems": false,
            "type": "number",
            "description": "Transactions sum value in currency of the expense.",
            "format": "decimal"
          },
          "TransactionsSumInLocalCurrency": {
            "uniqueItems": false,
            "type": "number",
            "description": "Transactions sum value in Local currency of the expense.",
            "format": "decimal"
          },
          "PerdiemCountry": {
            "uniqueItems": false,
            "type": "string",
            "description": "Country of the perdiem."
          },
          "PerdiemCalculationPeriodType": {
            "uniqueItems": false,
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "Type of the perdiem calculation period : \r\n\r\n    CalendarDay = 0 \r\n    TwentyFourHours = 1 \r\n",
            "format": "enum"
          },
          "PerDiemType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Type of the perdiem : \r\n\r\n    Time = 0 \r\n    Distance = 1 \r\n    IEG = 2 \r\n",
            "format": "enum"
          },
          "Category": {
            "$ref": "#/components/schemas/CategoryResponse"
          },
          "AccountingData": {
            "$ref": "#/components/schemas/AccountingDataResponse"
          },
          "BrokenRules": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrokenRuleResponse"
            },
            "description": "List of broken rules of the expense."
          },
          "IsMileage": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the expense is Mileage."
          },
          "CategoryExtraDataStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra date for the category of the expense."
          },
          "Guests": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuestResponse"
            },
            "description": "List of guests of the expense."
          },
          "SubStatus": {
            "uniqueItems": false,
            "enum": [
              0,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the substatus of the expense : \r\n\r\n    All = 0 \r\n    Exported = 2 \r\n    Payed = 4 \r\n    ExportedToIbiza = 8 \r\n    RecordedByInexweb = 16 \r\n    ExportedToQBO = 32 \r\n    ExportedToInexweb = 64 \r\n    RejectedByInexweb = 128 \r\n    ExportedToVSA = 256 \r\n    ExportedBalance = 512 \r\n    ExportedToSiebel = 1024 \r\n",
            "format": "enum"
          },
          "OwnerPayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Serial of the owner of the expense."
          },
          "OwnerPayId2": {
            "uniqueItems": false,
            "type": "string",
            "description": "First analytical axis of the owner of the expense."
          },
          "OwnerPayId3": {
            "uniqueItems": false,
            "type": "string",
            "description": "Second analytical axis of the owner of the expense."
          },
          "OwnerPayId4": {
            "uniqueItems": false,
            "type": "string",
            "description": "Third analytical axis of the owner of the expense."
          },
          "OwnerPayId5": {
            "uniqueItems": false,
            "type": "string",
            "description": "Fourth analytical axis of the owner of the expense."
          },
          "OwnerPayId6": {
            "uniqueItems": false,
            "type": "string",
            "description": "Fifth analytical axis of the owner of the expense."
          },
          "ExpenseTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "description": "List of tag of the expense."
          }
        },
        "format": "ExpenseResponse"
      },
      "ExportFormatResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the export format.",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "The name of export format."
          },
          "Extension": {
            "uniqueItems": false,
            "type": "string",
            "description": "The extension of the export format."
          },
          "CodePath": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique code path of the export format."
          },
          "MissionExport": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the export format is available for reports."
          },
          "InvoicesExport": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the export format is available for expenses."
          },
          "AutoExport": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if it's an auto export format."
          },
          "LastAutoExportDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Date of the last auto export if it happened and if the export format is auto export format. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          }
        },
        "format": "ExportFormatResponse"
      },
      "ExportResponse": {
        "type": "object",
        "properties": {
          "FileUrl": {
            "uniqueItems": false,
            "type": "string",
            "description": "The url of the exported file."
          },
          "FileExtension": {
            "uniqueItems": false,
            "type": "string",
            "description": "The extension of the exported file."
          },
          "FileName": {
            "uniqueItems": false,
            "type": "string",
            "description": "The name of the exported file."
          }
        },
        "format": "ExportResponse"
      },
      "GuestResponse": {
        "type": "object",
        "properties": {
          "Mail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the guest."
          },
          "FullName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Full name of the guest."
          },
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the guest.",
            "format": "guid"
          },
          "IsCoworker": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the guest is coworker or not."
          }
        },
        "format": "GuestResponse"
      },
      "ImageUrlResponse": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "uniqueItems": false,
            "type": "string"
          },
          "imageId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "validationCode": {
            "uniqueItems": false,
            "type": "string"
          }
        },
        "format": "ImageUrlResponse"
      },
      "InitSSOResponse": {
        "type": "object",
        "properties": {
          "RedirectionUri": {
            "uniqueItems": false,
            "type": "string"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "InitSSOResponse"
      },
      "ListAndPagesCountResultUserResult": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResult"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultUserResult"
      },
      "ListAndPagesCountResultCustomFieldResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultCustomFieldResponse"
      },
      "ListAndPagesCountResultDelegatedAccessResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DelegatedAccessResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultDelegatedAccessResponse"
      },
      "ListAndPagesCountResultCategoryResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultCategoryResponse"
      },
      "ListAndPagesCountResultContactWithContactCompanyResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactWithContactCompanyResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultContactWithContactCompanyResponse"
      },
      "ListAndPagesCountResultCustomFieldValueResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultCustomFieldValueResponse"
      },
      "ListAndPagesCountResultExpenseResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultExpenseResponse"
      },
      "ListAndPagesCountResultPaymentInstrumentResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInstrumentResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              13,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    NotPaid = 2 \r\n    OldAppVersion = 3 \r\n    InvalidCredentials = 4 \r\n    AdditionalInformationNeeded = 5 \r\n    InvalidPinCode = 6 \r\n    InvalidData = 7 \r\n    UserEmailExists = 10 \r\n    CompanyEmailExists = 11 \r\n    UserEmailAliasExists = 12 \r\n    IsTemporaryLogin = 13 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    NotManager = 50 \r\n    ExceedLimits = 60 \r\n    Failed = 70 \r\n    LockedOut = 71 \r\n    UserDisabled = 80 \r\n    UserNotValidated = 90 \r\n    NothingToDo = 91 \r\n    NotVerifiedInvoice = 92 \r\n    ClientError = 96 \r\n    NetworkError = 97 \r\n    ServiceError = 98 \r\n    UnknownError = 99 \r\n    NotValidZipCode = 100 \r\n    InvalidCoupon = 101 \r\n    Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    WalletNotFound = 901 \r\n    WalletDisabled = 902 \r\n    PaymentInstrumentExpired = 903 \r\n    AccountantExists = 910 \r\n    AccountantNotExists = 913 \r\n    PartnerExists = 1001 \r\n    PartnerNotExists = 1004 \r\n    NotEnoughLicences = 1005 \r\n    AlreadyExists = 1006 \r\n    BnppLimitActiveCardsError = 2000 \r\n    BnppLimitAmountAccountError = 2001 \r\n    BnppEndUsageError = 2002 \r\n    BnppWrongAccountIdError = 2003 \r\n    BnppWrongCurrencyCodeError = 2004 \r\n    InvalidCertificate = 2005 \r\n    InvalidPSPConfig = 2006 \r\n    MissionShortIdNull = 2007 \r\n    AlreadyDeleted = 2008 \r\n    CantUpdateLastAdmin = 2009 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011 \r\n    InProgress = 2012 \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultPaymentInstrumentResponse"
      },
      "ListAndPagesCountResultProjectResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultProjectResponse"
      },
      "ListAndPagesCountResultReportResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultReportResponse"
      },
      "ListAndPagesCountResultTagResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultTagResponse"
      },
      "ListAndPagesCountResultUserProjectResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProjectResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultUserProjectResponse"
      },
      "ListAndPagesCountResultUserResponse": {
        "type": "object",
        "properties": {
          "List": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            },
            "description": "List of elements to return."
          },
          "PagesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "TotalListCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Total number of elements per page.",
            "format": "int32"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "ListAndPagesCountResultUserResponse"
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserToken": {
            "uniqueItems": false,
            "type": "string"
          },
          "LastName": {
            "uniqueItems": false,
            "type": "string"
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string"
          },
          "Address": {
            "uniqueItems": false,
            "type": "string"
          },
          "City": {
            "uniqueItems": false,
            "type": "string"
          },
          "PhoneNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string"
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string"
          },
          "MailAlias": {
            "uniqueItems": false,
            "type": "string"
          },
          "Language": {
            "uniqueItems": false,
            "type": "string"
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "format": "date-time"
          },
          "CountryCode": {
            "uniqueItems": false,
            "type": "string"
          },
          "FaxNumber": {
            "uniqueItems": false,
            "type": "string"
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string"
          },
          "ShemaVersion": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "Company_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Login_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Manager_Id": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "UserType": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
            "format": "enum"
          },
          "UserRole": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n    Groups = 134217728 \r\n    DelegatedAccess = 268435456 \r\n",
            "format": "enum"
          },
          "UserTokenDurationSeconds": {
            "uniqueItems": false,
            "type": "integer",
            "format": "uint64"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "LoginResponse"
      },
      "MileageRateResponse": {
        "type": "object",
        "properties": {
          "Rate": {
            "uniqueItems": false,
            "type": "number",
            "description": "Rate of the mileage.",
            "format": "decimal"
          },
          "ConstantValue": {
            "uniqueItems": false,
            "type": "number",
            "description": "Constant value of the mileage.",
            "format": "decimal"
          }
        },
        "format": "MileageRateResponse"
      },
      "MileagesConfigurationResponse": {
        "type": "object",
        "properties": {
          "MileageTable": {
            "$ref": "#/components/schemas/MileageTableResponse"
          },
          "MileageConfigurationCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Currency of the mileage configuration."
          },
          "MileageConfigSource": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "description": "Enum attribute which is the configuratiojn source of the mileage configuration : \r\n\r\n    None = 0 \r\n    FromCustomField = 1 \r\n    FromProject = 2 \r\n    FromIkRates = 3 \r\n    FromUser = 4 \r\n    FromCompany = 5 \r\n",
            "format": "enum"
          }
        },
        "format": "MileagesConfigurationResponse"
      },
      "MileageTableResponse": {
        "type": "object",
        "properties": {
          "RateType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer",
            "description": "Enum attribute which is the rate type source of the mileage table : \r\n\r\n    State = 1 \r\n    Custom = 2 \r\n    FixedRate = 3 \r\n",
            "format": "enum"
          },
          "ListOfDistances": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of distances of the mileage table."
          },
          "ListOfPowers": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of powers of the mileage table."
          },
          "Configuration": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MileageRateResponse"
              }
            },
            "description": "Configuration of the mileage table."
          }
        },
        "format": "MileageTableResponse"
      },
      "PaymentInstrumentResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the payment instrument.",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the payment instrument."
          },
          "OwnerId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the payment instrument's owner.",
            "format": "guid"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the payment instrument."
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the payment instrument is active or not."
          },
          "InstrumentType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              99
            ],
            "type": "integer",
            "description": "Type of the payment instrument : \r\n\r\n    Cash = 0 \r\n    Card = 1 \r\n    Check = 2 \r\n    EWallet = 3 \r\n    Coupon = 4 \r\n    Wire = 5 \r\n    Bank = 6 \r\n    Other = 99 \r\n",
            "format": "enum"
          },
          "AccountType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Type of the payment instrument account : \r\n\r\n    None = 0 \r\n    Professional = 1 \r\n    Personal = 2 \r\n",
            "format": "enum"
          },
          "LastDigits": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last digits of the payment instrument."
          },
          "CardKey": {
            "uniqueItems": false,
            "type": "string",
            "description": "Card key of the payment instrument."
          },
          "JournalCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Journal code of the payment instrument."
          },
          "Auxiliary": {
            "uniqueItems": false,
            "type": "string",
            "description": "Auxiliary account of the payment instrument."
          },
          "AccountNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Account number of the payment instrument."
          }
        },
        "format": "PaymentInstrumentResponse"
      },
      "ProjectResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the project.",
            "format": "guid"
          },
          "HasBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if expenses assigned to this project can be billable to client or not."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the project is Active."
          },
          "MileageConfigurationsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mileage configuration of the project."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the project."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the project."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the project."
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the project."
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the Project."
          },
          "ProjectRef": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of the project"
          },
          "Validator_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique validator identifier of the project.",
            "format": "guid"
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique  reviwer identifier of the project.",
            "format": "guid"
          },
          "ClientName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Client name of the project."
          },
          "ForAllCompany": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Project is shared with all users."
          },
          "IsBillableDefaultValue": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the expenses assigned to the project are billable by default."
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string",
            "description": "First analytical axis relevant to the project."
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Currency code of the project. Respects the standard ISO 4217."
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Additional informations about the project."
          },
          "ProjectUseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "Enum flag attribute that shows to which entity the project will be applied to : \r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
            "format": "enum"
          },
          "CustomField_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique custom field identifier related to the project.",
            "format": "guid"
          },
          "CustomFieldParent_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique parent custom Field identifier related to the project.",
            "format": "guid"
          },
          "CategoriesIdsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Restrict expenses related to the project to certain categories. The identifiers of the specified categories must be seperated by ','."
          },
          "ValidatorFullName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Validator full name of the project."
          },
          "ValidatorMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Validator mail of the project."
          },
          "ReviewerFullName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reviwer full name of the project."
          },
          "ReviewerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reviewer mail of the project."
          },
          "IsReadOnly": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Shows if the project is just read only."
          },
          "ProjectTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "description": "List of tags of the project."
          },
          "ProjectValidators": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidatorInput"
            },
            "description": "List of project's validators."
          }
        },
        "format": "ProjectResponse"
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique report identifier.",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the report."
          },
          "DateCreation": {
            "uniqueItems": false,
            "type": "string",
            "description": "Creation date of the report. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "Budget": {
            "uniqueItems": false,
            "type": "number",
            "description": "Budget of the report.",
            "format": "decimal"
          },
          "State": {
            "uniqueItems": false,
            "enum": [
              0,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              10,
              50
            ],
            "type": "integer",
            "description": "State of the report : Active, rejected, valideted...\r\n\r\n    Active = 0 \r\n    Submitted = 2 \r\n    Rejected = 3 \r\n    Validated = 4 \r\n    Closed = 5 \r\n    ValidatedAndExported = 6 \r\n    Reimbursed = 7 \r\n    PreSubmitted = 8 \r\n    Canceled = 10 \r\n    InValidation = 50 \r\n",
            "format": "enum"
          },
          "User_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of report's owner.",
            "format": "guid"
          },
          "UserLastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of report's owner."
          },
          "UserFirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of report's owner."
          },
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of report's owner."
          },
          "Manager_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique manager identifier of the report's user.",
            "format": "guid"
          },
          "Accountant_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique accountant identifier of the report's user.",
            "format": "guid"
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique reviwer identifier of the report's user",
            "format": "guid"
          },
          "InvoicesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Invoices count related to the report.",
            "format": "int32"
          },
          "Value": {
            "uniqueItems": false,
            "type": "number",
            "description": "Value of the report.",
            "format": "decimal"
          },
          "ValueToReimburse": {
            "uniqueItems": false,
            "type": "number",
            "description": "Value to reimburse of the report.",
            "format": "decimal"
          },
          "ValueInLocalCurrency": {
            "uniqueItems": false,
            "type": "number",
            "description": "Value in user local currency of the report.",
            "format": "decimal"
          },
          "ValueToReimburseInLocalCurrency": {
            "uniqueItems": false,
            "type": "number",
            "description": "Value to reimburse in user local currency of the report.",
            "format": "decimal"
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the report. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the report. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "UserCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "User currency of the report."
          },
          "UserLocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "User local currency of the report."
          },
          "IdShort": {
            "uniqueItems": false,
            "type": "string",
            "description": "Auto-generated identifier of the report."
          },
          "CurrentValidator_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique current validator identifier of the report.",
            "format": "guid"
          },
          "InvoiceAttachedFilesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Expense attached file count relevant to the report.",
            "format": "int32"
          },
          "ReportTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "description": "List of report's tags."
          }
        },
        "format": "ReportResponse"
      },
      "TagResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the tag.",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the tag."
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the tag."
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Creation date of the tag. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Shows if the tag is active or not."
          },
          "TagType": {
            "uniqueItems": false,
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "description": "Enum attribute which is the type of the tag : \r\n\r\n    Tag = 1 \r\n    SimpleTag = 2 \r\n",
            "format": "enum"
          },
          "DefinitionStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Definition of the tag."
          },
          "UseType": {
            "uniqueItems": false,
            "enum": [
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "Enum attribute which is the use type of the tag : \r\n\r\n    Invoice = 2 \r\n    Mileage = 4 \r\n    Purchase = 8 \r\n    Subscription = 16 \r\n    Mission = 32 \r\n    User = 64 \r\n    Balance = 128 \r\n",
            "format": "enum"
          }
        },
        "format": "TagResponse"
      },
      "UpdateUserResult": {
        "type": "object",
        "properties": {
          "UserResponse": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "ResultCode": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              10,
              11,
              12,
              20,
              30,
              50,
              60,
              70,
              71,
              80,
              90,
              91,
              92,
              96,
              97,
              98,
              99,
              100,
              101,
              303,
              400,
              401,
              404,
              901,
              902,
              903,
              910,
              913,
              1001,
              1004,
              1005,
              1006,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012
            ],
            "type": "integer",
            "description": "Internal Expensya response code: \r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    InvalidData = 7 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    Failed = 70 \r\n    NothingToDo = 91 \r\n   Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011... \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extra details sent by the server."
          }
        },
        "format": "UpdateUserResult"
      },
      "UserProject": {
        "type": "object",
        "properties": {
          "User_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user.",
            "format": "guid"
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the project."
          },
          "Project_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the project.",
            "format": "guid"
          },
          "ElementType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72
            ],
            "type": "integer",
            "description": "Type of the element.\r\n\r\n    Invoice = 1 \r\n    Mission = 2 \r\n    User = 3 \r\n    UserCollectorConnection = 4 \r\n    Company = 5 \r\n    Partner = 6 \r\n    PartnerUser = 7 \r\n    BackendUser = 8 \r\n    DelegateAccess = 9 \r\n    PartnerContract = 10 \r\n    PartnerBill = 11 \r\n    VirtualCard = 12 \r\n    CompanyConfigurationSettings = 13 \r\n    PartnerConfigurationSettings = 14 \r\n    ExportFormat = 15 \r\n    PartnerExportFormat = 16 \r\n    ImportFormat = 17 \r\n    CompanyOffer = 18 \r\n    CompanyBill = 19 \r\n    CompanyContract = 20 \r\n    Project = 21 \r\n    ProPaymentInstrument = 22 \r\n    FavoritePlaces = 23 \r\n    OrangeApiUser = 24 \r\n    UserProject = 25 \r\n    CustomField = 26 \r\n    Contact = 27 \r\n    Card = 28 \r\n    Rule = 29 \r\n    Tag = 30 \r\n    CustomFieldValue = 31 \r\n    UserCustomFieldValue = 32 \r\n    CompanyIntegrationSettings = 33 \r\n    CompanyIntegration = 34 \r\n    UserBankAccount = 35 \r\n    CompanyBankAccount = 36 \r\n    PaymentInstrument = 37 \r\n    Category = 38 \r\n    Vehicle = 39 \r\n    TagAssignment = 40 \r\n    CompanyContact = 41 \r\n    Validator = 42 \r\n    UserWithValidators = 43 \r\n    CompanySftp = 44 \r\n    CompanyOrder = 45 \r\n    Supplier = 46 \r\n    CustomIkRate = 47 \r\n    DefaultIkRate = 48 \r\n    ExtraSettings = 49 \r\n    SSo = 50 \r\n    CustomIntegration = 51 \r\n    AccountSettings = 52 \r\n    PerdiemConfiguration = 53 \r\n    MileageConfiguration = 54 \r\n    FieldPosition = 55 \r\n    VirtualPayment = 56 \r\n    LegalStorage = 57 \r\n    MobileConfiguration = 58 \r\n    BICube = 59 \r\n    ExportCustom = 60 \r\n    Domain = 61 \r\n    BiConfiguration = 62 \r\n    AccessBackendRequest = 63 \r\n    CompanySyncVersion = 64 \r\n    CacheElement = 65 \r\n    IntegrationSetting = 66 \r\n    DomainName = 67 \r\n    VehicleAssignment = 68 \r\n    UserSyncVersion = 69 \r\n    Login = 70 \r\n    CompanyLink = 71 \r\n    CompanyEbics = 72 \r\n",
            "format": "enum"
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Additional informations about the project."
          },
          "HasBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the project is billable to client."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the assignment of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the assignment of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Show if the project is Active."
          },
          "MileageConfigurationsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mileage configuration of the project."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the project."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the project."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the project."
          }
        },
        "format": "UserProject"
      },
      "UserProjectResponse": {
        "type": "object",
        "properties": {
          "UserProject": {
            "$ref": "#/components/schemas/UserProject"
          },
          "User": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "Project": {
            "$ref": "#/components/schemas/ProjectResponse"
          }
        },
        "format": "UserProjectResponse"
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user.",
            "format": "guid"
          },
          "LastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the user."
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the user."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the user."
          },
          "PhoneNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Phone Number of the user."
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user."
          },
          "MailAlias": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail alias of the user."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the user."
          },
          "FaxNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Fax number of the user."
          },
          "CreationDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Creation date of the user. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "CountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Country code of the user."
          },
          "Language": {
            "uniqueItems": false,
            "type": "string",
            "description": "Language of the user."
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Currency of the user."
          },
          "LocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Local currency of the user."
          },
          "LocalCountry": {
            "uniqueItems": false,
            "type": "string",
            "description": "Local country of the user."
          },
          "CanCreateCategories": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Sows if the user has right to create categories."
          },
          "Manager_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique manager identifier of the user.",
            "format": "guid"
          },
          "AccountantMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Accountant mail of the user."
          },
          "AccountantPayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Accountant analytical axis of the user."
          },
          "UserType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16,
              32,
              56
            ],
            "type": "integer",
            "description": "User Type : \r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
            "format": "enum"
          },
          "UserState": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "User State : \r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
            "format": "enum"
          },
          "PayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Analytacal axis of the user."
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string",
            "description": "Second analytical axis of the user."
          },
          "PayId3": {
            "uniqueItems": false,
            "type": "string",
            "description": "Third analytical axis of the user."
          },
          "PayId4": {
            "uniqueItems": false,
            "type": "string",
            "description": "Fourth analytical axis of the user"
          },
          "PayId5": {
            "uniqueItems": false,
            "type": "string",
            "description": "Fifth analytical axis of the user."
          },
          "PayId6": {
            "uniqueItems": false,
            "type": "string",
            "description": "Sixth analytical axis of the user."
          },
          "ManagerFirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Manager first name of the user."
          },
          "ManagerLastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Manager last name of the user."
          },
          "ManagerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Manager mail of the user."
          },
          "ManagerPayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Manager analytical axis of the user."
          },
          "ManagerUserState": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Manager state of the user : \r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
            "format": "enum"
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique reviwer identifier of the user.",
            "format": "guid"
          },
          "ReviewerFirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reviwer first name of the user."
          },
          "ReviewerLastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reviwer last name of the user."
          },
          "ReviewerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reviwer mail of the user."
          },
          "ReviewerPayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reviwer analytical axis of the user."
          },
          "ReviewerUserState": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Reviwer state of the user : \r\n\r\n    None = 0 \r\n    Validated = 1 \r\n    Active = 2 \r\n",
            "format": "enum"
          },
          "JobTitle": {
            "uniqueItems": false,
            "type": "string",
            "description": "Job title of the user."
          },
          "Vendor": {
            "uniqueItems": false,
            "type": "string",
            "description": "Vendor of the user."
          },
          "MileageConfigurationsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mileage configuration of the user."
          },
          "PerDiemConfigName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Perdiem configuration of the user."
          },
          "UserRole": {
            "uniqueItems": false,
            "enum": [
              0,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024,
              2048,
              4096,
              8192,
              16384,
              32768,
              65536,
              131072,
              262144,
              524288,
              1048576,
              2097152,
              4194304,
              8388608,
              16777216,
              33554432,
              67108864,
              134217728,
              268435456
            ],
            "type": "integer",
            "description": "Roles access of the user : \r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n    Groups = 134217728 \r\n    DelegatedAccess = 268435456 \r\n",
            "format": "enum"
          },
          "ConfigurationSettingsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Additional configurations of the user."
          },
          "ConfigurationSettingsReference": {
            "uniqueItems": false,
            "type": "string",
            "description": "Configuration reference of the user."
          },
          "IKRatesId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the mileage compensation rates assigned to the user.",
            "format": "guid"
          },
          "IKRatesReference": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of the mileage compensation rates assigned to the user."
          },
          "LastLoginDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last login date of the user. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "LastSignInDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last signIn date of the user. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "Validators": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidatorResponse"
            },
            "description": "List of user's validators."
          },
          "UserSimpleTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "description": "List of user's simple tags."
          },
          "UserTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "description": "List of user's tags."
          },
          "RestrictedTags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "description": "Restricted tags which are managed by the user."
          }
        },
        "format": "UserResponse"
      },
      "ValidatorResponse": {
        "type": "object",
        "properties": {
          "Mail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the validator."
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the validator."
          },
          "LastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the validator."
          },
          "MinimumAmount": {
            "uniqueItems": false,
            "type": "number",
            "description": "If the expense's amount exceeds this minimum amount, the expense should be sent to the validator.",
            "format": "decimal"
          },
          "SkipConditions": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16,
              32,
              64
            ],
            "type": "integer",
            "description": "Enum flag attribute which represents the conditions that could skip the validator's validation level, If omitted, Skip Condition will be set to the default value which is 'None': \r\n\r\n    None = 0 (No skip conditions)\r\n    WarningRuleWithInterval = 1 (Validator will be skipped if there are no broken warning rules with interval)\r\n    ShouldBeTheLastValidator = 2 (It should only be applied on project validators!, It means that the selected validator is the last to validate)\r\n    WarningRule = 4 (Validator will be skipped if there are no broken warning rules)\r\n    EmptyLevel = 8 (It should only be applied on project validators!, It means that the selected validator will be skipped for the user's validator in the same level)\r\n    RefundException = 16 (Validator will be skipped if there are no broken rules with refund exception)\r\n    WarningRuleWithIntervalBySelect = 32 (Validator will be skipped if there are no broken Warning Rules With Interval (only those selected by the administrator and specified in 'Rules External Ids To Assign') and should have the 'Has Alert Rules By Additional Validator' setting activated)\r\n    WarningRuleBySelect = 64 (Validator will be skipped if there are no broken Warning Rules (only those selected by the administrator and specified in 'Rules External Ids To Assign') and should have the 'Has Alert Rules By Additional Validator' setting activated)\r\n",
            "format": "enum"
          },
          "RulesExternalIdsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of the external identifiers of the rules to assign to the validator."
          }
        },
        "format": "ValidatorResponse"
      },
      "VatAccountResponse": {
        "type": "object",
        "properties": {
          "Account": {
            "uniqueItems": false,
            "type": "string",
            "description": "Code of the VAT account."
          },
          "VatRate": {
            "uniqueItems": false,
            "type": "number",
            "description": "Rate of the VAT account.",
            "format": "decimal"
          },
          "VatClaimRate": {
            "uniqueItems": false,
            "type": "number",
            "description": "Claim rate of the VAT account.",
            "format": "decimal"
          }
        },
        "format": "VatAccountResponse"
      },
      "VATResponse": {
        "type": "object",
        "properties": {
          "Rates": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "number",
              "format": "decimal"
            },
            "description": "VAT rates  of the expense."
          },
          "Values": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "number",
              "format": "decimal"
            },
            "description": "AT values  of the expense."
          },
          "VatFreeAmount": {
            "uniqueItems": false,
            "type": "number",
            "description": "Free amount of the VAT.",
            "format": "decimal"
          },
          "Tips": {
            "uniqueItems": false,
            "type": "number",
            "description": "Tips of the expense ",
            "format": "decimal"
          }
        },
        "format": "VATResponse"
      },
      "VehicleResponse": {
        "type": "object",
        "properties": {
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the vehicle."
          },
          "DateCreation": {
            "uniqueItems": false,
            "type": "string",
            "description": "Creation date of the vehicle. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "CreationYearKm": {
            "uniqueItems": false,
            "type": "number",
            "description": "Distance already filed outside Expensya in the creation year in Km.",
            "format": "decimal"
          },
          "CreationYearMiles": {
            "uniqueItems": false,
            "type": "number",
            "description": "Distance already filed outside Expensya in the creation year in mile.",
            "format": "decimal"
          },
          "LastYearDistanceKm": {
            "uniqueItems": false,
            "type": "number",
            "description": "Distance already filed outside Expensya in the last year in Km.",
            "format": "decimal"
          },
          "LastUpdatedYear": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Last updated year of the vehicle.",
            "format": "int32"
          },
          "VehicleType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer",
            "description": "Type of the vehicle : \r\n\r\n    Car = 1 \r\n    Moped = 2 \r\n    Scooter = 3 \r\n    Motocyle = 4 \r\n    Bicycle = 5 \r\n",
            "format": "enum"
          },
          "InternalVehicleType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Internal type of the vehicle : \r\n\r\n    None = 0 \r\n    Personal = 1 \r\n    Professional = 2 \r\n",
            "format": "enum"
          },
          "CurrentValidator_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the current validator of the vehicle.",
            "format": "guid"
          },
          "LastValidatorReminderDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last validator reminder date of the vehicle. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "Comments": {
            "uniqueItems": false,
            "type": "string",
            "description": "Comments of the vehicle."
          },
          "State": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              -1
            ],
            "type": "integer",
            "description": "State of the vehicle : \r\n\r\n    Disabled = 0 \r\n    Active = 1 \r\n    Submitted = 2 \r\n    Approved = 3 \r\n    Rejected = 4 \r\n    All = -1 \r\n",
            "format": "enum"
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the vehicle."
          },
          "AdministrativePower": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Administrative power of the vehicle.",
            "format": "int32"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Shows if the vehicle is active or not."
          },
          "AttachedFilesCount": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Count of the attached files to the vehicle.",
            "format": "int32"
          },
          "CreationType": {
            "uniqueItems": false,
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "description": "Type of the creation of the vehicle : \r\n\r\n    UserCreated = 0 \r\n    DefaultVehicle = 1 \r\n",
            "format": "enum"
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the vehicle. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "CEnd date of the vehicle. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          }
        },
        "format": "VehicleResponse"
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "UserId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "LoginId": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "ResultCode": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    NotPaid = 2 \r\n    OldAppVersion = 3 \r\n    InvalidCredentials = 4 \r\n    AdditionalInformationNeeded = 5 \r\n    InvalidPinCode = 6 \r\n    InvalidData = 7 \r\n    UserEmailExists = 10 \r\n    CompanyEmailExists = 11 \r\n    UserEmailAliasExists = 12 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    NotManager = 50 \r\n    ExceedLimits = 60 \r\n    Failed = 70 \r\n    LockedOut = 71 \r\n    UserDisabled = 80 \r\n    UserNotValidated = 90 \r\n    NothingToDo = 91 \r\n    NotVerifiedInvoice = 92 \r\n    ClientError = 96 \r\n    NetworkError = 97 \r\n    ServiceError = 98 \r\n    UnknownError = 99 \r\n    NotValidZipCode = 100 \r\n    InvalidCoupon = 101 \r\n    Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    WalletNotFound = 901 \r\n    WalletDisabled = 902 \r\n    PaymentInstrumentExpired = 903 \r\n    AccountantExists = 910 \r\n    AccountantNotExists = 913 \r\n    PartnerExists = 1001 \r\n    PartnerNotExists = 1004 \r\n    NotEnoughLicences = 1005 \r\n    AlreadyExists = 1006 \r\n    BnppLimitActiveCardsError = 2000 \r\n    BnppLimitAmountAccountError = 2001 \r\n    BnppEndUsageError = 2002 \r\n    BnppWrongAccountIdError = 2003 \r\n    BnppWrongCurrencyCodeError = 2004 \r\n    BnppWrongCertificateOrEndpointError = 2005 \r\n    MissionShortIdNull = 2007 \r\n    AlreadyDeleted = 2008 \r\n    CantUpdateLastAdmin = 2009 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011 \r\n    InProgress = 2012 \r\n",
            "format": "enum"
          },
          "UserMessage": {
            "uniqueItems": false,
            "type": "string"
          },
          "Details": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsSuccess": {
            "uniqueItems": false,
            "type": "boolean"
          }
        },
        "format": "SignupResponse"
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "User": {
            "$ref": "#/components/schemas/UserAndLogin"
          },
          "ResultCode": {
            "uniqueItems": false,
            "type": "integer",
            "description": "\r\n\r\n    Success = 0 \r\n    PartialSuccess = 1 \r\n    NotPaid = 2 \r\n    OldAppVersion = 3 \r\n    InvalidCredentials = 4 \r\n    AdditionalInformationNeeded = 5 \r\n    InvalidPinCode = 6 \r\n    InvalidData = 7 \r\n    UserEmailExists = 10 \r\n    CompanyEmailExists = 11 \r\n    UserEmailAliasExists = 12 \r\n    NotAdmin = 20 \r\n    NotAllowed = 30 \r\n    NotManager = 50 \r\n    ExceedLimits = 60 \r\n    Failed = 70 \r\n    LockedOut = 71 \r\n    UserDisabled = 80 \r\n    UserNotValidated = 90 \r\n    NothingToDo = 91 \r\n    NotVerifiedInvoice = 92 \r\n    ClientError = 96 \r\n    NetworkError = 97 \r\n    ServiceError = 98 \r\n    UnknownError = 99 \r\n    NotValidZipCode = 100 \r\n    InvalidCoupon = 101 \r\n    Redirect = 303 \r\n    BadRequest = 400 \r\n    InvalidToken = 401 \r\n    NotFound = 404 \r\n    WalletNotFound = 901 \r\n    WalletDisabled = 902 \r\n    PaymentInstrumentExpired = 903 \r\n    AccountantExists = 910 \r\n    AccountantNotExists = 913 \r\n    PartnerExists = 1001 \r\n    PartnerNotExists = 1004 \r\n    NotEnoughLicences = 1005 \r\n    AlreadyExists = 1006 \r\n    BnppLimitActiveCardsError = 2000 \r\n    BnppLimitAmountAccountError = 2001 \r\n    BnppEndUsageError = 2002 \r\n    BnppWrongAccountIdError = 2003 \r\n    BnppWrongCurrencyCodeError = 2004 \r\n    BnppWrongCertificateOrEndpointError = 2005 \r\n    MissionShortIdNull = 2007 \r\n    AlreadyDeleted = 2008 \r\n    CantUpdateLastAdmin = 2009 \r\n    TechnicalError = 2010 \r\n    AccessDenied = 2011 \r\n    InProgress = 2012 \r\n",
            "format": "enum"
          },
          "UserMessage": {
            "uniqueItems": false,
            "type": "string"
          },
          "Details": {
            "uniqueItems": false,
            "type": "string"
          },
          "IsSuccess": {
            "uniqueItems": false,
            "type": "boolean"
          }
        },
        "format": "UpdateUserResponse"
      },
      "KeyValuePairGuidString": {
        "type": "object",
        "properties": {
          "Key": {
            "uniqueItems": false,
            "type": "string",
            "format": "guid"
          },
          "Value": {
            "uniqueItems": false,
            "type": "string"
          }
        },
        "format": "KeyValuePairGuidString"
      },
      "KeyValuePairStringString": {
        "type": "object",
        "properties": {
          "Key": {
            "uniqueItems": false,
            "type": "string"
          },
          "Value": {
            "uniqueItems": false,
            "type": "string"
          }
        },
        "format": "KeyValuePairStringString"
      },
      "Object": {
        "type": "object",
        "format": "Object"
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "Ticks": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "Days": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "Hours": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "Milliseconds": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "Minutes": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "Seconds": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int32"
          },
          "TotalDays": {
            "uniqueItems": false,
            "type": "number",
            "format": "double"
          },
          "TotalHours": {
            "uniqueItems": false,
            "type": "number",
            "format": "double"
          },
          "TotalMilliseconds": {
            "uniqueItems": false,
            "type": "number",
            "format": "double"
          },
          "TotalMinutes": {
            "uniqueItems": false,
            "type": "number",
            "format": "double"
          },
          "TotalSeconds": {
            "uniqueItems": false,
            "type": "number",
            "format": "double"
          },
          "Zero": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "MaxValue": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "MinValue": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "TicksPerMillisecond": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "TicksPerSecond": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "TicksPerMinute": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "TicksPerHour": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          },
          "TicksPerDay": {
            "uniqueItems": false,
            "type": "integer",
            "format": "int64"
          }
        },
        "format": "TimeSpan"
      },
      "TupleStringDecimal": {
        "type": "object",
        "properties": {
          "Item1": {
            "uniqueItems": false,
            "type": "string"
          },
          "Item2": {
            "uniqueItems": false,
            "type": "number",
            "format": "decimal"
          }
        },
        "format": "TupleStringDecimal"
      },
      "AddCategoryInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AddCategoryInput"
        },
        "example": "[\r\n  {\r\n    \"Name\": \"Name\",\r\n    \"Description\": \"Description\",\r\n    \"IsActive\": \"true\",\r\n    \"ParentCategory_Id\": \"64b8f921-4004-49e9-aeb4-d60380d4c923\",\r\n    \"IsActiveAsDefault\": \"false\",\r\n    \"CostAccount\": \"123456\",\r\n    \"VatAccount\": null,\r\n    \"VatClaimRate\": 10,\r\n    \"VatClaimRates\": \"{\\\"2018\\\":10,\\\"2019\\\":20,\\\"2020\\\":30} \",\r\n    \"CategoryUseType\": \"1\",\r\n    \"ExternalId\": \"ExternalId\",\r\n    \"TagsToAssign\": [\r\n      \"Tag1\",\r\n      \"Tag2\"\r\n    ]\r\n  }\r\n]"
      },
      "UpdateCategoryInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UpdateCategoryInput"
        },
        "example": "[\r\n  {\r\n    \"Id\": \"77a8f921-4004-49e9-aeb4-d60380d4c923\",\r\n    \"Name\": \"Name\",\r\n    \"Description\": \"Description\",\r\n    \"IsActive\": \"true\",\r\n    \"ParentCategory_Id\": \"64b8f921-4004-49e9-aeb4-d60380d4c923\",\r\n    \"IsActiveAsDefault\": \"false\",\r\n    \"CostAccount\": \"123456\",\r\n    \"VatAccount\": null,\r\n    \"VatClaimRate\": 10,\r\n    \"VatClaimRates\": \"{\\\"2018\\\":10,\\\"2019\\\":20,\\\"2020\\\":30} \",\r\n    \"CategoryUseType\": \"1\",\r\n    \"ExternalId\": \"ExternalId\",\r\n    \"TagsToAssign\": [\r\n      \"Tag1\",\r\n      \"Tag2\"\r\n    ],\r\n    \"TagsToUnassign\": [\r\n      \"Tag3\",\r\n      \"Tag4\"\r\n    ]\r\n  }\r\n]"
      },
      "CustomFieldValueInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustomFieldValueInput"
        },
        "example": "[\r\n  {\r\n    \"Reference\": \"Rouge\",\r\n    \"Value\": \"FF0000\",\r\n    \"ExternalId\": \"Ext2\",\r\n    \"IsActive\": \"true\",\r\n    \"StartDate\": \"2020-06-04T08:30:15.023Z\",\r\n    \"EndDate\": \"2021-12-08T10:20:15.023Z\",\r\n    \"UseType\": \"1\",\r\n    \"TagsToAssign\": [\r\n      \"Tag1\",\r\n      \"Tag2\"\r\n    ],\r\n    \"ParentsIds\": [\r\n      \"c128ed28-7a1b-43ae-a8b2-ddd23262f070\",\r\n      \"a04ba393-21de-4f84-b3f0-9ac61597be0b\"\r\n    ],\r\n    \"AssignedUsersMails\": [\r\n      \"user1@yopmail.com\",\r\n      \"user2@yopmail.com\"\r\n    ],\r\n    \"AssignedUsersPayIds\": [\r\n      \"425100\",\r\n      \"425200\"\r\n    ]\r\n  }\r\n]"
      },
      "UpdateCustomFieldValueInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UpdateCustomFieldValueInput"
        },
        "example": "[\r\n  {\r\n    \"Reference\": \"Rouge\",\r\n    \"Value\": \"FF0000\",\r\n    \"ExternalId\": \"Ext2\",\r\n    \"IsActive\": \"true\",\r\n    \"StartDate\": \"2020-06-04T08:30:15.023Z\",\r\n    \"EndDate\": \"2021-12-08T10:20:15.023Z\",\r\n    \"UseType\": \"1\",\r\n    \"TagsToAssign\": [\r\n      \"Tag1\",\r\n      \"Tag2\"\r\n    ],\r\n    \"TagsToUnassign\": [\r\n      \"Tag3\"\r\n    ],\r\n    \"ParentsIds\": [\r\n      \"c128ed28-7a1b-43ae-a8b2-ddd23262f070\",\r\n      \"a04ba393-21de-4f84-b3f0-9ac61597be0b\"\r\n    ],\r\n    \"AssignedUsersMails\": [\r\n      \"user1@yopmail.com\",\r\n      \"user2@yopmail.com\"\r\n    ],\r\n    \"AssignedUsersPayIds\": [\r\n      \"425100\",\r\n      \"425200\"\r\n    ]\r\n  }\r\n]"
      },
      "ApiExpenseExpenseIdImageGet200ApplicationJsonResponse": {
        "type": "string",
        "format": "stream"
      },
      "AddOrUpdateProjectInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AddOrUpdateProjectInput"
        },
        "example": "[\r\n  {\r\n    \"HasBillable\": \"true\",\r\n    \"StartDate\": \"2018-06-04T08:30:15.023Z\",\r\n    \"EndDate\": \"2020-06-04T08:30:15.023Z\",\r\n    \"IsActive\": \"true\",\r\n    \"Address\": \"Random address\",\r\n    \"ZipCode\": null,\r\n    \"City\": \"Paris\",\r\n    \"ExternalId\": \"Ext1\",\r\n    \"Name\": \"MyFirstProject \",\r\n    \"ProjectRef\": \"ProjectReference1\",\r\n    \"Validator_Id\": \"31e74d4f-0aaf-4cfc-be6b-167212a95080\",\r\n    \"ValidatorMail\": \"validator@yopmail.com\",\r\n    \"ClientName\": \"François\",\r\n    \"ForAllCompany\": \"true\",\r\n    \"IsBillableDefaultValue\": \"true\",\r\n    \"Currency\": \"EUR\",\r\n    \"ExtraData\": null,\r\n    \"ProjectUseType\": \"1\",\r\n    \"AffectedUsersPayIds\": [\r\n      \"Paris\",\r\n      \"Lyon\"\r\n    ],\r\n    \"AffectedUsersMails\": [\r\n      \"user1@yopmail.com\",\r\n      \"user2@yopmail.com\"\r\n    ],\r\n    \"TagsToAssign\": [\r\n      \"Paris\"\r\n    ],\r\n    \"TagsToUnassign\": [\r\n      \"Lyon\"\r\n    ],\r\n    \"ProjectValidators\": [\r\n      {\r\n        \"Mail\": \"user3@yopmail.com\",\r\n        \"MinimumAmount\": \"15.00\"\r\n      }\r\n    ]\r\n  }\r\n]"
      },
      "AddUserProjectInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AddUserProjectInput"
        },
        "example": "[\r\n  {\r\n    \"ProjectExternalId\": \"ProjectExternalId\",\r\n    \"HasBillable\": \"true\",\r\n    \"StartDate\": \"2018-06-04T08:30:15.023Z\",\r\n    \"EndDate\": \"2018-08-04T08:30:15.023Z\",\r\n    \"IsActive\": \"true\",\r\n    \"Address\": null,\r\n    \"ZipCode\": \"15646\",\r\n    \"City\": \"Paris\",\r\n    \"UserMail\": \"user@yopmail.com\",\r\n    \"UserPayId\": \"Paris\"\r\n  }\r\n]"
      },
      "UpdateUserProjectInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UpdateUserProjectInput"
        },
        "example": "[\r\n  {\r\n    \"ExternalId\": \"User_Project_ExternalId\",\r\n    \"ProjectExternalId\": \"ProjectExternalId\",\r\n    \"HasBillable\": \"true\",\r\n    \"StartDate\": \"2018-06-04T08:30:15.023Z\",\r\n    \"EndDate\": \"2018-08-04T08:30:15.023Z\",\r\n    \"UserMail\": \"user@yopmail.com\"\r\n  }\r\n]"
      },
      "UpdateUserStateInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UpdateUserStateInput"
        },
        "example": "[\r\n  {\r\n    \"UserId\": \"e24895f3-215b-4340-82de-7e8676e4fd7d\",\r\n    \"Operation\": 4\r\n  }\r\n]"
      },
      "AddCategoryInput": {
        "required": [
          "Name",
          "NameEN"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the category in the user language. The length of the field should not exceed 120 letters. Otherwise, it will be truncated"
          },
          "NameEN": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the category in english. The length of the field should not exceed 120 letters. Otherwise, it will be truncated"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the category."
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the category is active or not."
          },
          "ParentCategory_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique parent identifier of the category (category can be linked to another category).",
            "format": "guid"
          },
          "IsActiveAsDefault": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Default category when user add new expense."
          },
          "CostAccount": {
            "uniqueItems": false,
            "type": "string",
            "description": "Cost account of the category."
          },
          "VatAccount": {
            "uniqueItems": false,
            "type": "string",
            "description": "VAT account of the category."
          },
          "VatClaimRate": {
            "uniqueItems": false,
            "type": "number",
            "description": "VAT claim rate of the category.",
            "format": "decimal"
          },
          "VatClaimRates": {
            "uniqueItems": false,
            "type": "string",
            "description": "VAT claim rate of the category by year. the format of this string is as follow :  {\"2018\":vatclaimrate1,\"2019\":vatclaimrate1,\"2020\":vatclaimrate1} , with this format we can specify the VAT claim rate of the last 3 years, VatClaimRate is a value between 0 and 100"
          },
          "CategoryUseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4,
              8
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the type of the category : \r\n\r\n    Invoices = 1 \r\n    Purchases = 2 \r\n    Subscriptions = 4 \r\n    Payments = 8 \r\n",
            "format": "enum"
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the category."
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Additional informations about the category."
          },
          "TagsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags'names that will be assigned to the category."
          }
        },
        "format": "AddCategoryInput"
      },
      "TravelPolicyDetailsInput": {
        "type": "object",
        "properties": {
          "IsInPolicy": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies whether this travel is within the policy of the company or not."
          },
          "ReasonDescription": {
            "uniqueItems": false,
            "type": "string",
            "description": "If IsInPolicy = false, this field specifies the reason of the travel."
          }
        },
        "format": "TravelPolicyDetailsInput"
      },
      "UpdateCategoryInput": {
        "required": [
          "Id",
          "Name",
          "NameEN"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Identifier of the category.",
            "format": "guid"
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the category in the user language. The length of the field should not exceed 120 letters. Otherwise, it will be truncated"
          },
          "NameEN": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the category in english. The length of the field should not exceed 120 letters. Otherwise, it will be truncated"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the category."
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the category is active or not."
          },
          "ParentCategory_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique parent identifier of the category (category can be linked to another category).",
            "format": "guid"
          },
          "IsActiveAsDefault": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Default category when user add new expense."
          },
          "CostAccount": {
            "uniqueItems": false,
            "type": "string",
            "description": "Cost account of the category."
          },
          "VatAccount": {
            "uniqueItems": false,
            "type": "string",
            "description": "VAT account of the category."
          },
          "VatClaimRate": {
            "uniqueItems": false,
            "type": "number",
            "description": "VAT claim rate of the category.",
            "format": "decimal"
          },
          "VatClaimRates": {
            "uniqueItems": false,
            "type": "string",
            "description": "VAT claim rate of the category by year. the format of this string is as follow :  {\"2018\":vatclaimrate1,\"2019\":vatclaimrate1,\"2020\":vatclaimrate1} , with this format we can specify the VAT claim rate of the last 3 years, VatClaimRate is a value between 0 and 100"
          },
          "CategoryUseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4,
              8
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the type of the category : \r\n\r\n    Invoices = 1 \r\n    Purchases = 2 \r\n    Subscriptions = 4 \r\n    Payments = 8 \r\n",
            "format": "enum"
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the category."
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Additional informations about the category."
          },
          "TagsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags'names that will be assigned to the category."
          },
          "TagsToUnassign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags' names that will be unassigned from the category."
          }
        },
        "format": "UpdateCategoryInput"
      },
      "ContactUpdateInput": {
        "type": "object",
        "properties": {
          "ContactFirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the contact."
          },
          "ContactLastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the contact."
          },
          "ContactRole": {
            "uniqueItems": false,
            "type": "string",
            "description": "Role of the contact."
          },
          "ContactMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the contact."
          },
          "ContactPhoneNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Phone number of the contact."
          },
          "ContactAddress": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the contact."
          },
          "ContactZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the contact."
          },
          "ContactCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the contact."
          },
          "ContactCountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Country code of the contact."
          },
          "IsCoworker": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the contact is a coworker or not."
          },
          "IsShared": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the contact is shared or not with all employees."
          },
          "ContactCompanyName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the contact company."
          },
          "ContactCompanyMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the contact company."
          },
          "ContactCompanyWebSite": {
            "uniqueItems": false,
            "type": "string",
            "description": "Website of the contact company."
          },
          "ContactCompanyPhoneNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "Phone number of the contact company."
          },
          "ContactCompanyAddress": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the contact company."
          },
          "ContactCompanyZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the contact company."
          },
          "ContactCompanyCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the contact company."
          },
          "ContactCompanyCountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Country code of the contact company."
          }
        },
        "format": "ContactUpdateInput",
        "example": "{\r\n  \"ContactFirstName\": \"First Name\",\r\n  \"ContactLastName\": \"Last Name\",\r\n  \"ContactAddress\": \"46  Faubourg Saint Honoré\",\r\n  \"ContactZipCode\": null,\r\n  \"IsCoworker\": \"true\",\r\n  \"IsShared\": \"false\",\r\n  \"ContactCompanyWebSite\": \"https://companywebsite.random\",\r\n  \"ContactCompanyPhoneNumber\": \"53.25.74.63720\",\r\n  \"ContactCompanyAddress\": \"15 Faubourg Saint Honoré\",\r\n  \"ContactCompanyZipCode\": \"75018\"\r\n}"
      },
      "DelegatedAccessInput": {
        "required": [
          "BeneficiaryMail",
          "OwnerMail",
          "BeneficiaryRights"
        ],
        "type": "object",
        "properties": {
          "BeneficiaryMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user who will benefit of the delegated access permission."
          },
          "OwnerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the real account owner."
          },
          "BeneficiaryRights": {
            "uniqueItems": false,
            "enum": [
              0,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512
            ],
            "type": "integer",
            "description": "Enum flag attribute which presents the rights given to the beneficiary in the owner account: \r\n\r\n    All = 0 \r\n    Manager = 2 \r\n    Employee = 4 \r\n    ReadOnly = 8 \r\n    MissionOrderAsManager = 16 \r\n    MissionOrderAsEmployee = 32 \r\n    AdvanceAsManager = 64 \r\n    AdvanceAsEmployee = 128 \r\n    VirtualCardAsManager = 256 \r\n    VehicleAsManager = 512 \r\n",
            "format": "enum"
          }
        },
        "format": "DelegatedAccessInput",
        "example": "{\r\n  \"BeneficiaryMail\": \"string\",\r\n  \"OwnerMail\": \"string\",\r\n  \"BeneficiaryRights\": 0\r\n}"
      },
      "AddReceiptInputWithUserId": {
        "required": [
          "UserId",
          "ReceiptContent",
          "ReceiptName",
          "FileType"
        ],
        "type": "object",
        "properties": {
          "UserId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user."
          },
          "ReceiptContent": {
            "uniqueItems": false,
            "type": "string",
            "description": "Content of the receipt on base64."
          },
          "ReceiptName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the receipt."
          },
          "FileType": {
            "uniqueItems": false,
            "type": "string",
            "description": "File type : jpeg, pdf, png."
          }
        },
        "format": "AddReceiptInputWithUserId",
        "example": "{\r\n  \"UserId\": \"e24895f3-215b-4340-82de-7e8676e4fd7d\",\r\n  \"ReceiptContent\": \"f/lX7ufeUSGE+Ws1KNUg6wGE+Ws1KNUg6ws1KNUg\",\r\n  \"ReceiptName\": \"Invoice\",\r\n  \"FileType\": \"jpeg\"\r\n}"
      },
      "AddTagInput": {
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the tag."
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the tag."
          },
          "PayIdsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Analytic axis type and its value used when the tag is based on analytic axis. example: \"PayIdsStr={\"PayId2\":\"Tunis\"}."
          },
          "TagType": {
            "uniqueItems": false,
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "description": "Enum attribute which is the type of the tag : \r\n\r\n    Tag = 1 \r\n    SimpleTag = 2 \r\n",
            "format": "enum"
          },
          "UseType": {
            "uniqueItems": false,
            "enum": [
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the use type of the tag : \r\n\r\n    Invoice = 2 \r\n    Mileage = 4 \r\n    Purchase = 8 \r\n    Subscription = 16 \r\n    Mission = 32 \r\n    User = 64 \r\n    Balance = 128 \r\n",
            "format": "enum"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the tag is active or not."
          },
          "SimpleTagsNames": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of simple tags'names used when the tag is based on simple tags."
          }
        },
        "format": "AddTagInput",
        "example": "{\r\n  \"Name\": \"Paris\",\r\n  \"Description\": \"this is a group of Paris users\",\r\n  \"PayIdsStr\": \"{\\\"PayId2\\\":\\\"Paris\\\"}\",\r\n  \"TagType\": \"1\",\r\n  \"UseType\": \"2\",\r\n  \"IsActive\": \"false\"\r\n}"
      },
      "UpdateTagInput": {
        "type": "object",
        "properties": {
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the tag."
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the tag."
          },
          "PayIdsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Analytic axis type and its value used when the tag is based on analytic axis. example: \"PayIdsStr={\"PayId2\":\"Tunis\"}."
          },
          "TagType": {
            "uniqueItems": false,
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "description": "Enum attribute which is the type of the tag : \r\n\r\n    Tag = 1 \r\n    SimpleTag = 2 \r\n",
            "format": "enum"
          },
          "UseType": {
            "uniqueItems": false,
            "enum": [
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "Enum attribute which is the use type of the tag : \r\n\r\n    Invoice = 2 \r\n    Mileage = 4 \r\n    Purchase = 8 \r\n    Subscription = 16 \r\n    Mission = 32 \r\n    User = 64 \r\n    Balance = 128 \r\n",
            "format": "enum"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the tag is active or not."
          },
          "SimpleTagsNames": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of simple tags'names used when the tag is based on simple tags."
          }
        },
        "format": "UpdateTagInput",
        "example": "{\r\n  \"Name\": \"Lyon\",\r\n  \"PayIdsStr\": \"{\\\"PayId2\\\":\\\"Lyon\\\"}\",\r\n  \"UseType\": \"2\",\r\n  \"IsActive\": \"false\"\r\n}"
      },
      "TagsToAssignOrUnassignInput": {
        "required": [
          "ElementsToTag",
          "ElementsType"
        ],
        "type": "object",
        "properties": {
          "ExistingTagsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of names of existing tags to assign."
          },
          "ExistingTagsToUnassign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of names of existing tags to unassign."
          },
          "ElementsToTag": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            },
            "description": "List of unique identifiers of elements to tag."
          },
          "ElementsType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              255
            ],
            "type": "integer",
            "description": "Enum attribute which is the type of the elements to tag : \r\n\r\n    InvoiceAndFK = 0 \r\n    Report = 1 \r\n    Category = 2 \r\n    Project = 3 \r\n    Company = 4 \r\n    PartnerUser = 5 \r\n    BackendUser = 6 \r\n    InvoiceOnly = 7 \r\n    FkOnly = 8 \r\n    Rule = 9 \r\n    User = 10 \r\n    CustomFieldValue = 11 \r\n    SimpleTag = 12 \r\n    PurchaseOnly = 13 \r\n    Vehicule = 14 \r\n    PaymentInstrument = 15 \r\n    UserBankAccounts = 16 \r\n    CompanyBankAccounts = 17 \r\n    VehicleAssignment = 18 \r\n    Export = 19 \r\n    Trip = 20 \r\n    Tag = 21 \r\n    CustomField = 22 \r\n    Contact = 23 \r\n    MileageConfiguration = 24 \r\n    DelegatedAccess = 25 \r\n    VirtualCard = 26 \r\n    Undefined = 255 \r\n",
            "format": "enum"
          }
        },
        "format": "TagsToAssignOrUnassignInput",
        "example": "{\r\n  \"ExistingTagsToAssign\": [\r\n    \"string\"\r\n  ],\r\n  \"ExistingTagsToUnassign\": [\r\n    \"string\"\r\n  ],\r\n  \"ElementsToTag\": [\r\n    \"string\"\r\n  ],\r\n  \"ElementsType\": 0\r\n}"
      },
      "TravelDetailsInput": {
        "type": "object",
        "properties": {
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The start date of the travel. It respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z.",
            "format": "date-time"
          },
          "StartDateOffset": {
            "uniqueItems": false,
            "type": "number",
            "description": "The offset of the start date of the travel.",
            "format": "double"
          },
          "StartCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "The departure city of the travel."
          },
          "StartCountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "The country code the departure city."
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The end date of the travel. It respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z.",
            "format": "date-time"
          },
          "EndDateOffset": {
            "uniqueItems": false,
            "type": "number",
            "description": "The offset of the end date of the travel.",
            "format": "double"
          },
          "EndCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "The arrival city of the travel."
          },
          "EndCountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "The country code of the arrival city."
          },
          "ApprovalDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The approval date of the travel. It respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z.",
            "format": "date-time"
          },
          "ExternalExpenseNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "The external number of the expense."
          },
          "OriginalTicketNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "The original ticket number of the travel."
          },
          "TravelClass": {
            "uniqueItems": false,
            "type": "string",
            "description": "The class of the travel."
          },
          "TravelPolicyDetails": {
            "$ref": "#/components/schemas/TravelPolicyDetailsInput"
          },
          "ExpenseType": {
            "uniqueItems": false,
            "type": "string",
            "description": "The type of the expense."
          },
          "NetAmount": {
            "uniqueItems": false,
            "type": "string",
            "description": "The value amount of the travel without VAT."
          },
          "AirportTaxAmount": {
            "uniqueItems": false,
            "type": "string",
            "description": "The airport tax amount of the travel."
          },
          "NetTravelAgencyFeesAmount": {
            "uniqueItems": false,
            "type": "string",
            "description": "The travel agency value amount of the travel without VAT."
          },
          "Farebasis": {
            "uniqueItems": false,
            "type": "string",
            "description": "The type of fare used on an airline ticket."
          },
          "Routing": {
            "uniqueItems": false,
            "type": "string",
            "description": "The flat routes of the travel."
          },
          "VATValue": {
            "uniqueItems": false,
            "type": "number",
            "description": "The total VAT amounts of the travel.",
            "format": "decimal"
          }
        },
        "format": "TravelDetailsInput"
      },
      "AddOrUpdateProjectInput": {
        "required": [
          "HasBillable",
          "IsActive",
          "ExternalId",
          "Name",
          "ProjectRef",
          "ForAllCompany"
        ],
        "type": "object",
        "properties": {
          "HasBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if expenses assigned to this project can be billable to client or not."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the project is Active."
          },
          "MileageConfigurations": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mileage Configurations of the project."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the project."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the project."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the project."
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the project."
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the project."
          },
          "ProjectRef": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of the project."
          },
          "Validator_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the project validator.",
            "format": "guid"
          },
          "ValidatorMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the project validator."
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the project reviewer.",
            "format": "guid"
          },
          "ReviewerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the project reviewer."
          },
          "ClientName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the client."
          },
          "ForAllCompany": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the project is for all company or not."
          },
          "IsBillableDefaultValue": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the expenses assigned to the project are billable by default."
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string",
            "description": "First analytical axis relevant to the project."
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Currency code of the project. Respects the standard ISO 4217."
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extrat data for the project."
          },
          "ProjectUseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the use type of the project : \r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
            "format": "enum"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description about the project."
          },
          "CategoriesIds": {
            "uniqueItems": false,
            "type": "string",
            "description": "Restrict expenses related to the project to certain categories. The identifiers of the specified categories must be seperated by ','."
          },
          "AffectedUsersPayIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of users' analytical axis affected to the project."
          },
          "AffectedUsersMails": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of users' mails affected to the project."
          },
          "TagsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags' names that will be assigned to the project."
          },
          "TagsToUnassign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags' names that will be unassigned from the project."
          },
          "ProjectValidators": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidatorInput"
            },
            "description": "List of project's validators."
          }
        },
        "format": "AddOrUpdateProjectInput",
        "example": {
          "HasBillable": "true",
          "StartDate": "2018-06-04T08:30:15.0230000+00:00",
          "EndDate": "2020-06-04T08:30:15.0230000+00:00",
          "IsActive": "true",
          "Address": "Random address",
          "ZipCode": null,
          "City": "Paris",
          "ExternalId": "Ext1",
          "Name": "MyFirstProject ",
          "ProjectRef": "ProjectReference1",
          "Validator_Id": "31e74d4f-0aaf-4cfc-be6b-167212a95080",
          "ValidatorMail": "validator@yopmail.com",
          "ClientName": "François",
          "ForAllCompany": "true",
          "IsBillableDefaultValue": "true",
          "Currency": "EUR",
          "ExtraData": null,
          "ProjectUseType": "1",
          "AffectedUsersPayIds": [
            "Paris",
            "Lyon"
          ],
          "AffectedUsersMails": [
            "user1@yopmail.com",
            "user2@yopmail.com"
          ],
          "TagsToAssign": [
            "Paris"
          ],
          "TagsToUnassign": [
            "Lyon"
          ],
          "ProjectValidators": [
            {
              "Mail": "user3@yopmail.com",
              "MinimumAmount": "15.00"
            }
          ]
        }
      },
      "UpdateProjectStateInput": {
        "required": [
          "ProjectsIds",
          "ProjectState"
        ],
        "type": "object",
        "properties": {
          "ProjectsIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            },
            "description": "List of projects' unique identifiers to update."
          },
          "ProjectState": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "New state: true for active and false for disable."
          }
        },
        "format": "UpdateProjectStateInput",
        "example": "{\r\n  \"ProjectsIds\": [\r\n    \"215b95f3-215b-4340-82de-7e8676e4fd7d\",\r\n    \"4fd795f3-4340-82de-215b-7e8676e4fd7d\"\r\n  ],\r\n  \"ProjectState\": false\r\n}"
      },
      "UserInviteInput": {
        "required": [
          "LastName",
          "FirstName",
          "Mail",
          "Language",
          "UserType",
          "UserRole"
        ],
        "type": "object",
        "properties": {
          "LastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the user."
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the user."
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user."
          },
          "MailAlias": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail alias of the user and it should be different from user mail."
          },
          "PayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Serial of the user."
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string",
            "description": "First analytical axis."
          },
          "PayId3": {
            "uniqueItems": false,
            "type": "string",
            "description": "Second analytical axis."
          },
          "PayId4": {
            "uniqueItems": false,
            "type": "string",
            "description": "Third analytical axis."
          },
          "PayId5": {
            "uniqueItems": false,
            "type": "string",
            "description": "Forth analytical axis."
          },
          "PayId6": {
            "uniqueItems": false,
            "type": "string",
            "description": "Fifth analytical axis."
          },
          "Language": {
            "uniqueItems": false,
            "type": "string",
            "description": "Language of the user: FR, US, SE..."
          },
          "LocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Local currency of the user: EUR, TND, USD..."
          },
          "LocalCountry": {
            "uniqueItems": false,
            "type": "string",
            "description": "Local country code of the user: FR, ES, DE, GB..."
          },
          "ManagerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the second validator of the user."
          },
          "ManagerId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the second validator of the user.",
            "format": "guid"
          },
          "ReviewerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the first validator of the user."
          },
          "ReviewerId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the first validator of the user.",
            "format": "guid"
          },
          "UserType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16,
              32,
              56
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the type of the user and it is necessary to combine the user type 'Employee' with the other types for example: Employee + Administrator or Employee + Accountant. The user typs are : \r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
            "format": "enum"
          },
          "Vendor": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the vendor"
          },
          "UserRole": {
            "uniqueItems": false,
            "enum": [
              0,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024,
              2048,
              4096,
              8192,
              16384,
              32768,
              65536,
              131072,
              262144,
              524288,
              1048576,
              2097152,
              4194304,
              8388608,
              16777216,
              33554432,
              67108864,
              134217728,
              268435456
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the role of the user : \r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n    Groups = 134217728 \r\n    DelegatedAccess = 268435456 \r\n",
            "format": "enum"
          },
          "DefaultProjectId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user default project.",
            "format": "guid"
          },
          "IKRatesId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the mileage compensation rates.",
            "format": "guid"
          },
          "IKRatesReference": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of the mileage compensation rates."
          },
          "AdditionalValidators": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidatorInput"
            },
            "description": "List of additional validators of the user."
          },
          "ConfigurationSettingsReference": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of user configuration settings."
          },
          "TagsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags'names that will be assigned to the user."
          },
          "ShouldValidateUser": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Auto Validate user account and don't send an email notification to the user (is false by default)."
          }
        },
        "format": "UserInviteInput",
        "example": "{\r\n  \"LastName\": \"last Name\",\r\n  \"FirstName\": \"First Name\",\r\n  \"Mail\": \"user@yopmail.com\",\r\n  \"PayId2\": \"Paris\",\r\n  \"Language\": \"FR\",\r\n  \"LocalCurrency\": \"EUR\",\r\n  \"LocalCountry\": \"FR\",\r\n  \"ManagerMail\": null,\r\n  \"ManagerId\": \"d7a8df44-2d80-467d-925e-f381eb257f42\",\r\n  \"ReviewerMail\": \"validator@yopmail.com\",\r\n  \"ReviewerId\": null,\r\n  \"UserType\": 1,\r\n  \"UserRole\": 0,\r\n  \"AdditionalValidators\": [\r\n    {\r\n      \"Mail\": \"user2@yopmail.com\",\r\n      \"MinimumAmount\": 150\r\n    }\r\n  ],\r\n  \"TagsToAssign\": [\r\n    \"Paris\"\r\n  ],\r\n  \"ShouldValidateUser\": true\r\n}"
      },
      "UpdateUserStateInput": {
        "type": "object",
        "properties": {
          "UserId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user.",
            "format": "guid"
          },
          "Operation": {
            "uniqueItems": false,
            "enum": [
              2,
              3,
              4
            ],
            "type": "integer",
            "description": "Operation that will be applied to the user.\r\n\r\n    Validate = 2 \r\n    Activate = 3 \r\n    Deactivate = 4 \r\n",
            "format": "enum"
          }
        },
        "format": "UpdateUserStateInput",
        "example": {
          "UserId": "e24895f3-215b-4340-82de-7e8676e4fd7d",
          "Operation": 4
        }
      },
      "CustomFieldInput": {
        "required": [
          "DisplayLabelFR",
          "DisplayLabelEN",
          "FieldType",
          "CustomFieldUseType",
          "IsMandatory",
          "IsActive"
        ],
        "type": "object",
        "properties": {
          "FieldName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the custom field."
          },
          "DisplayLabelFR": {
            "uniqueItems": false,
            "type": "string",
            "description": "Displayed label of the custom field in Frensh."
          },
          "DisplayLabelEN": {
            "uniqueItems": false,
            "type": "string",
            "description": "Displayed label of the custom field in English."
          },
          "TooltipFR": {
            "uniqueItems": false,
            "type": "string",
            "description": "Tooltip of the custom field in Frensh."
          },
          "TooltipEN": {
            "uniqueItems": false,
            "type": "string",
            "description": "Tooltip of the custom field in English."
          },
          "FieldType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "type": "integer",
            "description": "Enum attribute which is the field type of the custom field : \r\n\r\n    CheckBox = 0 \r\n    DateInput = 1 \r\n    NumericInput = 2 \r\n    DecimalInput = 3 \r\n    TextInput = 4 \r\n    MoneyInput = 5 \r\n    DropDown = 6 \r\n    MultiSelectionList = 7 \r\n    MissionOrder = 8 \r\n",
            "format": "enum"
          },
          "CustomFieldUseType": {
            "uniqueItems": false,
            "enum": [
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024,
              2048,
              4096,
              8192,
              16384
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the use type of the custom field : \r\n\r\n    Subscription = 2 \r\n    Report = 4 \r\n    Category = 8 \r\n    Project = 16 \r\n    Company = 32 \r\n    PartnerUser = 64 \r\n    BackendUser = 128 \r\n    Invoice = 256 \r\n    Fk = 512 \r\n    Rule = 1024 \r\n    User = 2048 \r\n    Purchase = 4096 \r\n    MissionOrder = 8192 \r\n    VirtualCard = 16384 \r\n",
            "format": "enum"
          },
          "MaxLength": {
            "uniqueItems": false,
            "type": "integer",
            "description": "Maximum length of a text custom field.",
            "format": "int32"
          },
          "MinValue": {
            "uniqueItems": false,
            "type": "string",
            "description": "Minimum value of a decimal or numeric custom field."
          },
          "MaxValue": {
            "uniqueItems": false,
            "type": "string",
            "description": "Maximum value of a decimal or numeric custom field."
          },
          "DefaultValue": {
            "uniqueItems": false,
            "type": "string",
            "description": "Default value of the custom field."
          },
          "IsMandatory": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "This boolean represents the custom field behavior whether it's required or optional."
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "This boolean represents the custom field state whether it's hidden or visible."
          },
          "Categories_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Categories related to the custom field."
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External unique identifier of the custom field."
          },
          "CustomFieldParentId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Parent unique identifier of the custom field.",
            "format": "guid"
          }
        },
        "format": "CustomFieldInput",
        "example": "{\r\n  \"FieldName\": \"string\",\r\n  \"DisplayLabelFR\": \"string\",\r\n  \"DisplayLabelEN\": \"string\",\r\n  \"TooltipFR\": \"string\",\r\n  \"TooltipEN\": \"string\",\r\n  \"FieldType\": 0,\r\n  \"CustomFieldUseType\": 2,\r\n  \"MaxLength\": 0,\r\n  \"MinValue\": \"string\",\r\n  \"MaxValue\": \"string\",\r\n  \"DefaultValue\": \"string\",\r\n  \"IsMandatory\": true,\r\n  \"IsActive\": true,\r\n  \"Categories_Id\": \"string\",\r\n  \"ExternalId\": \"string\",\r\n  \"CustomFieldParentId\": \"string\"\r\n}"
      },
      "MerchantInput": {
        "type": "object",
        "properties": {
          "MerchantName": {
            "uniqueItems": false,
            "type": "string",
            "description": "The merchant Name of the expense."
          },
          "MerchantCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "The merchant city of the expense."
          },
          "MerchantZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "The merchant zip code of the expense."
          },
          "MerchantVatNumber": {
            "uniqueItems": false,
            "type": "string",
            "description": "The merchant vat number of the expense."
          }
        },
        "format": "MerchantInput"
      },
      "QuickExpenseInput": {
        "required": [
          "FileToSend",
          "CurrencyCode",
          "TransactionDate",
          "LocationCountry",
          "FileType"
        ],
        "type": "object",
        "properties": {
          "FileToSend": {
            "uniqueItems": false,
            "type": "string",
            "description": "The file to send on base64."
          },
          "Title": {
            "uniqueItems": false,
            "type": "string",
            "description": "Title of the expense."
          },
          "TransactionAmount": {
            "uniqueItems": false,
            "type": "number",
            "description": "Transaction amount of the expense.",
            "format": "decimal"
          },
          "VatRates": {
            "uniqueItems": false,
            "type": "string",
            "description": "Vate rates of the expense."
          },
          "VatAmounts": {
            "uniqueItems": false,
            "type": "string",
            "description": "Vate amounts of the expense."
          },
          "CurrencyCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Currency code of the expense."
          },
          "TransactionDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Transaction date of the expense. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "MerchantName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Merchant name of the expense."
          },
          "LocationCountry": {
            "uniqueItems": false,
            "type": "string",
            "description": "Location country of the expense."
          },
          "LocationCity": {
            "uniqueItems": false,
            "type": "string",
            "description": "Location city of the expense."
          },
          "Comment": {
            "uniqueItems": false,
            "type": "string",
            "description": "Comment of the expense."
          },
          "MerchantExpenseId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique expense identifier of the merchant."
          },
          "IsEncrypted": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the expense is encrypted ot not."
          },
          "ExpenseUseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4,
              8,
              16
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the use type of the expense: \r\n\r\n    Invoice = 1 \r\n    Advance = 2 \r\n    Purchase = 4 \r\n    Subscription = 8 \r\n    MissionOrder = 16 \r\n",
            "format": "enum"
          },
          "PaymentTypeCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Payment type code of the expense."
          },
          "ExpenseTypeCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Type code of the expense."
          },
          "FileType": {
            "uniqueItems": false,
            "type": "string",
            "description": "File type of the expense. Should be the same type of the encoded file or an error will occur."
          }
        },
        "format": "QuickExpenseInput",
        "example": "{\r\n  \"FileToSend\": \"o6wxMz+zMQVPxDo06QNxMz+zMQVPxxMz+zMQVPxDo06QNOZAzMQVPxDo06QNO\",\r\n  \"Title\": \"Invoice\",\r\n  \"TransactionAmount\": \"2000.00\",\r\n  \"VatRates\": \"80\",\r\n  \"VatAmounts\": \"120.00\",\r\n  \"CurrencyCode\": \"EUR\",\r\n  \"TransactionDate\": \"2018-06-04T08:30:15.023Z\",\r\n  \"MerchantName\": \"Merchant\",\r\n  \"LocationCountry\": \"FR\",\r\n  \"LocationCity\": \"Paris\",\r\n  \"MerchantExpenseId\": \"e24895f3-215b-4340-82de-7e8676e4fd7d\",\r\n  \"IsEncrypted\": \"true\",\r\n  \"ExpenseUseType\": \"1\",\r\n  \"PaymentTypeCode\": \"16541\",\r\n  \"FileType\": \"pdf\"\r\n}"
      },
      "AddReceiptInput": {
        "required": [
          "ReceiptContent",
          "ReceiptName",
          "FileType"
        ],
        "type": "object",
        "properties": {
          "ReceiptContent": {
            "uniqueItems": false,
            "type": "string",
            "description": "Content of the receipt on base64."
          },
          "ReceiptName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the receipt."
          },
          "FileType": {
            "uniqueItems": false,
            "type": "string",
            "description": "File type : jpeg, pdf, png."
          }
        },
        "format": "AddReceiptInput",
        "example": "{\r\n  \"ReceiptContent\": \"f/lX7ufeUSGE+Ws1KNUg6wGE+Ws1KNUg6ws1KNUg\",\r\n  \"ReceiptName\": \"Invoice\",\r\n  \"FileType\": \"pdf\"\r\n}"
      },
      "AddUserProjectInput": {
        "required": [
          "ProjectExternalId",
          "HasBillable",
          "IsActive",
          "UserMail",
          "UserPayId"
        ],
        "type": "object",
        "properties": {
          "ProjectExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the project."
          },
          "HasBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the project has billable expenses or not."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the assignment of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the assignment of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the project is active or not."
          },
          "MileageConfigurations": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mileage Configurations of the project."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the project."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the project."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the project."
          },
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user assigned to the project."
          },
          "UserPayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Serail of the user assigned to the project."
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extrat data for the project."
          }
        },
        "format": "AddUserProjectInput",
        "example": {
          "ProjectExternalId": "ProjectExternalId",
          "HasBillable": "true",
          "StartDate": "2018-06-04T08:30:15.0230000+00:00",
          "EndDate": "2018-08-04T08:30:15.0230000+00:00",
          "IsActive": "true",
          "Address": null,
          "ZipCode": "15646",
          "City": "Paris",
          "UserMail": "user@yopmail.com",
          "UserPayId": "Paris"
        }
      },
      "UpdateUserProjectInput": {
        "required": [
          "ExternalId",
          "ProjectExternalId",
          "HasBillable",
          "UserMail"
        ],
        "type": "object",
        "properties": {
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the user project."
          },
          "ProjectExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the project."
          },
          "HasBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the project has billable expenses or not."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the assignment of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the assignment of the project. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the project is active or not."
          },
          "MileageConfigurations": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mileage Configurations of the project."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the project."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the project."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the project."
          },
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user assigned to the project."
          },
          "UserPayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Serail of the user assigned to the project."
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extrat data for the project."
          }
        },
        "format": "UpdateUserProjectInput",
        "example": {
          "ExternalId": "User_Project_ExternalId",
          "ProjectExternalId": "ProjectExternalId",
          "HasBillable": "true",
          "StartDate": "2018-06-04T08:30:15.0230000+00:00",
          "EndDate": "2018-08-04T08:30:15.0230000+00:00",
          "UserMail": "user@yopmail.com"
        }
      },
      "Trip": {
        "required": [
          "ExternalId",
          "Name",
          "StartDate",
          "EndDate",
          "Destination",
          "UserMail"
        ],
        "type": "object",
        "properties": {
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the trip."
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "Name of the trip."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the trip."
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the trip."
          },
          "Destination": {
            "uniqueItems": false,
            "type": "string",
            "description": "Destination city of the traveler."
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "Description of the trip."
          },
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the traveler."
          },
          "CustomDataFields": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomDataField"
            },
            "description": "List of custom data field objects of the trip."
          },
          "Bookings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TripBooking"
            },
            "description": "List of bookings object that compose the trip."
          },
          "ProjectId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The project unique identifier of the trip.",
            "format": "guid"
          }
        },
        "format": "Trip",
        "example": {
          "ExternalId": "string",
          "Name": "string",
          "StartDate": "string",
          "EndDate": "string",
          "Destination": "string",
          "Description": "string",
          "UserMail": "string",
          "CustomDataFields": [
            {
              "Id": "string",
              "Label": "string",
              "Value": "string",
              "ENLabel": "string",
              "FRLabel": "string"
            }
          ],
          "Bookings": [
            {
              "ExpenseId": "string",
              "Label": "string",
              "BookingLink": "string",
              "ExpenseType": 0,
              "State": "string",
              "BookingState": 0,
              "Price": {
                "Currency": "string",
                "Amount": 0,
                "Breakdowns": [
                  {
                    "Type": "string",
                    "Amount": 0,
                    "Currency": "string"
                  }
                ]
              },
              "OriginDestinations": [
                {
                  "Segments": [
                    {
                      "Departure": {
                        "Location": {
                          "Type": "string",
                          "Name": "string",
                          "Address": {
                            "StreetName": "string",
                            "CountryName": "string",
                            "CountryCode": "string",
                            "CityName": "string",
                            "CityCode": "string"
                          }
                        },
                        "DateTime": "string",
                        "DateTimeValue": "string"
                      },
                      "Arrival": {
                        "Location": {
                          "Type": "string",
                          "Name": "string",
                          "Address": {
                            "StreetName": "string",
                            "CountryName": "string",
                            "CountryCode": "string",
                            "CityName": "string",
                            "CityCode": "string"
                          }
                        },
                        "DateTime": "string",
                        "DateTimeValue": "string"
                      },
                      "Carrier": {
                        "Code": "string",
                        "Name": "string"
                      },
                      "Provider": {
                        "Code": "string",
                        "Name": "string"
                      },
                      "BookingClass": "string"
                    }
                  ]
                }
              ],
              "RouteNumber": [
                "string"
              ],
              "Vehicle": {
                "Type": "string",
                "Name": "string"
              },
              "PickUp": {
                "Location": {
                  "Type": "string",
                  "Name": "string",
                  "Address": {
                    "StreetName": "string",
                    "CountryName": "string",
                    "CountryCode": "string",
                    "CityName": "string",
                    "CityCode": "string"
                  }
                },
                "DateTime": "string",
                "DateTimeValue": "string"
              },
              "DropOff": {
                "Location": {
                  "Type": "string",
                  "Name": "string",
                  "Address": {
                    "StreetName": "string",
                    "CountryName": "string",
                    "CountryCode": "string",
                    "CityName": "string",
                    "CityCode": "string"
                  }
                },
                "DateTime": "string",
                "DateTimeValue": "string"
              },
              "CheckIn": "string",
              "CheckInValue": "string",
              "CheckOut": "string",
              "CheckOutValue": "string",
              "Location": {
                "Type": "string",
                "Name": "string",
                "Address": {
                  "StreetName": "string",
                  "CountryName": "string",
                  "CountryCode": "string",
                  "CityName": "string",
                  "CityCode": "string"
                }
              },
              "StarRating": "string"
            }
          ],
          "ProjectId": "string"
        }
      },
      "ReportUpdateStatusInput": {
        "required": [
          "Operation"
        ],
        "type": "object",
        "properties": {
          "Operation": {
            "uniqueItems": false,
            "enum": [
              0,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "type": "integer",
            "description": "The operation type that will be applied to the report : \r\n\r\n    None = 0 \r\n    Submit = 2 \r\n    Reject = 3 \r\n    Validate = 4 \r\n    Close = 5 \r\n    ValidateAndExport = 6 \r\n    Reimburse = 7 \r\n    ValidatedByAccountant = 8 \r\n    Tag = 9 \r\n    CloseAndTag = 10 \r\n    Disable = 11 \r\n    Cancel = 12 \r\n",
            "format": "enum"
          },
          "Message": {
            "uniqueItems": false,
            "type": "string",
            "description": "The update comment that will be shown to the report's owner."
          },
          "InvoiceIdsToReject": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            },
            "description": "List of invoices'identifiers to reject."
          },
          "AccountingPeriod": {
            "uniqueItems": false,
            "type": "string",
            "description": "The accounting period of the report."
          }
        },
        "format": "ReportUpdateStatusInput",
        "example": "{\r\n  \"Operation\": 0,\r\n  \"Message\": \"string\",\r\n  \"InvoiceIdsToReject\": [\r\n    \"string\"\r\n  ],\r\n  \"AccountingPeriod\": \"string\"\r\n}"
      },
      "AssignUserToCustomFieldValueInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AssignUserToCustomFieldValueInput"
        },
        "example": "[\r\n  {\r\n    \"ExternalId\": \"ExternalId 1\",\r\n    \"HasBillable\": \"true\",\r\n    \"IsActive\": true,\r\n    \"StartDate\": \"2018-06-04T08:30:15.023Z\",\r\n    \"EndDate\": \"2018-08-04T08:30:15.023Z\",\r\n    \"UserMail\": \"user@yopmail.com\",\r\n    \"UserPayId\": null\r\n  }\r\n]"
      },
      "UpdateUserAssignmentToCustomFieldValueInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UpdateUserAssignmentToCustomFieldValueInput"
        },
        "example": "[\r\n  {\r\n    \"Id\": \"570170d6-7f0a-4dcc-bddd-66e319d93fb9\",\r\n    \"ExternalId\": \"ExternalId 1\",\r\n    \"HasBillable\": \"true\",\r\n    \"IsActive\": true,\r\n    \"StartDate\": \"2018-06-04T08:30:15.023Z\",\r\n    \"EndDate\": \"2018-08-04T08:30:15.023Z\",\r\n    \"UserMail\": \"user@yopmail.com\",\r\n    \"UserPayId\": null\r\n  }\r\n]"
      },
      "UpdateCustomFieldValueInput": {
        "required": [
          "ExternalId",
          "Reference",
          "Value",
          "IsActive"
        ],
        "type": "object",
        "properties": {
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the custom field value."
          },
          "Reference": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of the custom field value."
          },
          "Value": {
            "uniqueItems": false,
            "type": "string",
            "description": "Value of the custom field value."
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the custom field value is active or not."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The starting date of the use of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The ending date of the use of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "UseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the use type of the custom field value : \r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
            "format": "enum"
          },
          "TagsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags'names that will be assigned to the custom field value."
          },
          "TagsToUnassign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags'names that will be unassigned from the custom field values."
          },
          "ParentsIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of parents'unique identifiers of the custom field separated by ; ."
          },
          "AssignedUsersPayIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of the serials of the users to be assigned to the custom field value."
          },
          "AssignedUsersMails": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of the mails of the users to be assigned to the custom field value."
          }
        },
        "format": "UpdateCustomFieldValueInput",
        "example": {
          "Reference": "Rouge",
          "Value": "FF0000",
          "ExternalId": "Ext2",
          "IsActive": "true",
          "StartDate": "2020-06-04T08:30:15.0230000+00:00",
          "EndDate": "2021-12-08T10:20:15.0230000+00:00",
          "UseType": "1",
          "TagsToAssign": [
            "Tag1",
            "Tag2"
          ],
          "TagsToUnassign": [
            "Tag3"
          ],
          "ParentsIds": [
            "c128ed28-7a1b-43ae-a8b2-ddd23262f070",
            "a04ba393-21de-4f84-b3f0-9ac61597be0b"
          ],
          "AssignedUsersMails": [
            "user1@yopmail.com",
            "user2@yopmail.com"
          ],
          "AssignedUsersPayIds": [
            "425100",
            "425200"
          ]
        }
      },
      "CustomFieldValueInput": {
        "required": [
          "ExternalId",
          "Reference",
          "Value",
          "IsActive"
        ],
        "type": "object",
        "properties": {
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the custom field value."
          },
          "Reference": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of the custom field value."
          },
          "Value": {
            "uniqueItems": false,
            "type": "string",
            "description": "Value of the custom field value."
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies if the custom field value is active or not."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The starting date of the use of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "The ending date of the use of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "UseType": {
            "uniqueItems": false,
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32,
              64,
              128
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the use type of the custom field value : \r\n\r\n    Invoice = 1 \r\n    Purchase = 2 \r\n    Subscription = 4 \r\n    Advance = 8 \r\n    MissionOrder = 16 \r\n    MileageOnly = 32 \r\n    InvoiceOnly = 64 \r\n    VirtualCard = 128 \r\n",
            "format": "enum"
          },
          "TagsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags'names that will be assigned to the custom field value."
          },
          "ParentsIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of parents'unique identifiers of the custom field separated by ; ."
          },
          "AssignedUsersPayIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of the serials of the users to be assigned to the custom field value."
          },
          "AssignedUsersMails": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of the mails of the users to be assigned to the custom field value."
          }
        },
        "format": "CustomFieldValueInput",
        "example": {
          "Reference": "Rouge",
          "Value": "FF0000",
          "ExternalId": "Ext2",
          "IsActive": "true",
          "StartDate": "2020-06-04T08:30:15.0230000+00:00",
          "EndDate": "2021-12-08T10:20:15.0230000+00:00",
          "UseType": "1",
          "TagsToAssign": [
            "Tag1",
            "Tag2"
          ],
          "ParentsIds": [
            "c128ed28-7a1b-43ae-a8b2-ddd23262f070",
            "a04ba393-21de-4f84-b3f0-9ac61597be0b"
          ],
          "AssignedUsersMails": [
            "user1@yopmail.com",
            "user2@yopmail.com"
          ],
          "AssignedUsersPayIds": [
            "425100",
            "425200"
          ]
        }
      },
      "UpdateUserAssignmentToCustomFieldValueInput": {
        "required": [
          "Id",
          "ExternalId",
          "HasBillable",
          "IsActive",
          "UserMail",
          "UserPayId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Identifier of the custom field value assignment."
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the custom field value."
          },
          "HasBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the custom field value has billable expenses or not."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the assignment of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the assignment of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the custom field value is active or not."
          },
          "MileageConfigurationsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mileage Configurations of the custom field value."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the custom field value."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the custom field value."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the custom field value."
          },
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user assigned to the custom field value."
          },
          "UserPayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Serail of the user assigned to the custom field value."
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extrat data for the custom field value."
          }
        },
        "format": "UpdateUserAssignmentToCustomFieldValueInput",
        "example": {
          "Id": "570170d6-7f0a-4dcc-bddd-66e319d93fb9",
          "ExternalId": "ExternalId 1",
          "HasBillable": "true",
          "IsActive": true,
          "StartDate": "2018-06-04T08:30:15.0230000+00:00",
          "EndDate": "2018-08-04T08:30:15.0230000+00:00",
          "UserMail": "user@yopmail.com",
          "UserPayId": null
        }
      },
      "AssignUserToCustomFieldValueInput": {
        "required": [
          "ExternalId",
          "HasBillable",
          "IsActive",
          "UserMail",
          "UserPayId"
        ],
        "type": "object",
        "properties": {
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the custom field value."
          },
          "HasBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the custom field value has billable expenses or not."
          },
          "StartDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "Start date of the assignment of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "EndDate": {
            "uniqueItems": false,
            "type": "string",
            "description": "End date of the assignment of the custom field value. Respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z",
            "format": "date-time"
          },
          "IsActive": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the custom field value is active or not."
          },
          "MileageConfigurationsStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mileage Configurations of the custom field value."
          },
          "Address": {
            "uniqueItems": false,
            "type": "string",
            "description": "Address of the custom field value."
          },
          "ZipCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "Zip code of the custom field value."
          },
          "City": {
            "uniqueItems": false,
            "type": "string",
            "description": "City of the custom field value."
          },
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user assigned to the custom field value."
          },
          "UserPayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Serial of the user assigned to the custom field value."
          },
          "ExtraData": {
            "uniqueItems": false,
            "type": "string",
            "description": "Extrat data for the custom field value."
          }
        },
        "format": "AssignUserToCustomFieldValueInput",
        "example": {
          "ExternalId": "ExternalId 1",
          "HasBillable": "true",
          "IsActive": true,
          "StartDate": "2018-06-04T08:30:15.0230000+00:00",
          "EndDate": "2018-08-04T08:30:15.0230000+00:00",
          "UserMail": "user@yopmail.com",
          "UserPayId": null
        }
      },
      "UserUpdateInput": {
        "type": "object",
        "properties": {
          "LastName": {
            "uniqueItems": false,
            "type": "string",
            "description": "Last name of the user."
          },
          "FirstName": {
            "uniqueItems": false,
            "type": "string",
            "description": "First name of the user."
          },
          "Mail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the user."
          },
          "MailAlias": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail alias of the user."
          },
          "PayId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Serial of the user."
          },
          "PayId2": {
            "uniqueItems": false,
            "type": "string",
            "description": "First analytical axis."
          },
          "PayId3": {
            "uniqueItems": false,
            "type": "string",
            "description": "Second analytical axis."
          },
          "PayId4": {
            "uniqueItems": false,
            "type": "string",
            "description": "Third analytical axis."
          },
          "PayId5": {
            "uniqueItems": false,
            "type": "string",
            "description": "Forth analytical axis."
          },
          "PayId6": {
            "uniqueItems": false,
            "type": "string",
            "description": "Fifth analytical axis."
          },
          "Language": {
            "uniqueItems": false,
            "type": "string",
            "description": "Language of the user: FR, US, SE..."
          },
          "LocalCurrency": {
            "uniqueItems": false,
            "type": "string",
            "description": "Local currency of the user: EUR, TND, USD..."
          },
          "LocalCountry": {
            "uniqueItems": false,
            "type": "string",
            "description": "Local country code of the user: FR, ES, DE, GB..."
          },
          "ManagerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the second validator of the user."
          },
          "Manager_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the second validator of the user.",
            "format": "guid"
          },
          "ReviewerMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "Mail of the first validator of the user."
          },
          "Reviewer_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the first validator of the user.",
            "format": "guid"
          },
          "UserType": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              4,
              8,
              16,
              32,
              56
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the type of the user and it is necessary to combine the user type 'Employee' with the other types for exemple: Employee + Administrator or Employee + Accountant. The user typs are : \r\n\r\n    None = 0 \r\n    Employee = 1 \r\n    Administrator = 2 \r\n    Accountant = 4 \r\n    CanRefund = 8 \r\n    NotDisabledInImport = 16 \r\n    NotUpdatedInImport = 32 \r\n    UserTypeToIgnore = 56 \r\n",
            "format": "enum"
          },
          "Vendor": {
            "uniqueItems": false,
            "type": "string",
            "description": "The name of the vendor."
          },
          "UserRole": {
            "uniqueItems": false,
            "enum": [
              0,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024,
              2048,
              4096,
              8192,
              16384,
              32768,
              65536,
              131072,
              262144,
              524288,
              1048576,
              2097152,
              4194304,
              8388608,
              16777216,
              33554432,
              67108864,
              134217728,
              268435456
            ],
            "type": "integer",
            "description": "Enum flag attribute which is the role of the user : \r\n\r\n    All = 0 \r\n    Users = 2 \r\n    Missions = 4 \r\n    Invoices = 8 \r\n    Projects = 16 \r\n    Rules = 32 \r\n    Settings = 64 \r\n    Integrations = 128 \r\n    SubscriptionAndBills = 256 \r\n    BiReports = 512 \r\n    Categories = 1024 \r\n    Mileage = 2048 \r\n    ReadOnly = 4096 \r\n    Vehicles = 8192 \r\n    SuppliersManagement = 16384 \r\n    Advances = 32768 \r\n    VirtualPayment = 65536 \r\n    Purchases = 131072 \r\n    CustomFields = 262144 \r\n    ProPaymentInstruments = 524288 \r\n    MissionOrders = 1048576 \r\n    BankAccounts = 2097152 \r\n    Bookings = 4194304 \r\n    Contact = 8388608 \r\n    IntegrationsHistory = 16777216 \r\n    TechnicalIntegration = 33554432 \r\n    Reimbursements = 67108864 \r\n    Groups = 134217728 \r\n    DelegatedAccess = 268435456 \r\n",
            "format": "enum"
          },
          "JobTitle": {
            "uniqueItems": false,
            "type": "string",
            "description": "Title of the user's job."
          },
          "CanAddPurchase": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the user can add purchase or not."
          },
          "HasVirtualPayment": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "If the user can request virtual cards or not."
          },
          "DefaultProjectId": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the user default project.",
            "format": "guid"
          },
          "IKRates_Id": {
            "uniqueItems": false,
            "type": "string",
            "description": "Unique identifier of the mileage compensation rates.",
            "format": "guid"
          },
          "IKRatesReference": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of the mileage compensation rates."
          },
          "AdditionalValidators": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidatorInput"
            },
            "description": "List of additional validators of the user."
          },
          "ConfigurationSettingsReference": {
            "uniqueItems": false,
            "type": "string",
            "description": "Reference of user configuration settings"
          },
          "TagsToAssign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags' names that will be assigned to the user."
          },
          "TagsToUnassign": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags' names that will be unassigned from the user."
          }
        },
        "format": "UserUpdateInput",
        "example": "{\r\n  \"LastName\": \"last Name\",\r\n  \"FirstName\": \"First Name\",\r\n  \"Manager_Id\": \"d7a8df44-2d80-467d-925e-f381eb257f42\",\r\n  \"ReviewerMail\": \"validator@yopmail.com\",\r\n  \"UserType\": 1,\r\n  \"TagsToAssign\": [\r\n    \"Paris\"\r\n  ],\r\n  \"TagsToUnassign\": [\r\n    \"Lyon\"\r\n  ]\r\n}"
      },
      "AddExpenseInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AddExpenseInput"
        },
        "example": [
          {
            "UserMail": "string",
            "Name": "string",
            "Value": 0,
            "CategoryId": "string",
            "PaymentInstrumentId": "string",
            "Currency": "string",
            "Country": "string",
            "ProjectId": "string",
            "ToReimburse": true,
            "IsBillable": true,
            "ReportId": "string",
            "MissionOrderId": "string",
            "DateExpense": "string",
            "DateExpenseOffset": 0,
            "Units": 0,
            "Description": "string",
            "MerchantInput": {
              "MerchantName": "string",
              "MerchantCity": "string",
              "MerchantZipCode": "string",
              "MerchantVatNumber": "string"
            },
            "CoworkersMails": [
              "string"
            ],
            "CustomFieldsWithValuesStr": "string",
            "ExpensePhoto": "string",
            "AttachedFile": "string",
            "VATInput": {
              "Rates": [
                0
              ],
              "Values": [
                0
              ],
              "VatFreeAmount": 0,
              "Tips": 0
            }
          }
        ]
      },
      "AddTravelExpenseInputArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AddTravelExpenseInput"
        },
        "example": [
          {
            "UserMail": "string",
            "Name": "string",
            "Value": 0,
            "TravelExpenseCategory": 0,
            "ExternalId": "string",
            "ReportName": "string",
            "PaymentInstrumentId": "string",
            "MissionOrderId": "string",
            "DateBooking": "string",
            "CountryCode": "string",
            "Currency": "string",
            "Vat": {
              "Rates": [
                0
              ],
              "Values": [
                0
              ],
              "VatFreeAmount": 0,
              "Tips": 0
            },
            "ProjectExternalId": "string",
            "ToReimburse": true,
            "IsBillable": true,
            "Units": 0,
            "TravelDetails": {
              "StartDate": "string",
              "StartDateOffset": 0,
              "StartCity": "string",
              "StartCountryCode": "string",
              "EndDate": "string",
              "EndDateOffset": 0,
              "EndCity": "string",
              "EndCountryCode": "string",
              "ApprovalDate": "string",
              "ExternalExpenseNumber": "string",
              "OriginalTicketNumber": "string",
              "TravelClass": "string",
              "TravelPolicyDetails": {
                "IsInPolicy": true,
                "ReasonDescription": "string"
              },
              "ExpenseType": "string",
              "NetAmount": "string",
              "AirportTaxAmount": "string",
              "NetTravelAgencyFeesAmount": "string",
              "Farebasis": "string",
              "Routing": "string",
              "VATValue": 0
            },
            "Description": "string",
            "MerchantInput": {
              "MerchantName": "string",
              "MerchantCity": "string",
              "MerchantZipCode": "string",
              "MerchantVatNumber": "string"
            }
          }
        ]
      },
      "AddExpenseInput": {
        "required": [
          "UserMail",
          "Name",
          "Value",
          "CategoryId",
          "PaymentInstrumentId",
          "Currency",
          "Country"
        ],
        "type": "object",
        "properties": {
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "The mail of the user."
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "The name of the expense."
          },
          "Value": {
            "uniqueItems": false,
            "type": "number",
            "description": "The value of the expense.",
            "format": "decimal"
          },
          "CategoryId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The category unique identifier of the expense.",
            "format": "guid"
          },
          "PaymentInstrumentId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The payment instrument unique identifier of the expense.",
            "format": "guid"
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The currency of the expense: EUR, USD...."
          },
          "Country": {
            "uniqueItems": false,
            "type": "string",
            "description": "The country of the expense."
          },
          "ProjectId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The project unique identifier of the expense.",
            "format": "guid"
          },
          "ToReimburse": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies whether the expense is reimbursable or not. If Null, the default value is True."
          },
          "IsBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies whether the expense is billable to the client or not. If Null, the default value is False."
          },
          "ReportId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The report unique identifier of the expense, if specified, the expense will be linked with the report automatically.",
            "format": "guid"
          },
          "MissionOrderId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The mission order unique identifier of the expense, if specified, the expense will be linked with the mission order automatically.",
            "format": "guid"
          },
          "DateExpense": {
            "uniqueItems": false,
            "type": "string",
            "description": "The date of the expense. It respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z. If Null, the default value is the date of today.",
            "format": "date-time"
          },
          "DateExpenseOffset": {
            "uniqueItems": false,
            "type": "integer",
            "description": "The offset value of the expense date.",
            "format": "int32"
          },
          "Units": {
            "uniqueItems": false,
            "type": "number",
            "description": "Represents the number of invited person of the expense (user and coworkers) and the number of nights for the lodging category.",
            "format": "decimal"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "The description of the expense."
          },
          "MerchantInput": {
            "$ref": "#/components/schemas/MerchantInput"
          },
          "CoworkersMails": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of coworkers mails of the expense."
          },
          "CustomFieldsWithValuesStr": {
            "uniqueItems": false,
            "type": "string",
            "description": "The list of the custom fields unique identifiers with their corresponding values of the expense."
          },
          "ExpensePhoto": {
            "uniqueItems": false,
            "type": "string",
            "description": "The expense photo file if needed to send on base64."
          },
          "AttachedFile": {
            "uniqueItems": false,
            "type": "string",
            "description": "The expense attached file if needed to send on base64."
          },
          "VATInput": {
            "$ref": "#/components/schemas/VatInput"
          }
        },
        "format": "AddExpenseInput",
        "example": [
          {
            "UserMail": "thriupublicapi@yopmail.com",
            "Value": 10,
            "Currency": "TND",
            "PaymentInstrumentId": "dd9a2dde-8d69-458b-b612-a6a4ef3e65cb",
            "CategoryId": "be71b1af-f0fd-4961-b69b-e5b833376009",
            "Name": "Test 25",
            "Country": "TN"
          },
          {
            "UserMail": "thriupublicapi@yopmail.com",
            "Value": 100,
            "Currency": "EUR",
            "PaymentInstrumentId": "dd9a2dde-8d69-458b-b612-a6a4ef3e65cb",
            "CategoryId": "be71b1af-f0fd-4961-b69b-e5b833376009",
            "Name": "Test 5",
            "Country": "FR"
          }
        ]
      },
      "SubmitExpensesForValidationInput": {
        "required": [
          "ExpensesIds",
          "UserMail"
        ],
        "type": "object",
        "properties": {
          "ExpensesIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "guid"
            },
            "description": "The list of expenses unique identifiers to send for validation."
          },
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "The mail of the user."
          },
          "ReportName": {
            "uniqueItems": false,
            "type": "string",
            "description": "The name of the sent report."
          }
        },
        "format": "SubmitExpensesForValidationInput",
        "example": "{\r\n  \"ExpensesIds\": [\r\n    \"string\"\r\n  ],\r\n  \"UserMail\": \"string\",\r\n  \"ReportName\": \"string\"\r\n}"
      },
      "AddTravelExpenseInput": {
        "required": [
          "UserMail",
          "Name",
          "Value",
          "TravelExpenseCategory",
          "ExternalId"
        ],
        "type": "object",
        "properties": {
          "UserMail": {
            "uniqueItems": false,
            "type": "string",
            "description": "The mMail of the user."
          },
          "Name": {
            "uniqueItems": false,
            "type": "string",
            "description": "The name of the expense."
          },
          "Value": {
            "uniqueItems": false,
            "type": "number",
            "description": "The amount value of the expense.",
            "format": "decimal"
          },
          "TravelExpenseCategory": {
            "uniqueItems": false,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "type": "integer",
            "description": "An enum attribute which is the type of the expense category.\r\n\r\n    CARRENTAL = 0 (Car rental expense)\r\n    FLIGHT = 1 (Flight expense)\r\n    LODGING = 2 (Lodging expense)\r\n    TRAIN = 3 (Train expense)\r\n    TAXI = 4 (Taxi expense)\r\n    BUS = 5 (Bus expense)\r\n    FOOD = 6 (Food expense)\r\n    TRAVELBOOKINGFEE = 7 (Travel booking expense)\r\n    OTHER = 8 (Other expense type)\r\n",
            "format": "enum"
          },
          "ExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "External identifier of the expense."
          },
          "ReportName": {
            "uniqueItems": false,
            "type": "string",
            "description": "The report name containing the expense. If null, the default value will be 'travel agency - user full name'."
          },
          "PaymentInstrumentId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The payment instrument unique identifier of the expense.",
            "format": "guid"
          },
          "MissionOrderId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The mission order unique identifier of the expense, if specified, the expense will be linked with the mission order automatically.",
            "format": "guid"
          },
          "DateBooking": {
            "uniqueItems": false,
            "type": "string",
            "description": "The date of the expense booking. It respects the standard ISO 8601 date format. e.g: 2018-06-04T08:30:15.023Z. If Null, the default value is the date of today.",
            "format": "date-time"
          },
          "CountryCode": {
            "uniqueItems": false,
            "type": "string",
            "description": "The country code of the expense: FR, ES, DE, GB... If Null, the default value is the country code of the user."
          },
          "Currency": {
            "uniqueItems": false,
            "type": "string",
            "description": "The currency of the expense: EUR, USD... It respects the standard ISO 4217 code. If Null, the default value is the currency of the user."
          },
          "Vat": {
            "$ref": "#/components/schemas/VatInput"
          },
          "ProjectExternalId": {
            "uniqueItems": false,
            "type": "string",
            "description": "The external identifier of the project."
          },
          "ToReimburse": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies whether the expense is reimbursable or not. If Null, the default value is True."
          },
          "IsBillable": {
            "uniqueItems": false,
            "type": "boolean",
            "description": "Specifies whether the expense is billable to the client or not. If Null, the default value is False."
          },
          "Units": {
            "uniqueItems": false,
            "type": "number",
            "description": "The number of nights for LODGING category.",
            "format": "decimal"
          },
          "TravelDetails": {
            "$ref": "#/components/schemas/TravelDetailsInput"
          },
          "Description": {
            "uniqueItems": false,
            "type": "string",
            "description": "The description on the expense."
          },
          "MerchantInput": {
            "$ref": "#/components/schemas/MerchantInput"
          }
        },
        "format": "AddTravelExpenseInput",
        "example": [
          {
            "UserMail": "thriupublicapi@yopmail.com",
            "Name": "AirPort Fees test",
            "Value": 100,
            "TravelExpenseCategory": 1,
            "PaymentInstrumentId": "dd9a2dde-8d69-458b-b612-a6a4ef3e65cb",
            "ExternalId": "Ext1"
          },
          {
            "UserMail": "thriupublicapi@yopmail.com",
            "Name": "Taxi Fees test",
            "Value": 10,
            "TravelExpenseCategory": 4,
            "PaymentInstrumentId": "dd9a2dde-8d69-458b-b612-a6a4ef3e65cb",
            "ExternalId": "Ext2"
          }
        ]
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ]
}