{
  "components": {
    "schemas": {
      "AllocationBean": {
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/KeyTypePairBean"
          },
          "children": {
            "items": {
              "$ref": "#/components/schemas/AllocationBean"
            },
            "readOnly": true,
            "type": "array"
          },
          "commitment": {
            "example": 100,
            "format": "double",
            "maximum": 100,
            "minimum": 1,
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "created": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "end": {
            "example": "yyyy-MM-dd**Inclusive**",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "includeNonWorkingDays": {
            "default": false,
            "description": "Include Weekends and Holidays?",
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "planApproval": {
            "$ref": "#/components/schemas/PlanApprovalBean"
          },
          "planItem": {
            "$ref": "#/components/schemas/PlanItemBean"
          },
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceBean"
          },
          "scope": {
            "$ref": "#/components/schemas/IdTypePairBean"
          },
          "seconds": {
            "format": "int64",
            "type": "integer"
          },
          "secondsPerDay": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "start": {
            "example": "yyyy-MM-dd**Inclusive**",
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "updated": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          }
        },
        "required": [
          "assignee",
          "commitment",
          "end",
          "planItem",
          "recurrence",
          "scope",
          "start"
        ],
        "type": "object",
        "xml": {
          "name": "allocation"
        }
      },
      "AllocationInputBean": {
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/KeyTypePairBean"
          },
          "commitment": {
            "example": 100,
            "format": "double",
            "maximum": 100,
            "minimum": 1,
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "example": "This is a description.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "end": {
            "description": "End date is **Inclusive**",
            "example": "yyyy-MM-dd",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "includeNonWorkingDays": {
            "default": false,
            "description": "Include Weekends and Holidays?",
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "planApproval": {
            "$ref": "#/components/schemas/PlanApprovalBean"
          },
          "planItem": {
            "$ref": "#/components/schemas/PlanItemBean"
          },
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceInputBean"
          },
          "scope": {
            "$ref": "#/components/schemas/IdTypePairBean"
          },
          "secondsPerDay": {
            "example": 3600,
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "start": {
            "description": "Start date is **Inclusive**",
            "example": "yyyy-MM-dd",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "required": [
          "end",
          "secondsPerDay",
          "start"
        ],
        "type": "object"
      },
      "ApprovalAction": {
        "properties": {
          "key": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "message": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "CSVImportMappedEntry": {
        "properties": {
          "fileName": {
            "type": "string"
          },
          "formatEntry": {
            "$ref": "#/components/schemas/ImportExportFormatEntry"
          },
          "mappedFields": {
            "items": {
              "$ref": "#/components/schemas/MappedEntry"
            },
            "type": "array"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CapacityReport": {
        "properties": {
          "footer": {
            "$ref": "#/components/schemas/ReportRowBean"
          },
          "header": {
            "$ref": "#/components/schemas/ReportRowBeanObjectIntervalHeaderEntry"
          },
          "rows": {
            "items": {
              "$ref": "#/components/schemas/ReportRowBeanRowHeaderEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Entry": {
        "properties": {
          "allocated": {
            "format": "float",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "availability": {
            "format": "float",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "availabilityTitle": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "fte": {
            "format": "float",
            "type": "number",
            "xml": {
              "attribute": true,
              "name": "FTE"
            }
          },
          "fteformatted": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "FTEFormatted"
            }
          },
          "ftetitle": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "FTETitle"
            }
          },
          "plannedVersusAvailability": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "plannedVersusAvailablity": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "remaining": {
            "format": "float",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "remainingTitle": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "totalAllocated": {
            "format": "float",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "totalAvailability": {
            "format": "float",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "totalPlannedVersusTotalAvailability": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "totalPlannedVersusTotalAvailablity": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "totalRemaining": {
            "format": "float",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "totalRemainingTitle": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "totalUtilisation": {
            "format": "float",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "utilisation": {
            "format": "float",
            "type": "number",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "FilePart": {
        "properties": {
          "contentType": {
            "type": "string"
          },
          "formField": {
            "type": "boolean"
          },
          "inputStream": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "IdTypePairBean": {
        "properties": {
          "id": {
            "example": 12345,
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "enum": [
              "user",
              "team"
            ],
            "example": "team",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "ImportExportFormatEntry": {
        "properties": {
          "dateFormat": {
            "type": "string"
          },
          "decimalSeparator": {
            "type": "string"
          },
          "groupingSeparator": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "IntervalHeaderEntry": {
        "properties": {
          "current": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "end": {
            "format": "date-time",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "start": {
            "format": "date-time",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "KeyTypePairBean": {
        "properties": {
          "key": {
            "description": "Input would change according to specified type.",
            "example": "johnDoe",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "enum": [
              "USER",
              "TEAM"
            ],
            "example": "USER",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "required": [
          "key",
          "type"
        ],
        "type": "object"
      },
      "MappedEntry": {
        "properties": {
          "column": {
            "format": "int32",
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlanApprovalBean": {
        "properties": {
          "actor": {
            "$ref": "#/components/schemas/UserBean"
          },
          "created": {
            "readOnly": true,
            "type": "string"
          },
          "latestAction": {
            "$ref": "#/components/schemas/ApprovalAction"
          },
          "requester": {
            "$ref": "#/components/schemas/UserBean"
          },
          "reviewer": {
            "$ref": "#/components/schemas/UserBean"
          },
          "statusCode": {
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "updated": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "planApproval"
        }
      },
      "PlanApprovalInputBean": {
        "properties": {
          "reviewerKey": {
            "type": "string"
          },
          "statusCode": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "planApproval"
        }
      },
      "PlanApprovalSearchBean": {
        "properties": {
          "includePastPlans": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "statusCodes": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PlanBean": {
        "properties": {
          "allocationId": {
            "example": 12345,
            "format": "int32",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "assigneeKey": {
            "example": "johnDoe",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "day": {
            "example": "yyyy-MM-dd",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "example": "This is a description.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "end": {
            "example": "yyyy-MM-dd",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "includeNonWorkingDays": {
            "default": false,
            "description": "Include Weekends and Holidays?",
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "partialUpdate": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "planApproval": {
            "$ref": "#/components/schemas/PlanApprovalInputBean"
          },
          "planItemId": {
            "description": "ID for the item (dependant on the planItemType) which you are planning for.",
            "example": 12345,
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "planItemType": {
            "enum": [
              "COMPONENT",
              "EPIC",
              "ISSUE",
              "PROJECT",
              "SPRINT",
              "VERSION"
            ],
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "plannedSeconds": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "secondsPerDay": {
            "example": 3600,
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "start": {
            "example": "yyyy-MM-dd",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "startTime": {
            "example": "HH:MM",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "required": [
          "assigneeKey",
          "day",
          "end",
          "includeNonWorkingDays",
          "planItemId",
          "planItemType",
          "secondsPerDay",
          "start",
          "startTime"
        ],
        "type": "object",
        "xml": {
          "name": "plan"
        }
      },
      "PlanDayScheduleBean": {
        "type": "object"
      },
      "PlanItemBean": {
        "properties": {
          "accountKey": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "avatarUrls": {
            "additionalProperties": {
              "readOnly": true,
              "type": "string"
            },
            "readOnly": true,
            "type": "object"
          },
          "description": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "epicIssue": {
            "$ref": "#/components/schemas/RootIssueBean"
          },
          "epicKey": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "epicName": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "estimatedRemainingSeconds": {
            "format": "int64",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "iconUrl": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "example": 12345,
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "originalEstimateSeconds": {
            "format": "int64",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "parentIssue": {
            "$ref": "#/components/schemas/RootIssueBean"
          },
          "parentKey": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planItemUrl": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "projectColor": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "projectId": {
            "format": "int64",
            "readOnly": true,
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "projectKey": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "summary": {
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "enum": [
              "COMPONENT",
              "EPIC",
              "ISSUE",
              "PROJECT",
              "SPRINT",
              "VERSION",
              "ISSUE",
              "EPIC",
              "PROJECT",
              "COMPONENT",
              "SPRINT",
              "VERSION"
            ],
            "example": "ISSUE",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "xml": {
          "name": "planItem"
        }
      },
      "PlanLogBean": {
        "properties": {
          "allocationId": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "assignee": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dateCreated": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dateUpdated": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "day": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "includeNonWorkingDays": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "location": {
            "$ref": "#/components/schemas/PlanLogLocationBean"
          },
          "parent": {
            "$ref": "#/components/schemas/PlanLogBean"
          },
          "planApproval": {
            "$ref": "#/components/schemas/PlanApprovalBean"
          },
          "planCreator": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planDescription": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planEnd": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planItemId": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "planItemInfo": {
            "$ref": "#/components/schemas/PlanItemBean"
          },
          "planStart": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planStartTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "secondsPerDay": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "timePlannedSeconds": {
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "PlanLogLocationBean": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "PlanPermissionBean": {
        "properties": {
          "canApprovePlans": {
            "type": "boolean"
          },
          "canEditPlans": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PlanSearchBean": {
        "properties": {
          "epicKey": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "from": {
            "format": "date",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "includeSubtasks": {
            "type": "boolean",
            "writeOnly": true
          },
          "locationIds": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "projectId": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "projectKey": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "roleId": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "taskId": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "taskKey": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "teamId": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "to": {
            "format": "date",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "worker": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "from",
          "to"
        ],
        "type": "object"
      },
      "RecurrenceBean": {
        "properties": {
          "endDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parent": {
            "$ref": "#/components/schemas/IdTypePairBean"
          },
          "rule": {
            "enum": [
              "NEVER",
              "WEEKLY",
              "BI-WEEKLY",
              "MONTHLY"
            ],
            "example": "NEVER",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "required": [
          "rule"
        ],
        "type": "object"
      },
      "RecurrenceInputBean": {
        "properties": {
          "endDate": {
            "example": "yyyy-MM-dd",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rule": {
            "enum": [
              "NEVER",
              "WEEKLY",
              "BI-WEEKLY",
              "MONTHLY"
            ],
            "example": "NEVER",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "ReportRowBean": {
        "properties": {
          "columns": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "header": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "ReportRowBeanObjectIntervalHeaderEntry": {
        "properties": {
          "columns": {
            "items": {
              "$ref": "#/components/schemas/IntervalHeaderEntry"
            },
            "type": "array"
          },
          "header": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "ReportRowBeanRowHeaderEntry": {
        "properties": {
          "columns": {
            "items": {
              "$ref": "#/components/schemas/Entry"
            },
            "type": "array"
          },
          "header": {
            "$ref": "#/components/schemas/RowHeader"
          }
        },
        "type": "object"
      },
      "ResourceOverviewSearchBean": {
        "properties": {
          "assigneeKeys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "endDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "startDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "withPlanItemInfo": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "RootIssueBean": {
        "properties": {
          "estimatedRemainingSeconds": {
            "format": "int64",
            "type": "integer"
          },
          "iconUrl": {
            "type": "string"
          },
          "originalEstimateSeconds": {
            "format": "int64",
            "type": "integer"
          },
          "summary": {
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "RowHeader": {
        "properties": {
          "memberId": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "UserAgendaBean": {
        "properties": {
          "allocatedSeconds": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "commitment": {
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "planItem": {
            "$ref": "#/components/schemas/PlanItemBean"
          }
        },
        "type": "object"
      },
      "UserBean": {
        "properties": {
          "displayName": {
            "example": "John Doe",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "example": "johndoe123",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "example": "johnDoe",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "UserFilterBean": {
        "properties": {
          "creator": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "groupNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "id": {
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "isAdvanced": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "minAvailability": {
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "roleIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array",
            "uniqueItems": true
          },
          "roleNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "teamIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array",
            "uniqueItems": true
          },
          "teamNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "userKeys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "userNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "type": "object"
      },
      "UserIndexSearchBeanV1": {
        "properties": {
          "from": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "groupNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "maxResults": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "roleIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array",
            "uniqueItems": true
          },
          "roleNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "startAt": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "teamIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array",
            "uniqueItems": true
          },
          "to": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "userKeys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "externalDocs": {
    "description": "Contact Tempo Customer Support.",
    "url": "https://tempo-io.atlassian.net/servicedesk/customer/portal/6"
  },
  "info": {
    "description": "Welcome to Tempo Planning API Documentation. Use this REST API to programmatically transfer data to or from Tempo Core in order to integrate with other business components. REST being based on open standards, you are free to use any web development language to access the API.",
    "termsOfService": "https://www.tempo.io/terms-of-use",
    "title": "Tempo Planning",
    "version": "1.0",
    "x-logo": {
      "altText": "Tempo Software",
      "href": "https://www.tempo.io/server-api-documentation/",
      "url": "https://cdn2.hubspot.net/hubfs/2814970/openApi/TEMPO_OpenAPI.png"
    }
  },
  "openapi": "3.0.3",
  "paths": {
    "/tempo-planning/1/allocation": {
      "get": {
        "description": "Gets all plans for a given query. If neither endDate and startDate are defined, then the search period will be one month from the current date (today).",
        "operationId": "getAllocations",
        "parameters": [
          {
            "description": "Example: assigneeKeys=johnDoe&assigneeKeys=joeSchmoe, can be either usernames or team ids, according to assigneeType",
            "in": "query",
            "name": "assigneeKeys",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Type of assignee.",
            "in": "query",
            "name": "assigneeType",
            "schema": {
              "enum": [
                "USER",
                "TEAM"
              ],
              "type": "string"
            }
          },
          {
            "description": "ID of the item which the plan is for.",
            "in": "query",
            "name": "planItemId",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Type of the item which the plan is for.",
            "in": "query",
            "name": "planItemType",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start of search period. If this is defined but no endDate is defined, it will query plans one month ahead from now. **INCLUSIVE**",
            "example": "yyyy-MM-dd",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "End of search period. If this is defined but no startDate is defined, it will query plans one month back from now. **INCLUSIVE**",
            "example": "yyyy-MM-dd",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If true then all user plans that are reflected from a team plan are also included.",
            "in": "query",
            "name": "expandReflections",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AllocationBean"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Get all plans for a given query.",
        "tags": [
          "Allocation"
        ],
        "x-public": true
      },
      "post": {
        "operationId": "postAllocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllocationInputBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationBean"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Create a basic Plan",
        "tags": [
          "Allocation"
        ],
        "x-public": true
      }
    },
    "/tempo-planning/1/allocation/{allocationId}": {
      "delete": {
        "operationId": "deleteAllocation",
        "parameters": [
          {
            "description": "ID of the Plan.",
            "example": 12345,
            "in": "path",
            "name": "allocationId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Delete an existing Plan.",
        "tags": [
          "Allocation"
        ],
        "x-public": true
      },
      "get": {
        "description": "Get a specific plan by the plan ID",
        "operationId": "getAllocation",
        "parameters": [
          {
            "description": "ID of the plan.",
            "example": 12345,
            "in": "path",
            "name": "allocationId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "If set to 'children', then all reflected and recurring plans for the specified plan are also fetched.",
            "example": "children",
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start date of the period of desired recurring plans. Only needed if expand is set. **INCLUSIVE**",
            "example": "yyyy-MM-dd",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "End Date of the period of desired recurring plans. Only needed if expand is set. **INCLUSIVE**",
            "example": "yyyy-MM-dd",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationBean"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Get plan by ID",
        "tags": [
          "Allocation"
        ],
        "x-public": true
      },
      "put": {
        "operationId": "updateAllocation",
        "parameters": [
          {
            "description": "ID of Plan.",
            "example": 12345,
            "in": "path",
            "name": "allocationId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllocationInputBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationBean"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Update an existing Plan.",
        "tags": [
          "Allocation"
        ],
        "x-public": true
      }
    },
    "/tempo-planning/1/plan": {
      "post": {
        "operationId": "postPlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlanLogBean"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Create Plan",
        "tags": [
          "Plan"
        ],
        "x-public": true
      },
      "put": {
        "operationId": "updatePlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlanLogBean"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Update Plan",
        "tags": [
          "Plan"
        ],
        "x-public": true
      }
    },
    "/tempo-planning/1/plan/remove/planLog/{planId}": {
      "put": {
        "operationId": "removePlanForDay",
        "parameters": [
          {
            "example": 12345,
            "in": "path",
            "name": "planId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Date of the day from which you want to delete the plan.",
            "example": "yyyy-MM-dd",
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlanLogBean"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Remove Plan from Day",
        "tags": [
          "Plan"
        ],
        "x-public": true
      }
    },
    "/tempo-planning/1/plan/search": {
      "post": {
        "description": "By default, if no other fields than \"from\" and \"to\" are sent, then only plans for logged in user will be returned.",
        "operationId": "searchPlanLogs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanSearchBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlanLogBean"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "4XX": {
            "description": "Bad Request"
          }
        },
        "summary": "Search for Plans within given Date Range",
        "tags": [
          "Plan"
        ],
        "x-public": true
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://{JIRA_BASE_URL}/rest",
      "variables": {
        "JIRA_BASE_URL": {
          "default": "JIRA_BASE_URL"
        }
      }
    }
  ]
}