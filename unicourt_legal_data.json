{
  "openapi": "3.0.0",
  "info": {
    "version": "v1",
    "title": "UniCourt - Developer Hub API's",
    "description": "Unicourt Developer Hub API's.",
    "contact": {
      "email": "support@unicourt.com"
    }
  },
  "tags": [
    {
      "name": "Search API Request"
    },
    {
      "name": "Jurisdiction Filters Request"
    },
    {
      "name": "Case Type Filters Request"
    },
    {
      "name": "Case Status Filters Request"
    },
    {
      "name": "Case API Request"
    },
    {
      "name": "Parties API Request"
    },
    {
      "name": "Attorneys API Request"
    },
    {
      "name": "Related Cases API Request"
    },
    {
      "name": "Docket Entries API Request"
    },
    {
      "name": "Fetch information for all documents of a case"
    },
    {
      "name": "Fetch information for a particular document of a case"
    },
    {
      "name": "The URL to download a document"
    },
    {
      "name": "Order Document Preview API Request"
    },
    {
      "name": "Order Document Confirm API Request"
    },
    {
      "name": "Order Document Details API Request"
    },
    {
      "name": "Order Document Status API Request"
    },
    {
      "name": "Update Case API Request"
    },
    {
      "name": "Start Tracking Cases API Request"
    },
    {
      "name": "Stop Tracking Cases API Request"
    },
    {
      "name": "Fetch all the billing cycles for an account"
    },
    {
      "name": "Account Usage Request"
    },
    {
      "name": "Invoices API Request"
    },
    {
      "name": "The URL to download a Invoice"
    },
    {
      "name": "Folder API Request"
    },
    {
      "name": "Tracking Schedules API Request"
    },
    {
      "name": "Tracked Cases API Request"
    },
    {
      "name": "Saved Search Request"
    }
  ],
  "externalDocs": {
    "description": "Visit the Developer Hub site for more details on API's.",
    "url": "https://unicourt.com/developer-hub"
  },
  "servers": [
    {
      "description": "Unicourt API's Server",
      "url": "https://api.unicourt.com/rest/v1"
    }
  ],
  "paths": {
    "/search": {
      "post": {
        "tags": [
          "Search API Request"
        ],
        "operationId": "Search",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              },
              "examples": {
                "Search Request": {
                  "value": {
                    "query": [
                      {
                        "search_terms": [
                          "Case Management Conference Scheduled",
                          "Case Management Statement Due"
                        ]
                      }
                    ],
                    "page": 1,
                    "sort_by": "Filing Date",
                    "filters": []
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "result": [
                          {
                            "case": {
                              "case_type": "Other Product Liability",
                              "case_type_category": "Civil",
                              "case_type_group": "Personal Injury",
                              "case_status_category": "Other",
                              "case_status_name": "Stayed",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-12-17 10:15:46",
                              "last_update_changes_found": "2021-11-28 03:41:10",
                              "created_date": "2021-10-14 11:00:53",
                              "case_name": "Donies SMith vs. Prometheus Laboratories, Inc./STAYED",
                              "filing_date": "2021-10-07",
                              "case_id": "FNDBUHRQIEZECJEINAZWRBLLLVJBI1047",
                              "case_number": "21CECG03001",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          },
                          {
                            "case": {
                              "case_type": "Wrongful Termination",
                              "case_type_category": "Civil",
                              "case_type_group": "Labor",
                              "case_status_category": "Pending",
                              "case_status_name": "Other Pending",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-12-17 10:16:03",
                              "last_update_changes_found": "2021-11-08 16:08:29",
                              "created_date": "2021-10-11 14:20:56",
                              "case_name": "Salvador Aceves vs. Pacific Valley Patrol Inc.",
                              "filing_date": "2021-08-10",
                              "case_id": "EZARKGJLHQWTYH4DMMXGHADALNGQ21042",
                              "case_number": "21CECG02336",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          },
                          {
                            "case": {
                              "case_type": "Other Labor",
                              "case_type_category": "Civil",
                              "case_type_group": "Labor",
                              "case_status_category": "Pending",
                              "case_status_name": "Other Pending",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-11-27 17:32:31",
                              "last_update_changes_found": "2021-11-27 17:32:31",
                              "created_date": "2021-11-07 16:04:08",
                              "case_name": "Lorena Vidal vs. The California Home for the Aged, Inc",
                              "filing_date": "2021-08-09",
                              "case_id": "FJCRSHJPIAYUAI4HM4ZGPBLKNBIQ41055",
                              "case_number": "21CECG02976",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          },
                          {
                            "case": {
                              "case_type": "Other Labor",
                              "case_type_category": "Civil",
                              "case_type_group": "Labor",
                              "case_status_category": "Pending",
                              "case_status_name": "Other Pending",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-11-28 16:36:04",
                              "last_update_changes_found": "2021-11-28 16:36:04",
                              "created_date": "2021-10-02 12:18:31",
                              "case_name": "Michael Shaffer vs. Rick Carsey",
                              "filing_date": "2021-08-03",
                              "case_id": "FJCRSHJPIAYUAI4HM4ZGPA26LVJBI1037",
                              "case_number": "21CECG02241",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          },
                          {
                            "case": {
                              "case_type": "Other Real Property",
                              "case_type_category": "Civil",
                              "case_type_group": "Property",
                              "case_status_category": "Pending",
                              "case_status_name": "Other Pending",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-11-27 15:47:21",
                              "last_update_changes_found": "2021-11-27 15:47:21",
                              "created_date": "2021-09-29 12:22:25",
                              "case_name": "Pentamerous LLC vs. Tonie Priest, SR",
                              "filing_date": "2021-07-30",
                              "case_id": "EZARKGJLHQWTYH4DMMXGG73DMREQ61051",
                              "case_number": "21CECG02205",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          },
                          {
                            "case": {
                              "case_type": "Other Personal Injury",
                              "case_type_category": "Civil",
                              "case_type_group": "Personal Injury",
                              "case_status_category": "Disposed",
                              "case_status_name": "Dismissed",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-11-27 12:32:28",
                              "last_update_changes_found": "2021-11-27 12:32:28",
                              "created_date": "2021-10-04 19:57:44",
                              "case_name": "Victor Santos vs. Darlene Slaughter",
                              "filing_date": "2021-07-13",
                              "case_id": "FRDRWHZRIIZUEJMJNE2GTBTILZKBA1039",
                              "case_number": "21CECG02022",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          },
                          {
                            "case": {
                              "case_type": "Other Contract",
                              "case_type_category": "Civil",
                              "case_type_group": "Contract",
                              "case_status_category": "Disposed",
                              "case_status_name": "Judgment Entered",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-11-27 08:06:46",
                              "last_update_changes_found": "2021-11-27 08:06:46",
                              "created_date": "2021-09-16 16:06:33",
                              "case_name": "Financial Services Vehicle Trust vs. Antonio Ochoa",
                              "filing_date": "2021-06-18",
                              "case_id": "FNDBUHRQIEZECJEINAZWRBDLNBHQ21047",
                              "case_number": "21CECG01767",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          },
                          {
                            "case": {
                              "case_type": "Writ Of Mandamus",
                              "case_type_category": "Civil",
                              "case_type_group": "Other",
                              "case_status_category": "Pending",
                              "case_status_name": "Other Pending",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-12-17 10:16:08",
                              "last_update_changes_found": "2021-11-27 06:38:58",
                              "created_date": "2021-10-04 12:16:23",
                              "case_name": "Diana Rodriguez vs. City of Fresno Civil Service Board/WM",
                              "filing_date": "2021-06-10",
                              "case_id": "FFCBQHBOH4YD6IUGMYYWNAS4LRGQ41027",
                              "case_number": "21CECG01664",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          },
                          {
                            "case": {
                              "case_type": "Motor Vehicle",
                              "case_type_category": "Civil",
                              "case_type_group": "Personal Injury",
                              "case_status_category": "Disposed",
                              "case_status_name": "Dismissed",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-12-17 10:16:20",
                              "last_update_changes_found": "2021-12-17 10:16:20",
                              "created_date": "2021-10-04 08:37:45",
                              "case_name": "Tara Lee vs Vanessa Zamudio",
                              "filing_date": "2021-05-25",
                              "case_id": "FJCRSHJPIAYUAI4HM4ZGPA25MJGQY1028",
                              "case_number": "21CECG01494",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          },
                          {
                            "case": {
                              "case_type": "Business",
                              "case_type_category": "Civil",
                              "case_type_group": "Contract",
                              "case_status_category": "Pending",
                              "case_status_name": "Other Pending",
                              "courthouse": "Bf Sisk Courthouse",
                              "state": "CA",
                              "jurisdiction": "Fresno County Superior Courts",
                              "last_updated_date": "2021-11-27 03:53:32",
                              "last_update_changes_found": "2021-11-27 03:53:32",
                              "created_date": "2021-10-04 08:18:38",
                              "case_name": "BBS26 Investment, LLC vs. Amir Ghondaghsazan",
                              "filing_date": "2021-05-24",
                              "case_id": "FNDBUHRQIEZECJEINAZWRBC6MBIA61029",
                              "case_number": "21CECG01493",
                              "docket": ""
                            },
                            "attorneys": [],
                            "parties": [],
                            "judges": []
                          }
                        ],
                        "total_matches": "81188",
                        "post_data": {
                          "query": [
                            {
                              "search_terms": [
                                "Case Management Conference Scheduled",
                                "Case Management Statement Due"
                              ]
                            }
                          ],
                          "page": 1,
                          "sort_by": "Filing Date",
                          "filters": []
                        },
                        "criteria": "(0)"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "error": true,
                      "message": "Bad Request",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Search API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "value": {
                      "error": true,
                      "message": "Authorization failure",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested API URL is not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "error": true,
                      "message": "Not found",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request took too long to process",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Request Took Too Long": {
                    "value": {
                      "error": true,
                      "message": "This request took too long to process. Please try narrowing down your search results with Filters or try again later",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong from UniCourt end",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Unexpected Behavior": {
                    "value": {
                      "error": true,
                      "message": "Unexpected behavior, Please try again after some time",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "API Service is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Under Maintenance": {
                    "value": {
                      "error": false,
                      "message": "Under maintenance, Please try again after some time",
                      "data": "null"
                    }
                  },
                  "Technical Difficulties": {
                    "value": {
                      "error": false,
                      "message": "We are having some technical difficulties. Please try again later",
                      "data": "null"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "```$Billable```\n\nThe RESTful Search API, returns results in JSON for matching query and filters. These results are paginated and each page returns upto 10 results and maximum of 10,000 pages.\n\n  * This RESTful API accepts query options in simple JSON format within POST method.\n  * Search results can be narrowed down using [Jurisdiction Filters](/developer-hub/api/search/jurisdiction_filter), [Case Type Filters](/developer-hub/api/search/case_type_filter) and [Case Status Filters](/developer-hub/api/search/case_status_filter).\n  \n* * *\n\n##  API URL:\n\n```\nhttps://api.unicourt.com/rest/v1/search/?token=YOUR-API-TOKEN\n```\n\n* * *\n\n##  Request:\n\n| Method  | CURL Command  |\n| ------- | --------      |\n| POST    | curl -X POST \"[https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526](https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526)\" -H \"Content-Type: application/json\" -d '{\"query\":[{\"search\\_terms\":[\"Case Management Conference Scheduled\"]}]}'  |\n\n* * *\n\n##  Request Query Parameters:\n\n| Parameter | Parameter Type  | Required  | Description |\n| -------   | --------        | -------   | --------    |\n| token     | String          | Yes       | Token which is generated in UniCourt Account, for authorizing the request |\n\n* * *\n\n##  Search Query Options:\n\n| Field Name&nbsp;&nbsp;&nbsp;&nbsp;  | Data&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;  | Description                                                                                                                                             | Available value(s)  |\n| -------                             | --------                                | -------                                                                                                                                                 | -------   |\n| page                                | integer                                 | The page number of the search result. Default is **1**                                                                                                  | 1 - to - 10,000  |\n| sort\\_by                            | string                                  | Specifies the sort order of result set to be returned. Default is **Filing Date** which means that the latest filed case will be returned<br>first      | Filing Date, Relevancy  |\n| scope                               | string                                  | Scoped search allows you to limit the search to a section. Default is **Contains Any**                                                                  | Contains Any, Does Not Contain Any, Contains All, Does Not Contain All  |\n| attribute                           | string                                  | Attribute to search for specific keyword. Default is **Everything**                                                                                     | Everything, Party, Case Number, Case Name, Docket, Attorney, Judge, norm_party_id, norm_attorney_id, norm_law_firm_id, norm_judge_id  |\n| proximity                           | string                                  | Proximity search looks for documents where two or more separately matching term occurrences are within a specified distance,<br>Default is **Anywhere** | Next To Each Other, Anywhere  |\n| condition                           | string                                  | Use condition on usage for complex                                                                                                                      | OR & AND  |\n\n* * *\n\n##  How to construct query?\n\n### Syntax:\n\n```\n{\n  \"type\":\"object\",\n  \"properties\":{\n    \"query\":{\n      \"type\":\"array\",\n      \"items\":[\n        {\n          \"type\":\"object\",\n          \"properties\":{\n            \"search_terms\":{\n              \"type\":\"array\",\n              \"items\":[\n                {\n                  \"type\":\"string\"\n                }\n              ]\n            },\n            \"scope\":{\n              \"type\":\"string\"\n            },\n            \"attribute\":{\n              \"type\":\"string\"\n            },\n            \"proximity\":{\n              \"type\":\"string\"\n            }\n          },\n          \"required\":[\n            \"search_terms\"\n          ]\n        }\n      ]\n    },\n    \"page\":{\n      \"type\":\"integer\"\n    },\n    \"sort_by\":{\n      \"type\":\"string\"\n    },\n    \"filters\":{\n      \"type\":\"array\",\n      \"items\":[\n        {\n          \"type\":\"object\",\n          \"properties\":{\n            \"filter_type\":{\n              \"type\":\"string\"\n            },\n            \"field\":{\n              \"type\":\"string\"\n            },\n            \"keys\":{\n              \"type\":\"array\",\n              \"items\":[\n                {\n                  \"type\":\"integer\"\n                }\n              ]\n            },\n            \"date\":{\n              \"type\":\"string\"\n            },\n            \"days\":{\n              \"type\":\"integer\"\n            }\n          },\n          \"required\":[\n            \"filter_type\",\n            \"field\"\n          ]\n        }\n      ]\n    }\n  },\n  \"required\":[\n    \"query\"\n  ]\n}\n```\n\n### Examples:\n\n####  1)  Search for cases with keyword \"Case Management Conference Scheduled\" anywhere in the case\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ]\n    }\n  ]\n}'\t\n```\n  \n* * *\n\n####  2)  Search for cases with keywords \"Case Management Conference Scheduled\" or \"Case Management Statement Due\" anywhere in the case\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\", \"Case Management Statement Due\"\n      ]\n    }\n  ]\n}'\n```\n\n* * *\n\n####  3)  Search for next set of results with keywords \"Case Management Conference Scheduled\" or \"Case Management Statement Due\"\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\", \"Case Management Statement Due\"\n      ]\n    }\n  ],\n  \"page\": 1\n}'\n```\n\n* * *\n\n####  4)  Search for cases with keywords \"Case Management Conference Scheduled\" or \"Case Management Statement Due\" with sort\\_by field\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\", \"Case Management Statement Due\"\n      ]\n    }\n  ],\n  \"page\": 1,\n  \"sort_by\": \"Filing Date\"\n}'\n```\n\n* * *\n\n####  5)  Search for cases with keywords \"Case Management Conference Scheduled\" and \"Case Management Statement Due\" with proximity, attribute and scope\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\", \"Case Management Statement Due\"\n      ],\n      \"scope\":\"Contains All\",\n      \"attribute\":\"Docket\",\n      \"proximity\":\"Anywhere\"\n    }\n  ],\n  \"page\": 1,\n  \"sort_by\": \"Filing Date\"\n}'\n```\n\n* * *\n\n####  6)  Search for cases with keywords \"Case Management Conference Scheduled\" with a case_type filter\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ]\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"case_type\",\n      \"field\":\"group\",\n      \"keys\":[\n        6\n      ]\n    }\n  ]\n}'\n```\n\n* * *\n\n####  7)  Search for cases with keywords \"Case Management Conference Scheduled\" with a case_type and jurisdiction filter\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ]\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"case_type\",\n      \"field\":\"group\",\n      \"keys\":[\n        11\n      ]\n    },\n    {\n      \"filter_type\":\"jurisdiction\",\n      \"field\":\"court_system\",\n      \"keys\":[\n        72\n      ]\n    }\n  ]\n}'\n```\n\n* * *\n\n####  8)  Search for cases with keywords \"Case Management Conference Scheduled\" with filing_date filter\n  * The **\"from\\_date\"** and **\"to\\_date\"** filters can be used to search in date range.\n\n  * The **\"last\\_n\\_days\"** filter is useful when trying to fetch new cases every day that fit the same search criteria by setting the **last\\_n\\_days** field and **days** to 1.\n  \n  * ***Note:*** The **\"to\\_date\"** should be greater than **\"from\\_date\"** and **\"last\\_n\\_days\"** cannot be used in combination **\"to\\_date\"** or **\"from\\_date\"**.\n\n##### Example of \"from\\_date\" field and \"to\\_date\" field.\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ]\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"filing_date\",\n      \"field\":\"from_date\",\n      \"date\":\"2018-01-01\"\n    },\n    {\n      \"filter_type\":\"filing_date\",\n      \"field\":\"to_date\",\n      \"date\":\"2019-12-31\"\n    }\n  ]\n}'\n```\n\n##### Example of \"last\\_n\\_days\" field.\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ]\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"filing_date\",\n      \"field\":\"last_n_days\",\n      \"days\":50\n    }\n  ]\n}'\n```\n\n* * *\n\n####  9)  Search for cases with keywords \"Case Management Conference Scheduled\" with created_date filter\n  * The **\"from\\_date\"** and **\"to\\_date\"** filters can be used to search in date range.\n\n  * Use the **\"created_date\"** filter to get the recent cases that were added to UniCourt's Archive. This filter is especially useful when trying to fetch new cases every day that fit the same search criteria by setting the **last\\_n\\_days** field and **days** to 1.\n\n  * **\"created_date\"** is the date in UTC when the case was added to UniCourt Archive. This date always remains the same for a case.\n\n  * ***Note:*** The **\"to\\_date\"** should be greater than **\"from\\_date\"** and **\"last\\_n\\_days\"** cannot be used in combination **\"to\\_date\"** or **\"from\\_date\"**.\n\n##### Example of \"from\\_date\" field and \"to\\_date\" field.\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ]\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"created_date\",\n      \"field\":\"from_date\",\n      \"date\":\"2018-01-01\"\n    },\n    {\n      \"filter_type\":\"created_date\",\n      \"field\":\"to_date\",\n      \"date\":\"2019-12-31\"\n    }\n  ]\n}'\n```\n\n##### Example of \"last\\_n\\_days\" field.\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ]\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"created_date\",\n      \"field\":\"last_n_days\",\n      \"days\":50\n    }\n  ]\n}'\n```\n\n* * *\n\n####  10)  Search for cases with keywords \"Case Management Conference Scheduled\" with last_update_changes_found filter\n\n  * The **\"from\\_date\"** and **\"to\\_date\"** filters can be used to search in date range.\n\n  * The **\"last\\_n\\_days\"** filter is useful when trying to fetch new cases every day that fit the same search criteria by setting the **last\\_n\\_days** field and **days** to 1.\n\n  * ***Note:*** The **\"to\\_date\"** should be greater than **\"from\\_date\"** and **\"last\\_n\\_days\"** cannot be used in combination **\"to\\_date\"** or **\"from\\_date\"**. Also **\"last\\_update\\_changes\\_found\"** filter cannot be used with **Docket Search**.\n\n##### Example of \"from\\_date\" field and \"to\\_date\" field.\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ]\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"last_update_changes_found\",\n      \"field\":\"from_date\",\n      \"date\":\"2018-01-01\"\n    },\n    {\n      \"filter_type\":\"last_update_changes_found\",\n      \"field\":\"to_date\",\n      \"date\":\"2019-12-31\"\n    }\n  ]\n}'\n```\n\n##### Example of \"last\\_n\\_days\" field.\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ]\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"last_update_changes_found\",\n      \"field\":\"last_n_days\",\n      \"days\":50\n    }\n  ]\n}'\n```\n\n* * *\n\n####  11)  Search for cases with keyword\\'s \"City Bank\" and \"Case Management Conference Scheduled\" with docket_date filter\n\n  * Using **\"Docket\"** as attribute will search cases with matching docket search key. The  **\"docket\\_date\"** filter can only be applied for a Docket search.\n\n  * Use the **\"docket\\_date\"** filter to search for information within the Dockets. Filter based on **\"from\\_date\"** and **\"to\\_date\"** fields or **\"last\\_n\\_days\"** field.\n\n  * ***Note:*** When using **\"docket\\_date\"** filter, the first search condition and also the following conditions should have attribute as **\"Docket\"**. By default, **\"Docket\"** will be considered as an attribute for the search conditions when **\"docket\\_date\"** filter is used. The **\"to\\_date\"** should be greater than **\"from\\_date\"** and **\"last\\_n\\_days\"** cannot be used in combination **\"to\\_date\"** or **\"from\\_date\"**.\n\n##### Example of \"from\\_date\" field and \"to\\_date\" field.\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"City Bank\"\n      ],\n      \"scope\":\"Contains Any\",\n      \"attribute\":\"Docket\"\n    },\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ],\n      \"scope\":\"Contains Any\",\n      \"attribute\":\"Docket\",\n      \"condition\":\"AND\"\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"docket_date\",\n      \"field\":\"from_date\",\n      \"date\":\"2018-01-01\"\n    },\n    {\n      \"filter_type\":\"docket_date\",\n      \"field\":\"to_date\",\n      \"date\":\"2018-12-31\"\n    }\n  ]\n}'\n```\n\n##### Example of \"last\\_n\\_days\" field.\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ],\n      \"scope\":\"Contains Any\",\n      \"attribute\":\"Docket\"\n    }\n  ],\n  \"filters\":[\n    {\n      \"filter_type\":\"docket_date\",\n      \"field\":\"last_n_days\",\n      \"days\":50\n    }\n  ]\n}'\n```\n\n* * *\n\n####  12) Adavanced search\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ],\n      \"scope\":\"Contains Any\",\n      \"attribute\":\"Docket\"\n    },\n    {\n      \"search_terms\":[\n        \"Case Management Statement Due\"\n      ],\n      \"condition\":\"AND\",\n      \"scope\":\"Contains Any\",\n      \"attribute\":\"Docket\",\n      \"proximity\":\"Anywhere\"\n    }\n  ]\n}'\n```\n\n* * *\n\n####  13) Advanced search with filters\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/search/?token=a0f9770a842da247694673196ae2c9549f172526\" -H \"Content-Type: application/json\" -d '\n{\n  \"query\":[\n    {\n      \"search_terms\":[\n        \"Case Management Conference Scheduled\"\n      ],\n      \"scope\":\"Contains Any\",\n      \"attribute\":\"Docket\"\n    },\n    {\n      \"search_terms\":[\n        \"Case Management Statement Due\"\n      ],\n      \"condition\":\"AND\",\n      \"scope\":\"Contains Any\",\n      \"attribute\":\"Docket\",\n      \"proximity\":\"Anywhere\"\n    }\n  ],\n  \"page\": 1,\n  \"sort_by\":\"Filing Date\",\n  \"filters\":[\n    {\n      \"filter_type\":\"case_type\",\n      \"field\":\"group\",\n      \"keys\":[\n        1\n      ]\n    },\n    {\n      \"filter_type\":\"jurisdiction\",\n      \"field\":\"court_system\",\n      \"keys\":[\n        1\n      ]\n    },\n    {\n      \"filter_type\":\"filing_date\",\n      \"field\":\"from_date\",\n      \"date\":\"2010-01-01\"\n    },\n    {\n      \"filter_type\":\"filing_date\",\n      \"field\":\"to_date\",\n      \"date\":\"2018-12-31\"\n    }\n  ]\n}'\n```\n\n* * *\n\n##  Sample Response\n\n```\n{\n  \"error\":false,\n  \"message\":\"OK\",\n  \"data\":{\n    \"result\":[\n      {\n        \"case\":{\n            \"case_type\":\"Other Product Liability\",\n            \"case_type_category\":\"Civil\",\n            \"case_type_group\":\"Personal Injury\",\n            \"case_status_category\":\"Other\",\n            \"case_status_name\":\"Stayed\",\n            \"courthouse\":\"Bf Sisk Courthouse\",\n            \"state\":\"CA\",\n            \"jurisdiction\":\"Fresno County Superior Courts\",\n            \"last_updated_date\":\"2021-12-17 10:15:46\",\n            \"last_update_changes_found\":\"2021-11-28 03:41:10\",\n            \"created_date\":\"2021-10-14 11:00:53\",\n            \"case_name\":\"Donies SMith vs. Prometheus Laboratories, Inc.\\/STAYED\",\n            \"filing_date\":\"2021-10-07\",\n            \"case_id\":\"FNDBUHRQIEZECJEINAZWRBLLLVJBI1047\",\n            \"case_number\":\"21CECG03001\",\n            \"docket\":\"\"\n        },\n        \"attorneys\":[],\n        \"parties\":[],\n        \"judges\":[]\n      }\n    ],\n    \"total_matches\":\"81188\",\n    \"post_data\":{\n      \"query\":[\n        {\n          \"search_terms\":[\n            \"Case Management Conference Scheduled\"\n          ],\n          \"scope\":\"Contains Any\",\n          \"attribute\":\"Docket\"\n        },\n        {\n          \"search_terms\":[\n            \"Case Management Statement Due\"\n          ],\n          \"condition\":\"AND\",\n          \"scope\":\"Contains Any\",\n          \"attribute\":\"Docket\",\n          \"proximity\":\"Anywhere\"\n        }\n      ]\n    },\n    \"criteria\":\"(0 AND 1)\"\n  }\n}\n```\n\n* * *\n\n##  Description:\n\n| Property name           | Value         | Description |\n| -------                 | --------      | -------     |\n| error                   | boolean       | \\-          |\n| message                 | string        | Describes the response  |\n| data                    | nested object | Contains Search results information  |\n| result                  | list          | Contains one or more sets of case metadata  |\n| total\\_matches          | string        | The total number of search results returned by the query  |\n| post\\_data              | object        | Requested POST data about the search performed  |\n| criteria                | string        | Formula generated on using advanced search  |\n\n* * *\n\n# <span id=\"swagger-try-this-api\">Try this API</span>\n\nCall this method on live data to see the API request and response. Need help with the API Explorer? Check the [support page](/contact-us).\n"
      }
    },
    "/searchFilters/jurisdiction": {
      "get": {
        "tags": [
          "Jurisdiction Filters Request"
        ],
        "operationId": "JurisdictionFilters",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JurisdictionResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "filter_type": "jurisdiction",
                        "filters": [
                          {
                            "children": [
                              {
                                "children": [],
                                "field": "court_system",
                                "key": 73,
                                "name": "Federal",
                                "order": 3
                              }
                            ],
                            "field": "level_1_jurisdiction",
                            "key": 1,
                            "name": "Federal",
                            "order": 2
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Search Filter Jurisdiction API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful API to get jurisdiction filters data, returns a filter data in JSON format, which can be passed as filters for [Search API](/developer-hub/api/search/query). Returned data can be stored for a minimum period of 24 hours since this data does not change too often."
      }
    },
    "/searchFilters/caseType": {
      "get": {
        "tags": [
          "Case Type Filters Request"
        ],
        "operationId": "CaseTypeFilters",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseTypeResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "filter_type": "case_type",
                        "filters": [
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "field": "name",
                                    "key": 48,
                                    "name": "Third Party Tax Summon",
                                    "nos_code": [
                                      871,
                                      1871,
                                      2871
                                    ],
                                    "order": 6
                                  }
                                ],
                                "field": "group",
                                "key": 6,
                                "name": "Tax",
                                "order": 6
                              }
                            ],
                            "field": "category",
                            "key": 1,
                            "name": "Civil",
                            "order": 1
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Search Filter Case Type API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful API to get case type filters data, returns a filter data in JSON format, which can be passed as filters for [Search API](/developer-hub/api/search/query). Returned data can be stored for a minimum period of 24 hours since this data does not change too often."
      }
    },
    "/searchFilters/caseStatus": {
      "get": {
        "tags": [
          "Case Status Filters Request"
        ],
        "operationId": "CaseStatusFilters",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseStatusResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "filter_type": "case_status",
                        "filters": [
                          {
                            "children": [
                              {
                                "children": [],
                                "field": "name",
                                "key": 1,
                                "name": "Dismissed",
                                "order": 1
                              }
                            ],
                            "field": "category",
                            "key": 1,
                            "name": "Disposed",
                            "order": 2
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Search Filter Case Status API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful API to get case status filters data, returns a filter data in JSON format, which can be passed as filters for [Search API](/developer-hub/api/search/query). Returned data can be stored for a minimum period of 24 hours since this data does not change too often."
      }
    },
    "/case/{case_id}": {
      "get": {
        "tags": [
          "Case API Request"
        ],
        "operationId": "Case",
        "parameters": [
          {
            "name": "case_id",
            "description": "You can get the Case ID as a response of [Search API](/developer-hub/api/search/query).",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "updated_after_time",
            "description": "Specify a DateTime value to get the case response only if the case has been updated from the court after a particular time.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Possible responses for status code 200",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CaseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Case - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "requested_case_id": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038",
                        "is_moved": false,
                        "case": {
                          "case_meta": {
                            "case_number": "19STUD11918",
                            "case_name": "4812 AVALON LLC VS RAYETTA JEAN LINTHICUM",
                            "filing_date": "2019-12-06 00:00:00",
                            "last_updated_date": "2020-02-15 17:17:28",
                            "last_update_changes_found": "2020-02-15 17:17:28",
                            "participants_last_fetch": "2020-02-15 17:17:28",
                            "case_type": "Residential Eviction",
                            "case_type_subcategory": "Property",
                            "case_type_category": "Civil",
                            "case_status": "Other",
                            "case_status_category": "Other",
                            "courthouse": "Stanley Mosk Courthouse",
                            "jurisdiction": "Los Angeles County Superior Courts",
                            "county": "Los Angeles",
                            "state": "CA",
                            "case_id": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038",
                            "source_data": {
                              "common": {
                                "case_type": "UNLAWFUL DETAINER/RESIDENTIAL (NOT DRUGS OR WRONGFUL EVICTION)",
                                "case_status": "COURT FINDING - AFTER COURT TRIAL",
                                "courthouse": "STANLEY MOSK COURTHOUSE"
                              },
                              "pages": "null"
                            }
                          },
                          "parties": [
                            {
                              "party_id": "GBFR6IZVIY3VAHAZIJOHBATJM5IRS0908",
                              "party_types": [
                                {
                                  "party_type": "Plaintiff",
                                  "active": true,
                                  "representation_type": "Attorney Represented",
                                  "attorney_association": [
                                    {
                                      "attorney_type": "Attorney",
                                      "attorney_id": "FZER2IJTIQ2U4GQXIBMG3CTHL5IBG0906",
                                      "active": true
                                    }
                                  ]
                                }
                              ],
                              "entities": [],
                              "norm_party_id": "inUvE3QMaKBdU",
                              "fullname": "4812 AVALON LLC",
                              "prefix": "null",
                              "firstname": "4812 AVALON LLC",
                              "middlename": "null",
                              "lastname": "null",
                              "suffix": "null",
                              "entity_type": "Company"
                            },
                            {
                              "party_id": "GFGCAJBWI44FCHI2INOXDA3KNBJBW0909",
                              "party_types": [
                                {
                                  "party_type": "Defendant",
                                  "active": true,
                                  "representation_type": "Unrepresented",
                                  "attorney_association": []
                                }
                              ],
                              "entities": [],
                              "norm_party_id": "null",
                              "fullname": "LINTHICUM RAYETTA JEAN",
                              "prefix": "null",
                              "firstname": "RAYETTA",
                              "middlename": "JEAN",
                              "lastname": "LINTHICUM",
                              "suffix": "null",
                              "entity_type": "Individual"
                            }
                          ],
                          "attorneys": [
                            {
                              "attorney_id": "FZER2IJTIQ2U4GQXIBMG3CTHL5IBG0906",
                              "entities": [],
                              "fullname": "YEE PAUL G",
                              "firm": "null",
                              "bar_number": "null",
                              "prefix": "null",
                              "suffix": "null",
                              "firstname": "YEE",
                              "middlename": "PAUL",
                              "lastname": "G",
                              "attorney_types": [
                                {
                                  "attorney_type": "Attorney",
                                  "active": true
                                }
                              ],
                              "norm_attorney_id": "MwoQ98BJqFLev",
                              "norm_law_firm_id_list": [
                                "Fb9i6vuBct7ba"
                              ]
                            }
                          ],
                          "judges": [
                            {
                              "judge_id": "GFGCAJBWI44FCHI2INNW5DTFNFNRS0918",
                              "fullname": "GAIL KILLEFER",
                              "prefix": "null",
                              "suffix": "null",
                              "firstname": "KILLEFER",
                              "middlename": "null",
                              "lastname": "GAIL",
                              "norm_judge_id": "null",
                              "judge_type": "JUDGE",
                              "judge_types": [
                                {
                                  "judge_type": "JUDGE",
                                  "active": true
                                }
                              ]
                            }
                          ],
                          "has_related_cases": false,
                          "more_parties": false,
                          "more_attorneys": false
                        },
                        "parties_token": "b79073132c66768fe47ffcbef0072ae11381bf71",
                        "attorneys_token": "b79073132c66768fe47ffcbef0072ae11381bf71",
                        "related_cases_token": "b79073132c66768fe47ffcbef0072ae11381bf71",
                        "docket_entries_token": "b79073132c66768fe47ffcbef0072ae11381bf71",
                        "documents_token": "b79073132c66768fe47ffcbef0072ae11381bf71"
                      }
                    }
                  },
                  "Case - update_after_time - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "requested_case_id": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038",
                        "is_moved": false,
                        "case": {
                          "case_meta": {
                            "case_number": "19STUD11918",
                            "case_name": "4812 AVALON LLC VS RAYETTA JEAN LINTHICUM",
                            "filing_date": "2019-12-06 00:00:00",
                            "last_updated_date": "2020-02-15 17:17:28",
                            "last_update_changes_found": "2020-02-15 17:17:28",
                            "participants_last_fetch": "2020-02-15 17:17:28",
                            "case_type": "Residential Eviction",
                            "case_type_subcategory": "Property",
                            "case_type_category": "Civil",
                            "case_status": "Other",
                            "case_status_category": "Other",
                            "courthouse": "Stanley Mosk Courthouse",
                            "jurisdiction": "Los Angeles County Superior Courts",
                            "county": "Los Angeles",
                            "state": "CA",
                            "case_id": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038",
                            "source_data": {
                              "common": {
                                "case_type": "UNLAWFUL DETAINER/RESIDENTIAL (NOT DRUGS OR WRONGFUL EVICTION)",
                                "case_status": "COURT FINDING - AFTER COURT TRIAL",
                                "courthouse": "STANLEY MOSK COURTHOUSE"
                              },
                              "pages": "null"
                            }
                          },
                          "parties": [
                            {
                              "party_id": "GBFR6IZVIY3VAHAZIJOHBATJM5IRS0908",
                              "party_types": [
                                {
                                  "party_type": "Plaintiff",
                                  "active": true,
                                  "representation_type": "Attorney Represented",
                                  "attorney_association": [
                                    {
                                      "attorney_type": "Attorney",
                                      "attorney_id": "FZER2IJTIQ2U4GQXIBMG3CTHL5IBG0906",
                                      "active": true
                                    }
                                  ]
                                }
                              ],
                              "entities": [],
                              "norm_party_id": "inUvE3QMaKBdU",
                              "fullname": "4812 AVALON LLC",
                              "prefix": "null",
                              "firstname": "4812 AVALON LLC",
                              "middlename": "null",
                              "lastname": "null",
                              "suffix": "null",
                              "entity_type": "Company"
                            },
                            {
                              "party_id": "GFGCAJBWI44FCHI2INOXDA3KNBJBW0909",
                              "party_types": [
                                {
                                  "party_type": "Defendant",
                                  "active": true,
                                  "representation_type": "Unrepresented",
                                  "attorney_association": []
                                }
                              ],
                              "entities": [],
                              "norm_party_id": "null",
                              "fullname": "LINTHICUM RAYETTA JEAN",
                              "prefix": "null",
                              "firstname": "RAYETTA",
                              "middlename": "JEAN",
                              "lastname": "LINTHICUM",
                              "suffix": "null",
                              "entity_type": "Individual"
                            }
                          ],
                          "attorneys": [
                            {
                              "attorney_id": "FZER2IJTIQ2U4GQXIBMG3CTHL5IBG0906",
                              "entities": [],
                              "fullname": "YEE PAUL G",
                              "firm": "null",
                              "bar_number": "null",
                              "prefix": "null",
                              "suffix": "null",
                              "firstname": "YEE",
                              "middlename": "PAUL",
                              "lastname": "G",
                              "attorney_types": [
                                {
                                  "attorney_type": "Attorney",
                                  "active": true
                                }
                              ],
                              "norm_attorney_id": "MwoQ98BJqFLev",
                              "norm_law_firm_id_list": [
                                "Fb9i6vuBct7ba"
                              ]
                            }
                          ],
                          "judges": [
                            {
                              "judge_id": "GFGCAJBWI44FCHI2INNW5DTFNFNRS0918",
                              "fullname": "GAIL KILLEFER",
                              "prefix": "null",
                              "suffix": "null",
                              "firstname": "KILLEFER",
                              "middlename": "null",
                              "lastname": "GAIL",
                              "norm_judge_id": "null",
                              "judge_type": "JUDGE",
                              "judge_types": [
                                {
                                  "judge_type": "JUDGE",
                                  "active": true
                                }
                              ]
                            }
                          ],
                          "has_related_cases": false,
                          "more_parties": false,
                          "more_attorneys": false
                        },
                        "parties_token": "b79073132c66768fe47ffcbef0072ae11381bf71",
                        "attorneys_token": "b79073132c66768fe47ffcbef0072ae11381bf71",
                        "related_cases_token": "b79073132c66768fe47ffcbef0072ae11381bf71",
                        "docket_entries_token": "b79073132c66768fe47ffcbef0072ae11381bf71",
                        "documents_token": "b79073132c66768fe47ffcbef0072ae11381bf71"
                      }
                    }
                  },
                  "Case - is_moved - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "requested_case_id": "FFCBQHBDFZCDMGEFNEYV5BLJLRFQ61009",
                        "is_moved": true,
                        "case": {
                          "case_meta": {
                            "case_number": "6:07-CV-06252",
                            "case_name": "Merino v. United States of America",
                            "filing_date": "2007-05-15 00:00:00",
                            "last_updated_date": "2019-11-05 11:43:57",
                            "last_update_changes_found": "2019-11-05 11:43:57",
                            "participants_last_fetch": "2019-11-05 11:43:57",
                            "case_type": "Vacate Sentence",
                            "case_type_subcategory": "Prisoner",
                            "case_type_category": "Civil",
                            "case_status": "Other Disposed",
                            "case_status_category": "Disposed",
                            "courthouse": "Pacer Test Courthouse",
                            "jurisdiction": "Pacer Test System",
                            "county": "null",
                            "state": "AL",
                            "case_id": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038",
                            "source_data": {
                              "common": {
                                "case_type": "510",
                                "case_status": "CLOSED",
                                "courthouse": "TEST"
                              },
                              "pages": {
                                "CASE_QUERY": {
                                  "last_fetch": "2019-11-05 11:43:57",
                                  "first_fetch": "2019-04-24 12:40:11",
                                  "extracted_fields": {
                                    "pacer_case_id": 64452,
                                    "date_of_last_filing": "2007-05-15 00:00:00",
                                    "case_terminated_date": "2007-06-19 00:00:00"
                                  },
                                  "raw_ordered_data": []
                                },
                                "DOCKET_REPORT": {
                                  "last_fetch": "2019-11-05 11:43:57",
                                  "first_fetch": "2019-04-24 12:40:11",
                                  "extracted_fields": {
                                    "cause": "28:2255 Motion to Vacate / Correct Illegal Sentenc",
                                    "flags": [
                                      "HABEAS",
                                      "2255",
                                      "CLOSED_2007"
                                    ],
                                    "jury_demand": "None",
                                    "jurisdiction": "U.S. Government Defendant",
                                    "nature_of_suit": "510 Prisoner: Vacate Sentence",
                                    "cause_of_action_code": "28:2255"
                                  },
                                  "raw_ordered_data": []
                                }
                              }
                            }
                          },
                          "parties": [
                            {
                              "party_id": "FNDBUHSDIMZEGFAUHVLWW7DILRIRK0921",
                              "party_types": [
                                {
                                  "party_type": "Respondent",
                                  "active": true,
                                  "representation_type": "Unrepresented",
                                  "attorney_association": []
                                }
                              ],
                              "entities": [],
                              "norm_party_id": "null",
                              "fullname": "United States of America",
                              "prefix": "null",
                              "firstname": "United States of America",
                              "middlename": "null",
                              "lastname": "null",
                              "suffix": "null",
                              "entity_type": "Other"
                            },
                            {
                              "party_id": "FRDRWH2EIQZUIFIVHZMGY7LJLVJQ20913",
                              "party_types": [
                                {
                                  "party_type": "Petitioner",
                                  "active": true,
                                  "representation_type": "Self Represented",
                                  "attorney_association": []
                                }
                              ],
                              "entities": [
                                {
                                  "phones": [],
                                  "party_entity_id": "FRDRWH2EIQZUIFIVHZMGY7LJLVJQ20913",
                                  "potentials": [
                                    {
                                      "party_potential_id": "EM7BEFQ5FA7DAET7MMVWBAK6K5DAK1012",
                                      "court_verified": true,
                                      "address": "14614-074, Genesee County Jail, Box 51",
                                      "city": "Batavia",
                                      "state": "NY",
                                      "zipcode": "14021",
                                      "first_seen_date": "null"
                                    }
                                  ],
                                  "emails": []
                                }
                              ],
                              "norm_party_id": "null",
                              "fullname": "Jonathan Leonardo Merino",
                              "prefix": "null",
                              "firstname": "Jonathan",
                              "middlename": "Leonardo",
                              "lastname": "Merino",
                              "suffix": "null",
                              "entity_type": "Individual"
                            }
                          ],
                          "attorneys": [],
                          "judges": [
                            {
                              "judge_id": "GFGCAJCJJE4ESGQ2INNW5EDPMJJRE0918",
                              "fullname": "David G. Larimer",
                              "prefix": "null",
                              "suffix": "null",
                              "firstname": "David",
                              "middlename": "G",
                              "lastname": "Larimer",
                              "norm_judge_id": "null",
                              "judge_type": "PRESIDING JUDGE",
                              "judge_types": [
                                {
                                  "judge_type": "PRESIDING JUDGE",
                                  "active": true
                                }
                              ]
                            }
                          ],
                          "has_related_cases": false,
                          "more_parties": false,
                          "more_attorneys": false
                        },
                        "parties_token": "eb13c96fbcd55107572638b97ee60a86e84b8c20",
                        "attorneys_token": "eb13c96fbcd55107572638b97ee60a86e84b8c20",
                        "related_cases_token": "eb13c96fbcd55107572638b97ee60a86e84b8c20",
                        "docket_entries_token": "eb13c96fbcd55107572638b97ee60a86e84b8c20",
                        "documents_token": "eb13c96fbcd55107572638b97ee60a86e84b8c20"
                      }
                    }
                  },
                  "Case - Case not updated in UniCourt for specified updated_after_time - Error": {
                    "value": {
                      "error": false,
                      "message": "Case has not been updated after 2018-01-24 00:00:00, case was last updated on 2018-01-23 05:06:25",
                      "data": "null"
                    }
                  },
                  "Case - Incorrect DateTime format specified in updated_after_time - Error": {
                    "value": {
                      "error": true,
                      "message": "Incorrect format for updated_after_time. Expecting (YYYY-MM-DD HH:MM:SS)",
                      "data": "null"
                    }
                  },
                  "Case - case_id provided in the request is invalid - Error": {
                    "value": {
                      "error": true,
                      "message": "The given Case ID is Invalid",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Case API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "408": {
            "description": "Request took too long to process",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Request Took Too Long": {
                    "value": {
                      "error": true,
                      "message": "This request took too long to process. Please try again later",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "```$Billable```\n\nThe RESTful Case API, returns a Case Object in JSON format for a specific Case ID. You can get a Case ID as a response of [Search API](/developer-hub/api/search/query)\n\nThis API returns upto 10 Parties and 10 Attorneys for a Case. If there are more, then the field more\\_parties and/or more\\_attorneys will be set to true appropriately. The case API response has tokens for parties, attorneys, docket entries and documents which can be called using:\n\n* [Parties API](/developer-hub/api/case_details/parties) with parties_token\n\n* [Attorneys API](/developer-hub/api/case_details/attorneys) with attorneys_token\n\n* [Related Cases API](/developer-hub/api/case_details/related_cases) with related_cases_token\n\n* [Docket Entries API](/developer-hub/api/case_details/docket_entries) with docket_entries_token\n\n* [Documents API](/developer-hub/api/case_details/documents) with documents_token\n\n* * *\n\n##  API URL:\n\n```\nhttps://api.unicourt.com/rest/v1/case/{case_id}/?token=YOUR-API-TOKEN\n```\n\n* * *\n\n##  Request:\n\n| Method  | CURL Command  |\n| ------- | --------      |\n| GET     | curl -X GET \"[https://api.unicourt.com/rest/v1/case/FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038/?token=a0f9770a842da247694673196ae2c9549f172526](https://api.unicourt.com/rest/v1/case/FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038/?token=a0f9770a842da247694673196ae2c9549f172526)\" |\n\n* * *\n\n##  Request Query Parameters:\n\n| Parameter | Parameter Type  | Required  | Description |\n| -------   | --------        | -------   | --------    |\n| token     | String          | Yes       | Token which is generated in UniCourt Account, for authorizing the request |\n\n* * *\n\n##  Scenarios on Moved Case:\n\n### 1: What are Moved Cases?\n\n* Sometimes a Court can move a case from one courthouse to another, change the case number, close a case and open a new one for various reasons. UniCourt tries to identify most of the scenarios that can happen and accomodates for it as part of the same case. However, sometimes UniCourt detects two different cases to be the same one and marks the older duplicate one to be moved.\n\n### 2: How can you detect Moved Cases?\n\n* This can be identified by **'is\\_moved':true**, and the **'requested\\_case\\_id'** field will be different from the **'case\\_id'** field.\n\n### 3: How should you handle Moved Cases?\n\n* For moved cases we recommend you to update the case ID if you are referencing it anywhere as this is a permanent change.\n* For Case related APIs such as Parties, Attorneys, Related Cases, Docket Entries and Documents use the new **'case\\_id'** otherwise a 403 error response will be retuned.\n\n* * *\n\n##  Data associated with the Case API Response:\n\n| Property name           | Value         | Description |\n| -------                 | --------      | -------     |\n| error                   | boolean       | \\-          |\n| message                 | string        | Describes the response  |\n| data                    | nested object | Contains case response  |\n| requested\\_case\\_id     | string        | Requested case id to get case information |\n| is\\_moved               | boolean       | Will be set to true, if the case is moved, false if not |\n| case                    | object        | Contains case information |\n| parties\\_token          | string        | Access token for the [Parties API](/developer-hub/api/case_details/parties) |\n| attorneys\\_token        | string        | Access token for the [Attorneys API](/developer-hub/api/case_details/attorneys) |\n| related\\_cases\\_token   | string        | Access token for the [Related Cases API](/developer-hub/api/case_details/related_cases) |\n| docket\\_entries\\_token  | string        | Access token for the [Docket Entries API](/developer-hub/api/case_details/docket_entries) |\n| documents\\_token        | string        | Access token for the [Documents API](/developer-hub/api/case_details/documents) |\n\n* * *\n# <span id=\"swagger-try-this-api\">UniCourt Case API</span>\nThe RESTful Case API, returns a Case Object in JSON format for a specific Case ID. You can get a Case ID as a response of Webhooks for Search API\n"
      }
    },
    "/case/{case_id}/parties": {
      "get": {
        "tags": [
          "Parties API Request"
        ],
        "operationId": "Parties",
        "parameters": [
          {
            "name": "case_id",
            "description": "You can get the Case ID as a response of [Search API](/developer-hub/api/search/query).",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "parties_token",
            "description": "Required to get the parties for a case, which can be obtained in the [Case API](/developer-hub/api/case_details/case) response. This token is valid only for one hour from the time it is returned in the Case API response.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page_number",
            "description": "Pagination number for the party pages. Starting from 1.",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Possible responses for status code 200",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PartiesResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Parties - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "requested_case_id": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038",
                        "requested_page_number": "1",
                        "parties": [
                          {
                            "party_id": "FJCRSHJECU2DWID6JFACYITFMBJQ60803",
                            "party_types": [
                              {
                                "party_type": "Defendant",
                                "active": true,
                                "representation_type": "Unrepresented",
                                "attorney_association": []
                              }
                            ],
                            "entities": [],
                            "norm_party_id": "null",
                            "fullname": "Liaison Counsel for Defendants",
                            "prefix": "null",
                            "firstname": "Liaison Counsel for Defendants",
                            "middlename": "null",
                            "lastname": "null",
                            "suffix": "null",
                            "entity_type": "Other"
                          },
                          {
                            "party_id": "FNDBUHRFCY2TYIL7JJAS2I3GMFKBC0804",
                            "party_types": [
                              {
                                "party_type": "Plaintiff",
                                "active": true,
                                "representation_type": "Attorney Represented",
                                "attorney_association": [
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FVEBYIBHDAKRWKEIH5AEWEZVJBKBI0662",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GFGCAJBLDQMR6LEMINCE6FZZJRMRE0657",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GJGSCJJMDUNCALMNIRCVAGB2JVNBI0658",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FZER2IJIDELBYKMJIBAUYFBWJFLRI0663",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Lead Attorney",
                                    "attorney_id": "FRDRWHZGC4KBUJ4HHY7UUERUI5KRA0661",
                                    "active": true
                                  }
                                ]
                              }
                            ],
                            "entities": [],
                            "norm_party_id": "null",
                            "fullname": "Plaintiffs' Lead Counsel",
                            "prefix": "null",
                            "firstname": "Plaintiffs' Lead Counsel",
                            "middlename": "null",
                            "lastname": "null",
                            "suffix": "null",
                            "entity_type": "Other"
                          },
                          {
                            "party_id": "FRDRWHZGC43D2IUAJNBC4JDHMJKRG0805",
                            "party_types": [
                              {
                                "party_type": "Plaintiff",
                                "active": true,
                                "representation_type": "Attorney Represented",
                                "attorney_association": [
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FNDBUHRFCYJRSJUGHU7ESEJTIZJBA0660",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FVEBYIBHDAKRWKEIH5AEWEZVJBKBI0662",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GFGCAJBLDQMR6LEMINCE6FZZJRMRE0657",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GJGSCJJMDUNCALMNIRCVAGB2JVNBI0658",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GJGSCJJMDUNCALMNIRCVAGB2JVMRK0658",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FRDRWHZGC4KBUJ4HHY7UUERUI5KBC0661",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FRDRWHZGC4KBUJ4HHY7UUERUI5KRA0661",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GBFR6IZKDMMB4K4LIJBU4FRYJNLRU0665",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FZER2IJIDELBYKMJIBAUYFBWJFLRI0663",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FZER2IJIDELBYKMJIBAUYFBWJFLBK0663",
                                    "active": true
                                  }
                                ]
                              }
                            ],
                            "entities": [],
                            "norm_party_id": "null",
                            "fullname": "Plaintiffs' Class Counsel",
                            "prefix": "null",
                            "firstname": "Plaintiffs' Class Counsel",
                            "middlename": "null",
                            "lastname": "null",
                            "suffix": "null",
                            "entity_type": "Other"
                          },
                          {
                            "party_id": "FVEBYIBHDA3T4I4BJRBS6JLIMNLBK0806",
                            "party_types": [
                              {
                                "party_type": "Plaintiff",
                                "active": true,
                                "representation_type": "Attorney Represented",
                                "attorney_association": [
                                  {
                                    "attorney_type": "Lead Attorney",
                                    "attorney_id": "GJGSCJJMDUNCALMNIRCVAGB2JVMRK0658",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Lead Attorney",
                                    "attorney_id": "GBFR6IZKDMMB4K4LIJBU4FRYJNLRU0665",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Lead Attorney",
                                    "attorney_id": "FRDRWHZGC4KBUJ4HHY7UUERUI5KBC0661",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Lead Attorney",
                                    "attorney_id": "FZER2IJIDELBYKMJIBAUYFBWJFLBK0663",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Lead Attorney",
                                    "attorney_id": "FNDBUHRFCYJRSJUGHU7ESEJTIZJBA0660",
                                    "active": true
                                  }
                                ]
                              }
                            ],
                            "entities": [],
                            "norm_party_id": "null",
                            "fullname": "Liaison Counsel for Plaintiffs",
                            "prefix": "null",
                            "firstname": "Liaison Counsel for Plaintiffs",
                            "middlename": "null",
                            "lastname": "null",
                            "suffix": "null",
                            "entity_type": "Other"
                          },
                          {
                            "party_id": "FZER2IJIDE4D6JECJVCDAJTJMRLRO0807",
                            "party_types": [
                              {
                                "party_type": "Plaintiff",
                                "active": true,
                                "representation_type": "Attorney Represented",
                                "attorney_association": [
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GBFR6IZKDMMB4K4LIJBU4FRYJNMRQ0665",
                                    "active": true
                                  }
                                ]
                              }
                            ],
                            "entities": [],
                            "norm_party_id": "null",
                            "fullname": "Federal-State Coordinating Counsel",
                            "prefix": "null",
                            "firstname": "Federal-State Coordinating Counsel",
                            "middlename": "null",
                            "lastname": "null",
                            "suffix": "null",
                            "entity_type": "Other"
                          },
                          {
                            "party_id": "F5FB4IRJDI4UAJMDJZCTCJ3KMVMBS0808",
                            "party_types": [
                              {
                                "party_type": "Plaintiff",
                                "active": true,
                                "representation_type": "Attorney Represented",
                                "attorney_association": [
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "F5FB4IRJDILR2KUKIFBE2FJXJJKRS0664",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GBFR6IZKDMMB4K4LIJBU4FRYJNLRC0656",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GFGCAJBLDQMR6LEMINCE6FZZJRMBG0657",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GNHCEJRNDYNSCLUOIVDFCGJ3JZNBO0659",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FRDRWHZGC4KBUJ4HHY7UUERUI5JRE0661",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FZER2IJIDELBYKMJIBAUYFBWJFKRM0663",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "F5FB4IRJDILR2KUKIFBE2FJXJJLBQ0664",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Lead Attorney",
                                    "attorney_id": "GNHCEJRNDYNSCLUOIVDFCGJ3JZNRM0659",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FNDBUHRFCYJRSJUGHU7ESEJTIZJQ60660",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FVEBYIBHDAKRWKEIH5AEWEZVJBKRG0662",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GBFR6IZKDMMB4K4LIJBU4FRYJNMBS0665",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GJGSCJJMDUNCALMNIRCVAGB2JVNRG0658",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "GNHCEJRNDYNSCLUOIVDFCGJ3JZOBK0659",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Attorney",
                                    "attorney_id": "FNDBUHRFCYJRSJUGHU7ESEJTIZKA40660",
                                    "active": true
                                  },
                                  {
                                    "attorney_type": "Lead Attorney",
                                    "attorney_id": "F5FB4IRJDILR2KUKIFBE2FJXJJMBM0664",
                                    "active": true
                                  }
                                ]
                              }
                            ],
                            "entities": [],
                            "norm_party_id": "null",
                            "fullname": "Plaintiffs' Steering Committee",
                            "prefix": "null",
                            "firstname": "Plaintiffs' Steering Committee",
                            "middlename": "null",
                            "lastname": "null",
                            "suffix": "null",
                            "entity_type": "Other"
                          }
                        ],
                        "more_parties": false
                      }
                    }
                  },
                  "Parties - Page number exceed total page number - Error": {
                    "value": {
                      "error": true,
                      "message": "Exceeded page number",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure\n\n**A 403 response could be due to one of the reasons below:**\n* The token is invalid - use correct one or regenerate new one by calling Case API.\n* The token has expired - if token was generated more than 1 hr ago, regenerate new one by calling Case API.\n* Old case id is used for a moved case. Always use the new case id with secondary token.\n* Monthly limit for the API is reached.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Parties API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful Parties API, returns parties of a case in JSON format (100 parties/request) for a Case ID. [Case API](/developer-hub/api/case_details/case) returns upto 10 Parties for a case. Call this API to get all the Parties for a Case. You can get a Case ID as a response of [Search API](/developer-hub/api/search/query)"
      }
    },
    "/case/{case_id}/attorneys": {
      "get": {
        "tags": [
          "Attorneys API Request"
        ],
        "operationId": "Attorneys",
        "parameters": [
          {
            "name": "case_id",
            "description": "You can get the Case ID as a response of [Search API](/developer-hub/api/search/query).",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "attorneys_token",
            "description": "Required to get the Attorneys for a case, which can be obtained in the [Case API](/developer-hub/api/case_details/case) response. This token is valid only for one hour from the time it is returned in the Case API response.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page_number",
            "description": "Pagination number for the party pages. Starting from 1.",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Possible responses for status code 200",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AttorneysResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Attorneys - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "requested_case_id": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038",
                        "requested_page_number": "1",
                        "attorneys": [
                          {
                            "attorney_id": "EI6RCFI4HI5S6CL3L4VGC7C5LBFAI1020",
                            "entities": [],
                            "fullname": "HAIGHT BROWN & BONESTEEL LLP",
                            "firm": "null",
                            "bar_number": "null",
                            "prefix": "null",
                            "suffix": "null",
                            "firstname": "HAIGHT BROWN & BONESTEEL LLP",
                            "middlename": "null",
                            "lastname": "null",
                            "attorney_types": [
                              {
                                "attorney_type": "Attorney",
                                "active": false
                              }
                            ],
                            "norm_attorney_id": "null",
                            "norm_law_firm_id_list": []
                          },
                          {
                            "attorney_id": "EM7BEFQ5HM6DACT4MAVWE7K6LFFQM1021",
                            "entities": [],
                            "fullname": "HOLMQUIST DAVID ESQ.",
                            "firm": "null",
                            "bar_number": "null",
                            "prefix": "ESQ",
                            "suffix": "null",
                            "firstname": "DAVID",
                            "middlename": "null",
                            "lastname": "HOLMQUIST",
                            "attorney_types": [
                              {
                                "attorney_type": "Attorney",
                                "active": false
                              }
                            ],
                            "norm_attorney_id": "null",
                            "norm_law_firm_id_list": []
                          },
                          {
                            "attorney_id": "EQ7RGFY6HQ6TCC35MEWGG7S7LJGAQ1022",
                            "entities": [],
                            "fullname": "HUNT JAMES A. ASST. GENERAL COUNSEL",
                            "firm": "null",
                            "bar_number": "null",
                            "prefix": "null",
                            "suffix": "null",
                            "firstname": "HUNT JAMES A. ASST. GENERAL COUNSEL",
                            "middlename": "null",
                            "lastname": "null",
                            "attorney_types": [
                              {
                                "attorney_type": "Attorney",
                                "active": false
                              }
                            ],
                            "norm_attorney_id": "null",
                            "norm_law_firm_id_list": []
                          },
                          {
                            "attorney_id": "E5BBMGRBH5ADIDUAMQXWBAK3MVGA21016",
                            "entities": [],
                            "fullname": "EVELYN L. DEATON ATTORNEY AT LAW",
                            "firm": "null",
                            "bar_number": "null",
                            "prefix": "null",
                            "suffix": "null",
                            "firstname": "L",
                            "middlename": "DEATON",
                            "lastname": "EVELYN",
                            "attorney_types": [
                              {
                                "attorney_type": "Attorney",
                                "active": false
                              }
                            ],
                            "norm_attorney_id": "null",
                            "norm_law_firm_id_list": []
                          },
                          {
                            "attorney_id": "FBBROGZCIBATKD4BMUYGDAS4MZGQ61017",
                            "entities": [],
                            "fullname": "GRIFFITH & THORNBURGH LLP",
                            "firm": "null",
                            "bar_number": "null",
                            "prefix": "null",
                            "suffix": "null",
                            "firstname": "GRIFFITH & THORNBURGH LLP",
                            "middlename": "null",
                            "lastname": "null",
                            "attorney_types": [
                              {
                                "attorney_type": "Attorney",
                                "active": false
                              }
                            ],
                            "norm_attorney_id": "null",
                            "norm_law_firm_id_list": []
                          },
                          {
                            "attorney_id": "FFCBQHBDIFBDMEECMYYWFA25M5HBC1018",
                            "entities": [],
                            "fullname": "KING NEVILLE C",
                            "firm": "null",
                            "bar_number": "null",
                            "prefix": "null",
                            "suffix": "null",
                            "firstname": "NEVILLE",
                            "middlename": "C",
                            "lastname": "KING",
                            "attorney_types": [
                              {
                                "attorney_type": "Attorney",
                                "active": true
                              }
                            ],
                            "norm_attorney_id": "null",
                            "norm_law_firm_id_list": []
                          },
                          {
                            "attorney_id": "FJCRSHJEIJBTOEMDM4ZGHBC6NBHRG1019",
                            "entities": [],
                            "fullname": "LAW OFC OF ANANA J. RICE",
                            "firm": "null",
                            "bar_number": "null",
                            "prefix": "null",
                            "suffix": "null",
                            "firstname": "LAW OFC OF ANANA J. RICE",
                            "middlename": "null",
                            "lastname": "null",
                            "attorney_types": [
                              {
                                "attorney_type": "Attorney",
                                "active": false
                              }
                            ],
                            "norm_attorney_id": "null",
                            "norm_law_firm_id_list": []
                          },
                          {
                            "attorney_id": "EI6RCFI4HI5S6CL3L4VFW7CWMBDQY1020",
                            "entities": [],
                            "fullname": "LYSLE RICHARD SCOTT",
                            "firm": "null",
                            "bar_number": "null",
                            "prefix": "null",
                            "suffix": "null",
                            "firstname": "RICHARD",
                            "middlename": "SCOTT",
                            "lastname": "LYSLE",
                            "attorney_types": [
                              {
                                "attorney_type": "Attorney",
                                "active": false
                              }
                            ],
                            "norm_attorney_id": "null",
                            "norm_law_firm_id_list": []
                          },
                          {
                            "attorney_id": "EZARKGJAHY7TGDL7MMXF7A3DMRGBA1033",
                            "entities": [],
                            "fullname": "LAW FIRM OF CHRISTOPHER K. MONELT",
                            "firm": "null",
                            "bar_number": "null",
                            "prefix": "null",
                            "suffix": "null",
                            "firstname": "LAW FIRM OF CHRISTOPHER K. MONELT",
                            "middlename": "null",
                            "lastname": "null",
                            "attorney_types": [
                              {
                                "attorney_type": "Attorney",
                                "active": false
                              }
                            ],
                            "norm_attorney_id": "null",
                            "norm_law_firm_id_list": []
                          }
                        ],
                        "more_attorneys": false
                      }
                    }
                  },
                  "Attorneys - Page number exceed total page number - Error": {
                    "value": {
                      "error": true,
                      "message": "Exceeded page number",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure\n\n**A 403 response could be due to one of the reasons below:**\n* The token is invalid - use correct one or regenerate new one by calling Case API.\n* The token has expired - if token was generated more than 1 hr ago, regenerate new one by calling Case API.\n* Old case id is used for a moved case. Always use the new case id with secondary token.\n* Monthly limit for the API is reached.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Attorneys API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful Attorneys API, returns Attorneys of a case in JSON format (100 attorneys/request) for a Case ID. [Case API](/developer-hub/api/case_details/case) returns upto 10 Attorneys for a case. Call this API to get all the Attorneys for a Case. You can get a Case ID as a response of [Search API](/developer-hub/api/search/query)"
      }
    },
    "/case/{case_id}/relatedCases": {
      "get": {
        "tags": [
          "Related Cases API Request"
        ],
        "operationId": "RelatedCases",
        "parameters": [
          {
            "name": "case_id",
            "description": "You can get the Case ID as a response of [Search API](/developer-hub/api/search/query).",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "related_cases_token",
            "description": "Required to get the Related Cases for a case, which can be obtained in the [Case API](/developer-hub/api/case_details/case) response. This token is valid only for one hour from the time it is returned in the Case API response.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page_number",
            "description": "Pagination number for the party pages. Starting from 1.",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Possible responses for status code 200",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RelatedCasesResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Related Cases - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "requested_case_id": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038",
                        "requested_page_number": "1",
                        "related_cases": [
                          {
                            "case_id": "G5JCMKRREJAUQLMLKZGTSL3KORQBQ0798",
                            "case_number": "DC/1:19-CA-01008",
                            "case_name": "NP Sunset LLC d/b/a Sunset Station Hotel Casino v. NLRB",
                            "is_active": true,
                            "relationship_type": "MEMBER CASE",
                            "additional_info": {
                              "link": "/cgi-bin/iquery.pl?510317968007204-L_9999_1-0-1099257",
                              "pacer_case_id": 1099257,
                              "source_relationship_type": "MEMBER CASE"
                            }
                          },
                          {
                            "case_id": "HBJSOKZSENBESLUMK5HDUMDLOVQRU0799",
                            "case_number": "09/1:19-CA-70092",
                            "case_name": "International Union of Operating Engineers Local No. 501, AFL-CIO",
                            "is_active": true,
                            "relationship_type": "MEMBER CASE",
                            "additional_info": {
                              "link": "/cgi-bin/iquery.pl?510317968007204-L_9999_1-0-1099258",
                              "pacer_case_id": 1099258,
                              "source_relationship_type": "MEMBER CASE"
                            }
                          }
                        ],
                        "more_related_cases": false
                      }
                    }
                  },
                  "Related Cases - Page number exceed total page number - Error": {
                    "value": {
                      "error": true,
                      "message": "Exceeded page number",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure\n\n**A 403 response could be due to one of the reasons below:**\n* The token is invalid - use correct one or regenerate new one by calling Case API.\n* The token has expired - if token was generated more than 1 hr ago, regenerate new one by calling Case API.\n* Old case id is used for a moved case. Always use the new case id with secondary token.\n* Monthly limit for the API is reached.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Related Cases API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful Related Cases API, returns Related Cases of a case in JSON format (100 related cases/request) for a Case ID. Call this API to get all the Related Cases for a Case. You can get a Case ID as a response of [Search API](/developer-hub/api/search/query)"
      }
    },
    "/case/{case_id}/docketEntries": {
      "get": {
        "tags": [
          "Docket Entries API Request"
        ],
        "operationId": "DocketEntries",
        "parameters": [
          {
            "name": "case_id",
            "description": "You can get the Case ID as a response of [Search API](/developer-hub/api/search/query).",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "docket_entries_token",
            "description": "Required to get the docket entries for a case, which can be obtained in the [Case API](/developer-hub/api/case_details/case) response. This token is valid only for one hour from the time it is returned in the Case API response.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "last_key",
            "description": "The key for next set of docket entries to be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "sort",
            "description": "Specifies the sort order of docket entries to be returned. Default is Ascending which means that the oldest docket entries will be returned first.",
            "in": "query",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocketEntriesResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "docket_entries": [
                          {
                            "order": 0,
                            "boundary": "last",
                            "text": "Petition",
                            "date": "2015-09-30",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 1,
                            "text": "Notice of Trial Setting Conference; Filed by Clerk",
                            "date": "2015-10-05",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 2,
                            "text": "CCP 170.6 Application Filed (AS TO JUDGE JAMES C. CHALFANT ); Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2015-10-09",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 3,
                            "text": "Notice-Related Cases; Filed by Attorney for Pltf/Petnr",
                            "date": "2015-10-14",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 4,
                            "text": "Notice (of filing of ntc of related case ); Filed by Attorney for Deft/Respnt",
                            "date": "2015-10-15",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 5,
                            "text": "Notice (of filing of ntc of related case ); Filed by Atty for Deft and Cross-Complnt",
                            "date": "2015-10-15",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 6,
                            "text": "Notice of Trial Setting Conference; Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2015-10-15",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 7,
                            "text": "at 08:50 am in Department 85, James C. Chalfant, Presiding; Affidavit of Prejudice - Completed",
                            "date": "2015-10-15",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 8,
                            "text": "Notice-Related Cases (WITH NC053643- CCW 322 WITH NC053766 - CCW 322 WITH BC433429 - CCW 322 ); Filed by Attorney for Respondent",
                            "date": "2015-10-16",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 9,
                            "text": "Notice (of entry of minute order ); Filed by Attorney for Petitioner",
                            "date": "2015-10-20",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 10,
                            "text": "Response (TO SHELL OIL COMPANY'S NOTICE OF RELATED CASE ); Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2015-10-21",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 11,
                            "text": "at 09:00 am in Department 322, William F. Highberger, Presiding; Court Order - Completed",
                            "date": "2015-11-12",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 12,
                            "text": "Proof of Service; Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2015-11-19",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 13,
                            "text": "Notice (OF ENTRY OF MINUTE ORDER RE NOTICE OF RELATED CASES ); Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2015-11-19",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 14,
                            "text": "Statement-Case Management (JOINT ); Filed by Attorney for Petitioner",
                            "date": "2016-01-19",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 15,
                            "text": "at 09:30 am in Department 86, Joanne O'Donnell, Presiding; Trial Setting Conference - Matter is heard, matter continued",
                            "date": "2016-01-20",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 16,
                            "text": "Miscellaneous-Other (CONSENT TO E SERVICE AND NOTICE OF E SERVICE ADDRESS ); Filed by Attorney for Deft/Respnt",
                            "date": "2016-01-26",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 17,
                            "text": "Amended Petition (FIRST ); Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2016-03-04",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 18,
                            "text": "Miscellaneous-Other (CONSENT TO ELECTRONIC SERVICE ); Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2016-03-04",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 19,
                            "text": "at 09:30 am in Department 86, Joanne O'Donnell, Presiding; Trial Setting Conference - Completed",
                            "date": "2016-03-23",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 20,
                            "text": "Exhibit (TO THE DECLARATION OF PATRICK W. DENNIS IN SUPPORT OF BARCLAY'S MOTION TO AUGMENT THE ADMINISTRATIVE RECORD AND REQUEST FOR JUDICIAL NOTICE VOLUME 3 OF 5); Filed by Attorney for Petitioner",
                            "date": "2016-06-13",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 21,
                            "text": "Notice of Motion (AND MOTION TO AUGMENT THE ADMINISTRATIVE RECORD ); Filed by Attorney for Petitioner",
                            "date": "2016-06-13",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 22,
                            "text": "Exhibit (TO THE DECLARATION OF PATRICK W. DENNIS IN SUPPORT OF BARCLAY'S MOTION TO AUGMENT THE ADMINISTRATIVE RECORD AND REQUEST FOR JUDICIAL NOTICE VOLUME 2 OF 5); Filed by Attorney for Petitioner",
                            "date": "2016-06-13",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 23,
                            "text": "Request for Judicial Notice; Filed by Attorney for Petitioner",
                            "date": "2016-06-13",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 24,
                            "text": "Exhibit (TO THE DECLARATION OF PATRICK W. DENNIS IN SUPPORT OF BARCLAY'S MOTION TO AUGMENT THE ADMINISTRATIVE RECORD AND REQUEST FOR JUDICIAL NOTICE VOLUME 5 OF 5); Filed by Attorney for Petitioner",
                            "date": "2016-06-13",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 25,
                            "text": "Proof of Service; Filed by Attorney for Petitioner",
                            "date": "2016-06-13",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 26,
                            "text": "Exhibit (TO THE DECLARATION OF PATRICK W. DENNIS IN SUPPORT OF BARCLAY'S MOTION TO AUGMENT THE ADMINISTRATIVE RECORD AND REQUEST FOR JUDICIAL NOTICE VOLUME 1 OF 5); Filed by Attorney for Petitioner",
                            "date": "2016-06-13",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 27,
                            "text": "Declaration (OF PATRICK W. DENNIS IN SUPPORT OF BARCLAY'S MOTION TO AUGMENT THE ADMINISTRATIVE RECORD AND REQUEST FOR JUDICIAL NOTICE ); Filed by Attorney for Petitioner",
                            "date": "2016-06-13",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 28,
                            "text": "Exhibit (TO THE DECLARATION OF PATRICK W. DENNIS IN SUPPORT OF BARCLAY'S MOTION TO AUGMENT THE ADMINISTRATIVE RECORD AND REQUEST FOR JUDICIAL NOTICE VOLUME 4 OF 5); Filed by Attorney for Petitioner",
                            "date": "2016-06-13",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 29,
                            "text": "Opposition Document (to motion to augment the record ); Filed by Attorney for Deft/Respnt",
                            "date": "2016-06-22",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 30,
                            "text": "Declaration (of Miller in support of opp to motion to augment the record ); Filed by Attorney for Real Pty in Interest",
                            "date": "2016-06-22",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 31,
                            "text": "Declaration (of Boyd in support of opp to motion to augment the record ); Filed by Attorney for Deft/Respnt",
                            "date": "2016-06-22",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 32,
                            "text": "Opposition Document (to motion to augment the record ); Filed by Attorney for Real Pty in Interest",
                            "date": "2016-06-22",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 33,
                            "text": "Objection Document (to dec of Dennis ); Filed by Attorney for Deft/Respnt",
                            "date": "2016-06-22",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 34,
                            "text": "Proof of Service (of opposition documents ); Filed by Attorney for Real Pty in Interest",
                            "date": "2016-06-22",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 35,
                            "text": "Opposition Document (to request for judicial notice ); Filed by Attorney for Deft/Respnt",
                            "date": "2016-06-22",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 36,
                            "text": "Joinder in Opposition; Filed by Attorney for Real Pty in Interest",
                            "date": "2016-06-23",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 37,
                            "text": "Reply to Opposition; Filed by Attorney for Petitioner",
                            "date": "2016-06-28",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 38,
                            "text": "Response (response to obj. to the dec ); Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2016-06-28",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 39,
                            "text": "Reply to Opposition (regional borad's opp ); Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2016-06-28",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 40,
                            "text": "Supplemental Declaration; Filed by Attorney for Petitioner",
                            "date": "2016-06-28",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 41,
                            "text": "Reply to Opposition (shells opp ); Filed by Attorney for Petitioner",
                            "date": "2016-06-28",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 42,
                            "text": "Objection Document (AND MOTION TO STRIKE SECOND REPLY BRIEF ); Filed by Attorney for Real Pty in Interest",
                            "date": "2016-07-05",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 43,
                            "text": "at 09:31 am in Department 86, Joanne O'Donnell, Presiding; Motion (TO AUGMENT THE ADMINISTRATIVERECORD) - Case Taken Under Submission",
                            "date": "2016-07-06",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 44,
                            "text": "Order (RULING ON MOTION TO AUGMENT ); Filed by Court",
                            "date": "2016-07-18",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 45,
                            "text": "at 08:30 am in Department 86, Robert H. O'Brien, Presiding; Ruling on Submitted Matter - Court makes order",
                            "date": "2016-07-18",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 46,
                            "text": "Notice (OF ENTRY OF MINUTE ORDER ); Filed by Attorney for Plaintiff/Petitioner",
                            "date": "2016-07-21",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 47,
                            "text": "Notice of Reassignment and Order; Filed by Clerk",
                            "date": "2016-07-29",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 48,
                            "text": "Notice of Case Assignment; Filed by Attorney for Petitioner",
                            "date": "2016-08-05",
                            "updated": "2018-04-28 10:17:20"
                          },
                          {
                            "order": 49,
                            "text": "Joinder (LIMITED JOINDER BY RESPONDENT CALIFORNIA REGIONAL WATER QUALITY CONTROL BOARD, LOS ANGELES REGION TO PETITONER BARCLAY HOLLANDER'S EX PARTE APPLICATION ); Filed by Attorney for Respondent",
                            "date": "2016-08-22",
                            "updated": "2018-04-28 10:17:20"
                          }
                        ],
                        "last_key": "Q0FfTEEyXzQ3OTIzOV8yMDE4LTA0LTI4IDEwOjE3OjIwLjA5MDk3NDtDQV9MQTJfNDc5MjM5OzQ5"
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content - Docket entries are not available for this case"
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure\n\n**A 403 response could be due to one of the reasons below:**\n* The token is invalid - use correct one or regenerate new one by calling Case API.\n* The token has expired - if token was generated more than 1 hr ago, regenerate new one by calling Case API.\n* Old case id is used for a moved case. Always use the new case id with secondary token.\n* Monthly limit for the API is reached.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Docket Entries API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful Docket Entries API, returns docket entries in JSON format(50 docket entries/request) for a Case ID. You can get a Case ID as a response of [Search API](/developer-hub/api/search/query)"
      }
    },
    "/case/{case_id}/documents": {
      "get": {
        "tags": [
          "Fetch information for all documents of a case"
        ],
        "operationId": "Documents",
        "parameters": [
          {
            "name": "case_id",
            "description": "You can get the Case ID as a response of [Search API](/developer-hub/api/search/query).",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "documents_token",
            "description": "Required to get the documents for a case, which can be obtained in the [Case API](/developer-hub/api/case_details/case) response. This token is valid only for one hour from the time it is returned in the Case API response.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "last_key",
            "description": "The key for next set of documents to be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Possible responses for status code 200",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AllDocumentsResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Document - All documents - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "documents": {
                          "PACER_TEST_A_17311071070": {
                            "cost": "5.00",
                            "document_name": "9 #4",
                            "description": "Exhibit A",
                            "pages": "2"
                          },
                          "PACER_TEST_D_17311078033": {
                            "document_name": "11",
                            "downloaded_date": "2018-02-16 11:43:56.471472",
                            "pages": "1"
                          },
                          "PACER_TEST_D_1731441378": {
                            "document_name": "8",
                            "downloaded_date": "2018-02-16 11:51:27.712179",
                            "pages": "6"
                          },
                          "PACER_TEST_A_17311070704": {
                            "cost": "5.00",
                            "document_name": "9 #2",
                            "description": "Memorandum in Support",
                            "pages": "14"
                          },
                          "PACER_TEST_D_17311035149": {
                            "document_name": "1",
                            "downloaded_date": "2018-02-16 11:23:37.174146",
                            "pages": "7"
                          },
                          "PACER_TEST_A_17311021364": {
                            "cost": "5.00",
                            "document_name": "3 #6",
                            "description": "Appendix",
                            "pages": "19"
                          },
                          "PACER_TEST_A_17311070659": {
                            "cost": "5.00",
                            "document_name": "9 #5",
                            "description": "Certificate of Service",
                            "pages": "2"
                          },
                          "PACER_TEST_A_1731441327": {
                            "cost": "5.00",
                            "document_name": "8 #3",
                            "description": "Certificate of Service",
                            "pages": "1"
                          },
                          "PACER_TEST_D_1731416120": {
                            "document_name": "4",
                            "downloaded_date": "2018-02-16 11:38:50.680572",
                            "pages": "1"
                          },
                          "PACER_TEST_A_17311021561": {
                            "document_name": "3 #2",
                            "description": "Affidavit",
                            "downloaded_date": "2018-02-16 11:39:18.226095",
                            "pages": "15"
                          },
                          "PACER_TEST_A_17311057789": {
                            "document_name": "7 #2",
                            "description": "Certificate of Service",
                            "downloaded_date": "2018-02-16 11:49:05.761677",
                            "pages": "1"
                          },
                          "PACER_TEST_A_1731416797": {
                            "document_name": "4 #2",
                            "description": "Affidavit",
                            "downloaded_date": "2018-02-16 11:48:22.985313",
                            "pages": "6"
                          },
                          "PACER_TEST_A_17311071080": {
                            "cost": "5.00",
                            "document_name": "9 #3",
                            "description": "Affirmation of Kenneth R. Hiller",
                            "pages": "2"
                          },
                          "PACER_TEST_A_17311021421": {
                            "cost": "5.00",
                            "document_name": "3 #5",
                            "description": "Memorandum in Support",
                            "pages": "24"
                          },
                          "PACER_TEST_D_17311071168": {
                            "cost": "5.00",
                            "document_name": "9",
                            "pages": "1"
                          },
                          "PACER_TEST_A_1731416764": {
                            "cost": "5.00",
                            "document_name": "4 #3",
                            "description": "Certificate of Service",
                            "pages": "1"
                          },
                          "PACER_TEST_D_17311057903": {
                            "cost": "5.00",
                            "document_name": "7",
                            "pages": "1"
                          },
                          "PACER_TEST_D_17311021280": {
                            "cost": "5.00",
                            "document_name": "3",
                            "pages": "1"
                          },
                          "PACER_TEST_D_17311055698": {
                            "document_name": "2",
                            "downloaded_date": "2018-02-16 22:54:34.922369",
                            "pages": "1"
                          },
                          "PACER_TEST_A_17311021474": {
                            "document_name": "3 #4",
                            "description": "Exhibit B",
                            "downloaded_date": "2018-02-16 11:41:01.399007",
                            "pages": "5"
                          },
                          "PACER_TEST_D_1731441096": {
                            "cost": "5.00",
                            "document_name": "10",
                            "pages": "1"
                          },
                          "PACER_TEST_A_17311021513": {
                            "document_name": "3 #3",
                            "description": "Exhibit A",
                            "downloaded_date": "2018-02-16 11:45:21.067750",
                            "pages": "11"
                          },
                          "PACER_TEST_A_1731440523": {
                            "document_name": "8 #2",
                            "description": "Affirmation of Elizabeth Starkey",
                            "downloaded_date": "2018-02-16 12:58:30.601766",
                            "pages": "1"
                          },
                          "PACER_TEST_A_1731441144": {
                            "cost": "5.00",
                            "document_name": "10 #2",
                            "description": "Certificate of Service",
                            "pages": "1"
                          },
                          "PACER_TEST_A_17311021302": {
                            "document_name": "3 #7",
                            "description": "Certificate of Service",
                            "downloaded_date": "2018-02-16 11:48:07.228977",
                            "pages": "1"
                          }
                        },
                        "last_key": "null"
                      }
                    }
                  },
                  "Document - Accessing PACER document without PACER credentials - Error": {
                    "value": {
                      "error": true,
                      "message": "Please configure the PACER credentials in your account",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content - Documents are not available for this case"
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure\n\n**A 403 response could be due to one of the reasons below:**\n* The token is invalid - use correct one or regenerate new one by calling Case API.\n* The token has expired - if token was generated more than 1 hr ago, regenerate new one by calling Case API.\n* Old case id is used for a moved case. Always use the new case id with secondary token.\n* Monthly limit for the API is reached.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Documents API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful Documents API, returns a document information in JSON format(50 documents/request) for a Case ID. You can get a Case ID as a response of [Search API](/developer-hub/api/search/query)"
      }
    },
    "/case/{case_id}/documents/{document_id}": {
      "get": {
        "tags": [
          "Fetch information for a particular document of a case"
        ],
        "operationId": "Document",
        "parameters": [
          {
            "name": "case_id",
            "description": "You can get the Case ID as a response of [Search API](/developer-hub/api/search/query).",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_id",
            "description": "Specify Document ID to return document information, Document ID can be obtained as a response of [Docket Entries API](/developer-hub/api/case_details/docket_entries) or [Document API](/developer-hub/api/case_details/documents)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "documents_token",
            "description": "Required to get the documents for a case, which can be obtained in the [Case API](/developer-hub/api/case_details/case) response. This token is valid only for one hour from the time it is returned in the Case API response.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Possible responses for status code 200",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SingleDocumentResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Document - Single document - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "documents": {
                          "PACER_TEST_D_17311078033": {
                            "document_name": "11",
                            "downloaded_date": "2018-02-16 11:43:56.471472",
                            "pages": "1"
                          }
                        }
                      }
                    }
                  },
                  "Document - Accessing PACER document without PACER credentials - Error": {
                    "$ref": "#/paths/~1case~1%7Bcase_id%7D~1documents/get/responses/200/content/application~1json/examples/Document%20-%20Accessing%20PACER%20document%20without%20PACER%20credentials%20-%20Error"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content - Requested Document is not available"
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "$ref": "#/paths/~1case~1%7Bcase_id%7D~1documents/get/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        }
      }
    },
    "/case/{case_id}/documents/{document_id}/downloadURL": {
      "get": {
        "tags": [
          "The URL to download a document"
        ],
        "operationId": "DocumentDownload",
        "parameters": [
          {
            "name": "case_id",
            "description": "You can get the Case ID as a response of [Webhooks for Scheduled Search](/developer-hub/webhooks/scheduled-search-run) and [Search API](/developer-hub/api/search/query).",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "document_id",
            "description": "Specify Document ID to return document download URL, Document ID can be obtained as a response of [Docket Entries API](/developer-hub/api/case_details/docket_entries) or [Documents API](/developer-hub/api/case_details/documents)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Possible responses for status code 200",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DownloadDocumentsResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Download Document - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "PACER_TEST_D_17311078033": "https://casedocs.s3.amazonaws.com/staging/pc/db1/test/PACER_TEST_D_17311078033_1518781436.pdf?response-content-disposition=attachment%3B%20filename%3D%22PACER_TEST_D_17311078033.pdf%22&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Security-Token=FQoDYXdzEKb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDMsN6XnLCbpdl%2BICNyL0AncyJ5ZBCBA01SvhOcuHArz5Gwmask6ZNZGgPAISf2X5hFLDWxb0TIQ%2BkRQBbX5Oy7coPP7wWKpClPhhNi50J1IIuaUIVpgieQuHOYJSyvEXCDcN3V7cXBC%2FScQUQMLHOX%2BNlAEXtIATLryb%2BSalEOeU6LlKHyoUPm7kDMQ8qBTTtXhp6mlfhQFhgGXGitdHegl%2Bf680gF9%2FtnLLwbVA7HP6kdA8YP1e1flgC81%2FICYZJXBAs3dWLyG9W%2BH0sAVzioq5l6WcLN0H%2BOmZQbZAGfgF8%2Bo8MwextdZERRV2h4UqqSJT4Frmn%2BtMY2JuTGTxnaXsWxfNzMQn0Enm%2BWRKSZ3EGdfu86pfOStYrUVroTpgrlanVRXbng5DLxkbueA%2BX8CHpTRS5T0%2B1JB6pnxsZH4%2F1ApQHO2hIDwbcp3b4FXoIfEbUFAAG%2FGCQFClbwzY7cAho77UP4voP16AxzuWkkPs4AaLXvWGRcafGd9gWhub0TS4CSiNn8HXBQ%3D%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAJ64AQLP72S753WLQ%2F20180507%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20180507T131002Z&X-Amz-SignedHeaders=host&X-Amz-Expires=600&X-Amz-Signature=cb69ce402e9df0d5d0bca446e4b5dd64a64e5999305e534571ba7f4f0614e353"
                      }
                    }
                  },
                  "Download Document - Accessing PACER document without PACER credentials - Error": {
                    "value": {
                      "error": true,
                      "message": "Please configure the PACER credentials in your account",
                      "data": "null"
                    }
                  },
                  "Download Document - Accessing the document which is not available for download - Error": {
                    "value": {
                      "error": true,
                      "message": "This document is not available for download. Please order this document first",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Documents Download API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "```$Billable```\n\nThe RESTful Download Document API, returns a URL to download a document for specified Document ID, which can be obtained in the [Docket Entries API](/developer-hub/api/case_details/docket_entries) response or [Documents API](/developer-hub/api/case_details/documents) response\n"
      }
    },
    "/orderDocuments/preview": {
      "post": {
        "tags": [
          "Order Document Preview API Request"
        ],
        "operationId": "OrderDocumentPreview",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "case_id": {
                    "type": "string"
                  },
                  "document_ids": {
                    "type": "string"
                  }
                },
                "required": [
                  "case_id",
                  "document_ids"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Possible responses for status code 200",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrderDocumentsPreviewResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "Order Documents Preview - All the documents are available to download - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "order_preview": {
                          "order_items": {
                            "CA_LA_1638602390": {
                              "name": "COMPLAINT-PERS. INJURY, PROP DAMAGE, WRONGFUL DEATH (2 PAGES)",
                              "description": "12/31/2015: COMPLAINT-PERS. INJURY, PROP DAMAGE, WRONGFUL DEATH (2 PAGES)",
                              "cost": "8.80"
                            },
                            "CA_LA_1653860667": {
                              "name": "PROOF OF SERVICE OF SUMMONS",
                              "description": "5/27/2016: PROOF OF SERVICE OF SUMMONS",
                              "cost": "3.80"
                            }
                          },
                          "invoice_amount": "12.60",
                          "order_id": "8a845b5fbd1529737379-4179"
                        },
                        "documents_unavailable_to_order": []
                      }
                    }
                  },
                  "Order Documents Preview - Some of the documents are available to download - Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "order_preview": {
                          "order_items": {
                            "CA_LA_1638602390": {
                              "name": "COMPLAINT-PERS. INJURY, PROP DAMAGE, WRONGFUL DEATH (2 PAGES)",
                              "description": "12/31/2015: COMPLAINT-PERS. INJURY, PROP DAMAGE, WRONGFUL DEATH (2 PAGES)",
                              "cost": "8.80"
                            }
                          },
                          "invoice_amount": "8.80",
                          "order_id": "9af58cdf321529737588-409"
                        },
                        "documents_unavailable_to_order": {
                          "CA_LA_1669928550": {
                            "name": "REQUEST FOR DISMISSAL",
                            "error_message": "Unable to determine the exact cost of the document"
                          }
                        }
                      }
                    }
                  },
                  "Order Documents Preview - RECAP document to download - Error": {
                    "value": {
                      "error": true,
                      "message": "You can not download RECAP document.",
                      "data": "null"
                    }
                  },
                  "Order Documents Preview - PACER case document without setting the PACER credential - Error": {
                    "value": {
                      "error": true,
                      "message": "Please configure the PACER credentials in your account.",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Order Documents Preview - document ids are not passed": {
                    "value": {
                      "error": true,
                      "message": "Please select documents to download.",
                      "data": "null"
                    }
                  },
                  "Order Documents Preview - case id is not passed": {
                    "value": {
                      "error": true,
                      "message": "Case id should be passed",
                      "data": "null"
                    }
                  },
                  "Order Documents Preview - user selects more than 20 documents to Order": {
                    "value": {
                      "error": true,
                      "message": "You can choose a maximum of 20 documents to order at once.",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Document Order Preview API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Order Document Preview API is required to be called before confirming an Order. This API is meant to return a unique order id for documents selected in the preview. Order Preview accepts documents of a single case. If you want to preview documents from different cases, then you need to make one request per case.\n\n* **Note:** A single Order Preview is limited to 20 documents per API call. This API accepts **document\\_ids (comma separated)** and **case\\_id** within POST method.\n\n* * *\n\n##  API URL:\n\n```\nhttps://api.unicourt.com/rest/v1/orderDocuments/preview?token=a0f9770a842da247694673196ae2c9549f172526\n```\n\n* * *\n\n##  Request:\n\n| Method  | CURL Command  |\n| ------- | --------      |\n| POST    | curl -i -k -X POST [https://api.unicourt.com/rest/v1/orderDocuments/preview?token=a0f9770a842da247694673196ae2c9549f172526](https://api.unicourt.com/rest/v1/orderDocuments/preview?token=a0f9770a842da247694673196ae2c9549f172526) --data \"case\\_id=EE6BAFA3EY6C4ED5MEUV24S2LFBAM1001&document\\_ids=PACER\\_TEST\\_A\\_1731488191\"  |\n\n* * *\n\n##  Request Query Parameters:\n\n| Parameter | Parameter Type  | Required  | Description |\n| -------   | --------        | -------   | --------    |\n| token     | String          | Yes       | Token which is generated in UniCourt Account, for authorizing the request |\n\n* * *\n\n##  Request Post Parameters:\n\n| Field Name  | Data Type | Required  | Description |\n| -------     | --------  | -------   | --------    |\n| case\\_id  | string  | Yes | Specify **case\\_id**. |\n| document\\_ids | string  | Yes | Comma separated document ids  |\n\n* * *\n\n##  Sample Response\n\n```\n{\n  \"order_preview\":{\n    \"order_items\":{\n      \"PACER_TEST_A_1731488191\":{\n        \"name\":\"COMPLAINT-PERS. INJURY, PROP DAMAGE\",\n        \"description\":\"12\\/31\\/2015: COMPLAINT-PERS. INJURY\",\n        \"cost\":\"8.80\"\n      }\n    },\n    \"order_id\":\"8a845b5fbd1529737379-4179\",\n    \"invoice_amount\":\"8.80\"\n  },\n  \"documents_unavailable_to_order\":[]\n}\n```\n\n* * *\n\n#  <span id=\"swagger-try-this-api\">Try this API</span>\n\nCall this method on live data to see the API request and response. Need help with the API Explorer? Check the [support page](/contact-us).\n"
      }
    },
    "/orderDocuments/confirm": {
      "post": {
        "tags": [
          "Order Document Confirm API Request"
        ],
        "operationId": "OrderDocumentConfirm",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "order_id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDocumentsConfirmResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "order_id": "9af58cdf321529737588-409",
                        "invoice_number": "null",
                        "invoice_amount": "null",
                        "order_status": "Invoice Pending",
                        "order_status_type": "Processing",
                        "order_date": "2018-06-23 07:06:28",
                        "ordered_document_status": {
                          "CA_LA_1638602390": {
                            "status": "Download In Progress",
                            "message": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Order Documents Confirm - Order is not available for the given Order hash": {
                    "value": {
                      "error": true,
                      "message": "Order is not available.",
                      "data": "null"
                    }
                  },
                  "Order Documents Confirm - Order is already confirmed": {
                    "value": {
                      "error": true,
                      "message": "Order is already confirmed.",
                      "data": "null"
                    }
                  },
                  "Order Documents Confirm - selected document in Order is already requested": {
                    "value": {
                      "error": true,
                      "message": "Some of the documents is already requested. Please place the new Order.",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Document Order Confirm API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "```$Billable```\n\nThe Order Document Confirm API should be called to complete the process of ordering documents selected in the [Order Document Preview API](/developer-hub/api/order_document/order_preview). UniCourt will call a [Document Order Completion Webhook](/developer-hub/webhooks/document_order) on successful completion of document download from the Court for each document ordered.\n\n* * *\n\n##  API URL:\n\n```\nhttps://api.unicourt.com/rest/v1/orderDocuments/confirm?token=a0f9770a842da247694673196ae2c9549f172526\n```\n\n* * *\n\n##  Request:\n\n| Method  | CURL Command  |\n| ------- | --------  |\n| POST    | curl -i -k -X POST [https://api.unicourt.com/rest/v1/orderDocuments/confirm?token=a0f9770a842da247694673196ae2c9549f172526](https://api.unicourt.com/rest/v1/orderDocuments/confirm?token=a0f9770a842da247694673196ae2c9549f172526)--data \"order\\_id=9af58cdf321529737588-409\" |\n\n* * *\n\n##  Request Query Parameters:\n\n| Parameter | Parameter Type  | Required  | Description |\n| -------   | --------        | -------   | --------    |\n| token     | String          | Yes       | Token which is generated in UniCourt Account, for authorizing the request |\n\n* * *\n\n##  Request Post Parameters:\n\n| Field Name  | Data Type | Required  | Description |\n| -------     | --------  | -------   | --------  |\n| order\\_id   | string    | Yes       | Specify **order\\_id** which you got from [Order Preview](/developer-hub/api/order_document/order_preview).  |\n\n* * *\n\n##  Sample Response\n\n```\n{\n  \"order_id\":\"9af58cdf321529737588-409\",\n  \"invoice_number\":null,\n  \"invoice_amount\":null,\n  \"order_status\":\"Invoice Pending\",\n  \"order_status_type\":\"Processing\",\n  \"order_date\":\"2018-06-23 07:06:28\",\n  \"ordered_document_status\":{\n    \"CA_LA_1638602390\":{\n      \"status\":\"Download In Progress\",\n      \"message\":\"\"\n    }\n  }\n}\n```\n\n* * *\n\n##  List of Order Status:\n  \n  * Property name **order\\_status**\n  \n    | Status Name     | Description |\n    | -------         | --------  |\n    | Awaiting Order  | Order is yet to be confirmed. |\n    | Invoice Pending | Order is confirmed by the user and invoice is not yet generated.  |\n    | Invoice Posted  | Invoice is generated and not yet collected. |\n    | Paid            | Invoice is paid.  |\n    | Past Due        | Invoice payment failed and is in past due.  |\n    | Cancelled       | Order is cancelled. |\n  \n* * *\n\n##  List of Order Status Types:\n  \n  * Property name **order\\_status\\_type**\n  \n    | Status Name | Description |\n    | -------     | --------  |\n    | Preview     | Order status type will be in Preview untill the invoice is generated. |\n    | Processing  | Order status type will be in Processing once the invoice is generated.  |\n    | Complete    | Order status type will be in Complete when the invoice amount is collected. |\n  \n* * *\n\n##  List of Document Status:\n  \n  * Property name **status**\n  \n    | Status Name           | Description |\n    | -------               | --------  |\n    | Download Not Started  | Document download from the Court in not yet started. Unless the Order status type is Complete a document will always be in this status. |\n    | Download In Progress  | Document is being downloaded from the Court.  |\n    | Download Completed    | Document is successfully downloaded from the Court. |\n    | Download Failed       | Document download from the court is failed. |\n  \n* * *\n\n#  <span id=\"swagger-try-this-api\">Try this API</span>\n\nCall this method on live data to see the API request and response. Need help with the API Explorer? Check the [support page](/contact-us).\n"
      }
    },
    "/orderDocuments/details/{order_id}": {
      "get": {
        "tags": [
          "Order Document Details API Request"
        ],
        "operationId": "OrderDocumentDetails",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "order_id",
            "description": "Order id which you got from the Order Preview API.",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDocumentsDetailsResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "order_id": "9af58cdf321529737588-409",
                        "invoice_number": "4530",
                        "invoice_amount": "20.00",
                        "order_status": "Invoice Posted",
                        "order_status_type": "Processing",
                        "order_date": "2018-06-23 07:06:28",
                        "ordered_document_status": {
                          "CA_LA_1638602390": {
                            "status": "Download In Progress",
                            "message": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1orderDocuments~1status~1%7Border_id%7D/get/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Document Order Details API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Document Order Details API returns the details for an Order. Order id is returned as a response of [Order Document Preview API](/developer-hub/api/order_document/order_preview).\n\n* * *\n\n##  API URL:\n\n```\nhttps://api.unicourt.com/rest/v1/orderDocuments/details/351e4e6bd01529738270-327?token=a0f9770a842da247694673196ae2c9549f172526\n```\n\n* * *\n\n##  Request:\n\n| Method  | CURL Command  |\n| ------- | --------      |\n| GET     | curl -i -k -X GET [https://api.unicourt.com/rest/v1/orderDocuments/details/351e4e6bd01529738270-327?token=a0f9770a842da247694673196ae2c9549f172526](https://api.unicourt.com/rest/v1/orderDocuments/details/351e4e6bd01529738270-327?token=a0f9770a842da247694673196ae2c9549f172526)\" |\n\n* * *\n\n##  Request Query Parameters:\n\n| Parameter | Parameter Type  | Required  | Description |\n| -------   | --------        | -------   | --------    |\n| token     | String          | Yes       | Token which is generated in UniCourt Account, for authorizing the request |\n\n* * *\n\n##  Sample Response\n\n```\n{\n  \"order_id\": \"9af58cdf321529737588-409\",\n  \"invoice_number\": \"4530\",\n  \"invoice_amount\": \"20.00\",\n  \"order_status\": \"Invoice Posted\",\n  \"order_status_type\": \"Processing\",\n  \"order_date\": \"2018-06-23 07:06:28\",\n  \"ordered_document_status\": {\n    \"CA_LA_1638602390\": {\n      \"status\": \"Download In Progress\",\n      \"message\": \"\"\n    }\n  }\n}\n```\n\n* * *\n\n##  List of Order Status:\n\n* Property name **order\\_status**\n\n  | Status Name     | Description |\n  | -------         | --------  |\n  | Awaiting Order  | Order is yet to be confirmed. |\n  | Invoice Pending | Order is confirmed by the user and invoice is not yet generated.  |\n  | Invoice Posted  | Invoice is generated and not yet collected. |\n  | Paid            | Invoice is paid.  |\n  | Past Due        | Invoice payment failed and is in past due.  |\n  | Cancelled       | Order is cancelled. |\n\n* * *\n\n##  List of Order Status Types:\n\n* Property name **order\\_status\\_type**\n\n  | Status Name | Description |\n  | -------     | --------  |\n  | Preview     | Order status type will be in Preview untill the invoice is generated. |\n  | Processing  | Order status type will be in Processing when the invoice is generated.  |\n  | Complete    | Order status type will be in Complete when the invoice amount is collected. |\n\n* * *\n\n##  List of Document Status:\n\n* Property name **status**\n\n  | Status Name           | Description |\n  | -------               | --------  |\n  | Download Not Started  | Document download from the Court in not yet started. Unless the Order status type is Complete a document will always be in this status. |\n  | Download In Progress  | Document is being downloaded from the Court.  |\n  | Download Completed    | Document is successfully downloaded from the Court. |\n  | Download Failed       | Document download from the court is failed. |\n\n* * *\n\n#  <span id=\"swagger-try-this-api\">Try this API</span>\n\nCall this method on live data to see the API request and response. Need help with the API Explorer? Check the [support page](/contact-us).\n"
      }
    },
    "/orderDocuments/status/{order_id}": {
      "get": {
        "tags": [
          "Order Document Status API Request"
        ],
        "operationId": "OrderDocumentStatus",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "order_id",
            "description": "Order id which you got from the Order Preview API.",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDocumentsStatusResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "order_id": "f04a70a1e31530532390-8266",
                        "order_status": "Paid",
                        "order_status_type": "Complete",
                        "order_date": "2018-06-23 07:06:28"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Bad request": {
                    "value": {
                      "error": true,
                      "message": "Order is not available.",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Document Order Status API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Document Order Status API returns the status for an Order. Order id is returned as a response of [Order Document Preview API](/developer-hub/api/order_document/order_preview).\n\n* * *\n\n##  API URL:\n\n```\nhttps://api.unicourt.com/rest/v1/orderDocuments/status/351e4e6bd01529738270-327?token=a0f9770a842da247694673196ae2c9549f172526\n```\n\n* * *\n\n##  Request:\n\n| Method  | CURL Command  |\n| ------- | --------      |\n| GET     | curl -i -k -X GET [https://api.unicourt.com/rest/v1/orderDocuments/status/351e4e6bd01529738270-327?token=a0f9770a842da247694673196ae2c9549f172526](https://api.unicourt.com/rest/v1/orderDocuments/status/351e4e6bd01529738270-327?token=a0f9770a842da247694673196ae2c9549f172526)\" |\n\n* * *\n\n##  Request Query Parameters:\n\n| Parameter | Parameter Type  | Required  | Description |\n| -------   | --------        | -------   | --------    |\n| token     | String          | Yes       | Token which is generated in UniCourt Account, for authorizing the request |\n\n* * *\n\n##  Sample Response\n\n```\n{\n  \"order_id\":\"351e4e6bd01529738270-327\",\n  \"order_status\":\"Paid\",\n  \"order_status_type\":\"Complete\",\n  \"order_date\":\"2018-06-23 07:17:50\"\n}\n```\n\n* * *\n\n##  List of Order Status:\n\n* Property name **order\\_status**\n\n  | Status Name     | Description |\n  | -------         | --------  |\n  | Awaiting Order  | Order is yet to be confirmed. |\n  | Invoice pending | Order is confirmed by the user and invoice is not yet generated.  |\n  | Invoice Posted  | Invoice is generated and not yet collected. |\n  | Paid            | Invoice is paid.  |\n  | Past Due        | Invoice payment failed and is in past due.  |\n  | Cancelled       | Order is cancelled. |\n\n* * *\n\n##  List of Order Status Types:\n\n* Property name **order\\_status\\_type**\n\n  | Status Name | Description |\n  | -------     | --------  |\n  | Preview     | Order status type will be in Preview untill the invoice is generated. |\n  | Processing  | Order status type will be in Processing when the invoice is generated.  |\n  | Complete    | Order status type will be in Complete when the invoice amount is collected. |\n\n* * *\n\n#  <span id=\"swagger-try-this-api\">Try this API</span>\n\nCall this method on live data to see the API request and response. Need help with the API Explorer? Check the [support page](/contact-us).\n"
      }
    },
    "/updateCase/{case_id}": {
      "post": {
        "tags": [
          "Update Case API Request"
        ],
        "operationId": "UpdateCase",
        "parameters": [
          {
            "name": "case_id",
            "description": "You can get the Case ID as a response of [Search API](/developer-hub/api/search/query).",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCaseRequest"
              },
              "examples": {
                "Update Case Request": {
                  "value": {
                    "fetch_participants": {
                      "fetch_if_older_than": 30
                    },
                    "additional_pages": [
                      {
                        "page": "ASSOCIATED_CASES",
                        "fetch_if_older_than": 30
                      }
                    ]
                  }
                },
                "Update Case Request - Fetch Participants": {
                  "value": {
                    "fetch_participants": {
                      "fetch_if_older_than": 30
                    }
                  }
                },
                "Update Case Request - Additional Pages": {
                  "value": {
                    "additional_pages": [
                      {
                        "page": "ASSOCIATED_CASES",
                        "fetch_if_older_than": 30
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCaseResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "case_id": "FVEBYIBSIM2E2GIZH5LWXCDLMFHBE0914",
                        "request_id": "c12cb181038ebf0165437e793496def4",
                        "message": "Case is requested for update"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Update Case API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "```$Billable```\n\nThe Update Case API should be called for a case to fetch the latest information from the Court. UniCourt will call a [Update Case Webhook](/developer-hub/webhooks/case_update) on successful completion of case update from the Court.\n\n***Note**: If the Update Case Webhook is not received within 3 hours of request consider it as a failure.*\n\n* * *\n\n##  API URL:\n\n```\nhttps://api.unicourt.com/rest/v1/updateCase/{case_id}/?token=YOUR-API-TOKEN\n```\n\n* * *\n\n##  Request:\n\n| Method  | CURL Command  |\n| ------- | --------      |\n| POST    | curl -X POST \"[https://api.unicourt.com/rest/v1/updateCase/GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908/?token=a0f9770a842da247694673196ae2c9549f172526](https://api.unicourt.com/rest/v1/updateCase/GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908/?token=a0f9770a842da247694673196ae2c9549f172526)\"  |\n\n* * *\n\n##  Request Query Parameters:\n\n| Parameter | Parameter Type  | Required  | Description |\n| -------   | --------        | -------   | --------    |\n| token     | String          | Yes       | Token which is generated in UniCourt Account, for authorizing the request |\n\n* * *\n\n##  Request Post:\n\n* ### fetch_participants\n  \n  Currently this option is only applicable for Federal PACER cases. You can limit how often parties and attorneys for a PACER case are fetched to reduce your PACER fees. If you are tracking cases daily or hourly you could easily end up with a large PACER bill.\n\n  **Use Case:** Cases are typically updated to check for new docket entry filings and every update in PACER costs money. Participants for a case change less often than docket entry filings. So fetching participants for every update might result in unnecessary PACER costs. Instead of getting charged $0.10 (min cost) for an update which might have had few docket entries, you could easily end up spending $3 (max cost) for every update because the case had a lot of parties and attorneys. If you are tracking cases daily or hourly you could easily end up with a large PACER bill.\n\n  **Solution:** With **fetch_participants** option you can choose when to fetch parties and attorneys for a case based on when was it last fetched and keep PACER costs under control.\n\n  ***Important Note:*** *Since this is an optional argument in the API, if **fetch_participants** is **NOT** specified in the API request then the value is picked up from the PACER Settings in the App [https://app.unicourt.com/settings/pacerCredential](https://app.unicourt.com/settings/pacerCredential).*\n\n  * **fetch_if_older_than** : You can limit how often the page information is fetched to reduce your PACER fees. Default is 0 days with Min days is 0 and Max days is 100.\n\n    **Example**\n    1.  Specifying a value of 0 ensures that this page is fetched from PACER for this case update, irrespective of when the page was last fetched.\n    2.  Specifying a value of 30 ensures that this page is fetched from PACER for this case update only if the last fetch was older than 30 days.\n\n* ### additional_pages\n\n  Currently this option is only applicable for Federal PACER cases. The default behavior of the Update Case is to fetch the Docket Report from PACER which includes the parties and attorneys too. However if you need to fetch information for other pages in PACER you will need to specify it here.\n\n  * **page** : The page to be requested.\n    \n    | Value                                                                         | Description  |\n    | -------                                                                       | -------      |\n    | ASSOCIATED\\_CASES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | This will fetch the Associated Cases page in PACER if available. This page consists of related cases especially applicable for *Multi-District Litigation Cases* and *Member Cases*. Including this option will internally link all related cases in our system. Data from this page will be available via the **Related Cases API**. |\n    | CASE\\_SUMMARY                                                                 | This will fetch the Case Summary page in PACER if available. This page consists of additional case info which is not present in the Docket Report page. Data from this page will be structured and available as response in the **Case API’s** ***additional_info*** field. |\n\n    * * *\n  \n  * **fetch_if_older_than** : You can limit how often the page information is fetched to reduce your PACER fees. Default is 0 days with Min days is 0 and Max days is 100.\n\n    **Example**\n    1.  Specifying a value of 0 ensures that this page is fetched from PACER for this case update, irrespective of when the page was last fetched.\n    2.  Specifying a value of 30 ensures that this page is fetched from PACER for this case update only if the last fetch was older than 30 days.\n    \n* * *\n\n##  Best practices on how to update a case from the Court immediately to get latest case information?\n\n### Step 1: Get the case ids from the [Search API](/developer-hub/api/search/query).\n\n### Step 2: Specify the _case\\_id_ to update a case from the Court.\n\n* UniCourt will immediately trigger an update to fetch the latest case information from the Court and notify the Client's endpoint whether the case has updates or not.\n\n### Step 3: On receiving this webhook call, a [Case API](/developer-hub/api/case_details/case) call will give you the complete and latest case information.\n\n* On following this practice a Client can avoid making use of multiple Case API calls to figure out if a case has updates or not, and only make Case API calls for cases that have updates as notified by [Update Case Completion Webhook](/developer-hub/webhooks/case_update).\n\n* * *\n\n##  UML to update a case from the Court immediately and requesting latest Case information only if the case has updates.\n\n![Get Case Update](https://cdn.unicourt.com/uc-website_resources/2019.10.18.01/website/images/update_case.png \"Get Case Update\")\n\n* * *\n\n# <span id=\"swagger-try-this-api\">Try this API</span>\n\nCall this method on live data to see the API request and response. Need help with the API Explorer? Check the [support page](/contact-us).\n"
      }
    },
    "/trackCases/add": {
      "post": {
        "tags": [
          "Start Tracking Cases API Request"
        ],
        "operationId": "StartTrackingCases",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "case_ids": {
                    "type": "string",
                    "description": "Specify **case_ids(comma separated)** which you want to add into tracking schedule, you can get the case_ids as a response of [Search API](/developer-hub/api/search/query)"
                  },
                  "folder_id": {
                    "type": "string",
                    "description": "Specify the folder_id to import the cases into the specific folder and add into tracking schedule. Default folder is **My Folder**."
                  },
                  "tracking_schedule_id": {
                    "type": "string",
                    "description": "Specify the tracking_schedule_id to track cases under the specific tracking schedule. Default tracking schedule will be the set in your UniCourt account."
                  }
                },
                "required": [
                  "case_ids"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartTrackingResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "tracked": [
                          {
                            "tracking_name": "Every Day",
                            "tracking_schedule_id": "1",
                            "folder": [
                              {
                                "case_ids": [
                                  "GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908",
                                  "HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898"
                                ],
                                "folder_name": "My Folder",
                                "folder_id": "2"
                              }
                            ]
                          }
                        ],
                        "failed_to_track": [
                          {
                            "case_id": "EE6BAFA3HE5C4CD2LYUVNAC3KNDQK1010",
                            "message": "Please configure the PACER credentials in your account"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Add/Update Track Case API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "description": "API Service is under maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Under Maintenance": {
                    "value": {
                      "error": true,
                      "message": "Under maintenance, Please try again after some time",
                      "data": "null"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "The Start Tracking Cases API should be called to add cases to a tracking schedule. Cases added to a tracking schedule will be automatically updated to fetch the latest information from the Court at 11.00 AM UTC time on the day specified in the schedule. All cases added to a tracking schedule are organized in folders. The default behaviour of cases tracked will be organized in \"My Folder\". Alternatively, a user created folder can be specified when adding cases to tracking. The API returns the cases successfully added to tracking schedule and the folder that they are organized in.\n\n* This API accepts **case\\_ids (comma separated)**, **folder\\_id** and **tracking\\_schedule\\_id** within POST method.\n* UniCourt will call a [Tracked Cases Completion Webhook](/developer-hub/webhooks/tracked_case) once every day, for cases which are found to have updates from the Court.\n\n* * *\n\n##  API URL:\n\n```\nhttps://api.unicourt.com/rest/v1/trackCases/add/?token=YOUR-API-TOKEN\n```\n\n* * *\n\n##  Request:\n\n| Method  | CURL Command  |\n| ------- | --------      |\n| POST    | curl -X POST \"[https://api.unicourt.com/rest/v1/trackCases/add/?token=a0f9770a842da247694673196ae2c9549f172526”](https://api.unicourt.com/rest/v1/trackCases/add/?token=a0f9770a842da247694673196ae2c9549f172526”) -d 'case\\_ids=GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908,HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898&tracking\\_schedule\\_id=3&folder\\_id=3' |\n\n* * *\n\n##  Request Query Parameters:\n\n| Parameter | Parameter Type  | Required  | Description |\n| -------   | --------        | -------   | --------    |\n| token     | String          | Yes       | Token which is generated in UniCourt Account, for authorizing the request |\n\n* * *\n\n##  Request Post Parameters:\n\n| Field Name                                                  | Data&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  | Required&nbsp;&nbsp;&nbsp;&nbsp;  | Description |\n| -------                                                     | --------                                            | -------                           | --------    |\n| case\\_ids                                                   | string                                              | Yes                               | Specify **case\\_ids (comma separated)** which need to be added to a tracking schedule.  |\n| folder\\_id                                                  | string                                              | No                                | Specify the **folder\\_id** to organize cases in a user created folder, while adding the case to a tracking schedule. Default folder is **My Folder**. folder\\_id can be obtained as a response of [Folder API](/developer-hub/api/account_details/folders)  |\n| tracking\\_schedule\\_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  | string                                              | No                                | Specify the **tracking\\_schedule\\_id** for the cases to be tracked. Default tracking schedule is **Daily**. This can be changed by logging into the account under **More > Tracking Schedule**. You can obtain the tracking\\_schedule\\_id as a response of [Tracking Schedules API](/developer-hub/api/account_details/tracking_schedules)  |\n\n* * *\n\n##  Best practices on how to Track 1000's of cases to get latest case information?\n\n### Step 1: Get the case ids from the [Search API](/developer-hub/api/search/query).\n\n### Step 2 (Optional): Get the _folder\\_id_ from [Folder API](/developer-hub/api/account_details/folders) and _tracking\\_schedule\\_id_ [Tracking Schedules API](/developer-hub/api/account_details/tracking_schedules)\n\n### Step 3: Specify the _case\\_ids_, _folder\\_id_ and _tracking\\_schedule\\_id_ to start tracking cases.\n\n* UniCourt will update cases in the tracking schedule at 11.00 AM UTC time on the scheduled day and notify the Client's webhook endpoint about only the cases that have updates.\n\n### Step 4: On receiving this webhook call, a [Case API](/developer-hub/api/case_details/case) call will give you the complete and latest case information.\n\n* On following this practice a Client can avoid making use of multiple Case API calls to figure out if a case has update or not, and only make Case API calls for cases that have updates as notified by [Tracked Cases Completion Webhook](/developer-hub/webhooks/tracked_case).\n\n* * *\n\n##  UML for adding cases to a Tracking Schedule and requesting latest Case information for the cases which have updates from the Court.\n\n![Get Case Update](https://cdn.unicourt.com/uc-website_resources/2019.10.18.01/website/images/track_cases.png \"Get Case Update\")\n\n* * *\n\n##  Examples:\n\n### 1)  Add cases to the default tracking schedule\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/trackCases/add/?token=a0f9770a842da247694673196ae2c9549f172526” -d 'case_ids=GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908,HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898'\n```\n\n* * *\n\n### 2)  Add cases to \"Weekly\" tracking schedule (tracking\\_schedule\\_id=2)\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/trackCases/add/?token=a0f9770a842da247694673196ae2c9549f172526” -d 'case_ids=GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908,HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898&tracking_schedule_id=2'\n```\n\n* * *\n\n### 3)  Add cases to the default tracking schedule and organize these cases in folder \"Certify Class Action Cases\" (folder\\_id=5).\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/trackCases/add/?token=a0f9770a842da247694673196ae2c9549f172526” -d 'case_ids=GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908,HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898&folder_id=5'\n```\n\n* * *\n\n### 4)  Add cases to \"Weekly\" (tracking\\_schedule\\_id=2) tracking schedule and organize these cases in folder \"Certify Class Action Cases\" (folder\\_id=5)\n\n```\ncurl -X POST \"https://api.unicourt.com/rest/v1/trackCases/add/?token=a0f9770a842da247694673196ae2c9549f172526” -d 'case_ids=GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908,HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898&folder_id=5&tracking_schedule_id=2'\n```\n\n* * *\n\n##  Sample Response\n\n```\n{\n  \"tracked\":[\n    {\n      \"tracking_name\":\"Every Day\",\n      \"tracking_schedule_id\":\"2\",\n      \"folder\":[\n        {\n          \"case_ids\":[\n            \"GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908\",\n            \"HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898\"\n          ],\n          \"folder_name\":\"Certify Class Action Cases\",\n          \"folder_id\":\"5\"\n        }\n      ]\n    }\n  ],\n  \"failed_to_track\":[\n    {\n      \"case_id\":\"EE6BAFA3HE5C4CD2LYUVNAC3KNDQK1010\",\n      \"message\":\"Please configure the PACER credentials in your account\"\n    }\n  ]\n}\n```\n\n* * *\n\n##  Description:\n\n| Property name                 | Value                     | Description |\n| -------                       | --------                  | -------   |\n| error                         | boolean                   | \\-  |\n| message                       | string                    | Describes the response  |\n| data                          | nested object&nbsp;&nbsp; | Contains tracked case information |\n| tracked                       | array                     | Contains the tracking schedule information  |\n| folder                        | array                     | Folder information where the cases being tracked are organized  |\n| case\\_ids                     | list                      | Cases which are successfully added to the specified tracking schedule |\n| failed\\_to\\_track&nbsp;&nbsp; | array                     | Cases which were not added to the specified tracking schedule. This can happen usually when you exceed the limit of the number of cases that can be tracked as per the plan.  |\n\n* * *\n\n# <span id=\"swagger-try-this-api\">Try this API</span>\n\nCall this method on live data to see the API request and response. Need help with the API Explorer? Check the [support page](/contact-us).\n"
      }
    },
    "/trackCases/remove": {
      "post": {
        "tags": [
          "Stop Tracking Cases API Request"
        ],
        "operationId": "StopTrackingCases",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "case_ids": {
                    "type": "string",
                    "description": "Specify **case_ids(comma separated)** which need to remove from tracking schedule, you can get the list of cases which tracked in your account with [Tracking Scheduled Case API](/developer-hub/api/track/cases)."
                  },
                  "folder_id": {
                    "type": "string",
                    "description": "Specify the folder_id to remove the tracked cases from the spcefic folder."
                  }
                },
                "required": [
                  "case_ids",
                  "folder_id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopTrackingResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "tracking_removed": [
                          {
                            "tracking_name": "Every Day",
                            "tracking_schedule_id": "1",
                            "folder": [
                              {
                                "case_ids": [
                                  "GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908",
                                  "HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898"
                                ],
                                "folder_name": "My Folder",
                                "folder_id": "2"
                              }
                            ]
                          }
                        ],
                        "unable_to_remove_tracking": [
                          {
                            "case_id": "EE6BAFA3HE5C4CD2LYUVNAC3KNDQK1010",
                            "message": "Case is not found under the tracking schedule."
                          },
                          {
                            "case_id": "ZBJSOKZ5JY7RTCBBJJRHNCLWNJMRY1238",
                            "message": "Case is not found in the requested folder."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Remove Tracked Case API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Stop Tracking Cases API should be called to remove cases from a tracking schedule. The [Tracked Cases API](/developer-hub/api/account_details/tracking_schedules_cases) will give the list of the cases which are being tracked."
      }
    },
    "/account/billingCycles": {
      "get": {
        "tags": [
          "Fetch all the billing cycles for an account"
        ],
        "operationId": "BillingCycles",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCyclesResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "billing_cycle": [
                          "2018-03-28 15:38:47;2017-04-22 12:35:11",
                          "2018-03-28 15:35:41;2018-03-28 15:38:47",
                          "2018-03-15 09:08:24;2018-03-28 15:35:41",
                          "2018-03-15 08:37:30;2018-03-15 09:08:24",
                          "2018-03-15 08:35:00;2018-03-15 08:37:30",
                          "2018-03-15 07:32:14;2018-03-15 08:35:00",
                          "2017-03-22 12:35:11;2018-03-15 07:32:14",
                          "2017-02-22 12:35:11;2017-03-22 12:35:11",
                          "2017-01-22 12:35:11;2017-02-22 12:35:11",
                          "2016-12-22 12:35:11;2017-01-22 12:35:11",
                          "2016-11-22 12:35:11;2016-12-22 12:35:11",
                          "2016-10-22 12:35:11;2016-11-22 12:35:11",
                          "2016-09-22 12:35:11;2016-10-22 12:35:11",
                          "2016-08-22 12:35:11;2016-09-22 12:35:11",
                          "2016-07-22 12:35:11;2016-08-22 12:35:11",
                          "2016-06-22 12:35:11;2016-07-22 12:35:11"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content - No Billing cycle found in your account"
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Billing Cycle API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful Billing Cycle API, returns all billing cycles for an account in JSON format."
      }
    },
    "/account/billingUsage": {
      "get": {
        "tags": [
          "Account Usage Request"
        ],
        "operationId": "BillingUsage",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "billing_cycle",
            "description": "Specify the billing cycle to get the account usage. which can be obtain in the [Billing Cycle API](/developer-hub/api/account_details/billing_cycle) response",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingUsageResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "account_usage": {
                          "case_tracking": "0",
                          "party_finders": "0",
                          "case_updates": "0",
                          "searches": "0",
                          "scheduled_searches": "0",
                          "case_export": "0",
                          "documents_ordered": "0",
                          "api": {
                            "api_groups": [
                              {
                                "name": "Chargeable APIs",
                                "requestCount": "638",
                                "apiList": [
                                  "Case",
                                  "Search",
                                  "Order Document Confirm",
                                  "Update Case",
                                  "Download Download"
                                ]
                              },
                              {
                                "name": "Non chargeable APIs",
                                "requestCount": "1781",
                                "apiList": [
                                  "Documents",
                                  "Docket entries",
                                  "Parties",
                                  "Attorneys",
                                  "Related Cases",
                                  "Billing Cycle",
                                  "Billing Usage",
                                  "Jurisdiction Filters",
                                  "Case Type Filters",
                                  "Case Status Filters",
                                  "Folders",
                                  "Tracking Schedules",
                                  "Tracked Cases",
                                  "Start Tracking Cases",
                                  "Stop Tracking Cases",
                                  "Order Document Preview",
                                  "Order Document Details",
                                  "Order Document Status",
                                  "Invoices",
                                  "Download Invoice",
                                  "Saved Search"
                                ]
                              }
                            ],
                            "search_cases": [
                              {
                                "name": "Search",
                                "requestCount": "144"
                              },
                              {
                                "name": "Jurisdiction Filters",
                                "requestCount": "58"
                              },
                              {
                                "name": "Case Type Filters",
                                "requestCount": "17"
                              },
                              {
                                "name": "Case Status Filters",
                                "requestCount": "6"
                              }
                            ],
                            "case_details": [
                              {
                                "name": "Case",
                                "requestCount": "387"
                              },
                              {
                                "name": "Parties",
                                "requestCount": "60"
                              },
                              {
                                "name": "Attorneys",
                                "requestCount": "50"
                              },
                              {
                                "name": "Related Cases",
                                "requestCount": "55"
                              },
                              {
                                "name": "Docket entries",
                                "requestCount": "282"
                              },
                              {
                                "name": "Documents",
                                "requestCount": "218"
                              },
                              {
                                "name": "Download Download",
                                "requestCount": "51"
                              }
                            ],
                            "order_document": [
                              {
                                "name": "Order Document Preview",
                                "requestCount": "0"
                              },
                              {
                                "name": "Order Document Confirm",
                                "requestCount": "0"
                              },
                              {
                                "name": "Order Document Details",
                                "requestCount": "0"
                              },
                              {
                                "name": "Order Document Status",
                                "requestCount": "0"
                              }
                            ],
                            "update_case": [
                              {
                                "name": "Update Case",
                                "requestCount": "56"
                              }
                            ],
                            "track_cases": [
                              {
                                "name": "Start Tracking Cases",
                                "requestCount": "539"
                              },
                              {
                                "name": "Stop Tracking Cases",
                                "requestCount": "11"
                              }
                            ],
                            "account_details": [
                              {
                                "name": "Billing Cycle",
                                "requestCount": "103"
                              },
                              {
                                "name": "Billing Usage",
                                "requestCount": "78"
                              },
                              {
                                "name": "Folder",
                                "requestCount": "117"
                              },
                              {
                                "name": "Tracking Schedules",
                                "requestCount": "54"
                              },
                              {
                                "name": "Tracked Cases",
                                "requestCount": "114"
                              },
                              {
                                "name": "Invoices",
                                "requestCount": "10"
                              },
                              {
                                "name": "Download Invoice",
                                "requestCount": "6"
                              },
                              {
                                "name": "Saved Search",
                                "requestCount": "3"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content - No Account usage found in your account"
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Account Usage API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Billing Usage API, returns the usage for a billing cycle of an account. The billing cycles for an account can be obtained from [Billing Cycles API](/developer-hub/api/account_details/billing_cycle)."
      }
    },
    "/account/invoices": {
      "get": {
        "tags": [
          "Invoices API Request"
        ],
        "operationId": "Invoices",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "description": "The page index for next set of invoices to be returned. </br>*Default is **1***",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "invoices": [
                          {
                            "status": "Paid",
                            "invoice_number": 4556,
                            "total": "39.00",
                            "billed_on": "07/04/2018 12:34"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4530,
                            "total": "20.00",
                            "billed_on": "07/02/2018 11:55"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4427,
                            "total": "10.00",
                            "billed_on": "06/21/2018 07:01"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4426,
                            "total": "10.00",
                            "billed_on": "06/21/2018 06:56"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4425,
                            "total": "6.80",
                            "billed_on": "06/21/2018 06:35"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4423,
                            "total": "6.80",
                            "billed_on": "06/21/2018 06:12"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4422,
                            "total": "6.80",
                            "billed_on": "06/21/2018 06:05"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4405,
                            "total": "0.00",
                            "billed_on": "06/19/2018 07:04"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4350,
                            "total": "10.00",
                            "billed_on": "06/12/2018 07:03"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4349,
                            "total": "10.00",
                            "billed_on": "06/12/2018 06:58"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4348,
                            "total": "10.00",
                            "billed_on": "06/12/2018 06:53"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4240,
                            "total": "39.00",
                            "billed_on": "06/04/2018 12:33"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4215,
                            "total": "20.00",
                            "billed_on": "06/01/2018 12:53"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4214,
                            "total": "19.40",
                            "billed_on": "06/01/2018 12:38"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4213,
                            "total": "3.80",
                            "billed_on": "06/01/2018 12:26"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4212,
                            "total": "250.30",
                            "billed_on": "06/01/2018 12:26"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4193,
                            "total": "10.00",
                            "billed_on": "05/29/2018 10:03"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4175,
                            "total": "0.00",
                            "billed_on": "05/26/2018 10:47"
                          },
                          {
                            "status": "Failed",
                            "invoice_number": 4174,
                            "total": "11.30",
                            "billed_on": "05/26/2018 10:43"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4173,
                            "total": "0.00",
                            "billed_on": "05/26/2018 10:37"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4151,
                            "total": "0.00",
                            "billed_on": "05/23/2018 11:44"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4148,
                            "total": "2.50",
                            "billed_on": "05/23/2018 11:21"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4147,
                            "total": "10.00",
                            "billed_on": "05/23/2018 10:55"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4146,
                            "total": "0.00",
                            "billed_on": "05/23/2018 10:55"
                          },
                          {
                            "status": "Paid",
                            "invoice_number": 4142,
                            "total": "0.00",
                            "billed_on": "05/23/2018 07:24"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Invoices API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Invoices API should be called to get a list of Invoices available in the account. These results are paginated and each page returns upto 25 results."
      }
    },
    "/account/invoices/{invoice_number}/downloadURL": {
      "get": {
        "tags": [
          "The URL to download a Invoice"
        ],
        "operationId": "DownloadInvoice",
        "parameters": [
          {
            "name": "invoice_number",
            "description": "Specify Invoice Number to return document invoice URL, Invoice Number can be obtained as a response of  [Invoices API](/developer-hub/api/account_details/invoices)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadInvoiceResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "downloadURL": "https://s3.amazonaws.com/ctf.unicourt.com/staging/api_files/20180717092606-invoice_a2c41aadd2414061e9d41b4f6d9587644372.pdf?response-content-type=application%2Fpdf&response-content-disposition=inline%3B%20filename%3D%2220180717092606-invoice_a2c41aadd2414061e9d41b4f6d9587644372.pdf.pdf%22&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Security-Token=FQoDYXdzELr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDA%2BnLeLWPxd3F%2FpvYyK3A7BjRNBV7vciGOx%2BGIXZssduQeo%2FtqWjPtsW6xACYuTJy2iRP0qrm%2BG259eGsUN%2FmVf27AdIpy5sVJfribkBFTMDss0sPe2IcG9s9GfRhYYLrKLP2PGtzYE1BMhFuiC08hjgSfP%2FlfJvdJui50tMixGK%2FMEQGZgdK4oS%2FFEU8wGUNuVX8cSETyuR%2BbzA99SOtqQPu31Yb%2FGNSmBFyjdNssHlz0Iqm744jMYDoUhLPItiM9g%2FSIv3ON7fVu5X5eUZjC94K0%2ByLrVPq9sEu5myd2bJPCNxbIFmsx0%2FVnU3HBv2DLtid2i4TnHRaxqf6rQejdND%2Bvyq9%2F9J1IFeyVvV79sj7S9n%2F3nx4T3lZ9gc9E14CFXZx6jgG4HChiaqfHK%2B609yQKDm5fDFVldZQxCBnP0aOJh2KN4DgQztt%2FBmP9b3NeWOghGGN7%2FWdJHqnLOqppFX9RdofjOyVGc%2F1VuXI2bS1DxAbmjWeoTWMKVmEUPPNfyofiM85as%2BMiSr%2BhHWgwbbfmr4Bb0DX80fULdJbd04XltrdwEzGIdMhiStoV%2BVrLvVdJSUSNBF%2FWpFfzdTZeXaxVUvtNoo%2FNy22gU%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAJHZFG3XM7OZMA47A%2F20180717%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20180717T092606Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3600&X-Amz-Signature=65106ecdfaabd07b6d5c626305ad7e7420223d7dacbf4369a249f7d6e2d47948"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Invoice Download API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The RESTful Download Invoice API, returns a URL to download a invoice for specified Invoice number, which can be obtained in the [Invoices API](/developer-hub/api/account_details/invoices) response. </br> ***Note:*** The download URL will Expire after 60 minutes."
      }
    },
    "/account/folders": {
      "get": {
        "tags": [
          "Folder API Request"
        ],
        "operationId": "Folder",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoldersResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "folders": [
                          {
                            "folder_id": "2",
                            "folder_name": "My Folders",
                            "created_date": "2017-12-28",
                            "last_updated_date": "2018-08-21",
                            "folders": [
                              {
                                "folder_id": "4",
                                "folder_name": "Intellectual Property",
                                "created_date": "2018-01-20",
                                "last_updated_date": "2018-07-02",
                                "folders": []
                              },
                              {
                                "folder_id": "5",
                                "folder_name": "JUDGMENTS",
                                "created_date": "2018-03-23",
                                "last_updated_date": "2018-07-02",
                                "folders": []
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Folder Tree API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Folder API should be called to get a list of Folders available in the account."
      }
    },
    "/account/trackingSchedules": {
      "get": {
        "tags": [
          "Tracking Schedules API Request"
        ],
        "operationId": "TrackingSchedules",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingSchedulesResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "tracking_schedules": [
                          {
                            "tracking_schedule_id": "1",
                            "tracking_name": "Daily",
                            "created_date": "2017-12-28",
                            "last_updated_date": "2017-12-28",
                            "scheduled": "Daily",
                            "case_tracked": "1",
                            "is_default": true
                          },
                          {
                            "tracking_schedule_id": "2",
                            "tracking_name": "Weekly - Every Monday & Thursday",
                            "created_date": "2017-12-28",
                            "last_updated_date": "2017-12-28",
                            "scheduled": "Weekly (Sunday, Monday, Thursday)",
                            "case_tracked": "0",
                            "is_default": false
                          },
                          {
                            "tracking_schedule_id": "3",
                            "tracking_name": "Monthly - Every 1st and 15th",
                            "created_date": "2017-12-28",
                            "last_updated_date": "2017-12-28",
                            "scheduled": "Repeats: Every Month on 1, 15",
                            "case_tracked": "2",
                            "is_default": false
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Tracking Schedules API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Tracking Schedules API should be called to get a list of all Tracking Schedules configured in the account."
      }
    },
    "/account/trackingSchedules/cases": {
      "get": {
        "tags": [
          "Tracked Cases API Request"
        ],
        "operationId": "TrackedCases",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "folder_id",
            "description": "Specify the folder_id to get the cases which are tracked only under the specific folder. You can get the folder_id as a response of [Folder API](/developer-hub/api/account_details/folders)",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "tracking_schedule_id",
            "description": "Specify the tracking_schedule_id to get the cases which are tracked only under the specific tracking schedule. You can get the tracking_schedule_id as a response of [Tracking Schedules API](/developer-hub/api/account_details/tracking_schedules)",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackedCasesResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "tracking_schedules": [
                          {
                            "tracking_schedule_id": "1",
                            "tracking_name": "Daily",
                            "folder": [
                              {
                                "folder_id": "2",
                                "folder_name": "My Folder",
                                "case_ids": [
                                  "HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898"
                                ]
                              }
                            ]
                          },
                          {
                            "tracking_schedule_id": "2",
                            "tracking_name": "Weekly - Every Monday & Thursday",
                            "folder": [
                              {
                                "folder_id": "2",
                                "folder_name": "My Folder",
                                "case_ids": [
                                  "EQ7RGFY6HQ6TCC35MEWF4725KZFQU1013",
                                  "EE6BAFA3HE5C4CD2LYUVW7C2KJFAG1010",
                                  "EQ7RGFY6HQ6TCC35MEWF4725K5EAY1013"
                                ]
                              }
                            ]
                          },
                          {
                            "tracking_schedule_id": "3",
                            "tracking_name": "Monthly - Every 1st and 15th",
                            "folder": [
                              {
                                "folder_id": "2",
                                "folder_name": "My Folder",
                                "case_ids": [
                                  "F5FB4IRUIU3E6GY3IFMW3DTOMNMBE0925",
                                  "EE6BAFA3HE5C4CD2LYUVNAC3KNDQK1010"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1search/post/responses/400"
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Tracking Scheduled Cases API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Tracked Cases API should be called to get a list of cases which are being tracked in a tracking schedule or all schedules."
      }
    },
    "/account/savedSearches/{search_id}": {
      "get": {
        "tags": [
          "Saved Search Request"
        ],
        "operationId": "SavedSearch",
        "parameters": [
          {
            "name": "token",
            "description": "Token which is generated in UniCourt Account, for authorizing the request.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "search_id",
            "description": "You can get Search ID from the UniCourt application.",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Everything is working fine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedSearchResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "error": false,
                      "message": "OK",
                      "data": {
                        "page": 1,
                        "sort_by": "Filing Date",
                        "active": false,
                        "scheduled_days": [],
                        "query": [
                          {
                            "search_terms": [
                              "Motion to Dismiss"
                            ],
                            "scope": "Contains Any",
                            "attribute": "Docket",
                            "proximity": "Next To Each Other"
                          },
                          {
                            "search_terms": [
                              "Class Action"
                            ],
                            "scope": "Contains Any",
                            "attribute": "Case Name",
                            "proximity": "Anywhere",
                            "condition": "AND"
                          }
                        ],
                        "criteria": "(0 OR 1)",
                        "filters": [
                          {
                            "filter_type": "jurisdiction",
                            "field": "courthouse",
                            "keys": [
                              360,
                              362
                            ]
                          },
                          {
                            "filter_type": "jurisdiction",
                            "field": "court_system",
                            "keys": [
                              72
                            ]
                          }
                        ],
                        "search_id": 1533,
                        "search_name": "Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Bad Request": {
                    "value": {
                      "error": true,
                      "message": "Bad Request",
                      "data": "null"
                    }
                  },
                  "Search Not Found": {
                    "value": {
                      "error": true,
                      "message": "Search is not found",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Monthly Limit Reached": {
                    "value": {
                      "error": true,
                      "message": "Saved Search API monthly limit is reached",
                      "data": "null"
                    }
                  },
                  "Authorization failure": {
                    "$ref": "#/paths/~1search/post/responses/403/content/application~1json/examples/Authorization%20failure"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/paths/~1search/post/responses/404"
          },
          "408": {
            "$ref": "#/paths/~1case~1%7Bcase_id%7D/get/responses/408"
          },
          "500": {
            "$ref": "#/paths/~1search/post/responses/500"
          },
          "503": {
            "$ref": "#/paths/~1trackCases~1add/post/responses/503"
          }
        },
        "description": "The Saved Search API should be called to get information about the saved search, returns a query data in JSON format, which can be passed as input for [Search API](/developer-hub/api/search/query) to get results."
      }
    }
  },
  "components": {
    "headers": {
      "Content-Type": {
        "description": "Response Content-Type",
        "schema": {
          "enum": [
            "application/json"
          ],
          "type": "string"
        }
      },
      "X-Status-Reason": {
        "description": "Failure Reasons",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "SearchRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "search_terms": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Case Management Conference Scheduled"
                  }
                },
                "scope": {
                  "type": "string",
                  "enum": [
                    "Contains Any",
                    "Does Not Contain Any",
                    "Contains All",
                    "Does Not Contain All"
                  ],
                  "example": "Contains All"
                },
                "attribute": {
                  "type": "string",
                  "enum": [
                    "Everything",
                    "Party",
                    "Case Number",
                    "Case Name",
                    "Docket",
                    "Attorney",
                    "Judge",
                    "norm_party_id",
                    "norm_attorney_id",
                    "norm_law_firm_id",
                    "norm_judge_id"
                  ],
                  "example": "Everything"
                },
                "proximity": {
                  "type": "string",
                  "enum": [
                    "Next To Each Other",
                    "Anywhere"
                  ],
                  "example": "Anywhere"
                },
                "condition": {
                  "type": "string",
                  "enum": [
                    "OR",
                    "AND"
                  ],
                  "example": "OR"
                }
              },
              "required": [
                "search_terms"
              ]
            }
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "sort_by": {
            "type": "string",
            "enum": [
              "Filing Date",
              "Relevancy"
            ],
            "example": "Filing Date"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter_type": {
                  "type": "string",
                  "enum": [
                    "case_type",
                    "case_status",
                    "jurisdiction",
                    "filing_date",
                    "created_date",
                    "last_update_changes_found",
                    "docket_date"
                  ]
                },
                "field": {
                  "type": "string",
                  "enum": [
                    "category",
                    "group",
                    "name",
                    "level_1_jurisdiction",
                    "level_2_jurisdiction",
                    "court_system",
                    "courthouse",
                    "from_date",
                    "to_date",
                    "last_n_days"
                  ]
                },
                "keys": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                  "example": "2018-05-25"
                },
                "days": {
                  "type": "integer",
                  "format": "days",
                  "example": 100
                }
              },
              "required": [
                "filter_type",
                "field"
              ]
            }
          }
        },
        "required": [
          "query"
        ]
      },
      "UpdateCaseRequest": {
        "type": "object",
        "properties": {
          "fetch_participants": {
            "$ref": "#/components/schemas/FetchParticipants"
          },
          "additional_pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalPage"
            }
          }
        }
      },
      "SearchResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "result": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              },
              "total_matches": {
                "type": "string",
                "example": "81188"
              },
              "post_data": {
                "$ref": "#/components/schemas/SearchRequest"
              },
              "criteria": {
                "type": "string",
                "example": "(0)"
              }
            }
          }
        }
      },
      "JurisdictionResponse": {
        "description": "Jurisdiction Filters Request",
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "filter_type": {
                "type": "string",
                "example": "jurisdiction"
              },
              "filters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JurisdictionFilter"
                }
              }
            }
          }
        }
      },
      "CaseTypeResponse": {
        "description": "Case Type Filters Request",
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "filter_type": {
                "type": "string",
                "example": "case_type"
              },
              "filters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CaseTypeFilter"
                }
              }
            }
          }
        }
      },
      "CaseStatusResponse": {
        "description": "Case Status Filters Request",
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "filter_type": {
                "type": "string",
                "example": "case_status"
              },
              "filters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CaseStatusFilter"
                }
              }
            }
          }
        }
      },
      "CaseResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "requested_case_id": {
                "type": "string",
                "maxLength": 33,
                "description": "Case ID passed in the request.",
                "example": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038"
              },
              "is_moved": {
                "type": "boolean",
                "description": "Signifies if this is a moved case or not. If this case is moved then the 'requested_case_id' will be different from 'case_id'.",
                "example": false
              },
              "case": {
                "$ref": "#/components/schemas/Case"
              },
              "parties_token": {
                "type": "string",
                "description": "Temporary token to be used to access Parties API for this case. Valid for 1 hour.",
                "example": "1e3a93be98d9598b01f922cd2bd8e19b43dc91b4"
              },
              "attorneys_token": {
                "type": "string",
                "description": "Temporary token to be used to access Attorneys API for this case. Valid for 1 hour.",
                "example": "1e3a93be98d9598b01f922cd2bd8e19b43dc91b4"
              },
              "related_cases_token": {
                "type": "string",
                "description": "Temporary token to be used to access Related Cases API for this case. Valid for 1 hour.",
                "example": "1e3a93be98d9598b01f922cd2bd8e19b43dc91b4"
              },
              "docket_entries_token": {
                "type": "string",
                "description": "Temporary token to be used to access Docket Entries API for this case. Valid for 1 hour.",
                "example": "1e3a93be98d9598b01f922cd2bd8e19b43dc91b4"
              },
              "documents_token": {
                "type": "string",
                "description": "Temporary token to be used to access Documents API for this case. Valid for 1 hour.",
                "example": "1e3a93be98d9598b01f922cd2bd8e19b43dc91b4"
              }
            },
            "required": [
              "requested_case_id",
              "is_moved",
              "case",
              "parties_token",
              "attorneys_token",
              "related_cases_token",
              "docket_entries_token",
              "documents_token"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "PartiesResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "requested_case_id": {
                "type": "string",
                "maxLength": 33,
                "description": "Case ID passed in the request.",
                "example": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038"
              },
              "requested_page_number": {
                "type": "string",
                "description": "The page number that was requested",
                "example": "1"
              },
              "parties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Party"
                }
              },
              "more_parties": {
                "type": "boolean",
                "description": "Flag to denote there are more parties, set as TRUE if there are more than 100 parties.",
                "example": false
              }
            },
            "required": [
              "requested_case_id",
              "requested_page_number",
              "parties",
              "more_parties"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "AttorneysResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "requested_case_id": {
                "type": "string",
                "maxLength": 33,
                "description": "Case ID passed in the request.",
                "example": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038"
              },
              "requested_page_number": {
                "type": "string",
                "description": "Page number that was requested",
                "example": "1"
              },
              "attorneys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attorney"
                }
              },
              "more_attorneys": {
                "type": "boolean",
                "description": "Flag to denote there are more attorneys, set as TRUE if there are more than 100 attorneys.",
                "example": false
              }
            },
            "required": [
              "requested_case_id",
              "requested_page_number",
              "attorneys",
              "more_attorneys"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "RelatedCasesResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "requested_case_id": {
                "type": "string",
                "maxLength": 33,
                "description": "Case ID passed in the request.",
                "example": "FNDBUHRNIQZEUGUENEZWLBLLLRJRE1038"
              },
              "requested_page_number": {
                "type": "string",
                "description": "Page number that was requested",
                "example": "1"
              },
              "related_cases": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelatedCases"
                }
              },
              "more_related_cases": {
                "type": "boolean",
                "description": "Flag to denote there are more related cases, set as TRUE if there are more than 100 related cases.",
                "example": false
              }
            },
            "required": [
              "requested_case_id",
              "requested_page_number",
              "related_cases",
              "more_related_cases"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "DocketEntriesResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "docket_entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocketEntry"
                }
              },
              "last_key": {
                "type": "string",
                "nullable": true,
                "example": "Q0FfTEEyXzQ3OTIzOV8yMDE4LTA0LTI4IDEwOjE3OjIwLjA5MDk3NDtDQV9MQTJfNDc5MjM5OzQ5"
              }
            },
            "required": [
              "docket_entries",
              "last_key"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "AllDocumentsResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "documents": {
                "description": "List of documents \\<document data>\\. The <document_id> will have min-length of 10 and max-length of 255.",
                "type": "object",
                "properties": {
                  "<document_id>": {
                    "$ref": "#/components/schemas/Document"
                  }
                }
              },
              "last_key": {
                "type": "string",
                "nullable": true,
                "example": null
              }
            }
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "SingleDocumentResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "documents": {
                "description": "The <document_id> will have min-length of 10 and max-length of 255.",
                "type": "object",
                "properties": {
                  "<document_id>": {
                    "$ref": "#/components/schemas/Document"
                  }
                }
              }
            }
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "DownloadDocumentsResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "<document_id>": {
                "type": "string",
                "format": "url",
                "example": "https://casedocs.s3.amazonaws.com/staging/pc/db1/test/PACER_TEST_D_17311078033_1518781436.pdf?response-content-disposition=attachment%3B%20filename%3D%22PACER_TEST_D_17311078033.pdf%22&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Security-Token=FQoDYXdzEKb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDMsN6XnLCbpdl%2BICNyL0AncyJ5ZBCBA01SvhOcuHArz5Gwmask6ZNZGgPAISf2X5hFLDWxb0TIQ%2BkRQBbX5Oy7coPP7wWKpClPhhNi50J1IIuaUIVpgieQuHOYJSyvEXCDcN3V7cXBC%2FScQUQMLHOX%2BNlAEXtIATLryb%2BSalEOeU6LlKHyoUPm7kDMQ8qBTTtXhp6mlfhQFhgGXGitdHegl%2Bf680gF9%2FtnLLwbVA7HP6kdA8YP1e1flgC81%2FICYZJXBAs3dWLyG9W%2BH0sAVzioq5l6WcLN0H%2BOmZQbZAGfgF8%2Bo8MwextdZERRV2h4UqqSJT4Frmn%2BtMY2JuTGTxnaXsWxfNzMQn0Enm%2BWRKSZ3EGdfu86pfOStYrUVroTpgrlanVRXbng5DLxkbueA%2BX8CHpTRS5T0%2B1JB6pnxsZH4%2F1ApQHO2hIDwbcp3b4FXoIfEbUFAAG%2FGCQFClbwzY7cAho77UP4voP16AxzuWkkPs4AaLXvWGRcafGd9gWhub0TS4CSiNn8HXBQ%3D%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAJ64AQLP72S753WLQ%2F20180507%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20180507T131002Z&X-Amz-SignedHeaders=host&X-Amz-Expires=600&X-Amz-Signature=cb69ce402e9df0d5d0bca446e4b5dd64a64e5999305e534571ba7f4f0614e353"
              }
            }
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "OrderDocumentsPreviewResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "order_preview": {
                "type": "object",
                "properties": {
                  "order_items": {
                    "type": "object",
                    "properties": {
                      "<document_id>": {
                        "$ref": "#/components/schemas/DocumentItem"
                      }
                    }
                  },
                  "invoice_amount": {
                    "type": "string",
                    "example": "12.60"
                  },
                  "order_id": {
                    "type": "string",
                    "example": "8a845b5fbd1529737379-4179"
                  }
                },
                "required": [
                  "order_items",
                  "invoice_amount",
                  "order_id"
                ]
              },
              "documents_unavailable_to_order": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "<document_id>": {
                        "$ref": "#/components/schemas/DocumentItem"
                      }
                    }
                  },
                  {
                    "type": "array",
                    "nullable": true,
                    "example": [],
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              }
            },
            "required": [
              "order_preview",
              "documents_unavailable_to_order"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "OrderDocumentsConfirmResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "order_id": {
                "type": "string",
                "example": "9af58cdf321529737588-409"
              },
              "invoice_number": {
                "type": "string",
                "example": "null"
              },
              "invoice_amount": {
                "type": "string",
                "example": "null"
              },
              "order_status": {
                "type": "string",
                "example": "Invoice Pending"
              },
              "order_status_type": {
                "type": "string",
                "example": "Processing"
              },
              "order_date": {
                "type": "string",
                "format": "date time",
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
                "example": "2018-06-23 07:06:28"
              },
              "ordered_document_status": {
                "type": "object",
                "properties": {
                  "<document_id>": {
                    "$ref": "#/components/schemas/DocumentStatus"
                  }
                }
              }
            },
            "required": [
              "order_id",
              "invoice_number",
              "invoice_amount",
              "order_status",
              "order_status_type",
              "order_date",
              "ordered_document_status"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "OrderDocumentsDetailsResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "order_id": {
                "type": "string",
                "example": "9af58cdf321529737588-409"
              },
              "invoice_number": {
                "type": "string",
                "example": "4530"
              },
              "invoice_amount": {
                "type": "string",
                "example": "20.00"
              },
              "order_status": {
                "type": "string",
                "example": "Invoice Posted"
              },
              "order_status_type": {
                "type": "string",
                "example": "Processing"
              },
              "order_date": {
                "type": "string",
                "format": "date time",
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
                "example": "2018-06-23 07:06:28"
              },
              "ordered_document_status": {
                "type": "object",
                "properties": {
                  "<document_id>": {
                    "$ref": "#/components/schemas/DocumentStatus"
                  }
                }
              }
            },
            "required": [
              "order_id",
              "invoice_number",
              "invoice_amount",
              "order_status",
              "order_status_type",
              "order_date",
              "ordered_document_status"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "OrderDocumentsStatusResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "order_id": {
                "type": "string",
                "example": "f04a70a1e31530532390-8266"
              },
              "order_status": {
                "type": "string",
                "example": "Paid"
              },
              "order_status_type": {
                "type": "string",
                "example": "Complete"
              },
              "order_date": {
                "type": "string",
                "format": "date time",
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
                "example": "2018-06-23 07:06:28"
              }
            },
            "required": [
              "order_id",
              "order_status",
              "order_status_type",
              "order_date"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "UpdateCaseResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "case_id": {
                "description": "The case requested for update.",
                "type": "string",
                "example": "FVEBYIBSIM2E2GIZH5LWXCDLMFHBE0914"
              },
              "request_id": {
                "description": "An unique identifier to co-relate with the update case request which is returned in UpdateCaseResponse.",
                "type": "string",
                "example": "c12cb181038ebf0165437e793496def4"
              },
              "message": {
                "type": "string",
                "example": "Case is requested for update"
              }
            },
            "required": [
              "case_id",
              "message"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "StartTrackingResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "tracked": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tracking"
                },
                "nullable": true
              },
              "failed_to_track": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FailedTrack"
                },
                "nullable": true
              }
            },
            "required": [
              "tracked",
              "failed_to_track"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "StopTrackingResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "tracking_removed": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tracking"
                },
                "nullable": true
              },
              "unable_to_remove_tracking": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FailedTrack"
                },
                "nullable": true
              }
            },
            "required": [
              "tracking_removed",
              "unable_to_remove_tracking"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "BillingCyclesResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "billing_cycle": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date time;date time",
                  "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2};[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
                  "example": "2018-03-28 15:38:47;2017-04-22 12:35:11"
                }
              }
            },
            "required": [
              "billing_cycle"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "BillingUsageResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "account_usage": {
                "$ref": "#/components/schemas/AccountUsage"
              }
            },
            "required": [
              "account_usage"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "InvoicesResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "invoices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": [
              "invoices"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "DownloadInvoiceResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "downloadURL": {
                "type": "string",
                "format": "URL",
                "example": "https://s3.amazonaws.com/ctf.unicourt.com/staging/api_files/20180717092606-invoice_a2c41aadd2414061e9d41b4f6d9587644372.pdf?response-content-type=application%2Fpdf&response-content-disposition=inline%3B%20filename%3D%2220180717092606-invoice_a2c41aadd2414061e9d41b4f6d9587644372.pdf.pdf%22&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Security-Token=FQoDYXdzELr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDA%2BnLeLWPxd3F%2FpvYyK3A7BjRNBV7vciGOx%2BGIXZssduQeo%2FtqWjPtsW6xACYuTJy2iRP0qrm%2BG259eGsUN%2FmVf27AdIpy5sVJfribkBFTMDss0sPe2IcG9s9GfRhYYLrKLP2PGtzYE1BMhFuiC08hjgSfP%2FlfJvdJui50tMixGK%2FMEQGZgdK4oS%2FFEU8wGUNuVX8cSETyuR%2BbzA99SOtqQPu31Yb%2FGNSmBFyjdNssHlz0Iqm744jMYDoUhLPItiM9g%2FSIv3ON7fVu5X5eUZjC94K0%2ByLrVPq9sEu5myd2bJPCNxbIFmsx0%2FVnU3HBv2DLtid2i4TnHRaxqf6rQejdND%2Bvyq9%2F9J1IFeyVvV79sj7S9n%2F3nx4T3lZ9gc9E14CFXZx6jgG4HChiaqfHK%2B609yQKDm5fDFVldZQxCBnP0aOJh2KN4DgQztt%2FBmP9b3NeWOghGGN7%2FWdJHqnLOqppFX9RdofjOyVGc%2F1VuXI2bS1DxAbmjWeoTWMKVmEUPPNfyofiM85as%2BMiSr%2BhHWgwbbfmr4Bb0DX80fULdJbd04XltrdwEzGIdMhiStoV%2BVrLvVdJSUSNBF%2FWpFfzdTZeXaxVUvtNoo%2FNy22gU%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAJHZFG3XM7OZMA47A%2F20180717%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20180717T092606Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3600&X-Amz-Signature=65106ecdfaabd07b6d5c626305ad7e7420223d7dacbf4369a249f7d6e2d47948"
              }
            },
            "required": [
              "downloadURL"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "FoldersResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "folders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            },
            "required": [
              "folders"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "TrackingSchedulesResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "tracking_schedules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TrackingSchedule"
                }
              }
            },
            "required": [
              "tracking_schedules"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "TrackedCasesResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "tracking_schedules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tracking"
                }
              }
            },
            "required": [
              "tracking_schedules"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "SavedSearchResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: false"
          },
          "message": {
            "type": "string",
            "description": "value: OK"
          },
          "data": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "example": 1
              },
              "sort_by": {
                "type": "string",
                "example": "Filing Date"
              },
              "active": {
                "type": "boolean",
                "example": false
              },
              "scheduled_days": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "query": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SavedSearchQuery"
                }
              },
              "criteria": {
                "type": "string",
                "example": "(0 OR 1)"
              },
              "filters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SavedSearchFilter"
                },
                "nullable": true
              },
              "search_id": {
                "type": "number",
                "example": 1533
              },
              "search_name": {
                "type": "string",
                "example": "Order"
              }
            },
            "required": [
              "page",
              "sort_by",
              "active",
              "scheduled_days",
              "query",
              "criteria",
              "filters",
              "search_id",
              "search_name"
            ]
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "value: true"
          },
          "message": {
            "type": "string",
            "description": "Error message is based on status code and error type."
          },
          "data": {
            "type": "string",
            "nullable": true,
            "description": "value: null"
          }
        },
        "required": [
          "error",
          "message",
          "data"
        ]
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "case": {
            "type": "object",
            "properties": {
              "case_type": {
                "type": "string",
                "example": "Other Product Liability"
              },
              "case_type_category": {
                "type": "string",
                "example": "Civil"
              },
              "case_type_group": {
                "type": "string",
                "example": "Personal Injury"
              },
              "case_status_category": {
                "type": "string",
                "example": "Other"
              },
              "case_status_name": {
                "type": "string",
                "example": "Stayed"
              },
              "courthouse": {
                "type": "string",
                "example": "Bf Sisk Courthouse"
              },
              "state": {
                "type": "string",
                "example": "CA"
              },
              "jurisdiction": {
                "type": "string",
                "example": "Fresno County Superior Courts"
              },
              "last_updated_date": {
                "type": "string",
                "format": "date time",
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
                "example": "2021-12-17 10:15:46"
              },
              "last_update_changes_found": {
                "description": "The date and time when the case was last fetched from the Court where we found changes in the case information. Use this field to compare with the case information cached in your database to decide whether case has updates. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS",
                "type": "string",
                "format": "date time",
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
                "example": "2021-11-28 03:41:10"
              },
              "created_date": {
                "type": "string",
                "format": "date time",
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
                "example": "2021-10-14 11:00:53"
              },
              "case_name": {
                "type": "string",
                "example": "Donies SMith vs. Prometheus Laboratories, Inc.\\/STAYED"
              },
              "filing_date": {
                "type": "string",
                "format": "date",
                "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                "example": "2021-10-07"
              },
              "case_id": {
                "type": "string",
                "example": "FNDBUHRQIEZECJEINAZWRBLLLVJBI1047"
              },
              "case_number": {
                "type": "string",
                "example": "21CECG03001"
              },
              "docket": {
                "type": "string",
                "example": "2018-05-25 Request - DV Prevention w/Minor Child (w/in Existing Case); Filed by Petitioner! 2018-05-25 Petition - Dissolution w/ Minor Child; Filed by Petitioner! 2018-05-25 Notice - Case Assignment! 2018-05-25 <b>Order</b> - Financial Information (FAM 111)"
              }
            }
          },
          "attorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResultAttorney"
            }
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResultParty"
            }
          },
          "judges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResultJudge"
            }
          }
        }
      },
      "SearchResultAttorney": {
        "type": "object",
        "properties": {
          "firm": {
            "type": "string",
            "example": null
          },
          "fullname": {
            "type": "string",
            "example": null
          }
        }
      },
      "SearchResultParty": {
        "type": "object",
        "properties": {
          "representation_type": {
            "type": "string",
            "example": null
          },
          "party_type": {
            "type": "string",
            "example": null
          },
          "fullname": {
            "type": "string",
            "example": null
          },
          "entity_type": {
            "type": "string",
            "example": null
          }
        }
      },
      "SearchResultJudge": {
        "type": "object",
        "properties": {
          "fullname": {
            "type": "string",
            "example": null
          }
        }
      },
      "JurisdictionFilter": {
        "title": "JurisdictionFilter",
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "example": "level_1_jurisdiction"
          },
          "key": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "State"
          },
          "order": {
            "type": "integer",
            "example": 1
          },
          "children": {
            "type": "array",
            "description": "list will be having multiple objecs with different values.",
            "items": {
              "title": "Child",
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "level_2_jurisdiction"
                },
                "key": {
                  "type": "integer",
                  "example": 43
                },
                "name": {
                  "type": "string",
                  "example": "Texas, State Courts"
                },
                "order": {
                  "type": "integer",
                  "example": 3
                },
                "children": {
                  "type": "array",
                  "description": "list will be having multiple objecs with different values.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "county_name": {
                        "type": "string",
                        "example": "Ngs"
                      },
                      "field": {
                        "type": "string",
                        "example": "court_system"
                      },
                      "key": {
                        "type": "integer",
                        "example": 171
                      },
                      "name": {
                        "type": "string",
                        "example": "Kings County Courts"
                      },
                      "order": {
                        "type": "integer",
                        "example": 1
                      },
                      "children": {
                        "type": "array",
                        "description": "list will be having multiple objecs with different values.",
                        "items": {
                          "title": "Child",
                          "properties": {
                            "children": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "field": {
                              "type": "string",
                              "example": "courthouse"
                            },
                            "key": {
                              "type": "integer",
                              "example": 684
                            },
                            "name": {
                              "type": "string",
                              "example": "Heman Marion Sweatt Travis County Courthouse"
                            },
                            "order": {
                              "type": "integer",
                              "example": 7
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CaseTypeFilter": {
        "title": "CaseTypeFilter",
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "example": "category"
          },
          "key": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Civil"
          },
          "order": {
            "type": "integer",
            "example": 1
          },
          "children": {
            "type": "array",
            "description": "list will be having multiple objecs with different values.",
            "items": {
              "title": "Child",
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "group"
                },
                "key": {
                  "type": "integer",
                  "example": 6
                },
                "name": {
                  "type": "string",
                  "example": "Tax"
                },
                "order": {
                  "type": "integer",
                  "example": 3
                },
                "children": {
                  "type": "array",
                  "description": "list will be having multiple objecs with different values.",
                  "items": {
                    "title": "Child",
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "example": "name"
                      },
                      "key": {
                        "type": "integer",
                        "example": 46
                      },
                      "name": {
                        "type": "string",
                        "example": "Tax Claim"
                      },
                      "order": {
                        "type": "integer",
                        "example": 1
                      },
                      "nos_code": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "example": 5
                        }
                      },
                      "children": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CaseStatusFilter": {
        "title": "CaseStatusFilter",
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "example": "category"
          },
          "key": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Pending"
          },
          "order": {
            "type": "integer",
            "example": 1
          },
          "children": {
            "type": "array",
            "description": "list will be having multiple objecs with different values.",
            "items": {
              "title": "Child",
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "name"
                },
                "key": {
                  "type": "integer",
                  "example": 6
                },
                "name": {
                  "type": "string",
                  "example": "Other Pending"
                },
                "order": {
                  "type": "integer",
                  "example": 3
                },
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "Case": {
        "type": "object",
        "properties": {
          "case_meta": {
            "$ref": "#/components/schemas/CaseMeta"
          },
          "parties": {
            "description": "A list of all parties involved in the case. Empty array if there are no parties for a case",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "attorneys": {
            "description": "A list of all attorneys involved in the case. Empty array if there are no attorneys for a case",
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Attorney"
            }
          },
          "judges": {
            "description": "A list of all judges involved in the case. Empty array if there are no judges for a case",
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Judge"
            }
          },
          "has_related_cases": {
            "type": "boolean",
            "description": "Flag to denote that UniCourt has identified and structured related cases for this case. Use the Related Case API to get relationships with other cases.",
            "example": true
          },
          "more_parties": {
            "type": "boolean",
            "description": "Flag to denote there are more parties, set as TRUE if there are more than 10 parties.",
            "example": false
          },
          "more_attorneys": {
            "type": "boolean",
            "description": "Flag to denote there are more attorneys, set as TRUE if there are more than 10 attorneys.",
            "example": false
          }
        },
        "required": [
          "case_meta",
          "has_related_cases",
          "parties",
          "attorneys",
          "judges",
          "more_parties",
          "more_attorneys"
        ]
      },
      "CaseMeta": {
        "type": "object",
        "required": [
          "case_number",
          "case_name",
          "filing_date",
          "last_updated_date",
          "last_update_changes_found",
          "participants_last_fetch",
          "case_type",
          "case_type_subcategory",
          "case_type_category",
          "case_status",
          "case_status_category",
          "courthouse",
          "jurisdiction",
          "county",
          "state",
          "case_id",
          "source_data"
        ],
        "properties": {
          "case_number": {
            "description": "Case number as provided by Court.",
            "type": "string",
            "maxLength": 50,
            "example": "2:19-BK-20033"
          },
          "case_name": {
            "description": "Case name as provided by Court.",
            "type": "string",
            "maxLength": 250,
            "example": "Mark C. Bonomi and Nicole A. Bonomi"
          },
          "filing_date": {
            "description": "Filing date for the case provided by the Court. Formatted as YYYY-MM-DD HH:MM:SS",
            "type": "string",
            "format": "date time",
            "pattern": "^(\\d{4})-(\\d?\\d)-(\\d?\\d) (?:(2[0-3]|[01]?[0-9])):([0-5]?[0-9]):([0-5]?[0-9])$",
            "example": "2019-01-04 00:00:00"
          },
          "last_updated_date": {
            "description": "The date and time when the case was last updated from the Court. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS Note: It is not necessary that every time the case is fetched from Court we find changes in the case information. It could be that we already have the latest information from the Court and no changes exist.",
            "type": "string",
            "format": "date time",
            "pattern": "^(\\d{4})-(\\d?\\d)-(\\d?\\d) (?:(2[0-3]|[01]?[0-9])):([0-5]?[0-9]):([0-5]?[0-9])$",
            "example": "2020-05-08 10:17:56"
          },
          "last_update_changes_found": {
            "description": "The date and time when the case was last fetched from the Court where we found changes in the case information. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS",
            "type": "string",
            "format": "date time",
            "pattern": "^(\\d{4})-(\\d?\\d)-(\\d?\\d) (?:(2[0-3]|[01]?[0-9])):([0-5]?[0-9]):([0-5]?[0-9])$",
            "example": "2020-04-25 10:42:46"
          },
          "participants_last_fetch": {
            "description": "The date and time when parties/attorneys were last updated from the Court. Formatted as YYYY-MM-DD HH:MM:SS Note: This is currently applicable for Federal PACER cases since we have an option to exclude parties and fetch only latest docket entries when updating cases to save PACER fees.",
            "type": "string",
            "format": "date time",
            "pattern": "^(\\d{4})-(\\d?\\d)-(\\d?\\d) (?:(2[0-3]|[01]?[0-9])):([0-5]?[0-9]):([0-5]?[0-9])$",
            "example": "2020-04-25 10:42:46"
          },
          "case_type": {
            "description": "UniCourt's standardized Case Type. Full list is available in Case Type Filter API.",
            "type": "string",
            "maxLength": 100,
            "example": "Chapter 13"
          },
          "case_type_subcategory": {
            "description": "UniCourt's standardized Case Type Sub-category. Full list is available in Case Type Filter API.",
            "type": "string",
            "maxLength": 100,
            "example": "Bankruptcy"
          },
          "case_type_category": {
            "type": "string",
            "description": "UniCourt's standardized Case Type Category. Full list is available in Case Type Filter API.",
            "maxLength": 100,
            "example": "Civil"
          },
          "case_status": {
            "description": "UniCourt's standardized Case Status. Full list is available in Case Status Filter API.",
            "type": "string",
            "maxLength": 250,
            "example": "Other Pending"
          },
          "case_status_category": {
            "type": "string",
            "description": "UniCourt's standardized Case Status Category. Full list is available in Case Status Filter API.",
            "maxLength": 100,
            "example": "Pending"
          },
          "courthouse": {
            "description": "UniCourt's standardized Courthouse name. Full list is available in Jurisdiction Filter API.",
            "type": "string",
            "maxLength": 100,
            "example": "Pennsylvania Western Bankruptcy"
          },
          "jurisdiction": {
            "description": "UniCourt's standardized Court System. Full list is available in Jurisdiction Filter API.",
            "maxLength": 100,
            "type": "string",
            "example": "U.S. Bankruptcy Courts"
          },
          "county": {
            "description": "The county that the court system belongs to. This is only applicable for State Court Systems. In case of Federal Court Systems this will be null.",
            "maxLength": 100,
            "type": "string",
            "nullable": true,
            "example": null
          },
          "state": {
            "$ref": "#/components/schemas/States"
          },
          "case_id": {
            "description": "Uniquely identifies this case in UniCourt.",
            "type": "string",
            "maxLength": 33,
            "example": "FFCBQHBOH4YESFISHNJWHCK4LZFQY0901"
          },
          "source_data": {
            "type": "object",
            "required": [
              "common",
              "pages"
            ],
            "properties": {
              "common": {
                "description": "Source data which is common across all the courts.",
                "type": "object",
                "required": [
                  "case_type",
                  "case_status",
                  "courthouse"
                ],
                "properties": {
                  "case_type": {
                    "description": "Source Case Type",
                    "type": "string",
                    "example": "CHAPTER 13"
                  },
                  "case_status": {
                    "description": "Source Case Status",
                    "type": "string",
                    "example": "PENDING"
                  },
                  "courthouse": {
                    "description": "Source courthouse",
                    "type": "string",
                    "example": "PAWBKE"
                  }
                }
              },
              "pages": {
                "description": "Source data from different pages in the court website.",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "source_page_name": {
                        "description": "Pages supported for PACER CASE_QUERY, DOCKET_REPORT, CASE_SUMMARY, ASSOCIATED_CASES, PACER_CASE_LOCATOR_RESULTS.",
                        "required": [
                          "first_fetch",
                          "last_fetch",
                          "raw_ordered_data",
                          "extracted_fields"
                        ],
                        "properties": {
                          "first_fetch": {
                            "description": "When was the page first fetched from the court site.",
                            "type": "string",
                            "example": "2020-05-08 10:17:55"
                          },
                          "last_fetch": {
                            "description": "When was the page last fetched from the court site.",
                            "type": "string",
                            "example": "2020-05-08 10:17:55"
                          },
                          "raw_ordered_data": {
                            "description": "Data in this array is ordered as it appears in source.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "order": {
                                  "description": "Sort order as it appears in the source.",
                                  "type": "integer",
                                  "example": 0
                                },
                                "source_field_name": {
                                  "description": "Label and its value as it appears in the source.",
                                  "type": "string",
                                  "nullable": true,
                                  "example": "\"Office\": \"Pittsburgh\""
                                }
                              }
                            },
                            "example": [
                              {
                                "order": 0,
                                "Office": "Pittsburgh",
                                "Filed": "01/04/2019"
                              },
                              {
                                "order": 1,
                                "County": "ALLEGHENY-PA",
                                "Terminated": null
                              }
                            ]
                          },
                          "extracted_fields": {
                            "description": "Data in this field is extracted from raw_ordered_data for easy access.",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Label and its value which has been extracted from raw_ordered_data."
                              },
                              {
                                "type": "string",
                                "example": null,
                                "nullable": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "string",
                    "example": null,
                    "nullable": true
                  }
                ]
              }
            }
          }
        }
      },
      "Party": {
        "type": "object",
        "required": [
          "party_id",
          "party_types",
          "entities",
          "fullname",
          "prefix",
          "suffix",
          "firstname",
          "middlename",
          "lastname",
          "entity_type",
          "norm_party_id"
        ],
        "properties": {
          "party_id": {
            "description": "ID for the party in this case. This ID is unique within a case and NOT across cases. If the same party were to appear in another case this ID would be different.",
            "type": "string",
            "maxLength": 33,
            "example": "GJGSCJJXJA4VEHQ3IROWZC3RNJOBM0919"
          },
          "party_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyType"
            }
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyEntity"
            }
          },
          "fullname": {
            "description": "Full name of the party as provided by Court.",
            "type": "string",
            "maxLength": 250,
            "example": "DE LA FUENTE JOE"
          },
          "prefix": {
            "type": "string",
            "nullable": true,
            "maxLength": 10
          },
          "suffix": {
            "type": "string",
            "nullable": true,
            "maxLength": 10
          },
          "firstname": {
            "description": "First name of the party. This is normalized by UniCourt.",
            "maxLength": 250,
            "type": "string",
            "example": "LA"
          },
          "middlename": {
            "description": "Middle name of the party. This is normalized by UniCourt.",
            "maxLength": 100,
            "nullable": true,
            "type": "string",
            "example": "FUENTE JOE"
          },
          "lastname": {
            "description": "Last name of the party. This is normalized by UniCourt.",
            "maxLength": 100,
            "nullable": true,
            "type": "string",
            "example": "DE"
          },
          "norm_party_id": {
            "description": "Normalized ID for Party. Use this ID in Search Cases API with attribute norm_party_id to get all cases involving this party. Use this ID in Norm APIs to get additional details for this entity and relationships with other entities.",
            "type": "string",
            "maxLength": 13,
            "nullable": true,
            "example": "3Ygn4ooAvNxAm"
          },
          "entity_type": {
            "$ref": "#/components/schemas/EntityType"
          }
        }
      },
      "PartyType": {
        "type": "object",
        "required": [
          "party_type",
          "active",
          "representation_type",
          "attorney_association"
        ],
        "properties": {
          "party_type": {
            "description": "UniCourt's standardized Party Type. Signifies how the party appears in this case; ex: defendant, plaintiff, etc... A party can show up as multiple party types within a case. This is the reason for the Party Type to be an array for a Party.",
            "type": "string",
            "maxLength": 250,
            "example": "Defendant"
          },
          "active": {
            "description": "Signifies if the party as this party type is currently active or not for the case.",
            "type": "boolean",
            "example": true
          },
          "representation_type": {
            "description": "UniCourt's standardized Party Representation Type. Signifies if the party is represented or not. If represented then whether the party is attorney represented or self represented.",
            "type": "string",
            "maxLength": 250,
            "example": "Unrepresented"
          },
          "attorney_association": {
            "description": "Lists the attorneys representing this party. Since a party can appear as multiple party types in a case (ex: both as defendant and cross-plaintiff), different attorneys can represent the party as different party types. This is the reason why the attorney association is made to a party type and not the party.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyAttorneyAssociation"
            }
          }
        }
      },
      "PartyAttorneyAssociation": {
        "type": "object",
        "required": [
          "attorney_type",
          "attorney_id",
          "active"
        ],
        "properties": {
          "attorney_type": {
            "description": "UniCourt's standardized Attorney Type. Signifies how the attorney appears in this case; ex: Lead Attorney, Pro-Hac-Vice, etc..",
            "type": "string",
            "maxLength": 250,
            "example": "Attorney"
          },
          "attorney_id": {
            "description": "ID for the attorney in this case. This ID is unique within a case and NOT across cases. If the same attorney were to appear in another case this ID would be different.",
            "maxLength": 33,
            "type": "string",
            "example": "EQ7RGFY6HQ6TCC35MQWF65TCLBCQ41013"
          },
          "active": {
            "description": "Signifies if the attorney as this attorney type is currently active or not for the case.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "PartyEntity": {
        "type": "object",
        "required": [
          "phones",
          "party_entity_id",
          "potentials"
        ],
        "properties": {
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phones"
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 50
            }
          },
          "party_entity_id": {
            "description": "Uniquely identifyies an entity for this party.",
            "maxLength": 33,
            "type": "string",
            "example": "GJGSCJJXJA4VEHQ3IROWZC3RNJOBM0919"
          },
          "potentials": {
            "description": "List of addresses for that party. Empty array if there are no potentials found for the party",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyPotential"
            }
          }
        }
      },
      "PartyPotential": {
        "type": "object",
        "required": [
          "party_potential_id",
          "court_verified",
          "address",
          "city",
          "state",
          "zipcode",
          "first_seen_date"
        ],
        "properties": {
          "party_potential_id": {
            "description": "Uniquely identifies a potential address for this party.",
            "type": "string",
            "maxLength": 33,
            "example": "E5BBMGRBH5ADIDUAM4XWO6LFLFEAQ1007"
          },
          "address": {
            "type": "string",
            "maxLength": 250,
            "example": "521 E. 213Th St."
          },
          "city": {
            "type": "string",
            "maxLength": 50,
            "example": "Carson"
          },
          "state": {
            "$ref": "#/components/schemas/States"
          },
          "zipcode": {
            "type": "string",
            "maxLength": 20,
            "example": "90745"
          },
          "first_seen_date": {
            "description": "The first date that this entity was seen at this location. Formatted as YYYY-MM-DD",
            "nullable": true,
            "type": "string"
          },
          "court_verified": {
            "description": "Signifies if the address location is sourced from the court case. If true then this is the confirmed location for the party.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "Attorney": {
        "type": "object",
        "required": [
          "attorney_id",
          "entities",
          "fullname",
          "firm",
          "bar_number",
          "prefix",
          "suffix",
          "firstname",
          "middlename",
          "lastname",
          "attorney_types",
          "norm_attorney_id",
          "norm_law_firm_id_list"
        ],
        "properties": {
          "attorney_id": {
            "description": "ID for the attorney in this case. This ID is unique within a case and NOT across cases. If the same attorney were to appear in another case this ID would be different.",
            "type": "string",
            "maxLength": 100,
            "example": "EQ7RGFY6HQ6TCC35MQWF65TCLBCQ41013"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttorneyEntity"
            }
          },
          "fullname": {
            "description": "Full name of the attorney as provided by Court.",
            "type": "string",
            "maxLength": 250,
            "example": "POMERANTZ ANDREW SLONE"
          },
          "firm": {
            "type": "string",
            "description": "Name of the attorney's firm as provided by Court. This can be null as some Court's do not provide this as a separate field.",
            "nullable": true,
            "maxLength": 250,
            "example": "Hoffman & Pomerantz LLP"
          },
          "bar_number": {
            "description": "the bar enrollment number of an attorney",
            "type": "string",
            "nullable": true,
            "maxLength": 250
          },
          "prefix": {
            "type": "string",
            "nullable": true,
            "maxLength": 10
          },
          "suffix": {
            "type": "string",
            "nullable": true,
            "maxLength": 10
          },
          "firstname": {
            "description": "First name of the attorney. This is normalized by UniCourt.",
            "type": "string",
            "maxLength": 250,
            "example": "POMERANTZ"
          },
          "middlename": {
            "description": "Middle name of the attorney. This is normalized by UniCourt.",
            "type": "string",
            "nullable": true,
            "maxLength": 100,
            "example": "ANDREW"
          },
          "lastname": {
            "description": "Last name of the attorney. This is normalized by UniCourt.",
            "type": "string",
            "nullable": true,
            "maxLength": 100,
            "example": "SLONE"
          },
          "norm_attorney_id": {
            "description": "Normalized ID for Attorney. Use this ID in Search Cases API with attribute norm_attorney_id to get all cases involving this attorney. Use this ID in Norm APIs to get additional details for this entity and relationships with other entities.",
            "type": "string",
            "nullable": true,
            "maxLength": 13,
            "example": "3Ygn4ooAvNxAm"
          },
          "norm_law_firm_id_list": {
            "description": "List of Normalized Law Firm ID’s that the Normalized Attorney ID belongs to, when representing this case. Use this ID in Search Cases API  with attribute norm_law_firm_id to get all cases involving this firm. Also use this in Norm APIs to get additional details for this entity and relationships with other entities.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "6ujpvRYtjZ59Z"
            ]
          },
          "attorney_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttorneyType"
            }
          }
        }
      },
      "AttorneyEntity": {
        "type": "object",
        "required": [
          "phones",
          "emails",
          "attorney_entity_id",
          "potentials"
        ],
        "properties": {
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phones"
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 50
            }
          },
          "attorney_entity_id": {
            "description": "Uniquely identifies an entity for this attorney.",
            "type": "string",
            "maxLength": 100,
            "example": "EQ7RGFY6HQ6TCC35MQWF65TCLBCQ41013"
          },
          "potentials": {
            "description": "List of addresses for that attorney. Empty array if there are no potentials found for the attorney",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttorneyPotential"
            }
          }
        }
      },
      "AttorneyType": {
        "type": "object",
        "required": [
          "attorney_type",
          "active"
        ],
        "properties": {
          "attorney_type": {
            "description": "UniCourt's standardized Attorney Type. Signifies how the attorney appears in this case; ex: Lead Attorney, Pro-Hac-Vice, etc..",
            "type": "string",
            "maxLength": 250,
            "example": "Attorney"
          },
          "active": {
            "description": "Signifies if the attorney as this attorney type is currently active or not for the case.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "AttorneyPotential": {
        "type": "object",
        "required": [
          "attorney_potential_id",
          "address",
          "city",
          "state",
          "zipcode",
          "court_verified"
        ],
        "properties": {
          "attorney_potential_id": {
            "description": "Uniquely identifies a potential address for this attorney.",
            "type": "string",
            "maxLength": 100,
            "example": "FZER2IJIDELD6GTVGFEGWJTIMNJBA0771"
          },
          "address": {
            "type": "string",
            "maxLength": 250,
            "example": "2521 1/2 W. Beverly Blvd.,"
          },
          "city": {
            "type": "string",
            "maxLength": 50,
            "example": "Montebello"
          },
          "state": {
            "$ref": "#/components/schemas/States"
          },
          "zipcode": {
            "type": "string",
            "maxLength": 20,
            "example": "90640"
          },
          "court_verified": {
            "description": "Signifies if the address location is sourced from the court case. If true then this is the confirmed location for the attorney.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "RelatedCases": {
        "type": "object",
        "properties": {
          "case_id": {
            "type": "string",
            "nullable": true,
            "example": "FRDRWHZGC43D2IUKHFLT7B3ALVIQ40913",
            "description": "Case ID of the related Case. This can be null if this case in not found in our database. However the meta information of the related case will be present."
          },
          "case_number": {
            "type": "string",
            "example": "CAC/3:19-cv-0001",
            "description": "Case Number of the related Case."
          },
          "case_name": {
            "type": "string",
            "nullable": true,
            "example": "Richard Jacob vs Johnson & Johnson",
            "description": "Case Name of the related Case."
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "description": "This specifies if the related cases is still related to the parent case or not."
          },
          "relationship_type": {
            "type": "string",
            "example": "MEMBER CASE",
            "description": "UniCourt's standardized Case Relationship Type."
          },
          "additional_info": {
            "description": "Contains any other additional info related to the related case",
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Any attribute related to the related case"
              }
            }
          }
        }
      },
      "Judge": {
        "type": "object",
        "required": [
          "judge_id",
          "fullname",
          "prefix",
          "suffix",
          "firstname",
          "middlename",
          "lastname",
          "judge_type",
          "judge_types",
          "norm_judge_id"
        ],
        "properties": {
          "judge_id": {
            "description": "ID for the judge in this case. This ID is unique within a case and NOT across cases. If the same Judge were to appear in another case this ID would be different.",
            "maxLength": 33,
            "type": "string",
            "example": "FVEBYIBHDAKRWGUDH5CU2F2CL5HQ60680"
          },
          "fullname": {
            "description": "Full name of the judge as provided by Court.",
            "type": "string",
            "maxLength": 250,
            "example": "Donald E Grincewicz"
          },
          "prefix": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "firstname": {
            "description": "First name of the judge. This is normalized by UniCourt.",
            "type": "string",
            "maxLength": 250,
            "example": "Donald"
          },
          "middlename": {
            "description": "Middle name of the judge. This is normalized by UniCourt.",
            "type": "string",
            "nullable": true,
            "maxLength": 100,
            "example": "E"
          },
          "lastname": {
            "description": "Last name of the judge. This is normalized by UniCourt.",
            "type": "string",
            "nullable": true,
            "maxLength": 100,
            "example": "Grincewicz"
          },
          "judge_type": {
            "description": "UniCourt's standardized Judge Type.",
            "type": "string",
            "maxLength": 250,
            "example": "NOT YET CLASSIFIED"
          },
          "norm_judge_id": {
            "description": "Normalized ID for Judge. Use this ID in Search Cases API with attribute norm_judge_id to get all cases involving this judge. Use this ID in Norm APIs to get additional details for this entity and relationships with other entities.",
            "type": "string",
            "nullable": true,
            "maxLength": 13,
            "example": "3Ygn4ooAvNxAm"
          },
          "judge_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JudgeType"
            }
          }
        }
      },
      "JudgeType": {
        "type": "object",
        "required": [
          "judge_type",
          "active"
        ],
        "properties": {
          "judge_type": {
            "description": "UniCourt's standardized Judge Type.",
            "type": "string",
            "maxLength": 250,
            "example": "NOT YET CLASSIFIED"
          },
          "active": {
            "description": "Signifies if the judge as this judge type is currently active or not for the case.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "EntityType": {
        "type": "string",
        "description": "To know the type of an entity in a case, if it is an Individual, Company or Other. An entity to a case could be the parties, attorneys or judges involved.",
        "maxLength": 250,
        "enum": [
          "Individual",
          "Company",
          "Other"
        ]
      },
      "States": {
        "type": "string",
        "maxLength": 2,
        "enum": [
          "AL",
          "AK",
          "AZ",
          "AR",
          "CA",
          "CO",
          "CT",
          "DE",
          "FL",
          "GA",
          "HI",
          "ID",
          "IL",
          "IN",
          "IA",
          "KS",
          "KY",
          "LA",
          "ME",
          "MD",
          "MA",
          "MI",
          "MN",
          "MS",
          "MO",
          "MT",
          "NE",
          "NV",
          "NH",
          "NJ",
          "NM",
          "NY",
          "NC",
          "ND",
          "OH",
          "OK",
          "OR",
          "PA",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VT",
          "VA",
          "WA",
          "DC",
          "WV",
          "WI",
          "WY",
          "PR",
          "MP",
          "GU"
        ]
      },
      "Phones": {
        "type": "object",
        "required": [
          "num",
          "type"
        ],
        "properties": {
          "num": {
            "type": "string",
            "example": "4564879845"
          },
          "type": {
            "type": "string",
            "example": "Default"
          }
        }
      },
      "DocketEntry": {
        "type": "object",
        "properties": {
          "document_id_list": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "PACER_TEST_D_1731448654"
            }
          },
          "order": {
            "type": "number",
            "example": 1
          },
          "boundary": {
            "type": "string",
            "example": "last",
            "enum": [
              "first",
              "last"
            ]
          },
          "text": {
            "type": "string",
            "maxLength": 99999,
            "description": "The lenght of this field can go beyond maxlength.",
            "example": "Petition"
          },
          "date": {
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2015-09-30"
          },
          "updated": {
            "type": "string",
            "format": "date time",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
            "example": "2018-04-28 10:17:20"
          }
        },
        "required": [
          "order",
          "text",
          "date",
          "updated"
        ]
      },
      "Document": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "string",
            "example": "5.00",
            "minLength": 3,
            "maxLength": 7,
            "nullable": true,
            "description": "Note: cost field is only available if the document has a cost and is yet to be downloaded."
          },
          "document_name": {
            "type": "string",
            "example": "9 #4",
            "minLength": 1,
            "maxLength": 1000
          },
          "description": {
            "type": "string",
            "example": "Exhibit A",
            "minLength": 1,
            "maxLength": 99999,
            "description": "The lenght of this field can go beyond maxlength."
          },
          "downloaded_date": {
            "type": "string",
            "format": "date time",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{6}$",
            "example": "2018-04-17 10:19:27.077732",
            "description": "Note: downloaded_date field is only available if the document is already been downloaded."
          },
          "pages": {
            "type": "string",
            "example": "2",
            "minLength": 1,
            "maxLength": 5
          }
        },
        "required": [
          "document_name",
          "pages"
        ]
      },
      "DocumentItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "PROOF OF SERVICE OF SUMMONS"
          },
          "description": {
            "type": "string",
            "example": "5/27/2016: PROOF OF SERVICE OF SUMMONS"
          },
          "cost": {
            "type": "string",
            "example": "3.80"
          }
        },
        "required": [
          "name",
          "description",
          "cost"
        ]
      },
      "DocumentStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Download In Progress"
          },
          "message": {
            "type": "string",
            "example": ""
          }
        },
        "required": [
          "status",
          "message"
        ]
      },
      "FetchParticipants": {
        "type": "object",
        "properties": {
          "fetch_if_older_than": {
            "type": "integer",
            "example": 30
          }
        },
        "required": [
          "fetch_if_older_than"
        ]
      },
      "AdditionalPage": {
        "type": "object",
        "properties": {
          "page": {
            "type": "string",
            "enum": [
              "ASSOCIATED_CASES",
              "CASE_SUMMARY"
            ],
            "example": "ASSOCIATED_CASES"
          },
          "fetch_if_older_than": {
            "type": "integer",
            "example": 30
          }
        },
        "required": [
          "page",
          "fetch_if_older_than"
        ]
      },
      "Tracking": {
        "type": "object",
        "properties": {
          "tracking_schedule_id": {
            "type": "string",
            "example": "1"
          },
          "tracking_name": {
            "type": "string",
            "example": "Every Day"
          },
          "folder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingFolder"
            }
          }
        },
        "required": [
          "tracking_schedule_id",
          "tracking_name",
          "folder"
        ]
      },
      "TrackingFolder": {
        "type": "object",
        "properties": {
          "folder_id": {
            "type": "string",
            "example": "2"
          },
          "folder_name": {
            "type": "string",
            "example": "My Folder"
          },
          "case_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "GBFR6IZVIY3VAHAZIJNGVCTENBKRS0908\", \"HBJSOKZ5JY7VQJBBJJRHNCLWNJMRY0898"
            }
          }
        },
        "required": [
          "folder_id",
          "folder_name",
          "case_ids"
        ]
      },
      "FailedTrack": {
        "type": "object",
        "properties": {
          "case_id": {
            "type": "string",
            "example": "EE6BAFA3HE5C4CD2LYUVNAC3KNDQK1010"
          },
          "message": {
            "type": "string",
            "description": "Error message is based on the error type."
          }
        },
        "required": [
          "case_id",
          "message"
        ]
      },
      "AccountUsage": {
        "type": "object",
        "properties": {
          "case_tracking": {
            "type": "string",
            "default": "0",
            "example": "0"
          },
          "party_finders": {
            "type": "string",
            "default": "0",
            "example": "0"
          },
          "case_updates": {
            "type": "string",
            "default": "0",
            "example": "0"
          },
          "searches": {
            "type": "string",
            "default": "0",
            "example": "0"
          },
          "scheduled_searches": {
            "type": "string",
            "default": "0",
            "example": "0"
          },
          "case_export": {
            "type": "string",
            "default": "0",
            "example": "0"
          },
          "documents_ordered": {
            "type": "string",
            "default": "0",
            "example": "0"
          },
          "api": {
            "type": "object",
            "properties": {
              "api_groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiGroupCount"
                }
              },
              "search_cases": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiCount"
                }
              },
              "case_details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiCount"
                }
              },
              "order_document": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiCount"
                }
              },
              "update_case": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiCount"
                }
              },
              "track_cases": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiCount"
                }
              },
              "account_details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiCount"
                }
              }
            },
            "required": [
              "api_groups",
              "search_cases",
              "case_details",
              "order_document",
              "update_case",
              "track_cases",
              "account_details"
            ]
          }
        },
        "required": [
          "case_tracking",
          "party_finders",
          "case_updates",
          "searches",
          "scheduled_searches",
          "case_export",
          "documents_ordered",
          "api"
        ]
      },
      "ApiGroupCount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Chargeable APIs"
          },
          "requestCount": {
            "type": "string",
            "default": "0",
            "example": "103"
          },
          "apiList": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Case\", \"Search"
            }
          }
        },
        "required": [
          "name",
          "requestCount",
          "apiList"
        ]
      },
      "ApiCount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Api name"
          },
          "requestCount": {
            "type": "string",
            "default": "0",
            "example": "103"
          }
        },
        "required": [
          "name",
          "requestCount"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Paid"
          },
          "invoice_number": {
            "type": "number",
            "example": 4556
          },
          "total": {
            "type": "string",
            "example": "39.00"
          },
          "billed_on": {
            "type": "string",
            "format": "date time",
            "pattern": "^[0-9]{2}\\/[0-9]{2}\\/[0-9]{4} [0-9]{2}:[0-9]{2}$",
            "example": "07/04/2018 12:34"
          }
        },
        "required": [
          "status",
          "invoice_number",
          "total",
          "billed_on"
        ]
      },
      "Folder": {
        "type": "object",
        "properties": {
          "folder_id": {
            "type": "string",
            "example": "2"
          },
          "folder_name": {
            "type": "string",
            "example": "My Folders"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2017-12-28"
          },
          "last_updated_date": {
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2018-08-21"
          },
          "folders": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubFolder"
            }
          }
        },
        "required": [
          "folder_id",
          "folder_name",
          "created_date",
          "last_updated_date",
          "folders"
        ]
      },
      "SubFolder": {
        "type": "object",
        "properties": {
          "folder_id": {
            "type": "string",
            "example": "4"
          },
          "folder_name": {
            "type": "string",
            "example": "Intellectual Property"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2017-01-20"
          },
          "last_updated_date": {
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2018-07-02"
          },
          "folders": {
            "type": "array",
            "nullable": true,
            "description": "May contains SubFolders (SubFolder Schema)",
            "items": {}
          }
        },
        "required": [
          "folder_id",
          "folder_name",
          "created_date",
          "last_updated_date",
          "folders"
        ]
      },
      "TrackingSchedule": {
        "type": "object",
        "properties": {
          "tracking_schedule_id": {
            "type": "string",
            "example": "1"
          },
          "tracking_name": {
            "type": "string",
            "example": "Daily"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2017-12-28"
          },
          "last_updated_date": {
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "example": "2017-12-28"
          },
          "scheduled": {
            "type": "string",
            "example": "Daily"
          },
          "case_tracked": {
            "type": "string",
            "example": "1"
          },
          "is_default": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "tracking_schedule_id",
          "tracking_name",
          "created_date",
          "last_updated_date",
          "scheduled",
          "case_tracked",
          "is_default"
        ]
      },
      "SavedSearchQuery": {
        "type": "object",
        "properties": {
          "search_terms": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Motion to Dismiss"
            }
          },
          "scope": {
            "type": "string",
            "example": "Contains Any"
          },
          "attribute": {
            "type": "string",
            "example": "Docket"
          },
          "proximity": {
            "type": "string",
            "example": "Next To Each Other"
          },
          "condition": {
            "type": "string",
            "example": "AND"
          }
        },
        "required": [
          "search_terms",
          "scope",
          "attribute",
          "proximity"
        ]
      },
      "SavedSearchFilter": {
        "type": "object",
        "properties": {
          "filter_type": {
            "type": "string",
            "description": "Based on the filter, the filter_type will have the value.",
            "enum": [
              "jurisdiction",
              "case_type",
              "case_status",
              "filing_date",
              "created_date"
            ],
            "example": "jurisdiction"
          },
          "field": {
            "type": "string",
            "description": "Based on the filter_type, the corresponding value field will have.",
            "example": "courthouse"
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "number",
              "description": "Based on the filter_type and field, the key will have values.",
              "example": 360
            }
          }
        },
        "required": [
          "filter_type",
          "field",
          "keys"
        ]
      }
    }
  }
}