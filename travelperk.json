{
  "openapi": "3.0.0",
  "info": {
    "title": "Travelperk API",
    "description": "Contact Support:\n Name: Open API squad",
    "version": "1.0",
    "x-logo": {
      "url": "https://logo.clearbit.com/travelperk.com"
    }
  },
  "servers": [
    {
      "url": "https://api.staging-travelperk.com"
    },
    {
      "url": "https://app.travelperk.com/api/v2/scim"
    }
  ],
  "paths": {
    "/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "List invoices",
        "description": "List all invoices",
        "operationId": "Listinvoices",
        "parameters": [
          {
            "name": "profile_id",
            "in": "query",
            "description": "Filter, only fetch invoices that match any invoice.profile.id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serial_number",
            "in": "query",
            "description": "Filter, only fetch invoices that exactly match one of the provided serial numbers",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serial_number_contains",
            "in": "query",
            "description": "Filter, only fetch invoices that partially match invoice.serial_number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing_period",
            "in": "query",
            "description": "Filter, only fetch invoices that match invoice.config.billing_period",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "travelperk_bank_account_number",
            "in": "query",
            "description": "Filter, only fetch invoices that match invoice.tk_bank_account.account_number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_country_name",
            "in": "query",
            "description": "Filter, only fetch invoices that match invoice.customer_billing_address.country_name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter, only fetch invoices that match invoice.status",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuing_date_gte",
            "in": "query",
            "description": "Filter, only fetch invoices where invoice.issuing_date is greater than or equal to this date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuing_date_lte",
            "in": "query",
            "description": "Filter, only fetch invoices where invoice.issuing_date is greater than or equal to this date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "due_date_gte",
            "in": "query",
            "description": "Filter, only fetch invoices where invoice.due_date is greater than or equal to this date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "due_date_lte",
            "in": "query",
            "description": "Filter, only fetch invoices where invoice.due_date is less than or equal to this date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination maximum number of elements to return",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset index, 0 based. sort must be specified if this is specified.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria on fields in Invoice",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/invoices/lines": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "List invoice lines",
        "description": "List all invoice lines",
        "operationId": "Listinvoicelines",
        "parameters": [
          {
            "name": "profile_id",
            "in": "query",
            "description": "The unique identifier of one or more profiles to use for filtering the invoices.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serial_number",
            "in": "query",
            "description": "The serial number of one or more invoices to get. They must be complete/exact matches.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serial_number_contains",
            "in": "query",
            "description": "Filter, only fetch lines on invoices that partially match invoice.serial_number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing_period",
            "in": "query",
            "description": "The type of billing period of the invoices to get. See the billing_period attribute of the Invoice model for more details.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "travelperk_bank_account_number",
            "in": "query",
            "description": "Filters the invoices that need to be paid against a specific TravelPerkâ€™s bank account, using its account number. See the tk_bank_account attribute of the Invoice model for more detail",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filters the invoices based on its current status. See the status attribute of the Invoice model for more details.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuing_date_gte",
            "in": "query",
            "description": "Includes only the invoices that were issued from the provided date onwards (inclusive).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuing_date_lte",
            "in": "query",
            "description": "Includes only the invoices that were issued until the provided date (inclusive).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "due_date_gte",
            "in": "query",
            "description": "Includes only the lines from invoices that are due from the provided date onwards (inclusive).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "due_date_lte",
            "in": "query",
            "description": "Includes only the lines from invoices that are due until the provided date (inclusive).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expense_date_gte",
            "in": "query",
            "description": "Includes only the lines where the expense was incurred from the provided date onwards (inclusive).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expense_date_lte",
            "in": "query",
            "description": "Includes only the lines where the expense was incurred until the provided date (inclusive).",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination maximum number of elements to return",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset index, 0 based.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey {{ApiKey}}"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLines"
                },
                "example": {
                  "offset": null,
                  "limit": null,
                  "total": 1,
                  "invoice_lines": [
                    {
                      "expense_date": "2020-02-22T00:00:00.000Z",
                      "description": "Reduce tough fast amount whether light prepare sport.",
                      "quantity": 2,
                      "unit_price": "838.73818336",
                      "non_taxable_unit_price": "801.80919943",
                      "tax_percentage": "0",
                      "tax_amount": 0,
                      "tax_regime": "G-VAT-R",
                      "total_amount": "1677.47636672",
                      "metadata": null,
                      "related_item_id": "S8538",
                      "invoice_serial_number": "INV-02-1",
                      "profile_id": "f2f5470b-b65b-4aa6-8973-259089eb1cad",
                      "profile_name": "",
                      "invoice_mode": "credit-gross",
                      "invoice_status": "open",
                      "issuing_date": "2019-06-16T00:00:00.000Z",
                      "due_date": "2019-06-24T00:00:00.000Z",
                      "currency": "FJD"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/invoices/{serial_number}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Retrieve an invoice",
        "description": "Get invoice detail",
        "operationId": "Retrieveaninvoice",
        "parameters": [
          {
            "name": "serial_number",
            "in": "path",
            "description": "(Required) Invoice.serial_number (unique Invoice identifier for external use)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/invoices/{serial_number}/pdf": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Retrieve invoice PDF",
        "description": "Download invoice in PDF format",
        "operationId": "RetrieveinvoicePDF",
        "parameters": [
          {
            "name": "serial_number",
            "in": "path",
            "description": "(Required) Invoice.serial_number (unique Invoice identifier for external use)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "example": "<binary>"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/profiles": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "List invoice profiles",
        "description": "List all invoice profiles associated to this account",
        "operationId": "Listinvoiceprofiles",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesProfiles"
                },
                "example": {
                  "offset": 0,
                  "limit": 2,
                  "total": 2,
                  "profiles": [
                    {
                      "id": "f2dd1aa3-5601-4725-a520-bd59885bbb16",
                      "name": "",
                      "payment_method_type": "automatic",
                      "billing_period": "instant",
                      "currency": "DOP",
                      "billing_information": {
                        "legal_name": "Story music sister.Mock",
                        "vat_number": null,
                        "address_line_1": "160 Republican.",
                        "address_line_2": "Upon.",
                        "city": "record",
                        "postal_code": "37076",
                        "country_name": "Central African Republic"
                      }
                    },
                    {
                      "id": "8fa66535-5a9a-4a6f-90d8-2986621a706a",
                      "name": "",
                      "payment_method_type": "manual",
                      "billing_period": "monthly",
                      "currency": "CLP",
                      "billing_information": {
                        "legal_name": "With something.Mock",
                        "vat_number": null,
                        "address_line_1": "295 Time.",
                        "address_line_2": "Heart.",
                        "city": "none",
                        "postal_code": "35277",
                        "country_name": "Serbia"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "{webhook id}"
        ],
        "summary": "Get webhook",
        "description": "Get webhook detail",
        "operationId": "Getwebhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "A webhook id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                },
                "example": {
                  "id": "f2dd1aa3-5601-4725-a520-bd59885bbb16",
                  "name": "invoice webhook",
                  "url": "http://www.example.com/process_tk_webhook",
                  "status": "enabled",
                  "topics": [
                    {
                      "name": "invoice",
                      "events": [
                        {
                          "name": "issued",
                          "description": "An invoice is issued"
                        }
                      ]
                    },
                    {
                      "name": "invoiceline",
                      "events": [
                        {
                          "name": "created",
                          "description": "An invoice line is created"
                        }
                      ]
                    }
                  ],
                  "successfully_sent": 54,
                  "failed_sent": 2,
                  "error_rate": 0.12
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      },
      "patch": {
        "tags": [
          "{webhook id}"
        ],
        "summary": "Update webhook",
        "description": "Get webhook detail",
        "operationId": "Updatewebhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "A webhook id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatewebhookRequest"
              },
              "example": {
                "url": "http://localhost:8000/travelperk_webhook/notify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                },
                "example": {
                  "id": "f2dd1aa3-5601-4725-a520-bd59885bbb16",
                  "name": "invoice webhook",
                  "url": "http://www.example.com/process_tk_webhook",
                  "status": "enabled",
                  "topics": [
                    {
                      "name": "invoice",
                      "events": [
                        {
                          "name": "issued",
                          "description": "An invoice is issued"
                        }
                      ]
                    },
                    {
                      "name": "invoiceline",
                      "events": [
                        {
                          "name": "created",
                          "description": "An invoice line is created"
                        }
                      ]
                    }
                  ],
                  "successfully_sent": 54,
                  "failed_sent": 2,
                  "error_rate": 0.12
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      },
      "delete": {
        "tags": [
          "{webhook id}"
        ],
        "summary": "Delete webhook",
        "description": "Deletes a webhook",
        "operationId": "Deletewebhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "A webhook id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/webhooks/{webhook_id}/test": {
      "post": {
        "tags": [
          "{webhook id}"
        ],
        "summary": "Test callback",
        "description": "Update webhook details",
        "operationId": "Testcallback",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "A webhook id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "List webhook subscriptions",
        "description": "List all webhooks associated to this account",
        "operationId": "Listwebhooksubscriptions",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apageofWebhooks"
                },
                "example": {
                  "offset": 0,
                  "limit": 2,
                  "total": 2,
                  "webhooks": [
                    {
                      "id": "f2dd1aa3-5601-4725-a520-bd59885bbb16",
                      "name": "invoice webhook",
                      "url": "http://www.example.com/process_tk_webhook",
                      "status": "enabled",
                      "topics": [
                        {
                          "name": "invoice",
                          "events": [
                            {
                              "name": "issued",
                              "description": "An invoice is issued"
                            }
                          ]
                        },
                        {
                          "name": "invoiceline",
                          "events": [
                            {
                              "name": "created",
                              "description": "An invoice line is created"
                            }
                          ]
                        }
                      ],
                      "successfully_sent": 54,
                      "failed_sent": 2,
                      "error_rate": 0.12
                    },
                    {
                      "id": "8fa66535-5a9a-4a6f-90d8-2986621a706a",
                      "name": "trips webhook",
                      "url": "http://www.example.com/process_tk_webhook",
                      "status": "disabled",
                      "topics": [
                        {
                          "name": "trip",
                          "events": [
                            {
                              "name": "created",
                              "description": "A trip is created"
                            },
                            {
                              "name": "updated",
                              "description": "An trip is updated"
                            }
                          ]
                        }
                      ],
                      "successfully_sent": 12,
                      "failed_sent": 20,
                      "error_rate": 0.64
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Subscribe to events",
        "description": "Subscribe to webhook",
        "operationId": "Subscribetoevents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribetoeventsRequest"
              },
              "example": {
                "name": "invoice webhook",
                "url": "https://postman-echo.com/post",
                "secret": "some secret",
                "events": [
                  "invoice.issued",
                  "invoiceline.created"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/webhooks/events": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "List events",
        "description": "List all subscribable topics and their events",
        "operationId": "Listevents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topics"
                },
                "example": {
                  "topics": [
                    {
                      "name": "invoice",
                      "events": [
                        {
                          "name": "issued",
                          "description": "An invoice is issued"
                        }
                      ]
                    },
                    {
                      "name": "invoiceline",
                      "events": [
                        {
                          "name": "created",
                          "description": "An invoice line is created"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/Users/{UserId}": {
      "patch": {
        "tags": [
          "Update user attributes"
        ],
        "summary": "Update user first name",
        "description": "Generic Patch operation",
        "operationId": "Updateuserfirstname",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "UserId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateuserfirstnameRequest"
              },
              "example": {
                "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
                "Operations": [
                  {
                    "op": "replace",
                    "path": "name.givenName",
                    "value": "First name of the user."
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      },
      "put": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "Replace user",
        "operationId": "Replaceuser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "UserId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceuserRequest"
              },
              "example": {
                "schemas": [
                  "urn:ietf:params:scim:schemas:core:2.0:User",
                  "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
                  "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User"
                ],
                "userName": "valid email address (REQUIRED)",
                "active": "boolean true (REQUIRED)",
                "name": {
                  "givenName": "First name of the user (REQUIRED).",
                  "familyName": "Last name of the user (REQUIRED).",
                  "middleName": "Middle name of the user.",
                  "honorificPrefix": "Salutation of the user.. e.g. Ms."
                },
                "externalId": "Scim id of the user. Usually an external reference of the user in a system external to Travelperk.",
                "title": "Title of the user. E.g. CEO.",
                "preferredLanguage": "User language, supported values: en, es, fr, de.",
                "locale": "User locale for localization purposes, e.g. en, en-gb, es, es-co, fr, de.",
                "phoneNumbers": [
                  {
                    "value": "Phone number of the user. Example: +34 000000000.",
                    "type": "work"
                  }
                ],
                "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
                  "costCenter": "Cost center name. It needs to exist in Travelperk."
                },
                "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User": {
                  "gender": "User gender. accepted values: M, F.",
                  "dateOfBirth": "Date of birth in format YYYY-MM-DD.",
                  "travelPolicy": "Travel policy name. It needs to exist in Travelperk.",
                  "invoiceProfiles": [
                    {
                      "value": "Invoice profile name. It needs to exists in Travelperk."
                    }
                  ],
                  "emergencyContact": {
                    "name": "Name of the contact",
                    "phone": "Phone number of the contact. Example: +34 123456789"
                  },
                  "approvers": [
                    {
                      "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
                    }
                  ],
                  "countryOfResidence": "Code of the country. E.g. ES",
                  "travelDocuments": [
                    {
                      "documentType": "The type of the document. Either 'passport' or id'",
                      "documentNumber": "The number of the document.",
                      "givenName": "The first name of the user as stated in the document.",
                      "middleName": "The middle name of the user as stated in the document, if any.",
                      "familyName": "The last name of the user as stated in the document.",
                      "gender": "The gender of the user. Either 'F' or 'M'.",
                      "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
                      "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
                      "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
                      "citizenship": "The country code of the citizenship of the user (e.g. ES)"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      },
      "get": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "Retrieve User",
        "operationId": "RetrieveUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "UserId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      },
      "delete": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "Delete User",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "UserId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      }
    },
    "/Users": {
      "post": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "Create User",
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {
                "schemas": [
                  "urn:ietf:params:scim:schemas:core:2.0:User",
                  "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
                  "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User"
                ],
                "userName": "valid email address (REQUIRED)",
                "active": "boolean true (REQUIRED)",
                "name": {
                  "givenName": "First name of the user (REQUIRED).",
                  "familyName": "Last name of the user (REQUIRED).",
                  "middleName": "Middle name of the user.",
                  "honorificPrefix": "Salutation of the user.. e.g. Ms."
                },
                "externalId": "Scim id of the user. Usually an external reference of the user in a system external to Travelperk.",
                "title": "Title of the user. E.g. CEO.",
                "preferredLanguage": "User laguage, supported values: en, es, fr, de.",
                "locale": "User locale for localization purposes, e.g. en, en-gb, es, es-co, fr, de.",
                "phoneNumbers": [
                  {
                    "value": "Phone number of the user. Example: +34 000000000.",
                    "type": "work"
                  }
                ],
                "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
                  "costCenter": "Cost center name. It needs to exist in Travelperk."
                },
                "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User": {
                  "gender": "User gender. accepted values: M, F.",
                  "dateOfBirth": "Date of birth in format YYYY-MM-DD.",
                  "travelPolicy": "Travel policy name. It needs to exist in Travelperk.",
                  "invoiceProfiles": [
                    {
                      "value": "Invoice profile name. It needs to exists in Travelperk."
                    }
                  ],
                  "emergencyContact": {
                    "name": "Name of the contact",
                    "phone": "Phone number of the contact. Example: +34 123456789"
                  },
                  "approvers": [
                    {
                      "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
                    }
                  ],
                  "countryOfResidence": "Code of the country. E.g. ES",
                  "travelDocuments": [
                    {
                      "documentType": "The type of the document. Either 'passport' or id'",
                      "documentNumber": "The number of the document.",
                      "givenName": "The first name of the user as stated in the document.",
                      "middleName": "The middle name of the user as stated in the document, if any.",
                      "familyName": "The last name of the user as stated in the document.",
                      "gender": "The gender of the user. Either 'F' or 'M'.",
                      "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
                      "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
                      "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
                      "citizenship": "The country code of the citizenship of the user (e.g. ES)"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      },
      "get": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "List Users",
        "operationId": "ListUsers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      }
    },
    "/Schemas": {
      "get": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "List Schemas",
        "operationId": "ListSchemas",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      }
    },
    "/Schemas/urn:ietf:params:scim:schemas:core:2.0:User": {
      "get": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "Retrieve User Schema",
        "operationId": "RetrieveUserSchema",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      }
    },
    "/Schemas/urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
      "get": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "Retrieve Enterprise User Schema",
        "operationId": "RetrieveEnterpriseUserSchema",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      }
    },
    "/ServiceProviderConfig": {
      "get": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "Retrieve ServiceProviderConfig",
        "operationId": "RetrieveServiceProviderConfig",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      }
    },
    "/ResourceTypes": {
      "get": {
        "tags": [
          "SCIM user provisioning"
        ],
        "summary": "Retrieve ResourceTypes",
        "operationId": "RetrieveResourceTypes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://app.travelperk.com/api/v2/scim"
          }
        ]
      }
    },
    "/travelsafe/guidelines": {
      "get": {
        "tags": [
          "TravelSafe"
        ],
        "summary": "Guidelines",
        "operationId": "Guidelines",
        "parameters": [
          {
            "name": "location_type",
            "in": "query",
            "description": "Filter, defines the type of location passed in `location`. Options are: `country_code`",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Filter, the guidelines for this location. Format depends on the `destination_type`: \n* country_code: country ISO 2 code",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language that the response will be in. Options: `en`, `es`, `de`, `fr`, `it`. Default: `en`",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidelinesfortheCzechRepublic"
                },
                "example": {
                  "details": "COVID-19",
                  "location": {
                    "name": "Czechia",
                    "country_code": "CZ",
                    "type": "country"
                  },
                  "updated_at": "2020-10-22T00:00:07+00:00",
                  "guidelines": [
                    {
                      "details": "On October 5 a 'State of Emergency' has been declared and many cultural and entertainment venues have closed until further notice. Social gatherings are limited to 10 people indoors and 20 people outdoors. We recommend keeping up-to-date with official guidelines throughout your trip.",
                      "category": {
                        "id": "government_measures",
                        "name": "Government measures"
                      },
                      "sub_category": {
                        "id": "state_of_emergency",
                        "name": "State of emergency"
                      },
                      "severity": "3/3",
                      "summary": "The local government has declared a state of emergency."
                    },
                    {
                      "details": "Bars are closed to limit the rate of transmission. Additionally, the consumption of alcohol in public spaces is prohibited.",
                      "category": {
                        "id": "bars",
                        "name": "Bars"
                      },
                      "sub_category": {
                        "id": "closed",
                        "name": "Closed"
                      },
                      "severity": "3/3",
                      "summary": "Bars are closed."
                    },
                    {
                      "details": "Shops are open with adapted safety measures in place, such as the use of hand sanitizer and social distancing. Some non-essential businesses remain open and must operate with strict preventative health measures.",
                      "category": {
                        "id": "shops",
                        "name": "Shops"
                      },
                      "sub_category": {
                        "id": "restrictions_in_place",
                        "name": "Restrictions in place"
                      },
                      "severity": "2/3",
                      "summary": "Shops are open with restrictions in place."
                    },
                    {
                      "details": "Restaurants are open for take-away or delivery services only and must close by 8 pm.",
                      "category": {
                        "id": "restaurants",
                        "name": "Restaurants"
                      },
                      "sub_category": {
                        "id": "restrictions_in_place",
                        "name": "Restrictions in place"
                      },
                      "severity": "2/3",
                      "summary": "Restaurants are open with restrictions in place."
                    },
                    {
                      "details": "Nightclubs are closed to limit the rate of transmission. Additionally, the consumption of alcohol in public spaces is prohibited.",
                      "category": {
                        "id": "nightclubs",
                        "name": "Nightclubs"
                      },
                      "sub_category": {
                        "id": "closed",
                        "name": "Closed"
                      },
                      "severity": "3/3",
                      "summary": "Nightclubs remain closed to limit the rate of transmission."
                    },
                    {
                      "details": "Public transportation is operating with social distancing rules in place.",
                      "category": {
                        "id": "public_transportation",
                        "name": "Public transportation"
                      },
                      "sub_category": {
                        "id": "restrictions_in_place",
                        "name": "Restrictions in place"
                      },
                      "severity": "2/3",
                      "summary": "Public transportation is operating with restrictions."
                    },
                    {
                      "details": "Face masks are required in all indoor and outdoor public spaces, including on public transport.",
                      "category": {
                        "id": "use_of_mask",
                        "name": "Use of mask"
                      },
                      "sub_category": {
                        "id": "required",
                        "name": "Required"
                      },
                      "severity": "3/3",
                      "summary": "Face masks are required."
                    }
                  ],
                  "risk_level": {
                    "id": "medium",
                    "name": "medium",
                    "details": "COVID-19 transmission is medium in Czechia. The transmission level is based on global health and disease data from John Hopkins University, updated October 2020."
                  },
                  "summary": "While traveling in Czechia you will be required to follow the guidelines introduced by the local government. These regulations are based on risk levels and aimed at improving your safety."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/travelsafe/restrictions": {
      "get": {
        "tags": [
          "TravelSafe"
        ],
        "summary": "Restrictions",
        "operationId": "Restrictions",
        "parameters": [
          {
            "name": "destination",
            "in": "query",
            "description": "Filter, returns the most restrictive and narrow restrictions that match this destination. Format depends on the `destination_type`: \n* country_code: country ISO 2 code",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_type",
            "in": "query",
            "description": "Filter, defines the type of location passed in `destination`. Options are: `country_code`",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Filter, returns the most restrictive and narrow restrictions that match this origin. Format depends on the `origin_type`: \n* country_code: country ISO 2 code",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "origin_type",
            "in": "query",
            "description": "Filter, defines the type of location passed in `origin`. Options are: `country_code`",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filter, returns restrictions that are active in this date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language that the response will be in. Options: `en`, `es`, `de`, `fr`, `it`. Default: `en`",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestrictionsfromIT-NLthe2020-09-29"
                },
                "example": {
                  "origin": {
                    "name": "Netherlands",
                    "country_code": "NL",
                    "type": "country"
                  },
                  "destination": {
                    "name": "Italy",
                    "country_code": "IT",
                    "type": "country"
                  },
                  "authorization_status": "restricted",
                  "requirements": [
                    {
                      "category": {
                        "id": "test_medical_certificate",
                        "name": "Test/medical certificate"
                      },
                      "sub_category": {
                        "id": "test_medical_certificate_required",
                        "name": "Test/medical certificate required"
                      },
                      "details": "If a 'high-risk' country been visited in the past 14 days, a negative PCR test certificate must be presented on departure. The test must be taken no more than 72 hours before the intended travel date. \r\n\r\nThere is also the option to be tested on arrival, either at the airport or at a facility. Travelers tested on arrival will be required to self-isolate until a negative test result has been rendered. If the test result is positive, quarantine is required until two consecutive negative tests have been recorded.",
                      "start_date": "2020-09-07",
                      "documents": [],
                      "summary": "A medical certificate or recent test is required to travel to this destination"
                    },
                    {
                      "category": {
                        "id": "additional_documentation",
                        "name": "Additional documentation"
                      },
                      "sub_category": {
                        "id": "additional_document_needed",
                        "name": "Additional documents required"
                      },
                      "details": "A completed 'self-declaration form' must be presented prior to boarding.",
                      "start_date": "2020-09-07",
                      "documents": [
                        {
                          "name": "Self-declaration form",
                          "document_url": "https://www.esteri.it/mae/resource/doc/2020/09/modulo_rientro_da_estero_11_09_20_en.pdf"
                        }
                      ],
                      "summary": "There is additional documentation required to travel between these two locations"
                    },
                    {
                      "category": {
                        "id": "other_restrictions",
                        "name": "Other restrictions"
                      },
                      "sub_category": {
                        "id": "other_restrictions",
                        "name": "Other restrictions"
                      },
                      "details": "Even if a test is not required, travelers must call the COVID-19 helpline for the region they are visiting within 48 hours after arrival to inform them of the visit.\r\n\r\nMore information and regional helplines can be found at http://www.salute.gov.it/portale/nuovocoronavirus/dettaglioContenutiNuovoCoronavirus.jsp?lingua=english&id=5371&area=nuovoCoronavirus&menu=vuoto",
                      "start_date": "2020-09-07",
                      "documents": [],
                      "summary": "There are other restrictions in place to travel to this destination"
                    }
                  ],
                  "details": "On September 7, the Italian government updated entry restrictions in alignment with the European Commission. It is necessary to comply with requirements to ensure entry is permitted.\r\n\r\nArrivals may be required to self-isolate for 14 days on arrival if they have visited a 'high-risk' country in the previous 14 days. \r\n\r\nMore details and exceptions can be found at https://www.esteri.it/mae/en/ministero/normativaonline/decreto-iorestoacasa-domande-frequenti/focus-cittadini-italiani-in-rientro-dall-estero-e-cittadini-stranieri-in-italia.html",
                  "start_date": "2020-09-07",
                  "updated_at": "2020-10-09T09:25:00+00:00",
                  "summary": "Italy's borders are partially open arriving from The netherlands. Measures in place: additional documentation, test/medical certificate and other restrictions ."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/travelsafe/airline_safety_measures": {
      "get": {
        "tags": [
          "TravelSafe"
        ],
        "summary": "Airline Safety Measures",
        "operationId": "AirlineSafetyMeasures",
        "parameters": [
          {
            "name": "iata_code",
            "in": "query",
            "description": "Filter, only return the safety measures for the airline with this IATA",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language that the response will be in. Options: `en`, `es`, `de`, `fr`, `it`. Default: `en`",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirlineSafetyMeasuresforLufthansa"
                },
                "example": {
                  "airline": {
                    "name": "Lufthansa",
                    "iata_code": "LH"
                  },
                  "safety_measures": [
                    {
                      "category": {
                        "id": "seat_blocking",
                        "name": "Seat blocking"
                      },
                      "sub_category": {
                        "id": "false",
                        "name": "false"
                      },
                      "details": "",
                      "summary": "Fewer passengers on board make it easier to keep a safe distance."
                    },
                    {
                      "category": {
                        "id": "test_or_temperature_check",
                        "name": "Test or temperature checks"
                      },
                      "sub_category": {
                        "id": "false",
                        "name": "false"
                      },
                      "details": "",
                      "summary": "Passengers are subject to COVID-19 tests or temperature checks at the gate."
                    },
                    {
                      "category": {
                        "id": "ppe_for_airline_crew",
                        "name": "PPE for airline crew"
                      },
                      "sub_category": {
                        "id": "true",
                        "name": "true"
                      },
                      "details": "Crew members are required to wear face masks.",
                      "summary": "Crew are wearing additional protective clothing."
                    },
                    {
                      "category": {
                        "id": "limited_food_services",
                        "name": "Limited food service"
                      },
                      "sub_category": {
                        "id": "true",
                        "name": "true"
                      },
                      "details": "Onboard services are available and are provided according to flight duration and the fare type. Special meals may be ordered in advance for flights longer than 180m.",
                      "summary": "Fewer options available from the on-board menu."
                    },
                    {
                      "category": {
                        "id": "advanced_cabin_disinfection",
                        "name": "Advanced cabin disinfection"
                      },
                      "sub_category": {
                        "id": "true",
                        "name": "true"
                      },
                      "details": "The frequency and intensity of cabin cleanings have increased. This applies in particular to common contact surfaces and toilets.",
                      "summary": "Daily deep cleaning of the cabin and regular disinfection of key surfaces."
                    },
                    {
                      "category": {
                        "id": "use_of_mask",
                        "name": "Mandatory face masks"
                      },
                      "sub_category": {
                        "id": "true",
                        "name": "true"
                      },
                      "details": "Masks must completely cover the mouth and nose and be secured under the chin. Face shields, FFP masks with a valve, and loose fabric materials can be worn but should not replace a face mask.",
                      "summary": "Passengers must wear face masks covering their nose and mouth at all times."
                    },
                    {
                      "category": {
                        "id": "hospital_grade_filters",
                        "name": "Hospital-grade air filters"
                      },
                      "sub_category": {
                        "id": "true",
                        "name": "true"
                      },
                      "details": "The aircraft are equipped with HEPA filters, which remove 99.97% of airborne particles and is similar to technology found in hospitals. This circulation system exchanges cabin air with fresh air every 2-3 minutes.",
                      "summary": "To remove dust, bacteria, and viruses and refresh cabinâ€™s air every 3 minutes."
                    },
                    {
                      "category": {
                        "id": "boarding_or_dissembarking_measurements",
                        "name": "New boarding and disembarking measures"
                      },
                      "sub_category": {
                        "id": "true",
                        "name": "true"
                      },
                      "details": "Travelers should wait until their boarding group is called before using the automatic gates to board the aircraft. Instructions for disembarkment will be announced by crew members. Disinfectant wipes will also be provided to passengers for the purpose of cleaning the surfaces in and around their seats.",
                      "summary": "To help passengers can keep a safe distance from one another."
                    }
                  ],
                  "info_source": {
                    "name": "Lufthansa' info source",
                    "url": "https://www.lufthansa.com/de/en/protection-measures"
                  },
                  "updated_at": "2020-10-22T08:16:41.925325+00:00"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/travelsafe/api_call_counts": {
      "get": {
        "tags": [
          "TravelSafe"
        ],
        "summary": "API usage tracking",
        "operationId": "APIusagetracking",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/cost_centers": {
      "get": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "List",
        "operationId": "List",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Number of elements to skip",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of elements to be returned",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 16:41:17 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 16:41:17 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "142"
                    },
                    "example": "142"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "api-version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1"
                    },
                    "example": "1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "GET, POST, HEAD, OPTIONS"
                    },
                    "example": "GET, POST, HEAD, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "04a3dc15-ca82-4a50-9cc2-528faee752f9"
                    },
                    "example": "04a3dc15-ca82-4a50-9cc2-528faee752f9"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Listok"
                },
                "example": {
                  "offset": 0,
                  "limit": 10,
                  "cost_centers": [
                    {
                      "id": "1",
                      "name": "My First Cost Center",
                      "count_users": 0
                    },
                    {
                      "id": "2",
                      "name": "New Name",
                      "count_users": 0
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 17:40:32 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 17:40:32 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "102"
                    },
                    "example": "102"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "GET, POST, HEAD, OPTIONS"
                    },
                    "example": "GET, POST, HEAD, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ddde1774-9da6-4899-9479-eee3ae2e8f66"
                    },
                    "example": "ddde1774-9da6-4899-9479-eee3ae2e8f66"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Listerr_4001"
                },
                "example": {
                  "error": {
                    "type": "bad_request",
                    "errors": [
                      {
                        "reason": "Field 'limit' must be a positive integer"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      },
      "post": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Create",
        "operationId": "Create",
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequest"
              },
              "example": {
                "name": "My First Cost Center"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 16:23:01 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 16:23:01 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "84"
                    },
                    "example": "84"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "api-version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1"
                    },
                    "example": "1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "GET, POST, HEAD, OPTIONS"
                    },
                    "example": "GET, POST, HEAD, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "001e7334-e520-49d6-affb-7f1ce0db4dff"
                    },
                    "example": "001e7334-e520-49d6-affb-7f1ce0db4dff"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Createok"
                },
                "example": {
                  "id": "1",
                  "name": "My First Cost Center",
                  "archived": false,
                  "users": [],
                  "count_users": 0
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 17:42:20 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 17:42:20 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "109"
                    },
                    "example": "109"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "GET, POST, HEAD, OPTIONS"
                    },
                    "example": "GET, POST, HEAD, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "77935d1a-63af-4fc0-8e81-52b47f774388"
                    },
                    "example": "77935d1a-63af-4fc0-8e81-52b47f774388"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Createerr_4001"
                },
                "example": {
                  "error": {
                    "type": "bad_request",
                    "errors": [
                      {
                        "reason": "Field 'name' must be present and of type string"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/cost_centers/{costCenterId}": {
      "get": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Detail",
        "operationId": "Detail",
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "costCenterId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 17:15:14 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 17:15:14 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "32"
                    },
                    "example": "32"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "GET, PATCH, HEAD, OPTIONS"
                    },
                    "example": "GET, PATCH, HEAD, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "32767649-6cf2-44c0-a2ef-6e3ba7ed4413"
                    },
                    "example": "32767649-6cf2-44c0-a2ef-6e3ba7ed4413"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detailerr_4041"
                },
                "example": {
                  "error": {
                    "type": "not_found"
                  }
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detailok"
                },
                "example": {
                  "id": "2",
                  "name": "My Cost Center",
                  "archived": false,
                  "users": [
                    {
                      "first_name": "John",
                      "last_name": "Smith",
                      "email": "johnsmith@company.com",
                      "id": 1234,
                      "phone": null,
                      "profile_picture": null
                    }
                  ],
                  "count_users": 1
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      },
      "patch": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Update",
        "operationId": "Update",
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "costCenterId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              },
              "example": {
                "name": "New Name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 16:24:48 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 16:24:48 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "72"
                    },
                    "example": "72"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "api-version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1"
                    },
                    "example": "1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "GET, PATCH, HEAD, OPTIONS"
                    },
                    "example": "GET, PATCH, HEAD, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "8dd52994-c47a-476c-9779-1db9f71cd7d2"
                    },
                    "example": "8dd52994-c47a-476c-9779-1db9f71cd7d2"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Updateok"
                },
                "example": {
                  "id": "2",
                  "name": "New Name",
                  "archived": false,
                  "users": [],
                  "count_users": 0
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 16:26:46 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 16:26:46 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "131"
                    },
                    "example": "131"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "GET, PATCH, HEAD, OPTIONS"
                    },
                    "example": "GET, PATCH, HEAD, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "670ee39b-a93d-485a-ad39-7d5864cd7127"
                    },
                    "example": "670ee39b-a93d-485a-ad39-7d5864cd7127"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Updateerr_4001"
                },
                "example": {
                  "error": {
                    "type": "bad_request",
                    "errors": [
                      {
                        "reason": "Invalid parameters. Please provide at least one of: 'name', 'archive'"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 16:25:48 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 16:25:48 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "32"
                    },
                    "example": "32"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "GET, PATCH, HEAD, OPTIONS"
                    },
                    "example": "GET, PATCH, HEAD, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "a3485e60-eba6-4c54-8757-14fb3144081a"
                    },
                    "example": "a3485e60-eba6-4c54-8757-14fb3144081a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Updateerr_4041"
                },
                "example": {
                  "error": {
                    "type": "not_found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/cost_centers/bulk_update": {
      "patch": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Update (Bulk)",
        "operationId": "Update(Bulk)",
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": "{\n    \"id_list\": [{{costCenterId}}],\n    \"archive\": false\n}"
              },
              "example": "{\n    \"id_list\": [{{costCenterId}}],\n    \"archive\": false\n}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 17:07:29 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 17:07:29 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "19"
                    },
                    "example": "19"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "api-version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1"
                    },
                    "example": "1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PATCH, OPTIONS"
                    },
                    "example": "PATCH, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "35cf7b8e-b78a-4666-bd77-691c9743c314"
                    },
                    "example": "35cf7b8e-b78a-4666-bd77-691c9743c314"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBulkok"
                },
                "example": {
                  "updated_count": 2
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 17:09:46 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 17:09:46 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "113"
                    },
                    "example": "113"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PATCH, OPTIONS"
                    },
                    "example": "PATCH, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "7119d72c-af7f-4e71-8126-79f095340604"
                    },
                    "example": "7119d72c-af7f-4e71-8126-79f095340604"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBulkerr_4041"
                },
                "example": {
                  "error": {
                    "type": "bad_request",
                    "errors": [
                      {
                        "reason": "Field 'archive' must be present and of type boolean"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 17:08:47 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 17:08:47 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "98"
                    },
                    "example": "98"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PATCH, OPTIONS"
                    },
                    "example": "PATCH, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "5a5aa661-59ba-4528-886b-4c7051c8b622"
                    },
                    "example": "5a5aa661-59ba-4528-886b-4c7051c8b622"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBulkerr_4041"
                },
                "example": {
                  "error": {
                    "type": "not_found",
                    "errors": [
                      {
                        "reason": "Cost centers with ids [3, 4] not found"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/cost_centers/{costCenterId}/users": {
      "put": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Set Users",
        "operationId": "SetUsers",
        "parameters": [
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "costCenterId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": "{\n    \"user_ids\": [{{userId}}]\n}"
              },
              "example": "{\n    \"user_ids\": [{{userId}}]\n}"
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Mon, 22 Feb 2021 17:13:39 GMT"
                    },
                    "example": "Mon, 22 Feb 2021 17:13:39 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "77"
                    },
                    "example": "77"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "keep-alive"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "gunicorn/19.7.1"
                    },
                    "example": "gunicorn/19.7.1"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "PUT, OPTIONS"
                    },
                    "example": "PUT, OPTIONS"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "ALLOWALL"
                    },
                    "example": "ALLOWALL"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Origin, Cookie"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "max-age=60; includeSubDomains"
                    },
                    "example": "max-age=60; includeSubDomains"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "nosniff"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "1; mode=block"
                    },
                    "example": "1; mode=block"
                  }
                }
              },
              "Correlation-Id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "b71a3bac-ac46-4688-9d0e-ee124e112b54"
                    },
                    "example": "b71a3bac-ac46-4688-9d0e-ee124e112b54"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetUserserr_4001"
                },
                "example": {
                  "error": {
                    "type": "bad_request",
                    "errors": [
                      {
                        "reason": "Users not found"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetUsersok"
                },
                "example": {
                  "id": "2",
                  "name": "My Cost Center",
                  "archived": false,
                  "users": [
                    {
                      "first_name": "John",
                      "last_name": "Smith",
                      "email": "johnsmith@company.com",
                      "id": 1234,
                      "phone": null,
                      "profile_picture": null
                    }
                  ],
                  "count_users": 1
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/trips": {
      "get": {
        "tags": [
          "Trips"
        ],
        "summary": "List Trips",
        "operationId": "ListTrips",
        "parameters": [
          {
            "name": "modified_gte",
            "in": "query",
            "description": "Find Trips with modified greater than or equal to this time",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modified_lt",
            "in": "query",
            "description": "Find Trips with modified less than this time",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter for trips with this status",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset index, 0 based",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination maximum number of elements to return",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/bookings": {
      "get": {
        "tags": [
          "Trips"
        ],
        "summary": "List Bookings",
        "operationId": "ListBookings",
        "parameters": [
          {
            "name": "modified_gte",
            "in": "query",
            "description": "Find Bookings with modified greater than or equal to this time",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modified_lt",
            "in": "query",
            "description": "Find Bookings with modified less than this time",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter for Bookings with this status",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter for Bookings of this type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trip_id",
            "in": "query",
            "description": "Filter for Bookings in the Trip with this id. A comma separated list of multiple ids is accepted.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offet index, 0 based",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination maximum number of elements to return",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "operationId": "GetListUsers",
        "parameters": [
          {
            "name": "trip_id",
            "in": "query",
            "description": "Find Users travelling on a Trip with this id. A comma separated list of multiple ids is accepted.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset index, 0 based",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination maximum number of elements to return",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "ApiKey "
            }
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.staging-travelperk.com"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Invoices": {
        "title": "Invoices",
        "required": [
          "offset",
          "limit",
          "total",
          "invoices"
        ],
        "type": "object",
        "properties": {
          "offset": {
            "type": "string",
            "nullable": true
          },
          "limit": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoices1"
            },
            "description": ""
          }
        }
      },
      "Invoices1": {
        "title": "Invoices1",
        "required": [
          "serial_number",
          "profile_id",
          "profile_name",
          "billing_information",
          "tk_billing_address",
          "mode",
          "status",
          "issuing_date",
          "billing_period",
          "from_date",
          "to_date",
          "due_date",
          "currency",
          "currency_tk",
          "total",
          "total_tk",
          "lines",
          "taxes_summary",
          "reference",
          "tk_bank_account",
          "pdf"
        ],
        "type": "object",
        "properties": {
          "serial_number": {
            "type": "string"
          },
          "profile_id": {
            "type": "string"
          },
          "profile_name": {
            "type": "string"
          },
          "billing_information": {
            "$ref": "#/components/schemas/BillingInformation"
          },
          "tk_billing_address": {
            "$ref": "#/components/schemas/TkBillingAddress"
          },
          "mode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "issuing_date": {
            "type": "string"
          },
          "billing_period": {
            "type": "string"
          },
          "from_date": {
            "type": "string"
          },
          "to_date": {
            "type": "string"
          },
          "due_date": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "currency_tk": {
            "type": "string"
          },
          "total": {
            "type": "string"
          },
          "total_tk": {
            "type": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line"
            },
            "description": ""
          },
          "taxes_summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxesSummary"
            },
            "description": ""
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "tk_bank_account": {
            "$ref": "#/components/schemas/TkBankAccount"
          },
          "pdf": {
            "type": "string"
          }
        }
      },
      "BillingInformation": {
        "title": "BillingInformation",
        "required": [
          "legal_name",
          "vat_number",
          "address_line_1",
          "address_line_2",
          "city",
          "postal_code",
          "country_name"
        ],
        "type": "object",
        "properties": {
          "legal_name": {
            "type": "string"
          },
          "vat_number": {
            "type": "string",
            "nullable": true
          },
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country_name": {
            "type": "string"
          }
        },
        "example": {
          "legal_name": "Imagine very off.Mock",
          "vat_number": null,
          "address_line_1": "969 Until.",
          "address_line_2": "Political.",
          "city": "ready",
          "postal_code": "88863",
          "country_name": "Cambodia"
        }
      },
      "TkBillingAddress": {
        "title": "TkBillingAddress",
        "required": [
          "legal_name",
          "vat_number",
          "address_line_1",
          "address_line_2",
          "city",
          "postal_code",
          "country_name"
        ],
        "type": "object",
        "properties": {
          "legal_name": {
            "type": "string"
          },
          "vat_number": {
            "type": "string",
            "nullable": true
          },
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country_name": {
            "type": "string"
          }
        },
        "example": {
          "legal_name": "Share middle top.Mock",
          "vat_number": null,
          "address_line_1": "619 Dog.",
          "address_line_2": "Store.",
          "city": "available",
          "postal_code": "40400",
          "country_name": "Saint Barth\\u00e9lemy"
        }
      },
      "Line": {
        "title": "Line",
        "required": [
          "expense_date",
          "description",
          "quantity",
          "unit_price",
          "non_taxable_unit_price",
          "tax_percentage",
          "tax_amount",
          "tax_regime",
          "total_amount",
          "metadata",
          "related_item_id"
        ],
        "type": "object",
        "properties": {
          "expense_date": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unit_price": {
            "type": "string"
          },
          "non_taxable_unit_price": {
            "type": "string"
          },
          "tax_percentage": {
            "type": "integer",
            "format": "int32"
          },
          "tax_amount": {
            "type": "integer",
            "format": "int32"
          },
          "tax_regime": {
            "type": "string"
          },
          "total_amount": {
            "type": "string"
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "related_item_id": {
            "type": "string"
          }
        },
        "example": {
          "expense_date": null,
          "description": "Piece specific sea particularly store prevent middle form.",
          "quantity": 2,
          "unit_price": "116.75860609",
          "non_taxable_unit_price": "391.31619297",
          "tax_percentage": 0,
          "tax_amount": 0,
          "tax_regime": "STAR",
          "total_amount": "233.51721218",
          "metadata": null,
          "related_item_id": "S9498"
        }
      },
      "TaxesSummary": {
        "title": "TaxesSummary",
        "required": [
          "tax_regime",
          "subtotal",
          "tax_percentage",
          "tax_amount",
          "total"
        ],
        "type": "object",
        "properties": {
          "tax_regime": {
            "type": "string"
          },
          "subtotal": {
            "type": "string"
          },
          "tax_percentage": {
            "type": "string",
            "nullable": true
          },
          "tax_amount": {
            "type": "string"
          },
          "total": {
            "type": "string"
          }
        },
        "example": {
          "tax_regime": "G-VAT-R",
          "subtotal": "2919.73301276",
          "tax_percentage": null,
          "tax_amount": "1701.06960314",
          "total": "4620.80261590"
        }
      },
      "TkBankAccount": {
        "title": "TkBankAccount",
        "required": [
          "name",
          "bank_name",
          "account_number",
          "bic",
          "reference"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "bank_name": {
            "type": "string"
          },
          "account_number": {
            "type": "string"
          },
          "bic": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          }
        },
        "example": {
          "name": "Significant final.",
          "bank_name": "Measure.",
          "account_number": "5705396612",
          "bic": "5KY3IRO9Q42",
          "reference": "Position admit down night feeling."
        }
      },
      "InvoiceLines": {
        "title": "InvoiceLines",
        "required": [
          "offset",
          "limit",
          "total",
          "invoice_lines"
        ],
        "type": "object",
        "properties": {
          "offset": {
            "type": "string",
            "nullable": true
          },
          "limit": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "invoice_lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLines1"
            },
            "description": ""
          }
        },
        "example": {
          "offset": null,
          "limit": null,
          "total": 1,
          "invoice_lines": [
            {
              "expense_date": "2020-02-22T00:00:00.000Z",
              "description": "Reduce tough fast amount whether light prepare sport.",
              "quantity": 2,
              "unit_price": "838.73818336",
              "non_taxable_unit_price": "801.80919943",
              "tax_percentage": "0",
              "tax_amount": 0,
              "tax_regime": "G-VAT-R",
              "total_amount": "1677.47636672",
              "metadata": null,
              "related_item_id": "S8538",
              "invoice_serial_number": "INV-02-1",
              "profile_id": "f2f5470b-b65b-4aa6-8973-259089eb1cad",
              "profile_name": "",
              "invoice_mode": "credit-gross",
              "invoice_status": "open",
              "issuing_date": "2019-06-16T00:00:00.000Z",
              "due_date": "2019-06-24T00:00:00.000Z",
              "currency": "FJD"
            }
          ]
        }
      },
      "InvoiceLines1": {
        "title": "InvoiceLines1",
        "required": [
          "expense_date",
          "description",
          "quantity",
          "unit_price",
          "non_taxable_unit_price",
          "tax_percentage",
          "tax_amount",
          "tax_regime",
          "total_amount",
          "metadata",
          "related_item_id",
          "invoice_serial_number",
          "profile_id",
          "profile_name",
          "invoice_mode",
          "invoice_status",
          "issuing_date",
          "due_date",
          "currency"
        ],
        "type": "object",
        "properties": {
          "expense_date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unit_price": {
            "type": "string"
          },
          "non_taxable_unit_price": {
            "type": "string"
          },
          "tax_percentage": {
            "type": "string"
          },
          "tax_amount": {
            "type": "integer",
            "format": "int32"
          },
          "tax_regime": {
            "type": "string"
          },
          "total_amount": {
            "type": "string"
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "related_item_id": {
            "type": "string"
          },
          "invoice_serial_number": {
            "type": "string"
          },
          "profile_id": {
            "type": "string"
          },
          "profile_name": {
            "type": "string"
          },
          "invoice_mode": {
            "type": "string"
          },
          "invoice_status": {
            "type": "string"
          },
          "issuing_date": {
            "type": "string"
          },
          "due_date": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          }
        },
        "example": {
          "expense_date": "2020-02-22T00:00:00.000Z",
          "description": "Reduce tough fast amount whether light prepare sport.",
          "quantity": 2,
          "unit_price": "838.73818336",
          "non_taxable_unit_price": "801.80919943",
          "tax_percentage": "0",
          "tax_amount": 0,
          "tax_regime": "G-VAT-R",
          "total_amount": "1677.47636672",
          "metadata": null,
          "related_item_id": "S8538",
          "invoice_serial_number": "INV-02-1",
          "profile_id": "f2f5470b-b65b-4aa6-8973-259089eb1cad",
          "profile_name": "",
          "invoice_mode": "credit-gross",
          "invoice_status": "open",
          "issuing_date": "2019-06-16T00:00:00.000Z",
          "due_date": "2019-06-24T00:00:00.000Z",
          "currency": "FJD"
        }
      },
      "Invoice": {
        "title": "Invoice",
        "required": [
          "serial_number",
          "profile_id",
          "profile_name",
          "billing_information",
          "tk_billing_address",
          "mode",
          "status",
          "issuing_date",
          "billing_period",
          "from_date",
          "to_date",
          "due_date",
          "currency",
          "currency_tk",
          "total",
          "total_tk",
          "lines",
          "taxes_summary",
          "reference",
          "tk_bank_account",
          "pdf"
        ],
        "type": "object",
        "properties": {
          "serial_number": {
            "type": "string"
          },
          "profile_id": {
            "type": "string"
          },
          "profile_name": {
            "type": "string"
          },
          "billing_information": {
            "$ref": "#/components/schemas/BillingInformation"
          },
          "tk_billing_address": {
            "$ref": "#/components/schemas/TkBillingAddress"
          },
          "mode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "issuing_date": {
            "type": "string"
          },
          "billing_period": {
            "type": "string"
          },
          "from_date": {
            "type": "string"
          },
          "to_date": {
            "type": "string"
          },
          "due_date": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "currency_tk": {
            "type": "string"
          },
          "total": {
            "type": "string"
          },
          "total_tk": {
            "type": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Line"
            },
            "description": ""
          },
          "taxes_summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxesSummary1"
            },
            "description": ""
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "tk_bank_account": {
            "$ref": "#/components/schemas/TkBankAccount"
          },
          "pdf": {
            "type": "string"
          }
        }
      },
      "TaxesSummary1": {
        "title": "TaxesSummary1",
        "required": [
          "tax_regime",
          "subtotal",
          "tax_percentage",
          "tax_amount",
          "total"
        ],
        "type": "object",
        "properties": {
          "tax_regime": {
            "type": "string"
          },
          "subtotal": {
            "type": "string"
          },
          "tax_percentage": {
            "type": "string",
            "nullable": true
          },
          "tax_amount": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "string"
          }
        },
        "example": {
          "tax_regime": "G-VAT-R",
          "subtotal": "4535.46675574",
          "tax_percentage": null,
          "tax_amount": 0,
          "total": "4535.46675574"
        }
      },
      "InvoicesProfiles": {
        "title": "InvoicesProfiles",
        "required": [
          "offset",
          "limit",
          "total",
          "profiles"
        ],
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Profile"
            },
            "description": ""
          }
        },
        "example": {
          "offset": 0,
          "limit": 2,
          "total": 2,
          "profiles": [
            {
              "id": "f2dd1aa3-5601-4725-a520-bd59885bbb16",
              "name": "",
              "payment_method_type": "automatic",
              "billing_period": "instant",
              "currency": "DOP",
              "billing_information": {
                "legal_name": "Story music sister.Mock",
                "vat_number": null,
                "address_line_1": "160 Republican.",
                "address_line_2": "Upon.",
                "city": "record",
                "postal_code": "37076",
                "country_name": "Central African Republic"
              }
            },
            {
              "id": "8fa66535-5a9a-4a6f-90d8-2986621a706a",
              "name": "",
              "payment_method_type": "manual",
              "billing_period": "monthly",
              "currency": "CLP",
              "billing_information": {
                "legal_name": "With something.Mock",
                "vat_number": null,
                "address_line_1": "295 Time.",
                "address_line_2": "Heart.",
                "city": "none",
                "postal_code": "35277",
                "country_name": "Serbia"
              }
            }
          ]
        }
      },
      "Profile": {
        "title": "Profile",
        "required": [
          "id",
          "name",
          "payment_method_type",
          "billing_period",
          "currency",
          "billing_information"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "payment_method_type": {
            "type": "string"
          },
          "billing_period": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "billing_information": {
            "$ref": "#/components/schemas/BillingInformation"
          }
        },
        "example": {
          "id": "f2dd1aa3-5601-4725-a520-bd59885bbb16",
          "name": "",
          "payment_method_type": "automatic",
          "billing_period": "instant",
          "currency": "DOP",
          "billing_information": {
            "legal_name": "Story music sister.Mock",
            "vat_number": null,
            "address_line_1": "160 Republican.",
            "address_line_2": "Upon.",
            "city": "record",
            "postal_code": "37076",
            "country_name": "Central African Republic"
          }
        }
      },
      "Webhook": {
        "title": "Webhook",
        "required": [
          "id",
          "name",
          "url",
          "status",
          "topics",
          "successfully_sent",
          "failed_sent",
          "error_rate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "topics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Topic"
            },
            "description": ""
          },
          "successfully_sent": {
            "type": "integer",
            "format": "int32"
          },
          "failed_sent": {
            "type": "integer",
            "format": "int32"
          },
          "error_rate": {
            "type": "number"
          }
        },
        "example": {
          "id": "f2dd1aa3-5601-4725-a520-bd59885bbb16",
          "name": "invoice webhook",
          "url": "http://www.example.com/process_tk_webhook",
          "status": "enabled",
          "topics": [
            {
              "name": "invoice",
              "events": [
                {
                  "name": "issued",
                  "description": "An invoice is issued"
                }
              ]
            },
            {
              "name": "invoiceline",
              "events": [
                {
                  "name": "created",
                  "description": "An invoice line is created"
                }
              ]
            }
          ],
          "successfully_sent": 54,
          "failed_sent": 2,
          "error_rate": 0.12
        }
      },
      "Topic": {
        "title": "Topic",
        "required": [
          "name",
          "events"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "description": ""
          }
        },
        "example": {
          "name": "invoice",
          "events": [
            {
              "name": "issued",
              "description": "An invoice is issued"
            }
          ]
        }
      },
      "Event": {
        "title": "Event",
        "required": [
          "name",
          "description"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "name": "issued",
          "description": "An invoice is issued"
        }
      },
      "UpdatewebhookRequest": {
        "title": "UpdatewebhookRequest",
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "example": {
          "url": "http://localhost:8000/travelperk_webhook/notify"
        }
      },
      "apageofWebhooks": {
        "title": "apageofWebhooks",
        "required": [
          "offset",
          "limit",
          "total",
          "webhooks"
        ],
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            },
            "description": ""
          }
        },
        "example": {
          "offset": 0,
          "limit": 2,
          "total": 2,
          "webhooks": [
            {
              "id": "f2dd1aa3-5601-4725-a520-bd59885bbb16",
              "name": "invoice webhook",
              "url": "http://www.example.com/process_tk_webhook",
              "status": "enabled",
              "topics": [
                {
                  "name": "invoice",
                  "events": [
                    {
                      "name": "issued",
                      "description": "An invoice is issued"
                    }
                  ]
                },
                {
                  "name": "invoiceline",
                  "events": [
                    {
                      "name": "created",
                      "description": "An invoice line is created"
                    }
                  ]
                }
              ],
              "successfully_sent": 54,
              "failed_sent": 2,
              "error_rate": 0.12
            },
            {
              "id": "8fa66535-5a9a-4a6f-90d8-2986621a706a",
              "name": "trips webhook",
              "url": "http://www.example.com/process_tk_webhook",
              "status": "disabled",
              "topics": [
                {
                  "name": "trip",
                  "events": [
                    {
                      "name": "created",
                      "description": "A trip is created"
                    },
                    {
                      "name": "updated",
                      "description": "An trip is updated"
                    }
                  ]
                }
              ],
              "successfully_sent": 12,
              "failed_sent": 20,
              "error_rate": 0.64
            }
          ]
        }
      },
      "SubscribetoeventsRequest": {
        "title": "SubscribetoeventsRequest",
        "required": [
          "name",
          "url",
          "secret",
          "events"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "name": "invoice webhook",
          "url": "https://postman-echo.com/post",
          "secret": "some secret",
          "events": [
            "invoice.issued",
            "invoiceline.created"
          ]
        }
      },
      "Topics": {
        "title": "Topics",
        "required": [
          "topics"
        ],
        "type": "object",
        "properties": {
          "topics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Topics1"
            },
            "description": ""
          }
        },
        "example": {
          "topics": [
            {
              "name": "invoice",
              "events": [
                {
                  "name": "issued",
                  "description": "An invoice is issued"
                }
              ]
            },
            {
              "name": "invoiceline",
              "events": [
                {
                  "name": "created",
                  "description": "An invoice line is created"
                }
              ]
            }
          ]
        }
      },
      "Topics1": {
        "title": "Topics1",
        "required": [
          "name",
          "events"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "description": ""
          }
        },
        "example": {
          "name": "invoice",
          "events": [
            {
              "name": "issued",
              "description": "An invoice is issued"
            }
          ]
        }
      },
      "UpdateuserfirstnameRequest": {
        "title": "UpdateuserfirstnameRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "name.givenName",
              "value": "First name of the user."
            }
          ]
        }
      },
      "Operation": {
        "title": "Operation",
        "required": [
          "op",
          "path",
          "value"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "example": {
          "op": "replace",
          "path": "name.givenName",
          "value": "First name of the user."
        }
      },
      "UpdateuserlastnameRequest": {
        "title": "UpdateuserlastnameRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "name.familyName",
              "value": "Last name of the user."
            }
          ]
        }
      },
      "UpdateusermiddlenameRequest": {
        "title": "UpdateusermiddlenameRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "name.middleName",
              "value": "Middle name of the user."
            }
          ]
        }
      },
      "UpdateuserhonorificprefixRequest": {
        "title": "UpdateuserhonorificprefixRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "name.honorificPrefix",
              "value": "Salutation of the user. e.g. Ms."
            }
          ]
        }
      },
      "UpdateusertitleRequest": {
        "title": "UpdateusertitleRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "title",
              "value": "Title of the user. e.g. CEO."
            }
          ]
        }
      },
      "UpdateuserexternalIdRequest": {
        "title": "UpdateuserexternalIdRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "externalId",
              "value": "External id of the user."
            }
          ]
        }
      },
      "UpdateuserpreferredlanguageRequest": {
        "title": "UpdateuserpreferredlanguageRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "preferredLanguage",
              "value": "User language, supported values: en, es, fr, de."
            }
          ]
        }
      },
      "UpdateuserlocaleRequest": {
        "title": "UpdateuserlocaleRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "preferredLanguage",
              "value": "User locale for localization purposes, e.g. en, en-gb, es, es-co, fr, de."
            }
          ]
        }
      },
      "ActivatedeactivateauserRequest": {
        "title": "ActivatedeactivateauserRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "active",
              "value": "boolean value"
            }
          ]
        }
      },
      "UpdateuserphonenumberRequest": {
        "title": "UpdateuserphonenumberRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation9"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "phoneNumbers",
              "value": [
                {
                  "value": "Phone number of the user. Example: +34 123456789.",
                  "type": "work"
                }
              ]
            }
          ]
        }
      },
      "Operation9": {
        "title": "Operation9",
        "required": [
          "op",
          "path",
          "value"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Value"
            },
            "description": ""
          }
        },
        "example": {
          "op": "replace",
          "path": "phoneNumbers",
          "value": [
            {
              "value": "Phone number of the user. Example: +34 123456789.",
              "type": "work"
            }
          ]
        }
      },
      "Value": {
        "title": "Value",
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "value": "Phone number of the user. Example: +34 123456789.",
          "type": "work"
        }
      },
      "UpdateuserusernameandemailRequest": {
        "title": "UpdateuserusernameandemailRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "userName",
              "value": "A valid email address."
            }
          ]
        }
      },
      "UpdateusergenderRequest": {
        "title": "UpdateusergenderRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:gender",
              "value": "User gender, accepted values: M, F."
            }
          ]
        }
      },
      "UpdateuserdateofbirthRequest": {
        "title": "UpdateuserdateofbirthRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:dateOfBirth",
              "value": "Date of birth in format YYYY-MM-DD."
            }
          ]
        }
      },
      "UpdateusercostcenterRequest": {
        "title": "UpdateusercostcenterRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User.costCenter",
              "value": "Name of the cost center to be assigned to the user. It need to exist in Travelperk."
            }
          ]
        }
      },
      "UpdateusertravelpolicyRequest": {
        "title": "UpdateusertravelpolicyRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:travelPolicy",
              "value": "Name of the travel policy center to be assigned to the user. It need to exist in Travelperk."
            }
          ]
        }
      },
      "AdduserapproversRequest": {
        "title": "AdduserapproversRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation15"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "add",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:approvers",
              "value": [
                {
                  "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
                },
                {
                  "value": "Another approver. If necessary, you can optionally pass multiple approvers in the same API call."
                }
              ]
            }
          ]
        }
      },
      "Operation15": {
        "title": "Operation15",
        "required": [
          "op",
          "path",
          "value"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Value1"
            },
            "description": ""
          }
        },
        "example": {
          "op": "add",
          "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:approvers",
          "value": [
            {
              "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
            },
            {
              "value": "Another approver. If necessary, you can optionally pass multiple approvers in the same API call."
            }
          ]
        }
      },
      "Value1": {
        "title": "Value1",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
        }
      },
      "ReplaceuserapproversRequest": {
        "title": "ReplaceuserapproversRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation15"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:approvers",
              "value": [
                {
                  "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
                }
              ]
            }
          ]
        }
      },
      "AdduserinvoiceprofileRequest": {
        "title": "AdduserinvoiceprofileRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation15"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "add",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:invoiceProfiles",
              "value": [
                {
                  "value": "Name of the invoice profile of to be assigned to the user. It needs to exists in Travelperk. The invoice profile will be added to the list of invoice profiles of the user."
                },
                {
                  "value": "Another invoice profile. If necessary, you can optionally pass multiple invoice profiles in the same API call."
                }
              ]
            }
          ]
        }
      },
      "ReplaceuserinvoiceprofilesRequest": {
        "title": "ReplaceuserinvoiceprofilesRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation15"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:invoiceProfiles",
              "value": [
                {
                  "value": "Name of the invoice profile of to be assigned to the user. It needs to exists in Travelperk. The invoice profiles will be replaced the list of invoice profiles of the user."
                },
                {
                  "value": "Another invoice profile. If necessary, you can optionally pass multiple invoice profiles in the same API call."
                }
              ]
            }
          ]
        }
      },
      "UpdateuseremergencycontactRequest": {
        "title": "UpdateuseremergencycontactRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation19"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:emergencyContact",
              "value": {
                "name": "name of the contact",
                "phone": "phone number of the contact"
              }
            }
          ]
        }
      },
      "Operation19": {
        "title": "Operation19",
        "required": [
          "op",
          "path",
          "value"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/Value5"
          }
        },
        "example": {
          "op": "replace",
          "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:emergencyContact",
          "value": {
            "name": "name of the contact",
            "phone": "phone number of the contact"
          }
        }
      },
      "Value5": {
        "title": "Value5",
        "required": [
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "example": {
          "name": "name of the contact",
          "phone": "phone number of the contact"
        }
      },
      "UpdateusercountryofresidenceRequest": {
        "title": "UpdateusercountryofresidenceRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:countryOfResidence",
              "value": "Code of the country. E.g. ES"
            }
          ]
        }
      },
      "AddusertraveldocumentsRequest": {
        "title": "AddusertraveldocumentsRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation21"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "add",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:travelDocuments",
              "value": [
                {
                  "documentType": "The type of the document. Either 'passport' or id'",
                  "documentNumber": "The number of the document.",
                  "givenName": "The first name of the user as stated in the document.",
                  "middleName": "The middle name of the user as stated in the document, if any.",
                  "familyName": "The last name of the user as stated in the document.",
                  "gender": "The gender of the user. Either 'F' or 'M'.",
                  "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
                  "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
                  "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
                  "citizenship": "The country code of the citizenship of the user (e.g. ES)"
                }
              ]
            }
          ]
        }
      },
      "Operation21": {
        "title": "Operation21",
        "required": [
          "op",
          "path",
          "value"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Value6"
            },
            "description": ""
          }
        },
        "example": {
          "op": "add",
          "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:travelDocuments",
          "value": [
            {
              "documentType": "The type of the document. Either 'passport' or id'",
              "documentNumber": "The number of the document.",
              "givenName": "The first name of the user as stated in the document.",
              "middleName": "The middle name of the user as stated in the document, if any.",
              "familyName": "The last name of the user as stated in the document.",
              "gender": "The gender of the user. Either 'F' or 'M'.",
              "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
              "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
              "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
              "citizenship": "The country code of the citizenship of the user (e.g. ES)"
            }
          ]
        }
      },
      "Value6": {
        "title": "Value6",
        "required": [
          "documentType",
          "documentNumber",
          "givenName",
          "middleName",
          "familyName",
          "gender",
          "issuingCountry",
          "issuingDate",
          "expirationDate",
          "citizenship"
        ],
        "type": "object",
        "properties": {
          "documentType": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "givenName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "issuingCountry": {
            "type": "string"
          },
          "issuingDate": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "citizenship": {
            "type": "string"
          }
        },
        "example": {
          "documentType": "The type of the document. Either 'passport' or id'",
          "documentNumber": "The number of the document.",
          "givenName": "The first name of the user as stated in the document.",
          "middleName": "The middle name of the user as stated in the document, if any.",
          "familyName": "The last name of the user as stated in the document.",
          "gender": "The gender of the user. Either 'F' or 'M'.",
          "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
          "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
          "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
          "citizenship": "The country code of the citizenship of the user (e.g. ES)"
        }
      },
      "ReplaceusertraveldocumentsRequest": {
        "title": "ReplaceusertraveldocumentsRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation21"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "replace",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:travelDocuments",
              "value": [
                {
                  "documentType": "The type of the document. Either 'passport' or id'",
                  "documentNumber": "The number of the document.",
                  "givenName": "The first name of the user as stated in the document.",
                  "middleName": "The middle name of the user as stated in the document, if any.",
                  "familyName": "The last name of the user as stated in the document.",
                  "gender": "The gender of the user. Either 'F' or 'M'.",
                  "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
                  "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
                  "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
                  "citizenship": "The country code of the citizenship of the user (e.g. ES)"
                }
              ]
            }
          ]
        }
      },
      "RemoveusermiddlenameRequest": {
        "title": "RemoveusermiddlenameRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "name.middleName"
            }
          ]
        }
      },
      "Operation23": {
        "title": "Operation23",
        "required": [
          "op",
          "path"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "example": {
          "op": "remove",
          "path": "name.middleName"
        }
      },
      "RemoveuserhonorificprefixRequest": {
        "title": "RemoveuserhonorificprefixRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "name.honorificPrefix"
            }
          ]
        }
      },
      "RemoveusertitleRequest": {
        "title": "RemoveusertitleRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "title"
            }
          ]
        }
      },
      "RemoveuserexternalIdRequest": {
        "title": "RemoveuserexternalIdRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "externalId"
            }
          ]
        }
      },
      "RemoveuserphonenumberRequest": {
        "title": "RemoveuserphonenumberRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "phoneNumbers"
            }
          ]
        }
      },
      "RemoveuserdateofbirthRequest": {
        "title": "RemoveuserdateofbirthRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:dateOfBirth"
            }
          ]
        }
      },
      "RemoveusercostcenterRequest": {
        "title": "RemoveusercostcenterRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User.costCenter"
            }
          ]
        }
      },
      "RemoveusertravelpolicyRequest": {
        "title": "RemoveusertravelpolicyRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:travelPolicy"
            }
          ]
        }
      },
      "RemoveuserapproverRequest": {
        "title": "RemoveuserapproverRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:approvers[value eq \"TravelPerk Id\""
            }
          ]
        }
      },
      "RemoveuserapproversRequest": {
        "title": "RemoveuserapproversRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:approvers"
            }
          ]
        }
      },
      "RemoveuserinvoiceprofileRequest": {
        "title": "RemoveuserinvoiceprofileRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:invoiceProfiles[value eq \"Name of the invoice profile\"]"
            }
          ]
        }
      },
      "RemoveuserinvoiceprofilesRequest": {
        "title": "RemoveuserinvoiceprofilesRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:invoiceProfiles"
            }
          ]
        }
      },
      "RemoveuseremergencycontactRequest": {
        "title": "RemoveuseremergencycontactRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:emergencyContact"
            }
          ]
        }
      },
      "RemoveusercountryofresidenceRequest": {
        "title": "RemoveusercountryofresidenceRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:countryOfResidence"
            }
          ]
        }
      },
      "RemoveusertraveldocumentsRequest": {
        "title": "RemoveusertraveldocumentsRequest",
        "required": [
          "schemas",
          "Operations"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "string"
          },
          "Operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation23"
            },
            "description": ""
          }
        },
        "example": {
          "schemas": "urn:ietf:params:scim:api:messages:2.0:PatchOp",
          "Operations": [
            {
              "op": "remove",
              "path": "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User:travelDocuments"
            }
          ]
        }
      },
      "ReplaceuserRequest": {
        "title": "ReplaceuserRequest",
        "required": [
          "schemas",
          "userName",
          "active",
          "name",
          "externalId",
          "title",
          "preferredLanguage",
          "locale",
          "phoneNumbers",
          "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
          "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userName": {
            "type": "string"
          },
          "active": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "externalId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "preferredLanguage": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": ""
          },
          "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
            "$ref": "#/components/schemas/UrnIetfParamsScimSchemasExtensionEnterprise20User"
          },
          "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User": {
            "$ref": "#/components/schemas/UrnIetfParamsScimSchemasExtensionTravelperk20User"
          }
        },
        "example": {
          "schemas": [
            "urn:ietf:params:scim:schemas:core:2.0:User",
            "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
            "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User"
          ],
          "userName": "valid email address (REQUIRED)",
          "active": "boolean true (REQUIRED)",
          "name": {
            "givenName": "First name of the user (REQUIRED).",
            "familyName": "Last name of the user (REQUIRED).",
            "middleName": "Middle name of the user.",
            "honorificPrefix": "Salutation of the user.. e.g. Ms."
          },
          "externalId": "Scim id of the user. Usually an external reference of the user in a system external to Travelperk.",
          "title": "Title of the user. E.g. CEO.",
          "preferredLanguage": "User language, supported values: en, es, fr, de.",
          "locale": "User locale for localization purposes, e.g. en, en-gb, es, es-co, fr, de.",
          "phoneNumbers": [
            {
              "value": "Phone number of the user. Example: +34 000000000.",
              "type": "work"
            }
          ],
          "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
            "costCenter": "Cost center name. It needs to exist in Travelperk."
          },
          "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User": {
            "gender": "User gender. accepted values: M, F.",
            "dateOfBirth": "Date of birth in format YYYY-MM-DD.",
            "travelPolicy": "Travel policy name. It needs to exist in Travelperk.",
            "invoiceProfiles": [
              {
                "value": "Invoice profile name. It needs to exists in Travelperk."
              }
            ],
            "emergencyContact": {
              "name": "Name of the contact",
              "phone": "Phone number of the contact. Example: +34 123456789"
            },
            "approvers": [
              {
                "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
              }
            ],
            "countryOfResidence": "Code of the country. E.g. ES",
            "travelDocuments": [
              {
                "documentType": "The type of the document. Either 'passport' or id'",
                "documentNumber": "The number of the document.",
                "givenName": "The first name of the user as stated in the document.",
                "middleName": "The middle name of the user as stated in the document, if any.",
                "familyName": "The last name of the user as stated in the document.",
                "gender": "The gender of the user. Either 'F' or 'M'.",
                "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
                "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
                "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
                "citizenship": "The country code of the citizenship of the user (e.g. ES)"
              }
            ]
          }
        }
      },
      "Name": {
        "title": "Name",
        "required": [
          "givenName",
          "familyName",
          "middleName",
          "honorificPrefix"
        ],
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "honorificPrefix": {
            "type": "string"
          }
        },
        "example": {
          "givenName": "First name of the user (REQUIRED).",
          "familyName": "Last name of the user (REQUIRED).",
          "middleName": "Middle name of the user.",
          "honorificPrefix": "Salutation of the user.. e.g. Ms."
        }
      },
      "PhoneNumber": {
        "title": "PhoneNumber",
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "value": "Phone number of the user. Example: +34 000000000.",
          "type": "work"
        }
      },
      "UrnIetfParamsScimSchemasExtensionEnterprise20User": {
        "title": "UrnIetfParamsScimSchemasExtensionEnterprise20User",
        "required": [
          "costCenter"
        ],
        "type": "object",
        "properties": {
          "costCenter": {
            "type": "string"
          }
        },
        "example": {
          "costCenter": "Cost center name. It needs to exist in Travelperk."
        }
      },
      "UrnIetfParamsScimSchemasExtensionTravelperk20User": {
        "title": "UrnIetfParamsScimSchemasExtensionTravelperk20User",
        "required": [
          "gender",
          "dateOfBirth",
          "travelPolicy",
          "invoiceProfiles",
          "emergencyContact",
          "approvers",
          "countryOfResidence",
          "travelDocuments"
        ],
        "type": "object",
        "properties": {
          "gender": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "travelPolicy": {
            "type": "string"
          },
          "invoiceProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceProfile"
            },
            "description": ""
          },
          "emergencyContact": {
            "$ref": "#/components/schemas/EmergencyContact"
          },
          "approvers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Approver"
            },
            "description": ""
          },
          "countryOfResidence": {
            "type": "string"
          },
          "travelDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravelDocument"
            },
            "description": ""
          }
        },
        "example": {
          "gender": "User gender. accepted values: M, F.",
          "dateOfBirth": "Date of birth in format YYYY-MM-DD.",
          "travelPolicy": "Travel policy name. It needs to exist in Travelperk.",
          "invoiceProfiles": [
            {
              "value": "Invoice profile name. It needs to exists in Travelperk."
            }
          ],
          "emergencyContact": {
            "name": "Name of the contact",
            "phone": "Phone number of the contact. Example: +34 123456789"
          },
          "approvers": [
            {
              "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
            }
          ],
          "countryOfResidence": "Code of the country. E.g. ES",
          "travelDocuments": [
            {
              "documentType": "The type of the document. Either 'passport' or id'",
              "documentNumber": "The number of the document.",
              "givenName": "The first name of the user as stated in the document.",
              "middleName": "The middle name of the user as stated in the document, if any.",
              "familyName": "The last name of the user as stated in the document.",
              "gender": "The gender of the user. Either 'F' or 'M'.",
              "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
              "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
              "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
              "citizenship": "The country code of the citizenship of the user (e.g. ES)"
            }
          ]
        }
      },
      "InvoiceProfile": {
        "title": "InvoiceProfile",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "Invoice profile name. It needs to exists in Travelperk."
        }
      },
      "EmergencyContact": {
        "title": "EmergencyContact",
        "required": [
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "example": {
          "name": "Name of the contact",
          "phone": "Phone number of the contact. Example: +34 123456789"
        }
      },
      "Approver": {
        "title": "Approver",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
        }
      },
      "TravelDocument": {
        "title": "TravelDocument",
        "required": [
          "documentType",
          "documentNumber",
          "givenName",
          "middleName",
          "familyName",
          "gender",
          "issuingCountry",
          "issuingDate",
          "expirationDate",
          "citizenship"
        ],
        "type": "object",
        "properties": {
          "documentType": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "givenName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "issuingCountry": {
            "type": "string"
          },
          "issuingDate": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "citizenship": {
            "type": "string"
          }
        },
        "example": {
          "documentType": "The type of the document. Either 'passport' or id'",
          "documentNumber": "The number of the document.",
          "givenName": "The first name of the user as stated in the document.",
          "middleName": "The middle name of the user as stated in the document, if any.",
          "familyName": "The last name of the user as stated in the document.",
          "gender": "The gender of the user. Either 'F' or 'M'.",
          "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
          "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
          "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
          "citizenship": "The country code of the citizenship of the user (e.g. ES)"
        }
      },
      "CreateUserRequest": {
        "title": "CreateUserRequest",
        "required": [
          "schemas",
          "userName",
          "active",
          "name",
          "externalId",
          "title",
          "preferredLanguage",
          "locale",
          "phoneNumbers",
          "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
          "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userName": {
            "type": "string"
          },
          "active": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "externalId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "preferredLanguage": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "description": ""
          },
          "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
            "$ref": "#/components/schemas/UrnIetfParamsScimSchemasExtensionEnterprise20User"
          },
          "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User": {
            "$ref": "#/components/schemas/UrnIetfParamsScimSchemasExtensionTravelperk20User"
          }
        },
        "example": {
          "schemas": [
            "urn:ietf:params:scim:schemas:core:2.0:User",
            "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
            "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User"
          ],
          "userName": "valid email address (REQUIRED)",
          "active": "boolean true (REQUIRED)",
          "name": {
            "givenName": "First name of the user (REQUIRED).",
            "familyName": "Last name of the user (REQUIRED).",
            "middleName": "Middle name of the user.",
            "honorificPrefix": "Salutation of the user.. e.g. Ms."
          },
          "externalId": "Scim id of the user. Usually an external reference of the user in a system external to Travelperk.",
          "title": "Title of the user. E.g. CEO.",
          "preferredLanguage": "User laguage, supported values: en, es, fr, de.",
          "locale": "User locale for localization purposes, e.g. en, en-gb, es, es-co, fr, de.",
          "phoneNumbers": [
            {
              "value": "Phone number of the user. Example: +34 000000000.",
              "type": "work"
            }
          ],
          "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
            "costCenter": "Cost center name. It needs to exist in Travelperk."
          },
          "urn:ietf:params:scim:schemas:extension:travelperk:2.0:User": {
            "gender": "User gender. accepted values: M, F.",
            "dateOfBirth": "Date of birth in format YYYY-MM-DD.",
            "travelPolicy": "Travel policy name. It needs to exist in Travelperk.",
            "invoiceProfiles": [
              {
                "value": "Invoice profile name. It needs to exists in Travelperk."
              }
            ],
            "emergencyContact": {
              "name": "Name of the contact",
              "phone": "Phone number of the contact. Example: +34 123456789"
            },
            "approvers": [
              {
                "value": "Travelperk Id of the user to be set as approver for the user. The approver needs to exist in Travelperk."
              }
            ],
            "countryOfResidence": "Code of the country. E.g. ES",
            "travelDocuments": [
              {
                "documentType": "The type of the document. Either 'passport' or id'",
                "documentNumber": "The number of the document.",
                "givenName": "The first name of the user as stated in the document.",
                "middleName": "The middle name of the user as stated in the document, if any.",
                "familyName": "The last name of the user as stated in the document.",
                "gender": "The gender of the user. Either 'F' or 'M'.",
                "issuingCountry": "The country code of the issuing country of the document. E.g. ES",
                "issuingDate": "The issuing date of the document in the YYYY-MM-DD format.",
                "expirationDate": "The expiration date of the document in the YYYY-MM-DD format.",
                "citizenship": "The country code of the citizenship of the user (e.g. ES)"
              }
            ]
          }
        }
      },
      "CreateUserminimumrequiredattributesRequest": {
        "title": "CreateUserminimumrequiredattributesRequest",
        "required": [
          "schemas",
          "userName",
          "active",
          "name"
        ],
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userName": {
            "type": "string"
          },
          "active": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/Name2"
          }
        },
        "example": {
          "schemas": [
            "urn:ietf:params:scim:schemas:core:2.0:User",
            "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"
          ],
          "userName": "valid email address (REQUIRED)",
          "active": "boolean true (REQUIRED)",
          "name": {
            "givenName": "First name of the user (REQUIRED).",
            "familyName": "Last name of the user (REQUIRED)."
          }
        }
      },
      "Name2": {
        "title": "Name2",
        "required": [
          "givenName",
          "familyName"
        ],
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          }
        },
        "example": {
          "givenName": "First name of the user (REQUIRED).",
          "familyName": "Last name of the user (REQUIRED)."
        }
      },
      "GuidelinesfortheCzechRepublic": {
        "title": "GuidelinesfortheCzechRepublic",
        "required": [
          "details",
          "location",
          "updated_at",
          "guidelines",
          "risk_level",
          "summary"
        ],
        "type": "object",
        "properties": {
          "details": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "updated_at": {
            "type": "string"
          },
          "guidelines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Guideline"
            },
            "description": ""
          },
          "risk_level": {
            "$ref": "#/components/schemas/RiskLevel"
          },
          "summary": {
            "type": "string"
          }
        },
        "example": {
          "details": "COVID-19",
          "location": {
            "name": "Czechia",
            "country_code": "CZ",
            "type": "country"
          },
          "updated_at": "2020-10-22T00:00:07+00:00",
          "guidelines": [
            {
              "details": "On October 5 a 'State of Emergency' has been declared and many cultural and entertainment venues have closed until further notice. Social gatherings are limited to 10 people indoors and 20 people outdoors. We recommend keeping up-to-date with official guidelines throughout your trip.",
              "category": {
                "id": "government_measures",
                "name": "Government measures"
              },
              "sub_category": {
                "id": "state_of_emergency",
                "name": "State of emergency"
              },
              "severity": "3/3",
              "summary": "The local government has declared a state of emergency."
            },
            {
              "details": "Bars are closed to limit the rate of transmission. Additionally, the consumption of alcohol in public spaces is prohibited.",
              "category": {
                "id": "bars",
                "name": "Bars"
              },
              "sub_category": {
                "id": "closed",
                "name": "Closed"
              },
              "severity": "3/3",
              "summary": "Bars are closed."
            },
            {
              "details": "Shops are open with adapted safety measures in place, such as the use of hand sanitizer and social distancing. Some non-essential businesses remain open and must operate with strict preventative health measures.",
              "category": {
                "id": "shops",
                "name": "Shops"
              },
              "sub_category": {
                "id": "restrictions_in_place",
                "name": "Restrictions in place"
              },
              "severity": "2/3",
              "summary": "Shops are open with restrictions in place."
            },
            {
              "details": "Restaurants are open for take-away or delivery services only and must close by 8 pm.",
              "category": {
                "id": "restaurants",
                "name": "Restaurants"
              },
              "sub_category": {
                "id": "restrictions_in_place",
                "name": "Restrictions in place"
              },
              "severity": "2/3",
              "summary": "Restaurants are open with restrictions in place."
            },
            {
              "details": "Nightclubs are closed to limit the rate of transmission. Additionally, the consumption of alcohol in public spaces is prohibited.",
              "category": {
                "id": "nightclubs",
                "name": "Nightclubs"
              },
              "sub_category": {
                "id": "closed",
                "name": "Closed"
              },
              "severity": "3/3",
              "summary": "Nightclubs remain closed to limit the rate of transmission."
            },
            {
              "details": "Public transportation is operating with social distancing rules in place.",
              "category": {
                "id": "public_transportation",
                "name": "Public transportation"
              },
              "sub_category": {
                "id": "restrictions_in_place",
                "name": "Restrictions in place"
              },
              "severity": "2/3",
              "summary": "Public transportation is operating with restrictions."
            },
            {
              "details": "Face masks are required in all indoor and outdoor public spaces, including on public transport.",
              "category": {
                "id": "use_of_mask",
                "name": "Use of mask"
              },
              "sub_category": {
                "id": "required",
                "name": "Required"
              },
              "severity": "3/3",
              "summary": "Face masks are required."
            }
          ],
          "risk_level": {
            "id": "medium",
            "name": "medium",
            "details": "COVID-19 transmission is medium in Czechia. The transmission level is based on global health and disease data from John Hopkins University, updated October 2020."
          },
          "summary": "While traveling in Czechia you will be required to follow the guidelines introduced by the local government. These regulations are based on risk levels and aimed at improving your safety."
        }
      },
      "Location": {
        "title": "Location",
        "required": [
          "name",
          "country_code",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "name": "Czechia",
          "country_code": "CZ",
          "type": "country"
        }
      },
      "Guideline": {
        "title": "Guideline",
        "required": [
          "details",
          "category",
          "sub_category",
          "severity",
          "summary"
        ],
        "type": "object",
        "properties": {
          "details": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "sub_category": {
            "$ref": "#/components/schemas/SubCategory"
          },
          "severity": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        },
        "example": {
          "details": "On October 5 a 'State of Emergency' has been declared and many cultural and entertainment venues have closed until further notice. Social gatherings are limited to 10 people indoors and 20 people outdoors. We recommend keeping up-to-date with official guidelines throughout your trip.",
          "category": {
            "id": "government_measures",
            "name": "Government measures"
          },
          "sub_category": {
            "id": "state_of_emergency",
            "name": "State of emergency"
          },
          "severity": "3/3",
          "summary": "The local government has declared a state of emergency."
        }
      },
      "Category": {
        "title": "Category",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": "government_measures",
          "name": "Government measures"
        }
      },
      "SubCategory": {
        "title": "SubCategory",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": "state_of_emergency",
          "name": "State of emergency"
        }
      },
      "RiskLevel": {
        "title": "RiskLevel",
        "required": [
          "id",
          "name",
          "details"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        },
        "example": {
          "id": "medium",
          "name": "medium",
          "details": "COVID-19 transmission is medium in Czechia. The transmission level is based on global health and disease data from John Hopkins University, updated October 2020."
        }
      },
      "RestrictionsfromIT-NLthe2020-09-29": {
        "title": "RestrictionsfromIT-NLthe2020-09-29",
        "required": [
          "origin",
          "destination",
          "authorization_status",
          "requirements",
          "details",
          "start_date",
          "updated_at",
          "summary"
        ],
        "type": "object",
        "properties": {
          "origin": {
            "$ref": "#/components/schemas/Origin"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "authorization_status": {
            "type": "string"
          },
          "requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Requirement"
            },
            "description": ""
          },
          "details": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        },
        "example": {
          "origin": {
            "name": "Netherlands",
            "country_code": "NL",
            "type": "country"
          },
          "destination": {
            "name": "Italy",
            "country_code": "IT",
            "type": "country"
          },
          "authorization_status": "restricted",
          "requirements": [
            {
              "category": {
                "id": "test_medical_certificate",
                "name": "Test/medical certificate"
              },
              "sub_category": {
                "id": "test_medical_certificate_required",
                "name": "Test/medical certificate required"
              },
              "details": "If a 'high-risk' country been visited in the past 14 days, a negative PCR test certificate must be presented on departure. The test must be taken no more than 72 hours before the intended travel date. \r\n\r\nThere is also the option to be tested on arrival, either at the airport or at a facility. Travelers tested on arrival will be required to self-isolate until a negative test result has been rendered. If the test result is positive, quarantine is required until two consecutive negative tests have been recorded.",
              "start_date": "2020-09-07",
              "documents": [],
              "summary": "A medical certificate or recent test is required to travel to this destination"
            },
            {
              "category": {
                "id": "additional_documentation",
                "name": "Additional documentation"
              },
              "sub_category": {
                "id": "additional_document_needed",
                "name": "Additional documents required"
              },
              "details": "A completed 'self-declaration form' must be presented prior to boarding.",
              "start_date": "2020-09-07",
              "documents": [
                {
                  "name": "Self-declaration form",
                  "document_url": "https://www.esteri.it/mae/resource/doc/2020/09/modulo_rientro_da_estero_11_09_20_en.pdf"
                }
              ],
              "summary": "There is additional documentation required to travel between these two locations"
            },
            {
              "category": {
                "id": "other_restrictions",
                "name": "Other restrictions"
              },
              "sub_category": {
                "id": "other_restrictions",
                "name": "Other restrictions"
              },
              "details": "Even if a test is not required, travelers must call the COVID-19 helpline for the region they are visiting within 48 hours after arrival to inform them of the visit.\r\n\r\nMore information and regional helplines can be found at http://www.salute.gov.it/portale/nuovocoronavirus/dettaglioContenutiNuovoCoronavirus.jsp?lingua=english&id=5371&area=nuovoCoronavirus&menu=vuoto",
              "start_date": "2020-09-07",
              "documents": [],
              "summary": "There are other restrictions in place to travel to this destination"
            }
          ],
          "details": "On September 7, the Italian government updated entry restrictions in alignment with the European Commission. It is necessary to comply with requirements to ensure entry is permitted.\r\n\r\nArrivals may be required to self-isolate for 14 days on arrival if they have visited a 'high-risk' country in the previous 14 days. \r\n\r\nMore details and exceptions can be found at https://www.esteri.it/mae/en/ministero/normativaonline/decreto-iorestoacasa-domande-frequenti/focus-cittadini-italiani-in-rientro-dall-estero-e-cittadini-stranieri-in-italia.html",
          "start_date": "2020-09-07",
          "updated_at": "2020-10-09T09:25:00+00:00",
          "summary": "Italy's borders are partially open arriving from The netherlands. Measures in place: additional documentation, test/medical certificate and other restrictions ."
        }
      },
      "Origin": {
        "title": "Origin",
        "required": [
          "name",
          "country_code",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "name": "Netherlands",
          "country_code": "NL",
          "type": "country"
        }
      },
      "Destination": {
        "title": "Destination",
        "required": [
          "name",
          "country_code",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "name": "Italy",
          "country_code": "IT",
          "type": "country"
        }
      },
      "Requirement": {
        "title": "Requirement",
        "required": [
          "category",
          "sub_category",
          "details",
          "start_date",
          "documents",
          "summary"
        ],
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "sub_category": {
            "$ref": "#/components/schemas/SubCategory"
          },
          "details": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "description": ""
          },
          "summary": {
            "type": "string"
          }
        },
        "example": {
          "category": {
            "id": "test_medical_certificate",
            "name": "Test/medical certificate"
          },
          "sub_category": {
            "id": "test_medical_certificate_required",
            "name": "Test/medical certificate required"
          },
          "details": "If a 'high-risk' country been visited in the past 14 days, a negative PCR test certificate must be presented on departure. The test must be taken no more than 72 hours before the intended travel date. \r\n\r\nThere is also the option to be tested on arrival, either at the airport or at a facility. Travelers tested on arrival will be required to self-isolate until a negative test result has been rendered. If the test result is positive, quarantine is required until two consecutive negative tests have been recorded.",
          "start_date": "2020-09-07",
          "documents": [],
          "summary": "A medical certificate or recent test is required to travel to this destination"
        }
      },
      "Document": {
        "title": "Document",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "document_url": {
            "type": "string"
          }
        }
      },
      "AirlineSafetyMeasuresforLufthansa": {
        "title": "AirlineSafetyMeasuresforLufthansa",
        "required": [
          "airline",
          "safety_measures",
          "info_source",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "airline": {
            "$ref": "#/components/schemas/Airline"
          },
          "safety_measures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SafetyMeasure"
            },
            "description": ""
          },
          "info_source": {
            "$ref": "#/components/schemas/InfoSource"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "example": {
          "airline": {
            "name": "Lufthansa",
            "iata_code": "LH"
          },
          "safety_measures": [
            {
              "category": {
                "id": "seat_blocking",
                "name": "Seat blocking"
              },
              "sub_category": {
                "id": "false",
                "name": "false"
              },
              "details": "",
              "summary": "Fewer passengers on board make it easier to keep a safe distance."
            },
            {
              "category": {
                "id": "test_or_temperature_check",
                "name": "Test or temperature checks"
              },
              "sub_category": {
                "id": "false",
                "name": "false"
              },
              "details": "",
              "summary": "Passengers are subject to COVID-19 tests or temperature checks at the gate."
            },
            {
              "category": {
                "id": "ppe_for_airline_crew",
                "name": "PPE for airline crew"
              },
              "sub_category": {
                "id": "true",
                "name": "true"
              },
              "details": "Crew members are required to wear face masks.",
              "summary": "Crew are wearing additional protective clothing."
            },
            {
              "category": {
                "id": "limited_food_services",
                "name": "Limited food service"
              },
              "sub_category": {
                "id": "true",
                "name": "true"
              },
              "details": "Onboard services are available and are provided according to flight duration and the fare type. Special meals may be ordered in advance for flights longer than 180m.",
              "summary": "Fewer options available from the on-board menu."
            },
            {
              "category": {
                "id": "advanced_cabin_disinfection",
                "name": "Advanced cabin disinfection"
              },
              "sub_category": {
                "id": "true",
                "name": "true"
              },
              "details": "The frequency and intensity of cabin cleanings have increased. This applies in particular to common contact surfaces and toilets.",
              "summary": "Daily deep cleaning of the cabin and regular disinfection of key surfaces."
            },
            {
              "category": {
                "id": "use_of_mask",
                "name": "Mandatory face masks"
              },
              "sub_category": {
                "id": "true",
                "name": "true"
              },
              "details": "Masks must completely cover the mouth and nose and be secured under the chin. Face shields, FFP masks with a valve, and loose fabric materials can be worn but should not replace a face mask.",
              "summary": "Passengers must wear face masks covering their nose and mouth at all times."
            },
            {
              "category": {
                "id": "hospital_grade_filters",
                "name": "Hospital-grade air filters"
              },
              "sub_category": {
                "id": "true",
                "name": "true"
              },
              "details": "The aircraft are equipped with HEPA filters, which remove 99.97% of airborne particles and is similar to technology found in hospitals. This circulation system exchanges cabin air with fresh air every 2-3 minutes.",
              "summary": "To remove dust, bacteria, and viruses and refresh cabinâ€™s air every 3 minutes."
            },
            {
              "category": {
                "id": "boarding_or_dissembarking_measurements",
                "name": "New boarding and disembarking measures"
              },
              "sub_category": {
                "id": "true",
                "name": "true"
              },
              "details": "Travelers should wait until their boarding group is called before using the automatic gates to board the aircraft. Instructions for disembarkment will be announced by crew members. Disinfectant wipes will also be provided to passengers for the purpose of cleaning the surfaces in and around their seats.",
              "summary": "To help passengers can keep a safe distance from one another."
            }
          ],
          "info_source": {
            "name": "Lufthansa' info source",
            "url": "https://www.lufthansa.com/de/en/protection-measures"
          },
          "updated_at": "2020-10-22T08:16:41.925325+00:00"
        }
      },
      "Airline": {
        "title": "Airline",
        "required": [
          "name",
          "iata_code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "iata_code": {
            "type": "string"
          }
        },
        "example": {
          "name": "Lufthansa",
          "iata_code": "LH"
        }
      },
      "SafetyMeasure": {
        "title": "SafetyMeasure",
        "required": [
          "category",
          "sub_category",
          "details",
          "summary"
        ],
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "sub_category": {
            "$ref": "#/components/schemas/SubCategory"
          },
          "details": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        },
        "example": {
          "category": {
            "id": "seat_blocking",
            "name": "Seat blocking"
          },
          "sub_category": {
            "id": "false",
            "name": "false"
          },
          "details": "",
          "summary": "Fewer passengers on board make it easier to keep a safe distance."
        }
      },
      "InfoSource": {
        "title": "InfoSource",
        "required": [
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "name": "Lufthansa' info source",
          "url": "https://www.lufthansa.com/de/en/protection-measures"
        }
      },
      "Listok": {
        "title": "Listok",
        "required": [
          "offset",
          "limit",
          "cost_centers"
        ],
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "cost_centers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostCenter"
            },
            "description": ""
          }
        },
        "example": {
          "offset": 0,
          "limit": 10,
          "cost_centers": [
            {
              "id": "1",
              "name": "My First Cost Center",
              "count_users": 0
            },
            {
              "id": "2",
              "name": "New Name",
              "count_users": 0
            }
          ]
        }
      },
      "CostCenter": {
        "title": "CostCenter",
        "required": [
          "id",
          "name",
          "count_users"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "count_users": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "1",
          "name": "My First Cost Center",
          "count_users": 0
        }
      },
      "Error": {
        "title": "Error",
        "required": [
          "type",
          "errors"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error1"
            },
            "description": ""
          }
        },
        "example": {
          "type": "bad_request",
          "errors": [
            {
              "reason": "Field 'limit' must be a positive integer"
            }
          ]
        }
      },
      "Error1": {
        "title": "Error1",
        "required": [
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          }
        },
        "example": {
          "reason": "Field 'limit' must be a positive integer"
        }
      },
      "Listerr_4001": {
        "title": "Listerr_4001",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "error": {
            "type": "bad_request",
            "errors": [
              {
                "reason": "Field 'limit' must be a positive integer"
              }
            ]
          }
        }
      },
      "Error4": {
        "title": "Error4",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "not_found"
        }
      },
      "Detailerr_4041": {
        "title": "Detailerr_4041",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error4"
          }
        },
        "example": {
          "error": {
            "type": "not_found"
          }
        }
      },
      "Detailok": {
        "title": "Detailok",
        "required": [
          "id",
          "name",
          "archived",
          "users",
          "count_users"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": ""
          },
          "count_users": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "2",
          "name": "My Cost Center",
          "archived": false,
          "users": [
            {
              "first_name": "John",
              "last_name": "Smith",
              "email": "johnsmith@company.com",
              "id": 1234,
              "phone": null,
              "profile_picture": null
            }
          ],
          "count_users": 1
        }
      },
      "User": {
        "title": "User",
        "required": [
          "first_name",
          "last_name",
          "email",
          "id",
          "phone",
          "profile_picture"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "profile_picture": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "first_name": "John",
          "last_name": "Smith",
          "email": "johnsmith@company.com",
          "id": 1234,
          "phone": null,
          "profile_picture": null
        }
      },
      "CreateRequest": {
        "title": "CreateRequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "My First Cost Center"
        }
      },
      "Createok": {
        "title": "Createok",
        "required": [
          "id",
          "name",
          "archived",
          "users",
          "count_users"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "count_users": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "1",
          "name": "My First Cost Center",
          "archived": false,
          "users": [],
          "count_users": 0
        }
      },
      "Createerr_4001": {
        "title": "Createerr_4001",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "error": {
            "type": "bad_request",
            "errors": [
              {
                "reason": "Field 'name' must be present and of type string"
              }
            ]
          }
        }
      },
      "UpdateRequest": {
        "title": "UpdateRequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "New Name"
        }
      },
      "Updateok": {
        "title": "Updateok",
        "required": [
          "id",
          "name",
          "archived",
          "users",
          "count_users"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "count_users": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "2",
          "name": "New Name",
          "archived": false,
          "users": [],
          "count_users": 0
        }
      },
      "Updateerr_4041": {
        "title": "Updateerr_4041",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error4"
          }
        },
        "example": {
          "error": {
            "type": "not_found"
          }
        }
      },
      "Updateerr_4001": {
        "title": "Updateerr_4001",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "error": {
            "type": "bad_request",
            "errors": [
              {
                "reason": "Invalid parameters. Please provide at least one of: 'name', 'archive'"
              }
            ]
          }
        }
      },
      "UpdateBulkok": {
        "title": "UpdateBulkok",
        "required": [
          "updated_count"
        ],
        "type": "object",
        "properties": {
          "updated_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "updated_count": 2
        }
      },
      "UpdateBulkerr_4041": {
        "title": "UpdateBulkerr_4041",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "error": {
            "type": "not_found",
            "errors": [
              {
                "reason": "Cost centers with ids [3, 4] not found"
              }
            ]
          }
        }
      },
      "SetUserserr_4001": {
        "title": "SetUserserr_4001",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "error": {
            "type": "bad_request",
            "errors": [
              {
                "reason": "Users not found"
              }
            ]
          }
        }
      },
      "SetUsersok": {
        "title": "SetUsersok",
        "required": [
          "id",
          "name",
          "archived",
          "users",
          "count_users"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": ""
          },
          "count_users": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "2",
          "name": "My Cost Center",
          "archived": false,
          "users": [
            {
              "first_name": "John",
              "last_name": "Smith",
              "email": "johnsmith@company.com",
              "id": 1234,
              "phone": null,
              "profile_picture": null
            }
          ],
          "count_users": 1
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "description": "",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ],
  "tags": [
    {
      "name": "Invoices"
    },
    {
      "name": "{webhook id}"
    },
    {
      "name": "webhooks"
    },
    {
      "name": "Update user attributes"
    },
    {
      "name": "Remove user attributes"
    },
    {
      "name": "SCIM user provisioning",
      "description": "Allow to create, update and delete users in Travelperk. \nRetrieve users, SCIM configuration and schemas.\n\nThe {{baseUrl}} for travelperk production account is https://app.travelperk.com."
    },
    {
      "name": "TravelSafe"
    },
    {
      "name": "Cost Centers"
    },
    {
      "name": "Trips"
    },
    {
      "name": "Users"
    }
  ]
}