{
  "openapi": "3.0.0",
  "info": {
    "title": "Mailjet API",
    "description": "A complete collection of all publicly available endpoints and methods for the Mailjet API",
    "version": "1.0",
    "x-logo": {
      "url": "https://fr.mailjet.com/wp-content/themes/mailjet/mailjet/img/favicon_mj.ico"
    }
  },
  "servers": [
    {
      "url": "https://api.mailjet.com"
    }
  ],
  "paths": {
    "/v3.1/send": {
      "post": {
        "summary": "Send Email",
        "operationId": "SendEmailEmailv3.1",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendYourFirstEmailRequest"
              },
              "example": {
                "Messages": [
                  {
                    "From": {
                      "Email": "sender@example.com",
                      "Name": "Me"
                    },
                    "To": [
                      {
                        "Email": "recipient@example.com",
                        "Name": "You"
                      }
                    ],
                    "Subject": "My first Mailjet Email!",
                    "TextPart": "Greetings from Mailjet!",
                    "HTMLPart": "<h3>Dear passenger 1, welcome to <a href=\"https://www.mailjet.com/\">Mailjet!</a></h3><br />May the delivery force be with you!"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false,
        "tags": [
          "Send Email"
        ]
      }
    },
    "/v3/REST/message/{message_ID}": {
      "get": {
        "tags": [
          "Getting Started Examples"
        ],
        "summary": "Retrieve Your Sent Message",
        "operationId": "RetrieveYourSentMessage",
        "parameters": [
          {
            "name": "message_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/message": {
      "get": {
        "tags": [
          "Getting Started Examples"
        ],
        "summary": "Retrieve Messages Sent to a Specific Email Address",
        "operationId": "RetrieveMessagesSenttoaSpecificEmailAddress",
        "parameters": [
          {
            "name": "ContactAlt",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{{Recipient_Email}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/messagehistory/{message_ID}": {
      "get": {
        "tags": [
          "Getting Started Examples"
        ],
        "summary": "View Message Event History",
        "operationId": "ViewMessageEventHistory",
        "parameters": [
          {
            "name": "message_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/statcounters": {
      "get": {
        "tags": [
          "Getting Started Examples"
        ],
        "summary": "Retrieve Aggregated Statistics for an API Key",
        "operationId": "RetrieveAggregatedStatisticsforanAPIKey",
        "parameters": [
          {
            "name": "CounterSource",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "APIKey"
            }
          },
          {
            "name": "CounterTiming",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Message"
            }
          },
          {
            "name": "CounterResolution",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Lifetime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/send": {
      "post": {
        "tags": [
          "Send Email"
        ],
        "summary": "Send API v3",
        "description": "Send a message via Send API v3. Send API v3 is built mainly for speed, allowing you to send up to 100 messages in a single API call, as opposed to v3.1, where the limit is 50 messages per call. However, it lacks some of the more complex functionalities of Send API v3.1 like detailed feedback information in case of sending errors.",
        "operationId": "SendAPIv3",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendAPIv3Request"
              },
              "example": {
                "Messages": [
                  {
                    "FromEmail": "pilot@mailjet.com",
                    "FromName": "Your Mailjet Pilot",
                    "Sender": true,
                    "Recipients": [
                      {
                        "Email": "passenger@mailjet.com",
                        "Name": "Passenger 1",
                        "Vars": "array"
                      }
                    ],
                    "To": "Passenger 1 <passenger@mailjet.com>",
                    "Cc": "Passenger 2 <passenger2@mailjet.com>",
                    "Bcc": "Passenger 3 <passenger3@mailjet.com>",
                    "Subject": "Your email flight plan!",
                    "Text-part": "Dear passenger, welcome to Mailjet! May the delivery force be with you!",
                    "Html-part": "<h3>Dear passenger, welcome to Mailjet!</h3><br />May the delivery force be with you!",
                    "Mj-TemplateID": 123456,
                    "Mj-TemplateLanguage": false,
                    "Mj-TemplateErrorReporting": "reports@example.com",
                    "Mj-TemplateErrorDeliver": 0,
                    "Attachments": [
                      {
                        "Filename": "test.txt",
                        "Content-type": "text/plain",
                        "Content": "VGhpcyBpcyB5b3VyIGF0dGFjaGVkIGZpbGUhISEK"
                      }
                    ],
                    "Inline_attachments": [
                      {
                        "Filename": "logo.gif",
                        "Content-type": "image/gif",
                        "Content": "R0lGODlhEAAQAOYAAP////748v39/Pvq1vr6+lJSVeqlK/zqyv7+/unKjJ+emv78+fb29pucnfrlwvTCi9ra2vTCa6urrWdoaurr6/Pz8uHh4vn49PO7QqGfmumaN+2uS1ZWWfr27uyuLnBxd/z8+0pLTvHAWvjar/zr2Z6cl+jal+2kKmhqcEJETvHQbPb07lBRVPv6+cjJycXFxn1+f//+/f337nF0efO/Mf306NfW0fjHSJOTk/TKlfTp0Prlx/XNj83HuPfEL+/v8PbJgueXJOzp4MG8qUNES9fQqN3d3vTJa/vq1f317P769f/8+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MjY5ODYxMzYzMkJCMTFFMDkzQkFFMkFENzVGN0JGRkYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MjY5ODYxMzczMkJCMTFFMDkzQkFFMkFENzVGN0JGRkYiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoyNjk4NjEzNDMyQkIxMUUwOTNCQUUyQUQ3NUY3QkZGRiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoyNjk4NjEzNTMyQkIxMUUwOTNCQUUyQUQ3NUY3QkZGRiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf29fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxLSklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcGBQQDAgEAACH5BAEAAAAALAAAAAAQABAAAAdUgACCg4SFhoeIiYRGLhaKhA0TMDgSLxAUiEIZHAUsIUQpKAo9Og6FNh8zJUNFJioYQIgJRzc+NBEkiAcnBh4iO4o8QRsjj0gaOY+CDwPKzs/Q0YSBADs="
                      }
                    ],
                    "Mj-prio": 2,
                    "Mj-campaign": "SendAPI_campaign",
                    "Mj-deduplicatecampaign": 1,
                    "Mj-trackopen": 0,
                    "Mj-CustomID": "CustomValue",
                    "Mj-EventPayload": "Eticket,1234,row,15,seat,B",
                    "Mj-MonitoringCategory": "Category1",
                    "Headers": "object",
                    "Vars": "object"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/messageinformation": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Retrieve Sending / Size / Spam Info about All Messages",
        "description": "Retrieve sending / size / spam information about all messages.",
        "operationId": "RetrieveSending/Size/SpamInfoaboutAllMessages",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/messageinformation/{message_ID}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Retrieve Sending / Size / Spam Info about a Single Message",
        "description": "Retrieve sending / size / spam information about a specific message ID.",
        "operationId": "RetrieveSending/Size/SpamInfoaboutaSingleMessage",
        "parameters": [
          {
            "name": "message_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contact": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve All Contacts",
        "description": "Retrieve a list of all contacts. Includes information about contact status and creation / activity timestamps.\r\n\r\n",
        "operationId": "RetrieveAllContacts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create Contact",
        "description": "Add a new unique contact to your global contact list and select its exclusion status.\r\n\r\n",
        "operationId": "CreateContact",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactRequest"
              },
              "example": {
                "IsExcludedFromCampaigns": false,
                "Name": "Contact 1",
                "Email": "user@example.com"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contact/{contact_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve a Single Contact",
        "description": "Retrieve a specific contact. Includes information about contact status and creation / activity timestamps.\r\n\r\n",
        "operationId": "RetrieveaSingleContact",
        "parameters": [
          {
            "name": "contact_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update Contact",
        "description": "Update the user-given name and exclusion status of a specific contact.\r\n\r\n",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "name": "contact_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactRequest"
              },
              "example": {
                "IsExcludedFromCampaigns": false,
                "Name": "Updated Name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contact/{contact_ID}/getcontactslists": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve All Lists a Contact is Part of",
        "description": "Retrieve all contact lists for a specific contact. You will receive information on the status of the contact for each list. Information about lists deleted within the last 60 days will be returned as well, since those are soft-deleted and can be reinstated.\r\n\r\n",
        "operationId": "RetrieveAllListsaContactisPartof",
        "parameters": [
          {
            "name": "contact_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contact/{contact_ID}/managecontactslists": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Manage the Lists a Contact is Part of",
        "description": "Manage the presence and subscription status of a contact for multiple contact lists. Select the contact lists, as well as the desired action to be performed on each one - add, remove or unsub. The contact should already be present in the global contact list.\r\n\r\n",
        "operationId": "ManagetheListsaContactisPartof",
        "parameters": [
          {
            "name": "contact_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagetheListsaContactisPartofRequest"
              },
              "example": {
                "ContactsLists": [
                  {
                    "ListID": 123456789,
                    "Action": "addnoforce"
                  },
                  {
                    "ListID": 987654321,
                    "Action": "addforce"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contact/managemanycontacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Manage the Lists for Multiple Contacts",
        "description": "Manage multiple contacts by adding, removing or unsubscribing them from multiple contact lists. Separate actions are set for each list and implemented for all contacts listed.\r\n\r\nOnce you submit the POST request, it will return a JobID, which you can use to verify the success of the POST request, as well as see what kind of errors came up.\r\n\r\n",
        "operationId": "ManagetheListsforMultipleContacts",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagetheListsforMultipleContactsRequest"
              },
              "example": {
                "ContactsLists": [
                  {
                    "ListID": 123456789,
                    "Action": "addforce"
                  }
                ],
                "Contacts": [
                  {
                    "Email": "email@example.com",
                    "Name": "contact_name",
                    "IsExcludedFromCampaigns": false,
                    "Properties": {
                      "property1": "value1",
                      "property2": "value2"
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contact/managemanycontacts/{Job_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve an Upload Request for Multiple Contacts",
        "description": "Use the JobID generated after a POST /contact/managemanycontacts request to check its success, as well as any errors that might have occurred.\r\n\r\n",
        "operationId": "RetrieveanUploadRequestforMultipleContacts",
        "parameters": [
          {
            "name": "Job_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactmetadata": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve All Contact Property Objects",
        "description": "Retrieve a list of contact properties and their general settings - name and data type.\r\n\r\n",
        "operationId": "RetrieveAllContactPropertyObjects",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a Contact Property Object",
        "description": "Create a new contact property. Select its name and data type, then use it to assign property values for contacts of your choice (with /contactdata).\r\n\r\n",
        "operationId": "CreateaContactPropertyObject",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaContactPropertyObjectRequest"
              },
              "example": {
                "Datatype": "str",
                "Name": "first_name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactmetadata/{contactmetadata_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve a Single Contact Property Object",
        "description": "Retrieve information on a specific contact property - its name and data type.\r\n\r\n",
        "operationId": "RetrieveaSingleContactPropertyObject",
        "parameters": [
          {
            "name": "contactmetadata_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a Contact Property Object",
        "description": "Update the settings of an existing contact property - name and data type. Changing the data type will not affect existing property values, but new values must be entered using the new data type.\r\n\r\n",
        "operationId": "UpdateaContactPropertyObject",
        "parameters": [
          {
            "name": "contactmetadata_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaContactPropertyObjectRequest"
              },
              "example": {
                "Datatype": "int",
                "Name": "integer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a Contact Property Object",
        "description": "Delete an existing contact property. Once the property is deleted, the values assigned to it for all contacts are also deleted.\r\n\r\n",
        "operationId": "DeleteaContactPropertyObject",
        "parameters": [
          {
            "name": "contactmetadata_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactdata": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve All Contact Property Values",
        "description": "Retrieve a list of contacts with all properties and respective values associated with those contacts.\r\n\r\n",
        "operationId": "RetrieveAllContactPropertyValues",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create Property Values for a Contact",
        "description": "Create the extra static data for a contact by using your already created /contactmetadata objects (contact properties) and assigning / updating values to them for the specific ContactID.\r\n\r\n",
        "operationId": "CreatePropertyValuesforaContact",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePropertyValuesforaContactRequest"
              },
              "example": {
                "ContactID": 123456,
                "Data": [
                  {
                    "Name": "Property1",
                    "value": "Value1"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactdata/{contact_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve the Property Values for a Contact",
        "description": "Retrieve all properties and respective values associated with a specific contact.\r\n\r\n",
        "operationId": "RetrievethePropertyValuesforaContact",
        "parameters": [
          {
            "name": "contact_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update Property Values for a Contact",
        "description": "Update the extra static data for a contact by using your already created /contactmetadata objects (contact properties) and assigning / updating values to them for the specific ContactID.\r\n\r\n",
        "operationId": "UpdatePropertyValuesforaContact",
        "parameters": [
          {
            "name": "contact_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePropertyValuesforaContactRequest"
              },
              "example": {
                "Data": [
                  {
                    "Name": "Property1",
                    "value": "UpdatedValue"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete Property Values for a Contact",
        "description": "Delete all contact property values relating to a specific contact.\r\n\r\n",
        "operationId": "DeletePropertyValuesforaContact",
        "parameters": [
          {
            "name": "contact_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactslist": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve All Contact Lists",
        "description": "Retrieve details for all contact lists - name, subscriber count, creation timestamp, deletion status.\r\n\r\n",
        "operationId": "RetrieveAllContactLists",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a Contact List",
        "description": "Create a new contact list.\r\n\r\n",
        "operationId": "CreateaContactList",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaContactListRequest"
              },
              "example": {
                "Name": "NewList",
                "IsDeleted": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactslist/{list_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve a Single Contact List",
        "description": "Retrieve details for a specific contact list - name, subscriber count, creation timestamp, deletion status.\r\n\r\n",
        "operationId": "RetrieveaSingleContactList",
        "parameters": [
          {
            "name": "list_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a Contact List",
        "description": "Update a specific contact list by changing its name and / or deletion status. Using PUT you can delete lists, as well as reinstate previously deleted ones.\r\n\r\n",
        "operationId": "UpdateaContactList",
        "parameters": [
          {
            "name": "list_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaContactListRequest"
              },
              "example": {
                "Name": "UpdatedList",
                "IsDeleted": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a Contact List",
        "description": "Delete a contact list. The ContactsList object will continue to exist with Deleted status for 30 days, and can be reinstated by changing the value of IsDeleted to false via PUT /contactslist/{list_ID}.",
        "operationId": "DeleteaContactList",
        "parameters": [
          {
            "name": "list_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactslist/{list_ID}/importlist": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Import a Contact List into Another List",
        "description": "Add, unsubscribe or remove the contacts present in a list to / from another list. The list ID specified in the body of the payload is the source, while ID in the path specifies the destination list.\r\n\r\n",
        "operationId": "ImportaContactListintoAnotherList",
        "parameters": [
          {
            "name": "list_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportaContactListintoAnotherListRequest"
              },
              "example": {
                "Action": "duplicate-override",
                "ListID": 123456
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactslist/{list_ID}/importlist/{job_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "View the Import Status of a List into Another List",
        "description": "Use the JobID generated after a POST /contactslist/{list_id}/importlist request to check its progress, success, as well as any errors that might have occurred.\r\n\r\n",
        "operationId": "ViewtheImportStatusofaListintoAnotherList",
        "parameters": [
          {
            "name": "list_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactslist/{list_ID}/managecontact": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Manage a Contact's Subscription to a List",
        "description": "Manage the presence and subscription status of a contact to a specific contact list. The API will internally create the new contact if it does not exist, as well as add or update the name and properties.\r\n\r\n",
        "operationId": "ManageaContact'sSubscriptiontoaList",
        "parameters": [
          {
            "name": "list_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageaContact%27sSubscriptiontoaListRequest"
              },
              "example": {
                "Email": "mrsmith@mailjet.com",
                "Name": "MrSmith",
                "Action": "addnoforce",
                "Properties": {
                  "property1": "value",
                  "propertyN": "valueN"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactslist/{list_ID}/managemanycontacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Manage the Sub Status of Multiple Contacts to a List",
        "description": "Manage multiple contacts by adding, removing or unsubscribing them from a specific contact list. Once you submit the POST request, it will return a JobID, which you can use to verify the success of the POST request, as well as see what kind of errors came up.\r\n\r\n",
        "operationId": "ManagetheSubStatusofMultipleContactstoaList",
        "parameters": [
          {
            "name": "list_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagetheSubStatusofMultipleContactstoaListRequest"
              },
              "example": {
                "Action": "addnoforce",
                "Contacts": [
                  {
                    "Email": "jimsmith@example.com",
                    "Name": "Jim",
                    "Properties": {
                      "Property1": "value",
                      "Property2": "value2"
                    }
                  },
                  {
                    "Email": "janetdoe@example.com",
                    "Name": "Janet",
                    "Properties": {
                      "Property1": "value",
                      "Property2": "value2"
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactslist/{list_ID}/managemanycontacts/{job_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "View the Import Status of Multiple Contacts into a List",
        "description": "Use the JobID generated after a POST /contactslist/{list_id}/managemanycontacts request to check its progress, success, as well as any errors that might have occurred.\r\n\r\n",
        "operationId": "ViewtheImportStatusofMultipleContactsintoaList",
        "parameters": [
          {
            "name": "list_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/csvimport": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Import Contacts via a CSV",
        "description": "Add, remove or unsubscribe a list of contacts to/from a specific contact list by using a CSV uploaded to the Mailjet Data server. The CSV needs to be uploaded via the /contactslist/{list_id}/CSVData/text:plain endpoint.\r\n\r\n",
        "operationId": "ImportContactsviaaCSV",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportContactsviaaCSVRequest"
              },
              "example": {
                "ContactsListID": 123456,
                "DataID": 987654321,
                "Method": "addnoforce"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/csvimport/{importjob_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "View the Status of a CSV Import",
        "description": "View the settings and status of a contact CSV import job. The CSV needs to be uploaded via the /contactslist/{list_id}/CSVData/text:plain endpoint - only then can you create an import job.\r\n\r\n",
        "operationId": "ViewtheStatusofaCSVImport",
        "parameters": [
          {
            "name": "importjob_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a CSV Import in Progress",
        "description": "Update or abort a contact CSV import job in progress.\r\n\r\n",
        "operationId": "UpdateaCSVImportinProgress",
        "parameters": [
          {
            "name": "importjob_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaCSVImportinProgressRequest"
              },
              "example": {
                "Status": "Abort"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactslistsignup": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve All Subscription Requests via a Sub Widget",
        "description": "Retrieve details about all contact list signup requests via a subscription widget. Provides details on signup and subscription confirmation IPs, timestamp, subscription source etc.\r\n\r\n",
        "operationId": "RetrieveAllSubscriptionRequestsviaaSubWidget",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactslistsignup/{signuprequest_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve a Single Subscription Requests via a Sub Widget",
        "description": "Retrieve details about a specific subscription request done via a subscription widget. Provides details on signup and subscription confirmation IP, timestamp, subscription source etc.\r\n\r\n",
        "operationId": "RetrieveaSingleSubscriptionRequestsviaaSubWidget",
        "parameters": [
          {
            "name": "signuprequest_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/listrecipient": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve All List Recipients",
        "description": "Retrieve details on all list recipients, including the contact and list associated with them, as well as subscription status.\r\n\r\n",
        "operationId": "RetrieveAllListRecipients",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a List Recipient",
        "description": "Create a new list recipient. A list recipient object manages the relationship between a contact and a contactslist - every instance of a contact being added to a list creates a new list recipient. Both the contact and the list need to be created beforehand.\r\n\r\n",
        "operationId": "CreateaListRecipient",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaListRecipientRequest"
              },
              "example": {
                "IsUnsubscribed": false,
                "ContactAlt": "email@example.com",
                "ListID": 123456
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/listrecipient/{listrecipient_ID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve a Single List Recipient",
        "description": "Retrieve details for a specific list recipient, including the contact and list associated with it, as well as the subscription status.\r\n\r\n",
        "operationId": "RetrieveaSingleListRecipient",
        "parameters": [
          {
            "name": "listrecipient_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a List Recipient",
        "description": "Update the subscription status of a list recipient.\r\n\r\n",
        "operationId": "UpdateaListRecipient",
        "parameters": [
          {
            "name": "listrecipient_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaListRecipientRequest"
              },
              "example": {
                "IsUnsubscribed": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a List Recipient",
        "description": "Delete a list recipient. This effectively removes a contact from a contact list.\r\n\r\n",
        "operationId": "DeleteaListRecipient",
        "parameters": [
          {
            "name": "listrecipient_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaign": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Retrieve All Campaigns",
        "description": "Retrieve details about a list of sent campaigns - creation and sending time, sender, subject, tracking options enabled etc. Each e-mail going through Mailjet is attached to a Campaign. This object is automatically generated by Mailjet.\r\n\r\nNote: If no query parameters are used, only campaigns sent since 00:00 UTC on the current day will be returned.",
        "operationId": "RetrieveAllCampaigns",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaign/{campaign_ID}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Retrieve a Single Campaign",
        "description": "Retrieve details about a specific campaign - creation and sending time, sender, subject, tracking options enabled etc. Each e-mail going through Mailjet is attached to a Campaign. This object is automatically generated by Mailjet.\r\n\r\n",
        "operationId": "RetrieveaSingleCampaign",
        "parameters": [
          {
            "name": "campaign_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Update a Campaign",
        "description": "Manage the deletion and \"starred\" status of a campaign. Each e-mail going through Mailjet is attached to a Campaign. This object is automatically generated by Mailjet.\r\n\r\n",
        "operationId": "UpdateaCampaign",
        "parameters": [
          {
            "name": "campaign_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaCampaignRequest"
              },
              "example": {
                "IsDeleted": true,
                "IsStarred": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaigndraft": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Retrieve All Campaign Drafts",
        "description": "Retrieve details on the configuration of all campaign drafts. Newsletter and CampaignDraft objects are differentiated by the EditMode values. We recommend using CampaignDraft, as Newsletter objects are ones created using the legacy Mailjet template builder.\r\n\r\n",
        "operationId": "RetrieveAllCampaignDrafts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Create a Campaign Draft",
        "description": "Create a new campaign draft. Newsletter and CampaignDraft objects are differentiated by the EditMode values - we recommend using CampaignDraft, as Newsletter objects are ones created using the legacy Mailjet template builder.\r\n\r\n",
        "operationId": "CreateaCampaignDraft",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaCampaignDraftRequest"
              },
              "example": {
                "AXFraction": 0,
                "AXFractionName": "Version A",
                "AXTesting": 123456,
                "Current": 345678,
                "EditMode": "tool2",
                "IsStarred": false,
                "IsTextPartIncluded": true,
                "ReplyEmail": "replyto@mailjet.com",
                "SenderName": "Your Mailjet Pilot",
                "TemplateID": 123456,
                "Title": "My Mailjet Campaign",
                "ContactsListID": 123456,
                "Locale": "en_US",
                "SegmentationID": 123,
                "Sender": 1234,
                "SenderEmail": "pilot@mailjet.com",
                "Subject": "Your email flight plan!"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaigndraft/{draft_ID}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Retrieve a Single Campaign Draft",
        "description": "Retrieve details on the configuration of a specific campaign draft. Newsletter and CampaignDraft objects are differentiated by the EditMode values - we recommend using CampaignDraft, as Newsletter objects are ones created using the legacy Mailjet template builder.\r\n\r\n",
        "operationId": "RetrieveaSingleCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Update a Campaign Draft",
        "description": "Update the configuration settings of a specific campaign draft. Newsletter and CampaignDraft objects are differentiated by the EditMode values - we recommend using CampaignDraft, as Newsletter objects are ones created using the legacy Mailjet template builder.\r\n\r\n",
        "operationId": "UpdateaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaCampaignDraftRequest"
              },
              "example": {
                "AXFraction": 0,
                "AXFractionName": "Version A",
                "AXTesting": 123456,
                "EditMode": "tool2",
                "IsStarred": false,
                "IsTextPartIncluded": true,
                "ReplyEmail": "replyto@mailjet.com",
                "SenderName": "Your Mailjet Pilot",
                "TemplateID": 123456,
                "Title": "My Mailjet Campaign",
                "ContactsListID": 123456,
                "Locale": "en_US",
                "SegmentationID": 123,
                "Sender": 1234,
                "SenderEmail": "pilot@mailjet.com",
                "Subject": "Your email flight plan!"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaigndraft/{draft_ID}/detailcontent": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Retrieve the Contents of a Campaign Draft",
        "description": "Retrieve the content of your campaign draft email. It will be split between a Text part, HTML part, MJML content and/or additional headers.\r\n\r\n",
        "operationId": "RetrievetheContentsofaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Create the Contents of a Campaign Draft",
        "description": "Create, update or delete the content of your campaign draft email. You can select a Text part, HTML part, MJML content, as well as additional headers.\r\n\r\nEach POST request overwrites any content previously added - e.g. if you have submitted HTML content on the initial POST, and on the next you only submit Text content, the previously saved value of Html-part will be deleted.\r\n\r\n",
        "operationId": "CreatetheContentsofaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatetheContentsofaCampaignDraftRequest"
              },
              "example": {
                "Html-part": "<h3>Dear passenger 1, welcome to <a href=\"https://www.mailjet.com/\">Mailjet!</a></h3><br />May the delivery force be with you!",
                "MJMLContent": "",
                "Text-part": "Dear passenger, welcome to Mailjet! May the delivery force be with you!"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaigndraft/{draft_ID}/schedule": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Schedule the Sending of a Campaign Draft",
        "description": "Schedule the sending of a campaign draft.\r\n\r\n",
        "operationId": "ScheduletheSendingofaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduletheSendingofaCampaignDraftRequest"
              },
              "example": {
                "Date": "2018-01-01T00:00:00"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Get the Sending Schedule of a Campaign Draft",
        "description": "Retrieve the sending schedule of a campaign draft.\r\n\r\n",
        "operationId": "GettheSendingScheduleofaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Update the Sending Schedule of a Campaign Draft",
        "description": "Update the sending schedule of a campaign draft.\r\n\r\n",
        "operationId": "UpdatetheSendingScheduleofaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatetheSendingScheduleofaCampaignDraftRequest"
              },
              "example": {
                "Date": "2018-02-01T00:00:00"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Cancel the Scheduled Sending of a Campaign Draft",
        "description": "Cancel the scheduled sending of a campaign draft.\r\n\r\n",
        "operationId": "CanceltheScheduledSendingofaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaigndraft/{draft_ID}/test": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Send a Test Email of a Campaign Draft",
        "description": "Test a created campaign draft by sending it to a selection of recipients. The status of the campaign draft will not be affected by the test.\r\n\r\n",
        "operationId": "SendaTestEmailofaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendaTestEmailofaCampaignDraftRequest"
              },
              "example": {
                "Recipients": [
                  {
                    "Name": "Recipient1",
                    "Email": "email1@example.com"
                  },
                  {
                    "Name": "Recipient2",
                    "Email": "email2@example.com"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaigndraft/{draft_ID}/send": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Send a Campaign Draft",
        "description": "Send a campaign draft immediately.\r\n\r\n",
        "operationId": "SendaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaigndraft/{draft_ID}/status": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "View the Sending Status of a Campaign Draft",
        "description": "View the sending status of a campaign draft.\r\n\r\n",
        "operationId": "ViewtheSendingStatusofaCampaignDraft",
        "parameters": [
          {
            "name": "draft_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaignoverview": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Retrieve Overviews of All Campaigns and Drafts",
        "description": "Retrieve delivery and engagement statistics for all drafts, AB Testing objects or sent campaigns. In addition, for each object you will see its type, edit tool used and creation time, as well as general info like the title and subject line for the campaign.\r\n\r\n",
        "operationId": "RetrieveOverviewsofAllCampaignsandDrafts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaignoverview/{IDType}|{ID}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Retrieve an Overview of a Campaign or Draft",
        "description": "Retrieve information about a specific draft, AB Testing object or sent campaign. You will see its type, edit tool used and creation time, as well as general info like the title and subject line for the campaign.\r\n\r\n",
        "operationId": "RetrieveanOverviewofaCampaignorDraft",
        "parameters": [
          {
            "name": "IDType",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactfilter": {
      "get": {
        "tags": [
          "Segmentation"
        ],
        "summary": "Retrieve All Segmentation Formulas",
        "description": "Retrieve a list of all segments and details on their configuration. Segments can be applied on contact lists when you send your campaigns. Segmentation is done based on additional data saved for contacts via /contactmetadata and/or based on contact activity (or lack thereof).\r\n\r\n",
        "operationId": "RetrieveAllSegmentationFormulas",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Segmentation"
        ],
        "summary": "Create a Segmentation Formula",
        "description": "Create a new segmentation formula to be applied on contact lists when you send your campaigns. Segmentation can be done based on additional data saved for contacts via /contactmetadata and/or based on contact activity (or lack thereof).\r\n\r\n",
        "operationId": "CreateaSegmentationFormula",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaSegmentationFormulaRequest"
              },
              "example": {
                "Description": "Users that have not clicked on an email link in the last 7 days, and are under 30 years old",
                "Expression": "((not hasclickedsince(7))) AND (age<=30)",
                "Name": "Inactive customers 30 or under"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactfilter/{contactfilter_ID}": {
      "get": {
        "tags": [
          "Segmentation"
        ],
        "summary": "Retrieve a Single Segmentation Formula",
        "description": "Retrieve configuration details for a specific segment. Segments can be applied on contact lists when you send your campaigns. Segmentation is done based on additional data saved for contacts via /contactmetadata and/or based on contact activity (or lack thereof).\r\n\r\n",
        "operationId": "RetrieveaSingleSegmentationFormula",
        "parameters": [
          {
            "name": "contactfilter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Segmentation"
        ],
        "summary": "Update a Segmentation Formula",
        "description": "Update an existing segment. Segments can be applied on contact lists when you send your campaigns. Segmentation is done based on additional data saved for contacts via /contactmetadata and/or based on contact activity (or lack thereof).\r\n\r\nOnly segments with deleted status can be updated via the API. Deleted segments can be updated to unused.\r\n\r\n",
        "operationId": "UpdateaSegmentationFormula",
        "parameters": [
          {
            "name": "contactfilter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaSegmentationFormulaRequest"
              },
              "example": {
                "Description": "Users that have not clicked on an email link in the last 7 days, and are over 30 years old",
                "Expression": "((not hasclickedsince(7))) AND (age>=30)",
                "Name": "Inactive customers 30 or over",
                "Status": "deleted"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Segmentation"
        ],
        "summary": "Delete a Segmentation Formula",
        "description": "Delete an existing segment. Segments can be applied on contact lists when you send your campaigns. Segmentation is done based on additional data saved for contacts via /contactmetadata and/or based on contact activity (or lack thereof).\r\n\r\nThe deletion is a soft one and a deleted segment can later be reinstated by changing its Status via a PUT request.\r\n\r\n",
        "operationId": "DeleteaSegmentationFormula",
        "parameters": [
          {
            "name": "contactfilter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/template": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Retrieve All Templates",
        "description": "Retrieve a list of all templates and their configuration settings.\r\n\r\n",
        "operationId": "RetrieveAllTemplates",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Create a Template",
        "description": "Create a new email template object and select its basic configuration settings.\r\n\r\n",
        "operationId": "CreateaTemplate",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaTemplateRequest"
              },
              "example": {
                "Author": "John Doe",
                "Categories": [
                  "commerce"
                ],
                "Copyright": "John Doe",
                "Description": "Used for discount promotion.",
                "EditMode": 1,
                "IsStarred": true,
                "IsTextPartGenerationEnabled": true,
                "Locale": "en_US",
                "Name": "Promo Code",
                "OwnerType": "apikey",
                "Presets": "{\"h1\":{\"fontFamily\":\"'Arial Black', Helvetica, Arial, sans-serif\"}}",
                "Purposes": [
                  "marketing"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/template/{template_ID}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Retrieve a Single Template",
        "description": "Retrieve the configuration settings for a specific template.\r\n\r\n",
        "operationId": "RetrieveaSingleTemplate",
        "parameters": [
          {
            "name": "template_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Templates"
        ],
        "summary": "Update a Template",
        "description": "Update the configuration settings of an email template.\r\n\r\n",
        "operationId": "UpdateaTemplate",
        "parameters": [
          {
            "name": "template_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaTemplateRequest"
              },
              "example": {
                "Author": "John Doe",
                "Categories": [
                  "commerce"
                ],
                "Copyright": "John Doe",
                "Description": "Used for discount promotion.",
                "EditMode": 1,
                "IsStarred": true,
                "IsTextPartGenerationEnabled": true,
                "Locale": "en_US",
                "Name": "Promo Code",
                "OwnerType": "apikey",
                "Presets": "{\"h1\":{\"fontFamily\":\"'Arial Black', Helvetica, Arial, sans-serif\"}}",
                "Purposes": [
                  "marketing"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "Delete a Template",
        "description": "Delete an email template.\r\n\r\n",
        "operationId": "DeleteaTemplate",
        "parameters": [
          {
            "name": "template_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/template/{template_ID}/detailcontent": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Retrieve the Contents of a Template",
        "description": "Retrieve the contents of an email template. It will be split between a Text part, HTML part, MJML content and/or additional headers.\r\n\r\n",
        "operationId": "RetrievetheContentsofaTemplate",
        "parameters": [
          {
            "name": "template_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Create the Contents of a Template",
        "description": "Create the contents of an email template. You can select a Text part, HTML part, MJML content, as well as additional headers.\r\n\r\n",
        "operationId": "CreatetheContentsofaTemplate",
        "parameters": [
          {
            "name": "template_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatetheContentsofaTemplateRequest"
              },
              "example": {
                "Headers": {
                  "Subject": "Hello There!",
                  "From": "John Doe <email@example.com>",
                  "Reply-To": ""
                },
                "Html-part": "<html><body><p>Hello {{var:name}}</p></body></html>",
                "Text-part": "Hello {{var:name}}",
                "Mjml-part": ""
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Templates"
        ],
        "summary": "Update the Contents of a Template",
        "description": "Update the contents of an email template - the Text part, HTML part, MJML content and/or the additional headers.\r\n\r\n",
        "operationId": "UpdatetheContentsofaTemplate",
        "parameters": [
          {
            "name": "template_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatetheContentsofaTemplateRequest"
              },
              "example": {
                "Headers": {
                  "Subject": "Hello There!",
                  "From": "John Doe <email@example.com>",
                  "Reply-To": ""
                },
                "Html-part": "<html><body><p>Hello {{var:name}}</p></body></html>",
                "Text-part": "Hello {{var:name}}",
                "Mjml-part": ""
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Aggregates Stats Grouped by Contact",
        "description": "Retrieve a list of overall aggregated delivery and engagement statistics, grouped by contact.",
        "operationId": "RetrieveAggregatesStatsGroupedbyContact",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/contactstatistics/{contact_ID}": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Aggregates Stats for a Single Contact",
        "description": "Retrieve a list of overall aggregated delivery and engagement statistics for a specific contact.",
        "operationId": "RetrieveAggregatesStatsforaSingleContact",
        "parameters": [
          {
            "name": "contact_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/listrecipientstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats Grouped by List Recipient",
        "description": "Retrieve a list of overall aggregated delivery and engagement statistics for all list recipients. A list recipient object manages the relationship between a `contact` and a `contactslist` - every instance of a contact being added to a list creates a new list recipient.\n",
        "operationId": "RetrieveStatsGroupedbyListRecipient",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/listrecipientstatistics/{listrecipient_ID}": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats for a Single List Recipient",
        "description": "Retrieve a list of overall aggregated delivery and engagement statistics for a specific list recipient.",
        "operationId": "RetrieveStatsforaSingleListRecipient",
        "parameters": [
          {
            "name": "listrecipient_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/geostatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats Grouped by Recipient Country",
        "description": "Retrieve aggregated open and click statistics, grouped by recipient country.",
        "operationId": "RetrieveStatsGroupedbyRecipientCountry",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/statistics/link-click": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats for all Clicked Links in a Campaign",
        "description": "Retrieve aggregated click statistics for a campaign, grouped by URL links. Links will be identified by their URL and position index within the campaign template.\r\n\r\nNote: This is a new endpoint. Only available for accounts created after April 5th, 2018.",
        "operationId": "RetrieveStatsforallClickedLinksinaCampaign",
        "parameters": [
          {
            "name": "CampaignID",
            "in": "query",
            "description": "Mandatory: Retrieves statistics only for the specified campaign ID.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{{CampaignID}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/toplinkclicked": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats for all Clicked Links",
        "description": "Retrieve a list of overall aggregated click statistics, grouped by URL.\r\n\r\nNote: If no query parameters are used, will return stats with FromTS equal to the current day at 00:00 UTC.",
        "operationId": "RetrieveStatsforallClickedLinks",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/statistics/recipient-esp": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Recipient Domain Stats for a Campaign",
        "description": "Get aggregated delivery and engagement statistics, grouped by recipient Email Service Provider (ESP).\r\n\r\nNote: This is a new endpoint. Only available for accounts created after April 5th, 2018.",
        "operationId": "RetrieveRecipientDomainStatsforaCampaign",
        "parameters": [
          {
            "name": "CampaignID",
            "in": "query",
            "description": "Retrieves statistics only for the specified campaign ID.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{{CampaignID}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/useragentstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Open/Click Stats Grouped by Web Browser",
        "description": "Retrieve a list of open or click statistics, grouped by web browser or email client.\r\n\r\nNote: If no query parameters are used, will return stats with FromTS equal to the current day at 00:00 UTC.",
        "operationId": "RetrieveOpen/ClickStatsGroupedbyWebBrowser",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/messagestatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Message-based Statistics",
        "operationId": "RetrieveMessage-basedStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/messagesentstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve all Message Event Summaries",
        "operationId": "RetrieveallMessageEventSummaries",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/messagesentstatistics/{message_ID}": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve an Event Summary for a Message",
        "operationId": "RetrieveanEventSummaryforaMessage",
        "parameters": [
          {
            "name": "message_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaigngraphstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Evolution of Stats for a Campaign",
        "operationId": "RetrieveEvolutionofStatsforaCampaign",
        "parameters": [
          {
            "name": "IDS",
            "in": "query",
            "description": "Mandatory: Retrieves only statistics for the specified campaign IDs. Multiple IDs can be separated with a comma.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{{CampaignID}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/campaignstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats for All Campaigns",
        "operationId": "RetrieveStatsforAllCampaigns",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/apikeytotals": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Total Stats for an API Key",
        "operationId": "RetrieveTotalStatsforanAPIKey",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/domainstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats Grouped by Recipient Domain",
        "operationId": "RetrieveStatsGroupedbyRecipientDomain",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/graphstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Evolution of Stats by Time Intervals",
        "operationId": "RetrieveEvolutionofStatsbyTimeIntervals",
        "parameters": [
          {
            "name": "Scale",
            "in": "query",
            "description": "Scale of the time intervals for the statistics:\n\n- `Hour`\n- `Day`\n- `Week`\n- `Month`\n- `Year`",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "day"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/liststatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats Grouped by Contact List",
        "operationId": "RetrieveStatsGroupedbyContactList",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/liststatistics/{List_ID}": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats for a Single Contact List",
        "operationId": "RetrieveStatsforaSingleContactList",
        "parameters": [
          {
            "name": "List_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/openstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats for Open Events",
        "operationId": "RetrieveStatsforOpenEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/senderstatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats Grouped by Sender",
        "operationId": "RetrieveStatsGroupedbySender",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/senderstatistics/{sender_ID}": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Retrieve Stats for a Single Sender",
        "operationId": "RetrieveStatsforaSingleSender",
        "parameters": [
          {
            "name": "sender_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/bouncestatistics": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieve All Bounce Events",
        "description": "Retrieve a list of all bounce events and details about them - message, contact and campaign IDs, timestamp etc.\r\n\r\nNote: If no query parameters are used, will return events with FromTS equal to the current day at 00:00 UTC.",
        "operationId": "RetrieveAllBounceEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/bouncestatistics/{message_ID}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieve a Single Bounce Event",
        "description": "Retrieve information about a specific bounce event.\r\n\r\n",
        "operationId": "RetrieveaSingleBounceEvent",
        "parameters": [
          {
            "name": "message_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/clickstatistics": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieve All Click Events",
        "description": "Retrieve a list of all click events and details about them - message and contact IDs, timestamp, URL and click delay.\r\n\r\nNote: If no query parameters are used, will return events with FromTS equal to the current day at 00:00 UTC.",
        "operationId": "RetrieveAllClickEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/openinformation": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieve All Open Events",
        "description": "Retrieve a list of all open events and details about them - message, campaign and contact IDs, timestamp etc.\r\n\r\nIf no query parameters are used, will return events with FromTS equal to the current day at 00:00 UTC.",
        "operationId": "RetrieveAllOpenEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/openinformation/{message_ID}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieve a Single Open Event",
        "description": "Retrieve open event details for a specific message.",
        "operationId": "RetrieveaSingleOpenEvent",
        "parameters": [
          {
            "name": "message_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/eventcallbackurl": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Retrieve all Callback URLs",
        "description": "Retrieve a list of all callback URL objects and their configuration settings. Whenever an action (e.g. email open) occurs, the information about it will be sent to the selected callback URL. You can then set up different automation workflows triggered by the tracked actions.\r\n\r\nNote: The URL provided cannot be a root URL.",
        "operationId": "RetrieveallCallbackURLs",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Create a Callback URL",
        "description": "Add a new callback URL used as a webhook to track different email actions. Whenever an action (e.g. email open) occurs, the information about it will be sent to this callback URL. You can then set up different automation workflows triggered by the tracked actions.\r\n\r\nNote: The URL provided cannot be a root URL.",
        "operationId": "CreateaCallbackURL",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaCallbackURLRequest"
              },
              "example": {
                "EventType": "open",
                "IsBackup": false,
                "Status": "alive",
                "Version": 0,
                "Url": "https://www.example.com/123/"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/eventcallbackurl/{url_ID}": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Retrieve a single Callback URL",
        "description": "Retrieve the configuration settings of a specific callback URL. Whenever an action (e.g. email open) occurs, the information about it will be sent to the selected callback URL. You can then set up different automation workflows triggered by the tracked actions.\r\n\r\nNote: The URL provided cannot be a root URL.",
        "operationId": "RetrieveasingleCallbackURL",
        "parameters": [
          {
            "name": "url_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Webhook"
        ],
        "summary": "Update a Callback URL",
        "description": "Update the configuration settings of an existing callback URL - which type of events it tracks, the URL used, whether it is active or not etc.\r\n\r\n",
        "operationId": "UpdateaCallbackURL",
        "parameters": [
          {
            "name": "url_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaCallbackURLRequest"
              },
              "example": {
                "EventType": "open",
                "IsBackup": false,
                "Status": "alive",
                "Version": 0,
                "Url": "https://www.example.com/123/"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Webhook"
        ],
        "summary": "Delete a Callback URL",
        "description": "Delete an existing callback URL.\r\n\r\n",
        "operationId": "DeleteaCallbackURL",
        "parameters": [
          {
            "name": "url_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/parseroute": {
      "get": {
        "tags": [
          "Parse API"
        ],
        "summary": "Retrieve All Parseroute Instances",
        "description": "Retrieve a list of all parseroute instances and their configuration settings.\r\n\r\n",
        "operationId": "RetrieveAllParserouteInstances",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Parse API"
        ],
        "summary": "Create a Parseroute Instance",
        "description": "Create a new parseroute instance. Provide the webhook URL you want to use. The Mailjet Parse API will then createa parse email adedress in the response. Alternatively, you can select a parse email yourself. Emails received to this address will be parsed and the information sent to the webhook URL you have provided in a JSON format.\r\n\r\nNote: The URL provided cannot be a root URL.\r\n\r\n",
        "operationId": "CreateaParserouteInstance",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaParserouteInstanceRequest"
              },
              "example": {
                "Email": "user@example.com",
                "Url": "https://www.example.com/123/"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/parseroute/{parseroute_ID}": {
      "get": {
        "tags": [
          "Parse API"
        ],
        "summary": "Retrieve a Single Parseroute Instance",
        "description": "Get the configuration details for a specific parseroute resource.\r\n\r\n",
        "operationId": "RetrieveaSingleParserouteInstance",
        "parameters": [
          {
            "name": "parseroute_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Parse API"
        ],
        "summary": "Update a Parseroute Instance",
        "description": "Update the settings of an existing parseroute instance - the webhook URL and/or email address.\r\n\r\n",
        "operationId": "UpdateaParserouteInstance",
        "parameters": [
          {
            "name": "parseroute_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaParserouteInstanceRequest"
              },
              "example": {
                "Email": "user@example.com",
                "Url": "https://www.example.com/123/"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Parse API"
        ],
        "summary": "Delete a Parseroute Instance",
        "description": "Delete an existing parseroute instance.\r\n\r\n",
        "operationId": "DeleteaParserouteInstance",
        "parameters": [
          {
            "name": "parseroute_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/sender": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Retrieve All Senders",
        "description": "Get information on a list of sender email addresses and/or domains. The e-mail address or domain has to be registered and validated before being used to send e-mails. Validation is done via /sender/{sender_id}/validate. In order to manage a sender available across multiple API Keys, see the related /metasender resource.\r\n\r\nNote: The maximum number of senders and metasenders per user is 100. This includes both validated (Active) and non-validated (Inactive) ones, but does not include Deleted senders / metasenders.\r\n\r\n",
        "operationId": "RetrieveAllSenders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Senders"
        ],
        "summary": "Create a Sender",
        "description": "Create a new sender email address or domain. The e-mail address or domain has to be registered and validated before being used to send e-mails. Validation is done via /sender/{sender_id}/validate. In order to manage a sender available across multiple API Keys, see the related /metasender resource.\r\n\r\nNote: The maximum number of senders and metasenders per user is 100. This includes both validated (Active) and non-validated (Inactive) ones, but does not include Deleted senders / metasenders.\r\n\r\n",
        "operationId": "CreateaSender",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaSenderRequest"
              },
              "example": {
                "EmailType": "transactional",
                "IsDefaultSender": true,
                "Name": "Sender1",
                "Email": "user@example.com"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/sender/{sender_ID}": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Retrieve a Single Sender",
        "description": "Retrieve details on a specific sender email address or domain.\r\n\r\n",
        "operationId": "RetrieveaSingleSender",
        "parameters": [
          {
            "name": "sender_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Senders"
        ],
        "summary": "Update a Sender",
        "description": "Update an existing sender email address or domain.\r\n\r\n",
        "operationId": "UpdateaSender",
        "parameters": [
          {
            "name": "sender_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaSenderRequest"
              },
              "example": {
                "EmailType": "bulk",
                "IsDefaultSender": false,
                "Name": "Sender2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Senders"
        ],
        "summary": "Delete a Sender",
        "description": "Delete an existing sender email address or domain.\r\n\r\n",
        "operationId": "DeleteaSender",
        "parameters": [
          {
            "name": "sender_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/sender/{sender_ID}/validate": {
      "post": {
        "tags": [
          "Senders"
        ],
        "summary": "Validate a Sender",
        "description": "Validate a registered sender email address or domain. A sender domain (*@domain.com) is validated by checking the caller's rights, the existence of a metasender for that domain or by searching for the ownership token on the domain root or in the DNS.\r\n\r\n",
        "operationId": "ValidateaSender",
        "parameters": [
          {
            "name": "sender_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/metasender": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Retrieve All Metasenders",
        "description": "Retrieve a list of all metasenders and their configuration settings. A metasender is a sender available for use by the Master API Key and all sub-accounts. The e-mail address or domain has to be registered and validated before being used to send e-mails. Validation is done by contacting the Mailjet Support team. In order to manage a sender available for a single API Key, see the related /sender resource.\r\n\r\nNote: The maximum number of senders and metasenders per user is 100. This includes both validated (Active) and non-validated (Inactive) ones, but does not include Deleted senders / metasenders.\r\n\r\n",
        "operationId": "RetrieveAllMetasenders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Senders"
        ],
        "summary": "Create a Metasender",
        "description": "Create a new metasender email address or domain. A metasender is a sender available for use by the Master API Key and all sub-accounts. The e-mail address or domain has to be registered and validated before being used to send e-mails. Validation is done by contacting the Mailjet Support team. In order to manage a sender available for a single API Key, see the related /sender resource.\r\n\r\nNote: The maximum number of senders and metasenders per user is 100. This includes both validated (Active) and non-validated (Inactive) ones, but does not include Deleted senders / metasenders.\r\n\r\n",
        "operationId": "CreateaMetasender",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaMetasenderRequest"
              },
              "example": {
                "Description": "Metasender 1 - used for Promo emails",
                "Email": "user@example.com"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/metasender/{metasender_ID}": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Retrieve a Single Metasender",
        "description": "Retrieve an existing metasender object and its configuration settings.\r\n\r\n",
        "operationId": "RetrieveaSingleMetasender",
        "parameters": [
          {
            "name": "metasender_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Senders"
        ],
        "summary": "Update a Metasender",
        "description": "Update and existing metasender email address or domain. Only the email address and description can be updated.\r\n\r\n",
        "operationId": "UpdateaMetasender",
        "parameters": [
          {
            "name": "metasender_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaMetasenderRequest"
              },
              "example": {
                "Description": "Updated metasender description",
                "IsEnabled": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/dns": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Retrieve SPF / DKIM Settings of All Sender Domains",
        "description": "Retrieve the SPF and DKIM settings for all sender domains on this API Key. The information will help you configure your SPF and DKIM settings on the respective domain, before running a DNS check with /dns/{dns_id}/check to validate it and complete the SPF and DKIM authentication.\r\n\r\n",
        "operationId": "RetrieveSPF/DKIMSettingsofAllSenderDomains",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/dns/{dns_ID}": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Retrieve SPF / DKIM Settings of a Sender Domain",
        "description": "Retrieve the SPF and DKIM settings for a specific sender domain on this API Key. The information will help you configure your SPF and DKIM settings on the respective domain, before running a DNS check with /dns/{dns_id}/check to validate it.\r\n\r\n",
        "operationId": "RetrieveSPF/DKIMSettingsofaSenderDomain",
        "parameters": [
          {
            "name": "dns_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/dns/{dns_ID}/check": {
      "post": {
        "tags": [
          "Senders"
        ],
        "summary": "Do a DNS Validation of a Sender Domain",
        "description": "Perform a DNS validation of a sender domain. The Mailjet API will check for a TXT record in the domain's DNS zone file. \r\n\r\n",
        "operationId": "DoaDNSValidationofaSenderDomain",
        "parameters": [
          {
            "name": "dns_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/apikey": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieve All API Keys",
        "description": "Retrieve a list of all API Keys and their configuration settings. API Keys are used as credentials to access the API and SMTP server.\r\n\r\n",
        "operationId": "RetrieveAllAPIKeys",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Create a New Subaccount API Key",
        "description": "Create a sub-account with a new Public and Secret API Key. API Keys are used as credentials to access the API and SMTP server.\r\n\r\n",
        "operationId": "CreateaNewSubaccountAPIKey",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaNewSubaccountAPIKeyRequest"
              },
              "example": {
                "IsActive": true,
                "Name": "New API Key"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/apikey/{apikey_ID}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieve a Single API Key",
        "description": "Retrieve the configuration settings of a specific API Key. API Keys are used as credentials to access the API and SMTP server.\r\n\r\n",
        "operationId": "RetrieveaSingleAPIKey",
        "parameters": [
          {
            "name": "apikey_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update an API Key",
        "description": "Update the settings of an existing API Key. You can use this to deactivate an API Key as well. API Keys are used as credentials to access the API and SMTP server.\r\n\r\n",
        "operationId": "UpdateanAPIKey",
        "parameters": [
          {
            "name": "apikey_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateanAPIKeyRequest"
              },
              "example": {
                "IsActive": false,
                "Name": "Updated API Key"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/myprofile": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieve Your Profile Info",
        "description": "Manage your user profile data such as address, payment information etc.\r\n\r\n",
        "operationId": "RetrieveYourProfileInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update Your Profile Info",
        "description": "Update your profile information - personal and organization settings.\r\n\r\n",
        "operationId": "UpdateYourProfileInfo",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateYourProfileInfoRequest"
              },
              "example": {
                "AddressCity": "Paris",
                "AddressCountry": "FR",
                "AddressPostalCode": "75002",
                "AddressState": "New York",
                "AddressStreet": "37 bis, rue de Sentier",
                "BillingEmail": "billing@example.com",
                "BirthdayAt": "2018-01-01T00:00:00",
                "CompanyName": "Ma société",
                "CompanyNumOfEmployees": "51",
                "ContactPhone": "FR|600000000",
                "EstimatedVolume": "10000",
                "Features": "",
                "Firstname": "Marie",
                "Industry": "240",
                "JobTitle": "Marketer",
                "Lastname": "Jean",
                "VATNumber": "1234567890",
                "Website": "https://www.example.com/"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/user": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieve Your User Settings",
        "description": "Get general information on your user settings and activity.\r\n\r\n",
        "operationId": "RetrieveYourUserSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update Your User Settings",
        "description": "Update the settings of your User ID - username, registered email, language and time zone settings.\r\n\r\n",
        "operationId": "UpdateYourUserSettings",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateYourUserSettingsRequest"
              },
              "example": {
                "Email": "user@example.com",
                "Locale": "en_US",
                "Timezone": "Europe/Paris",
                "Username": "John Doe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/newsletter": {
      "get": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Retrieve All Newsletters",
        "operationId": "RetrieveAllNewsletters",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Create a Newsletter",
        "operationId": "CreateaNewsletter",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaNewsletterRequest"
              },
              "example": {
                "AXFraction": 0,
                "AXFractionName": "string",
                "Callback": "https://www.example.com/123/",
                "EditMode": "tool",
                "EditType": "full",
                "Footer": "default",
                "FooterAddress": "email@example.com",
                "FooterWYSIWYGType": 0,
                "HeaderFilename": "string",
                "HeaderLink": "string",
                "HeaderText": "string",
                "HeaderUrl": "https://www.example.com/",
                "IsStarred": true,
                "IsTextPartIncluded": true,
                "Permalink": "default",
                "PermalinkHost": "string",
                "PermalinkWYSIWYGType": 0,
                "ReplyEmail": "user@example.com",
                "SenderName": "string",
                "TemplateID": 0,
                "TestAddress": "email@example.com",
                "Title": "string",
                "ContactsListID": 0,
                "Locale": "en_US",
                "SegmentationID": 0,
                "SenderEmail": "user@example.com",
                "Subject": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/newsletter/{newsletter_ID}": {
      "get": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Retrieve a SIngle Newsletter",
        "operationId": "RetrieveaSIngleNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Update a Newsletter",
        "operationId": "UpdateaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaNewsletterRequest"
              },
              "example": {
                "AXFraction": 0,
                "AXFractionName": "string",
                "Callback": "https://www.example.com/123/",
                "EditMode": "tool",
                "EditType": "full",
                "Footer": "default",
                "FooterAddress": "email@example.com",
                "FooterWYSIWYGType": 0,
                "HeaderFilename": "string",
                "HeaderLink": "string",
                "HeaderText": "string",
                "HeaderUrl": "https://www.example.com/",
                "IsStarred": true,
                "IsTextPartIncluded": true,
                "Permalink": "default",
                "PermalinkHost": "string",
                "PermalinkWYSIWYGType": 0,
                "ReplyEmail": "user@example.com",
                "SenderName": "string",
                "TemplateID": 0,
                "TestAddress": "email@example.com",
                "Title": "string",
                "ContactsListID": 0,
                "Locale": "en_US",
                "SegmentationID": 0,
                "SenderEmail": "user@example.com",
                "Subject": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/newsletter/{newsletter_ID}/detailcontent": {
      "get": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Retrieve the Contents of a Newsletter",
        "operationId": "RetrievetheContentsofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Create the Contents of a Newsletter",
        "operationId": "CreatetheContentsofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatetheContentsofaNewsletterRequest"
              },
              "example": {
                "Html-part": "string",
                "Text-part": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Update the Contents of a Newsletter",
        "operationId": "UpdatetheContentsofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatetheContentsofaNewsletterRequest"
              },
              "example": {
                "Html-part": "string",
                "Text-part": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Delete the Contents of a Newsletter",
        "operationId": "DeletetheContentsofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/newsletter/{newsletter_ID}/schedule": {
      "post": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Schedule the Sending of a Newsletter",
        "operationId": "ScheduletheSendingofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduletheSendingofaNewsletterRequest"
              },
              "example": {
                "Date": "2018-01-01T00:00:00"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Newsletter"
        ],
        "summary": "View the Sending Schedule of a Newsletter",
        "operationId": "ViewtheSendingScheduleofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Cancel the Scheduled Sending of a Newsletter",
        "operationId": "CanceltheScheduledSendingofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Update the Scheduled Sending of a Newsletter",
        "operationId": "UpdatetheScheduledSendingofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatetheScheduledSendingofaNewsletterRequest"
              },
              "example": {
                "Date": "2018-01-01T00:00:00"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/newsletter/{newsletter_ID}/send": {
      "post": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Send a Newsletter",
        "operationId": "SendaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/newsletter/{newsletter_ID}/status": {
      "get": {
        "tags": [
          "Newsletter"
        ],
        "summary": "View the Sending Status of a Newsletter",
        "operationId": "ViewtheSendingStatusofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v3/REST/newsletter/{newsletter_ID}/test": {
      "post": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Send a Test Email of a Newsletter",
        "operationId": "SendaTestEmailofaNewsletter",
        "parameters": [
          {
            "name": "newsletter_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendaTestEmailofaNewsletterRequest"
              },
              "example": {
                "Recipients": [
                  {
                    "Email": "email@example.com",
                    "Name": "John Doe"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v4/sms-send": {
      "post": {
        "tags": [
          "SMS API"
        ],
        "summary": "Send SMS",
        "operationId": "SendSMS",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSMSRequest"
              },
              "example": {
                "Text": "Have a nice SMS flight with Mailjet !",
                "To": "+359889332688",
                "From": "MJPilot"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v4/sms": {
      "get": {
        "tags": [
          "SMS API"
        ],
        "summary": "Retrieve All SMS Messages",
        "description": "Get SMS",
        "operationId": "RetrieveAllSMSMessages",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v4/sms/{sms_ID}": {
      "get": {
        "tags": [
          "SMS API"
        ],
        "summary": "Retrieve a Single SMS message",
        "description": "Get SMS",
        "operationId": "RetrieveaSingleSMSmessage",
        "parameters": [
          {
            "name": "sms_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v4/sms/count": {
      "get": {
        "tags": [
          "SMS API"
        ],
        "summary": "Retrieve a Count of All SMS Messages",
        "description": "Get SMS",
        "operationId": "RetrieveaCountofAllSMSMessages",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v4/sms/export": {
      "post": {
        "tags": [
          "SMS API"
        ],
        "summary": "Request an Export of SMS Messages",
        "operationId": "RequestanExportofSMSMessages",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestanExportofSMSMessagesRequest"
              },
              "example": {
                "FromTS": 1516233600,
                "ToTS": 1516320000
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/v4/sms/export/{Job_ID}": {
      "get": {
        "tags": [
          "SMS API"
        ],
        "summary": "Retrieve the Results of an SMS Export Request",
        "operationId": "RetrievetheResultsofanSMSExportRequest",
        "parameters": [
          {
            "name": "Job_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "SendYourFirstEmailRequest": {
        "title": "SendYourFirstEmailRequest",
        "required": [
          "Messages"
        ],
        "type": "object",
        "properties": {
          "Messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "description": ""
          }
        },
        "example": {
          "Messages": [
            {
              "From": {
                "Email": "sender@example.com",
                "Name": "Me"
              },
              "To": [
                {
                  "Email": "recipient@example.com",
                  "Name": "You"
                }
              ],
              "Subject": "My first Mailjet Email!",
              "TextPart": "Greetings from Mailjet!",
              "HTMLPart": "<h3>Dear passenger 1, welcome to <a href=\"https://www.mailjet.com/\">Mailjet!</a></h3><br />May the delivery force be with you!"
            }
          ]
        }
      },
      "Message": {
        "title": "Message",
        "required": [
          "From",
          "To",
          "Subject",
          "TextPart",
          "HTMLPart"
        ],
        "type": "object",
        "properties": {
          "From": {
            "$ref": "#/components/schemas/From"
          },
          "To": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/To"
            },
            "description": ""
          },
          "Subject": {
            "type": "string"
          },
          "TextPart": {
            "type": "string"
          },
          "HTMLPart": {
            "type": "string"
          }
        },
        "example": {
          "From": {
            "Email": "sender@example.com",
            "Name": "Me"
          },
          "To": [
            {
              "Email": "recipient@example.com",
              "Name": "You"
            }
          ],
          "Subject": "My first Mailjet Email!",
          "TextPart": "Greetings from Mailjet!",
          "HTMLPart": "<h3>Dear passenger 1, welcome to <a href=\"https://www.mailjet.com/\">Mailjet!</a></h3><br />May the delivery force be with you!"
        }
      },
      "From": {
        "title": "From",
        "required": [
          "Email",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Email": "sender@example.com",
          "Name": "Me"
        }
      },
      "To": {
        "title": "To",
        "required": [
          "Email",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Email": "recipient@example.com",
          "Name": "You"
        }
      },
      "SendAPIv3.1Request": {
        "title": "SendAPIv3.1Request",
        "required": [
          "SandboxMode",
          "Messages"
        ],
        "type": "object",
        "properties": {
          "SandboxMode": {
            "type": "boolean"
          },
          "Messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message1"
            },
            "description": ""
          }
        },
        "example": {
          "SandboxMode": false,
          "Messages": [
            {
              "From": {
                "Email": "pilot@mailjet.com",
                "Name": "Your Mailjet Pilot"
              },
              "Sender": {
                "Email": "copilot@mailjet.com",
                "Name": "Your Mailjet Co-pilot"
              },
              "To": [
                {
                  "Email": "passenger@mailjet.com",
                  "Name": "Passenger 1"
                }
              ],
              "Cc": [
                {
                  "Email": "passenger2@mailjet.com",
                  "Name": "Passenger 2"
                }
              ],
              "Bcc": [
                {
                  "Email": "passenger3@mailjet.com",
                  "Name": "Passenger 3"
                }
              ],
              "ReplyTo": {
                "Email": "copilot@mailjet.com",
                "Name": "Your Mailjet Co-pilot"
              },
              "Subject": "Your email flight plan!",
              "TextPart": "Dear passenger, welcome to Mailjet! May the delivery force be with you!",
              "HTMLPart": "<h3>Dear passenger 1, welcome to <a href=\"https://www.mailjet.com/\">Mailjet!</a></h3><br />May the delivery force be with you!",
              "TemplateID": "12345",
              "TemplateLanguage": false,
              "TemplateErrorReporting": {
                "Email": "errors@mailjet.com",
                "Name": "Error Email"
              },
              "TemplateErrorDeliver": true,
              "Attachments": [
                {
                  "Filename": "test.txt",
                  "ContentType": "text/plain",
                  "Base64Content": "VGhpcyBpcyB5b3VyIGF0dGFjaGVkIGZpbGUhISEK"
                }
              ],
              "InlinedAttachments": [
                {
                  "Filename": "logo.gif",
                  "ContentType": "image/gif",
                  "Base64Content": "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",
                  "ContentID": "logo"
                }
              ],
              "Priority": 2,
              "CustomCampaign": "SendAPI_campaign",
              "DeduplicateCampaign": true,
              "TrackOpens": "account_default",
              "TrackClicks": "account_default",
              "CustomID": "CustomValue",
              "EventPayload": "Eticket,1234,row,15,seat,B",
              "MonitoringCategory": "Category1",
              "URLTags": "utm_source=newsletter&utm_medium=email&utm_campaign=sale1",
              "Headers": "object",
              "Variables": "object"
            }
          ]
        }
      },
      "Message1": {
        "title": "Message1",
        "required": [
          "From",
          "Sender",
          "To",
          "Cc",
          "Bcc",
          "ReplyTo",
          "Subject",
          "TextPart",
          "HTMLPart",
          "TemplateID",
          "TemplateLanguage",
          "TemplateErrorReporting",
          "TemplateErrorDeliver",
          "Attachments",
          "InlinedAttachments",
          "Priority",
          "CustomCampaign",
          "DeduplicateCampaign",
          "TrackOpens",
          "TrackClicks",
          "CustomID",
          "EventPayload",
          "MonitoringCategory",
          "URLTags",
          "Headers",
          "Variables"
        ],
        "type": "object",
        "properties": {
          "From": {
            "$ref": "#/components/schemas/From"
          },
          "Sender": {
            "$ref": "#/components/schemas/Sender"
          },
          "To": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/To"
            },
            "description": ""
          },
          "Cc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cc"
            },
            "description": ""
          },
          "Bcc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bcc"
            },
            "description": ""
          },
          "ReplyTo": {
            "$ref": "#/components/schemas/ReplyTo"
          },
          "Subject": {
            "type": "string"
          },
          "TextPart": {
            "type": "string"
          },
          "HTMLPart": {
            "type": "string"
          },
          "TemplateID": {
            "type": "string"
          },
          "TemplateLanguage": {
            "type": "boolean"
          },
          "TemplateErrorReporting": {
            "$ref": "#/components/schemas/TemplateErrorReporting"
          },
          "TemplateErrorDeliver": {
            "type": "boolean"
          },
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "description": ""
          },
          "InlinedAttachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlinedAttachment"
            },
            "description": ""
          },
          "Priority": {
            "type": "integer",
            "format": "int32"
          },
          "CustomCampaign": {
            "type": "string"
          },
          "DeduplicateCampaign": {
            "type": "boolean"
          },
          "TrackOpens": {
            "type": "string"
          },
          "TrackClicks": {
            "type": "string"
          },
          "CustomID": {
            "type": "string"
          },
          "EventPayload": {
            "type": "string"
          },
          "MonitoringCategory": {
            "type": "string"
          },
          "URLTags": {
            "type": "string"
          },
          "Headers": {
            "type": "string"
          },
          "Variables": {
            "type": "string"
          }
        },
        "example": {
          "From": {
            "Email": "pilot@mailjet.com",
            "Name": "Your Mailjet Pilot"
          },
          "Sender": {
            "Email": "copilot@mailjet.com",
            "Name": "Your Mailjet Co-pilot"
          },
          "To": [
            {
              "Email": "passenger@mailjet.com",
              "Name": "Passenger 1"
            }
          ],
          "Cc": [
            {
              "Email": "passenger2@mailjet.com",
              "Name": "Passenger 2"
            }
          ],
          "Bcc": [
            {
              "Email": "passenger3@mailjet.com",
              "Name": "Passenger 3"
            }
          ],
          "ReplyTo": {
            "Email": "copilot@mailjet.com",
            "Name": "Your Mailjet Co-pilot"
          },
          "Subject": "Your email flight plan!",
          "TextPart": "Dear passenger, welcome to Mailjet! May the delivery force be with you!",
          "HTMLPart": "<h3>Dear passenger 1, welcome to <a href=\"https://www.mailjet.com/\">Mailjet!</a></h3><br />May the delivery force be with you!",
          "TemplateID": "12345",
          "TemplateLanguage": false,
          "TemplateErrorReporting": {
            "Email": "errors@mailjet.com",
            "Name": "Error Email"
          },
          "TemplateErrorDeliver": true,
          "Attachments": [
            {
              "Filename": "test.txt",
              "ContentType": "text/plain",
              "Base64Content": "VGhpcyBpcyB5b3VyIGF0dGFjaGVkIGZpbGUhISEK"
            }
          ],
          "InlinedAttachments": [
            {
              "Filename": "logo.gif",
              "ContentType": "image/gif",
              "Base64Content": "R0lGODlhEAAQAOYAAP////748v39/Pvq1vr6+lJSVeqlK/zqyv7+/unKjJ+emv78+fb29pucnfrlwvTCi9ra2vTCa6urrWdoaurr6/Pz8uHh4vn49PO7QqGfmumaN+2uS1ZWWfr27uyuLnBxd/z8+0pLTvHAWvjar/zr2Z6cl+jal+2kKmhqcEJETvHQbPb07lBRVPv6+cjJycXFxn1+f//+/f337nF0efO/Mf306NfW0fjHSJOTk/TKlfTp0Prlx/XNj83HuPfEL+/v8PbJgueXJOzp4MG8qUNES9fQqN3d3vTJa/vq1f317P769f/8+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MjY5ODYxMzYzMkJCMTFFMDkzQkFFMkFENzVGN0JGRkYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MjY5ODYxMzczMkJCMTFFMDkzQkFFMkFENzVGN0JGRkYiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoyNjk4NjEzNDMyQkIxMUUwOTNCQUUyQUQ3NUY3QkZGRiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoyNjk4NjEzNTMyQkIxMUUwOTNCQUUyQUQ3NUY3QkZGRiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf29fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxLSklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcGBQQDAgEAACH5BAEAAAAALAAAAAAQABAAAAdUgACCg4SFhoeIiYRGLhaKhA0TMDgSLxAUiEIZHAUsIUQpKAo9Og6FNh8zJUNFJioYQIgJRzc+NBEkiAcnBh4iO4o8QRsjj0gaOY+CDwPKzs/Q0YSBADs=",
              "ContentID": "logo"
            }
          ],
          "Priority": 2,
          "CustomCampaign": "SendAPI_campaign",
          "DeduplicateCampaign": true,
          "TrackOpens": "account_default",
          "TrackClicks": "account_default",
          "CustomID": "CustomValue",
          "EventPayload": "Eticket,1234,row,15,seat,B",
          "MonitoringCategory": "Category1",
          "URLTags": "utm_source=newsletter&utm_medium=email&utm_campaign=sale1",
          "Headers": "object",
          "Variables": "object"
        }
      },
      "Sender": {
        "title": "Sender",
        "required": [
          "Email",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Email": "copilot@mailjet.com",
          "Name": "Your Mailjet Co-pilot"
        }
      },
      "Cc": {
        "title": "Cc",
        "required": [
          "Email",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Email": "passenger2@mailjet.com",
          "Name": "Passenger 2"
        }
      },
      "Bcc": {
        "title": "Bcc",
        "required": [
          "Email",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Email": "passenger3@mailjet.com",
          "Name": "Passenger 3"
        }
      },
      "ReplyTo": {
        "title": "ReplyTo",
        "required": [
          "Email",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Email": "copilot@mailjet.com",
          "Name": "Your Mailjet Co-pilot"
        }
      },
      "TemplateErrorReporting": {
        "title": "TemplateErrorReporting",
        "required": [
          "Email",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Email": "errors@mailjet.com",
          "Name": "Error Email"
        }
      },
      "Attachment": {
        "title": "Attachment",
        "required": [
          "Filename",
          "ContentType",
          "Base64Content"
        ],
        "type": "object",
        "properties": {
          "Filename": {
            "type": "string"
          },
          "ContentType": {
            "type": "string"
          },
          "Base64Content": {
            "type": "string"
          }
        },
        "example": {
          "Filename": "test.txt",
          "ContentType": "text/plain",
          "Base64Content": "VGhpcyBpcyB5b3VyIGF0dGFjaGVkIGZpbGUhISEK"
        }
      },
      "InlinedAttachment": {
        "title": "InlinedAttachment",
        "required": [
          "Filename",
          "ContentType",
          "Base64Content",
          "ContentID"
        ],
        "type": "object",
        "properties": {
          "Filename": {
            "type": "string"
          },
          "ContentType": {
            "type": "string"
          },
          "Base64Content": {
            "type": "string"
          },
          "ContentID": {
            "type": "string"
          }
        },
        "example": {
          "Filename": "logo.gif",
          "ContentType": "image/gif",
          "Base64Content": "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",
          "ContentID": "logo"
        }
      },
      "SendAPIv3Request": {
        "title": "SendAPIv3Request",
        "required": [
          "Messages"
        ],
        "type": "object",
        "properties": {
          "Messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message2"
            },
            "description": ""
          }
        },
        "example": {
          "Messages": [
            {
              "FromEmail": "pilot@mailjet.com",
              "FromName": "Your Mailjet Pilot",
              "Sender": true,
              "Recipients": [
                {
                  "Email": "passenger@mailjet.com",
                  "Name": "Passenger 1",
                  "Vars": "array"
                }
              ],
              "To": "Passenger 1 <passenger@mailjet.com>",
              "Cc": "Passenger 2 <passenger2@mailjet.com>",
              "Bcc": "Passenger 3 <passenger3@mailjet.com>",
              "Subject": "Your email flight plan!",
              "Text-part": "Dear passenger, welcome to Mailjet! May the delivery force be with you!",
              "Html-part": "<h3>Dear passenger, welcome to Mailjet!</h3><br />May the delivery force be with you!",
              "Mj-TemplateID": 123456,
              "Mj-TemplateLanguage": false,
              "Mj-TemplateErrorReporting": "reports@example.com",
              "Mj-TemplateErrorDeliver": 0,
              "Attachments": [
                {
                  "Filename": "test.txt",
                  "Content-type": "text/plain",
                  "Content": "VGhpcyBpcyB5b3VyIGF0dGFjaGVkIGZpbGUhISEK"
                }
              ],
              "Inline_attachments": [
                {
                  "Filename": "logo.gif",
                  "Content-type": "image/gif",
                  "Content": "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"
                }
              ],
              "Mj-prio": 2,
              "Mj-campaign": "SendAPI_campaign",
              "Mj-deduplicatecampaign": 1,
              "Mj-trackopen": 0,
              "Mj-CustomID": "CustomValue",
              "Mj-EventPayload": "Eticket,1234,row,15,seat,B",
              "Mj-MonitoringCategory": "Category1",
              "Headers": "object",
              "Vars": "object"
            }
          ]
        }
      },
      "Message2": {
        "title": "Message2",
        "required": [
          "FromEmail",
          "FromName",
          "Sender",
          "Recipients",
          "To",
          "Cc",
          "Bcc",
          "Subject",
          "Text-part",
          "Html-part",
          "Mj-TemplateID",
          "Mj-TemplateLanguage",
          "Mj-TemplateErrorReporting",
          "Mj-TemplateErrorDeliver",
          "Attachments",
          "Inline_attachments",
          "Mj-prio",
          "Mj-campaign",
          "Mj-deduplicatecampaign",
          "Mj-trackopen",
          "Mj-CustomID",
          "Mj-EventPayload",
          "Mj-MonitoringCategory",
          "Headers",
          "Vars"
        ],
        "type": "object",
        "properties": {
          "FromEmail": {
            "type": "string"
          },
          "FromName": {
            "type": "string"
          },
          "Sender": {
            "type": "boolean"
          },
          "Recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient"
            },
            "description": ""
          },
          "To": {
            "type": "string"
          },
          "Cc": {
            "type": "string"
          },
          "Bcc": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "Text-part": {
            "type": "string"
          },
          "Html-part": {
            "type": "string"
          },
          "Mj-TemplateID": {
            "type": "integer",
            "format": "int32"
          },
          "Mj-TemplateLanguage": {
            "type": "boolean"
          },
          "Mj-TemplateErrorReporting": {
            "type": "string"
          },
          "Mj-TemplateErrorDeliver": {
            "type": "integer",
            "format": "int32"
          },
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment1"
            },
            "description": ""
          },
          "Inline_attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineAttachment"
            },
            "description": ""
          },
          "Mj-prio": {
            "type": "integer",
            "format": "int32"
          },
          "Mj-campaign": {
            "type": "string"
          },
          "Mj-deduplicatecampaign": {
            "type": "integer",
            "format": "int32"
          },
          "Mj-trackopen": {
            "type": "integer",
            "format": "int32"
          },
          "Mj-CustomID": {
            "type": "string"
          },
          "Mj-EventPayload": {
            "type": "string"
          },
          "Mj-MonitoringCategory": {
            "type": "string"
          },
          "Headers": {
            "type": "string"
          },
          "Vars": {
            "type": "string"
          }
        },
        "example": {
          "FromEmail": "pilot@mailjet.com",
          "FromName": "Your Mailjet Pilot",
          "Sender": true,
          "Recipients": [
            {
              "Email": "passenger@mailjet.com",
              "Name": "Passenger 1",
              "Vars": "array"
            }
          ],
          "To": "Passenger 1 <passenger@mailjet.com>",
          "Cc": "Passenger 2 <passenger2@mailjet.com>",
          "Bcc": "Passenger 3 <passenger3@mailjet.com>",
          "Subject": "Your email flight plan!",
          "Text-part": "Dear passenger, welcome to Mailjet! May the delivery force be with you!",
          "Html-part": "<h3>Dear passenger, welcome to Mailjet!</h3><br />May the delivery force be with you!",
          "Mj-TemplateID": 123456,
          "Mj-TemplateLanguage": false,
          "Mj-TemplateErrorReporting": "reports@example.com",
          "Mj-TemplateErrorDeliver": 0,
          "Attachments": [
            {
              "Filename": "test.txt",
              "Content-type": "text/plain",
              "Content": "VGhpcyBpcyB5b3VyIGF0dGFjaGVkIGZpbGUhISEK"
            }
          ],
          "Inline_attachments": [
            {
              "Filename": "logo.gif",
              "Content-type": "image/gif",
              "Content": "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"
            }
          ],
          "Mj-prio": 2,
          "Mj-campaign": "SendAPI_campaign",
          "Mj-deduplicatecampaign": 1,
          "Mj-trackopen": 0,
          "Mj-CustomID": "CustomValue",
          "Mj-EventPayload": "Eticket,1234,row,15,seat,B",
          "Mj-MonitoringCategory": "Category1",
          "Headers": "object",
          "Vars": "object"
        }
      },
      "Recipient": {
        "title": "Recipient",
        "required": [
          "Email",
          "Name",
          "Vars"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Vars": {
            "type": "string"
          }
        },
        "example": {
          "Email": "passenger@mailjet.com",
          "Name": "Passenger 1",
          "Vars": "array"
        }
      },
      "Attachment1": {
        "title": "Attachment1",
        "required": [
          "Filename",
          "Content-type",
          "Content"
        ],
        "type": "object",
        "properties": {
          "Filename": {
            "type": "string"
          },
          "Content-type": {
            "type": "string"
          },
          "Content": {
            "type": "string"
          }
        },
        "example": {
          "Filename": "test.txt",
          "Content-type": "text/plain",
          "Content": "VGhpcyBpcyB5b3VyIGF0dGFjaGVkIGZpbGUhISEK"
        }
      },
      "InlineAttachment": {
        "title": "InlineAttachment",
        "required": [
          "Filename",
          "Content-type",
          "Content"
        ],
        "type": "object",
        "properties": {
          "Filename": {
            "type": "string"
          },
          "Content-type": {
            "type": "string"
          },
          "Content": {
            "type": "string"
          }
        },
        "example": {
          "Filename": "logo.gif",
          "Content-type": "image/gif",
          "Content": "R0lGODlhEAAQAOYAAP////748v39/Pvq1vr6+lJSVeqlK/zqyv7+/unKjJ+emv78+fb29pucnfrlwvTCi9ra2vTCa6urrWdoaurr6/Pz8uHh4vn49PO7QqGfmumaN+2uS1ZWWfr27uyuLnBxd/z8+0pLTvHAWvjar/zr2Z6cl+jal+2kKmhqcEJETvHQbPb07lBRVPv6+cjJycXFxn1+f//+/f337nF0efO/Mf306NfW0fjHSJOTk/TKlfTp0Prlx/XNj83HuPfEL+/v8PbJgueXJOzp4MG8qUNES9fQqN3d3vTJa/vq1f317P769f/8+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C1hNUCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MjY5ODYxMzYzMkJCMTFFMDkzQkFFMkFENzVGN0JGRkYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MjY5ODYxMzczMkJCMTFFMDkzQkFFMkFENzVGN0JGRkYiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoyNjk4NjEzNDMyQkIxMUUwOTNCQUUyQUQ3NUY3QkZGRiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoyNjk4NjEzNTMyQkIxMUUwOTNCQUUyQUQ3NUY3QkZGRiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf29fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxLSklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcGBQQDAgEAACH5BAEAAAAALAAAAAAQABAAAAdUgACCg4SFhoeIiYRGLhaKhA0TMDgSLxAUiEIZHAUsIUQpKAo9Og6FNh8zJUNFJioYQIgJRzc+NBEkiAcnBh4iO4o8QRsjj0gaOY+CDwPKzs/Q0YSBADs="
        }
      },
      "CreateContactRequest": {
        "title": "CreateContactRequest",
        "required": [
          "IsExcludedFromCampaigns",
          "Name",
          "Email"
        ],
        "type": "object",
        "properties": {
          "IsExcludedFromCampaigns": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          }
        },
        "example": {
          "IsExcludedFromCampaigns": false,
          "Name": "Contact 1",
          "Email": "user@example.com"
        }
      },
      "UpdateContactRequest": {
        "title": "UpdateContactRequest",
        "required": [
          "IsExcludedFromCampaigns",
          "Name"
        ],
        "type": "object",
        "properties": {
          "IsExcludedFromCampaigns": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "IsExcludedFromCampaigns": false,
          "Name": "Updated Name"
        }
      },
      "ManagetheListsaContactisPartofRequest": {
        "title": "ManagetheListsaContactisPartofRequest",
        "required": [
          "ContactsLists"
        ],
        "type": "object",
        "properties": {
          "ContactsLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactsList"
            },
            "description": ""
          }
        },
        "example": {
          "ContactsLists": [
            {
              "ListID": 123456789,
              "Action": "addnoforce"
            },
            {
              "ListID": 987654321,
              "Action": "addforce"
            }
          ]
        }
      },
      "ContactsList": {
        "title": "ContactsList",
        "required": [
          "ListID",
          "Action"
        ],
        "type": "object",
        "properties": {
          "ListID": {
            "type": "integer",
            "format": "int32"
          },
          "Action": {
            "type": "string"
          }
        },
        "example": {
          "ListID": 123456789,
          "Action": "addnoforce"
        }
      },
      "ManagetheListsforMultipleContactsRequest": {
        "title": "ManagetheListsforMultipleContactsRequest",
        "required": [
          "ContactsLists",
          "Contacts"
        ],
        "type": "object",
        "properties": {
          "ContactsLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactsList"
            },
            "description": ""
          },
          "Contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "description": ""
          }
        },
        "example": {
          "ContactsLists": [
            {
              "ListID": 123456789,
              "Action": "addforce"
            }
          ],
          "Contacts": [
            {
              "Email": "email@example.com",
              "Name": "contact_name",
              "IsExcludedFromCampaigns": false,
              "Properties": {
                "property1": "value1",
                "property2": "value2"
              }
            }
          ]
        }
      },
      "Contact": {
        "title": "Contact",
        "required": [
          "Email",
          "Name",
          "IsExcludedFromCampaigns",
          "Properties"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "IsExcludedFromCampaigns": {
            "type": "boolean"
          },
          "Properties": {
            "$ref": "#/components/schemas/Properties"
          }
        },
        "example": {
          "Email": "email@example.com",
          "Name": "contact_name",
          "IsExcludedFromCampaigns": false,
          "Properties": {
            "property1": "value1",
            "property2": "value2"
          }
        }
      },
      "Properties": {
        "title": "Properties",
        "required": [
          "property1",
          "property2"
        ],
        "type": "object",
        "properties": {
          "property1": {
            "type": "string"
          },
          "property2": {
            "type": "string"
          }
        },
        "example": {
          "property1": "value1",
          "property2": "value2"
        }
      },
      "CreateaContactPropertyObjectRequest": {
        "title": "CreateaContactPropertyObjectRequest",
        "required": [
          "Datatype",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Datatype": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Datatype": "str",
          "Name": "first_name"
        }
      },
      "UpdateaContactPropertyObjectRequest": {
        "title": "UpdateaContactPropertyObjectRequest",
        "required": [
          "Datatype",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Datatype": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Datatype": "int",
          "Name": "integer"
        }
      },
      "CreatePropertyValuesforaContactRequest": {
        "title": "CreatePropertyValuesforaContactRequest",
        "required": [
          "ContactID",
          "Data"
        ],
        "type": "object",
        "properties": {
          "ContactID": {
            "type": "integer",
            "format": "int32"
          },
          "Data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Datum"
            },
            "description": ""
          }
        },
        "example": {
          "ContactID": 123456,
          "Data": [
            {
              "Name": "Property1",
              "value": "Value1"
            }
          ]
        }
      },
      "Datum": {
        "title": "Datum",
        "required": [
          "Name",
          "value"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Property1",
          "value": "Value1"
        }
      },
      "UpdatePropertyValuesforaContactRequest": {
        "title": "UpdatePropertyValuesforaContactRequest",
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Datum"
            },
            "description": ""
          }
        },
        "example": {
          "Data": [
            {
              "Name": "Property1",
              "value": "UpdatedValue"
            }
          ]
        }
      },
      "CreateaContactListRequest": {
        "title": "CreateaContactListRequest",
        "required": [
          "Name",
          "IsDeleted"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "IsDeleted": {
            "type": "boolean"
          }
        },
        "example": {
          "Name": "NewList",
          "IsDeleted": false
        }
      },
      "UpdateaContactListRequest": {
        "title": "UpdateaContactListRequest",
        "required": [
          "Name",
          "IsDeleted"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "IsDeleted": {
            "type": "boolean"
          }
        },
        "example": {
          "Name": "UpdatedList",
          "IsDeleted": true
        }
      },
      "ImportaContactListintoAnotherListRequest": {
        "title": "ImportaContactListintoAnotherListRequest",
        "required": [
          "Action",
          "ListID"
        ],
        "type": "object",
        "properties": {
          "Action": {
            "type": "string"
          },
          "ListID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "Action": "duplicate-override",
          "ListID": 123456
        }
      },
      "ManageaContact'sSubscriptiontoaListRequest": {
        "title": "ManageaContact'sSubscriptiontoaListRequest",
        "required": [
          "Email",
          "Name",
          "Action",
          "Properties"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Action": {
            "type": "string"
          },
          "Properties": {
            "$ref": "#/components/schemas/Properties1"
          }
        },
        "example": {
          "Email": "mrsmith@mailjet.com",
          "Name": "MrSmith",
          "Action": "addnoforce",
          "Properties": {
            "property1": "value",
            "propertyN": "valueN"
          }
        }
      },
      "Properties1": {
        "title": "Properties1",
        "required": [
          "property1",
          "propertyN"
        ],
        "type": "object",
        "properties": {
          "property1": {
            "type": "string"
          },
          "propertyN": {
            "type": "string"
          }
        },
        "example": {
          "property1": "value",
          "propertyN": "valueN"
        }
      },
      "ManagetheSubStatusofMultipleContactstoaListRequest": {
        "title": "ManagetheSubStatusofMultipleContactstoaListRequest",
        "required": [
          "Action",
          "Contacts"
        ],
        "type": "object",
        "properties": {
          "Action": {
            "type": "string"
          },
          "Contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact1"
            },
            "description": ""
          }
        },
        "example": {
          "Action": "addnoforce",
          "Contacts": [
            {
              "Email": "jimsmith@example.com",
              "Name": "Jim",
              "Properties": {
                "Property1": "value",
                "Property2": "value2"
              }
            },
            {
              "Email": "janetdoe@example.com",
              "Name": "Janet",
              "Properties": {
                "Property1": "value",
                "Property2": "value2"
              }
            }
          ]
        }
      },
      "Contact1": {
        "title": "Contact1",
        "required": [
          "Email",
          "Name",
          "Properties"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Properties": {
            "$ref": "#/components/schemas/Properties2"
          }
        },
        "example": {
          "Email": "jimsmith@example.com",
          "Name": "Jim",
          "Properties": {
            "Property1": "value",
            "Property2": "value2"
          }
        }
      },
      "Properties2": {
        "title": "Properties2",
        "required": [
          "Property1",
          "Property2"
        ],
        "type": "object",
        "properties": {
          "Property1": {
            "type": "string"
          },
          "Property2": {
            "type": "string"
          }
        },
        "example": {
          "Property1": "value",
          "Property2": "value2"
        }
      },
      "ImportContactsviaaCSVRequest": {
        "title": "ImportContactsviaaCSVRequest",
        "required": [
          "ContactsListID",
          "DataID",
          "Method"
        ],
        "type": "object",
        "properties": {
          "ContactsListID": {
            "type": "integer",
            "format": "int32"
          },
          "DataID": {
            "type": "integer",
            "format": "int32"
          },
          "Method": {
            "type": "string"
          }
        },
        "example": {
          "ContactsListID": 123456,
          "DataID": 987654321,
          "Method": "addnoforce"
        }
      },
      "UpdateaCSVImportinProgressRequest": {
        "title": "UpdateaCSVImportinProgressRequest",
        "required": [
          "Status"
        ],
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          }
        },
        "example": {
          "Status": "Abort"
        }
      },
      "CreateaListRecipientRequest": {
        "title": "CreateaListRecipientRequest",
        "required": [
          "IsUnsubscribed",
          "ContactAlt",
          "ListID"
        ],
        "type": "object",
        "properties": {
          "IsUnsubscribed": {
            "type": "boolean"
          },
          "ContactAlt": {
            "type": "string"
          },
          "ListID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "IsUnsubscribed": false,
          "ContactAlt": "email@example.com",
          "ListID": 123456
        }
      },
      "UpdateaListRecipientRequest": {
        "title": "UpdateaListRecipientRequest",
        "required": [
          "IsUnsubscribed"
        ],
        "type": "object",
        "properties": {
          "IsUnsubscribed": {
            "type": "boolean"
          }
        },
        "example": {
          "IsUnsubscribed": true
        }
      },
      "UpdateaCampaignRequest": {
        "title": "UpdateaCampaignRequest",
        "required": [
          "IsDeleted",
          "IsStarred"
        ],
        "type": "object",
        "properties": {
          "IsDeleted": {
            "type": "boolean"
          },
          "IsStarred": {
            "type": "boolean"
          }
        },
        "example": {
          "IsDeleted": true,
          "IsStarred": false
        }
      },
      "CreateaCampaignDraftRequest": {
        "title": "CreateaCampaignDraftRequest",
        "required": [
          "AXFraction",
          "AXFractionName",
          "AXTesting",
          "Current",
          "EditMode",
          "IsStarred",
          "IsTextPartIncluded",
          "ReplyEmail",
          "SenderName",
          "TemplateID",
          "Title",
          "ContactsListID",
          "Locale",
          "SegmentationID",
          "Sender",
          "SenderEmail",
          "Subject"
        ],
        "type": "object",
        "properties": {
          "AXFraction": {
            "type": "integer",
            "format": "int32"
          },
          "AXFractionName": {
            "type": "string"
          },
          "AXTesting": {
            "type": "integer",
            "format": "int32"
          },
          "Current": {
            "type": "integer",
            "format": "int32"
          },
          "EditMode": {
            "type": "string"
          },
          "IsStarred": {
            "type": "boolean"
          },
          "IsTextPartIncluded": {
            "type": "boolean"
          },
          "ReplyEmail": {
            "type": "string"
          },
          "SenderName": {
            "type": "string"
          },
          "TemplateID": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string"
          },
          "ContactsListID": {
            "type": "integer",
            "format": "int32"
          },
          "Locale": {
            "type": "string"
          },
          "SegmentationID": {
            "type": "integer",
            "format": "int32"
          },
          "Sender": {
            "type": "integer",
            "format": "int32"
          },
          "SenderEmail": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          }
        },
        "example": {
          "AXFraction": 0,
          "AXFractionName": "Version A",
          "AXTesting": 123456,
          "Current": 345678,
          "EditMode": "tool2",
          "IsStarred": false,
          "IsTextPartIncluded": true,
          "ReplyEmail": "replyto@mailjet.com",
          "SenderName": "Your Mailjet Pilot",
          "TemplateID": 123456,
          "Title": "My Mailjet Campaign",
          "ContactsListID": 123456,
          "Locale": "en_US",
          "SegmentationID": 123,
          "Sender": 1234,
          "SenderEmail": "pilot@mailjet.com",
          "Subject": "Your email flight plan!"
        }
      },
      "UpdateaCampaignDraftRequest": {
        "title": "UpdateaCampaignDraftRequest",
        "required": [
          "AXFraction",
          "AXFractionName",
          "AXTesting",
          "EditMode",
          "IsStarred",
          "IsTextPartIncluded",
          "ReplyEmail",
          "SenderName",
          "TemplateID",
          "Title",
          "ContactsListID",
          "Locale",
          "SegmentationID",
          "Sender",
          "SenderEmail",
          "Subject"
        ],
        "type": "object",
        "properties": {
          "AXFraction": {
            "type": "integer",
            "format": "int32"
          },
          "AXFractionName": {
            "type": "string"
          },
          "AXTesting": {
            "type": "integer",
            "format": "int32"
          },
          "EditMode": {
            "type": "string"
          },
          "IsStarred": {
            "type": "boolean"
          },
          "IsTextPartIncluded": {
            "type": "boolean"
          },
          "ReplyEmail": {
            "type": "string"
          },
          "SenderName": {
            "type": "string"
          },
          "TemplateID": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string"
          },
          "ContactsListID": {
            "type": "integer",
            "format": "int32"
          },
          "Locale": {
            "type": "string"
          },
          "SegmentationID": {
            "type": "integer",
            "format": "int32"
          },
          "Sender": {
            "type": "integer",
            "format": "int32"
          },
          "SenderEmail": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          }
        },
        "example": {
          "AXFraction": 0,
          "AXFractionName": "Version A",
          "AXTesting": 123456,
          "EditMode": "tool2",
          "IsStarred": false,
          "IsTextPartIncluded": true,
          "ReplyEmail": "replyto@mailjet.com",
          "SenderName": "Your Mailjet Pilot",
          "TemplateID": 123456,
          "Title": "My Mailjet Campaign",
          "ContactsListID": 123456,
          "Locale": "en_US",
          "SegmentationID": 123,
          "Sender": 1234,
          "SenderEmail": "pilot@mailjet.com",
          "Subject": "Your email flight plan!"
        }
      },
      "CreatetheContentsofaCampaignDraftRequest": {
        "title": "CreatetheContentsofaCampaignDraftRequest",
        "required": [
          "Headers",
          "Html-part",
          "MJMLContent",
          "Text-part"
        ],
        "type": "object",
        "properties": {
          "Headers": {
            "type": "object"
          },
          "Html-part": {
            "type": "string"
          },
          "MJMLContent": {
            "type": "string"
          },
          "Text-part": {
            "type": "string"
          }
        },
        "example": {
          "Html-part": "<h3>Dear passenger 1, welcome to <a href=\"https://www.mailjet.com/\">Mailjet!</a></h3><br />May the delivery force be with you!",
          "MJMLContent": "",
          "Text-part": "Dear passenger, welcome to Mailjet! May the delivery force be with you!"
        }
      },
      "ScheduletheSendingofaCampaignDraftRequest": {
        "title": "ScheduletheSendingofaCampaignDraftRequest",
        "required": [
          "Date"
        ],
        "type": "object",
        "properties": {
          "Date": {
            "type": "string"
          }
        },
        "example": {
          "Date": "2018-01-01T00:00:00"
        }
      },
      "UpdatetheSendingScheduleofaCampaignDraftRequest": {
        "title": "UpdatetheSendingScheduleofaCampaignDraftRequest",
        "required": [
          "Date"
        ],
        "type": "object",
        "properties": {
          "Date": {
            "type": "string"
          }
        },
        "example": {
          "Date": "2018-02-01T00:00:00"
        }
      },
      "SendaTestEmailofaCampaignDraftRequest": {
        "title": "SendaTestEmailofaCampaignDraftRequest",
        "required": [
          "Recipients"
        ],
        "type": "object",
        "properties": {
          "Recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient1"
            },
            "description": ""
          }
        },
        "example": {
          "Recipients": [
            {
              "Name": "Recipient1",
              "Email": "email1@example.com"
            },
            {
              "Name": "Recipient2",
              "Email": "email2@example.com"
            }
          ]
        }
      },
      "Recipient1": {
        "title": "Recipient1",
        "required": [
          "Name",
          "Email"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          }
        },
        "example": {
          "Name": "Recipient1",
          "Email": "email1@example.com"
        }
      },
      "CreateaSegmentationFormulaRequest": {
        "title": "CreateaSegmentationFormulaRequest",
        "required": [
          "Description",
          "Expression",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Expression": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "Description": "Users that have not clicked on an email link in the last 7 days, and are under 30 years old",
          "Expression": "((not hasclickedsince(7))) AND (age<=30)",
          "Name": "Inactive customers 30 or under"
        }
      },
      "UpdateaSegmentationFormulaRequest": {
        "title": "UpdateaSegmentationFormulaRequest",
        "required": [
          "Description",
          "Expression",
          "Name",
          "Status"
        ],
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Expression": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          }
        },
        "example": {
          "Description": "Users that have not clicked on an email link in the last 7 days, and are over 30 years old",
          "Expression": "((not hasclickedsince(7))) AND (age>=30)",
          "Name": "Inactive customers 30 or over",
          "Status": "deleted"
        }
      },
      "CreateaTemplateRequest": {
        "title": "CreateaTemplateRequest",
        "required": [
          "Author",
          "Categories",
          "Copyright",
          "Description",
          "EditMode",
          "IsStarred",
          "IsTextPartGenerationEnabled",
          "Locale",
          "Name",
          "OwnerType",
          "Presets",
          "Purposes"
        ],
        "type": "object",
        "properties": {
          "Author": {
            "type": "string"
          },
          "Categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "Copyright": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "EditMode": {
            "type": "integer",
            "format": "int32"
          },
          "IsStarred": {
            "type": "boolean"
          },
          "IsTextPartGenerationEnabled": {
            "type": "boolean"
          },
          "Locale": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "OwnerType": {
            "type": "string"
          },
          "Presets": {
            "type": "string"
          },
          "Purposes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "Author": "John Doe",
          "Categories": [
            "commerce"
          ],
          "Copyright": "John Doe",
          "Description": "Used for discount promotion.",
          "EditMode": 1,
          "IsStarred": true,
          "IsTextPartGenerationEnabled": true,
          "Locale": "en_US",
          "Name": "Promo Code",
          "OwnerType": "apikey",
          "Presets": "{\"h1\":{\"fontFamily\":\"'Arial Black', Helvetica, Arial, sans-serif\"}}",
          "Purposes": [
            "marketing"
          ]
        }
      },
      "UpdateaTemplateRequest": {
        "title": "UpdateaTemplateRequest",
        "required": [
          "Author",
          "Categories",
          "Copyright",
          "Description",
          "EditMode",
          "IsStarred",
          "IsTextPartGenerationEnabled",
          "Locale",
          "Name",
          "OwnerType",
          "Presets",
          "Purposes"
        ],
        "type": "object",
        "properties": {
          "Author": {
            "type": "string"
          },
          "Categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "Copyright": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "EditMode": {
            "type": "integer",
            "format": "int32"
          },
          "IsStarred": {
            "type": "boolean"
          },
          "IsTextPartGenerationEnabled": {
            "type": "boolean"
          },
          "Locale": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "OwnerType": {
            "type": "string"
          },
          "Presets": {
            "type": "string"
          },
          "Purposes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "Author": "John Doe",
          "Categories": [
            "commerce"
          ],
          "Copyright": "John Doe",
          "Description": "Used for discount promotion.",
          "EditMode": 1,
          "IsStarred": true,
          "IsTextPartGenerationEnabled": true,
          "Locale": "en_US",
          "Name": "Promo Code",
          "OwnerType": "apikey",
          "Presets": "{\"h1\":{\"fontFamily\":\"'Arial Black', Helvetica, Arial, sans-serif\"}}",
          "Purposes": [
            "marketing"
          ]
        }
      },
      "CreatetheContentsofaTemplateRequest": {
        "title": "CreatetheContentsofaTemplateRequest",
        "required": [
          "Headers",
          "Html-part",
          "Text-part",
          "Mjml-part"
        ],
        "type": "object",
        "properties": {
          "Headers": {
            "$ref": "#/components/schemas/Headers"
          },
          "Html-part": {
            "type": "string"
          },
          "Text-part": {
            "type": "string"
          },
          "Mjml-part": {
            "type": "string"
          }
        },
        "example": {
          "Headers": {
            "Subject": "Hello There!",
            "From": "John Doe <email@example.com>",
            "Reply-To": ""
          },
          "Html-part": "<html><body><p>Hello {{var:name}}</p></body></html>",
          "Text-part": "Hello {{var:name}}",
          "Mjml-part": ""
        }
      },
      "Headers": {
        "title": "Headers",
        "required": [
          "Subject",
          "From",
          "Reply-To"
        ],
        "type": "object",
        "properties": {
          "Subject": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "Reply-To": {
            "type": "string"
          }
        },
        "example": {
          "Subject": "Hello There!",
          "From": "John Doe <email@example.com>",
          "Reply-To": ""
        }
      },
      "UpdatetheContentsofaTemplateRequest": {
        "title": "UpdatetheContentsofaTemplateRequest",
        "required": [
          "Headers",
          "Html-part",
          "Text-part",
          "Mjml-part"
        ],
        "type": "object",
        "properties": {
          "Headers": {
            "$ref": "#/components/schemas/Headers"
          },
          "Html-part": {
            "type": "string"
          },
          "Text-part": {
            "type": "string"
          },
          "Mjml-part": {
            "type": "string"
          }
        },
        "example": {
          "Headers": {
            "Subject": "Hello There!",
            "From": "John Doe <email@example.com>",
            "Reply-To": ""
          },
          "Html-part": "<html><body><p>Hello {{var:name}}</p></body></html>",
          "Text-part": "Hello {{var:name}}",
          "Mjml-part": ""
        }
      },
      "CreateaCallbackURLRequest": {
        "title": "CreateaCallbackURLRequest",
        "required": [
          "EventType",
          "IsBackup",
          "Status",
          "Version",
          "Url"
        ],
        "type": "object",
        "properties": {
          "EventType": {
            "type": "string"
          },
          "IsBackup": {
            "type": "boolean"
          },
          "Status": {
            "type": "string"
          },
          "Version": {
            "type": "integer",
            "format": "int32"
          },
          "Url": {
            "type": "string"
          }
        },
        "example": {
          "EventType": "open",
          "IsBackup": false,
          "Status": "alive",
          "Version": 0,
          "Url": "https://www.example.com/123/"
        }
      },
      "UpdateaCallbackURLRequest": {
        "title": "UpdateaCallbackURLRequest",
        "required": [
          "EventType",
          "IsBackup",
          "Status",
          "Version",
          "Url"
        ],
        "type": "object",
        "properties": {
          "EventType": {
            "type": "string"
          },
          "IsBackup": {
            "type": "boolean"
          },
          "Status": {
            "type": "string"
          },
          "Version": {
            "type": "integer",
            "format": "int32"
          },
          "Url": {
            "type": "string"
          }
        },
        "example": {
          "EventType": "open",
          "IsBackup": false,
          "Status": "alive",
          "Version": 0,
          "Url": "https://www.example.com/123/"
        }
      },
      "CreateaParserouteInstanceRequest": {
        "title": "CreateaParserouteInstanceRequest",
        "required": [
          "Email",
          "Url"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Url": {
            "type": "string"
          }
        },
        "example": {
          "Email": "user@example.com",
          "Url": "https://www.example.com/123/"
        }
      },
      "UpdateaParserouteInstanceRequest": {
        "title": "UpdateaParserouteInstanceRequest",
        "required": [
          "Email",
          "Url"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Url": {
            "type": "string"
          }
        },
        "example": {
          "Email": "user@example.com",
          "Url": "https://www.example.com/123/"
        }
      },
      "CreateaSenderRequest": {
        "title": "CreateaSenderRequest",
        "required": [
          "EmailType",
          "IsDefaultSender",
          "Name",
          "Email"
        ],
        "type": "object",
        "properties": {
          "EmailType": {
            "type": "string"
          },
          "IsDefaultSender": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          }
        },
        "example": {
          "EmailType": "transactional",
          "IsDefaultSender": true,
          "Name": "Sender1",
          "Email": "user@example.com"
        }
      },
      "UpdateaSenderRequest": {
        "title": "UpdateaSenderRequest",
        "required": [
          "EmailType",
          "IsDefaultSender",
          "Name"
        ],
        "type": "object",
        "properties": {
          "EmailType": {
            "type": "string"
          },
          "IsDefaultSender": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "EmailType": "bulk",
          "IsDefaultSender": false,
          "Name": "Sender2"
        }
      },
      "CreateaMetasenderRequest": {
        "title": "CreateaMetasenderRequest",
        "required": [
          "Description",
          "Email"
        ],
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          }
        },
        "example": {
          "Description": "Metasender 1 - used for Promo emails",
          "Email": "user@example.com"
        }
      },
      "UpdateaMetasenderRequest": {
        "title": "UpdateaMetasenderRequest",
        "required": [
          "Description",
          "IsEnabled"
        ],
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "IsEnabled": {
            "type": "boolean"
          }
        },
        "example": {
          "Description": "Updated metasender description",
          "IsEnabled": false
        }
      },
      "CreateaNewSubaccountAPIKeyRequest": {
        "title": "CreateaNewSubaccountAPIKeyRequest",
        "required": [
          "IsActive",
          "Name"
        ],
        "type": "object",
        "properties": {
          "IsActive": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "IsActive": true,
          "Name": "New API Key"
        }
      },
      "UpdateanAPIKeyRequest": {
        "title": "UpdateanAPIKeyRequest",
        "required": [
          "IsActive",
          "Name"
        ],
        "type": "object",
        "properties": {
          "IsActive": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          }
        },
        "example": {
          "IsActive": false,
          "Name": "Updated API Key"
        }
      },
      "UpdateYourProfileInfoRequest": {
        "title": "UpdateYourProfileInfoRequest",
        "required": [
          "AddressCity",
          "AddressCountry",
          "AddressPostalCode",
          "AddressState",
          "AddressStreet",
          "BillingEmail",
          "BirthdayAt",
          "CompanyName",
          "CompanyNumOfEmployees",
          "ContactPhone",
          "EstimatedVolume",
          "Features",
          "Firstname",
          "Industry",
          "JobTitle",
          "Lastname",
          "VATNumber",
          "Website"
        ],
        "type": "object",
        "properties": {
          "AddressCity": {
            "type": "string"
          },
          "AddressCountry": {
            "type": "string"
          },
          "AddressPostalCode": {
            "type": "string"
          },
          "AddressState": {
            "type": "string"
          },
          "AddressStreet": {
            "type": "string"
          },
          "BillingEmail": {
            "type": "string"
          },
          "BirthdayAt": {
            "type": "string"
          },
          "CompanyName": {
            "type": "string"
          },
          "CompanyNumOfEmployees": {
            "type": "string"
          },
          "ContactPhone": {
            "type": "string"
          },
          "EstimatedVolume": {
            "type": "string"
          },
          "Features": {
            "type": "string"
          },
          "Firstname": {
            "type": "string"
          },
          "Industry": {
            "type": "string"
          },
          "JobTitle": {
            "type": "string"
          },
          "Lastname": {
            "type": "string"
          },
          "VATNumber": {
            "type": "string"
          },
          "Website": {
            "type": "string"
          }
        },
        "example": {
          "AddressCity": "Paris",
          "AddressCountry": "FR",
          "AddressPostalCode": "75002",
          "AddressState": "New York",
          "AddressStreet": "37 bis, rue de Sentier",
          "BillingEmail": "billing@example.com",
          "BirthdayAt": "2018-01-01T00:00:00",
          "CompanyName": "Ma société",
          "CompanyNumOfEmployees": "51",
          "ContactPhone": "FR|600000000",
          "EstimatedVolume": "10000",
          "Features": "",
          "Firstname": "Marie",
          "Industry": "240",
          "JobTitle": "Marketer",
          "Lastname": "Jean",
          "VATNumber": "1234567890",
          "Website": "https://www.example.com/"
        }
      },
      "UpdateYourUserSettingsRequest": {
        "title": "UpdateYourUserSettingsRequest",
        "required": [
          "Email",
          "Locale",
          "Timezone",
          "Username"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Locale": {
            "type": "string"
          },
          "Timezone": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          }
        },
        "example": {
          "Email": "user@example.com",
          "Locale": "en_US",
          "Timezone": "Europe/Paris",
          "Username": "John Doe"
        }
      },
      "CreateaNewsletterRequest": {
        "title": "CreateaNewsletterRequest",
        "required": [
          "AXFraction",
          "AXFractionName",
          "AXTesting",
          "Callback",
          "EditMode",
          "EditType",
          "Footer",
          "FooterAddress",
          "FooterWYSIWYGType",
          "HeaderFilename",
          "HeaderLink",
          "HeaderText",
          "HeaderUrl",
          "IsStarred",
          "IsTextPartIncluded",
          "Permalink",
          "PermalinkHost",
          "PermalinkWYSIWYGType",
          "ReplyEmail",
          "SenderName",
          "TemplateID",
          "TestAddress",
          "Title",
          "ContactsListID",
          "Locale",
          "SegmentationID",
          "SenderEmail",
          "Subject"
        ],
        "type": "object",
        "properties": {
          "AXFraction": {
            "type": "integer",
            "format": "int32"
          },
          "AXFractionName": {
            "type": "string"
          },
          "AXTesting": {
            "type": "object"
          },
          "Callback": {
            "type": "string"
          },
          "EditMode": {
            "type": "string"
          },
          "EditType": {
            "type": "string"
          },
          "Footer": {
            "type": "string"
          },
          "FooterAddress": {
            "type": "string"
          },
          "FooterWYSIWYGType": {
            "type": "integer",
            "format": "int32"
          },
          "HeaderFilename": {
            "type": "string"
          },
          "HeaderLink": {
            "type": "string"
          },
          "HeaderText": {
            "type": "string"
          },
          "HeaderUrl": {
            "type": "string"
          },
          "IsStarred": {
            "type": "boolean"
          },
          "IsTextPartIncluded": {
            "type": "boolean"
          },
          "Permalink": {
            "type": "string"
          },
          "PermalinkHost": {
            "type": "string"
          },
          "PermalinkWYSIWYGType": {
            "type": "integer",
            "format": "int32"
          },
          "ReplyEmail": {
            "type": "string"
          },
          "SenderName": {
            "type": "string"
          },
          "TemplateID": {
            "type": "integer",
            "format": "int32"
          },
          "TestAddress": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "ContactsListID": {
            "type": "integer",
            "format": "int32"
          },
          "Locale": {
            "type": "string"
          },
          "SegmentationID": {
            "type": "integer",
            "format": "int32"
          },
          "SenderEmail": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          }
        },
        "example": {
          "AXFraction": 0,
          "AXFractionName": "string",
          "Callback": "https://www.example.com/123/",
          "EditMode": "tool",
          "EditType": "full",
          "Footer": "default",
          "FooterAddress": "email@example.com",
          "FooterWYSIWYGType": 0,
          "HeaderFilename": "string",
          "HeaderLink": "string",
          "HeaderText": "string",
          "HeaderUrl": "https://www.example.com/",
          "IsStarred": true,
          "IsTextPartIncluded": true,
          "Permalink": "default",
          "PermalinkHost": "string",
          "PermalinkWYSIWYGType": 0,
          "ReplyEmail": "user@example.com",
          "SenderName": "string",
          "TemplateID": 0,
          "TestAddress": "email@example.com",
          "Title": "string",
          "ContactsListID": 0,
          "Locale": "en_US",
          "SegmentationID": 0,
          "SenderEmail": "user@example.com",
          "Subject": "string"
        }
      },
      "UpdateaNewsletterRequest": {
        "title": "UpdateaNewsletterRequest",
        "required": [
          "AXFraction",
          "AXFractionName",
          "AXTesting",
          "Callback",
          "EditMode",
          "EditType",
          "Footer",
          "FooterAddress",
          "FooterWYSIWYGType",
          "HeaderFilename",
          "HeaderLink",
          "HeaderText",
          "HeaderUrl",
          "IsStarred",
          "IsTextPartIncluded",
          "Permalink",
          "PermalinkHost",
          "PermalinkWYSIWYGType",
          "ReplyEmail",
          "SenderName",
          "TemplateID",
          "TestAddress",
          "Title",
          "ContactsListID",
          "Locale",
          "SegmentationID",
          "SenderEmail",
          "Subject"
        ],
        "type": "object",
        "properties": {
          "AXFraction": {
            "type": "integer",
            "format": "int32"
          },
          "AXFractionName": {
            "type": "string"
          },
          "AXTesting": {
            "type": "object"
          },
          "Callback": {
            "type": "string"
          },
          "EditMode": {
            "type": "string"
          },
          "EditType": {
            "type": "string"
          },
          "Footer": {
            "type": "string"
          },
          "FooterAddress": {
            "type": "string"
          },
          "FooterWYSIWYGType": {
            "type": "integer",
            "format": "int32"
          },
          "HeaderFilename": {
            "type": "string"
          },
          "HeaderLink": {
            "type": "string"
          },
          "HeaderText": {
            "type": "string"
          },
          "HeaderUrl": {
            "type": "string"
          },
          "IsStarred": {
            "type": "boolean"
          },
          "IsTextPartIncluded": {
            "type": "boolean"
          },
          "Permalink": {
            "type": "string"
          },
          "PermalinkHost": {
            "type": "string"
          },
          "PermalinkWYSIWYGType": {
            "type": "integer",
            "format": "int32"
          },
          "ReplyEmail": {
            "type": "string"
          },
          "SenderName": {
            "type": "string"
          },
          "TemplateID": {
            "type": "integer",
            "format": "int32"
          },
          "TestAddress": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "ContactsListID": {
            "type": "integer",
            "format": "int32"
          },
          "Locale": {
            "type": "string"
          },
          "SegmentationID": {
            "type": "integer",
            "format": "int32"
          },
          "SenderEmail": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          }
        },
        "example": {
          "AXFraction": 0,
          "AXFractionName": "string",
          "Callback": "https://www.example.com/123/",
          "EditMode": "tool",
          "EditType": "full",
          "Footer": "default",
          "FooterAddress": "email@example.com",
          "FooterWYSIWYGType": 0,
          "HeaderFilename": "string",
          "HeaderLink": "string",
          "HeaderText": "string",
          "HeaderUrl": "https://www.example.com/",
          "IsStarred": true,
          "IsTextPartIncluded": true,
          "Permalink": "default",
          "PermalinkHost": "string",
          "PermalinkWYSIWYGType": 0,
          "ReplyEmail": "user@example.com",
          "SenderName": "string",
          "TemplateID": 0,
          "TestAddress": "email@example.com",
          "Title": "string",
          "ContactsListID": 0,
          "Locale": "en_US",
          "SegmentationID": 0,
          "SenderEmail": "user@example.com",
          "Subject": "string"
        }
      },
      "CreatetheContentsofaNewsletterRequest": {
        "title": "CreatetheContentsofaNewsletterRequest",
        "required": [
          "Html-part",
          "Text-part"
        ],
        "type": "object",
        "properties": {
          "Html-part": {
            "type": "string"
          },
          "Text-part": {
            "type": "string"
          }
        },
        "example": {
          "Html-part": "string",
          "Text-part": "string"
        }
      },
      "UpdatetheContentsofaNewsletterRequest": {
        "title": "UpdatetheContentsofaNewsletterRequest",
        "required": [
          "Html-part",
          "Text-part"
        ],
        "type": "object",
        "properties": {
          "Html-part": {
            "type": "string"
          },
          "Text-part": {
            "type": "string"
          }
        },
        "example": {
          "Html-part": "string",
          "Text-part": "string"
        }
      },
      "ScheduletheSendingofaNewsletterRequest": {
        "title": "ScheduletheSendingofaNewsletterRequest",
        "required": [
          "Date"
        ],
        "type": "object",
        "properties": {
          "Date": {
            "type": "string"
          }
        },
        "example": {
          "Date": "2018-01-01T00:00:00"
        }
      },
      "UpdatetheScheduledSendingofaNewsletterRequest": {
        "title": "UpdatetheScheduledSendingofaNewsletterRequest",
        "required": [
          "Date"
        ],
        "type": "object",
        "properties": {
          "Date": {
            "type": "string"
          }
        },
        "example": {
          "Date": "2018-01-01T00:00:00"
        }
      },
      "SendaTestEmailofaNewsletterRequest": {
        "title": "SendaTestEmailofaNewsletterRequest",
        "required": [
          "Recipients"
        ],
        "type": "object",
        "properties": {
          "Recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient1"
            },
            "description": ""
          }
        },
        "example": {
          "Recipients": [
            {
              "Email": "email@example.com",
              "Name": "John Doe"
            }
          ]
        }
      },
      "SendSMSRequest": {
        "title": "SendSMSRequest",
        "required": [
          "Text",
          "To",
          "From"
        ],
        "type": "object",
        "properties": {
          "Text": {
            "type": "string"
          },
          "To": {
            "type": "string"
          },
          "From": {
            "type": "string"
          }
        },
        "example": {
          "Text": "Have a nice SMS flight with Mailjet !",
          "To": "+359889332688",
          "From": "MJPilot"
        }
      },
      "RequestanExportofSMSMessagesRequest": {
        "title": "RequestanExportofSMSMessagesRequest",
        "required": [
          "FromTS",
          "ToTS"
        ],
        "type": "object",
        "properties": {
          "FromTS": {
            "type": "integer",
            "format": "int32"
          },
          "ToTS": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "FromTS": 1516233600,
          "ToTS": 1516320000
        }
      }
    },
    "securitySchemes": {
      "Https Basics": {
        "type": "http",
        "scheme": "basic",
        "description": "For all Email API endpoints, requests are authenticated using HTTPS Basic Auth. It requires you to provide a username and a password for each API request. The username is your API Key and the password is your API Secret Key - you can find them in your API Key Management page. Both keys are generated automatically when your account is created."
      }
    }
  },
  "tags": [
    {
      "name": "Getting Started Examples",
      "description": "The requests in this folder will help you easily follow the examples in the [Getting Started section](https://dev.mailjet.com/guides/#getting-started) of the Mailjet API Guide."
    },
    {
      "name": "Send Email",
      "description": "Send API v3 and v3.1 are part of Mailjet's transactional messaging suite. Send API v3.1 gives more detailed feedback information on your sendings, while Send API v3 gives you a higher sending limit per single API call.\n\nFor information on sending email campaigns to a list of contacts, please see the [Campaigns](https://dev.mailjet.com/guides/#send-marketing-campaigns) section.\n"
    },
    {
      "name": "Messages",
      "description": "Every time you send an email via Mailjet, a new message object is created. The resources below help you retrieve details about these messages - sending time, delivery and contact engagement info, recipients, message size, etc."
    },
    {
      "name": "Contacts",
      "description": "Contact, Contact Lists and List Recipients are objects that help you organize the contacts you want to send emails to. The resources below help with the management of contacts and additional contact properties (metadata), as well as providing information on the subscriptions done through Mailjet subscription widgets."
    },
    {
      "name": "Campaigns",
      "description": "To send a marketing campaign to a contact list of your choice, you first need to create a campaign draft object. In it you specify the email content, recipients, sender email, etc. Once it's sent out, a new campaign object is created. The resources below will help you manage those objects and retrieve information about them."
    },
    {
      "name": "Segmentation",
      "description": "Segmentation is an extremely useful tool used to target a specific group of customers with a dedicated campaign. Create segments based on contact properties or the contact activity (opens, clicks). Segmentation helps you focus your campaigns on specific demographics, create re-engagement campaigns, etc.\n\nThe resources below help you manage your segmentation formulas.\n"
    },
    {
      "name": "Templates",
      "description": "Templates are essential building blocks for your campaigns, transactional emails or automation workflows. With the resources below you can manage your templates and their content."
    },
    {
      "name": "Statistics",
      "description": "The statistics resources provide a read-only access to your Mailjet statistics. The different endpoints will help you extract metrics groups based on different factors, such as campaigns, contacts, lists, recipient domain providers, link clicks, etc.\n\n> Note: Use `/statcounters` to retrieve your key performance statistics for specific campaigns, contact lists or your API Key as a whole. See the [Statistics section](https://dev.mailjet.com/guides/#key-performance-statistics) of our Email API Guide for more information.\n"
    },
    {
      "name": "Events",
      "description": "The resources below help you you extract details about specific delivery and engagement events - opens, clicks, email bounces, etc."
    },
    {
      "name": "Webhook",
      "description": "The resources below helps you track email delivery and engagement events and forward the information to a webhook URL of your choice. You can use this data to create additional workflows - react to spam reports, identify bounced email addresses, sync unsubscribed contacts, etc."
    },
    {
      "name": "Parse API",
      "description": "The Mailjet Parse API can parse the content, header and/or attachments of incoming emails and deliver it to a webhook of your choice. This makes the processing of inbound messages much easier, since all you have left to do is save the info to your CRM or database."
    },
    {
      "name": "Senders",
      "description": "Creating and validating a sender email address or domain is necessary before you can send emails through Mailjet. The resources below help you manage your sender emails and domains. You can also retrieve the necessary information to edit your domain's SPF and DKIM records, as well as perform the necessary validations."
    },
    {
      "name": "Settings",
      "description": "The resources below help you edit your profile or user information, as well as manage your API Keys and shared access settings."
    },
    {
      "name": "Newsletter"
    },
    {
      "name": "SMS API",
      "description": "Below you will find a list of all available resources in the Mailjet API to send and manage SMS messages."
    }
  ],
  "security": [
    {
      "Https Basics": []
    }
  ]
}