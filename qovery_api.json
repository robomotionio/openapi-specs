{
  "openapi": "3.0.1",
  "info": {
    "title": "Qovery API",
    "contact": {
      "name": "Qovery Support",
      "url": "https://www.qovery.com",
      "email": "support@qovery.com"
    },
    "version": "1.0",
    "x-logo": {
      "url": "https://uploads-ssl.webflow.com/5de176bfd41c9b0a91bbb0a4/5de17d653719a1f46cdb62ae_image%20(3).png"
    }
  },
  "servers": [
    {
      "url": "https://api.qovery.com"
    }
  ],
  "tags": [
    {
      "name": "account-auth-provider-controller",
      "description": "Account Auth Provider Controller"
    },
    {
      "name": "account-controller",
      "description": "Account Controller"
    },
    {
      "name": "admin-controller",
      "description": "Admin Controller"
    },
    {
      "name": "agent-version-controller",
      "description": "Agent Version Controller"
    },
    {
      "name": "cloud-account-validate-controller",
      "description": "Cloud Account Validate Controller"
    },
    {
      "name": "cloud-provider-controller",
      "description": "Cloud Provider Controller"
    },
    {
      "name": "cloud-provider-region-controller",
      "description": "Cloud Provider Region Controller"
    },
    {
      "name": "configuration-check-controller",
      "description": "Configuration Check Controller"
    },
    {
      "name": "configuration-controller",
      "description": "Configuration Controller"
    },
    {
      "name": "e-2-e-controller",
      "description": "E 2 E Controller"
    },
    {
      "name": "engine-version-controller",
      "description": "Engine Version Controller"
    },
    {
      "name": "git-access-check-controller",
      "description": "Git Access Check Controller"
    },
    {
      "name": "github-repository-controller",
      "description": "Github Repository Controller"
    },
    {
      "name": "gitlab-repository-controller",
      "description": "Gitlab Repository Controller"
    },
    {
      "name": "hook-github-controller",
      "description": "Hook Github Controller"
    },
    {
      "name": "hook-gitlab-controller",
      "description": "Hook Gitlab Controller"
    },
    {
      "name": "hook-user-controller",
      "description": "Hook User Controller"
    },
    {
      "name": "infrastructure-init-controller",
      "description": "Infrastructure Init Controller"
    },
    {
      "name": "infrastructure-update-all-controller",
      "description": "Infrastructure Update All Controller"
    },
    {
      "name": "o-auth-token-controller",
      "description": "O Auth Token Controller"
    },
    {
      "name": "organization-billing-card-controller",
      "description": "Organization Billing Card Controller"
    },
    {
      "name": "organization-billing-controller",
      "description": "Organization Billing Controller"
    },
    {
      "name": "organization-billing-info-controller",
      "description": "Organization Billing Info Controller"
    },
    {
      "name": "organization-billing-invoice-controller",
      "description": "Organization Billing Invoice Controller"
    },
    {
      "name": "organization-build-platform-controller",
      "description": "Organization Build Platform Controller"
    },
    {
      "name": "organization-cloud-account-controller",
      "description": "Organization Cloud Account Controller"
    },
    {
      "name": "organization-cloud-account-kubernetes-controller",
      "description": "Organization Cloud Account Kubernetes Controller"
    },
    {
      "name": "organization-container-registry-controller",
      "description": "Organization Container Registry Controller"
    },
    {
      "name": "organization-controller",
      "description": "Organization Controller"
    },
    {
      "name": "organization-dns-provider-controller",
      "description": "Organization DNS Provider Controller"
    },
    {
      "name": "organization-init-controller",
      "description": "Organization Init Controller"
    },
    {
      "name": "organization-logo-controller",
      "description": "Organization Logo Controller"
    },
    {
      "name": "organization-member-controller",
      "description": "Organization Member Controller"
    },
    {
      "name": "organization-member-invite-controller",
      "description": "Organization Member Invite Controller"
    },
    {
      "name": "organization-policy-controller",
      "description": "Organization Policy Controller"
    },
    {
      "name": "organization-project-application-check-controller",
      "description": "Organization Project Application Check Controller"
    },
    {
      "name": "organization-project-application-deploy-controller",
      "description": "Organization Project Application Deploy Controller"
    },
    {
      "name": "organization-project-controller",
      "description": "Organization Project Controller"
    },
    {
      "name": "organization-project-template-controller",
      "description": "Organization Project Template Controller"
    },
    {
      "name": "organization-role-controller",
      "description": "Organization Role Controller"
    },
    {
      "name": "organization-service-controller",
      "description": "Organization Service Controller"
    },
    {
      "name": "project-controller",
      "description": "Project Controller"
    },
    {
      "name": "project-environment-application-commit-deploy-controller",
      "description": "Project Environment Application Commit Deploy Controller"
    },
    {
      "name": "project-environment-application-controller",
      "description": "Project Environment Application Controller"
    },
    {
      "name": "project-environment-application-environment-variable-controller",
      "description": "Project Environment Application Environment Variable Controller"
    },
    {
      "name": "project-environment-application-log-controller",
      "description": "Project Environment Application Log Controller"
    },
    {
      "name": "project-environment-broker-controller",
      "description": "Project Environment Broker Controller"
    },
    {
      "name": "project-environment-controller",
      "description": "Project Environment Controller"
    },
    {
      "name": "project-environment-database-controller",
      "description": "Project Environment Database Controller"
    },
    {
      "name": "project-environment-deploy-controller",
      "description": "Project Environment Deploy Controller"
    },
    {
      "name": "project-environment-deployment-controller",
      "description": "Project Environment Deployment Controller"
    },
    {
      "name": "project-environment-deployment-status-controller",
      "description": "Project Environment Deployment Status Controller"
    },
    {
      "name": "project-environment-environment-variable-controller",
      "description": "Project Environment Environment Variable Controller"
    },
    {
      "name": "project-environment-log-controller",
      "description": "Project Environment Log Controller"
    },
    {
      "name": "project-environment-router-controller",
      "description": "Project Environment Router Controller"
    },
    {
      "name": "project-environment-service-controller",
      "description": "Project Environment Service Controller"
    },
    {
      "name": "project-environment-unknown-controller",
      "description": "Project Environment Unknown Controller"
    },
    {
      "name": "project-environment-variable-controller",
      "description": "Project Environment Variable Controller"
    },
    {
      "name": "readiness-controller",
      "description": "Readiness Controller"
    },
    {
      "name": "technology-controller",
      "description": "Technology Controller"
    }
  ],
  "paths": {
    "/api/v1/account": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "account-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "user"
      }
    },
    "/api/v1/account/auth-provider": {
      "get": {
        "tags": [
          "account-auth-provider-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«AuthProvider»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/admin/cluster/lock": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterLock"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "admin-controller"
        ],
        "summary": "lockAll",
        "operationId": "lockAllUsingPUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "clusterLockRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterLockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterLock"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "clusterLockRequest"
      },
      "delete": {
        "tags": [
          "admin-controller"
        ],
        "summary": "unlockAll",
        "operationId": "unlockAllUsingDELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "clusterLockRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterLockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterLock"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "clusterLockRequest"
      }
    },
    "/api/v1/admin/cluster/{kubernetesId}/lock": {
      "put": {
        "tags": [
          "admin-controller"
        ],
        "summary": "lock",
        "operationId": "lockUsingPUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kubernetesId",
            "in": "path",
            "description": "kubernetesId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "clusterLockRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterLockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterLock"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "clusterLockRequest"
      },
      "delete": {
        "tags": [
          "admin-controller"
        ],
        "summary": "unlock",
        "operationId": "unlockUsingDELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kubernetesId",
            "in": "path",
            "description": "kubernetesId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterLock"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/admin/deployment": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "deployment",
        "operationId": "deploymentUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "deploymentRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "deploymentRequest"
      }
    },
    "/api/v1/admin/management-token": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "managementToken",
        "operationId": "managementTokenUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Auth0ApiManagementTokensResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/admin/organization/{organizationName}": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "addUserToOrganization",
        "operationId": "addUserToOrganizationUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "organizationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "userInfo",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMember"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "userInfo"
      }
    },
    "/api/v1/agent-version": {
      "get": {
        "tags": [
          "agent-version-controller"
        ],
        "summary": "latestVersion",
        "operationId": "latestVersionUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "query",
            "description": "clusterId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CorePublisher«AgentVersion»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "agent-version-controller"
        ],
        "summary": "setVersion",
        "operationId": "setVersionUsingPUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "query",
            "description": "clusterId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "agent-version-controller"
        ],
        "summary": "eraseVersion",
        "operationId": "eraseVersionUsingDELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "query",
            "description": "clusterId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/cloud": {
      "get": {
        "tags": [
          "cloud-provider-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«CloudProvider»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/cloud/aws/validate": {
      "post": {
        "tags": [
          "cloud-account-validate-controller"
        ],
        "summary": "checkAWS",
        "operationId": "checkAWSUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAccountValidateResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "credentials"
      }
    },
    "/api/v1/cloud/{cloudId}/region": {
      "get": {
        "tags": [
          "cloud-provider-region-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudId",
            "in": "path",
            "description": "cloudId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«CloudProviderRegion»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/configuration/check": {
      "post": {
        "tags": [
          "configuration-check-controller"
        ],
        "summary": "check",
        "operationId": "checkUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "config",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalConfigurationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LocalConfigurationResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "config"
      }
    },
    "/api/v1/configuration/generate": {
      "post": {
        "tags": [
          "configuration-controller"
        ],
        "summary": "generate",
        "operationId": "generateUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "json",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "json"
      }
    },
    "/api/v1/e2e/cleanup": {
      "get": {
        "tags": [
          "e-2-e-controller"
        ],
        "summary": "cleanup",
        "operationId": "cleanupUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/engine-version": {
      "get": {
        "tags": [
          "engine-version-controller"
        ],
        "summary": "latestVersion",
        "operationId": "latestVersionUsingGET_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "query",
            "description": "clusterId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CorePublisher«EngineVersion»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "engine-version-controller"
        ],
        "summary": "setVersion",
        "operationId": "setVersionUsingPUT_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "query",
            "description": "clusterId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "engine-version-controller"
        ],
        "summary": "eraseVersion",
        "operationId": "eraseVersionUsingDELETE_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "query",
            "description": "clusterId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/git/access/check": {
      "get": {
        "tags": [
          "git-access-check-controller"
        ],
        "summary": "check",
        "operationId": "checkUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "url",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GitAccessStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/github/repository": {
      "get": {
        "tags": [
          "github-repository-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«GitRepositories»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/gitlab/repository": {
      "get": {
        "tags": [
          "gitlab-repository-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«GitRepositories»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/hook/github/enable": {
      "post": {
        "tags": [
          "hook-github-controller"
        ],
        "summary": "enable",
        "operationId": "enableUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GithubEnable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "data"
      }
    },
    "/api/v1/hook/gitlab/enable": {
      "post": {
        "tags": [
          "hook-gitlab-controller"
        ],
        "summary": "enable",
        "operationId": "enableUsingPOST_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitlabEnable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "data"
      }
    },
    "/api/v1/hook/user": {
      "post": {
        "tags": [
          "hook-user-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserHook"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "user"
      }
    },
    "/api/v1/hook/user/link-accounts": {
      "put": {
        "tags": [
          "hook-user-controller"
        ],
        "summary": "link",
        "operationId": "linkUsingPUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "mergeRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeAccountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "mergeRequest"
      }
    },
    "/api/v1/infrastructure/destroy": {
      "post": {
        "tags": [
          "infrastructure-init-controller"
        ],
        "summary": "destroy",
        "operationId": "destroyUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noop",
            "in": "query",
            "description": "noop",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "infrastructureRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalInfrastructureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "infrastructureRequest"
      }
    },
    "/api/v1/infrastructure/init": {
      "post": {
        "tags": [
          "infrastructure-init-controller"
        ],
        "summary": "init",
        "operationId": "initUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noop",
            "in": "query",
            "description": "noop",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "infrastructureRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalInfrastructureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "infrastructureRequest"
      }
    },
    "/api/v1/infrastructure/init/{clusterId}": {
      "post": {
        "tags": [
          "infrastructure-init-controller"
        ],
        "summary": "initWithId",
        "operationId": "initWithIdUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/infrastructure/remove": {
      "post": {
        "tags": [
          "infrastructure-init-controller"
        ],
        "summary": "remove",
        "operationId": "removeUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noop",
            "in": "query",
            "description": "noop",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "organization",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveOrganizationInfrastructureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "organization"
      }
    },
    "/api/v1/infrastructure/update/all": {
      "post": {
        "tags": [
          "infrastructure-update-all-controller"
        ],
        "summary": "updateAll",
        "operationId": "updateAllUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noop",
            "in": "query",
            "description": "noop",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_7",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Organization»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_5",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "organization",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization_2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "organization"
      }
    },
    "/api/v1/organization/private": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "summary": "getPrivate",
        "operationId": "getPrivateUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}": {
      "get": {
        "tags": [
          "organization-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_13",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_6",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "organization",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization_2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "organization"
      },
      "delete": {
        "tags": [
          "organization-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_5",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/billing": {
      "get": {
        "tags": [
          "organization-billing-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_5",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/billing/card": {
      "get": {
        "tags": [
          "organization-billing-card-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«BillingCardResponse»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-billing-card-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "billingCard",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "billingCard"
      }
    },
    "/api/v1/organization/{organizationId}/billing/card/{cardId}": {
      "get": {
        "tags": [
          "organization-billing-card-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_4",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "organization-billing-card-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/billing/info": {
      "get": {
        "tags": [
          "organization-billing-info-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_6",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BillingInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-billing-info-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "billingInfo",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInfo_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BillingInfo"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "billingInfo"
      }
    },
    "/api/v1/organization/{organizationId}/billing/invoice": {
      "get": {
        "tags": [
          "organization-billing-invoice-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_8",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«BillingInvoice»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/billing/invoice/{invoiceId}/pdf": {
      "get": {
        "tags": [
          "organization-billing-invoice-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_7",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "invoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePdf"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/build-platform": {
      "get": {
        "tags": [
          "organization-build-platform-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«BuildPlatform»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-build-platform-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "buildPlatform",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildPlatform"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPlatform_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "buildPlatform"
      }
    },
    "/api/v1/organization/{organizationId}/build-platform/{buildPlatformId}": {
      "get": {
        "tags": [
          "organization-build-platform-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_9",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buildPlatformId",
            "in": "path",
            "description": "buildPlatformId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPlatform_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-build-platform-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buildPlatformId",
            "in": "path",
            "description": "buildPlatformId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "buildPlatform",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildPlatform"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPlatform_1"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "buildPlatform"
      },
      "delete": {
        "tags": [
          "organization-build-platform-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buildPlatformId",
            "in": "path",
            "description": "buildPlatformId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/cloud-account": {
      "get": {
        "tags": [
          "organization-cloud-account-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_4",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«CloudAccount»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-cloud-account-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "cloudAccount",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudAccount_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAccount"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "cloudAccount"
      }
    },
    "/api/v1/organization/{organizationId}/cloud-account/{cloudAccountId}": {
      "get": {
        "tags": [
          "organization-cloud-account-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_10",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAccount"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-cloud-account-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "cloudAccount",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudAccount_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAccount"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "cloudAccount"
      },
      "delete": {
        "tags": [
          "organization-cloud-account-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/cloud-account/{cloudAccountId}/kubernetes": {
      "get": {
        "tags": [
          "organization-cloud-account-kubernetes-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_5",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Kubernetes»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-cloud-account-kubernetes-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "kubernetes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kubernetes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Kubernetes_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "kubernetes"
      }
    },
    "/api/v1/organization/{organizationId}/cloud-account/{cloudAccountId}/kubernetes/{kubernetesId}": {
      "get": {
        "tags": [
          "organization-cloud-account-kubernetes-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_11",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kubernetesId",
            "in": "path",
            "description": "kubernetesId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Kubernetes_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-cloud-account-kubernetes-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_4",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kubernetesId",
            "in": "path",
            "description": "kubernetesId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "kubernetes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kubernetes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Kubernetes_1"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "kubernetes"
      },
      "post": {
        "tags": [
          "organization-cloud-account-kubernetes-controller"
        ],
        "summary": "addNode",
        "operationId": "addNodeUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kubernetesId",
            "in": "path",
            "description": "kubernetesId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "node",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KubernetesNode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/KubernetesNode_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "node"
      },
      "delete": {
        "tags": [
          "organization-cloud-account-kubernetes-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kubernetesId",
            "in": "path",
            "description": "kubernetesId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/cloud-account/{cloudAccountId}/kubernetes/{kubernetesId}/node/{nodeId}": {
      "put": {
        "tags": [
          "organization-cloud-account-kubernetes-controller"
        ],
        "summary": "updateNode",
        "operationId": "updateNodeUsingPUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kubernetesId",
            "in": "path",
            "description": "kubernetesId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "nodeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "node",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KubernetesNode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/KubernetesNode_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "node"
      },
      "delete": {
        "tags": [
          "organization-cloud-account-kubernetes-controller"
        ],
        "summary": "deleteNode",
        "operationId": "deleteNodeUsingDELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloudAccountId",
            "in": "path",
            "description": "cloudAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kubernetesId",
            "in": "path",
            "description": "kubernetesId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "nodeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/container-registry": {
      "get": {
        "tags": [
          "organization-container-registry-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_6",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«ContainerRegistry»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-container-registry-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_4",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "containerRegistry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerRegistry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerRegistry_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "containerRegistry"
      }
    },
    "/api/v1/organization/{organizationId}/container-registry/{containerRegistryId}": {
      "get": {
        "tags": [
          "organization-container-registry-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_12",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerRegistryId",
            "in": "path",
            "description": "containerRegistryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerRegistry_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-container-registry-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_5",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerRegistryId",
            "in": "path",
            "description": "containerRegistryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "containerRegistry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerRegistry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerRegistry_1"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "containerRegistry"
      },
      "delete": {
        "tags": [
          "organization-container-registry-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_4",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerRegistryId",
            "in": "path",
            "description": "containerRegistryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/dns-provider": {
      "get": {
        "tags": [
          "organization-dns-provider-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_8",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«DNSProvider»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-dns-provider-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_6",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "dnsProvider",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DNSProvider"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DNSProvider_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "dnsProvider"
      }
    },
    "/api/v1/organization/{organizationId}/dns-provider/{dnsProviderId}": {
      "get": {
        "tags": [
          "organization-dns-provider-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_14",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dnsProviderId",
            "in": "path",
            "description": "dnsProviderId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DNSProvider_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-dns-provider-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_7",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dnsProviderId",
            "in": "path",
            "description": "dnsProviderId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "dnsProvider",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DNSProvider"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DNSProvider_1"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "dnsProvider"
      },
      "delete": {
        "tags": [
          "organization-dns-provider-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_6",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dnsProviderId",
            "in": "path",
            "description": "dnsProviderId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/init": {
      "post": {
        "tags": [
          "organization-init-controller"
        ],
        "summary": "init",
        "operationId": "initUsingPOST_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "profile",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "SMALL",
                "MEDIUM",
                "LARGE"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "initRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInitResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "initRequest"
      }
    },
    "/api/v1/organization/{organizationId}/logo": {
      "post": {
        "tags": [
          "organization-logo-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_7",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "description": "file"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "organization-logo-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_7",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/member": {
      "get": {
        "tags": [
          "organization-member-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_9",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«OrganizationMember»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-member-controller"
        ],
        "summary": "add",
        "operationId": "addUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "organizationMember",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationMember_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMember"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "organizationMember"
      }
    },
    "/api/v1/organization/{organizationId}/member/invite/domain": {
      "get": {
        "tags": [
          "organization-member-invite-controller"
        ],
        "summary": "listDomains",
        "operationId": "listDomainsUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«OrganizationMemberInviteByDomainResponse»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/member/invite/email": {
      "post": {
        "tags": [
          "organization-member-invite-controller"
        ],
        "summary": "sendInvite",
        "operationId": "sendInviteUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationMemberInviteByEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMemberInviteByEmailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "request"
      }
    },
    "/api/v1/organization/{organizationId}/member/invite/email/{inviteId}": {
      "delete": {
        "tags": [
          "organization-member-invite-controller"
        ],
        "summary": "deleteInvite",
        "operationId": "deleteInviteUsingDELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteId",
            "in": "path",
            "description": "inviteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/member/invite/email/{inviteId}/accept": {
      "post": {
        "tags": [
          "organization-member-invite-controller"
        ],
        "summary": "acceptInvite",
        "operationId": "acceptInviteUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteId",
            "in": "path",
            "description": "inviteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/member/invite/pending": {
      "get": {
        "tags": [
          "organization-member-invite-controller"
        ],
        "summary": "listPendingRequests",
        "operationId": "listPendingRequestsUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«OrganizationMemberInviteByEmailResponse»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/member/{memberId}": {
      "get": {
        "tags": [
          "organization-member-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_15",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationMember"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "organization-member-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_8",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/policy": {
      "get": {
        "tags": [
          "organization-policy-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_10",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«OrganizationPolicy»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-policy-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_8",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "policy",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationPolicy_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationPolicy"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "policy"
      }
    },
    "/api/v1/organization/{organizationId}/policy/{policyId}": {
      "get": {
        "tags": [
          "organization-policy-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_16",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "policyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationPolicy"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-policy-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_8",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "policyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "policy",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationPolicy_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationPolicy"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "policy"
      },
      "delete": {
        "tags": [
          "organization-policy-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_9",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "policyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/project": {
      "get": {
        "tags": [
          "organization-project-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_11",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Project»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-project-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_9",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "project",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project_3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "project"
      }
    },
    "/api/v1/organization/{organizationId}/project/{projectId}": {
      "get": {
        "tags": [
          "organization-project-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_17",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-project-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_9",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "project",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project_3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "project"
      },
      "delete": {
        "tags": [
          "organization-project-controller"
        ],
        "summary": "safeDelete",
        "operationId": "safeDeleteUsingDELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "force",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/project/{projectId}/application/check": {
      "post": {
        "tags": [
          "organization-project-application-check-controller"
        ],
        "summary": "check",
        "operationId": "checkUsingPOST_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleApplicationCheckRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCheckResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "request"
      }
    },
    "/api/v1/organization/{organizationId}/project/{projectId}/application/deploy": {
      "post": {
        "tags": [
          "organization-project-application-deploy-controller"
        ],
        "summary": "deploy",
        "operationId": "deployUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleApplicationDeploymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDeploymentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "request"
      }
    },
    "/api/v1/organization/{organizationId}/project/{projectId}/template/{id}/deploy": {
      "post": {
        "tags": [
          "organization-project-template-controller"
        ],
        "summary": "deploy",
        "operationId": "deployUsingPOST_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "req",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleTemplateDeploymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateDeploymentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "req"
      }
    },
    "/api/v1/organization/{organizationId}/role": {
      "get": {
        "tags": [
          "organization-role-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_13",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«OrganizationRole»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "organization-role-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_10",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "organizationRole",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationRole_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRole"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "organizationRole"
      }
    },
    "/api/v1/organization/{organizationId}/role/{roleId}": {
      "get": {
        "tags": [
          "organization-role-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_18",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "roleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRole"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "organization-role-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_10",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "roleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "organizationRole",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationRole_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRole"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "organizationRole"
      },
      "delete": {
        "tags": [
          "organization-role-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_10",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "roleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/service": {
      "get": {
        "tags": [
          "organization-service-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_14",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "description": "branch",
            "schema": {
              "type": "string",
              "default": "main"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableService"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/organization/{organizationId}/template": {
      "get": {
        "tags": [
          "organization-project-template-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_12",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "path",
            "description": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«AvailableTemplate»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_15",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Project»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "project-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_11",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "project",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project_3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "project"
      }
    },
    "/api/v1/project/{projectId}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_19",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "project-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_11",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "project",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project_3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "project"
      },
      "delete": {
        "tags": [
          "project-controller"
        ],
        "summary": "safeDelete",
        "operationId": "safeDeleteUsingDELETE_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "force",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/env": {
      "get": {
        "tags": [
          "project-environment-variable-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_29",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«EnvironmentVariable»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "project-environment-variable-controller"
        ],
        "summary": "createAll",
        "operationId": "createAllUsingPOST_2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "envs",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentVariable_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "envs"
      }
    },
    "/api/v1/project/{projectId}/env/{envId}": {
      "delete": {
        "tags": [
          "project-environment-variable-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_14",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envId",
            "in": "path",
            "description": "envId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment": {
      "get": {
        "tags": [
          "project-environment-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_20",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Environment»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "project-environment-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_12",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "environment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Environment_4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Environment_3"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "environment"
      }
    },
    "/api/v1/project/{projectId}/environment/name/{environmentName}": {
      "get": {
        "tags": [
          "project-environment-controller"
        ],
        "summary": "getByName",
        "operationId": "getByNameUsingGET_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "description": "details",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "environmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Environment_3"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}": {
      "get": {
        "tags": [
          "project-environment-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_21",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Environment_3"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/application": {
      "get": {
        "tags": [
          "project-environment-application-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_16",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Application»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/application/name/{applicationName}": {
      "get": {
        "tags": [
          "project-environment-application-controller"
        ],
        "summary": "getByName",
        "operationId": "getByNameUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "applicationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "description": "details",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application_4"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/application/{applicationId}": {
      "get": {
        "tags": [
          "project-environment-application-controller"
        ],
        "summary": "get",
        "operationId": "getUsingGET_20",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application_3"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/application/{applicationId}/commit/{commitId}/deploy": {
      "post": {
        "tags": [
          "project-environment-application-commit-deploy-controller"
        ],
        "summary": "deploy",
        "operationId": "deployUsingPOST_2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commitId",
            "in": "path",
            "description": "commitId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/application/{applicationId}/deployed": {
      "get": {
        "tags": [
          "project-environment-application-controller"
        ],
        "summary": "lastDeployed",
        "operationId": "lastDeployedUsingGET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Commit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/application/{applicationId}/env": {
      "get": {
        "tags": [
          "project-environment-application-environment-variable-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_17",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«EnvironmentVariable»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "project-environment-application-environment-variable-controller"
        ],
        "summary": "createAll",
        "operationId": "createAllUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "envs",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentVariable_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "envs"
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/application/{applicationId}/env/{envId}": {
      "delete": {
        "tags": [
          "project-environment-application-environment-variable-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_11",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envId",
            "in": "path",
            "description": "envId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/application/{applicationId}/log": {
      "get": {
        "tags": [
          "project-environment-application-log-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_18",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "follow",
            "in": "query",
            "description": "follow",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tail",
            "in": "query",
            "description": "tail",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/stream+json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/broker": {
      "get": {
        "tags": [
          "project-environment-broker-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_19",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Service»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/database": {
      "get": {
        "tags": [
          "project-environment-database-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_21",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Service»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/deploy": {
      "post": {
        "tags": [
          "project-environment-deploy-controller"
        ],
        "summary": "deploy",
        "operationId": "deployUsingPOST_3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "project-environment-deploy-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_12",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/deployment": {
      "get": {
        "tags": [
          "project-environment-deployment-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_22",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Deployment»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/deployment/{deploymentId}/status": {
      "get": {
        "tags": [
          "project-environment-deployment-status-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_23",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "deploymentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«DeploymentStatus»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/env": {
      "get": {
        "tags": [
          "project-environment-environment-variable-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_24",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«EnvironmentVariable»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "project-environment-environment-variable-controller"
        ],
        "summary": "createAll",
        "operationId": "createAllUsingPOST_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "envs",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentVariable_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "envs"
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/env/{envId}": {
      "delete": {
        "tags": [
          "project-environment-environment-variable-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_13",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envId",
            "in": "path",
            "description": "envId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/log": {
      "get": {
        "tags": [
          "project-environment-log-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_25",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "follow",
            "in": "query",
            "description": "follow",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tail",
            "in": "query",
            "description": "tail",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/stream+json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/router": {
      "get": {
        "tags": [
          "project-environment-router-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_26",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Router»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/service": {
      "get": {
        "tags": [
          "project-environment-service-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_27",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Service»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/project/{projectId}/environment/{environmentId}/unknown": {
      "get": {
        "tags": [
          "project-environment-unknown-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_28",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "environmentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«Service»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/technology": {
      "get": {
        "tags": [
          "technology-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_31",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response«AvailableTechnology»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/web/oauth/token": {
      "post": {
        "tags": [
          "o-auth-token-controller"
        ],
        "summary": "getWebOAuthToken",
        "operationId": "getWebOAuthTokenUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "req",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-codegen-request-body-name": "req"
      }
    },
    "/readiness": {
      "get": {
        "tags": [
          "readiness-controller"
        ],
        "summary": "list",
        "operationId": "listUsingGET_30",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "readiness-controller"
        ],
        "summary": "list",
        "operationId": "listUsingPUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "readiness-controller"
        ],
        "summary": "list",
        "operationId": "listUsingPOST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "readiness-controller"
        ],
        "summary": "list",
        "operationId": "listUsingDELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "readiness-controller"
        ],
        "summary": "list",
        "operationId": "listUsingOPTIONS",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "head": {
        "tags": [
          "readiness-controller"
        ],
        "summary": "list",
        "operationId": "listUsingHEAD",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "readiness-controller"
        ],
        "summary": "list",
        "operationId": "listUsingPATCH",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "AWSCredentials": {
        "title": "AWSCredentials",
        "type": "object",
        "properties": {
          "access_key_id": {
            "type": "string"
          },
          "secret_access_key": {
            "type": "string"
          }
        }
      },
      "AgentVersion": {
        "title": "AgentVersion",
        "required": [
          "object_type",
          "version"
        ],
        "type": "object",
        "properties": {
          "kubernetes_id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "AllowedService": {
        "title": "AllowedService",
        "type": "object",
        "properties": {
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "AllowedService_1": {
        "title": "AllowedService_1",
        "type": "object",
        "properties": {
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Application": {
        "title": "Application",
        "type": "object",
        "properties": {
          "create_environment_variables": {
            "type": "boolean"
          },
          "delete_environment_variables": {
            "type": "boolean"
          },
          "edit_environment_variables": {
            "type": "boolean"
          },
          "edit_settings": {
            "type": "boolean"
          },
          "read_environment_variables": {
            "type": "boolean"
          },
          "read_settings": {
            "type": "boolean"
          },
          "start": {
            "type": "boolean"
          },
          "stop": {
            "type": "boolean"
          }
        }
      },
      "ApplicationCheckResponse": {
        "title": "ApplicationCheckResponse",
        "required": [
          "application_exists",
          "auth_provider",
          "dockerfile_exists",
          "project_id",
          "qovery_yml_exists",
          "repository_id"
        ],
        "type": "object",
        "properties": {
          "application_exists": {
            "type": "boolean"
          },
          "auth_provider": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET"
            ]
          },
          "branch": {
            "type": "string"
          },
          "branch_exists": {
            "type": "boolean"
          },
          "dockerfile_exists": {
            "type": "boolean"
          },
          "project_id": {
            "type": "string"
          },
          "qovery_yml_exists": {
            "type": "boolean"
          },
          "repository_id": {
            "type": "string"
          }
        }
      },
      "ApplicationDeploymentResponse": {
        "title": "ApplicationDeploymentResponse",
        "required": [
          "application_configuration",
          "auth_provider",
          "repository_id"
        ],
        "type": "object",
        "properties": {
          "application_configuration": {
            "type": "object"
          },
          "auth_provider": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET"
            ]
          },
          "branch": {
            "type": "string"
          },
          "dockerfile_content": {
            "type": "string"
          },
          "repository_id": {
            "type": "string"
          }
        }
      },
      "Application_1": {
        "title": "Application_1",
        "required": [
          "cpu_burst",
          "start_timeout_in_seconds",
          "total_cpus",
          "total_instances",
          "total_ram_in_mib"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "branch": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          },
          "cpu_burst": {
            "type": "string"
          },
          "dockerfile_path": {
            "type": "string"
          },
          "environment_variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Map«string,string»"
            }
          },
          "git_credentials": {
            "$ref": "#/components/schemas/GitCredentials"
          },
          "git_url": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "private_port": {
            "type": "integer",
            "format": "int32"
          },
          "start_timeout_in_seconds": {
            "type": "integer",
            "format": "int32"
          },
          "storage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Storage"
            }
          },
          "total_cpus": {
            "type": "string"
          },
          "total_instances": {
            "type": "integer",
            "format": "int32"
          },
          "total_ram_in_mib": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Application_2": {
        "title": "Application_2",
        "type": "object",
        "properties": {
          "read_settings": {
            "type": "boolean"
          },
          "edit_settings": {
            "type": "boolean"
          },
          "read_environment_variables": {
            "type": "boolean"
          },
          "create_environment_variables": {
            "type": "boolean"
          },
          "edit_environment_variables": {
            "type": "boolean"
          },
          "delete_environment_variables": {
            "type": "boolean"
          },
          "start": {
            "type": "boolean"
          },
          "stop": {
            "type": "boolean"
          }
        }
      },
      "Application_3": {
        "title": "Application_3",
        "required": [
          "active",
          "category",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "brokers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "category": {
            "type": "string"
          },
          "cpu": {
            "type": "string"
          },
          "cpu_burst": {
            "type": "string"
          },
          "cpu_in_decimal": {
            "type": "number",
            "format": "float"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deletion_started_at": {
            "type": "string",
            "format": "date-time"
          },
          "depends_on": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deployed_fake_version": {
            "type": "string"
          },
          "desired_fake_version": {
            "type": "string"
          },
          "dockerfile_content": {
            "type": "string"
          },
          "dockerfile_path": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "environment_variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            }
          },
          "fake": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "private_port": {
            "type": "integer",
            "format": "int32"
          },
          "qovery_yml_content": {
            "type": "string"
          },
          "qovery_yml_path": {
            "type": "string"
          },
          "ram_in_mib": {
            "type": "integer",
            "format": "int32"
          },
          "repository": {
            "$ref": "#/components/schemas/Repository"
          },
          "running_instances": {
            "type": "integer",
            "format": "int32"
          },
          "start_timeout_in_seconds": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/DeploymentStatus_1"
          },
          "storage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageDTO«string,Base»"
            }
          },
          "total_services": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Application_4": {
        "title": "Application_4",
        "required": [
          "active",
          "category",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "brokers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "category": {
            "type": "string"
          },
          "cpu": {
            "type": "string"
          },
          "cpu_burst": {
            "type": "string"
          },
          "cpu_in_decimal": {
            "type": "number",
            "format": "float"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deletion_started_at": {
            "type": "string",
            "format": "date-time"
          },
          "depends_on": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deployed_fake_version": {
            "type": "string"
          },
          "desired_fake_version": {
            "type": "string"
          },
          "dockerfile_content": {
            "type": "string"
          },
          "dockerfile_path": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "environment_variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            }
          },
          "fake": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "private_port": {
            "type": "integer",
            "format": "int32"
          },
          "qovery_yml_content": {
            "type": "string"
          },
          "qovery_yml_path": {
            "type": "string"
          },
          "ram_in_mib": {
            "type": "integer",
            "format": "int32"
          },
          "repository": {
            "$ref": "#/components/schemas/Repository"
          },
          "running_instances": {
            "type": "integer",
            "format": "int32"
          },
          "start_timeout_in_seconds": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/DeploymentStatus_1"
          },
          "storage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageDTO«string,Base»"
            }
          },
          "total_services": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Application_5": {
        "title": "Application_5",
        "required": [
          "active",
          "category",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "brokers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_3"
            }
          },
          "category": {
            "type": "string"
          },
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_3"
            }
          },
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "private_port": {
            "type": "integer",
            "format": "int32"
          },
          "total_services": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "dockerfile_path": {
            "type": "string"
          },
          "dockerfile_content": {
            "type": "string"
          },
          "qovery_yml_path": {
            "type": "string"
          },
          "qovery_yml_content": {
            "type": "string"
          },
          "cpu": {
            "type": "string"
          },
          "ram_in_mib": {
            "type": "integer",
            "format": "int32"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "running_instances": {
            "type": "integer",
            "format": "int32"
          },
          "start_timeout_in_seconds": {
            "type": "integer",
            "format": "int32"
          },
          "depends_on": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_4"
          },
          "repository": {
            "$ref": "#/components/schemas/Repository_1"
          },
          "storage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageDTO«string,Base»_1"
            }
          },
          "fake": {
            "type": "boolean"
          }
        }
      },
      "Auth0ApiManagementTokensResponse": {
        "title": "Auth0ApiManagementTokensResponse",
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          }
        }
      },
      "AuthProvider": {
        "title": "AuthProvider",
        "required": [
          "credentials",
          "name",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/Credentials"
          },
          "name": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET"
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AvailableService": {
        "title": "AvailableService",
        "required": [
          "available_versions",
          "description",
          "display_name",
          "id",
          "kind",
          "logo_url",
          "name"
        ],
        "type": "object",
        "properties": {
          "available_versions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "DATABASE",
              "BROKER"
            ]
          },
          "logo_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AvailableTechnology": {
        "title": "AvailableTechnology",
        "required": [
          "description",
          "display_name",
          "id",
          "kind",
          "logo_url",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "dockerfile_content": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "LANGUAGE",
              "FRAMEWORK"
            ]
          },
          "logo_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AvailableTemplate": {
        "title": "AvailableTemplate",
        "required": [
          "applications",
          "description",
          "id",
          "name",
          "position",
          "visible"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableTemplateRepository"
            }
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "visible": {
            "type": "boolean"
          }
        }
      },
      "AvailableTemplateRepository": {
        "title": "AvailableTemplateRepository",
        "required": [
          "description",
          "id",
          "logo_url",
          "name",
          "repository_url",
          "services",
          "template",
          "visible"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "repository_url": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableService"
            }
          },
          "template": {
            "$ref": "#/components/schemas/AvailableTemplate"
          },
          "visible": {
            "type": "boolean"
          }
        }
      },
      "Base": {
        "title": "Base",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Base_1": {
        "title": "Base_1",
        "type": "object"
      },
      "Billing": {
        "title": "Billing",
        "required": [
          "billing_cards",
          "billing_info",
          "billing_invoices"
        ],
        "type": "object",
        "properties": {
          "billing_cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingCardResponse"
            }
          },
          "billing_info": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "billing_invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingInvoice"
            }
          }
        }
      },
      "BillingCardRequest": {
        "title": "BillingCardRequest",
        "required": [
          "cvv",
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "cvv": {
            "type": "string"
          },
          "expiry_month": {
            "type": "integer",
            "format": "int32"
          },
          "expiry_year": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BillingCardResponse": {
        "title": "BillingCardResponse",
        "required": [
          "expiry_month",
          "expiry_year",
          "id",
          "is_expired",
          "last_digit"
        ],
        "type": "object",
        "properties": {
          "expiry_month": {
            "type": "integer",
            "format": "int32"
          },
          "expiry_year": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "is_expired": {
            "type": "boolean"
          },
          "last_digit": {
            "type": "string"
          }
        }
      },
      "BillingInfo": {
        "title": "BillingInfo",
        "required": [
          "address",
          "city",
          "country_code",
          "email",
          "first_name",
          "last_name",
          "zip"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "vat_number": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        }
      },
      "BillingInfo_1": {
        "title": "BillingInfo_1",
        "required": [
          "address",
          "city",
          "country_code",
          "email",
          "first_name",
          "last_name",
          "zip"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "vat_number": {
            "type": "string"
          }
        }
      },
      "BillingInvoice": {
        "title": "BillingInvoice",
        "required": [
          "currency_code",
          "date",
          "id",
          "status",
          "total",
          "total_in_cents"
        ],
        "type": "object",
        "properties": {
          "currency_code": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PAID",
              "POSTED",
              "PAYMENT_DUE",
              "NOT_PAID",
              "VOIDED",
              "PENDING",
              "UNKNOWN"
            ]
          },
          "total": {
            "type": "number",
            "format": "float"
          },
          "total_in_cents": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BuildPlatform": {
        "title": "BuildPlatform",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "LOCAL_DOCKER"
            ]
          },
          "is_default": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization_2"
          }
        }
      },
      "BuildPlatform_1": {
        "title": "BuildPlatform_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deployment_status": {
            "type": "string",
            "enum": [
              "NOT_DEPLOYED",
              "IN_PROGRESS",
              "DEPLOYED"
            ]
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "enum": [
              "LOCAL_DOCKER"
            ]
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/Options"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CloudAccount": {
        "title": "CloudAccount",
        "type": "object",
        "properties": {
          "cloud_provider": {
            "$ref": "#/components/schemas/CloudProvider"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "enum": [
              "AWS",
              "DO"
            ]
          },
          "kubernetes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Kubernetes_2"
            }
          },
          "name": {
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/Options_2"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "terraform_state": {
            "$ref": "#/components/schemas/TerraformStateCredentials"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CloudAccountValidateResponse": {
        "title": "CloudAccountValidateResponse",
        "type": "object",
        "properties": {
          "valid_credentials": {
            "type": "boolean"
          }
        }
      },
      "CloudAccount_1": {
        "title": "CloudAccount_1",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "AWS",
              "DO"
            ]
          },
          "is_default": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options_3"
          },
          "terraform_state": {
            "$ref": "#/components/schemas/TerraformStateCredentials_1"
          },
          "kubernetes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Kubernetes"
            }
          }
        }
      },
      "CloudAccount_2": {
        "title": "CloudAccount_2",
        "type": "object",
        "properties": {
          "cloud_provider": {
            "$ref": "#/components/schemas/CloudProvider"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "enum": [
              "AWS",
              "DO"
            ]
          },
          "kubernetes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Kubernetes_2"
            }
          },
          "name": {
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/Options_2"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "terraform_state": {
            "$ref": "#/components/schemas/TerraformStateCredentials"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CloudProvider": {
        "title": "CloudProvider",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "AWS",
              "DO"
            ]
          },
          "logo_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudProviderRegion"
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CloudProviderRegion": {
        "title": "CloudProviderRegion",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CloudProviderRegion_1": {
        "title": "CloudProviderRegion_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ClusterLock": {
        "title": "ClusterLock",
        "required": [
          "allowed_users",
          "cluster_id",
          "locked_by",
          "reason",
          "state"
        ],
        "type": "object",
        "properties": {
          "allowed_users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cluster_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "locked_by": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "LOCKED",
              "RELEASED"
            ]
          },
          "unlocked_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClusterLockRequest": {
        "title": "ClusterLockRequest",
        "required": [
          "allowed_users",
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "allowed_users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Commit": {
        "title": "Commit",
        "required": [
          "sha"
        ],
        "type": "object",
        "properties": {
          "author_name": {
            "type": "string"
          },
          "deployed": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContainerRegistry": {
        "title": "ContainerRegistry",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "ECR",
              "DOCR"
            ]
          },
          "is_default": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Options_1"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization_2"
          }
        }
      },
      "ContainerRegistry_1": {
        "title": "ContainerRegistry_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deployment_status": {
            "type": "string",
            "enum": [
              "NOT_DEPLOYED",
              "IN_PROGRESS",
              "DEPLOYED"
            ]
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "enum": [
              "ECR",
              "DOCR"
            ]
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/Options_4"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CorePublisher«AgentVersion»": {
        "title": "CorePublisher«AgentVersion»",
        "type": "object"
      },
      "CorePublisher«EngineVersion»": {
        "title": "CorePublisher«EngineVersion»",
        "type": "object"
      },
      "Credentials": {
        "title": "Credentials",
        "required": [
          "access_token",
          "expires_at",
          "login"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "login": {
            "type": "string"
          }
        }
      },
      "CustomDomain": {
        "title": "CustomDomain",
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "target_domain": {
            "type": "string"
          }
        }
      },
      "CustomDomainStatus": {
        "title": "CustomDomainStatus",
        "required": [
          "custom_domain_id",
          "status"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "custom_domain_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "VERIFYING",
              "VERIFIED"
            ]
          }
        }
      },
      "CustomDomain_1": {
        "title": "CustomDomain_1",
        "required": [
          "target_domain_prefix"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "provided_domain": {
            "type": "string"
          },
          "router_id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CustomDomainStatus"
          },
          "target_domain": {
            "type": "string"
          },
          "target_domain_prefix": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "verification_domain": {
            "type": "string"
          }
        }
      },
      "DNSProvider": {
        "title": "DNSProvider",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "CLOUDFLARE"
            ]
          },
          "name": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          },
          "options": {
            "type": "object"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization_2"
          }
        }
      },
      "DNSProvider_1": {
        "title": "DNSProvider_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "domain": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "enum": [
              "CLOUDFLARE"
            ]
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "options": {
            "type": "object"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Data": {
        "title": "Data",
        "type": "object",
        "properties": {
          "copy_from_environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataCopy"
            }
          }
        }
      },
      "DataCopy": {
        "title": "DataCopy",
        "type": "object",
        "properties": {
          "from_environment": {
            "type": "string"
          }
        }
      },
      "Deployment": {
        "title": "Deployment",
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "DeploymentRequest": {
        "title": "DeploymentRequest",
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ID",
              "FINGERPRINT"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "DeploymentStatus": {
        "title": "DeploymentStatus",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deployment": {
            "$ref": "#/components/schemas/Deployment_4"
          },
          "id": {
            "type": "string"
          },
          "level": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR"
            ]
          },
          "message": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": [
              "QUEUED",
              "INFRASTRUCTURE",
              "DATABASE",
              "APPLICATION",
              "EXTERNAL_SERVICE",
              "ROUTER",
              "ENVIRONMENT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING",
              "DEPLOYMENT_IN_PROGRESS",
              "PAUSE_IN_PROGRESS",
              "DELETE_IN_PROGRESS",
              "ERROR",
              "DEPLOYED",
              "PAUSED",
              "DELETED",
              "DEPLOYMENT_ERROR",
              "PAUSE_ERROR",
              "DELETE_ERROR"
            ]
          },
          "status_for_human": {
            "$ref": "#/components/schemas/StatusForHuman"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DeploymentStatus_1": {
        "title": "DeploymentStatus_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deployment": {
            "$ref": "#/components/schemas/Deployment_4"
          },
          "id": {
            "type": "string"
          },
          "level": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR"
            ]
          },
          "message": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": [
              "QUEUED",
              "INFRASTRUCTURE",
              "DATABASE",
              "APPLICATION",
              "EXTERNAL_SERVICE",
              "ROUTER",
              "ENVIRONMENT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING",
              "DEPLOYMENT_IN_PROGRESS",
              "PAUSE_IN_PROGRESS",
              "DELETE_IN_PROGRESS",
              "ERROR",
              "DEPLOYED",
              "PAUSED",
              "DELETED",
              "DEPLOYMENT_ERROR",
              "PAUSE_ERROR",
              "DELETE_ERROR"
            ]
          },
          "status_for_human": {
            "$ref": "#/components/schemas/StatusForHuman"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Deployment_1": {
        "title": "Deployment_1",
        "type": "object",
        "properties": {
          "allowed_services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedService"
            }
          }
        }
      },
      "Deployment_2": {
        "title": "Deployment_2",
        "type": "object",
        "properties": {
          "allowed_services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedService_1"
            }
          }
        }
      },
      "Deployment_3": {
        "title": "Deployment_3",
        "required": [
          "engine_payload_set",
          "object_type",
          "push_payload_set"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "engine_payload": {
            "type": "object"
          },
          "engine_payload_set": {
            "type": "boolean"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "fingerprint": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "published_on": {
            "type": "string"
          },
          "push_payload": {
            "type": "object"
          },
          "push_payload_set": {
            "type": "boolean"
          }
        }
      },
      "Deployment_4": {
        "title": "Deployment_4",
        "required": [
          "engine_payload_set",
          "object_type",
          "push_payload_set"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "engine_payload": {
            "type": "object"
          },
          "engine_payload_set": {
            "type": "boolean"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "fingerprint": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "published_on": {
            "type": "string"
          },
          "push_payload": {
            "type": "object"
          },
          "push_payload_set": {
            "type": "boolean"
          }
        }
      },
      "Email": {
        "title": "Email",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          },
          "visibility": {
            "type": "string"
          }
        }
      },
      "Email_1": {
        "title": "Email_1",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          },
          "visibility": {
            "type": "string"
          }
        }
      },
      "EngineVersion": {
        "title": "EngineVersion",
        "required": [
          "object_type",
          "version"
        ],
        "type": "object",
        "properties": {
          "kubernetes_id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Environment": {
        "title": "Environment",
        "type": "object",
        "properties": {
          "create": {
            "type": "boolean"
          },
          "create_environment_variables": {
            "type": "boolean"
          },
          "delete": {
            "type": "boolean"
          },
          "delete_environment_variables": {
            "type": "boolean"
          },
          "edit_environment_variables": {
            "type": "boolean"
          },
          "edit_settings": {
            "type": "boolean"
          },
          "read_environment_variables": {
            "type": "boolean"
          },
          "read_settings": {
            "type": "boolean"
          },
          "start": {
            "type": "boolean"
          },
          "stop": {
            "type": "boolean"
          }
        }
      },
      "EnvironmentRequest": {
        "title": "EnvironmentRequest",
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_1"
            }
          },
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          },
          "deployment": {
            "$ref": "#/components/schemas/Deployment"
          },
          "execution_id": {
            "type": "string"
          },
          "external_services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalService"
            }
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "owner_id": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "routers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Router"
            }
          }
        }
      },
      "EnvironmentVariable": {
        "title": "EnvironmentVariable",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "key_value": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": [
              "BUILT_IN",
              "PROJECT",
              "ENVIRONMENT",
              "APPLICATION"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "EnvironmentVariable_1": {
        "title": "EnvironmentVariable_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "key_value": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Environment_1": {
        "title": "Environment_1",
        "type": "object",
        "properties": {
          "read_settings": {
            "type": "boolean"
          },
          "edit_settings": {
            "type": "boolean"
          },
          "read_environment_variables": {
            "type": "boolean"
          },
          "create_environment_variables": {
            "type": "boolean"
          },
          "edit_environment_variables": {
            "type": "boolean"
          },
          "delete_environment_variables": {
            "type": "boolean"
          },
          "create": {
            "type": "boolean"
          },
          "delete": {
            "type": "boolean"
          },
          "start": {
            "type": "boolean"
          },
          "stop": {
            "type": "boolean"
          }
        }
      },
      "Environment_2": {
        "title": "Environment_2",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_4"
            }
          },
          "applications_ordered_errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brokers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "environment_variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            }
          },
          "external_services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalService_2"
            }
          },
          "from_environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "id": {
            "type": "string"
          },
          "kubernetes": {
            "$ref": "#/components/schemas/Kubernetes_2"
          },
          "mapplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_4"
            }
          },
          "name": {
            "type": "string"
          },
          "normalized_name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "organization_policy": {
            "$ref": "#/components/schemas/OrganizationPolicy"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "routers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Router_2"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "status": {
            "$ref": "#/components/schemas/DeploymentStatus_1"
          },
          "total_applications": {
            "type": "integer",
            "format": "int32"
          },
          "total_brokers": {
            "type": "integer",
            "format": "int32"
          },
          "total_databases": {
            "type": "integer",
            "format": "int32"
          },
          "total_external_services": {
            "type": "integer",
            "format": "int32"
          },
          "total_services": {
            "type": "integer",
            "format": "int32"
          },
          "total_unknown": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Environment_3": {
        "title": "Environment_3",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_4"
            }
          },
          "applications_ordered_errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brokers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "environment_variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            }
          },
          "external_services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalService_2"
            }
          },
          "from_environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "id": {
            "type": "string"
          },
          "kubernetes": {
            "$ref": "#/components/schemas/Kubernetes_2"
          },
          "mapplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_4"
            }
          },
          "name": {
            "type": "string"
          },
          "normalized_name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "organization_policy": {
            "$ref": "#/components/schemas/OrganizationPolicy"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "routers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Router_2"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          },
          "status": {
            "$ref": "#/components/schemas/DeploymentStatus_1"
          },
          "total_applications": {
            "type": "integer",
            "format": "int32"
          },
          "total_brokers": {
            "type": "integer",
            "format": "int32"
          },
          "total_databases": {
            "type": "integer",
            "format": "int32"
          },
          "total_external_services": {
            "type": "integer",
            "format": "int32"
          },
          "total_services": {
            "type": "integer",
            "format": "int32"
          },
          "total_unknown": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Environment_4": {
        "title": "Environment_4",
        "required": [
          "kubernetes",
          "object_type",
          "organization_policy"
        ],
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_5"
            }
          },
          "applications_ordered_errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brokers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_3"
            }
          },
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_3"
            }
          },
          "id": {
            "type": "string"
          },
          "normalized_name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "total_applications": {
            "type": "integer",
            "format": "int32"
          },
          "total_brokers": {
            "type": "integer",
            "format": "int32"
          },
          "total_databases": {
            "type": "integer",
            "format": "int32"
          },
          "total_external_services": {
            "type": "integer",
            "format": "int32"
          },
          "total_services": {
            "type": "integer",
            "format": "int32"
          },
          "total_unknown": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "from_environment": {
            "$ref": "#/components/schemas/Environment_4"
          },
          "kubernetes": {
            "$ref": "#/components/schemas/Kubernetes"
          },
          "organization_policy": {
            "$ref": "#/components/schemas/OrganizationPolicy_1"
          }
        }
      },
      "Error": {
        "title": "Error",
        "required": [
          "hint",
          "reason"
        ],
        "type": "object",
        "properties": {
          "hint": {
            "type": "string"
          },
          "line_number": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "Event": {
        "title": "Event",
        "type": "object",
        "properties": {
          "dockerfile": {
            "type": "string"
          }
        }
      },
      "EventBundle": {
        "title": "EventBundle",
        "type": "object",
        "properties": {
          "branch": {
            "type": "string"
          },
          "on_create": {
            "$ref": "#/components/schemas/Event"
          },
          "on_delete": {
            "$ref": "#/components/schemas/Event"
          },
          "on_pause": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "ExternalInfrastructureRequest": {
        "title": "ExternalInfrastructureRequest",
        "type": "object",
        "properties": {
          "build_platform": {
            "$ref": "#/components/schemas/BuildPlatform"
          },
          "container_registry": {
            "$ref": "#/components/schemas/ContainerRegistry"
          },
          "kubernetes": {
            "$ref": "#/components/schemas/Kubernetes"
          },
          "dns_provider": {
            "$ref": "#/components/schemas/DNSProvider"
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "ExternalService": {
        "title": "ExternalService",
        "required": [
          "total_cpus",
          "total_ram_in_mib"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "branch": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          },
          "environment_variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Map«string,string»"
            }
          },
          "git_credentials": {
            "$ref": "#/components/schemas/GitCredentials"
          },
          "git_url": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "on_create_dockerfile_path": {
            "type": "string"
          },
          "on_delete_dockerfile_path": {
            "type": "string"
          },
          "on_pause_dockerfile_path": {
            "type": "string"
          },
          "total_cpus": {
            "type": "string"
          },
          "total_ram_in_mib": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ExternalService_1": {
        "title": "ExternalService_1",
        "required": [
          "action",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_4"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deletion_started_at": {
            "type": "string",
            "format": "date-time"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventBundle"
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DeploymentStatus_1"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExternalService_2": {
        "title": "ExternalService_2",
        "required": [
          "action",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_4"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deletion_started_at": {
            "type": "string",
            "format": "date-time"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventBundle"
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DeploymentStatus_1"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FilePart": {
        "title": "FilePart",
        "type": "object"
      },
      "GitAccessStatus": {
        "title": "GitAccessStatus",
        "type": "object",
        "properties": {
          "git_provider": {
            "$ref": "#/components/schemas/GitProvider"
          },
          "has_access": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "GitCredentials": {
        "title": "GitCredentials",
        "required": [
          "access_token",
          "expired_at",
          "login"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "expired_at": {
            "type": "string",
            "format": "date-time"
          },
          "login": {
            "type": "string"
          }
        }
      },
      "GitProvider": {
        "title": "GitProvider",
        "required": [
          "api_url",
          "owner",
          "repository_name",
          "sanitized_url",
          "source",
          "url",
          "url_for_database"
        ],
        "type": "object",
        "properties": {
          "api_url": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "repository_name": {
            "type": "string"
          },
          "sanitized_url": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB"
            ]
          },
          "url": {
            "type": "string"
          },
          "url_for_database": {
            "type": "string"
          }
        }
      },
      "GitRepositories": {
        "title": "GitRepositories",
        "required": [
          "id",
          "name",
          "repositories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GitRepository"
            }
          }
        }
      },
      "GitRepository": {
        "title": "GitRepository",
        "required": [
          "default_branch",
          "full_name",
          "git_url",
          "id",
          "is_private",
          "name"
        ],
        "type": "object",
        "properties": {
          "default_branch": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_private": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GithubEnable": {
        "title": "GithubEnable",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "preferred_id": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          }
        }
      },
      "GitlabEnable": {
        "title": "GitlabEnable",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "preferred_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "group": {
            "type": "string"
          }
        }
      },
      "Id": {
        "title": "Id",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "InvoicePdf": {
        "title": "InvoicePdf",
        "required": [
          "pdf_url"
        ],
        "type": "object",
        "properties": {
          "pdf_url": {
            "type": "string"
          }
        }
      },
      "Kubernetes": {
        "title": "Kubernetes",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "EKS",
              "DOKS"
            ]
          },
          "version": {
            "type": "string",
            "enum": [
              "V1_16",
              "V1_17",
              "V1_18",
              "V1_18_10_DO_2",
              "V1_18_10_DO_3",
              "V1_18_14_DO_0"
            ]
          },
          "is_default": {
            "type": "boolean"
          },
          "test_cluster": {
            "type": "boolean"
          },
          "cloud_provider_region": {
            "$ref": "#/components/schemas/CloudProviderRegion_1"
          },
          "options": {
            "type": "object"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KubernetesNode"
            }
          }
        }
      },
      "KubernetesNode": {
        "title": "KubernetesNode",
        "type": "object",
        "properties": {
          "cpu": {
            "type": "integer",
            "format": "int32"
          },
          "memory_in_gib": {
            "type": "integer",
            "format": "int32"
          },
          "instance_type": {
            "type": "string"
          }
        }
      },
      "KubernetesNode_1": {
        "title": "KubernetesNode_1",
        "type": "object",
        "properties": {
          "cpu": {
            "type": "integer",
            "format": "int32"
          },
          "instance_type": {
            "type": "string"
          },
          "matched_instance_type": {
            "type": "string"
          },
          "memory_in_gib": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Kubernetes_1": {
        "title": "Kubernetes_1",
        "required": [
          "object_type",
          "test_cluster"
        ],
        "type": "object",
        "properties": {
          "cloud_account": {
            "$ref": "#/components/schemas/CloudAccount_2"
          },
          "cloud_provider_region": {
            "$ref": "#/components/schemas/CloudProviderRegion"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deployment_status": {
            "type": "string",
            "enum": [
              "NOT_DEPLOYED",
              "IN_PROGRESS",
              "DEPLOYED"
            ]
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "enum": [
              "EKS",
              "DOKS"
            ]
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KubernetesNode_1"
            }
          },
          "object_type": {
            "type": "string"
          },
          "test_cluster": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string",
            "enum": [
              "V1_16",
              "V1_17",
              "V1_18",
              "V1_18_10_DO_2",
              "V1_18_10_DO_3",
              "V1_18_14_DO_0"
            ]
          }
        }
      },
      "Kubernetes_2": {
        "title": "Kubernetes_2",
        "required": [
          "object_type",
          "test_cluster"
        ],
        "type": "object",
        "properties": {
          "cloud_account": {
            "$ref": "#/components/schemas/CloudAccount_2"
          },
          "cloud_provider_region": {
            "$ref": "#/components/schemas/CloudProviderRegion"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deployment_status": {
            "type": "string",
            "enum": [
              "NOT_DEPLOYED",
              "IN_PROGRESS",
              "DEPLOYED"
            ]
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "kind": {
            "type": "string",
            "enum": [
              "EKS",
              "DOKS"
            ]
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KubernetesNode_1"
            }
          },
          "object_type": {
            "type": "string"
          },
          "test_cluster": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string",
            "enum": [
              "V1_16",
              "V1_17",
              "V1_18",
              "V1_18_10_DO_2",
              "V1_18_10_DO_3",
              "V1_18_14_DO_0"
            ]
          }
        }
      },
      "Lifetime": {
        "title": "Lifetime",
        "type": "object",
        "properties": {
          "delete_cron": {
            "type": "string"
          },
          "max_alive_date": {
            "type": "string",
            "format": "date-time"
          },
          "max_alive_in_minutes": {
            "type": "integer",
            "format": "int64"
          },
          "shutdown_cron": {
            "type": "string"
          },
          "startup_cron": {
            "type": "string"
          }
        }
      },
      "Lifetime_1": {
        "title": "Lifetime_1",
        "type": "object",
        "properties": {
          "startup_cron": {
            "type": "string"
          },
          "shutdown_cron": {
            "type": "string"
          },
          "delete_cron": {
            "type": "string"
          },
          "max_alive_in_minutes": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LocalConfigurationRequest": {
        "title": "LocalConfigurationRequest",
        "required": [
          "environment_name"
        ],
        "type": "object",
        "properties": {
          "qovery_yml_content": {
            "type": "string"
          },
          "dockerfile_content": {
            "type": "string"
          },
          "environment_name": {
            "type": "string"
          }
        }
      },
      "LocalConfigurationResponse": {
        "title": "LocalConfigurationResponse",
        "required": [
          "errors",
          "valid"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "Log": {
        "title": "Log",
        "type": "object",
        "properties": {
          "application": {
            "type": "string"
          },
          "application_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "environment_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Map«string,string»": {
        "title": "Map«string,string»",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "MergeAccountsRequest": {
        "title": "MergeAccountsRequest",
        "required": [
          "secondary_user_id",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "secondary_user_id": {
            "type": "string"
          }
        }
      },
      "OAuthTokenRequest": {
        "title": "OAuthTokenRequest",
        "type": "object",
        "properties": {
          "authorization_code": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string"
          }
        }
      },
      "OAuthTokenResponse": {
        "title": "OAuthTokenResponse",
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          }
        }
      },
      "Options": {
        "title": "Options",
        "type": "object"
      },
      "Options_1": {
        "title": "Options_1",
        "required": [
          "access_key_id_set",
          "secret_access_key_set",
          "token_set"
        ],
        "type": "object",
        "properties": {
          "access_key_id": {
            "type": "string"
          },
          "access_key_id_set": {
            "type": "boolean"
          },
          "secret_access_key_set": {
            "type": "boolean"
          },
          "token_set": {
            "type": "boolean"
          },
          "secret_access_key": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "Options_2": {
        "title": "Options_2",
        "required": [
          "access_key_id_set",
          "secret_access_key_set",
          "spaces_access_id_set",
          "spaces_secret_key_set",
          "token_set"
        ],
        "type": "object",
        "properties": {
          "access_key_id_set": {
            "type": "boolean"
          },
          "secret_access_key_set": {
            "type": "boolean"
          },
          "spaces_access_id_set": {
            "type": "boolean"
          },
          "spaces_secret_key_set": {
            "type": "boolean"
          },
          "token_set": {
            "type": "boolean"
          }
        }
      },
      "Options_3": {
        "title": "Options_3",
        "required": [
          "access_key_id_set",
          "secret_access_key_set",
          "spaces_access_id_set",
          "spaces_secret_key_set",
          "token_set"
        ],
        "type": "object",
        "properties": {
          "access_key_id": {
            "type": "string"
          },
          "access_key_id_set": {
            "type": "boolean"
          },
          "secret_access_key_set": {
            "type": "boolean"
          },
          "spaces_access_id_set": {
            "type": "boolean"
          },
          "spaces_secret_key_set": {
            "type": "boolean"
          },
          "token_set": {
            "type": "boolean"
          },
          "secret_access_key": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "spaces_access_id": {
            "type": "string"
          },
          "spaces_secret_key": {
            "type": "string"
          }
        }
      },
      "Options_4": {
        "title": "Options_4",
        "required": [
          "access_key_id_set",
          "secret_access_key_set",
          "token_set"
        ],
        "type": "object",
        "properties": {
          "access_key_id_set": {
            "type": "boolean"
          },
          "region": {
            "type": "string"
          },
          "secret_access_key_set": {
            "type": "boolean"
          },
          "token_set": {
            "type": "boolean"
          }
        }
      },
      "Organization": {
        "title": "Organization",
        "required": [
          "is_real_organization",
          "object_type",
          "plan"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "display_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_real_organization": {
            "type": "boolean"
          },
          "logo_url": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "plan": {
            "type": "string",
            "enum": [
              "COMMUNITY",
              "BUSINESS"
            ]
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_INIT",
              "INITIALIZING",
              "READY",
              "ERROR"
            ]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "website_url": {
            "type": "string"
          }
        }
      },
      "OrganizationInitRequest": {
        "title": "OrganizationInitRequest",
        "required": [
          "kind",
          "name",
          "options",
          "region"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "AWS",
              "DO"
            ]
          },
          "region": {
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/Options_3"
          }
        }
      },
      "OrganizationInitResponse": {
        "title": "OrganizationInitResponse",
        "required": [
          "build_platform",
          "container_registry",
          "dns_provider",
          "kubernetes"
        ],
        "type": "object",
        "properties": {
          "build_platform": {
            "$ref": "#/components/schemas/Id"
          },
          "container_registry": {
            "$ref": "#/components/schemas/Id"
          },
          "dns_provider": {
            "$ref": "#/components/schemas/Id"
          },
          "kubernetes": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "OrganizationMember": {
        "title": "OrganizationMember",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "role": {
            "$ref": "#/components/schemas/OrganizationRole"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "OrganizationMemberInviteByDomainResponse": {
        "title": "OrganizationMemberInviteByDomainResponse",
        "required": [
          "created_at",
          "domain",
          "id",
          "organization",
          "organization_role",
          "owner"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "domain": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "organization_role": {
            "$ref": "#/components/schemas/OrganizationRole"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "OrganizationMemberInviteByEmailRequest": {
        "title": "OrganizationMemberInviteByEmailRequest",
        "required": [
          "email",
          "role"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/OrganizationRole_2"
          }
        }
      },
      "OrganizationMemberInviteByEmailResponse": {
        "title": "OrganizationMemberInviteByEmailResponse",
        "required": [
          "created_at",
          "email",
          "expire_at",
          "id",
          "organization",
          "organization_role",
          "owner",
          "status"
        ],
        "type": "object",
        "properties": {
          "accepted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "expire_at": {
            "type": "string",
            "format": "date-time"
          },
          "guest": {
            "$ref": "#/components/schemas/User"
          },
          "id": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "organization_role": {
            "$ref": "#/components/schemas/OrganizationRole"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "EXPIRED",
              "ACCEPTED"
            ]
          }
        }
      },
      "OrganizationMember_1": {
        "title": "OrganizationMember_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User_1"
          },
          "role": {
            "$ref": "#/components/schemas/OrganizationRole_1"
          }
        }
      },
      "OrganizationPolicy": {
        "title": "OrganizationPolicy",
        "required": [
          "is_complete",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "branches": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          },
          "deployment": {
            "$ref": "#/components/schemas/Deployment_1"
          },
          "id": {
            "type": "string"
          },
          "is_complete": {
            "type": "boolean"
          },
          "kind": {
            "type": "string"
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "manual_deployment": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "selected_build_platform": {
            "$ref": "#/components/schemas/BuildPlatform_1"
          },
          "selected_container_registry": {
            "$ref": "#/components/schemas/ContainerRegistry_1"
          },
          "selected_dns_provider": {
            "$ref": "#/components/schemas/DNSProvider_1"
          },
          "selected_kubernetes": {
            "$ref": "#/components/schemas/Kubernetes_2"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrganizationPolicy_1": {
        "title": "OrganizationPolicy_1",
        "required": [
          "is_complete",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "is_complete": {
            "type": "boolean"
          },
          "object_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "manual_deployment": {
            "type": "boolean"
          },
          "branches": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deployment": {
            "$ref": "#/components/schemas/Deployment_2"
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime_1"
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          },
          "metadata": {
            "type": "object"
          },
          "selected_kubernetes": {
            "$ref": "#/components/schemas/Kubernetes"
          },
          "selected_container_registry": {
            "$ref": "#/components/schemas/ContainerRegistry"
          },
          "selected_build_platform": {
            "$ref": "#/components/schemas/BuildPlatform"
          },
          "selected_dns_provider": {
            "$ref": "#/components/schemas/DNSProvider"
          }
        }
      },
      "OrganizationPolicy_2": {
        "title": "OrganizationPolicy_2",
        "required": [
          "is_complete",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "branches": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          },
          "deployment": {
            "$ref": "#/components/schemas/Deployment_1"
          },
          "id": {
            "type": "string"
          },
          "is_complete": {
            "type": "boolean"
          },
          "kind": {
            "type": "string"
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "manual_deployment": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "selected_build_platform": {
            "$ref": "#/components/schemas/BuildPlatform_1"
          },
          "selected_container_registry": {
            "$ref": "#/components/schemas/ContainerRegistry_1"
          },
          "selected_dns_provider": {
            "$ref": "#/components/schemas/DNSProvider_1"
          },
          "selected_kubernetes": {
            "$ref": "#/components/schemas/Kubernetes_2"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrganizationRole": {
        "title": "OrganizationRole",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "permissions": {
            "$ref": "#/components/schemas/RolePermissions"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrganizationRole_1": {
        "title": "OrganizationRole_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "$ref": "#/components/schemas/RolePermissions_1"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization_2"
          }
        }
      },
      "OrganizationRole_2": {
        "title": "OrganizationRole_2",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Organization_1": {
        "title": "Organization_1",
        "type": "object",
        "properties": {
          "delete": {
            "type": "boolean"
          },
          "edit_billing": {
            "type": "boolean"
          },
          "edit_settings": {
            "type": "boolean"
          },
          "read_billing": {
            "type": "boolean"
          },
          "read_settings": {
            "type": "boolean"
          }
        }
      },
      "Organization_2": {
        "title": "Organization_2",
        "required": [
          "is_real_organization",
          "object_type",
          "plan"
        ],
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_real_organization": {
            "type": "boolean"
          },
          "object_type": {
            "type": "string"
          },
          "plan": {
            "type": "string",
            "enum": [
              "COMMUNITY",
              "BUSINESS"
            ]
          },
          "name": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "website_url": {
            "type": "string"
          }
        }
      },
      "Organization_3": {
        "title": "Organization_3",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Organization_4": {
        "title": "Organization_4",
        "type": "object",
        "properties": {
          "read_settings": {
            "type": "boolean"
          },
          "edit_settings": {
            "type": "boolean"
          },
          "read_billing": {
            "type": "boolean"
          },
          "edit_billing": {
            "type": "boolean"
          },
          "delete": {
            "type": "boolean"
          }
        }
      },
      "Project": {
        "title": "Project",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "$ref": "#/components/schemas/User"
          },
          "environment_variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Project_1": {
        "title": "Project_1",
        "type": "object",
        "properties": {
          "create": {
            "type": "boolean"
          },
          "create_environment_variables": {
            "type": "boolean"
          },
          "delete": {
            "type": "boolean"
          },
          "delete_environment_variables": {
            "type": "boolean"
          },
          "edit_environment_variables": {
            "type": "boolean"
          },
          "edit_settings": {
            "type": "boolean"
          },
          "read_environment_variables": {
            "type": "boolean"
          },
          "read_settings": {
            "type": "boolean"
          }
        }
      },
      "Project_2": {
        "title": "Project_2",
        "type": "object",
        "properties": {
          "read_settings": {
            "type": "boolean"
          },
          "edit_settings": {
            "type": "boolean"
          },
          "read_environment_variables": {
            "type": "boolean"
          },
          "create_environment_variables": {
            "type": "boolean"
          },
          "edit_environment_variables": {
            "type": "boolean"
          },
          "delete_environment_variables": {
            "type": "boolean"
          },
          "create": {
            "type": "boolean"
          },
          "delete": {
            "type": "boolean"
          }
        }
      },
      "Project_3": {
        "title": "Project_3",
        "required": [
          "name",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization_2"
          }
        }
      },
      "RemoveOrganizationInfrastructureRequest": {
        "title": "RemoveOrganizationInfrastructureRequest",
        "required": [
          "organization"
        ],
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization_3"
          }
        }
      },
      "Repository": {
        "title": "Repository",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "branch_id": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "default_branch": {
            "type": "string"
          },
          "external_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "raw_root_url": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB"
            ]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Repository_1": {
        "title": "Repository_1",
        "required": [
          "branch_id",
          "commit_id",
          "default_branch",
          "external_id",
          "name",
          "object_type",
          "url"
        ],
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "raw_root_url": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB"
            ]
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "default_branch": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          },
          "external_id": {
            "type": "string"
          }
        }
      },
      "Response«Application»": {
        "title": "Response«Application»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_4"
            }
          }
        }
      },
      "Response«AuthProvider»": {
        "title": "Response«AuthProvider»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthProvider"
            }
          }
        }
      },
      "Response«AvailableTechnology»": {
        "title": "Response«AvailableTechnology»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableTechnology"
            }
          }
        }
      },
      "Response«AvailableTemplate»": {
        "title": "Response«AvailableTemplate»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableTemplate"
            }
          }
        }
      },
      "Response«BillingCardResponse»": {
        "title": "Response«BillingCardResponse»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingCardResponse"
            }
          }
        }
      },
      "Response«BillingInvoice»": {
        "title": "Response«BillingInvoice»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingInvoice"
            }
          }
        }
      },
      "Response«BuildPlatform»": {
        "title": "Response«BuildPlatform»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildPlatform_1"
            }
          }
        }
      },
      "Response«CloudAccount»": {
        "title": "Response«CloudAccount»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAccount"
            }
          }
        }
      },
      "Response«CloudProviderRegion»": {
        "title": "Response«CloudProviderRegion»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudProviderRegion"
            }
          }
        }
      },
      "Response«CloudProvider»": {
        "title": "Response«CloudProvider»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudProvider"
            }
          }
        }
      },
      "Response«ContainerRegistry»": {
        "title": "Response«ContainerRegistry»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContainerRegistry_1"
            }
          }
        }
      },
      "Response«DNSProvider»": {
        "title": "Response«DNSProvider»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DNSProvider_1"
            }
          }
        }
      },
      "Response«DeploymentStatus»": {
        "title": "Response«DeploymentStatus»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentStatus_1"
            }
          }
        }
      },
      "Response«Deployment»": {
        "title": "Response«Deployment»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Deployment_4"
            }
          }
        }
      },
      "Response«EnvironmentVariable»": {
        "title": "Response«EnvironmentVariable»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            }
          }
        }
      },
      "Response«Environment»": {
        "title": "Response«Environment»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Environment_3"
            }
          }
        }
      },
      "Response«GitRepositories»": {
        "title": "Response«GitRepositories»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GitRepositories"
            }
          }
        }
      },
      "Response«Kubernetes»": {
        "title": "Response«Kubernetes»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Kubernetes_1"
            }
          }
        }
      },
      "Response«OrganizationMemberInviteByDomainResponse»": {
        "title": "Response«OrganizationMemberInviteByDomainResponse»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationMemberInviteByDomainResponse"
            }
          }
        }
      },
      "Response«OrganizationMemberInviteByEmailResponse»": {
        "title": "Response«OrganizationMemberInviteByEmailResponse»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationMemberInviteByEmailResponse"
            }
          }
        }
      },
      "Response«OrganizationMember»": {
        "title": "Response«OrganizationMember»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationMember"
            }
          }
        }
      },
      "Response«OrganizationPolicy»": {
        "title": "Response«OrganizationPolicy»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationPolicy"
            }
          }
        }
      },
      "Response«OrganizationRole»": {
        "title": "Response«OrganizationRole»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationRole"
            }
          }
        }
      },
      "Response«Organization»": {
        "title": "Response«Organization»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organization"
            }
          }
        }
      },
      "Response«Project»": {
        "title": "Response«Project»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        }
      },
      "Response«Router»": {
        "title": "Response«Router»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Router_2"
            }
          }
        }
      },
      "Response«Service»": {
        "title": "Response«Service»",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service_2"
            }
          }
        }
      },
      "RolePermissions": {
        "title": "RolePermissions",
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization_1"
          },
          "project": {
            "$ref": "#/components/schemas/Project_1"
          }
        }
      },
      "RolePermissions_1": {
        "title": "RolePermissions_1",
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization_4"
          },
          "project": {
            "$ref": "#/components/schemas/Project_2"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_1"
          },
          "application": {
            "$ref": "#/components/schemas/Application_2"
          }
        }
      },
      "Route": {
        "title": "Route",
        "type": "object",
        "properties": {
          "application_name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "Route_1": {
        "title": "Route_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application_4"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "declaring_application_id": {
            "$ref": "#/components/schemas/Application_4"
          },
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "router": {
            "$ref": "#/components/schemas/Router_2"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Route_2": {
        "title": "Route_2",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Application_4"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "declaring_application_id": {
            "$ref": "#/components/schemas/Application_4"
          },
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "router": {
            "$ref": "#/components/schemas/Router_2"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Router": {
        "title": "Router",
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "custom_domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomDomain"
            }
          },
          "default_domain": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "public_port": {
            "type": "integer",
            "format": "int32"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route"
            }
          }
        }
      },
      "Router_1": {
        "title": "Router_1",
        "required": [
          "action",
          "custom_domain_host_env",
          "custom_domain_url_env",
          "object_type",
          "public_port"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "connection_uri": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "custom_domain": {
            "$ref": "#/components/schemas/CustomDomain_1"
          },
          "custom_domain_host_env": {
            "$ref": "#/components/schemas/EnvironmentVariable"
          },
          "custom_domain_url_env": {
            "$ref": "#/components/schemas/EnvironmentVariable"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deletion_started_at": {
            "type": "string",
            "format": "date-time"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "fqdn": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "public_port": {
            "type": "integer",
            "format": "int32"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route_2"
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Router_2": {
        "title": "Router_2",
        "required": [
          "action",
          "custom_domain_host_env",
          "custom_domain_url_env",
          "object_type",
          "public_port"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "connection_uri": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "custom_domain": {
            "$ref": "#/components/schemas/CustomDomain_1"
          },
          "custom_domain_host_env": {
            "$ref": "#/components/schemas/EnvironmentVariable"
          },
          "custom_domain_url_env": {
            "$ref": "#/components/schemas/EnvironmentVariable"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deletion_started_at": {
            "type": "string",
            "format": "date-time"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "fqdn": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "public_port": {
            "type": "integer",
            "format": "int32"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route_2"
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Service": {
        "title": "Service",
        "required": [
          "total_cpus",
          "total_ram_in_mib"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "database_disk_type": {
            "type": "string"
          },
          "database_instance_type": {
            "type": "string"
          },
          "disk_size_in_gib": {
            "type": "integer",
            "format": "int32"
          },
          "fqdn": {
            "type": "string"
          },
          "fqdn_id": {
            "type": "string"
          },
          "host_provider": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "total_cpus": {
            "type": "string"
          },
          "total_ram_in_mib": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Service_1": {
        "title": "Service_1",
        "required": [
          "action",
          "active",
          "category",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_4"
            }
          },
          "category": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "DATABASE",
              "BROKER"
            ]
          },
          "connection_uri": {
            "type": "string"
          },
          "connection_uri_without_credentials": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "database": {
            "type": "string"
          },
          "database_disk_type": {
            "type": "string"
          },
          "database_instance_type": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deletion_started_at": {
            "type": "string",
            "format": "date-time"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "fqdn": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/DeploymentStatus_1"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Service_2": {
        "title": "Service_2",
        "required": [
          "action",
          "active",
          "category",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_4"
            }
          },
          "category": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "DATABASE",
              "BROKER"
            ]
          },
          "connection_uri": {
            "type": "string"
          },
          "connection_uri_without_credentials": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "database": {
            "type": "string"
          },
          "database_disk_type": {
            "type": "string"
          },
          "database_instance_type": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deletion_started_at": {
            "type": "string",
            "format": "date-time"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_3"
          },
          "fqdn": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/DeploymentStatus_1"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Service_3": {
        "title": "Service_3",
        "required": [
          "action",
          "active",
          "category",
          "object_type"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "CREATE",
              "PAUSE",
              "DELETE",
              "NOTHING"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "category": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "DATABASE",
              "BROKER"
            ]
          },
          "connection_uri": {
            "type": "string"
          },
          "connection_uri_without_credentials": {
            "type": "string"
          },
          "database": {
            "type": "string"
          },
          "database_disk_type": {
            "type": "string"
          },
          "database_instance_type": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment_4"
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application_5"
            }
          }
        }
      },
      "SimpleApplicationCheckRequest": {
        "title": "SimpleApplicationCheckRequest",
        "required": [
          "auth_provider",
          "repository_id"
        ],
        "type": "object",
        "properties": {
          "repository_id": {
            "type": "string"
          },
          "auth_provider": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET"
            ]
          },
          "branch": {
            "type": "string"
          }
        }
      },
      "SimpleApplicationDeploymentRequest": {
        "title": "SimpleApplicationDeploymentRequest",
        "required": [
          "application_configuration",
          "auth_provider",
          "repository_id"
        ],
        "type": "object",
        "properties": {
          "repository_id": {
            "type": "string"
          },
          "auth_provider": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET"
            ]
          },
          "application_configuration": {
            "type": "object"
          },
          "branch": {
            "type": "string"
          },
          "dockerfile_content": {
            "type": "string"
          }
        }
      },
      "SimpleTemplateDeploymentRequest": {
        "title": "SimpleTemplateDeploymentRequest",
        "required": [
          "auth_provider"
        ],
        "type": "object",
        "properties": {
          "auth_provider": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET"
            ]
          }
        }
      },
      "StatusForHuman": {
        "title": "StatusForHuman",
        "required": [
          "long",
          "short"
        ],
        "type": "object",
        "properties": {
          "long": {
            "type": "string"
          },
          "short": {
            "type": "string"
          }
        }
      },
      "Storage": {
        "title": "Storage",
        "type": "object",
        "properties": {
          "from_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "mount_point": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "size_in_gib": {
            "type": "integer",
            "format": "int32"
          },
          "snapshot_retention_in_days": {
            "type": "integer",
            "format": "int32"
          },
          "storage_type": {
            "type": "string"
          }
        }
      },
      "StorageDTO«string,Base»": {
        "title": "StorageDTO«string,Base»",
        "required": [
          "application",
          "backup_retention_in_days",
          "created_at",
          "id",
          "mount_point",
          "name",
          "object_type",
          "size_in_gi_b",
          "storage_type",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/Base"
          },
          "backup_retention_in_days": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "from_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "mount_point": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "size_in_gi_b": {
            "type": "integer",
            "format": "int32"
          },
          "storage_type": {
            "type": "string",
            "enum": [
              "SLOW_HDD",
              "HDD",
              "SSD",
              "FAST_SSD"
            ]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StorageDTO«string,Base»_1": {
        "title": "StorageDTO«string,Base»_1",
        "required": [
          "application",
          "id",
          "mount_point",
          "name",
          "object_type",
          "storage_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "from_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "storage_type": {
            "type": "string",
            "enum": [
              "SLOW_HDD",
              "HDD",
              "SSD",
              "FAST_SSD"
            ]
          },
          "size_in_gi_b": {
            "type": "integer",
            "format": "int32"
          },
          "mount_point": {
            "type": "string"
          },
          "backup_retention_in_days": {
            "type": "integer",
            "format": "int32"
          },
          "application": {
            "$ref": "#/components/schemas/Base_1"
          }
        }
      },
      "TemplateDeploymentResponse": {
        "title": "TemplateDeploymentResponse",
        "required": [
          "auth_provider",
          "created_repositories",
          "template_id"
        ],
        "type": "object",
        "properties": {
          "auth_provider": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET"
            ]
          },
          "created_repositories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "template_id": {
            "type": "string"
          }
        }
      },
      "TerraformStateCredentials": {
        "title": "TerraformStateCredentials",
        "required": [
          "access_key_id_set",
          "cloud_provider_region_set",
          "secret_access_key_set"
        ],
        "type": "object",
        "properties": {
          "access_key_id_set": {
            "type": "boolean"
          },
          "cloud_provider_region_set": {
            "type": "boolean"
          },
          "secret_access_key_set": {
            "type": "boolean"
          }
        }
      },
      "TerraformStateCredentials_1": {
        "title": "TerraformStateCredentials_1",
        "required": [
          "access_key_id_set",
          "cloud_provider_region_set",
          "secret_access_key_set"
        ],
        "type": "object",
        "properties": {
          "access_key_id": {
            "type": "string"
          },
          "access_key_id_set": {
            "type": "boolean"
          },
          "cloud_provider_region_set": {
            "type": "boolean"
          },
          "secret_access_key_set": {
            "type": "boolean"
          },
          "secret_access_key": {
            "type": "string"
          },
          "cloud_provider_region": {
            "$ref": "#/components/schemas/CloudProviderRegion_1"
          }
        }
      },
      "Unit": {
        "title": "Unit",
        "type": "object"
      },
      "User": {
        "title": "User",
        "required": [
          "email_on_deployment_error",
          "email_on_deployment_success",
          "object_type",
          "profile_complete",
          "temporary_account"
        ],
        "type": "object",
        "properties": {
          "contact_email": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "email_on_deployment_error": {
            "type": "boolean"
          },
          "email_on_deployment_success": {
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "github_id": {
            "type": "string"
          },
          "gitlab_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "profile_complete": {
            "type": "boolean"
          },
          "profile_picture_url": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "sub_id": {
            "type": "string"
          },
          "temporary_account": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserHook": {
        "title": "UserHook",
        "type": "object",
        "properties": {
          "sub_id": {
            "type": "string"
          },
          "provider_id": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET"
            ]
          }
        }
      },
      "UserInfo": {
        "title": "UserInfo",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean"
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "picture": {
            "type": "string"
          },
          "sub": {
            "type": "string"
          }
        }
      },
      "UserInfo_1": {
        "title": "UserInfo_1",
        "type": "object",
        "properties": {
          "sub": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean"
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email_1"
            }
          },
          "picture": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "User_1": {
        "title": "User_1",
        "required": [
          "object_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/UserInfo_1"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "profile_picture_url": {
            "type": "string"
          },
          "contact_email": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "job_position": {
            "type": "string"
          },
          "email_on_deployment_success": {
            "type": "boolean"
          },
          "email_on_deployment_error": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "Access Token": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}