{
  "openapi": "3.0.0",
  "info": {
    "title": "Hubspot Conversations",
    "description": "Query and interact with existing Conversation threads, messages, and channels",
    "contact": {},
    "version": "3.0"
  },
  "servers": [
    {
      "url": "https://api.hubapi.com/conversations/v3",
      "variables": {}
    }
  ],
  "paths": {
    "/conversations/actors/batch/read": {
      "post": {
        "tags": [
          "actors"
        ],
        "summary": "Get actors",
        "description": "Resolve `ActorId`s to the underlying actors/participants.",
        "operationId": "Getactors",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetactorsRequest"
              },
              "example": {
                "inputs": [
                  "velit",
                  "ea dolore fugiat dolore"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation"
                },
                "example": {
                  "status": "COMPLETE",
                  "results": [
                    {
                      "id": "A-123",
                      "name": "Adam Agent",
                      "avatar": "https://api.hubspot.com/userpreferences/v1/avatar/6d16eea297d81639f120159f95a49fff/100",
                      "type": "AGENT"
                    },
                    {
                      "id": "V-456",
                      "name": "Carol Contact",
                      "email": "email@example.com",
                      "avatar": "https://cdn2.hubspot.net/hubfs/2459647/defaults/contact.png",
                      "type": "VISITOR"
                    }
                  ],
                  "startedAt": "2020-08-28T17:04:48Z",
                  "completedAt": "2020-08-28T17:04:48Z"
                }
              }
            }
          },
          "207": {
            "description": "Multi-Status (WebDAV) (RFC 4918)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/multiplestatuses"
                },
                "example": {
                  "completedAt": "1967-09-19T19:41:09.124Z",
                  "results": [
                    {
                      "id": "A-123",
                      "type": "AGENT",
                      "name": "sed Duis magna",
                      "email": "ullamco voluptate",
                      "avatar": "consectetur"
                    },
                    {
                      "id": "A-123",
                      "type": "AGENT",
                      "name": "est in",
                      "email": "in",
                      "avatar": "in ex"
                    }
                  ],
                  "startedAt": "2005-10-05T12:17:03.132Z",
                  "status": "CANCELED",
                  "numErrors": 22972885,
                  "errors": [
                    {
                      "category": {
                        "httpStatus": "REQUEST_URI_TOO_LONG",
                        "name": "dolore sed dolor ad"
                      },
                      "context": {
                        "culpa59": [
                          "enim elit irure non ad",
                          "consequat Duis in ullamco"
                        ],
                        "reprehenderit_0d": [
                          "tempor elit ani",
                          "quis officia"
                        ],
                        "aute9": [
                          "ipsum ullamco nisi exercitation",
                          "Ut sunt"
                        ],
                        "eu_a3": [
                          "voluptate dolor sint non cupidatat",
                          "est dolore proident in"
                        ]
                      },
                      "errors": [
                        {
                          "message": "dolor ad cillum",
                          "in": "sit id occaecat qui",
                          "code": "sunt aute",
                          "subCategory": "sit",
                          "context": {
                            "missingScopes": [
                              "scope1",
                              "scope2"
                            ]
                          }
                        },
                        {
                          "message": "sit commodo est",
                          "in": "minim ut in elit nisi",
                          "code": "ipsum nostrud aliquip",
                          "subCategory": "occaecat in",
                          "context": {
                            "missingScopes": [
                              "scope1",
                              "scope2"
                            ]
                          }
                        }
                      ],
                      "links": {
                        "cillum_5": "deserunt non"
                      },
                      "message": "nulla exercitation",
                      "status": "quis Excepteur ullamco in",
                      "id": "Ut enim",
                      "subCategory": {}
                    },
                    {
                      "category": {
                        "httpStatus": "NOT_ACCEPTABLE",
                        "name": "exercitation qui laborum molli"
                      },
                      "context": {
                        "eu_4c": [
                          "laborum dolor elit sed culpa",
                          "ea sed voluptate"
                        ]
                      },
                      "errors": [
                        {
                          "message": "labore tempor ut pariatur",
                          "in": "qui pariatur",
                          "code": "qui ullamco deserunt consectetur",
                          "subCategory": "eiusmod sed",
                          "context": {
                            "missingScopes": [
                              "scope1",
                              "scope2"
                            ]
                          }
                        },
                        {
                          "message": "velit est",
                          "in": "non",
                          "code": "sunt",
                          "subCategory": "ut commodo amet consequa",
                          "context": {
                            "missingScopes": [
                              "scope1",
                              "scope2"
                            ]
                          }
                        }
                      ],
                      "links": {
                        "mollit_018": "amet aliqua exercitation",
                        "qui19": "sint labore officia in"
                      },
                      "message": "consequat mollit labore",
                      "status": "ad enim sunt",
                      "id": "sunt sit id",
                      "subCategory": {}
                    }
                  ],
                  "requestedAt": "2011-09-22T09:32:18.324Z",
                  "links": {
                    "sunt_5d": "Lorem exercitation"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/conversations/actors/{actorId}": {
      "get": {
        "tags": [
          "actors"
        ],
        "summary": "Get a single actor.",
        "operationId": "Getasingleactor.",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "description": "(Required) The unique ID of the actor.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation1"
                },
                "example": {
                  "id": "A-123",
                  "name": "Adam Agent",
                  "avatar": "https://api.hubspot.com/userpreferences/v1/avatar/6d16eea297d81639f120159f95a49fff/100",
                  "type": "AGENT"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "actorId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/conversations/channel-accounts": {
      "get": {
        "tags": [
          "channel-accounts"
        ],
        "summary": "Get channel accounts.",
        "operationId": "Getchannelaccounts.",
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "Limits results to channel accounts within a particular channel.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 24201840
            }
          },
          {
            "name": "inboxId",
            "in": "query",
            "description": "Limits results to channel accounts within a particular inbox.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 24201840
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to display per page.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "enim sit ull"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation2"
                },
                "example": {
                  "total": 2,
                  "results": [
                    {
                      "id": "63264",
                      "channelId": "1000",
                      "name": "New chatflow",
                      "inboxId": "5385",
                      "active": true
                    },
                    {
                      "id": "448722",
                      "channelId": "1002",
                      "name": "support-inbox@example.com",
                      "inboxId": "5385",
                      "active": false
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/conversations/channel-accounts/{channelAccountId}": {
      "get": {
        "tags": [
          "channel-accounts"
        ],
        "summary": "Get a single channel account.",
        "operationId": "Getasinglechannelaccount.",
        "parameters": [
          {
            "name": "channelAccountId",
            "in": "path",
            "description": "(Required) The unique ID of the channel account.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation3"
                },
                "example": {
                  "id": "448722",
                  "channelId": "1002",
                  "name": "support-inbox@example.com",
                  "inboxId": "5385",
                  "active": false
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "channelAccountId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/conversations/channels": {
      "get": {
        "tags": [
          "channels"
        ],
        "summary": "Get channels.",
        "operationId": "Getchannels.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to display per page.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "enim sit ull"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation4"
                },
                "example": {
                  "total": 3,
                  "results": [
                    {
                      "id": "1000",
                      "name": "LIVE_CHAT"
                    },
                    {
                      "id": "1001",
                      "name": "FB_MESSENGER"
                    },
                    {
                      "id": "1002",
                      "name": "EMAIL"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/conversations/channels/{channelId}": {
      "get": {
        "tags": [
          "channels"
        ],
        "summary": "Get a single channel.",
        "operationId": "Getasinglechannel.",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "(Required) The unique ID of the channel.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation5"
                },
                "example": {
                  "id": "1002",
                  "name": "EMAIL"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "channelId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/inboxes": {
      "get": {
        "tags": [
          "inboxes"
        ],
        "summary": "Get conversations inboxes.",
        "operationId": "Getconversationsinboxes.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to display per page.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "enim sit ull"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation6"
                },
                "example": {
                  "total": 2,
                  "results": [
                    {
                      "id": "5385",
                      "name": "Inbox",
                      "createdAt": "2019-03-07T16:32:23.443Z"
                    },
                    {
                      "id": "5548",
                      "name": "Sales Inbox",
                      "createdAt": "2019-03-13T18:41:01.209Z"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/conversations/inboxes/{inboxId}": {
      "get": {
        "tags": [
          "inboxes"
        ],
        "summary": "Get a single conversations inbox.",
        "operationId": "Getasingleconversationsinbox.",
        "parameters": [
          {
            "name": "inboxId",
            "in": "path",
            "description": "(Required) The unique ID of the inbox.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation7"
                },
                "example": {
                  "id": "5385",
                  "name": "Inbox",
                  "createdAt": "2019-03-07T16:32:23.443Z"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "inboxId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/conversations/threads/{threadId}/messages/{messageId}": {
      "get": {
        "tags": [
          "{message Id}"
        ],
        "summary": "Get a single message.",
        "operationId": "Getasinglemessage.",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "(Required) The unique ID of the thread.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "(Required) The unique ID of the message.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation8"
                },
                "example": {
                  "id": "341c52ddfecc41b6a026dc689c3ff673",
                  "createdAt": "2020-06-26T18:20:00.722Z",
                  "createdBy": "A-123",
                  "client": {
                    "clientType": "HUBSPOT"
                  },
                  "channelId": "1000",
                  "channelAccountId": "20091",
                  "archived": false,
                  "text": "How can I help?",
                  "richText": "<div style=\"text-align: left\">How can I help?</div>",
                  "truncationStatus": "NOT_TRUNCATED",
                  "type": "MESSAGE"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "threadId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "messageId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/conversations/threads/{threadId}/messages/{messageId}/original-content": {
      "get": {
        "tags": [
          "{message Id}"
        ],
        "summary": "Get the original content of a single message.",
        "description": "Returns the complete original text and rich text bodies of a message. This will be different from the text and rich text in the message itself if the message's `truncationStatus` is anything other than `NOT_TRUNCATED`.",
        "operationId": "Gettheoriginalcontentofasinglemessage.",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "(Required) The unique ID of the thread.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "(Required) The unique ID of the message.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation9"
                },
                "example": {
                  "text": "How can I help?",
                  "richText": "<div style=\"text-align: left\">How can I help?</div>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "threadId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "messageId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/conversations/threads/{threadId}/messages": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Get message history for a thread.",
        "operationId": "Getmessagehistoryforathread.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to display per page.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort direction. Valid options are `createdAt` (ascending, default), and `-createdAt` (descending)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "enim sit ull"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Whether to return only results that have been archived.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "threadId",
            "in": "path",
            "description": "(Required) The unique ID of the thread.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation10"
                },
                "example": {
                  "results": [
                    {
                      "id": "07ce9e83-7315-4a06-9971-78b7038e640e",
                      "createdAt": "2020-06-26T18:20:00.710Z",
                      "createdBy": "A-123",
                      "client": {
                        "clientType": "SYSTEM"
                      },
                      "archived": false,
                      "assignedTo": "A-123",
                      "assignedFrom": "B-987",
                      "type": "ASSIGNMENT"
                    },
                    {
                      "id": "341c52ddfecc41b6a026dc689c3ff673",
                      "createdAt": "2020-06-26T18:20:00.722Z",
                      "createdBy": "A-123",
                      "client": {
                        "clientType": "HUBSPOT"
                      },
                      "channelId": "1000",
                      "channelAccountId": "20091",
                      "archived": false,
                      "text": "How can I help?",
                      "richText": "<div style=\"text-align: left\">How can I help?</div>",
                      "truncationStatus": "NOT_TRUNCATED",
                      "type": "MESSAGE"
                    },
                    {
                      "id": "e11540ef-d041-4585-a53d-fd5cad3af294",
                      "createdAt": "2020-06-26T18:20:00.799Z",
                      "createdBy": "I-999",
                      "client": {
                        "clientType": "INTEGRATION",
                        "integrationAppId": "999"
                      },
                      "archived": false,
                      "text": "Customer since 2012",
                      "richText": "<div style=\"text-align: left\">Customer since 2012</div>",
                      "type": "COMMENT"
                    }
                  ],
                  "paging": {
                    "next": {
                      "after": "MTU5MzE5NTU3NjkyMy0w",
                      "link": "https://api.hubspot.com/conversations/v3/conversations/threads/123/messages?portalId=123&after=MTU5MzE5NTU3NjkyMy0w"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Send a message to a thread.",
        "description": "Send a new message on a thread at the current timestamp.",
        "operationId": "Sendamessagetoathread.",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "(Required) The unique ID of the thread.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sendamessagetoathread.Request"
              },
              "example": {
                "attachments": [
                  {
                    "fileId": -8529555
                  },
                  {
                    "fileId": -59877292
                  }
                ],
                "channelAccountId": 8981408,
                "channelId": -20146096,
                "recipients": [
                  {
                    "actorId": "A-123",
                    "deliveryIdentifiers": [
                      {
                        "type": {
                          "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "value": {
                          "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                      },
                      {
                        "type": {
                          "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "value": {
                          "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                      }
                    ],
                    "name": "incididunt nisi",
                    "recipientField": "aliquip Ut"
                  },
                  {
                    "actorId": "A-123",
                    "deliveryIdentifiers": [
                      {
                        "type": {
                          "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "value": {
                          "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                      },
                      {
                        "type": {
                          "value": "<Error: Too many levels of nesting to fake this schema>"
                        },
                        "value": {
                          "value": "<Error: Too many levels of nesting to fake this schema>"
                        }
                      }
                    ],
                    "name": "dolor magna ut exercitation aliquip",
                    "recipientField": "ullamco aliqua"
                  }
                ],
                "senderActorId": "A-123",
                "text": "culpa ea dolor sit est",
                "type": "MESSAGE",
                "richText": "labore irure",
                "subject": "consequat anim veniam sed"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation11"
                },
                "example": {
                  "archived": true,
                  "attachments": [
                    {
                      "fileId": 39692787,
                      "url": "consequat enim"
                    },
                    {
                      "fileId": 46316938,
                      "url": "velit aute nulla et"
                    }
                  ],
                  "client": {
                    "clientType": "HUBSPOT",
                    "integrationAppId": 22837071
                  },
                  "createdAt": "2007-05-18T05:25:27.041Z",
                  "createdBy": "A-123",
                  "id": "amet proident ulla",
                  "recipients": [
                    {
                      "actorId": "A-123",
                      "deliveryIdentifiers": [
                        {
                          "type": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                          },
                          "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                          }
                        },
                        {
                          "type": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                          },
                          "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                          }
                        }
                      ],
                      "name": "deserunt",
                      "recipientField": "proident non aute"
                    },
                    {
                      "actorId": "A-123",
                      "deliveryIdentifiers": [
                        {
                          "type": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                          },
                          "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                          }
                        },
                        {
                          "type": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                          },
                          "value": {
                            "value": "<Error: Too many levels of nesting to fake this schema>"
                          }
                        }
                      ],
                      "name": "ex id ",
                      "recipientField": "magna quis ea"
                    }
                  ],
                  "senders": [
                    {
                      "actorId": "A-123",
                      "name": "occaecat nostrud ipsum dolore",
                      "senderField": "dolor",
                      "deliveryIdentifier": {
                        "type": "eiusmod consequat",
                        "value": "incididunt proident enim"
                      }
                    },
                    {
                      "actorId": "A-123",
                      "name": "occaecat",
                      "senderField": "enim proident",
                      "deliveryIdentifier": {
                        "type": "aliqua ad veniam adipisici",
                        "value": "laborum in reprehenderit eu velit"
                      }
                    }
                  ],
                  "text": "anim aliquip tem",
                  "truncationStatus": "TRUNCATED_TO_MOST_RECENT_REPLY",
                  "type": "MESSAGE",
                  "channelId": 46195222,
                  "channelAccountId": -87035391,
                  "richText": "cillum",
                  "subject": "sed in"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "threadId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/conversations/threads/{threadId}": {
      "get": {
        "tags": [
          "{thread Id}"
        ],
        "summary": "Get a single thread.",
        "description": "Returns a single thread.",
        "operationId": "Getasinglethread.",
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "description": "Whether to return only results that have been archived. Default is false.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "threadId",
            "in": "path",
            "description": "(Required) The unique ID of the thread.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation12"
                },
                "example": {
                  "associatedContactId": -8664576,
                  "createdAt": "1999-03-14T15:01:58.232Z",
                  "id": -52065780,
                  "inboxId": -49334699,
                  "spam": false,
                  "status": "OPEN",
                  "closedAt": "1999-04-24T20:45:23.037Z",
                  "latestMessageTimestamp": "1988-04-06T10:47:13.242Z",
                  "latestMessageSentTimestamp": "1972-06-15T03:22:39.613Z",
                  "latestMessageReceivedTimestamp": "2002-10-21T03:23:17.834Z",
                  "assignedTo": "A-123",
                  "archived": true
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "{thread Id}"
        ],
        "summary": "Archives a thread.",
        "description": "Archives a single thread. The thread will be permanently deleted 30 days after placed in an archived state.",
        "operationId": "Archivesathread.",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "(Required) The unique ID of the thread.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "*/*"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {},
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "{thread Id}"
        ],
        "summary": "Update a thread.",
        "description": "Updates a single thread. Either a thread's status can be updated, or the thread can be restored.",
        "operationId": "Updateathread.",
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "description": "Whether the thread to update is archived. Default is false. A thread's status property can not be updated if the thread is archived.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "threadId",
            "in": "path",
            "description": "(Required) The unique ID of the thread.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Updateathread.Request"
              },
              "example": {
                "status": "CLOSED",
                "archived": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation13"
                },
                "example": {
                  "id": "2627121",
                  "createdAt": "2018-08-21T12:06:22.029Z",
                  "status": "CLOSED",
                  "latestMessageTimestamp": "2018-08-21T12:06:22.889Z",
                  "latestMessageSentTimestamp": "2018-08-21T12:06:22.889Z",
                  "latestMessageReceivedTimestamp": "2018-08-21T12:06:22.889Z",
                  "assignedTo": "A-123",
                  "spam": false,
                  "inboxId": "123",
                  "associatedContactId": "7206",
                  "archived": false
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "threadId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/conversations/threads": {
      "get": {
        "tags": [
          "threads"
        ],
        "summary": "Get threads.",
        "operationId": "Getthreads.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "et nostrud"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to display per page.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 36103251
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Set the sort order of the response. Valid options are `id` (default) and `latestMessageTimestamp` (which requires the `latestMessageTimestampAfter` field to also be set). Results are always returned in ascending order.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "enim sit ull"
            }
          },
          {
            "name": "inboxId",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 24201840
            }
          },
          {
            "name": "latestMessageTimestampAfter",
            "in": "query",
            "description": "The minimum `latestMessageTimestamp`. This is required only when sorting by `latestMessageTimestamp`.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2018-11-26T17:42:01.778Z"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Whether to return only results that have been archived.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successfuloperation14"
                },
                "example": {
                  "results": [
                    {
                      "id": "2627121",
                      "createdAt": "2018-08-21T12:06:22.029Z",
                      "status": "OPEN",
                      "latestMessageTimestamp": "2018-08-21T12:06:22.889Z",
                      "latestMessageSentTimestamp": "2018-08-21T12:06:22.889Z",
                      "latestMessageReceivedTimestamp": "2018-08-21T12:06:22.889Z",
                      "assignedTo": "A-123",
                      "spam": false,
                      "inboxId": "123",
                      "associatedContactId": "7206",
                      "archived": false
                    },
                    {
                      "id": "5037435",
                      "createdAt": "2018-09-21T15:20:02.985Z",
                      "closedAt": "2018-09-21T20:20:02.985Z",
                      "status": "CLOSED",
                      "latestMessageTimestamp": "2018-09-21T15:20:04.544Z",
                      "latestMessageSentTimestamp": "2018-09-21T15:20:04.544Z",
                      "latestMessageReceivedTimestamp": "2018-09-21T15:20:04.544Z",
                      "spam": false,
                      "inboxId": "123",
                      "associatedContactId": "7506",
                      "archived": false
                    }
                  ],
                  "paging": {
                    "next": {
                      "after": "NTAzNzQzNQ%3D%3D",
                      "link": "https://api.hubspot.com/conversations/v3/conversations/threads?portalId=123&after=NTAzNzQzNQ%3D%3D"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/visitor-identification/tokens/create": {
      "post": {
        "summary": "Visitor Identification - Generate a token",
        "operationId": "post-visitor-identification-tokens",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "token"
                  ],
                  "x-examples": {
                    "example-1": {
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Generates a new visitor identification token. This token will be unique every time this endpoint is called, even if called with the same email address. This token is temporary and will expire after 12 hours.\nSee this page for more information : https://developers.hubspot.com/docs/api/conversation/visitor-identification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email of the visitor that you wish to identify"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "The first name of the visitor that you wish to identify. This value will only be set in HubSpot for new contacts and existing contacts where first name is unknown. "
                  },
                  "lastName": {
                    "type": "string",
                    "description": "The last name of the visitor that you wish to identify. This value will only be set in HubSpot for new contacts and existing contacts where last name is unknown. "
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        }
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "GetactorsRequest": {
        "title": "GetactorsRequest",
        "required": [
          "inputs"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "inputs": [
            "velit",
            "ea dolore fugiat dolore"
          ]
        }
      },
      "successfuloperation": {
        "title": "successfuloperation",
        "required": [
          "status",
          "results",
          "startedAt",
          "completedAt"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result"
            },
            "description": ""
          },
          "startedAt": {
            "type": "string"
          },
          "completedAt": {
            "type": "string"
          }
        },
        "example": {
          "status": "COMPLETE",
          "results": [
            {
              "id": "A-123",
              "name": "Adam Agent",
              "avatar": "https://api.hubspot.com/userpreferences/v1/avatar/6d16eea297d81639f120159f95a49fff/100",
              "type": "AGENT"
            },
            {
              "id": "V-456",
              "name": "Carol Contact",
              "email": "email@example.com",
              "avatar": "https://cdn2.hubspot.net/hubfs/2459647/defaults/contact.png",
              "type": "VISITOR"
            }
          ],
          "startedAt": "2020-08-28T17:04:48Z",
          "completedAt": "2020-08-28T17:04:48Z"
        }
      },
      "Result": {
        "title": "Result",
        "required": [
          "id",
          "name",
          "avatar",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "id": "A-123",
          "name": "Adam Agent",
          "avatar": "https://api.hubspot.com/userpreferences/v1/avatar/6d16eea297d81639f120159f95a49fff/100",
          "type": "AGENT"
        }
      },
      "multiplestatuses": {
        "title": "multiplestatuses",
        "required": [
          "completedAt",
          "results",
          "startedAt",
          "status",
          "numErrors",
          "errors",
          "requestedAt",
          "links"
        ],
        "type": "object",
        "properties": {
          "completedAt": {
            "type": "string"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result1"
            },
            "description": ""
          },
          "startedAt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "numErrors": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": ""
          },
          "requestedAt": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links1"
          }
        },
        "example": {
          "completedAt": "1967-09-19T19:41:09.124Z",
          "results": [
            {
              "id": "A-123",
              "type": "AGENT",
              "name": "sed Duis magna",
              "email": "ullamco voluptate",
              "avatar": "consectetur"
            },
            {
              "id": "A-123",
              "type": "AGENT",
              "name": "est in",
              "email": "in",
              "avatar": "in ex"
            }
          ],
          "startedAt": "2005-10-05T12:17:03.132Z",
          "status": "CANCELED",
          "numErrors": 22972885,
          "errors": [
            {
              "category": {
                "httpStatus": "REQUEST_URI_TOO_LONG",
                "name": "dolore sed dolor ad"
              },
              "context": {
                "culpa59": [
                  "enim elit irure non ad",
                  "consequat Duis in ullamco"
                ],
                "reprehenderit_0d": [
                  "tempor elit ani",
                  "quis officia"
                ],
                "aute9": [
                  "ipsum ullamco nisi exercitation",
                  "Ut sunt"
                ],
                "eu_a3": [
                  "voluptate dolor sint non cupidatat",
                  "est dolore proident in"
                ]
              },
              "errors": [
                {
                  "message": "dolor ad cillum",
                  "in": "sit id occaecat qui",
                  "code": "sunt aute",
                  "subCategory": "sit",
                  "context": {
                    "missingScopes": [
                      "scope1",
                      "scope2"
                    ]
                  }
                },
                {
                  "message": "sit commodo est",
                  "in": "minim ut in elit nisi",
                  "code": "ipsum nostrud aliquip",
                  "subCategory": "occaecat in",
                  "context": {
                    "missingScopes": [
                      "scope1",
                      "scope2"
                    ]
                  }
                }
              ],
              "links": {
                "cillum_5": "deserunt non"
              },
              "message": "nulla exercitation",
              "status": "quis Excepteur ullamco in",
              "id": "Ut enim",
              "subCategory": {}
            },
            {
              "category": {
                "httpStatus": "NOT_ACCEPTABLE",
                "name": "exercitation qui laborum molli"
              },
              "context": {
                "eu_4c": [
                  "laborum dolor elit sed culpa",
                  "ea sed voluptate"
                ]
              },
              "errors": [
                {
                  "message": "labore tempor ut pariatur",
                  "in": "qui pariatur",
                  "code": "qui ullamco deserunt consectetur",
                  "subCategory": "eiusmod sed",
                  "context": {
                    "missingScopes": [
                      "scope1",
                      "scope2"
                    ]
                  }
                },
                {
                  "message": "velit est",
                  "in": "non",
                  "code": "sunt",
                  "subCategory": "ut commodo amet consequa",
                  "context": {
                    "missingScopes": [
                      "scope1",
                      "scope2"
                    ]
                  }
                }
              ],
              "links": {
                "mollit_018": "amet aliqua exercitation",
                "qui19": "sint labore officia in"
              },
              "message": "consequat mollit labore",
              "status": "ad enim sunt",
              "id": "sunt sit id",
              "subCategory": {}
            }
          ],
          "requestedAt": "2011-09-22T09:32:18.324Z",
          "links": {
            "sunt_5d": "Lorem exercitation"
          }
        }
      },
      "Result1": {
        "title": "Result1",
        "required": [
          "id",
          "type",
          "name",
          "email",
          "avatar"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        },
        "example": {
          "id": "A-123",
          "type": "AGENT",
          "name": "sed Duis magna",
          "email": "ullamco voluptate",
          "avatar": "consectetur"
        }
      },
      "Error": {
        "title": "Error",
        "required": [
          "category",
          "context",
          "errors",
          "links",
          "message",
          "status",
          "id",
          "subCategory"
        ],
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "context": {
            "$ref": "#/components/schemas/Context"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error1"
            },
            "description": ""
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "subCategory": {
            "type": "object"
          }
        },
        "example": {
          "category": {
            "httpStatus": "REQUEST_URI_TOO_LONG",
            "name": "dolore sed dolor ad"
          },
          "context": {
            "culpa59": [
              "enim elit irure non ad",
              "consequat Duis in ullamco"
            ],
            "reprehenderit_0d": [
              "tempor elit ani",
              "quis officia"
            ],
            "aute9": [
              "ipsum ullamco nisi exercitation",
              "Ut sunt"
            ],
            "eu_a3": [
              "voluptate dolor sint non cupidatat",
              "est dolore proident in"
            ]
          },
          "errors": [
            {
              "message": "dolor ad cillum",
              "in": "sit id occaecat qui",
              "code": "sunt aute",
              "subCategory": "sit",
              "context": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            {
              "message": "sit commodo est",
              "in": "minim ut in elit nisi",
              "code": "ipsum nostrud aliquip",
              "subCategory": "occaecat in",
              "context": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            }
          ],
          "links": {
            "cillum_5": "deserunt non"
          },
          "message": "nulla exercitation",
          "status": "quis Excepteur ullamco in",
          "id": "Ut enim",
          "subCategory": {}
        }
      },
      "Category": {
        "title": "Category",
        "required": [
          "httpStatus",
          "name"
        ],
        "type": "object",
        "properties": {
          "httpStatus": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "httpStatus": "REQUEST_URI_TOO_LONG",
          "name": "dolore sed dolor ad"
        }
      },
      "Context": {
        "title": "Context",
        "type": "object",
        "properties": {
          "culpa59": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "reprehenderit_0d": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "aute9": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "eu_a3": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "eu_4c": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "culpa59": [
            "enim elit irure non ad",
            "consequat Duis in ullamco"
          ],
          "reprehenderit_0d": [
            "tempor elit ani",
            "quis officia"
          ],
          "aute9": [
            "ipsum ullamco nisi exercitation",
            "Ut sunt"
          ],
          "eu_a3": [
            "voluptate dolor sint non cupidatat",
            "est dolore proident in"
          ]
        }
      },
      "Error1": {
        "title": "Error1",
        "required": [
          "message",
          "in",
          "code",
          "subCategory",
          "context"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "in": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "subCategory": {
            "type": "string"
          },
          "context": {
            "$ref": "#/components/schemas/Context1"
          }
        },
        "example": {
          "message": "dolor ad cillum",
          "in": "sit id occaecat qui",
          "code": "sunt aute",
          "subCategory": "sit",
          "context": {
            "missingScopes": [
              "scope1",
              "scope2"
            ]
          }
        }
      },
      "Context1": {
        "title": "Context1",
        "required": [
          "missingScopes"
        ],
        "type": "object",
        "properties": {
          "missingScopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "missingScopes": [
            "scope1",
            "scope2"
          ]
        }
      },
      "Links": {
        "title": "Links",
        "type": "object",
        "properties": {
          "cillum_5": {
            "type": "string"
          },
          "mollit_018": {
            "type": "string"
          },
          "qui19": {
            "type": "string"
          }
        },
        "example": {
          "cillum_5": "deserunt non"
        }
      },
      "Links1": {
        "title": "Links1",
        "required": [
          "sunt_5d"
        ],
        "type": "object",
        "properties": {
          "sunt_5d": {
            "type": "string"
          }
        },
        "example": {
          "sunt_5d": "Lorem exercitation"
        }
      },
      "successfuloperation1": {
        "title": "successfuloperation1",
        "required": [
          "id",
          "name",
          "avatar",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "id": "A-123",
          "name": "Adam Agent",
          "avatar": "https://api.hubspot.com/userpreferences/v1/avatar/6d16eea297d81639f120159f95a49fff/100",
          "type": "AGENT"
        }
      },
      "successfuloperation2": {
        "title": "successfuloperation2",
        "required": [
          "total",
          "results"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result2"
            },
            "description": ""
          }
        },
        "example": {
          "total": 2,
          "results": [
            {
              "id": "63264",
              "channelId": "1000",
              "name": "New chatflow",
              "inboxId": "5385",
              "active": true
            },
            {
              "id": "448722",
              "channelId": "1002",
              "name": "support-inbox@example.com",
              "inboxId": "5385",
              "active": false
            }
          ]
        }
      },
      "Result2": {
        "title": "Result2",
        "required": [
          "id",
          "channelId",
          "name",
          "inboxId",
          "active"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "inboxId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "63264",
          "channelId": "1000",
          "name": "New chatflow",
          "inboxId": "5385",
          "active": true
        }
      },
      "successfuloperation3": {
        "title": "successfuloperation3",
        "required": [
          "id",
          "channelId",
          "name",
          "inboxId",
          "active"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "inboxId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "448722",
          "channelId": "1002",
          "name": "support-inbox@example.com",
          "inboxId": "5385",
          "active": false
        }
      },
      "successfuloperation4": {
        "title": "successfuloperation4",
        "required": [
          "total",
          "results"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result3"
            },
            "description": ""
          }
        },
        "example": {
          "total": 3,
          "results": [
            {
              "id": "1000",
              "name": "LIVE_CHAT"
            },
            {
              "id": "1001",
              "name": "FB_MESSENGER"
            },
            {
              "id": "1002",
              "name": "EMAIL"
            }
          ]
        }
      },
      "Result3": {
        "title": "Result3",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": "1000",
          "name": "LIVE_CHAT"
        }
      },
      "successfuloperation5": {
        "title": "successfuloperation5",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": "1002",
          "name": "EMAIL"
        }
      },
      "successfuloperation6": {
        "title": "successfuloperation6",
        "required": [
          "total",
          "results"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result4"
            },
            "description": ""
          }
        },
        "example": {
          "total": 2,
          "results": [
            {
              "id": "5385",
              "name": "Inbox",
              "createdAt": "2019-03-07T16:32:23.443Z"
            },
            {
              "id": "5548",
              "name": "Sales Inbox",
              "createdAt": "2019-03-13T18:41:01.209Z"
            }
          ]
        }
      },
      "Result4": {
        "title": "Result4",
        "required": [
          "id",
          "name",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        },
        "example": {
          "id": "5385",
          "name": "Inbox",
          "createdAt": "2019-03-07T16:32:23.443Z"
        }
      },
      "successfuloperation7": {
        "title": "successfuloperation7",
        "required": [
          "id",
          "name",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        },
        "example": {
          "id": "5385",
          "name": "Inbox",
          "createdAt": "2019-03-07T16:32:23.443Z"
        }
      },
      "successfuloperation8": {
        "title": "successfuloperation8",
        "required": [
          "id",
          "createdAt",
          "createdBy",
          "client",
          "channelId",
          "channelAccountId",
          "archived",
          "text",
          "richText",
          "truncationStatus",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "channelId": {
            "type": "string"
          },
          "channelAccountId": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          },
          "richText": {
            "type": "string"
          },
          "truncationStatus": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "id": "341c52ddfecc41b6a026dc689c3ff673",
          "createdAt": "2020-06-26T18:20:00.722Z",
          "createdBy": "A-123",
          "client": {
            "clientType": "HUBSPOT"
          },
          "channelId": "1000",
          "channelAccountId": "20091",
          "archived": false,
          "text": "How can I help?",
          "richText": "<div style=\"text-align: left\">How can I help?</div>",
          "truncationStatus": "NOT_TRUNCATED",
          "type": "MESSAGE"
        }
      },
      "Client": {
        "title": "Client",
        "required": [
          "clientType"
        ],
        "type": "object",
        "properties": {
          "clientType": {
            "type": "string"
          }
        },
        "example": {
          "clientType": "HUBSPOT"
        }
      },
      "successfuloperation9": {
        "title": "successfuloperation9",
        "required": [
          "text",
          "richText"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "richText": {
            "type": "string"
          }
        },
        "example": {
          "text": "How can I help?",
          "richText": "<div style=\"text-align: left\">How can I help?</div>"
        }
      },
      "successfuloperation10": {
        "title": "successfuloperation10",
        "required": [
          "results",
          "paging"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        },
        "example": {
          "results": [
            {
              "id": "07ce9e83-7315-4a06-9971-78b7038e640e",
              "createdAt": "2020-06-26T18:20:00.710Z",
              "createdBy": "A-123",
              "client": {
                "clientType": "SYSTEM"
              },
              "archived": false,
              "assignedTo": "A-123",
              "assignedFrom": "B-987",
              "type": "ASSIGNMENT"
            },
            {
              "id": "341c52ddfecc41b6a026dc689c3ff673",
              "createdAt": "2020-06-26T18:20:00.722Z",
              "createdBy": "A-123",
              "client": {
                "clientType": "HUBSPOT"
              },
              "channelId": "1000",
              "channelAccountId": "20091",
              "archived": false,
              "text": "How can I help?",
              "richText": "<div style=\"text-align: left\">How can I help?</div>",
              "truncationStatus": "NOT_TRUNCATED",
              "type": "MESSAGE"
            },
            {
              "id": "e11540ef-d041-4585-a53d-fd5cad3af294",
              "createdAt": "2020-06-26T18:20:00.799Z",
              "createdBy": "I-999",
              "client": {
                "clientType": "INTEGRATION",
                "integrationAppId": "999"
              },
              "archived": false,
              "text": "Customer since 2012",
              "richText": "<div style=\"text-align: left\">Customer since 2012</div>",
              "type": "COMMENT"
            }
          ],
          "paging": {
            "next": {
              "after": "MTU5MzE5NTU3NjkyMy0w",
              "link": "https://api.hubspot.com/conversations/v3/conversations/threads/123/messages?portalId=123&after=MTU5MzE5NTU3NjkyMy0w"
            }
          }
        }
      },
      "Result5": {
        "title": "Result5",
        "required": [
          "id",
          "createdAt",
          "createdBy",
          "client",
          "archived",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "client": {
            "$ref": "#/components/schemas/Client1"
          },
          "archived": {
            "type": "boolean"
          },
          "assignedTo": {
            "type": "string"
          },
          "assignedFrom": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "channelAccountId": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "richText": {
            "type": "string"
          },
          "truncationStatus": {
            "type": "string"
          }
        },
        "example": {
          "id": "07ce9e83-7315-4a06-9971-78b7038e640e",
          "createdAt": "2020-06-26T18:20:00.710Z",
          "createdBy": "A-123",
          "client": {
            "clientType": "SYSTEM"
          },
          "archived": false,
          "assignedTo": "A-123",
          "assignedFrom": "B-987",
          "type": "ASSIGNMENT"
        }
      },
      "Client1": {
        "title": "Client1",
        "required": [
          "clientType"
        ],
        "type": "object",
        "properties": {
          "clientType": {
            "type": "string"
          },
          "integrationAppId": {
            "type": "string"
          }
        },
        "example": {
          "clientType": "SYSTEM"
        }
      },
      "Paging": {
        "title": "Paging",
        "required": [
          "next"
        ],
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/Next"
          }
        },
        "example": {
          "next": {
            "after": "MTU5MzE5NTU3NjkyMy0w",
            "link": "https://api.hubspot.com/conversations/v3/conversations/threads/123/messages?portalId=123&after=MTU5MzE5NTU3NjkyMy0w"
          }
        }
      },
      "Next": {
        "title": "Next",
        "required": [
          "after",
          "link"
        ],
        "type": "object",
        "properties": {
          "after": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "example": {
          "after": "MTU5MzE5NTU3NjkyMy0w",
          "link": "https://api.hubspot.com/conversations/v3/conversations/threads/123/messages?portalId=123&after=MTU5MzE5NTU3NjkyMy0w"
        }
      },
      "Sendamessagetoathread.Request": {
        "title": "Sendamessagetoathread.Request",
        "required": [
          "attachments",
          "channelAccountId",
          "channelId",
          "recipients",
          "senderActorId",
          "text",
          "type",
          "richText",
          "subject"
        ],
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "description": ""
          },
          "channelAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "channelId": {
            "type": "integer",
            "format": "int32"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient"
            },
            "description": ""
          },
          "senderActorId": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "richText": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          }
        },
        "example": {
          "attachments": [
            {
              "fileId": -8529555
            },
            {
              "fileId": -59877292
            }
          ],
          "channelAccountId": 8981408,
          "channelId": -20146096,
          "recipients": [
            {
              "actorId": "A-123",
              "deliveryIdentifiers": [
                {
                  "type": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  },
                  "value": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  }
                },
                {
                  "type": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  },
                  "value": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  }
                }
              ],
              "name": "incididunt nisi",
              "recipientField": "aliquip Ut"
            },
            {
              "actorId": "A-123",
              "deliveryIdentifiers": [
                {
                  "type": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  },
                  "value": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  }
                },
                {
                  "type": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  },
                  "value": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  }
                }
              ],
              "name": "dolor magna ut exercitation aliquip",
              "recipientField": "ullamco aliqua"
            }
          ],
          "senderActorId": "A-123",
          "text": "culpa ea dolor sit est",
          "type": "MESSAGE",
          "richText": "labore irure",
          "subject": "consequat anim veniam sed"
        }
      },
      "Attachment": {
        "title": "Attachment",
        "required": [
          "fileId"
        ],
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "fileId": -8529555
        }
      },
      "Recipient": {
        "title": "Recipient",
        "required": [
          "actorId",
          "deliveryIdentifiers",
          "name",
          "recipientField"
        ],
        "type": "object",
        "properties": {
          "actorId": {
            "type": "string"
          },
          "deliveryIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryIdentifier"
            },
            "description": ""
          },
          "name": {
            "type": "string"
          },
          "recipientField": {
            "type": "string"
          }
        },
        "example": {
          "actorId": "A-123",
          "deliveryIdentifiers": [
            {
              "type": {
                "value": "<Error: Too many levels of nesting to fake this schema>"
              },
              "value": {
                "value": "<Error: Too many levels of nesting to fake this schema>"
              }
            },
            {
              "type": {
                "value": "<Error: Too many levels of nesting to fake this schema>"
              },
              "value": {
                "value": "<Error: Too many levels of nesting to fake this schema>"
              }
            }
          ],
          "name": "incididunt nisi",
          "recipientField": "aliquip Ut"
        }
      },
      "DeliveryIdentifier": {
        "title": "DeliveryIdentifier",
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "$ref": "#/components/schemas/Value"
          }
        },
        "example": {
          "type": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
          },
          "value": {
            "value": "<Error: Too many levels of nesting to fake this schema>"
          }
        }
      },
      "Type": {
        "title": "Type",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "<Error: Too many levels of nesting to fake this schema>"
        }
      },
      "Value": {
        "title": "Value",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "<Error: Too many levels of nesting to fake this schema>"
        }
      },
      "successfuloperation11": {
        "title": "successfuloperation11",
        "required": [
          "archived",
          "attachments",
          "client",
          "createdAt",
          "createdBy",
          "id",
          "recipients",
          "senders",
          "text",
          "truncationStatus",
          "type",
          "channelId",
          "channelAccountId",
          "richText",
          "subject"
        ],
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment1"
            },
            "description": ""
          },
          "client": {
            "$ref": "#/components/schemas/Client2"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient"
            },
            "description": ""
          },
          "senders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sender"
            },
            "description": ""
          },
          "text": {
            "type": "string"
          },
          "truncationStatus": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "channelId": {
            "type": "integer",
            "format": "int32"
          },
          "channelAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "richText": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          }
        },
        "example": {
          "archived": true,
          "attachments": [
            {
              "fileId": 39692787,
              "url": "consequat enim"
            },
            {
              "fileId": 46316938,
              "url": "velit aute nulla et"
            }
          ],
          "client": {
            "clientType": "HUBSPOT",
            "integrationAppId": 22837071
          },
          "createdAt": "2007-05-18T05:25:27.041Z",
          "createdBy": "A-123",
          "id": "amet proident ulla",
          "recipients": [
            {
              "actorId": "A-123",
              "deliveryIdentifiers": [
                {
                  "type": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  },
                  "value": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  }
                },
                {
                  "type": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  },
                  "value": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  }
                }
              ],
              "name": "deserunt",
              "recipientField": "proident non aute"
            },
            {
              "actorId": "A-123",
              "deliveryIdentifiers": [
                {
                  "type": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  },
                  "value": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  }
                },
                {
                  "type": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  },
                  "value": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                  }
                }
              ],
              "name": "ex id ",
              "recipientField": "magna quis ea"
            }
          ],
          "senders": [
            {
              "actorId": "A-123",
              "name": "occaecat nostrud ipsum dolore",
              "senderField": "dolor",
              "deliveryIdentifier": {
                "type": "eiusmod consequat",
                "value": "incididunt proident enim"
              }
            },
            {
              "actorId": "A-123",
              "name": "occaecat",
              "senderField": "enim proident",
              "deliveryIdentifier": {
                "type": "aliqua ad veniam adipisici",
                "value": "laborum in reprehenderit eu velit"
              }
            }
          ],
          "text": "anim aliquip tem",
          "truncationStatus": "TRUNCATED_TO_MOST_RECENT_REPLY",
          "type": "MESSAGE",
          "channelId": 46195222,
          "channelAccountId": -87035391,
          "richText": "cillum",
          "subject": "sed in"
        }
      },
      "Attachment1": {
        "title": "Attachment1",
        "required": [
          "fileId",
          "url"
        ],
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "fileId": 39692787,
          "url": "consequat enim"
        }
      },
      "Client2": {
        "title": "Client2",
        "required": [
          "clientType",
          "integrationAppId"
        ],
        "type": "object",
        "properties": {
          "clientType": {
            "type": "string"
          },
          "integrationAppId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "clientType": "HUBSPOT",
          "integrationAppId": 22837071
        }
      },
      "Sender": {
        "title": "Sender",
        "required": [
          "actorId",
          "name",
          "senderField",
          "deliveryIdentifier"
        ],
        "type": "object",
        "properties": {
          "actorId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "senderField": {
            "type": "string"
          },
          "deliveryIdentifier": {
            "$ref": "#/components/schemas/DeliveryIdentifier2"
          }
        },
        "example": {
          "actorId": "A-123",
          "name": "occaecat nostrud ipsum dolore",
          "senderField": "dolor",
          "deliveryIdentifier": {
            "type": "eiusmod consequat",
            "value": "incididunt proident enim"
          }
        }
      },
      "DeliveryIdentifier2": {
        "title": "DeliveryIdentifier2",
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "example": {
          "type": "eiusmod consequat",
          "value": "incididunt proident enim"
        }
      },
      "successfuloperation12": {
        "title": "successfuloperation12",
        "required": [
          "associatedContactId",
          "createdAt",
          "id",
          "inboxId",
          "spam",
          "status",
          "closedAt",
          "latestMessageTimestamp",
          "latestMessageSentTimestamp",
          "latestMessageReceivedTimestamp",
          "assignedTo",
          "archived"
        ],
        "type": "object",
        "properties": {
          "associatedContactId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "inboxId": {
            "type": "integer",
            "format": "int32"
          },
          "spam": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "closedAt": {
            "type": "string"
          },
          "latestMessageTimestamp": {
            "type": "string"
          },
          "latestMessageSentTimestamp": {
            "type": "string"
          },
          "latestMessageReceivedTimestamp": {
            "type": "string"
          },
          "assignedTo": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          }
        },
        "example": {
          "associatedContactId": -8664576,
          "createdAt": "1999-03-14T15:01:58.232Z",
          "id": -52065780,
          "inboxId": -49334699,
          "spam": false,
          "status": "OPEN",
          "closedAt": "1999-04-24T20:45:23.037Z",
          "latestMessageTimestamp": "1988-04-06T10:47:13.242Z",
          "latestMessageSentTimestamp": "1972-06-15T03:22:39.613Z",
          "latestMessageReceivedTimestamp": "2002-10-21T03:23:17.834Z",
          "assignedTo": "A-123",
          "archived": true
        }
      },
      "Updateathread.Request": {
        "title": "Updateathread.Request",
        "required": [
          "status",
          "archived"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          }
        },
        "example": {
          "status": "CLOSED",
          "archived": true
        }
      },
      "successfuloperation13": {
        "title": "successfuloperation13",
        "required": [
          "id",
          "createdAt",
          "status",
          "latestMessageTimestamp",
          "latestMessageSentTimestamp",
          "latestMessageReceivedTimestamp",
          "assignedTo",
          "spam",
          "inboxId",
          "associatedContactId",
          "archived"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "latestMessageTimestamp": {
            "type": "string"
          },
          "latestMessageSentTimestamp": {
            "type": "string"
          },
          "latestMessageReceivedTimestamp": {
            "type": "string"
          },
          "assignedTo": {
            "type": "string"
          },
          "spam": {
            "type": "boolean"
          },
          "inboxId": {
            "type": "string"
          },
          "associatedContactId": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "2627121",
          "createdAt": "2018-08-21T12:06:22.029Z",
          "status": "CLOSED",
          "latestMessageTimestamp": "2018-08-21T12:06:22.889Z",
          "latestMessageSentTimestamp": "2018-08-21T12:06:22.889Z",
          "latestMessageReceivedTimestamp": "2018-08-21T12:06:22.889Z",
          "assignedTo": "A-123",
          "spam": false,
          "inboxId": "123",
          "associatedContactId": "7206",
          "archived": false
        }
      },
      "successfuloperation14": {
        "title": "successfuloperation14",
        "required": [
          "results",
          "paging"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result6"
            },
            "description": ""
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        },
        "example": {
          "results": [
            {
              "id": "2627121",
              "createdAt": "2018-08-21T12:06:22.029Z",
              "status": "OPEN",
              "latestMessageTimestamp": "2018-08-21T12:06:22.889Z",
              "latestMessageSentTimestamp": "2018-08-21T12:06:22.889Z",
              "latestMessageReceivedTimestamp": "2018-08-21T12:06:22.889Z",
              "assignedTo": "A-123",
              "spam": false,
              "inboxId": "123",
              "associatedContactId": "7206",
              "archived": false
            },
            {
              "id": "5037435",
              "createdAt": "2018-09-21T15:20:02.985Z",
              "closedAt": "2018-09-21T20:20:02.985Z",
              "status": "CLOSED",
              "latestMessageTimestamp": "2018-09-21T15:20:04.544Z",
              "latestMessageSentTimestamp": "2018-09-21T15:20:04.544Z",
              "latestMessageReceivedTimestamp": "2018-09-21T15:20:04.544Z",
              "spam": false,
              "inboxId": "123",
              "associatedContactId": "7506",
              "archived": false
            }
          ],
          "paging": {
            "next": {
              "after": "NTAzNzQzNQ%3D%3D",
              "link": "https://api.hubspot.com/conversations/v3/conversations/threads?portalId=123&after=NTAzNzQzNQ%3D%3D"
            }
          }
        }
      },
      "Result6": {
        "title": "Result6",
        "required": [
          "id",
          "createdAt",
          "status",
          "latestMessageTimestamp",
          "latestMessageSentTimestamp",
          "latestMessageReceivedTimestamp",
          "spam",
          "inboxId",
          "associatedContactId",
          "archived"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "latestMessageTimestamp": {
            "type": "string"
          },
          "latestMessageSentTimestamp": {
            "type": "string"
          },
          "latestMessageReceivedTimestamp": {
            "type": "string"
          },
          "assignedTo": {
            "type": "string"
          },
          "spam": {
            "type": "boolean"
          },
          "inboxId": {
            "type": "string"
          },
          "associatedContactId": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "closedAt": {
            "type": "string"
          }
        },
        "example": {
          "id": "2627121",
          "createdAt": "2018-08-21T12:06:22.029Z",
          "status": "OPEN",
          "latestMessageTimestamp": "2018-08-21T12:06:22.889Z",
          "latestMessageSentTimestamp": "2018-08-21T12:06:22.889Z",
          "latestMessageReceivedTimestamp": "2018-08-21T12:06:22.889Z",
          "assignedTo": "A-123",
          "spam": false,
          "inboxId": "123",
          "associatedContactId": "7206",
          "archived": false
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "hapikey",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "tags": [
    {
      "name": "actors"
    },
    {
      "name": "channel-accounts"
    },
    {
      "name": "channels"
    },
    {
      "name": "inboxes"
    },
    {
      "name": "{message Id}"
    },
    {
      "name": "messages"
    },
    {
      "name": "{thread Id}"
    },
    {
      "name": "threads"
    }
  ]
}