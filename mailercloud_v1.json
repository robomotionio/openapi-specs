{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "support@mailercloud.com",
      "name": "API Support",
      "url": "https://www.mailercloud.com/contact-us"
    },
    "description": "The version 1 of Mailercloud API is authenticated using API key.  The version 1 of Mailercloud API now provides APIs for managing contacts, lists, contact's custom property, campaigns and listing of segments .",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.mailercloud.com/terms-and-conditions",
    "title": "Mailercloud API v1 Documentation",
    "version": "1.0"
  },
  "paths": {
    "/campaign": {
      "post": {
        "description": "API for creating an email campaign. For creating a campaign, HTML or plain text and list id or segment are mandatory.\n\nSample Code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/campaign \\\n  --header 'Authorization:  Your API key' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"html\":\"<html>Sample html</html>\",\"list_ids\":[\"kBaEb\"],\"name\":\"New year offer\",\"sender\":{\"sender_email\":\"joseph@mailercloud.com\",\"sender_name\":\"Joseph\"},\"subject\":\"20% OFF for New Year Sales\",\"viewin_browser\":true}'\n  \n```",
        "tags": [
          "Campaign"
        ],
        "summary": "Create Campaign",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Your api key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "email_preheader": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Email preheader is the summary text that follows a subject line when the email is viewed in an inbox. In many cases, itâ€™s used to provide a short summary of the email, and is typically one sentence long.\n\nMinimum: 3\n\nMaximum: 150"
                  },
                  "html": {
                    "type": "string",
                    "minLength": 1,
                    "description": "HTML template content for your email campaign."
                  },
                  "list_ids": {
                    "type": "array",
                    "description": "Recipients of your email campaign.",
                    "items": {
                      "type": "string",
                      "description": "List of contact lists ids, to which you want to send your campaign. \n\nFormat: Array of strings."
                    }
                  },
                  "mailing_preference": {
                    "type": "boolean",
                    "description": "true - Mailing preference option will be displayed in footer of email campaign template.\n\nfalse - Mailing preference option will not be dispalyed.",
                    "default": true
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the campaign.\n\nMinimum: 3\n\nMaximum: 150"
                  },
                  "pause_rules": {
                    "type": "object",
                    "description": "Optional\n\nIf you want to set a rule for sending a campaign, use this option. Based on the configured rule, the campaign will be sent.",
                    "properties": {
                      "pause_condition": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Rule for setting open or click percentage greater than or less than pause target.\n\nSupported pause_condition - greater than, less than"
                      },
                      "pause_criteria": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Supported pause_criteria - open, click"
                      },
                      "pause_limit": {
                        "type": "number",
                        "description": "The percentage of list contacts to which we want to send campaigns first. In the order we set in rules.\n\nMinimum: 1\n\nMaximum: 50"
                      },
                      "pause_target": {
                        "type": "number",
                        "description": "Value  of open/click (in percentage) to be achieved.\n\nMinimum: 1\n\nMaximum: 100"
                      },
                      "wait_time": {
                        "type": "number",
                        "description": "After getting click rate or open rate grater than or less than pause limit , How many time we have to wait to send campaign to other contacts in the list.\n\nWait time in minutes .\n\nMinimum: 1\n\nMaximum: 43200"
                      }
                    },
                    "required": [
                      "pause_condition",
                      "pause_criteria",
                      "pause_limit",
                      "pause_target",
                      "wait_time"
                    ]
                  },
                  "permission_reminder": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The permission reminder content in your email campaign. If you want give unsubscribe link give %%unsubscribe%%\n\nMinimum: 3\n\nMaximum: 150"
                  },
                  "plain_text": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Plain text content of your email campaign."
                  },
                  "reply_email": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Email on which the campaign recipients will be able to reply to. If replay_email empty then sender email will be the reply email."
                  },
                  "report_spam": {
                    "type": "boolean",
                    "description": "Spam reporting enable or disable.",
                    "default": true
                  },
                  "rules": {
                    "type": "object",
                    "properties": {
                      "limit": {
                        "type": "number",
                        "description": "Count of subscribers in list to which campaign sends based on the contacts_order."
                      },
                      "contacts_order": {
                        "type": "string",
                        "description": "The order of contact list in which you want to send your email campaign.\n\nSupported: first,last"
                      }
                    }
                  },
                  "scheduled_at": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Schedule time for your email campaign. Pass your timezone date-time format for accurate results.\n\nFormat: 2021-04-23 15:04:05"
                  },
                  "segments": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Your recipient segment id."
                  },
                  "sender": {
                    "type": "object",
                    "required": [
                      "sender_email",
                      "sender_name"
                    ],
                    "properties": {
                      "sender_email": {
                        "type": "string",
                        "minLength": 1,
                        "description": "From email for your email campaign."
                      },
                      "sender_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "From name for email campaign.\n\nMaximum: 100"
                      }
                    }
                  },
                  "subject": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Subject of the campaign.\n\nMinimum: 3\n\nMaximum: 150"
                  },
                  "viewin_browser": {
                    "type": "boolean",
                    "description": "true: Enable the \"View this email in your browser\"  in Campaign preview page.\n\nfalse: Disable the \"View this email in your browser\"  in Campaign preview page.",
                    "default": true
                  }
                },
                "required": [
                  "name",
                  "sender",
                  "subject"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "html": "<html><body> Sample HTML  </body></html>",
              "list_ids": [
                "sCVJ",
                "ghy"
              ],
              "name": "Campaign name",
              "sender": {
                "sender_email": "michael@mailercloud.com",
                "sender_name": "Michael"
              },
              "scheduled_at": "2021-04-17 15:48:00",
              "subject": "Prime member notification."
            },
            "example-2": {
              "email_preheader": "Prime member: You have an unused Prime benefit",
              "rules": {
                "contacts_order": "last",
                "limit": 5
              },
              "report_spam": false,
              "mailing_preference": false,
              "name": "Campaign name",
              "pause_rules": {
                "pause_limit": 1,
                "pause_criteria": "open",
                "pause_condition": "greater than",
                "pause_target": 1,
                "wait_time": 10
              },
              "permission_reminder": "If you wish to opt out of all type of emails, click Unsubscribe. ",
              "plain_text": "plain text",
              "reply_email": "joseph@mailercloud.com",
              "sender": {
                "sender_email": "michael@mailercloud.com",
                "sender_name": "Michael"
              },
              "segments": "hju",
              "subject": "Prime member notification.",
              "viewin_browser": false
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "hdjh"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "sender_email",
                          "message": "sender_email  must be a valid email address"
                        },
                        {
                          "field": "reply_email",
                          "message": "reply_email  must be a valid email address"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "createcampaign"
      }
    },
    "/campaign/domain/report/{id}": {
      "post": {
        "description": "This report contains statistics for the top-performing email domains in a campaign. The domains report allows you to break down your customers into groups according to their mailbox service provider.\n\nSample Code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/campaign/domain/report/hjk \\\n  --header 'Authorization: Your API key' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"limit\": 10, \"page\": 1, \"sort_field\": \"sent\",\"sort_order\": \"asc\"}'\n  \n```",
        "tags": [
          "Campaign"
        ],
        "summary": "Get statistics for the top-performing email domains in a campaign",
        "parameters": [
          {
            "description": "Campaign id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Your Api key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "number",
                    "description": "Maximum number of elements to return.\n\nMaximum: 100 Minimum: 10"
                  },
                  "page": {
                    "type": "number",
                    "description": "You can retrieve a subset of records starting from the page value you have specified. You can add a limit, which will determine the number of records you can retrieve on a single page.\n\nStarts From: 1"
                  },
                  "sort_field": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Sort list data based on this field\n\nAvailable sort fields\n\ndomain,sent,soft_bounce,hard_bounce,opens,\nclicks,unsubscribe,abuse,spam_complaints"
                  },
                  "sort_order": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Sorting order for sort field\n\nAvailable sort orders\n\nasc, ASC, desc, DESC"
                  }
                },
                "required": [
                  "limit",
                  "page"
                ]
              }
            }
          },
          "description": "Request body",
          "required": true,
          "x-examples": {
            "example-1": {
              "limit": 10,
              "page": 1,
              "sort_field": "sent",
              "sort_order": "asc"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "abuse": {
                            "type": "number"
                          },
                          "abuse_pct": {
                            "type": "string",
                            "minLength": 1
                          },
                          "clicks": {
                            "type": "number"
                          },
                          "clicks_pct": {
                            "type": "string",
                            "minLength": 1
                          },
                          "domain": {
                            "type": "string",
                            "minLength": 1
                          },
                          "hard_bounce": {
                            "type": "number"
                          },
                          "hard_bounce_pct": {
                            "type": "string",
                            "minLength": 1
                          },
                          "opens": {
                            "type": "number"
                          },
                          "opens_pct": {
                            "type": "string",
                            "minLength": 1
                          },
                          "sent": {
                            "type": "number"
                          },
                          "sent_pct": {
                            "type": "string",
                            "minLength": 1
                          },
                          "soft_bounce": {
                            "type": "number"
                          },
                          "soft_bounce_pct": {
                            "type": "string",
                            "minLength": 1
                          },
                          "spam_complaints": {
                            "type": "number"
                          },
                          "spam_complaints_pct": {
                            "type": "string",
                            "minLength": 1
                          },
                          "unsubscribe": {
                            "type": "number"
                          },
                          "unsubscribe_pct": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "count": 1,
                      "data": [
                        {
                          "abuse": 0,
                          "abuse_pct": "0.00",
                          "clicks": 0,
                          "clicks_pct": "0.00",
                          "domain": "bulk.regalwork.com",
                          "hard_bounce": 0,
                          "hard_bounce_pct": "0.00",
                          "opens": 15548,
                          "opens_pct": "15.54",
                          "sent": 100000,
                          "sent_pct": "100.00",
                          "soft_bounce": 0,
                          "soft_bounce_pct": "0.00",
                          "spam_complaints": 0,
                          "spam_complaints_pct": "0.00",
                          "unsubscribe": 307,
                          "unsubscribe_pct": "1.97"
                        }
                      ],
                      "name": "Campaign name"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "sort_order",
                        "message": "Invalid sort_order"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "CampaignDomainReport"
      }
    },
    "/campaign/list": {
      "post": {
        "description": "Get the details of all the campaigns you have created.\n\nSample Code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/campaign/list\\\n  --header 'Authorization: Your API key' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"date_from\": \"2021-03-01\",\"date_to\": \"2021-04-30\",\"limit\": 10,\"page\": 1\n}'\n  \n```",
        "tags": [
          "Campaign"
        ],
        "summary": "Campaign list",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Your api key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "date_from": {
                    "type": "string",
                    "minLength": 1,
                    "description": "When the campaign type is a draft or duplicate, date_from checks modified date; otherwise, date_from checks your scheduled date.\n\nFormat Y-m-d."
                  },
                  "date_to": {
                    "type": "string",
                    "minLength": 1,
                    "description": "When the campaign type is a draft or duplicate, date_to checks modified date; otherwise, date_to checks your scheduled date.\n\nFormat Y-m-d."
                  },
                  "limit": {
                    "type": "number",
                    "description": "Maximum number of elements to return.\n\nMaximum: 100 Minimum: 10"
                  },
                  "page": {
                    "type": "number",
                    "description": "You can retrieve a subset of records starting from the page value you have specified. You can add a limit, which will determine the number of records you can retrieve on a single page.\n\nStarts From: 1"
                  },
                  "search": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter campaign list by campaign name"
                  },
                  "sender_email": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter campaign list by sender email."
                  },
                  "sort_field": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Sort list data based on the following field.\n\nAvailable sort fields\nname,schedule_date,open_percentage,\nmodified_date,clicks,opens,sent,unsubscribe"
                  },
                  "sort_order": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Sorting order for sort field\n\nAvailable sort orders\n\nasc, ASC, desc, DESC "
                  },
                  "status": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter campaign list by campaign status\n\nAvailable statuses\n\nProcessing,Queued,Sending,Paused,Finished,\nAborted,Duplicate,Draft,Scheduled,Rescheduled,Failed\n"
                  }
                },
                "required": [
                  "limit",
                  "page"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "date_from": "2021-03-01",
              "date_to": "2021-04-30",
              "limit": 10,
              "page": 1,
              "search": "",
              "sender_email": "",
              "sort_field": "name",
              "sort_order": "asc",
              "status": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "blacklisted_domains": {
                              "type": "object"
                            },
                            "broken_links": {
                              "type": "object"
                            },
                            "conversion_tracking": {
                              "type": "object"
                            },
                            "created_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "email_preheader": {
                              "type": "string",
                              "minLength": 1
                            },
                            "finish_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "html": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string",
                              "minLength": 1
                            },
                            "modified_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "name": {
                              "type": "string",
                              "minLength": 1
                            },
                            "pause_rules": {
                              "type": "object"
                            },
                            "permission_reminder": {
                              "type": "string"
                            },
                            "plain_text": {
                              "type": "string"
                            },
                            "recepiant": {
                              "type": "object",
                              "properties": {
                                "lists": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "lists_contact_count": {
                                  "type": "number"
                                },
                                "segments": {
                                  "type": "string"
                                },
                                "segments_contact_count": {
                                  "type": "number"
                                },
                                "total_lists": {
                                  "type": "number"
                                }
                              }
                            },
                            "reply_email": {
                              "type": "string",
                              "minLength": 1
                            },
                            "report_abuse": {
                              "type": "boolean"
                            },
                            "report_summary": {
                              "type": "object",
                              "properties": {
                                "abuse": {
                                  "type": "number"
                                },
                                "abuse_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "clicks": {
                                  "type": "number"
                                },
                                "clicks_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "conversions": {
                                  "type": "number"
                                },
                                "conversions_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "delivered": {
                                  "type": "number"
                                },
                                "delivered_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "hard_bounce": {
                                  "type": "number"
                                },
                                "hard_bounce_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "open_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "opens": {
                                  "type": "number"
                                },
                                "queue": {
                                  "type": "number"
                                },
                                "queue_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "queued_total": {
                                  "type": "number"
                                },
                                "sent": {
                                  "type": "number"
                                },
                                "sent_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "soft_bounce": {
                                  "type": "number"
                                },
                                "soft_bounce_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "spam_complaints_count": {
                                  "type": "number"
                                },
                                "spam_complaints_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "unsubscribe": {
                                  "type": "number"
                                },
                                "unsubscribe_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            },
                            "rule": {
                              "type": "object",
                              "properties": {
                                "contacts_order": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "limit": {
                                  "type": "string"
                                }
                              }
                            },
                            "scheduled_date": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "timezone": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            },
                            "sender": {
                              "type": "object",
                              "properties": {
                                "sender_email": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "sender_name": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            },
                            "start_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "status": {
                              "type": "string",
                              "minLength": 1
                            },
                            "status_change_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "status_change_message": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string",
                              "minLength": 1
                            },
                            "tag": {
                              "type": "string",
                              "minLength": 1
                            },
                            "time_rule": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1
                            }
                          }
                        },
                        "1": {
                          "type": "object",
                          "properties": {
                            "blacklisted_domains": {
                              "type": "object"
                            },
                            "broken_links": {
                              "type": "object"
                            },
                            "conversion_tracking": {
                              "type": "object"
                            },
                            "created_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "email_preheader": {
                              "type": "string",
                              "minLength": 1
                            },
                            "finish_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "html": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string",
                              "minLength": 1
                            },
                            "modified_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "name": {
                              "type": "string",
                              "minLength": 1
                            },
                            "pause_rules": {
                              "type": "object"
                            },
                            "permission_reminder": {
                              "type": "string"
                            },
                            "plain_text": {
                              "type": "string"
                            },
                            "recepiant": {
                              "type": "object",
                              "properties": {
                                "lists": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "lists_contact_count": {
                                  "type": "number"
                                },
                                "segments": {
                                  "type": "string"
                                },
                                "segments_contact_count": {
                                  "type": "number"
                                },
                                "total_lists": {
                                  "type": "number"
                                }
                              }
                            },
                            "reply_email": {
                              "type": "string",
                              "minLength": 1
                            },
                            "report_abuse": {
                              "type": "boolean"
                            },
                            "report_summary": {
                              "type": "object",
                              "properties": {
                                "abuse": {
                                  "type": "number"
                                },
                                "abuse_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "clicks": {
                                  "type": "number"
                                },
                                "clicks_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "conversions": {
                                  "type": "number"
                                },
                                "conversions_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "delivered": {
                                  "type": "number"
                                },
                                "delivered_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "hard_bounce": {
                                  "type": "number"
                                },
                                "hard_bounce_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "open_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "opens": {
                                  "type": "number"
                                },
                                "queue": {
                                  "type": "number"
                                },
                                "queue_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "queued_total": {
                                  "type": "number"
                                },
                                "sent": {
                                  "type": "number"
                                },
                                "sent_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "soft_bounce": {
                                  "type": "number"
                                },
                                "soft_bounce_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "spam_complaints_count": {
                                  "type": "number"
                                },
                                "spam_complaints_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "unsubscribe": {
                                  "type": "number"
                                },
                                "unsubscribe_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            },
                            "rule": {
                              "type": "object",
                              "properties": {
                                "contacts_order": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "limit": {
                                  "type": "string"
                                }
                              }
                            },
                            "scheduled_date": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "timezone": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            },
                            "sender": {
                              "type": "object",
                              "properties": {
                                "sender_email": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "sender_name": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            },
                            "start_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "status": {
                              "type": "string",
                              "minLength": 1
                            },
                            "status_change_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "status_change_message": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string",
                              "minLength": 1
                            },
                            "tag": {
                              "type": "string",
                              "minLength": 1
                            },
                            "time_rule": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "count": [
                        {
                          "count": 2
                        }
                      ],
                      "data": {
                        "0": {
                          "blacklisted_domains": {},
                          "broken_links": {},
                          "conversion_tracking": {},
                          "created_date": "2021-04-27 11:31:04",
                          "email_preheader": "Save more on your Home & Kitchen shopping",
                          "finish_date": "2021-04-27 15:07:02",
                          "html": "",
                          "id": "BBBghIFI",
                          "modified_date": "2021-04-27 11:44:15",
                          "name": "Offer Of The Day",
                          "pause_rules": {},
                          "permission_reminder": "",
                          "plain_text": "",
                          "recepiant": {
                            "lists": "Subscriber list",
                            "lists_contact_count": 100000,
                            "segments": "",
                            "segments_contact_count": 0,
                            "total_lists": 1
                          },
                          "reply_email": "joseph@mailercloud.com",
                          "report_abuse": true,
                          "report_summary": {
                            "abuse": 0,
                            "abuse_percentage": "0.00",
                            "clicks": 0,
                            "clicks_percentage": "0.00",
                            "conversions": 0,
                            "conversions_percentage": "0.00",
                            "delivered": 100000,
                            "delivered_percentage": "100.00",
                            "hard_bounce": 0,
                            "hard_bounce_percentage": "0.00",
                            "open_percentage": "15.55",
                            "opens": 15548,
                            "queue": 0,
                            "queue_percentage": "0.00",
                            "queued_total": 100000,
                            "sent": 100000,
                            "sent_percentage": "100.00",
                            "soft_bounce": 0,
                            "soft_bounce_percentage": "0.00",
                            "spam_complaints_count": 0,
                            "spam_complaints_percentage": "0.00",
                            "unsubscribe": 307,
                            "unsubscribe_percentage": "1.97"
                          },
                          "rule": {
                            "contacts_order": "first",
                            "limit": ""
                          },
                          "scheduled_date": {
                            "date": "2021-04-27 17:14:15",
                            "timezone": "Asia/Kolkata"
                          },
                          "sender": {
                            "sender_email": "joseph@mailercloud.com",
                            "sender_name": "Joseph Shan"
                          },
                          "start_date": "2021-04-27 11:47:04",
                          "status": "Finished",
                          "status_change_date": "2021-04-27 15:07:02",
                          "status_change_message": "",
                          "subject": "Amazon offers",
                          "tag": "Amazon offers",
                          "time_rule": {},
                          "type": "Normal campaign"
                        },
                        "1": {
                          "blacklisted_domains": {},
                          "broken_links": {},
                          "conversion_tracking": {},
                          "created_date": "2021-04-27 11:31:04",
                          "email_preheader": "How To Make Veg Pizza",
                          "finish_date": "2021-04-27 15:07:02",
                          "html": "",
                          "id": "BBBghIFI",
                          "modified_date": "2021-04-27 11:44:15",
                          "name": "Offer Of The Day",
                          "pause_rules": {},
                          "permission_reminder": "",
                          "plain_text": "",
                          "recepiant": {
                            "lists": "newsletter subscriber list",
                            "lists_contact_count": 100000,
                            "segments": "",
                            "segments_contact_count": 0,
                            "total_lists": 1
                          },
                          "reply_email": "joseph@mailercloud.com",
                          "report_abuse": true,
                          "report_summary": {
                            "abuse": 0,
                            "abuse_percentage": "0.00",
                            "clicks": 0,
                            "clicks_percentage": "0.00",
                            "conversions": 0,
                            "conversions_percentage": "0.00",
                            "delivered": 100000,
                            "delivered_percentage": "100.00",
                            "hard_bounce": 0,
                            "hard_bounce_percentage": "0.00",
                            "open_percentage": "15.55",
                            "opens": 15548,
                            "queue": 0,
                            "queue_percentage": "0.00",
                            "queued_total": 100000,
                            "sent": 100000,
                            "sent_percentage": "100.00",
                            "soft_bounce": 0,
                            "soft_bounce_percentage": "0.00",
                            "spam_complaints_count": 0,
                            "spam_complaints_percentage": "0.00",
                            "unsubscribe": 307,
                            "unsubscribe_percentage": "1.97"
                          },
                          "rule": {
                            "contacts_order": "first",
                            "limit": ""
                          },
                          "scheduled_date": {
                            "date": "2021-04-27 17:14:15",
                            "timezone": "Asia/Kolkata"
                          },
                          "sender": {
                            "sender_email": "joseph@mailercloud.com",
                            "sender_name": "Joseph Shan"
                          },
                          "start_date": "2021-04-27 11:47:04",
                          "status": "Finished",
                          "status_change_date": "2021-04-27 15:07:02",
                          "status_change_message": "",
                          "subject": "Pizza",
                          "tag": "Pizz noodles",
                          "time_rule": {},
                          "type": "Normal campaign"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "sort_order",
                        "message": "Invalid sort_order"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "campaignlist"
      }
    },
    "/campaign/schedule/{id}": {
      "post": {
        "description": "API for scheduling campaign. If the schedule_at  is not given, the campaign will schedule for the current time.\n\nSample code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/campaign/schedule/ujk\\\n  --header 'Authorization: Your API key' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"scheduled_at\": \"2021-04-17 15:48:00\"}'\n  \n```\n",
        "tags": [
          "Campaign"
        ],
        "summary": "Schedule Campaign",
        "parameters": [
          {
            "description": "Campaign Id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Your Api Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "scheduled_at": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Schedule time for your email campaign. Pass your timezone date-time format for accurate results.\n\nFormat: 2021-04-23 15:04:05"
                  }
                }
              }
            }
          },
          "description": " ",
          "required": true,
          "x-examples": {
            "example-1": {
              "scheduled_at": "2021-04-17 15:48:00"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "Campaign has been scheduled"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "scheduled_at",
                          "message": "scheduled_at does not match the YYYY-MM-DD hh:mm:ss format"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "schedule-campaign"
      }
    },
    "/campaign/testmail/{id}": {
      "post": {
        "description": "Send a test email.\n\nSample Code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/campaign/testmail/jkl\\\n  --header 'Authorization: Your API key' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"email\": \"joseph@mailercloud.com\"}'\n  \n```",
        "tags": [
          "Campaign"
        ],
        "summary": "Send a test email",
        "parameters": [
          {
            "description": "Campaign Id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Your Api Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          },
          "description": "body data",
          "required": true,
          "x-examples": {
            "example-1": {
              "email": "joseph@mailercloud.com"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "Test mail was successfully sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "email",
                          "message": "Email must be a valid email address"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "id",
                        "message": "Record not found with the given Id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "testmail"
      }
    },
    "/campaign/{id}": {
      "get": {
        "description": "Get the details of a single campaign.\n\n\nSample Code\n\n```\n\ncurl --request GET \\\n  --url https://cloudapi.mailercloud.com/v1/campaign/uyj \\\n  --header 'Authorization: Your API key'\n  \n  ```\n",
        "tags": [
          "Campaign"
        ],
        "summary": "Get single campaign details",
        "parameters": [
          {
            "description": "Campaign Id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Your Api Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "blacklisted_domains": {
                              "type": "object"
                            },
                            "broken_links": {
                              "type": "object"
                            },
                            "conversion_tracking": {
                              "type": "object"
                            },
                            "created_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "email_preheader": {
                              "type": "string",
                              "minLength": 1
                            },
                            "finish_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "html": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string",
                              "minLength": 1
                            },
                            "modified_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "name": {
                              "type": "string",
                              "minLength": 1
                            },
                            "pause_rules": {
                              "type": "object"
                            },
                            "permission_reminder": {
                              "type": "string"
                            },
                            "plain_text": {
                              "type": "string"
                            },
                            "recepiant": {
                              "type": "object",
                              "properties": {
                                "lists": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "lists_contact_count": {
                                  "type": "number"
                                },
                                "segments": {
                                  "type": "string"
                                },
                                "segments_contact_count": {
                                  "type": "number"
                                },
                                "total_lists": {
                                  "type": "number"
                                }
                              }
                            },
                            "reply_email": {
                              "type": "string",
                              "minLength": 1
                            },
                            "report_abuse": {
                              "type": "boolean"
                            },
                            "report_summary": {
                              "type": "object",
                              "properties": {
                                "abuse": {
                                  "type": "number"
                                },
                                "abuse_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "clicks": {
                                  "type": "number"
                                },
                                "clicks_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "conversions": {
                                  "type": "number"
                                },
                                "conversions_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "delivered": {
                                  "type": "number"
                                },
                                "delivered_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "hard_bounce": {
                                  "type": "number"
                                },
                                "hard_bounce_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "open_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "opens": {
                                  "type": "number"
                                },
                                "queue": {
                                  "type": "number"
                                },
                                "queue_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "queued_total": {
                                  "type": "number"
                                },
                                "sent": {
                                  "type": "number"
                                },
                                "sent_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "soft_bounce": {
                                  "type": "number"
                                },
                                "soft_bounce_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "spam_complaints_count": {
                                  "type": "number"
                                },
                                "spam_complaints_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "unsubscribe": {
                                  "type": "number"
                                },
                                "unsubscribe_percentage": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            },
                            "rule": {
                              "type": "object",
                              "properties": {
                                "contacts_order": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "limit": {
                                  "type": "string"
                                }
                              }
                            },
                            "scheduled_date": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "timezone": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            },
                            "sender": {
                              "type": "object",
                              "properties": {
                                "sender_email": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "sender_name": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            },
                            "start_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "status": {
                              "type": "string",
                              "minLength": 1
                            },
                            "status_change_date": {
                              "type": "string",
                              "minLength": 1
                            },
                            "status_change_message": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string",
                              "minLength": 1
                            },
                            "tag": {
                              "type": "string",
                              "minLength": 1
                            },
                            "time_rule": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "0": {
                          "blacklisted_domains": {},
                          "broken_links": {},
                          "conversion_tracking": {},
                          "created_date": "2021-04-27 11:31:04",
                          "email_preheader": "Save more on your Home & Kitchen shopping",
                          "finish_date": "2021-04-27 15:07:02",
                          "html": "",
                          "id": "BBBghIFI",
                          "modified_date": "2021-04-27 11:44:15",
                          "name": "Offer Of The Day",
                          "pause_rules": {},
                          "permission_reminder": "",
                          "plain_text": "",
                          "recepiant": {
                            "lists": "Subscriber list",
                            "lists_contact_count": 100000,
                            "segments": "",
                            "segments_contact_count": 0,
                            "total_lists": 1
                          },
                          "reply_email": "joseph@mailercloud.com",
                          "report_abuse": true,
                          "report_summary": {
                            "abuse": 0,
                            "abuse_percentage": "0.00",
                            "clicks": 0,
                            "clicks_percentage": "0.00",
                            "conversions": 0,
                            "conversions_percentage": "0.00",
                            "delivered": 100000,
                            "delivered_percentage": "100.00",
                            "hard_bounce": 0,
                            "hard_bounce_percentage": "0.00",
                            "open_percentage": "15.55",
                            "04\"": null,
                            "status": "Finished",
                            "opens": 15548,
                            "queue": 0,
                            "queue_percentage": "0.00",
                            "queued_total": 100000,
                            "sent": 100000,
                            "sent_percentage": "100.00",
                            "soft_bounce": 0,
                            "soft_bounce_percentage": "0.00",
                            "spam_complaints_count": 0,
                            "spam_complaints_percentage": "0.00",
                            "unsubscribe": 307,
                            "unsubscribe_percentage": "1.97"
                          },
                          "rule": {
                            "contacts_order": "first",
                            "limit": ""
                          },
                          "scheduled_date": {
                            "date": "2021-04-27 17:14:15",
                            "timezone": "Asia/Kolkata"
                          },
                          "sender": {
                            "sender_email": "joseph@mailercloud.com",
                            "sender_name": "Joseph Shan"
                          },
                          "start_date": "2021-04-27 11:47:04",
                          "status": "Finished",
                          "status_change_date": "2021-04-27 15:07:02",
                          "status_change_message": "",
                          "subject": "Amazon offers",
                          "tag": "Amazon offers",
                          "time_rule": {},
                          "type": "Normal campaign"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "string",
                        "message": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "campaign-details"
      },
      "put": {
        "description": "API for updating the campaign. Can't change or edit the list, segments,pause_rule, rules for the campaigns in sending status. Pause the campaign to edit the scheduled date.\n\nSample Code\n\n```\ncurl --request PUT \\\n  --url https://cloudapi.mailercloud.com/v1/campaign/fhg \\\n  --header 'Authorization: Your API key' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"html\": \"<html><body> Sample HTML  </body></html>\",\"list_ids\": [\"sCVJ\"],\"name\": \"Campaign name\",\n  \"sender\": {\"sender_email\": \"michael@mailercloud.com\",\"sender_name\": \"Michael\"},\"scheduled_at\": \n   \"2021-04-17 15:48:00\",\"subject\": \"Prime member notification.\"}'\n  \n```",
        "tags": [
          "Campaign"
        ],
        "summary": "Update Campaign",
        "parameters": [
          {
            "description": "Campaign Id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Your Api Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "email_preheader": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Email preheader is the summary text that follows a subject line when the email is viewed in an inbox. In many cases, itâ€™s used to provide a short summary of the email, and is typically one sentence long.\n\nMinimum: 3\n\nMaximum: 150"
                  },
                  "html": {
                    "type": "string",
                    "minLength": 1,
                    "description": "HTML template content for your email campaign."
                  },
                  "list_ids": {
                    "type": "array",
                    "description": "Recipients of your email campaign.",
                    "items": {
                      "type": "string",
                      "description": "Contact list id. Before setting list id please check your contact count in list."
                    }
                  },
                  "mailing_preference": {
                    "type": "boolean",
                    "description": "true -  Mailing preference option will be displayed in footer of email campaign template.\n\nfalse - Mailing preference option will not be dispalyed."
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the campaign.\n\nMinimum: 3\n\nMaximum: 150"
                  },
                  "pause_rules": {
                    "type": "object",
                    "description": "Optional\n\nIf you want to set a rule for sending a campaign, use this option. Based on the configured rule, the campaign will be sent.",
                    "properties": {
                      "pause_condition": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Rule for setting open or click percentage greater than or less than pause target.\n\nSupported pause_condition - greater than, less than"
                      },
                      "pause_criteria": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Supported pause_criteria - open, click"
                      },
                      "pause_limit": {
                        "type": "number",
                        "description": "The percentage of list contacts to which we want to send campaigns first. In the order we set in rules.\n\nMinimum: 1\n\nMaximum: 50"
                      },
                      "pause_target": {
                        "type": "number",
                        "description": "After achieving pause condition how many percentage of subscribers we have to send campaign.\n\nMinimum: 1\n\nMaximum: 100"
                      },
                      "wait_time": {
                        "type": "number",
                        "description": "After getting click rate or open rate grater than or less than pause limit , How many time we have to wait to send campaign to other contacts in the list.\n\nWait time in minutes .\n\nMinimum: 1\n\nMaximum: 43200"
                      }
                    }
                  },
                  "permission_reminder": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The permission reminder content in your email campaign. If you want give unsubscribe link give %%unsubscribe%%\n\nMinimum: 3\n\nMaximum: 150"
                  },
                  "plain_text": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Plain text content of your email campaign."
                  },
                  "reply_email": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Email on which the campaign recipients will be able to reply to. If replay_email empty then sender email will be the reply email "
                  },
                  "report_spam": {
                    "type": "boolean",
                    "description": "Spam reporting enable or disable. "
                  },
                  "rules": {
                    "type": "object",
                    "description": "Supported contacts_order : first, last.",
                    "properties": {
                      "contacts_order": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The order of contact list in which you want to send your email campaign.\n\nSupported: first,last"
                      },
                      "limit": {
                        "type": "number",
                        "description": "count of subscribers in list to which campaign sends based on the contacts_order. "
                      }
                    }
                  },
                  "scheduled_at": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Schedule time for your email campaign. Pass your timezone date-time format for accurate results.\n\nFormat: 2021-04-23 15:04:05"
                  },
                  "segments": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Your recipient segment id."
                  },
                  "sender": {
                    "type": "object",
                    "description": "",
                    "properties": {
                      "sender_email": {
                        "type": "string",
                        "minLength": 1,
                        "description": "From email for your email campaign."
                      },
                      "sender_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "From name for email campaign.\n\nMaximum: 100"
                      }
                    }
                  },
                  "subject": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Subject of the campaign.\n\nMinimum: 3\n\nMaximum: 150"
                  },
                  "viewin_browser": {
                    "type": "boolean",
                    "description": "true: Enable the \"View this email in your browser\"  in Campaign preview page.\n\nfalse: Disable the \"View this email in your browser\"  in Campaign preview page."
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "email_preheader": "Prime member: You have an unused Prime benefit",
              "html": "<html><body> Edited Sample HTML  </body></html>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "Campaign has been updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "string",
                        "message": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "update-campaign"
      }
    },
    "/contact/property": {
      "post": {
        "description": "API for creating custom property of contacts. Custom properties store specific information for contact records in Mailercloud. You are allowed to create a maximum of 100 properties.\n\nSample Code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/contact/property \\\n  --header 'Authorization: Your API key' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"description\":\"Contact Gender\",\"name\":\"Gender\",\"type\":\"text\"}'\n  \n```",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description for your property\n\nMinimum: 3\n \nMaximum: 500 ",
                    "minLength": 3,
                    "maxLength": 500
                  },
                  "name": {
                    "type": "string",
                    "description": "Your name for your property \n\nMinimum: 3\n \nMaximum: 30 ",
                    "minLength": 3,
                    "maxLength": 30
                  },
                  "type": {
                    "type": "string",
                    "description": "Your property type\n \n supported types\n  \n text,number,date,textarea"
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "description": "string",
              "name": "string",
              "type": "string"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "xyz"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "field",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "name",
                        "message": "The name field must be at least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create property",
        "tags": [
          "Custom property"
        ],
        "operationId": "create-custom-field"
      }
    },
    "/contact/property/{id}": {
      "delete": {
        "description": "API for deleting custom property of contacts. If the property is used in a webform you won't be able to delete it.\n\nSample Code\n\n```\ncurl --request DELETE \\\n  --url https://cloudapi.mailercloud.com/v1/contact/property/yui \\\n  --header 'Authorization: Your API key here'\n\n```",
        "parameters": [
          {
            "description": "Custom property Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "Custom property deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "example-1": {
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete property",
        "tags": [
          "Custom property"
        ],
        "operationId": "delete-property"
      },
      "patch": {
        "description": "API for updating custom property of contacts. Editing custom property type using this API is not possible. You can only edit the name and description.\n\nSample Code\n\n```\n\ncurl --request PATCH \\\n  --url https://cloudapi.mailercloud.com/v1/contact/property/yuh \\\n  --header 'Authorization: Your API key here' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"description\":\"Second address for your contact\",\"name\":\"second address\"}'\n  \n```",
        "parameters": [
          {
            "description": "Custom Property Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description for your property\n\nMinimum: 3\n \nMaximum: 500 ",
                    "minLength": 3,
                    "maxLength": 500
                  },
                  "name": {
                    "type": "string",
                    "description": "Your name for your property \n\nMinimum: 3\n \nMaximum: 30 ",
                    "minLength": 3,
                    "maxLength": 30
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "description": "Gender of your contact",
              "name": "Gender"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "YCJ"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "field",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "name",
                        "message": "The name field must be at least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update property",
        "tags": [
          "Custom property"
        ],
        "operationId": "update-custom-field"
      }
    },
    "/contact/property/search": {
      "post": {
        "description": "Using this API, you can list all the properties of your contacts in your Mailercloud account. You can also make segments based on these properties\n\nSample Code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/contact/property/search \\\n  --header 'Authorization: Your API key here' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"limit\":10,\"page\":1,\"search\":\"\"}'\n```",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "number",
                    "description": "Maximum number of elements to return. \n\nMaximum: 100\nMinimum: 10",
                    "minimum": 10,
                    "maximum": 100
                  },
                  "page": {
                    "type": "number",
                    "description": "You can retrieve a subset of records starting from the page value you have specified. You can add a limit, which will determine the number of records you can retrieve on a single page.\n\nStarts From: 1"
                  },
                  "search": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter property list by name , giving name as search keyword "
                  },
                  "type": {
                    "type": "string",
                    "description": "Filter property based on type.\n \nAvailable types - default,custom"
                  }
                },
                "required": [
                  "limit",
                  "page"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "limit": 0,
              "page": 0,
              "search": "string",
              "type": "string"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field_description",
                          "field_name",
                          "field_type",
                          "field_value",
                          "id",
                          "is_default"
                        ],
                        "properties": {
                          "field_description": {
                            "type": "string",
                            "minLength": 1
                          },
                          "field_name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "field_type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "field_value": {
                            "type": "string",
                            "minLength": 1
                          },
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "is_default": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "count",
                    "data"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "count": 20,
                      "data": [
                        {
                          "field_description": "Created via webform as a template property.",
                          "field_name": "Message",
                          "field_type": "Textarea",
                          "field_value": "message",
                          "id": "dcK",
                          "is_default": 0
                        },
                        {
                          "field_description": "",
                          "field_name": "Countryin",
                          "field_type": "Text",
                          "field_value": "countryin",
                          "id": "szB",
                          "is_default": 0
                        },
                        {
                          "field_description": "IP address of the subscriber",
                          "field_name": "IP",
                          "field_type": "Text",
                          "field_value": "userip",
                          "id": "Bg",
                          "is_default": 1
                        },
                        {
                          "field_description": "Lead source",
                          "field_name": "Lead source",
                          "field_type": "Text",
                          "field_value": "lead_source",
                          "id": "BF",
                          "is_default": 1
                        },
                        {
                          "field_description": "Salary of the subscriber",
                          "field_name": "Salary",
                          "field_type": "Number",
                          "field_value": "salary",
                          "id": "kv",
                          "is_default": 1
                        },
                        {
                          "field_description": "Job of the subscriber",
                          "field_name": "Job title",
                          "field_type": "Text",
                          "field_value": "job_title",
                          "id": "Ku",
                          "is_default": 1
                        },
                        {
                          "field_description": "Department of the subscriber",
                          "field_name": "Department",
                          "field_type": "Text",
                          "field_value": "department",
                          "id": "bC",
                          "is_default": 1
                        },
                        {
                          "field_description": "Organization of the subscriber",
                          "field_name": "Organization",
                          "field_type": "Text",
                          "field_value": "organization",
                          "id": "kb",
                          "is_default": 1
                        }
                      ]
                    }
                  }
                }
              },
              "example-2": {
                "examples": {
                  "response": {
                    "value": {
                      "count": 0,
                      "data": [
                        {
                          "field_description": "string",
                          "field_name": "string",
                          "field_type": "string",
                          "field_value": "string",
                          "id": "string",
                          "is_default": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Invalid input"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "List property",
        "tags": [
          "Custom property"
        ],
        "operationId": "get-custom-field"
      }
    },
    "/contact/search/{id}": {
      "post": {
        "description": "You can collect all your contacts on a single list.\n\nSample Code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/contact/search/yhn \\\n  --header 'Authorization: ' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"limit\":10,\"page\":1,\"search\":\"\"}'\n\n```",
        "parameters": [
          {
            "description": "List id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "number",
                    "description": "Maximum number of elements to return. \n\nMaximum: 100\nMinimum: 10",
                    "minimum": 10,
                    "maximum": 100
                  },
                  "page": {
                    "type": "number",
                    "description": "You can retrieve a subset of records starting from the page value you have specified. You can add a limit, which will determine the number of records you can retrieve on a single page.\n\nStarts From: 1"
                  },
                  "search": {
                    "type": "string",
                    "description": "Filter contact list by name , giving name as search keyword "
                  }
                },
                "required": [
                  "limit",
                  "page"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "limit": 10,
              "page": 1,
              "search": "string"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        },
                        "custom_fields": {
                          "type": "object"
                        },
                        "department": {
                          "type": "string",
                          "minLength": 1
                        },
                        "dob": {
                          "type": "string",
                          "minLength": 1
                        },
                        "email": {
                          "type": "string",
                          "minLength": 1
                        },
                        "firstname": {
                          "type": "string",
                          "minLength": 1
                        },
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "industry": {
                          "type": "string",
                          "minLength": 1
                        },
                        "job_title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "last_name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "lead_source": {
                          "type": "string",
                          "minLength": 1
                        },
                        "middle_name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "organization": {
                          "type": "string",
                          "minLength": 1
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1
                        },
                        "salary": {
                          "type": "string",
                          "minLength": 1
                        },
                        "state": {
                          "type": "string",
                          "minLength": 1
                        },
                        "user_ip": {
                          "type": "string",
                          "minLength": 1
                        },
                        "zip": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "count": 0,
                      "data": {
                        "city": "string",
                        "country": "string",
                        "custom_fields": {},
                        "department": "string",
                        "dob": "string",
                        "email": "string",
                        "firstname": "string",
                        "id": "string",
                        "industry": "string",
                        "job_title": "string",
                        "last_name": "string",
                        "lead_source": "string",
                        "middle_name": "string",
                        "name": "string",
                        "organization": "string",
                        "phone": "string",
                        "salary": "string",
                        "state": "string",
                        "user_ip": "string",
                        "zip": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Invalid input"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get contacts in a list",
        "tags": [
          "Contacts"
        ],
        "operationId": "get-contact-list"
      }
    },
    "/contacts/{id}": {
      "delete": {
        "description": "Delete a contact based on their ID\n\nSample Code\n\n```\ncurl --request DELETE \\\n  --url https://cloudapi.mailercloud.com/v1/contacts/id \\\n  --header 'Authorization: Yor API key here'\n  \n```",
        "parameters": [
          {
            "description": "Contact id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "Contact deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete contact",
        "tags": [
          "Contacts"
        ],
        "operationId": "contact-delete"
      },
      "get": {
        "description": "Get contact details based on their ID\n\nSample Code\n\n```\ncurl --request GET \\\n  --url https://cloudapi.mailercloud.com/v1/contacts/id \\\n  --header 'Authorization: Your API Key here'\n\n```",
        "parameters": [
          {
            "description": "Contact id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "city",
                        "country",
                        "custom_fields",
                        "department",
                        "dob",
                        "email",
                        "firstname",
                        "id",
                        "industry",
                        "job_title",
                        "last_name",
                        "lead_source",
                        "list_id",
                        "middle_name",
                        "name",
                        "organization",
                        "phone",
                        "salary",
                        "state",
                        "user_ip",
                        "zip"
                      ],
                      "properties": {
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        },
                        "custom_fields": {
                          "type": "object"
                        },
                        "department": {
                          "type": "string",
                          "minLength": 1
                        },
                        "dob": {
                          "type": "string",
                          "minLength": 1
                        },
                        "email": {
                          "type": "string",
                          "minLength": 1
                        },
                        "firstname": {
                          "type": "string",
                          "minLength": 1
                        },
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "industry": {
                          "type": "string",
                          "minLength": 1
                        },
                        "job_title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "last_name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "lead_source": {
                          "type": "string",
                          "minLength": 1
                        },
                        "list_id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "middle_name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "organization": {
                          "type": "string",
                          "minLength": 1
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1
                        },
                        "salary": {
                          "type": "string",
                          "minLength": 1
                        },
                        "state": {
                          "type": "string",
                          "minLength": 1
                        },
                        "user_ip": {
                          "type": "string",
                          "minLength": 1
                        },
                        "zip": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get contact details",
        "tags": [
          "Contacts"
        ],
        "operationId": "get-contact-details"
      },
      "put": {
        "description": "Update contact details based on identifier (Email ID OR contact ID) using this API. However, you can't update the list ID and email.\n\nSample Code\n\n```\ncurl --request PUT \\\n  --url https://cloudapi.mailercloud.com/v1/contacts/{identifier} \\\n  --header 'Authorization: Your API key' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"zip\":\"787878\"}'\n\n```",
        "parameters": [
          {
            "description": "Contact Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string",
                    "description": "The city of the contact\n\nMaximum: 100 ",
                    "maxLength": 100
                  },
                  "country": {
                    "type": "string",
                    "description": "The country of the contact\n\nMaximum: 50",
                    "maxLength": 50
                  },
                  "custom_fields": {
                    "type": "object",
                    "description": "Json for custom property\n \nText - maximum: 100\n\nTextarea - maximum: 500\n\nNumber - Numeric values only\n\nDate - maximum: 10,format = 2006-01-02 ",
                    "required": [
                      "enc_id1",
                      "enc_id2"
                    ],
                    "properties": {
                      "enc_id1": {
                        "type": "string",
                        "minLength": 1,
                        "description": " property id : value of property"
                      },
                      "enc_id2": {
                        "type": "number",
                        "description": " property id : value of property"
                      }
                    }
                  },
                  "department": {
                    "type": "string",
                    "description": "The department of contact\n\nMaximum: 100",
                    "maxLength": 100
                  },
                  "industry": {
                    "type": "string",
                    "description": "The industry of the contact\n\nMaximum: 100",
                    "maxLength": 100
                  },
                  "job_title": {
                    "type": "string",
                    "description": "The job title of the contact \n\nMaximum: 100",
                    "maxLength": 100
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The last name for the contact\n\nMaximum: 25",
                    "maxLength": 25
                  },
                  "lead_source": {
                    "type": "string",
                    "description": "The lead sorce of contact\n\nMaximum: 50",
                    "maxLength": 50
                  },
                  "middle_name": {
                    "type": "string",
                    "description": "The middle name of contact\n\nMaximum: 25",
                    "maxLength": 25
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of your contact\n\nMaximum: 25",
                    "maxLength": 25
                  },
                  "organization": {
                    "type": "string",
                    "description": "The organization of your contact\n\nMaximum: 150",
                    "maxLength": 150
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone number of your contact\n\nMaximum: 25",
                    "maxLength": 25
                  },
                  "salary": {
                    "type": "number",
                    "description": "The salary of your contact\n\nMaximum: 30"
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of your contact\n\nMaximum: 100",
                    "maxLength": 100
                  },
                  "zip": {
                    "type": "string",
                    "description": "The zip of your contact\n\nMaximum: 25",
                    "maxLength": 25
                  },
                  "contact_type": {
                    "type": "string",
                    "description": "Allowed values - active, bounce, abuse, unsubscribe, suppressed, spam complaints"
                  },
                  "": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "city": "string",
              "country": "string",
              "custom_fields": {
                "xyz": "string",
                "ncx": 0
              },
              "department": "string",
              "industry": "string",
              "job_title": "string",
              "last_name": "string",
              "lead_source": "string",
              "middle_name": "string",
              "name": "string",
              "organization": "string",
              "phone": "string",
              "salary": 0,
              "state": "string",
              "zip": "string"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "Contact updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "name",
                        "message": "Invalid name"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update Contact",
        "tags": [
          "Contacts"
        ],
        "operationId": "update-contact"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contacts": {
      "post": {
        "description": "API for creating contact. For creating a contact, email and list id is required. If you try to create a contact that alreay exists, it gives an \"already exists\" message . You can add custom property data by mapping the property id : value. You can add contacts until your contact quota limit is reached. If you create a contact in a suppressed list and if this contact is also present in the active list,  the contact will be removed from the active list to the suppressed list.\n\nSample Code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/contacts \\\n  --header 'Authorization: Your API key here' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"city\":\"Calicut\",\"country\":\"India\",\"custom_fields\":{\"fgh\":\"Female\"},\"email\":\"sampleemail@gmail.com\",\"list_id\":\"ikl\",\"name\":\"Manu\"}'\n\n```",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string",
                    "description": "The city of the contact\n\nMaximum: 100 ",
                    "maxLength": 100
                  },
                  "country": {
                    "type": "string",
                    "description": "The country of the contact\n\nMaximum: 50",
                    "maxLength": 50
                  },
                  "custom_fields": {
                    "type": "object",
                    "description": "Json for custom property\n \nText - maximum: 100\n\nTextarea - maximum: 500\n\nNumber - Numeric values only\n\nDate - maximum: 10,format = 2006-01-02 ",
                    "properties": {
                      "enc_id1": {
                        "type": "string",
                        "minLength": 1,
                        "description": " property id : value of property\n string can store upto 100 characters"
                      },
                      "enc_id2": {
                        "type": "number",
                        "description": " property id : value of property\n Number field can store numbers with 30 characters long"
                      }
                    }
                  },
                  "department": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The department of contact\n\nMaximum: 100"
                  },
                  "email": {
                    "type": "string",
                    "maxLength": 200,
                    "description": "The email for the contact. This is required to be a valid email.\n\nMaximum: 200"
                  },
                  "industry": {
                    "type": "string",
                    "description": "The industry of the contact\n\nMaximum: 100",
                    "maxLength": 100
                  },
                  "job_title": {
                    "type": "string",
                    "description": "The job title of the contact \n\nMaximum: 100",
                    "maxLength": 100
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The last name for the contact\n\nMaximum: 25",
                    "maxLength": 25
                  },
                  "lead_source": {
                    "type": "string",
                    "description": "The lead sorce of contact\n\nMaximum: 50",
                    "maxLength": 50
                  },
                  "list_id": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The contact list id to which you want to add this contact"
                  },
                  "middle_name": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "The middle name of contact\n\nMaximum: 25"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 25,
                    "description": "Name of your contact\n\nMaximum: 25"
                  },
                  "organization": {
                    "type": "string",
                    "description": "The organization of your contact\n\nMaximum: 150",
                    "maxLength": 150
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The phone number of your contact\n\nMaximum: 25"
                  },
                  "salary": {
                    "type": "number",
                    "description": "The salary of your contact\n\nMaximum: 30"
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of your contact\n\nMaximum: 100",
                    "maxLength": 100
                  },
                  "zip": {
                    "type": "string",
                    "description": "The zip of your contact\n\nMaximum: 25",
                    "maxLength": 25
                  },
                  "contact_type": {
                    "type": "string",
                    "description": "Allowed values - active, bounce, abuse, unsubscribe, suppressed, spam complaints\n\nDefault: active",
                    "default": "active"
                  }
                },
                "required": [
                  "email",
                  "list_id"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "city": "string",
              "country": "string",
              "custom_fields": {
                "enc_id1": "string",
                "enc_id2": 0
              },
              "department": "string",
              "email": "string",
              "industry": "string",
              "job_title": "string",
              "last_name": "string",
              "lead_source": "string",
              "list_id": "string",
              "middle_name": "string",
              "name": "string",
              "organization": "string",
              "phone": "string",
              "salary": 0,
              "state": "string",
              "zip": "string",
              "contact_type": "active"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "xc"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "email",
                        "message": "Invalid email"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create Contact",
        "tags": [
          "Contacts"
        ],
        "operationId": "create-contact"
      },
      "parameters": []
    },
    "/list": {
      "post": {
        "description": "Your Mailercloud list, also known as your recipient, is where you store and manage all of your contacts.\n \n Sample Code\n \n ```\n curl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/list \\\n  --header 'Authorization: Your API key here' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"list_type\":1,\"name\":\"Active email list\"}'\n  ```",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "list_type": {
                    "type": "number",
                    "description": "Your List type .\n\nAvailable Choices\n\nNormal List: 1",
                    "default": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Your List name. \nOnly alphanumeric characters, underscore, hyphen, dot and space allowed.\n\nMinimum: 3\nMaximum: 100",
                    "minLength": 3,
                    "maxLength": 100,
                    "pattern": "^[a-zA-Z0-9._ \\-]+$/i"
                  }
                },
                "required": [
                  "list_type",
                  "name"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "list_type": 1,
              "name": "Email subscription-list"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "xyz"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "name",
                        "message": "The name field must be at least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create a new list",
        "tags": [
          "List"
        ],
        "operationId": "create-list"
      }
    },
    "/contacts/batch": {
      "post": {
        "description": "Create a  Batch contact. You can create a maximum of 50 contact through this API.\n\nSample Code\n\n```\ncurl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/contacts/batch \\\n  --header 'Authorization: Your API key here' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"contacts\":[{\"city\":\"Calicut\",\"country\":\"India\",\"custom_fields\":{\"fgh\":\"Female\"},\"email\":\"sampleemail@gmail.com\",\"list_id\":\"ikl\",\"name\":\"Manu\"}]\n  ,\"list_id\":\"string\"}'\n\n```",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "contacts": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "maxItems": 50,
                    "description": "Batches of contact",
                    "items": {
                      "type": "object",
                      "properties": {
                        "city": {
                          "type": "string",
                          "description": "The city of the contact\n\nMaximum: 100",
                          "maxLength": 100
                        },
                        "country": {
                          "type": "string",
                          "description": "The country of the contact\n\nMaximum: 50",
                          "maxLength": 50
                        },
                        "custom_fields": {
                          "type": "object",
                          "description": "Json for custom property\n \nText - maximum: 100\n\nTextarea - maximum: 500\n\nNumber - Numeric values only\n\nDate - maximum: 10,format = 2006-01-02 ",
                          "properties": {
                            "enc_id1": {
                              "type": "string",
                              "minLength": 1,
                              "description": "property id : value of property"
                            },
                            "enc_id2": {
                              "type": "number",
                              "description": "property id : value of property"
                            }
                          }
                        },
                        "department": {
                          "type": "string",
                          "description": "The department of contact\n\nMaximum: 100",
                          "maxLength": 100
                        },
                        "email": {
                          "type": "string",
                          "description": "The email for the contact. This is required to be a valid email.\n\nMaximum: 200",
                          "maxLength": 200
                        },
                        "industry": {
                          "type": "string",
                          "description": "The industry of the contact\n\nMaximum: 100",
                          "maxLength": 100
                        },
                        "job_title": {
                          "type": "string",
                          "description": "The job title of the contact \n\nMaximum: 100",
                          "maxLength": 100
                        },
                        "last_name": {
                          "type": "string",
                          "description": "The last name for the contact\n\nMaximum: 25",
                          "maxLength": 25
                        },
                        "lead_source": {
                          "type": "string",
                          "description": "The lead sorce of contact\n\nMaximum: 50",
                          "maxLength": 50
                        },
                        "middle_name": {
                          "type": "string",
                          "description": "The middle name of contact\n\nMaximum: 25",
                          "maxLength": 25
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of your contact\n\nMaximum: 25",
                          "maxLength": 25
                        },
                        "organization": {
                          "type": "string",
                          "description": "The organization of your contact\n\nMaximum: 150",
                          "maxLength": 150
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone number of your contact\n\nMaximum: 25",
                          "maxLength": 25
                        },
                        "salary": {
                          "type": "number",
                          "description": "The salary of your contact\n\nMaximum: 30"
                        },
                        "state": {
                          "type": "string",
                          "description": "The state of your contact\n\nMaximum: 100",
                          "maxLength": 100
                        },
                        "zip": {
                          "type": "string",
                          "description": "The zip of your contact\n\nMaximum: 25",
                          "maxLength": 25
                        },
                        "contact_type": {
                          "type": "string",
                          "description": "Allowed values - active, bounce, abuse, unsubscribe, suppressed, spam complaints\n\nDefault: active",
                          "default": "active"
                        }
                      },
                      "required": [
                        "email"
                      ]
                    }
                  },
                  "list_id": {
                    "type": "string",
                    "description": "The contact list id to which you want to add this contact"
                  }
                },
                "required": [
                  "contacts",
                  "list_id"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "contacts": [
                {
                  "city": "string",
                  "country": "string",
                  "custom_fields": {
                    "enc_id1": "string",
                    "enc_id2": 0
                  },
                  "department": "string",
                  "email": "string",
                  "industry": "string",
                  "job_title": "string",
                  "last_name": "string",
                  "lead_source": "string",
                  "middle_name": "string",
                  "name": "string",
                  "organization": "string",
                  "phone": "string",
                  "salary": 0,
                  "state": "string",
                  "zip": "string"
                }
              ],
              "list_id": "string"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "inserted": {
                          "type": "number"
                        },
                        "skipped": {
                          "type": "number"
                        },
                        "submitted": {
                          "type": "number"
                        },
                        "updated": {
                          "type": "number"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "inserted": 2,
                        "skipped": 1,
                        "submitted": 3,
                        "updated": 0
                      },
                      "message": "Batch contacts processed"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "email",
                        "message": "Invalid email"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create Batch Contact",
        "tags": [
          "Contacts"
        ],
        "operationId": "batch-insert"
      }
    },
    "/list/{id}": {
      "delete": {
        "description": "This API deletes a specific list by id. However, you can't delete your list if its used in an active campaign , active automation or in an active webform .\n\nSample Code\n\n```\ncurl --request DELETE \\\n  --url https://cloudapi.mailercloud.com/v1/list/WAWU \\\n  --header 'Authorization: Your API key here'\n\n```",
        "parameters": [
          {
            "description": "List Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "List deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete a list",
        "tags": [
          "List"
        ],
        "operationId": "delete-list"
      },
      "get": {
        "description": "Get single list details based on id.\n\nSample Code\n\n```\ncurl --request GET \\\n  --url https://cloudapi.mailercloud.com/v1/list/WAWU \\\n  --header 'Authorization: Your API key here.'  \n```",
        "parameters": [
          {
            "description": "List Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "contact_count": {
                          "type": "number"
                        },
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "list_status": {
                          "type": "string",
                          "minLength": 1
                        },
                        "list_type": {
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "open_percentage": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "contact_count",
                        "id",
                        "list_status",
                        "list_type",
                        "name",
                        "open_percentage"
                      ]
                    }
                  },
                  "required": [
                    "count",
                    "data"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "count": 10,
                      "data": {
                        "contact_count": 1000,
                        "id": "xze",
                        "list_status": "Waiting for approval",
                        "list_type": "Normal List",
                        "name": "Email subscription-list",
                        "open_percentage": 50
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              },
              "example-2": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "string",
                          "message": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get single list details",
        "tags": [
          "List"
        ],
        "operationId": "list-details-fetch"
      },
      "patch": {
        "description": "Update the details of a specific list by id. However, you can only update the names using this API\n\nSample Code\n\n```\ncurl --request PATCH \\\n  --url https://cloudapi.mailercloud.com/v1/list/WAWU \\\n  --header 'Authorization: curl --request GET \\   --url https://cloudapi.mailercloud.com/v1/list/WAWU \\   --header '\\''Authorization: Your API key here'\\''' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"name\":\"string\"}'\n```",
        "parameters": [
          {
            "description": "List Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "description": "Your List name. \nOnly alphanumeric characters, underscore, hyphen, dot and space allowed.\n\nMinimum: 3\nMaximum: 100",
                    "maxLength": 100,
                    "pattern": "^[a-zA-Z0-9._ \\-]+$/i"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "name": "Subscibers List"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "listdetails": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "list_type": {
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "id",
                        "list_type",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "listdetails"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "listdetails": {
                        "id": "HHda",
                        "list_type": "Normal",
                        "name": "List Registration"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "name",
                          "message": "Only alphanumeric characters, underscore, hyphen, dot and space allowed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "field",
                          "message"
                        ],
                        "properties": {
                          "field": {
                            "type": "string",
                            "minLength": 1
                          },
                          "message": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "id",
                          "message": "Record not found with the given Id"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update a list",
        "tags": [
          "List"
        ],
        "operationId": "update-list"
      }
    },
    "/lists/search": {
      "post": {
        "description": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Use this API to return an array of all of your contact lists. You can filter, search  and sort list.\n \n Sample Code\n \n ```\n curl --request POST \\\n  --url https://cloudapi.mailercloud.com/v1/lists/search \\\n  --header 'Authorization: Your API key here' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\"limit\":10,\"list_type\":1,\"page\":1,\"search_name\":\"\",\"sort_field\":\"name\",\"sort_order\":\"asc\"}'\n \n ```",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request body type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "number",
                    "description": "Maximum number of elements to return. \n\nMaximum: 100\nMinimum: 10",
                    "minimum": 10,
                    "maximum": 100
                  },
                  "list_type": {
                    "type": "number",
                    "description": "Your List type .\n\nAvailable Choices\n\nNormal List: 1"
                  },
                  "page": {
                    "type": "number",
                    "description": "You can retrieve a subset of records starting from the page value you have specified. You can add a limit, which will determine the number of records you can retrieve on a single page.\n\nStarts From: 1",
                    "maximum": 3
                  },
                  "search_name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter list by name , giving name in search keyword "
                  },
                  "sort_field": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Sort list data based on this field\n\nAvailable sort fields\n\nname,contact_count,open_percentage"
                  },
                  "sort_order": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Sorting order for sort field\n\nAvailable sort orders\n \nasc, ASC, desc, DESC "
                  }
                },
                "required": [
                  "limit",
                  "list_type",
                  "page"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "limit": 10,
              "list_type": 1,
              "page": 1,
              "search_name": "subscription",
              "sort_field": "name",
              "sort_order": "asc"
            },
            "example-2": {
              "limit": 10,
              "page": 10
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "contact_count": {
                          "type": "number"
                        },
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "list_status": {
                          "type": "string",
                          "minLength": 1
                        },
                        "list_type": {
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "open_percentage": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "count": 100,
                      "data": {
                        "contact_count": 100,
                        "id": "ws",
                        "list_status": "Updating",
                        "list_type": "Normal List",
                        "name": "Subscription list",
                        "open_percentage": 50
                      }
                    }
                  }
                }
              },
              "example-2": {
                "examples": {
                  "response": {
                    "value": {
                      "data": {
                        "0": {
                          "contact_count": "1",
                          "id": "hXUA",
                          "list_status": "Updating",
                          "list_type": "Normal",
                          "name": "List Registration",
                          "open_percentage": "0.00"
                        },
                        "1": {
                          "contact_count": "0",
                          "id": "YxGF",
                          "list_status": "Uploading",
                          "list_type": "Normal",
                          "name": "Form 1",
                          "open_percentage": "0.00"
                        },
                        "2": {
                          "contact_count": "2",
                          "id": "xhef",
                          "list_status": "Waiting for approval",
                          "list_type": "Normal",
                          "name": "sample 2 updated",
                          "open_percentage": "0.00"
                        },
                        "3": {
                          "contact_count": "1",
                          "id": "ixss",
                          "list_status": "Verifying",
                          "list_type": "Normal",
                          "name": "uptest up test on",
                          "open_percentage": "0.00"
                        },
                        "4": {
                          "contact_count": "1",
                          "id": "yFXf",
                          "list_status": "Verifying",
                          "list_type": "Normal",
                          "name": "list f updated",
                          "open_percentage": "0.00"
                        },
                        "5": {
                          "contact_count": "0",
                          "id": "IXCa",
                          "list_status": "",
                          "list_type": "Normal",
                          "name": "test ddd List-23 Feb 2021 04.22 PM",
                          "open_percentage": "0.00"
                        },
                        "6": {
                          "contact_count": "0",
                          "id": "iFfF",
                          "list_status": "Verifying new contacts",
                          "list_type": "Normal",
                          "name": "string nnnnn",
                          "open_percentage": "0.00"
                        },
                        "7": {
                          "contact_count": "0",
                          "id": "iFEh",
                          "list_status": "Verifying new contacts",
                          "list_type": "Normal",
                          "name": "string",
                          "open_percentage": "0.00"
                        },
                        "8": {
                          "contact_count": "0",
                          "id": "yDJX",
                          "list_status": "Verifying new contacts",
                          "list_type": "Normal",
                          "name": "lucky list                 ",
                          "open_percentage": "0.00"
                        },
                        "9": {
                          "contact_count": "0",
                          "id": "iDXJ",
                          "list_status": "Verifying new contacts",
                          "list_type": "Normal",
                          "name": "lucksy renamed 1",
                          "open_percentage": "0.00"
                        }
                      },
                      "list_count": 56
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "field": "sort_order",
                        "message": "Invalid sort_order"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "field": "",
                          "message": "Authorization failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get all list and search list",
        "tags": [
          "List"
        ],
        "operationId": "list-search"
      }
    },
    "/segment/search": {
      "post": {
        "description": "List all your created segments.",
        "tags": [
          "Segment"
        ],
        "summary": "List segment",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Your Api Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "number",
                    "description": "Maximum number of elements to return.\n\nMaximum: 100 Minimum: 10"
                  },
                  "page": {
                    "type": "number",
                    "description": "You can retrieve a subset of records starting from the page value you have specified. You can add a limit, which will determine the number of records you can retrieve on a single page.\n\nStarts From: 1"
                  },
                  "search": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter segment list by name , giving name as search keyword "
                  },
                  "sort_field": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Sort segment list data based on the following field.\n\nAvailable sort fields: name,active_count "
                  },
                  "sort_order": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Sorting order for sort field\n\nAvailable sort orders\n\nasc, ASC, desc, DESC"
                  }
                },
                "required": [
                  "limit",
                  "page",
                  "search",
                  "sort_field",
                  "sort_order"
                ]
              }
            }
          },
          "required": true,
          "x-examples": {
            "example-1": {
              "limit": 10,
              "page": 1
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "active_count",
                          "id",
                          "list",
                          "name"
                        ],
                        "properties": {
                          "active_count": {
                            "type": "number"
                          },
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "list": {
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "count",
                    "data"
                  ]
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "count": 2,
                      "data": [
                        {
                          "active_count": 8690337,
                          "id": "KyGa",
                          "list": "Default List,Sending list,sending list 2,Auto Test 3,Auto Test 0,Auto Test 1,Auto list New,List bounce,Multy domain,lowww,List10lac1,LIST10lac2,List10lac3,List10lac4,List10Lac6,Fineecho copy paste,List auto test -1,List auto test -2,Vinmail Open,list vinmail,Tb live test-Multydomain,Api test",
                          "name": "Sending list-1"
                        },
                        {
                          "active_count": 8408779,
                          "id": "Kxwf",
                          "list": "Default List,Sending list,sending list 2,Auto Test 3,Auto Test 0,Auto Test 1,Auto list New,List bounce,Multy domain,lowww,List10lac1,LIST10lac2,List10lac3,List10lac4,List10Lac6,Fineecho copy paste,List auto test -1,List auto test -2,Vinmail Open",
                          "name": "ryth"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/client/plan": {
      "get": {
        "summary": "Client  details",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "data": {
                        "email": "user@mailercloud.com",
                        "name": "MailerCloud User",
                        "plan": "Enterprise plan",
                        "remaining_contacts": 943,
                        "total_contacts": 1000,
                        "used_contacts": 57
                      }
                    }
                  },
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Client email"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Client name"
                        },
                        "plan": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Client current plan"
                        },
                        "remaining_contacts": {
                          "type": "number",
                          "description": "Remaining contact for client"
                        },
                        "total_contacts": {
                          "type": "number",
                          "description": "Total contacts for client"
                        },
                        "used_contacts": {
                          "type": "number",
                          "description": "Client used contact count"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-client-plan",
        "parameters": [
          {
            "in": "header",
            "description": "Your Api Key",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "API to get current user details"
      }
    },
    "/webform/search": {
      "post": {
        "summary": "Webform list",
        "operationId": "post-webform-search",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "count": 1,
                      "data": [
                        {
                          "embed_code": "<script charset=\"utf-8\" type=\"text/javascript\" src=\"https://js.mailercloud.com/form/form.js\"><\\/script>\n<script>\n(function() {\n  mcform.create({\n    formId: \"RUV1QDI1NjBAMDAwMDAwMA==\",\n    targetElement: \"form_element_id\"\n  })\n})();\n<\\/script>",
                          "id": "EEu",
                          "last_updated": "2021-08-25 20:48:29",
                          "linked_list": "weee List-25 Aug 2021 08.48 PM",
                          "name": "weee",
                          "status": "Active",
                          "submission_count": 2,
                          "type": "Embedded form",
                          "view_count": 6
                        }
                      ]
                    }
                  },
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "embed_code": {
                            "type": "string",
                            "minLength": 1
                          },
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "last_updated": {
                            "type": "string",
                            "minLength": 1
                          },
                          "linked_list": {
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "status": {
                            "type": "string",
                            "minLength": 1
                          },
                          "submission_count": {
                            "type": "number"
                          },
                          "type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "view_count": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "value": {
                        "count": 0,
                        "data": [
                          {
                            "embed_code": "string",
                            "id": "string",
                            "last_updated": "string",
                            "linked_list": "string",
                            "name": "string",
                            "status": "string",
                            "submission_count": 0,
                            "type": "string",
                            "view_count": 0
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this API to return an array of all of your webforms. You can filter, search and sort webforms.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Your API key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Content-type",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "limit": 0,
                    "page": 0,
                    "search": "string",
                    "sort_field": "string",
                    "sort_order": "string",
                    "date_from": "string",
                    "date_to": "string",
                    "status": "string"
                  }
                },
                "properties": {
                  "limit": {
                    "type": "number",
                    "description": "Maximum number of elements to return.\n\nMaximum: 100 Minimum: 10"
                  },
                  "page": {
                    "type": "number",
                    "description": "You can retrieve a subset of records starting from the page value you have specified. You can add a limit, which will determine the number of records you can retrieve on a single page.\n\nStarts From: 1"
                  },
                  "search": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter form by name , giving name in search keyword"
                  },
                  "sort_field": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Sort list data based on this field\n\nAvailable sort fields - name, modifiedDate, view_count, submission_count"
                  },
                  "sort_order": {
                    "type": "string",
                    "minLength": 1,
                    "description": "If sort_field is given then sort_order is required\n\nSorting order for sort field\n\nAvailable sort orders - asc, ASC, desc, DESC"
                  },
                  "date_from": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter forms based on modified date."
                  },
                  "date_to": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter forms based on modified date."
                  },
                  "status": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Filter forms based on status. Set status to Active to get forms with embed code.\n\nAvailable status â€“ Active, Inactive, Draft, Duplicate"
                  }
                },
                "required": [
                  "limit",
                  "page"
                ]
              }
            }
          },
          "x-examples": {
            "example-1": {
              "value": {
                "limit": 0,
                "page": 0,
                "search": "string",
                "sort_field": "string",
                "sort_order": "string",
                "date_from": "string",
                "date_to": "string",
                "status": "string"
              }
            }
          }
        },
        "tags": [
          "Webform"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://cloudapi.mailercloud.com/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "Authorization": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "description": "Your Api Key"
      }
    }
  }
}